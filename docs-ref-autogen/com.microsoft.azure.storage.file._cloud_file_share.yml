### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.file._cloud_file_share
  id: _cloud_file_share
  parent: com.microsoft.azure.storage.file
  children:
  - com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final StorageUri)
  - com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final StorageUri,final StorageCredentials)
  - com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final String,final CloudFileClient)
  - com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final URI)
  - com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final URI,final StorageCredentials)
  - com.microsoft.azure.storage.file._cloud_file_share.create()
  - com.microsoft.azure.storage.file._cloud_file_share.create(FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.createIfNotExists()
  - com.microsoft.azure.storage.file._cloud_file_share.createIfNotExists(FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.delete()
  - com.microsoft.azure.storage.file._cloud_file_share.delete(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.delete(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists()
  - com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes()
  - com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.downloadPermissions()
  - com.microsoft.azure.storage.file._cloud_file_share.downloadPermissions(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.exists()
  - com.microsoft.azure.storage.file._cloud_file_share.exists(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  - com.microsoft.azure.storage.file._cloud_file_share.generateSharedAccessSignature(final SharedAccessFilePolicy,final String,final IPRange,final SharedAccessProtocols)
  - com.microsoft.azure.storage.file._cloud_file_share.getMetadata()
  - com.microsoft.azure.storage.file._cloud_file_share.getName()
  - com.microsoft.azure.storage.file._cloud_file_share.getProperties()
  - com.microsoft.azure.storage.file._cloud_file_share.getRootDirectoryReference()
  - com.microsoft.azure.storage.file._cloud_file_share.getServiceClient()
  - com.microsoft.azure.storage.file._cloud_file_share.getStats()
  - com.microsoft.azure.storage.file._cloud_file_share.getStats(FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.getStorageUri()
  - com.microsoft.azure.storage.file._cloud_file_share.getUri()
  - com.microsoft.azure.storage.file._cloud_file_share.setMetadata(final HashMap<String, String>)
  - com.microsoft.azure.storage.file._cloud_file_share.setProperties(final FileShareProperties)
  - com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata()
  - com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.uploadPermissions(final FileSharePermissions)
  - com.microsoft.azure.storage.file._cloud_file_share.uploadPermissions(final FileSharePermissions,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_share.uploadProperties()
  - com.microsoft.azure.storage.file._cloud_file_share.uploadProperties(AccessCondition,FileRequestOptions,OperationContext)
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: CloudFileShare
  nameWithType: CloudFileShare
  fullName: com.microsoft.azure.storage.file.CloudFileShare
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 59
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Represents a share in the Microsoft Azure File service. </p>

    <p>Shares hold directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> objects, and directories hold files. Directories can also contain sub-directories. </p>
  syntax: &o1
    content: public class CloudFileShare
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final StorageUri)
  id: CloudFileShare(final StorageUri)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: CloudFileShare(final StorageUri storageUri)
  nameWithType: CloudFileShare.CloudFileShare(final StorageUri storageUri)
  fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final StorageUri storageUri)
  overload: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 146
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified URI.</p>

    <p></p>
  syntax:
    content: public CloudFileShare(final StorageUri storageUri)
    parameters:
    - id: storageUri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> object which represents the absolute URI of the share.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final StorageUri,final StorageCredentials)
  id: CloudFileShare(final StorageUri,final StorageCredentials)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: CloudFileShare(final StorageUri storageUri, final StorageCredentials credentials)
  nameWithType: CloudFileShare.CloudFileShare(final StorageUri storageUri, final StorageCredentials credentials)
  fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final StorageUri storageUri, final StorageCredentials credentials)
  overload: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 177
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> and credentials.</p>

    <p></p>
  syntax:
    content: public CloudFileShare(final StorageUri storageUri, final StorageCredentials credentials)
    parameters:
    - id: storageUri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> object which represents the absolute <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> of the share. </p>
    - id: credentials
      type: 93de0ef9com.microsoft.azure.storage._storage_credentials
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_credentials" data-throw-if-not-resolved="false">StorageCredentials</xref> object used to authenticate access. </p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final String,final CloudFileClient)
  id: CloudFileShare(final String,final CloudFileClient)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: CloudFileShare(final String shareName, final CloudFileClient client)
  nameWithType: CloudFileShare.CloudFileShare(final String shareName, final CloudFileClient client)
  fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final String shareName, final CloudFileClient client)
  overload: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 113
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified name and client.</p>

    <p></p>
  syntax:
    content: protected CloudFileShare(final String shareName, final CloudFileClient client)
    parameters:
    - id: shareName
      type: 3d93591e
      description: <p>A <code>String</code> which represents the name of the share, which must adhere to share naming rules. The share name should not include any path separator characters (/). Share names must be lowercase, between 3-63 characters long and must start with a letter or number. Share names may contain only letters, numbers, and the dash (-) character. </p>
    - id: client
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_client
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref> object that represents the associated service client, and that specifies the endpoint for the File service.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI constructed based on the shareName is invalid.</p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final URI)
  id: CloudFileShare(final URI)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: CloudFileShare(final URI uri)
  nameWithType: CloudFileShare.CloudFileShare(final URI uri)
  fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final URI uri)
  overload: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 133
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified URI.</p>

    <p></p>
  syntax:
    content: public CloudFileShare(final URI uri)
    parameters:
    - id: uri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the absolute URI of the share.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare(final URI,final StorageCredentials)
  id: CloudFileShare(final URI,final StorageCredentials)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: CloudFileShare(final URI uri, final StorageCredentials credentials)
  nameWithType: CloudFileShare.CloudFileShare(final URI uri, final StorageCredentials credentials)
  fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(final URI uri, final StorageCredentials credentials)
  overload: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 161
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified URI and credentials.</p>

    <p></p>
  syntax:
    content: public CloudFileShare(final URI uri, final StorageCredentials credentials)
    parameters:
    - id: uri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the absolute URI of the share. </p>
    - id: credentials
      type: 93de0ef9com.microsoft.azure.storage._storage_credentials
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_credentials" data-throw-if-not-resolved="false">StorageCredentials</xref> object used to authenticate access.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.create()
  id: create()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: create()
  nameWithType: CloudFileShare.create()
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.create()
  overload: com.microsoft.azure.storage.file._cloud_file_share.create*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 197
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates the share.</p>

    <p></p>
  syntax:
    content: public void create()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.create(FileRequestOptions,OperationContext)
  id: create(FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: create(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.create(FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.create(FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.create*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 217
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates the share using the specified options and operation context.</p>

    <p></p>
  syntax:
    content: public void create(FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.createIfNotExists()
  id: createIfNotExists()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: createIfNotExists()
  nameWithType: CloudFileShare.createIfNotExists()
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists()
  overload: com.microsoft.azure.storage.file._cloud_file_share.createIfNotExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 290
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates the share if it does not exist.</p>

    <p></p>
  syntax:
    content: public boolean createIfNotExists()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the share did not already exist and was created; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.createIfNotExists(FileRequestOptions,OperationContext)
  id: createIfNotExists(FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: createIfNotExists(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.createIfNotExists(FileRequestOptions options, OperationContext opContext)
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists(FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.createIfNotExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 312
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates the share if it does not exist, using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public boolean createIfNotExists(FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the share did not already exist and was created; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.delete()
  id: delete()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: delete()
  nameWithType: CloudFileShare.delete()
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.delete()
  overload: com.microsoft.azure.storage.file._cloud_file_share.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 343
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the share.</p>

    <p></p>
  syntax:
    content: public void delete()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.delete(AccessCondition,FileRequestOptions,OperationContext)
  id: delete(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 365
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the share using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public void delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.delete(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
  id: delete(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 395
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the share using the specified snapshot and request options, and operation context. </p>

    <p>A share that has snapshots cannot be deleted unless the snapshots are also deleted. If a share has snapshots, use the <xref uid="com.microsoft.azure.storage.file._delete_share_snapshots_option.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false">DeleteShareSnapshotsOption#INCLUDE_SNAPSHOTS</xref> value in the  parameter to include the snapshots when deleting the base share.</p>

    <p></p>
  syntax:
    content: protected void delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: deleteSnapshotsOption
      type: com.microsoft.azure.storage.file._delete_share_snapshots_option
      description: <p>A <xref uid="com.microsoft.azure.storage.file._delete_share_snapshots_option" data-throw-if-not-resolved="false">DeleteShareSnapshotsOption</xref> object that indicates whether to delete only snapshots, or the share and its snapshots. </p>
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists()
  id: deleteIfExists()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: deleteIfExists()
  nameWithType: CloudFileShare.deleteIfExists()
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists()
  overload: com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 450
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the share if it exists.</p>

    <p></p>
  syntax:
    content: public boolean deleteIfExists()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the share existed and was deleted; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
  id: deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 475
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the share if it exists using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public boolean deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the share existed and was deleted; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
  id: deleteIfExists(DeleteShareSnapshotsOption,AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 508
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the share if it exists, using the specified snapshot and request options, and operation context. </p>

    <p>A share that has snapshots cannot be deleted unless the snapshots are also deleted. If a share has snapshots, use the <xref uid="com.microsoft.azure.storage.file._delete_share_snapshots_option.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false">DeleteShareSnapshotsOption#INCLUDE_SNAPSHOTS</xref> value in the  parameter to include the snapshots when deleting the base share.</p>

    <p></p>
  syntax:
    content: protected boolean deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: deleteSnapshotsOption
      type: com.microsoft.azure.storage.file._delete_share_snapshots_option
      description: <p>A <xref uid="com.microsoft.azure.storage.file._delete_share_snapshots_option" data-throw-if-not-resolved="false">DeleteShareSnapshotsOption</xref> object that indicates whether to delete only snapshots, or the share and its snapshots. </p>
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the share existed and was deleted; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes()
  id: downloadAttributes()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: downloadAttributes()
  nameWithType: CloudFileShare.downloadAttributes()
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()
  overload: com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 540
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the share's attributes, which consist of metadata and properties.</p>

    <p></p>
  syntax: &o2
    content: public void downloadAttributes()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
  id: downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 563
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the share's attributes, which consist of metadata and properties, using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public void downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.downloadPermissions()
  id: downloadPermissions()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: downloadPermissions()
  nameWithType: CloudFileShare.downloadPermissions()
  fullName: FileSharePermissions com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions()
  overload: com.microsoft.azure.storage.file._cloud_file_share.downloadPermissions*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 628
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the permission settings for the share.</p>

    <p></p>
  syntax:
    content: public FileSharePermissions downloadPermissions()
    return:
      type: com.microsoft.azure.storage.file._file_share_permissions
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_share_permissions" data-throw-if-not-resolved="false">FileSharePermissions</xref> object that represents the share's permissions.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.downloadPermissions(AccessCondition,FileRequestOptions,OperationContext)
  id: downloadPermissions(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: FileSharePermissions com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.downloadPermissions*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 652
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the permissions settings for the share using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public FileSharePermissions downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage.file._file_share_permissions
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_share_permissions" data-throw-if-not-resolved="false">FileSharePermissions</xref> object that represents the share's permissions.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.exists()
  id: exists()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: exists()
  nameWithType: CloudFileShare.exists()
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.exists()
  overload: com.microsoft.azure.storage.file._cloud_file_share.exists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 947
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a value that indicates whether the share exists.</p>

    <p></p>
  syntax:
    content: public boolean exists()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the share exists, otherwise <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.exists(final AccessCondition,FileRequestOptions,OperationContext)
  id: exists(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.exists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 972
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a value that indicates whether the share exists, using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public boolean exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the share exists, otherwise <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  id: generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  nameWithType: CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  fullName: String com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  overload: com.microsoft.azure.storage.file._cloud_file_share.generateSharedAccessSignature*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1084
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Asserts that the share is not a snapshot. Returns a shared access signature for the share. Note this does not contain the leading "?".</p>

    <p></p>
  syntax:
    content: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
    parameters:
    - id: policy
      type: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_policy
      description: <p>An <xref uid="com.microsoft.azure.storage.file._shared_access_file_policy" data-throw-if-not-resolved="false">SharedAccessFilePolicy</xref> object that represents the access policy for the shared access signature. </p>
    - id: groupPolicyIdentifier
      type: 3d93591e
      description: <p>A <code>String</code> which represents the share-level access policy.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents a shared access signature for the share.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: e333ca4f
    description: <p>If the key is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.generateSharedAccessSignature(final SharedAccessFilePolicy,final String,final IPRange,final SharedAccessProtocols)
  id: generateSharedAccessSignature(final SharedAccessFilePolicy,final String,final IPRange,final SharedAccessProtocols)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  fullName: String com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  overload: com.microsoft.azure.storage.file._cloud_file_share.generateSharedAccessSignature*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1110
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a shared access signature for the share. Note this does not contain the leading "?".</p>

    <p></p>
  syntax:
    content: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
    parameters:
    - id: policy
      type: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_policy
      description: <p>An <xref uid="com.microsoft.azure.storage.file._shared_access_file_policy" data-throw-if-not-resolved="false">SharedAccessFilePolicy</xref> object that represents the access policy for the shared access signature. </p>
    - id: groupPolicyIdentifier
      type: 3d93591e
      description: <p>A <code>String</code> which represents the share-level access policy. </p>
    - id: ipRange
      type: 93de0ef9com.microsoft.azure.storage._i_p_range
      description: <p>A <xref uid="com.microsoft.azure.storage._i_p_range" data-throw-if-not-resolved="false">IPRange</xref> object containing the range of allowed IP addresses. </p>
    - id: protocols
      type: 93de0ef9com.microsoft.azure.storage._shared_access_protocols
      description: <p>A <xref uid="com.microsoft.azure.storage._shared_access_protocols" data-throw-if-not-resolved="false">SharedAccessProtocols</xref> representing the allowed Internet protocols.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents a shared access signature for the share.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: e333ca4f
    description: <p>If the key is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getMetadata()
  id: getMetadata()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getMetadata()
  nameWithType: CloudFileShare.getMetadata()
  fullName: HashMap<String, String> com.microsoft.azure.storage.file.CloudFileShare.getMetadata()
  overload: com.microsoft.azure.storage.file._cloud_file_share.getMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1559
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the metadata for the share. This value is initialized with the metadata from the share by a call to <xref uid="com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes()" data-throw-if-not-resolved="false">downloadAttributes</xref>, and is set on the share with a call to <xref uid="com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata()" data-throw-if-not-resolved="false">uploadMetadata</xref>.</p>

    <p></p>
  syntax:
    content: public HashMap<String, String> getMetadata()
    return:
      type: 3970a053
      description: <p>A <code>java.util.HashMap</code> object that represents the metadata for the share. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getName()
  id: getName()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getName()
  nameWithType: CloudFileShare.getName()
  fullName: String com.microsoft.azure.storage.file.CloudFileShare.getName()
  overload: com.microsoft.azure.storage.file._cloud_file_share.getName*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1549
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the snapshot or shared access signature qualified URI for this share.</p>

    <p></p>
  syntax:
    content: public String getName()
    return:
      type: "26831127"
      description: <p>A <code>java.net.URI</code> object that represents the snapshot or shared access signature.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. Returns the name of the share.</p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getProperties()
  id: getProperties()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getProperties()
  nameWithType: CloudFileShare.getProperties()
  fullName: FileShareProperties com.microsoft.azure.storage.file.CloudFileShare.getProperties()
  overload: com.microsoft.azure.storage.file._cloud_file_share.getProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1568
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the properties for the share.</p>

    <p></p>
  syntax:
    content: public FileShareProperties getProperties()
    return:
      type: com.microsoft.azure.storage.file._file_share_properties
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_share_properties" data-throw-if-not-resolved="false">FileShareProperties</xref> object that represents the properties for the share. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getRootDirectoryReference()
  id: getRootDirectoryReference()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getRootDirectoryReference()
  nameWithType: CloudFileShare.getRootDirectoryReference()
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference()
  overload: com.microsoft.azure.storage.file._cloud_file_share.getRootDirectoryReference*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1430
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> object that represents the root file directory within this share.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory getRootDirectoryReference()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_directory
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> reference to the root directory for this share. </p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
  - type: "44102508"
- uid: com.microsoft.azure.storage.file._cloud_file_share.getServiceClient()
  id: getServiceClient()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getServiceClient()
  nameWithType: CloudFileShare.getServiceClient()
  fullName: CloudFileClient com.microsoft.azure.storage.file.CloudFileShare.getServiceClient()
  overload: com.microsoft.azure.storage.file._cloud_file_share.getServiceClient*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1484
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the File service client associated with this share.</p>

    <p></p>
  syntax:
    content: public CloudFileClient getServiceClient()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_client
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref> object that represents the service client associated with this share. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getStats()
  id: getStats()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getStats()
  nameWithType: CloudFileShare.getStats()
  fullName: ShareStats com.microsoft.azure.storage.file.CloudFileShare.getStats()
  overload: com.microsoft.azure.storage.file._cloud_file_share.getStats*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 858
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates a snapshot of the share.</p>

    <p></p>
  syntax:
    content: public ShareStats getStats()
    return:
      type: com.microsoft.azure.storage.file._share_stats
      description: <p>A <code><xref uid="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false">CloudFileShare</xref></code> object that represents the snapshot of the share.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. Creates a snapshot of the file share using the specified request options and operation context.</p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. Creates a snapshot of the file share using the specified request options and operation context.</p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. Queries the service for this share's <xref uid="com.microsoft.azure.storage.file._share_stats" data-throw-if-not-resolved="false">ShareStats</xref>.</p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getStats(FileRequestOptions,OperationContext)
  id: getStats(FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getStats(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.getStats(FileRequestOptions options, OperationContext opContext)
  fullName: ShareStats com.microsoft.azure.storage.file.CloudFileShare.getStats(FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.getStats*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 880
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Queries the service for this share's <xref uid="com.microsoft.azure.storage.file._share_stats" data-throw-if-not-resolved="false">ShareStats</xref>.</p>

    <p></p>
  syntax:
    content: public ShareStats getStats(FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage.file._share_stats
      description: <p>A <xref uid="com.microsoft.azure.storage.file._share_stats" data-throw-if-not-resolved="false">ShareStats</xref> object for the given storage service.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getStorageUri()
  id: getStorageUri()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getStorageUri()
  nameWithType: CloudFileShare.getStorageUri()
  fullName: StorageUri com.microsoft.azure.storage.file.CloudFileShare.getStorageUri()
  overload: com.microsoft.azure.storage.file._cloud_file_share.getStorageUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1522
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the snapshotID for this share.</p>

    <p></p>
  syntax:
    content: public StorageUri getStorageUri()
    return:
      type: com.microsoft.azure.storage._storage_uri
      description: <p>The snapshotID as a string for this share. Indicates whether this share is a snapshot.</p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getUri()
  id: getUri()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: getUri()
  nameWithType: CloudFileShare.getUri()
  fullName: URI com.microsoft.azure.storage.file.CloudFileShare.getUri()
  overload: com.microsoft.azure.storage.file._cloud_file_share.getUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1493
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the URI for this share.</p>

    <p></p>
  syntax:
    content: public URI getUri()
    return:
      type: "62304784"
      description: <p>The absolute URI to the share. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.setMetadata(final HashMap<String, String>)
  id: setMetadata(final HashMap<String, String>)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: setMetadata(final HashMap<String, String> metadata)
  nameWithType: CloudFileShare.setMetadata(final HashMap<String, String> metadata)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.setMetadata(final HashMap<String, String> metadata)
  overload: com.microsoft.azure.storage.file._cloud_file_share.setMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1580
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the metadata collection of name-value pairs to be set on the share with an <xref uid="com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata()" data-throw-if-not-resolved="false">uploadMetadata</xref> call. This collection will overwrite any existing share metadata. If this is set to an empty collection, the share metadata will be cleared on an <xref uid="com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata()" data-throw-if-not-resolved="false">uploadMetadata</xref> call.</p>

    <p></p>
  syntax:
    content: public void setMetadata(final HashMap<String, String> metadata)
    parameters:
    - id: metadata
      type: 496ce5ae
      description: <p>A <code>java.util.HashMap</code> object that represents the metadata being assigned to the share. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.setProperties(final FileShareProperties)
  id: setProperties(final FileShareProperties)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: setProperties(final FileShareProperties properties)
  nameWithType: CloudFileShare.setProperties(final FileShareProperties properties)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.setProperties(final FileShareProperties properties)
  overload: com.microsoft.azure.storage.file._cloud_file_share.setProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1591
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the properties for the share.</p>

    <p></p>
  syntax:
    content: protected void setProperties(final FileShareProperties properties)
    parameters:
    - id: properties
      type: 93de0ef9com.microsoft.azure.storage.file._file_share_properties
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_share_properties" data-throw-if-not-resolved="false">FileShareProperties</xref> object that represents the properties being assigned to the share. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata()
  id: uploadMetadata()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: uploadMetadata()
  nameWithType: CloudFileShare.uploadMetadata()
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()
  overload: com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1151
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the share's metadata.</p>

    <p></p>
  syntax: &o3
    content: public void uploadMetadata()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
  id: uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1173
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the share's metadata using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public void uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadPermissions(final FileSharePermissions)
  id: uploadPermissions(final FileSharePermissions)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: uploadPermissions(final FileSharePermissions permissions)
  nameWithType: CloudFileShare.uploadPermissions(final FileSharePermissions permissions)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(final FileSharePermissions permissions)
  overload: com.microsoft.azure.storage.file._cloud_file_share.uploadPermissions*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1326
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the share's permissions.</p>

    <p></p>
  syntax:
    content: public void uploadPermissions(final FileSharePermissions permissions)
    parameters:
    - id: permissions
      type: 93de0ef9com.microsoft.azure.storage.file._file_share_permissions
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_share_permissions" data-throw-if-not-resolved="false">FileSharePermissions</xref> object that represents the permissions to upload.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadPermissions(final FileSharePermissions,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadPermissions(final FileSharePermissions,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: uploadPermissions(final FileSharePermissions permissions, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.uploadPermissions(final FileSharePermissions permissions, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(final FileSharePermissions permissions, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.uploadPermissions*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1350
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the share's permissions using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public void uploadPermissions(final FileSharePermissions permissions, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: permissions
      type: 93de0ef9com.microsoft.azure.storage.file._file_share_permissions
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_share_permissions" data-throw-if-not-resolved="false">FileSharePermissions</xref> object that represents the permissions to upload. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadProperties()
  id: uploadProperties()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: uploadProperties()
  nameWithType: CloudFileShare.uploadProperties()
  fullName: final void com.microsoft.azure.storage.file.CloudFileShare.uploadProperties()
  overload: com.microsoft.azure.storage.file._cloud_file_share.uploadProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1237
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Updates the share's properties on the storage service. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes()" data-throw-if-not-resolved="false">CloudFileShare#downloadAttributes</xref> to retrieve the latest values for the share's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax:
    content: public final void uploadProperties()
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadProperties(AccessCondition,FileRequestOptions,OperationContext)
  id: uploadProperties(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  langs:
  - java
  name: uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileShare.uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final void com.microsoft.azure.storage.file.CloudFileShare.uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_share.uploadProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileShare.java
    startLine: 1262
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Updates the share's properties using the request options, and operation context. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes()" data-throw-if-not-resolved="false">CloudFileShare#downloadAttributes</xref> to retrieve the latest values for the share's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax:
    content: public final void uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
references:
- uid: "44102508"
  spec.java:
  - name: URISyntaxException
    fullName: URISyntaxException
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file_client
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._cloud_file_client
    name: CloudFileClient
    fullName: com.microsoft.azure.storage.file.CloudFileClient
    href: com.microsoft.azure.storage.file._cloud_file_client.yml
- uid: com.microsoft.azure.storage.file._cloud_file_share.CloudFileShare*
  name: CloudFileShare
  nameWithType: CloudFileShare.CloudFileShare
  fullName: com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.delete*
  name: delete
  nameWithType: CloudFileShare.delete
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.delete
  package: com.microsoft.azure.storage.file
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.storage.file._cloud_file_share.deleteIfExists*
  name: deleteIfExists
  nameWithType: CloudFileShare.deleteIfExists
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._file_share_properties
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._file_share_properties
    name: FileShareProperties
    fullName: com.microsoft.azure.storage.file.FileShareProperties
    href: com.microsoft.azure.storage.file._file_share_properties.yml
- uid: com.microsoft.azure.storage.file._cloud_file_share.setProperties*
  name: setProperties
  nameWithType: CloudFileShare.setProperties
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.setProperties
  package: com.microsoft.azure.storage.file
- uid: bac42120
  spec.java:
  - name: final URI
    fullName: final URI
- uid: 93de0ef9com.microsoft.azure.storage._storage_uri
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._storage_uri
    name: StorageUri
    fullName: com.microsoft.azure.storage.StorageUri
    href: com.microsoft.azure.storage._storage_uri.yml
- uid: 93de0ef9com.microsoft.azure.storage._storage_credentials
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._storage_credentials
    name: StorageCredentials
    fullName: com.microsoft.azure.storage.StorageCredentials
    href: com.microsoft.azure.storage._storage_credentials.yml
- uid: com.microsoft.azure.storage.file._cloud_file_share.create*
  name: create
  nameWithType: CloudFileShare.create
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.create
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.createIfNotExists*
  name: createIfNotExists
  nameWithType: CloudFileShare.createIfNotExists
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes*
  name: downloadAttributes
  nameWithType: CloudFileShare.downloadAttributes
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.downloadPermissions*
  name: downloadPermissions
  nameWithType: CloudFileShare.downloadPermissions
  fullName: FileSharePermissions com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.getStats*
  name: getStats
  nameWithType: CloudFileShare.getStats
  fullName: ShareStats com.microsoft.azure.storage.file.CloudFileShare.getStats
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.exists*
  name: exists
  nameWithType: CloudFileShare.exists
  fullName: boolean com.microsoft.azure.storage.file.CloudFileShare.exists
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage._access_condition
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._access_condition
    name: AccessCondition
    fullName: com.microsoft.azure.storage.AccessCondition
    href: com.microsoft.azure.storage._access_condition.yml
- uid: e333ca4f
  spec.java:
  - name: InvalidKeyException
    fullName: InvalidKeyException
- uid: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_policy
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._shared_access_file_policy
    name: SharedAccessFilePolicy
    fullName: com.microsoft.azure.storage.file.SharedAccessFilePolicy
    href: com.microsoft.azure.storage.file._shared_access_file_policy.yml
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.file._cloud_file_share.generateSharedAccessSignature*
  name: generateSharedAccessSignature
  nameWithType: CloudFileShare.generateSharedAccessSignature
  fullName: String com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage._i_p_range
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._i_p_range
    name: IPRange
    fullName: com.microsoft.azure.storage.IPRange
    href: com.microsoft.azure.storage._i_p_range.yml
- uid: 93de0ef9com.microsoft.azure.storage._shared_access_protocols
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._shared_access_protocols
    name: SharedAccessProtocols
    fullName: com.microsoft.azure.storage.SharedAccessProtocols
    href: com.microsoft.azure.storage._shared_access_protocols.yml
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata*
  name: uploadMetadata
  nameWithType: CloudFileShare.uploadMetadata
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata
  package: com.microsoft.azure.storage.file
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadProperties*
  name: uploadProperties
  nameWithType: CloudFileShare.uploadProperties
  fullName: final void com.microsoft.azure.storage.file.CloudFileShare.uploadProperties
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._file_share_permissions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._file_share_permissions
    name: FileSharePermissions
    fullName: com.microsoft.azure.storage.file.FileSharePermissions
    href: com.microsoft.azure.storage.file._file_share_permissions.yml
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadPermissions*
  name: uploadPermissions
  nameWithType: CloudFileShare.uploadPermissions
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.getRootDirectoryReference*
  name: getRootDirectoryReference
  nameWithType: CloudFileShare.getRootDirectoryReference
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.getServiceClient*
  name: getServiceClient
  nameWithType: CloudFileShare.getServiceClient
  fullName: CloudFileClient com.microsoft.azure.storage.file.CloudFileShare.getServiceClient
  package: com.microsoft.azure.storage.file
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: com.microsoft.azure.storage.file._cloud_file_share.getUri*
  name: getUri
  nameWithType: CloudFileShare.getUri
  fullName: URI com.microsoft.azure.storage.file.CloudFileShare.getUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.getStorageUri*
  name: getStorageUri
  nameWithType: CloudFileShare.getStorageUri
  fullName: StorageUri com.microsoft.azure.storage.file.CloudFileShare.getStorageUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.getName*
  name: getName
  nameWithType: CloudFileShare.getName
  fullName: String com.microsoft.azure.storage.file.CloudFileShare.getName
  package: com.microsoft.azure.storage.file
- uid: 3970a053
  spec.java:
  - name: HashMap<String, String>
    fullName: HashMap<String, String>
- uid: com.microsoft.azure.storage.file._cloud_file_share.getMetadata*
  name: getMetadata
  nameWithType: CloudFileShare.getMetadata
  fullName: HashMap<String, String> com.microsoft.azure.storage.file.CloudFileShare.getMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_share.getProperties*
  name: getProperties
  nameWithType: CloudFileShare.getProperties
  fullName: FileShareProperties com.microsoft.azure.storage.file.CloudFileShare.getProperties
  package: com.microsoft.azure.storage.file
- uid: 496ce5ae
  spec.java:
  - name: final HashMap<String, String>
    fullName: final HashMap<String, String>
- uid: com.microsoft.azure.storage.file._cloud_file_share.setMetadata*
  name: setMetadata
  nameWithType: CloudFileShare.setMetadata
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.setMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage._storage_uri
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_uri.yml
  name: StorageUri
  nameWithType: StorageUri
  fullName: com.microsoft.azure.storage.StorageUri
  type: Class
  summary: <p>Holds a list of URIs that represents the storage resource. </p>
  syntax:
    content: public class StorageUri
- uid: com.microsoft.azure.storage.file._cloud_file_client
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_client.yml
  name: CloudFileClient
  nameWithType: CloudFileClient
  fullName: com.microsoft.azure.storage.file.CloudFileClient
  type: Class
  summary: >-
    <p>Provides a client for accessing the Microsoft Azure File service. </p>

    <p>This class provides a point of access to the File service. The service client encapsulates the base URI for the File service. It also encapsulates the credentials for accessing the storage account. </p>
  syntax:
    content: public class CloudFileClient extends ServiceClient
- uid: com.microsoft.azure.storage.file._file_share_properties
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_share_properties.yml
  name: FileShareProperties
  nameWithType: FileShareProperties
  fullName: com.microsoft.azure.storage.file.FileShareProperties
  type: Class
  summary: <p>Represents the system properties for a share. </p>
  syntax:
    content: public class FileShareProperties
- uid: com.microsoft.azure.storage._storage_exception
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_exception.yml
  name: StorageException
  nameWithType: StorageException
  fullName: com.microsoft.azure.storage.StorageException
  type: Class
  summary: <p>Represents an exception for the Microsoft Azure storage service. </p>
  syntax:
    content: public class StorageException
- uid: com.microsoft.azure.storage.file._cloud_file_share
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  name: CloudFileShare
  nameWithType: CloudFileShare
  fullName: com.microsoft.azure.storage.file.CloudFileShare
  type: Class
  summary: >-
    <p>Represents a share in the Microsoft Azure File service. </p>

    <p>Shares hold directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> objects, and directories hold files. Directories can also contain sub-directories. </p>
  syntax: *o1
- uid: com.microsoft.azure.storage.file._delete_share_snapshots_option
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._delete_share_snapshots_option.yml
  name: DeleteShareSnapshotsOption
  nameWithType: DeleteShareSnapshotsOption
  fullName: com.microsoft.azure.storage.file.DeleteShareSnapshotsOption
  type: Enum
  summary: <p>Specifies options when calling the delete share operation. </p>
  syntax:
    content: public enum DeleteShareSnapshotsOption
- uid: com.microsoft.azure.storage._access_condition
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._access_condition.yml
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: com.microsoft.azure.storage.AccessCondition
  type: Class
  summary: <p>Represents a set of access conditions to be used for operations against the storage services. </p>
  syntax:
    content: public class AccessCondition
- uid: com.microsoft.azure.storage.file._file_request_options
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_request_options.yml
  name: FileRequestOptions
  nameWithType: FileRequestOptions
  fullName: com.microsoft.azure.storage.file.FileRequestOptions
  type: Class
  summary: <p>Represents a set of options that may be specified on a request. </p>
  syntax:
    content: public class FileRequestOptions
- uid: com.microsoft.azure.storage._operation_context
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._operation_context.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: <p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage.file._delete_share_snapshots_option.INCLUDE_SNAPSHOTS
  parent: com.microsoft.azure.storage.file._delete_share_snapshots_option
  href: com.microsoft.azure.storage.file._delete_share_snapshots_option.yml
  name: INCLUDE_SNAPSHOTS
  nameWithType: DeleteShareSnapshotsOption.INCLUDE_SNAPSHOTS
  fullName: com.microsoft.azure.storage.file.DeleteShareSnapshotsOption.INCLUDE_SNAPSHOTS
  type: Field
  summary: <p>Specifies deleting the blob and its snapshots. </p>
  syntax:
    content: public INCLUDE_SNAPSHOTS
- uid: com.microsoft.azure.storage._storage_credentials
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_credentials.yml
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: com.microsoft.azure.storage.StorageCredentials
  type: Class
  summary: <p>Represents a set of credentials used to authenticate access to a Microsoft Azure storage account. This is the base class for the <xref uid="com.microsoft.azure.storage._storage_credentials_account_and_key" data-throw-if-not-resolved="false">StorageCredentialsAccountAndKey</xref> and <xref uid="com.microsoft.azure.storage._storage_credentials_shared_access_signature" data-throw-if-not-resolved="false">StorageCredentialsSharedAccessSignature</xref> classes. </p>
  syntax:
    content: public class StorageCredentials
- uid: com.microsoft.azure.storage.file._file_share_permissions
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_share_permissions.yml
  name: FileSharePermissions
  nameWithType: FileSharePermissions
  fullName: com.microsoft.azure.storage.file.FileSharePermissions
  type: Class
  summary: >-
    <p>Represents the permissions for a share. </p>

    <p>The share's permissions encompass its access policies, represented by the <xref uid="com.microsoft.azure.storage._permissions.getSharedAccessPolicies()" data-throw-if-not-resolved="false">getSharedAccessPolicies</xref> method. This setting references a collection of shared access policies for the share. A shared access policy may be used to control the start time, expiry time, and permissions for one or more shared access signatures. A shared access signature provides delegated access to the share's resources. For more information on managing share permissions, see <ulink url="http://go.microsoft.com/fwlink/?LinkID=224643">Managing Access to Shares and Files</ulink>. </p>
  syntax:
    content: public class FileSharePermissions
- uid: com.microsoft.azure.storage.file._share_stats
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._share_stats.yml
  name: ShareStats
  nameWithType: ShareStats
  fullName: com.microsoft.azure.storage.file.ShareStats
  type: Class
  summary: <p>Class representing a set of statistics pertaining to a cloud file share. </p>
  syntax:
    content: public class ShareStats
- uid: com.microsoft.azure.storage.file._shared_access_file_policy
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._shared_access_file_policy.yml
  name: SharedAccessFilePolicy
  nameWithType: SharedAccessFilePolicy
  fullName: com.microsoft.azure.storage.file.SharedAccessFilePolicy
  type: Class
  summary: <p>Represents a shared access policy, which specifies the start time, expiry time, and permissions for a shared access signature. </p>
  syntax:
    content: public class SharedAccessFilePolicy
- uid: com.microsoft.azure.storage._i_p_range
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._i_p_range.yml
  name: IPRange
  nameWithType: IPRange
  fullName: com.microsoft.azure.storage.IPRange
  type: Class
  summary: <p>A continuous range of IP addresses. </p>
  syntax:
    content: public class IPRange
- uid: com.microsoft.azure.storage._shared_access_protocols
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._shared_access_protocols.yml
  name: SharedAccessProtocols
  nameWithType: SharedAccessProtocols
  fullName: com.microsoft.azure.storage.SharedAccessProtocols
  type: Enum
  summary: <p>Specifies the set of possible permissions for a shared access protocol. </p>
  syntax:
    content: public enum SharedAccessProtocols
- uid: com.microsoft.azure.storage.file._cloud_file_share.downloadAttributes()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  name: downloadAttributes()
  nameWithType: CloudFileShare.downloadAttributes()
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()
  type: Method
  summary: >-
    <p>Downloads the share's attributes, which consist of metadata and properties.</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.storage.file._cloud_file_directory
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory
  type: Class
  summary: >-
    <p>Represents a virtual directory of files. </p>

    <p>Directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> objects, hold files and can also contain sub-directories. </p>
  syntax:
    content: public class CloudFileDirectory implements ListFileItem
- uid: com.microsoft.azure.storage.file._cloud_file_share.uploadMetadata()
  parent: com.microsoft.azure.storage.file._cloud_file_share
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  name: uploadMetadata()
  nameWithType: CloudFileShare.uploadMetadata()
  fullName: void com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()
  type: Method
  summary: >-
    <p>Uploads the share's metadata.</p>

    <p></p>
  syntax: *o3
- uid: com.microsoft.azure.storage.core._storage_request
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core._storage_request.yml
  name: StorageRequest<C,P,R>
  nameWithType: StorageRequest<C,P,R>
  fullName: com.microsoft.azure.storage.core.StorageRequest<C,P,R>
  type: Class
  summary: >-
    <p>RESERVED FOR INTERNAL USE. A class which encapsulate the execution of a given storage operation.</p>

    <p></p>
  syntax:
    content: public class StorageRequest<C,P,R>
    typeParameters:
    - type: 37f8610d
      description: <p>The service client type </p>
    - type: db9ec244
      description: <p>The type of the parent object, i.e. CloudBlobContainer for downloadAttributes etc. </p>
    - type: d4d3e1e1
      description: <p>The type of the expected result </p>
