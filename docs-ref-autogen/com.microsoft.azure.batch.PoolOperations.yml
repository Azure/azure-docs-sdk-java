### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.PoolOperations
  id: PoolOperations
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch
  children:
  - com.microsoft.azure.batch.PoolOperations.createPool(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  - com.microsoft.azure.batch.PoolOperations.createPool(com.microsoft.azure.batch.protocol.models.PoolAddParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int)
  - com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int,int)
  - com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int,int,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int)
  - com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int,int)
  - com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int,int,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.customBehaviors()
  - com.microsoft.azure.batch.PoolOperations.deletePool(java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.deletePool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.disableAutoScale(java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.disableAutoScale(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.enableAutoScale(java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.enableAutoScale(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.enableAutoScale(java.lang.String,java.lang.String,org.joda.time.Period)
  - com.microsoft.azure.batch.PoolOperations.enableAutoScale(java.lang.String,java.lang.String,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.evaluateAutoScale(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.evaluateAutoScale(java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.existsPool(java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.existsPool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics()
  - com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics(java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.getPool(java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.getPool(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  - com.microsoft.azure.batch.PoolOperations.getPool(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime)
  - com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime,com.microsoft.azure.batch.DetailLevel)
  - com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.listPools()
  - com.microsoft.azure.batch.PoolOperations.listPools(com.microsoft.azure.batch.DetailLevel)
  - com.microsoft.azure.batch.PoolOperations.listPools(com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.patchPool(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.PoolOperations.patchPool(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  - com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  - com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  - com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(java.lang.String,java.util.List<java.lang.String>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.resizePool(java.lang.String,java.lang.Integer,java.lang.Integer)
  - com.microsoft.azure.batch.PoolOperations.resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period)
  - com.microsoft.azure.batch.PoolOperations.resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  - com.microsoft.azure.batch.PoolOperations.resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.stopResizePool(java.lang.String)
  - com.microsoft.azure.batch.PoolOperations.stopResizePool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.updatePoolProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.PoolOperations.updatePoolProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.PoolOperations.withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  langs:
  - java
  name: PoolOperations
  nameWithType: PoolOperations
  fullName: com.microsoft.azure.batch.PoolOperations
  type: Class
  package: com.microsoft.azure.batch
  summary: Performs pool-related operations on an Azure Batch account.
  syntax:
    content: public class PoolOperations implements IInheritedBehaviors
  inheritance:
  - java.lang.Object
  implements:
  - com.microsoft.azure.batch.IInheritedBehaviors
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.PoolOperations.PoolOperations(com.microsoft.azure.batch.BatchClient,java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  id: PoolOperations(com.microsoft.azure.batch.BatchClient,java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: PoolOperations(BatchClient batchClient, Collection<BatchClientBehavior> customBehaviors)
  nameWithType: PoolOperations.PoolOperations(BatchClient batchClient, Collection<BatchClientBehavior> customBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.PoolOperations(BatchClient batchClient, Collection<BatchClientBehavior> customBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.PoolOperations*
  type: Constructor
  package: com.microsoft.azure.batch
  syntax:
    content: " PoolOperations(BatchClient batchClient, Collection<BatchClientBehavior> customBehaviors)"
    parameters:
    - id: batchClient
      type: com.microsoft.azure.batch.BatchClient
    - id: customBehaviors
      type: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
- uid: com.microsoft.azure.batch.PoolOperations.createPool(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  id: createPool(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: createPool(PoolAddParameter pool)
  nameWithType: PoolOperations.createPool(PoolAddParameter pool)
  fullName: com.microsoft.azure.batch.PoolOperations.createPool(PoolAddParameter pool)
  overload: com.microsoft.azure.batch.PoolOperations.createPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a pool to the Batch account.
  syntax:
    content: public void createPool(PoolAddParameter pool)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The pool to be added.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.createPool(com.microsoft.azure.batch.protocol.models.PoolAddParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: createPool(com.microsoft.azure.batch.protocol.models.PoolAddParameter,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: createPool(PoolAddParameter pool, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.createPool(PoolAddParameter pool, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.createPool(PoolAddParameter pool, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.createPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a pool to the Batch account.
  syntax:
    content: public void createPool(PoolAddParameter pool, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The pool to be added.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int)
  id: createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes)
  nameWithType: PoolOperations.createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes)
  fullName: com.microsoft.azure.batch.PoolOperations.createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes)
  overload: com.microsoft.azure.batch.PoolOperations.createPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a pool to the Batch account.
  syntax:
    content: public void createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: virtualMachineSize
      type: java.lang.String
      description: >-
        The size of virtual machines in the pool. See <a href="https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/">https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/</a>
                    for sizes.
    - id: cloudServiceConfiguration
      type: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
      description: The <xref uid="com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration" data-throw-if-not-resolved="false">CloudServiceConfiguration</xref> for the pool.
    - id: targetDedicatedNodes
      type: int
      description: The desired number of dedicated compute nodes in the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int,int)
  id: createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int,int)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes)
  nameWithType: PoolOperations.createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes)
  fullName: com.microsoft.azure.batch.PoolOperations.createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes)
  overload: com.microsoft.azure.batch.PoolOperations.createPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a pool to the Batch account.
  syntax:
    content: public void createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: virtualMachineSize
      type: java.lang.String
      description: >-
        The size of virtual machines in the pool. See <a href="https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/">https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/</a>
                    for sizes.
    - id: cloudServiceConfiguration
      type: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
      description: The <xref uid="com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration" data-throw-if-not-resolved="false">CloudServiceConfiguration</xref> for the pool.
    - id: targetDedicatedNodes
      type: int
      description: The desired number of dedicated compute nodes in the pool.
    - id: targetLowPriorityNodes
      type: int
      description: The desired number of low-priority compute nodes in the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int,int,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration,int,int,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.createPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a pool to the Batch account.
  syntax:
    content: public void createPool(String poolId, String virtualMachineSize, CloudServiceConfiguration cloudServiceConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: virtualMachineSize
      type: java.lang.String
      description: >-
        The size of virtual machines in the pool. See <a href="https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/">https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/</a>
                    for sizes.
    - id: cloudServiceConfiguration
      type: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
      description: The <xref uid="com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration" data-throw-if-not-resolved="false">CloudServiceConfiguration</xref> for the pool.
    - id: targetDedicatedNodes
      type: int
      description: The desired number of dedicated compute nodes in the pool.
    - id: targetLowPriorityNodes
      type: int
      description: The desired number of low-priority compute nodes in the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int)
  id: createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes)
  nameWithType: PoolOperations.createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes)
  fullName: com.microsoft.azure.batch.PoolOperations.createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes)
  overload: com.microsoft.azure.batch.PoolOperations.createPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a pool to the Batch account.
  syntax:
    content: public void createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: virtualMachineSize
      type: java.lang.String
      description: >-
        The size of virtual machines in the pool. See <a href="https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/">https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/</a>
                    for sizes.
    - id: virtualMachineConfiguration
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: The <xref uid="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration" data-throw-if-not-resolved="false">VirtualMachineConfiguration</xref> for the pool.
    - id: targetDedicatedNodes
      type: int
      description: The desired number of dedicated compute nodes in the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int,int)
  id: createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int,int)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes)
  nameWithType: PoolOperations.createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes)
  fullName: com.microsoft.azure.batch.PoolOperations.createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes)
  overload: com.microsoft.azure.batch.PoolOperations.createPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a pool to the Batch account.
  syntax:
    content: public void createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: virtualMachineSize
      type: java.lang.String
      description: >-
        The size of virtual machines in the pool. See <a href="https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/">https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/</a>
                    for sizes.
    - id: virtualMachineConfiguration
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: The <xref uid="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration" data-throw-if-not-resolved="false">VirtualMachineConfiguration</xref> for the pool.
    - id: targetDedicatedNodes
      type: int
      description: The desired number of dedicated compute nodes in the pool.
    - id: targetLowPriorityNodes
      type: int
      description: The desired number of low-priority compute nodes in the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int,int,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: createPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration,int,int,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.createPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Adds a pool to the Batch account.
  syntax:
    content: public void createPool(String poolId, String virtualMachineSize, VirtualMachineConfiguration virtualMachineConfiguration, int targetDedicatedNodes, int targetLowPriorityNodes, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: virtualMachineSize
      type: java.lang.String
      description: >-
        The size of virtual machines in the pool. See <a href="https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/">https://azure.microsoft.com/documentation/articles/virtual-machines-size-specs/</a>
                    for sizes.
    - id: virtualMachineConfiguration
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: The <xref uid="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration" data-throw-if-not-resolved="false">VirtualMachineConfiguration</xref> for the pool.
    - id: targetDedicatedNodes
      type: int
      description: The desired number of dedicated compute nodes in the pool.
    - id: targetLowPriorityNodes
      type: int
      description: The desired number of low-priority compute nodes in the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.customBehaviors()
  id: customBehaviors()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: customBehaviors()
  nameWithType: PoolOperations.customBehaviors()
  fullName: com.microsoft.azure.batch.PoolOperations.customBehaviors()
  overload: com.microsoft.azure.batch.PoolOperations.customBehaviors*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets a collection of behaviors that modify or customize requests to the Batch service.
  syntax:
    content: public Collection<BatchClientBehavior> customBehaviors()
    return:
      type: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances.
- uid: com.microsoft.azure.batch.PoolOperations.deletePool(java.lang.String)
  id: deletePool(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: deletePool(String poolId)
  nameWithType: PoolOperations.deletePool(String poolId)
  fullName: com.microsoft.azure.batch.PoolOperations.deletePool(String poolId)
  overload: com.microsoft.azure.batch.PoolOperations.deletePool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified pool.
  syntax:
    content: public void deletePool(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool to delete.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.deletePool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: deletePool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: deletePool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.deletePool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.deletePool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.deletePool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified pool.
  syntax:
    content: public void deletePool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool to delete.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.disableAutoScale(java.lang.String)
  id: disableAutoScale(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: disableAutoScale(String poolId)
  nameWithType: PoolOperations.disableAutoScale(String poolId)
  fullName: com.microsoft.azure.batch.PoolOperations.disableAutoScale(String poolId)
  overload: com.microsoft.azure.batch.PoolOperations.disableAutoScale*
  type: Method
  package: com.microsoft.azure.batch
  summary: Disables automatic scaling on the specified pool.
  syntax:
    content: public void disableAutoScale(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.disableAutoScale(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: disableAutoScale(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: disableAutoScale(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.disableAutoScale(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.disableAutoScale(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.disableAutoScale*
  type: Method
  package: com.microsoft.azure.batch
  summary: Disables automatic scaling on the specified pool.
  syntax:
    content: public void disableAutoScale(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.enableAutoScale(java.lang.String)
  id: enableAutoScale(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: enableAutoScale(String poolId)
  nameWithType: PoolOperations.enableAutoScale(String poolId)
  fullName: com.microsoft.azure.batch.PoolOperations.enableAutoScale(String poolId)
  overload: com.microsoft.azure.batch.PoolOperations.enableAutoScale*
  type: Method
  package: com.microsoft.azure.batch
  summary: Enables automatic scaling on the specified pool.
  syntax:
    content: public void enableAutoScale(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.enableAutoScale(java.lang.String,java.lang.String)
  id: enableAutoScale(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: enableAutoScale(String poolId, String autoScaleFormula)
  nameWithType: PoolOperations.enableAutoScale(String poolId, String autoScaleFormula)
  fullName: com.microsoft.azure.batch.PoolOperations.enableAutoScale(String poolId, String autoScaleFormula)
  overload: com.microsoft.azure.batch.PoolOperations.enableAutoScale*
  type: Method
  package: com.microsoft.azure.batch
  summary: Enables automatic scaling on the specified pool.
  syntax:
    content: public void enableAutoScale(String poolId, String autoScaleFormula)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of compute nodes in the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.enableAutoScale(java.lang.String,java.lang.String,org.joda.time.Period)
  id: enableAutoScale(java.lang.String,java.lang.String,org.joda.time.Period)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: enableAutoScale(String poolId, String autoScaleFormula, Period autoScaleEvaluationInterval)
  nameWithType: PoolOperations.enableAutoScale(String poolId, String autoScaleFormula, Period autoScaleEvaluationInterval)
  fullName: com.microsoft.azure.batch.PoolOperations.enableAutoScale(String poolId, String autoScaleFormula, Period autoScaleEvaluationInterval)
  overload: com.microsoft.azure.batch.PoolOperations.enableAutoScale*
  type: Method
  package: com.microsoft.azure.batch
  summary: Enables automatic scaling on the specified pool.
  syntax:
    content: public void enableAutoScale(String poolId, String autoScaleFormula, Period autoScaleEvaluationInterval)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of compute nodes in the pool.
    - id: autoScaleEvaluationInterval
      type: org.joda.time.Period
      description: The time interval at which to automatically adjust the pool size.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.enableAutoScale(java.lang.String,java.lang.String,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: enableAutoScale(java.lang.String,java.lang.String,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: enableAutoScale(String poolId, String autoScaleFormula, Period autoScaleEvaluationInterval, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.enableAutoScale(String poolId, String autoScaleFormula, Period autoScaleEvaluationInterval, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.enableAutoScale(String poolId, String autoScaleFormula, Period autoScaleEvaluationInterval, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.enableAutoScale*
  type: Method
  package: com.microsoft.azure.batch
  summary: Enables automatic scaling on the specified pool.
  syntax:
    content: public void enableAutoScale(String poolId, String autoScaleFormula, Period autoScaleEvaluationInterval, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of compute nodes in the pool.
    - id: autoScaleEvaluationInterval
      type: org.joda.time.Period
      description: The time interval at which to automatically adjust the pool size.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.evaluateAutoScale(java.lang.String,java.lang.String)
  id: evaluateAutoScale(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: evaluateAutoScale(String poolId, String autoScaleFormula)
  nameWithType: PoolOperations.evaluateAutoScale(String poolId, String autoScaleFormula)
  fullName: com.microsoft.azure.batch.PoolOperations.evaluateAutoScale(String poolId, String autoScaleFormula)
  overload: com.microsoft.azure.batch.PoolOperations.evaluateAutoScale*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the result of evaluating an automatic scaling formula on the specified pool. This is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool.
  syntax:
    content: public AutoScaleRun evaluateAutoScale(String poolId, String autoScaleFormula)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula to be evaluated on the pool.
    return:
      type: com.microsoft.azure.batch.protocol.models.AutoScaleRun
      description: The result of evaluating the formula on the specified pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.evaluateAutoScale(java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: evaluateAutoScale(java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: evaluateAutoScale(String poolId, String autoScaleFormula, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.evaluateAutoScale(String poolId, String autoScaleFormula, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.evaluateAutoScale(String poolId, String autoScaleFormula, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.evaluateAutoScale*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the result of evaluating an automatic scaling formula on the specified pool. This is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool.
  syntax:
    content: public AutoScaleRun evaluateAutoScale(String poolId, String autoScaleFormula, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula to be evaluated on the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
    return:
      type: com.microsoft.azure.batch.protocol.models.AutoScaleRun
      description: The result of evaluating the formula on the specified pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.existsPool(java.lang.String)
  id: existsPool(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: existsPool(String poolId)
  nameWithType: PoolOperations.existsPool(String poolId)
  fullName: com.microsoft.azure.batch.PoolOperations.existsPool(String poolId)
  overload: com.microsoft.azure.batch.PoolOperations.existsPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Checks whether the specified pool exists.
  syntax:
    content: public boolean existsPool(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    return:
      type: boolean
      description: True if the pool exists; otherwise, false.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.existsPool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: existsPool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: existsPool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.existsPool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.existsPool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.existsPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Checks whether the specified pool exists.
  syntax:
    content: public boolean existsPool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
    return:
      type: boolean
      description: True if the pool exists; otherwise, false.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics()
  id: getAllPoolsLifetimeStatistics()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: getAllPoolsLifetimeStatistics()
  nameWithType: PoolOperations.getAllPoolsLifetimeStatistics()
  fullName: com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics()
  overload: com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets lifetime summary statistics for all of the pools in the current account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
  syntax:
    content: public PoolStatistics getAllPoolsLifetimeStatistics()
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolStatistics
      description: The aggregated pool statistics.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics(java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: getAllPoolsLifetimeStatistics(java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: getAllPoolsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.getAllPoolsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets lifetime summary statistics for all of the pools in the current account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
  syntax:
    content: public PoolStatistics getAllPoolsLifetimeStatistics(Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolStatistics
      description: The aggregated pool statistics.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.getPool(java.lang.String)
  id: getPool(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: getPool(String poolId)
  nameWithType: PoolOperations.getPool(String poolId)
  fullName: com.microsoft.azure.batch.PoolOperations.getPool(String poolId)
  overload: com.microsoft.azure.batch.PoolOperations.getPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the specified <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref>.
  syntax:
    content: public CloudPool getPool(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool to get.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: >-
        A <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref> containing information about the specified Azure
                 Batch pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.getPool(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  id: getPool(java.lang.String,com.microsoft.azure.batch.DetailLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: getPool(String poolId, DetailLevel detailLevel)
  nameWithType: PoolOperations.getPool(String poolId, DetailLevel detailLevel)
  fullName: com.microsoft.azure.batch.PoolOperations.getPool(String poolId, DetailLevel detailLevel)
  overload: com.microsoft.azure.batch.PoolOperations.getPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the specified <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref>.
  syntax:
    content: public CloudPool getPool(String poolId, DetailLevel detailLevel)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool to get.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: >-
        A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for controlling which properties are
                    retrieved from the service.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: >-
        A <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref> containing information about the specified Azure
                 Batch pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.getPool(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: getPool(java.lang.String,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: getPool(String poolId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.getPool(String poolId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.getPool(String poolId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.getPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets the specified <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref>.
  syntax:
    content: public CloudPool getPool(String poolId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool to get.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: >-
        A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for controlling which properties are
                    retrieved from the service.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: >-
        A <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref> containing information about the specified Azure
                 Batch pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime)
  id: listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: listPoolUsageMetrics(DateTime startTime, DateTime endTime)
  nameWithType: PoolOperations.listPoolUsageMetrics(DateTime startTime, DateTime endTime)
  fullName: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(DateTime startTime, DateTime endTime)
  overload: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists pool usage metrics.
  syntax:
    content: public PagedList<PoolUsageMetrics> listPoolUsageMetrics(DateTime startTime, DateTime endTime)
    parameters:
    - id: startTime
      type: org.joda.time.DateTime
      description: The start time of the aggregation interval covered by this entry.
    - id: endTime
      type: org.joda.time.DateTime
      description: The end time of the aggregation interval for this entry.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics" data-throw-if-not-resolved="false">PoolUsageMetrics</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime,com.microsoft.azure.batch.DetailLevel)
  id: listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime,com.microsoft.azure.batch.DetailLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: listPoolUsageMetrics(DateTime startTime, DateTime endTime, DetailLevel detailLevel)
  nameWithType: PoolOperations.listPoolUsageMetrics(DateTime startTime, DateTime endTime, DetailLevel detailLevel)
  fullName: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(DateTime startTime, DateTime endTime, DetailLevel detailLevel)
  overload: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists pool usage metrics.
  syntax:
    content: public PagedList<PoolUsageMetrics> listPoolUsageMetrics(DateTime startTime, DateTime endTime, DetailLevel detailLevel)
    parameters:
    - id: startTime
      type: org.joda.time.DateTime
      description: The start time of the aggregation interval covered by this entry.
    - id: endTime
      type: org.joda.time.DateTime
      description: The end time of the aggregation interval for this entry.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: >-
        A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for
                    controlling which properties are retrieved from the service.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics" data-throw-if-not-resolved="false">PoolUsageMetrics</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: listPoolUsageMetrics(org.joda.time.DateTime,org.joda.time.DateTime,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: listPoolUsageMetrics(DateTime startTime, DateTime endTime, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.listPoolUsageMetrics(DateTime startTime, DateTime endTime, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics(DateTime startTime, DateTime endTime, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists pool usage metrics.
  syntax:
    content: public PagedList<PoolUsageMetrics> listPoolUsageMetrics(DateTime startTime, DateTime endTime, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: startTime
      type: org.joda.time.DateTime
      description: The start time of the aggregation interval covered by this entry.
    - id: endTime
      type: org.joda.time.DateTime
      description: The end time of the aggregation interval for this entry.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: >-
        A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for
                    controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics" data-throw-if-not-resolved="false">PoolUsageMetrics</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.listPools()
  id: listPools()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: listPools()
  nameWithType: PoolOperations.listPools()
  fullName: com.microsoft.azure.batch.PoolOperations.listPools()
  overload: com.microsoft.azure.batch.PoolOperations.listPools*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">pools</xref> in the Batch account.
  syntax:
    content: public PagedList<CloudPool> listPools()
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.listPools(com.microsoft.azure.batch.DetailLevel)
  id: listPools(com.microsoft.azure.batch.DetailLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: listPools(DetailLevel detailLevel)
  nameWithType: PoolOperations.listPools(DetailLevel detailLevel)
  fullName: com.microsoft.azure.batch.PoolOperations.listPools(DetailLevel detailLevel)
  overload: com.microsoft.azure.batch.PoolOperations.listPools*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">pools</xref> in the Batch account.
  syntax:
    content: public PagedList<CloudPool> listPools(DetailLevel detailLevel)
    parameters:
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: >-
        A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for
                    controlling which properties are retrieved from the service.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.listPools(com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: listPools(com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: listPools(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.listPools(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.listPools(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.listPools*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">pools</xref> in the Batch account.
  syntax:
    content: public PagedList<CloudPool> listPools(DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: >-
        A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for
                    controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.CloudPool" data-throw-if-not-resolved="false">CloudPool</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.patchPool(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: patchPool(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: patchPool(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata)
  nameWithType: PoolOperations.patchPool(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.PoolOperations.patchPool(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.PoolOperations.patchPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified pool. This method only replaces the properties specified with non-null values.
  syntax:
    content: public void patchPool(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: startTask
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: >-
        A task to run on each compute node as it joins the pool. If null,
                    any existing start task is left unchanged.
    - id: certificateReferences
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: >-
        A collection of certificates to be installed on each compute node
                    in the pool. If null, any existing certificate references are left
                    unchanged.
    - id: applicationPackageReferences
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: >-
        A collection of application packages to be installed on each
                    compute node in the pool. If null, any existing application
                    packages references are left unchanged.
    - id: metadata
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: >-
        A collection of name-value pairs associated with the pool as
                    metadata. If null, any existing metadata is left unchanged.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.patchPool(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: patchPool(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: patchPool(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.patchPool(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.patchPool(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.patchPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified pool. This method only replaces the properties specified with non-null values.
  syntax:
    content: public void patchPool(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: startTask
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: >-
        A task to run on each compute node as it joins the pool. If null,
                    any existing start task is left unchanged.
    - id: certificateReferences
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: >-
        A collection of certificates to be installed on each compute node
                    in the pool. If null, any existing certificate references are left
                    unchanged.
    - id: applicationPackageReferences
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: >-
        A collection of application packages to be installed on each
                    compute node in the pool. If null, any existing application
                    packages references are left unchanged.
    - id: metadata
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: >-
        A collection of name-value pairs associated with the pool as
                    metadata. If null, any existing metadata is left unchanged.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(java.lang.String,java.lang.String)
  id: removeNodeFromPool(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: removeNodeFromPool(String poolId, String computeNodeId)
  nameWithType: PoolOperations.removeNodeFromPool(String poolId, String computeNodeId)
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(String poolId, String computeNodeId)
  overload: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Removes the specified compute node from the specified pool.
  syntax:
    content: public void removeNodeFromPool(String poolId, String computeNodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: computeNodeId
      type: java.lang.String
      description: The ID of the compute node to remove from the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  id: removeNodeFromPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: removeNodeFromPool(String poolId, String computeNodeId, ComputeNodeDeallocationOption deallocationOption)
  nameWithType: PoolOperations.removeNodeFromPool(String poolId, String computeNodeId, ComputeNodeDeallocationOption deallocationOption)
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(String poolId, String computeNodeId, ComputeNodeDeallocationOption deallocationOption)
  overload: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Removes the specified compute node from the specified pool.
  syntax:
    content: public void removeNodeFromPool(String poolId, String computeNodeId, ComputeNodeDeallocationOption deallocationOption)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: computeNodeId
      type: java.lang.String
      description: The ID of the compute node to remove from the pool.
    - id: deallocationOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
      description: Specifies when nodes may be removed from the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: removeNodeFromPool(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: removeNodeFromPool(String poolId, String computeNodeId, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.removeNodeFromPool(String poolId, String computeNodeId, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool(String poolId, String computeNodeId, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Removes the specified compute node from the specified pool.
  syntax:
    content: public void removeNodeFromPool(String poolId, String computeNodeId, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: computeNodeId
      type: java.lang.String
      description: The ID of the compute node to remove from the pool.
    - id: deallocationOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
      description: Specifies when nodes may be removed from the pool.
    - id: resizeTimeout
      type: org.joda.time.Period
      description: Specifies the timeout for removal of compute nodes from the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  id: removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes)
  nameWithType: PoolOperations.removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes)
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes)
  overload: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Removes the specified compute nodes from the specified pool.
  syntax:
    content: public void removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: computeNodes
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: The compute nodes to remove from the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  id: removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes, ComputeNodeDeallocationOption deallocationOption)
  nameWithType: PoolOperations.removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes, ComputeNodeDeallocationOption deallocationOption)
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes, ComputeNodeDeallocationOption deallocationOption)
  overload: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Removes the specified compute nodes from the specified pool.
  syntax:
    content: public void removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes, ComputeNodeDeallocationOption deallocationOption)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: computeNodes
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: The compute nodes to remove from the pool.
    - id: deallocationOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
      description: Specifies when nodes may be removed from the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: removeNodesFromPool(java.lang.String,java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Removes the specified compute nodes from the specified pool.
  syntax:
    content: public void removeNodesFromPool(String poolId, Collection<ComputeNode> computeNodes, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: computeNodes
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: The compute nodes to remove from the pool.
    - id: deallocationOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
      description: Specifies when nodes may be removed from the pool.
    - id: resizeTimeout
      type: org.joda.time.Period
      description: Specifies the timeout for removal of compute nodes from the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(java.lang.String,java.util.List<java.lang.String>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: removeNodesFromPool(java.lang.String,java.util.List<java.lang.String>,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,org.joda.time.Period,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: removeNodesFromPool(String poolId, List<String> computeNodeIds, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.removeNodesFromPool(String poolId, List<String> computeNodeIds, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool(String poolId, List<String> computeNodeIds, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Removes the specified compute nodes from the specified pool.
  syntax:
    content: public void removeNodesFromPool(String poolId, List<String> computeNodeIds, ComputeNodeDeallocationOption deallocationOption, Period resizeTimeout, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: computeNodeIds
      type: java.util.List<java.lang.String>
      description: The IDs of the compute nodes to remove from the pool.
    - id: deallocationOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
      description: Specifies when nodes may be removed from the pool.
    - id: resizeTimeout
      type: org.joda.time.Period
      description: Specifies the timeout for removal of compute nodes from the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.resizePool(java.lang.String,java.lang.Integer,java.lang.Integer)
  id: resizePool(java.lang.String,java.lang.Integer,java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes)
  nameWithType: PoolOperations.resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes)
  fullName: com.microsoft.azure.batch.PoolOperations.resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes)
  overload: com.microsoft.azure.batch.PoolOperations.resizePool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Resizes the specified pool.
  syntax:
    content: public void resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: targetDedicatedNodes
      type: java.lang.Integer
      description: The desired number of dedicated compute nodes in the pool.
    - id: targetLowPriorityNodes
      type: java.lang.Integer
      description: The desired number of low-priority compute nodes in the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period)
  id: resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout)
  nameWithType: PoolOperations.resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout)
  fullName: com.microsoft.azure.batch.PoolOperations.resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout)
  overload: com.microsoft.azure.batch.PoolOperations.resizePool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Resizes the specified pool.
  syntax:
    content: public void resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: targetDedicatedNodes
      type: java.lang.Integer
      description: The desired number of dedicated compute nodes in the pool.
    - id: targetLowPriorityNodes
      type: java.lang.Integer
      description: The desired number of low-priority compute nodes in the pool.
    - id: resizeTimeout
      type: org.joda.time.Period
      description: >-
        The timeout for allocation of compute nodes to the pool or removal
                    of compute nodes from the pool. If the pool has not reached the
                    target size after this time, the resize is stopped.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  id: resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout, ComputeNodeDeallocationOption deallocationOption)
  nameWithType: PoolOperations.resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout, ComputeNodeDeallocationOption deallocationOption)
  fullName: com.microsoft.azure.batch.PoolOperations.resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout, ComputeNodeDeallocationOption deallocationOption)
  overload: com.microsoft.azure.batch.PoolOperations.resizePool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Resizes the specified pool.
  syntax:
    content: public void resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout, ComputeNodeDeallocationOption deallocationOption)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: targetDedicatedNodes
      type: java.lang.Integer
      description: The desired number of dedicated compute nodes in the pool.
    - id: targetLowPriorityNodes
      type: java.lang.Integer
      description: The desired number of low-priority compute nodes in the pool.
    - id: resizeTimeout
      type: org.joda.time.Period
      description: >-
        The timeout for allocation of compute nodes to the pool or removal
                    of compute nodes from the pool. If the pool has not reached the
                    target size after this time, the resize is stopped.
    - id: deallocationOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
      description: >-
        Specifies when nodes may be removed from the pool, if the pool
                    size is decreasing.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: resizePool(java.lang.String,java.lang.Integer,java.lang.Integer,org.joda.time.Period,com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout, ComputeNodeDeallocationOption deallocationOption, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout, ComputeNodeDeallocationOption deallocationOption, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout, ComputeNodeDeallocationOption deallocationOption, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.resizePool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Resizes the specified pool.
  syntax:
    content: public void resizePool(String poolId, Integer targetDedicatedNodes, Integer targetLowPriorityNodes, Period resizeTimeout, ComputeNodeDeallocationOption deallocationOption, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: targetDedicatedNodes
      type: java.lang.Integer
      description: The desired number of dedicated compute nodes in the pool.
    - id: targetLowPriorityNodes
      type: java.lang.Integer
      description: The desired number of low-priority compute nodes in the pool.
    - id: resizeTimeout
      type: org.joda.time.Period
      description: >-
        The timeout for allocation of compute nodes to the pool or removal
                    of compute nodes from the pool. If the pool has not reached the
                    target size after this time, the resize is stopped.
    - id: deallocationOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
      description: >-
        Specifies when nodes may be removed from the pool, if the pool
                    size is decreasing.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.stopResizePool(java.lang.String)
  id: stopResizePool(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: stopResizePool(String poolId)
  nameWithType: PoolOperations.stopResizePool(String poolId)
  fullName: com.microsoft.azure.batch.PoolOperations.stopResizePool(String poolId)
  overload: com.microsoft.azure.batch.PoolOperations.stopResizePool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Stops a pool resize operation.
  syntax:
    content: public void stopResizePool(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.stopResizePool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: stopResizePool(java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: stopResizePool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.stopResizePool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.stopResizePool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.stopResizePool*
  type: Method
  package: com.microsoft.azure.batch
  summary: Stops a pool resize operation.
  syntax:
    content: public void stopResizePool(String poolId, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.updatePoolProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: updatePoolProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: updatePoolProperties(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata)
  nameWithType: PoolOperations.updatePoolProperties(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.PoolOperations.updatePoolProperties(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.PoolOperations.updatePoolProperties*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified pool. This method fully replaces all the updatable properties of the pool. For example, if the startTask parameter is null and the pool has a start task associated with it, then the Batch service will remove the existing start task.
  syntax:
    content: public void updatePoolProperties(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: startTask
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: >-
        A task to run on each compute node as it joins the pool. If null,
                    any existing start task is removed from the pool.
    - id: certificateReferences
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: >-
        A collection of certificates to be installed on each compute node
                    in the pool. If null, any existing certificate references are
                    removed from the pool.
    - id: applicationPackageReferences
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: >-
        A collection of application packages to be installed on each
                    compute node in the pool. If null, any existing application
                    packages references are removed from the pool.
    - id: metadata
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: >-
        A collection of name-value pairs associated with the pool as
                    metadata. If null, any existing metadata is removed from the pool.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.updatePoolProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: updatePoolProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.StartTask,java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>,java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: updatePoolProperties(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: PoolOperations.updatePoolProperties(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.updatePoolProperties(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.PoolOperations.updatePoolProperties*
  type: Method
  package: com.microsoft.azure.batch
  summary: Updates the specified pool. This method fully replaces all the updatable properties of the pool. For example, if the startTask parameter is null and the pool has a start task associated with it, then the Batch service will remove the existing start task.
  syntax:
    content: public void updatePoolProperties(String poolId, StartTask startTask, Collection<CertificateReference> certificateReferences, Collection<ApplicationPackageReference> applicationPackageReferences, Collection<MetadataItem> metadata, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool.
    - id: startTask
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: >-
        A task to run on each compute node as it joins the pool. If null,
                    any existing start task is removed from the pool.
    - id: certificateReferences
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: >-
        A collection of certificates to be installed on each compute node
                    in the pool. If null, any existing certificate references are
                    removed from the pool.
    - id: applicationPackageReferences
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: >-
        A collection of application packages to be installed on each
                    compute node in the pool. If null, any existing application
                    packages references are removed from the pool.
    - id: metadata
      type: java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: >-
        A collection of name-value pairs associated with the pool as
                    metadata. If null, any existing metadata is removed from the pool.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: >-
        A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are
                    applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
  - type: java.io.IOException
    description: >-
      Exception thrown when an error response is received from the
                   Batch service.
- uid: com.microsoft.azure.batch.PoolOperations.withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  id: withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.PoolOperations
  langs:
  - java
  name: withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  nameWithType: PoolOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  fullName: com.microsoft.azure.batch.PoolOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  overload: com.microsoft.azure.batch.PoolOperations.withCustomBehaviors*
  type: Method
  package: com.microsoft.azure.batch
  summary: Sets a collection of behaviors that modify or customize requests to the Batch service.
  syntax:
    content: public IInheritedBehaviors withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
    parameters:
    - id: behaviors
      type: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
      description: The collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances.
    return:
      type: com.microsoft.azure.batch.IInheritedBehaviors
      description: The current instance.
references:
- uid: com.microsoft.azure.batch.BatchClient
  name: BatchClient
  nameWithType: BatchClient
  fullName: com.microsoft.azure.batch.BatchClient
- uid: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.BatchClientBehavior
    name: BatchClientBehavior
    fullName: com.microsoft.azure.batch.BatchClientBehavior
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.PoolOperations.PoolOperations*
  name: PoolOperations
  nameWithType: PoolOperations.PoolOperations
  fullName: com.microsoft.azure.batch.PoolOperations.PoolOperations
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.PoolOperations.customBehaviors*
  name: customBehaviors
  nameWithType: PoolOperations.customBehaviors
  fullName: com.microsoft.azure.batch.PoolOperations.customBehaviors
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.IInheritedBehaviors
  name: IInheritedBehaviors
  nameWithType: IInheritedBehaviors
  fullName: com.microsoft.azure.batch.IInheritedBehaviors
- uid: com.microsoft.azure.batch.PoolOperations.withCustomBehaviors*
  name: withCustomBehaviors
  nameWithType: PoolOperations.withCustomBehaviors
  fullName: com.microsoft.azure.batch.PoolOperations.withCustomBehaviors
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.BatchErrorException
  name: BatchErrorException
  nameWithType: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.PoolOperations.listPools*
  name: listPools
  nameWithType: PoolOperations.listPools
  fullName: com.microsoft.azure.batch.PoolOperations.listPools
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.DetailLevel
  name: DetailLevel
  nameWithType: DetailLevel
  fullName: com.microsoft.azure.batch.DetailLevel
- uid: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.BatchClientBehavior
    name: BatchClientBehavior
    fullName: com.microsoft.azure.batch.BatchClientBehavior
  - name: '>'
    fullName: '>'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.CloudPool
  name: CloudPool
  nameWithType: CloudPool
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool
- uid: com.microsoft.azure.batch.PoolOperations.getPool*
  name: getPool
  nameWithType: PoolOperations.getPool
  fullName: com.microsoft.azure.batch.PoolOperations.getPool
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.PoolOperations.deletePool*
  name: deletePool
  nameWithType: PoolOperations.deletePool
  fullName: com.microsoft.azure.batch.PoolOperations.deletePool
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.batch.PoolOperations.createPool*
  name: createPool
  nameWithType: PoolOperations.createPool
  fullName: com.microsoft.azure.batch.PoolOperations.createPool
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
- uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter
  name: PoolAddParameter
  nameWithType: PoolAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.PoolOperations.resizePool*
  name: resizePool
  nameWithType: PoolOperations.resizePool
  fullName: com.microsoft.azure.batch.PoolOperations.resizePool
  package: com.microsoft.azure.batch
- uid: org.joda.time.Period
  spec.java:
  - uid: org.joda.time.Period
    name: Period
    fullName: org.joda.time.Period
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
  name: ComputeNodeDeallocationOption
  nameWithType: ComputeNodeDeallocationOption
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeallocationOption
- uid: com.microsoft.azure.batch.PoolOperations.stopResizePool*
  name: stopResizePool
  nameWithType: PoolOperations.stopResizePool
  fullName: com.microsoft.azure.batch.PoolOperations.stopResizePool
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.PoolOperations.enableAutoScale*
  name: enableAutoScale
  nameWithType: PoolOperations.enableAutoScale
  fullName: com.microsoft.azure.batch.PoolOperations.enableAutoScale
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.PoolOperations.disableAutoScale*
  name: disableAutoScale
  nameWithType: PoolOperations.disableAutoScale
  fullName: com.microsoft.azure.batch.PoolOperations.disableAutoScale
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  name: AutoScaleRun
  nameWithType: AutoScaleRun
  fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
- uid: com.microsoft.azure.batch.PoolOperations.evaluateAutoScale*
  name: evaluateAutoScale
  nameWithType: PoolOperations.evaluateAutoScale
  fullName: com.microsoft.azure.batch.PoolOperations.evaluateAutoScale
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool*
  name: removeNodeFromPool
  nameWithType: PoolOperations.removeNodeFromPool
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodeFromPool
  package: com.microsoft.azure.batch
- uid: java.util.Collection<com.microsoft.azure.batch.protocol.models.ComputeNode>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool*
  name: removeNodesFromPool
  nameWithType: PoolOperations.removeNodesFromPool
  fullName: com.microsoft.azure.batch.PoolOperations.removeNodesFromPool
  package: com.microsoft.azure.batch
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.batch.PoolOperations.existsPool*
  name: existsPool
  nameWithType: PoolOperations.existsPool
  fullName: com.microsoft.azure.batch.PoolOperations.existsPool
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.StartTask
  name: StartTask
  nameWithType: StartTask
  fullName: com.microsoft.azure.batch.protocol.models.StartTask
- uid: java.util.Collection<com.microsoft.azure.batch.protocol.models.CertificateReference>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CertificateReference
    name: CertificateReference
    fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
  - name: '>'
    fullName: '>'
- uid: java.util.Collection<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
    name: ApplicationPackageReference
    fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  - name: '>'
    fullName: '>'
- uid: java.util.Collection<com.microsoft.azure.batch.protocol.models.MetadataItem>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MetadataItem
    name: MetadataItem
    fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.PoolOperations.updatePoolProperties*
  name: updatePoolProperties
  nameWithType: PoolOperations.updatePoolProperties
  fullName: com.microsoft.azure.batch.PoolOperations.updatePoolProperties
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.PoolOperations.patchPool*
  name: patchPool
  nameWithType: PoolOperations.patchPool
  fullName: com.microsoft.azure.batch.PoolOperations.patchPool
  package: com.microsoft.azure.batch
- uid: org.joda.time.DateTime
  spec.java:
  - uid: org.joda.time.DateTime
    name: DateTime
    fullName: org.joda.time.DateTime
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics*
  name: listPoolUsageMetrics
  nameWithType: PoolOperations.listPoolUsageMetrics
  fullName: com.microsoft.azure.batch.PoolOperations.listPoolUsageMetrics
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
  name: PoolStatistics
  nameWithType: PoolStatistics
  fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
- uid: com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics*
  name: getAllPoolsLifetimeStatistics
  nameWithType: PoolOperations.getAllPoolsLifetimeStatistics
  fullName: com.microsoft.azure.batch.PoolOperations.getAllPoolsLifetimeStatistics
  package: com.microsoft.azure.batch
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.microsoft.azure.batch.BatchClientBehavior
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: com.microsoft.azure.batch.BatchClientBehavior
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: com.microsoft.azure.batch.protocol.models.ComputeNode
  name: ComputeNode
  nameWithType: ComputeNode
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.CertificateReference
  name: CertificateReference
  nameWithType: CertificateReference
  fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
- uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  name: ApplicationPackageReference
  nameWithType: ApplicationPackageReference
  fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
- uid: com.microsoft.azure.batch.protocol.models.MetadataItem
  name: MetadataItem
  nameWithType: MetadataItem
  fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
- uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  name: PoolUsageMetrics
  nameWithType: PoolUsageMetrics
  fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
