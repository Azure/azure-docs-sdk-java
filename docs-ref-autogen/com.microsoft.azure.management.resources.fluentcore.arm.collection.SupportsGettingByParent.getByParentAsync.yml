### YamlMime:JavaMember
uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync*"
fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync"
name: "getByParentAsync"
nameWithType: "SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync"
members:
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync(ParentT,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(ParentT parentResource, String name)"
  name: "getByParentAsync(ParentT parentResource, String name)"
  nameWithType: "SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(ParentT parentResource, String name)"
  summary: "Gets the information about a resource from Azure based on the resource id."
  parameters:
  - description: "the instance of parent resource."
    name: "parentResource"
    type: "<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of resource."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<T> getByParentAsync(ParentT parentResource, String name)"
  returns:
    description: "a representation of the deferred computation of this call returning the found resource"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(String resourceGroup, String parentName, String name)"
  name: "getByParentAsync(String resourceGroup, String parentName, String name)"
  nameWithType: "SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(String resourceGroup, String parentName, String name)"
  summary: "Gets the information about a resource from Azure based on the resource id."
  parameters:
  - description: "the name of resource group"
    name: "resourceGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of parent resource"
    name: "parentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of resource"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<T> getByParentAsync(String resourceGroup, String parentName, String name)"
  returns:
    description: "a representation of the deferred computation of this call returning the found resource"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.arm.collection"
artifact: com.microsoft.azure:azure-mgmt-resources:1.38.1
