### YamlMime:JavaType
uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern"
fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern"
name: "RecurrencePattern"
nameWithType: "RecurrencePattern"
summary: "Recurrence pattern of a lab schedule."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **RecurrencePattern**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.labservices.models.RecurrencePattern?alt=com.azure.resourcemanager.labservices.models.RecurrencePattern&text=RecurrencePattern\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.RecurrencePattern()"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.RecurrencePattern()"
  name: "RecurrencePattern()"
  nameWithType: "RecurrencePattern.RecurrencePattern()"
  summary: "Creates an instance of Recurrence<wbr>Pattern class."
  syntax: "public RecurrencePattern()"
  desc: "Creates an instance of RecurrencePattern class."
methods:
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.expirationDate()"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.expirationDate()"
  name: "expirationDate()"
  nameWithType: "RecurrencePattern.expirationDate()"
  summary: "Get the expiration<wbr>Date property: When the recurrence will expire."
  syntax: "public OffsetDateTime expirationDate()"
  desc: "Get the expirationDate property: When the recurrence will expire. This date is inclusive."
  returns:
    description: "the expirationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.frequency()"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.frequency()"
  name: "frequency()"
  nameWithType: "RecurrencePattern.frequency()"
  summary: "Get the frequency property: The frequency of the recurrence."
  syntax: "public RecurrenceFrequency frequency()"
  desc: "Get the frequency property: The frequency of the recurrence."
  returns:
    description: "the frequency value."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.RecurrenceFrequency?alt=com.azure.resourcemanager.labservices.models.RecurrenceFrequency&text=RecurrenceFrequency\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "RecurrencePattern.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Recurrence<wbr>Pattern from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RecurrencePattern fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of RecurrencePattern from the JsonReader."
  returns:
    description: "An instance of RecurrencePattern if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.RecurrencePattern?alt=com.azure.resourcemanager.labservices.models.RecurrencePattern&text=RecurrencePattern\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.interval()"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.interval()"
  name: "interval()"
  nameWithType: "RecurrencePattern.interval()"
  summary: "Get the interval property: The interval to invoke the schedule on."
  syntax: "public Integer interval()"
  desc: "Get the interval property: The interval to invoke the schedule on. For example, interval = 2 and RecurrenceFrequency.Daily will run every 2 days. When no interval is supplied, an interval of 1 is used."
  returns:
    description: "the interval value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "RecurrencePattern.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.validate()"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.validate()"
  name: "validate()"
  nameWithType: "RecurrencePattern.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.weekDays()"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.weekDays()"
  name: "weekDays()"
  nameWithType: "RecurrencePattern.weekDays()"
  summary: "Get the week<wbr>Days property: The week days the schedule runs."
  syntax: "public List<WeekDay> weekDays()"
  desc: "Get the weekDays property: The week days the schedule runs. Used for when the Frequency is set to Weekly."
  returns:
    description: "the weekDays value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.labservices.models.WeekDay?alt=com.azure.resourcemanager.labservices.models.WeekDay&text=WeekDay\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.withExpirationDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.withExpirationDate(OffsetDateTime expirationDate)"
  name: "withExpirationDate(OffsetDateTime expirationDate)"
  nameWithType: "RecurrencePattern.withExpirationDate(OffsetDateTime expirationDate)"
  summary: "Set the expiration<wbr>Date property: When the recurrence will expire."
  parameters:
  - description: "the expirationDate value to set."
    name: "expirationDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RecurrencePattern withExpirationDate(OffsetDateTime expirationDate)"
  desc: "Set the expirationDate property: When the recurrence will expire. This date is inclusive."
  returns:
    description: "the RecurrencePattern object itself."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.RecurrencePattern?alt=com.azure.resourcemanager.labservices.models.RecurrencePattern&text=RecurrencePattern\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.withFrequency(com.azure.resourcemanager.labservices.models.RecurrenceFrequency)"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.withFrequency(RecurrenceFrequency frequency)"
  name: "withFrequency(RecurrenceFrequency frequency)"
  nameWithType: "RecurrencePattern.withFrequency(RecurrenceFrequency frequency)"
  summary: "Set the frequency property: The frequency of the recurrence."
  parameters:
  - description: "the frequency value to set."
    name: "frequency"
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.RecurrenceFrequency?alt=com.azure.resourcemanager.labservices.models.RecurrenceFrequency&text=RecurrenceFrequency\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RecurrencePattern withFrequency(RecurrenceFrequency frequency)"
  desc: "Set the frequency property: The frequency of the recurrence."
  returns:
    description: "the RecurrencePattern object itself."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.RecurrencePattern?alt=com.azure.resourcemanager.labservices.models.RecurrencePattern&text=RecurrencePattern\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.withInterval(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.withInterval(Integer interval)"
  name: "withInterval(Integer interval)"
  nameWithType: "RecurrencePattern.withInterval(Integer interval)"
  summary: "Set the interval property: The interval to invoke the schedule on."
  parameters:
  - description: "the interval value to set."
    name: "interval"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RecurrencePattern withInterval(Integer interval)"
  desc: "Set the interval property: The interval to invoke the schedule on. For example, interval = 2 and RecurrenceFrequency.Daily will run every 2 days. When no interval is supplied, an interval of 1 is used."
  returns:
    description: "the RecurrencePattern object itself."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.RecurrencePattern?alt=com.azure.resourcemanager.labservices.models.RecurrencePattern&text=RecurrencePattern\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.RecurrencePattern.withWeekDays(java.util.List<com.azure.resourcemanager.labservices.models.WeekDay>)"
  fullName: "com.azure.resourcemanager.labservices.models.RecurrencePattern.withWeekDays(List<WeekDay> weekDays)"
  name: "withWeekDays(List<WeekDay> weekDays)"
  nameWithType: "RecurrencePattern.withWeekDays(List<WeekDay> weekDays)"
  summary: "Set the week<wbr>Days property: The week days the schedule runs."
  parameters:
  - description: "the weekDays value to set."
    name: "weekDays"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.labservices.models.WeekDay?alt=com.azure.resourcemanager.labservices.models.WeekDay&text=WeekDay\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RecurrencePattern withWeekDays(List<WeekDay> weekDays)"
  desc: "Set the weekDays property: The week days the schedule runs. Used for when the Frequency is set to Weekly."
  returns:
    description: "the RecurrencePattern object itself."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.RecurrencePattern?alt=com.azure.resourcemanager.labservices.models.RecurrencePattern&text=RecurrencePattern\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Recurrence pattern of a lab schedule."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.labservices.models.RecurrencePattern?alt=com.azure.resourcemanager.labservices.models.RecurrencePattern&text=RecurrencePattern\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.labservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-labservices:1.0.0
