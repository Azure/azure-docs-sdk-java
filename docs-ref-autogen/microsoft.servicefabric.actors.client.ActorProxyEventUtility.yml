### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.client.ActorProxyEventUtility
  id: ActorProxyEventUtility
  parent: microsoft.servicefabric.actors.client
  children:
  - microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync(ActorEventPublisher,TEvent)
  - microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync(ActorEventPublisher,TEvent,Duration)
  - microsoft.servicefabric.actors.client.ActorProxyEventUtility.unsubscribeAsync(ActorEventPublisher,TEvent)
  href: microsoft.servicefabric.actors.client.ActorProxyEventUtility.yml
  langs:
  - java
  name: ActorProxyEventUtility
  nameWithType: ActorProxyEventUtility
  fullName: microsoft.servicefabric.actors.client.ActorProxyEventUtility
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/client/ActorProxyEventUtility.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/client/ActorProxyEventUtility.java
    startLine: 12
  package: microsoft.servicefabric.actors.client
  summary: "<p>Contains extension methods related to actor events. </p>"
  syntax:
    content: public class ActorProxyEventUtility
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync(ActorEventPublisher,TEvent)
  id: subscribeAsync(ActorEventPublisher,TEvent)
  parent: microsoft.servicefabric.actors.client.ActorProxyEventUtility
  href: microsoft.servicefabric.actors.client.ActorProxyEventUtility.yml
  langs:
  - java
  name: subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  nameWithType: ActorProxyEventUtility.subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  fullName: microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  overload: microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/client/ActorProxyEventUtility.java
    startLine: 35
  package: microsoft.servicefabric.actors.client
  summary: "<p>Subscribe to a published actor event.</p>\r\n<p>\r\nWhen actorProxy is not of type <xref uid=\"microsoft.servicefabric.actors.client.ActorProxy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.actors.client.ActorProxy\"></xref></p>\r\n<p>When TEvent doesn't implement <xref uid=\"microsoft.servicefabric.actors.ActorEvents\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.actors.ActorEvents\"></xref></p>"
  syntax:
    content: public static static<TEvent extends ActorEvents> CompletableFuture<?> subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
    parameters:
    - id: actorProxy
      type: microsoft.servicefabric.actors.ActorEventPublisher
      description: <p>The actor that publishes the event. </p>
    - id: subscriber
      type: a0359c96
      description: <p>The subscriber that receives the event. </p>
    return:
      type: 8aed7311microsoft.servicefabric.actors.ActorEventsa598367f
      description: <p>A task that represents the asynchronous operation of subscribing to a published actor event.. </p>
  exceptions:
  - type: 6bd89211
- uid: microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync(ActorEventPublisher,TEvent,Duration)
  id: subscribeAsync(ActorEventPublisher,TEvent,Duration)
  parent: microsoft.servicefabric.actors.client.ActorProxyEventUtility
  href: microsoft.servicefabric.actors.client.ActorProxyEventUtility.yml
  langs:
  - java
  name: subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber, Duration resubscriptionInterval)
  nameWithType: ActorProxyEventUtility.subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber, Duration resubscriptionInterval)
  fullName: microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber, Duration resubscriptionInterval)
  overload: microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/client/ActorProxyEventUtility.java
    startLine: 62
  package: microsoft.servicefabric.actors.client
  summary: "<p>Subscribe to a published actor event.</p>\r\n<p>\r\nWhen actorProxy is not of type <xref uid=\"microsoft.servicefabric.actors.client.ActorProxy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.actors.client.ActorProxy\"></xref></p>\r\n<p>When TEvent doesn't implement <xref uid=\"microsoft.servicefabric.actors.ActorEvents\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.actors.ActorEvents\"></xref></p>"
  syntax:
    content: public static static<TEvent extends ActorEvents> CompletableFuture<?> subscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber, Duration resubscriptionInterval)
    parameters:
    - id: actorProxy
      type: microsoft.servicefabric.actors.ActorEventPublisher
      description: <p>The actor that publishes the event. </p>
    - id: subscriber
      type: a0359c96
      description: <p>The subscriber that receives the event. </p>
    - id: resubscriptionInterval
      type: e02a2de0
      description: <p>The time between re-subscription attempts. </p>
    return:
      type: 8aed7311microsoft.servicefabric.actors.ActorEventsa598367f
      description: <p>A task that represents the asynchronous operation of subscribing to a published actor event.. </p>
  exceptions:
  - type: 6bd89211
- uid: microsoft.servicefabric.actors.client.ActorProxyEventUtility.unsubscribeAsync(ActorEventPublisher,TEvent)
  id: unsubscribeAsync(ActorEventPublisher,TEvent)
  parent: microsoft.servicefabric.actors.client.ActorProxyEventUtility
  href: microsoft.servicefabric.actors.client.ActorProxyEventUtility.yml
  langs:
  - java
  name: unsubscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  nameWithType: ActorProxyEventUtility.unsubscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  fullName: microsoft.servicefabric.actors.client.ActorProxyEventUtility.unsubscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
  overload: microsoft.servicefabric.actors.client.ActorProxyEventUtility.unsubscribeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/client/ActorProxyEventUtility.java
    startLine: 102
  package: microsoft.servicefabric.actors.client
  summary: "<p>Unsubscribe from a published actor event.</p>\r\n<p>\r\nWhen actorProxy is not of type <xref uid=\"microsoft.servicefabric.actors.client.ActorProxy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.actors.client.ActorProxy\"></xref></p>\r\n<p>When TEvent doesn't implement <xref uid=\"microsoft.servicefabric.actors.ActorEvents\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.actors.ActorEvents\"></xref></p>"
  syntax:
    content: public static static<TEvent extends ActorEvents> CompletableFuture<?> unsubscribeAsync(ActorEventPublisher actorProxy, TEvent subscriber)
    parameters:
    - id: actorProxy
      type: microsoft.servicefabric.actors.ActorEventPublisher
      description: <p>The actor that publishes the event. </p>
    - id: subscriber
      type: a0359c96
      description: <p>The subscriber that receives the event. </p>
    return:
      type: 8aed7311microsoft.servicefabric.actors.ActorEventsa598367f
      description: <p>A task that represents the asynchronous operation of un-subscribing from a published actor event. </p>
  exceptions:
  - type: 6bd89211
references:
- uid: 6bd89211
  spec.java:
  - name: java.lang.IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: a0359c96
  spec.java:
  - name: TEvent
    fullName: TEvent
- uid: 8aed7311microsoft.servicefabric.actors.ActorEventsa598367f
  spec.java:
  - name: 'static<TEvent extends '
    fullName: 'static<TEvent extends '
  - uid: microsoft.servicefabric.actors.ActorEvents
    name: ActorEvents
    fullName: microsoft.servicefabric.actors.ActorEvents
    href: microsoft.servicefabric.actors.ActorEvents.yml
  - name: '> CompletableFuture<?>'
    fullName: '> CompletableFuture<?>'
- uid: microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync*
  name: subscribeAsync
  nameWithType: ActorProxyEventUtility.subscribeAsync
  fullName: microsoft.servicefabric.actors.client.ActorProxyEventUtility.subscribeAsync
  package: microsoft.servicefabric.actors.client
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: microsoft.servicefabric.actors.client.ActorProxyEventUtility.unsubscribeAsync*
  name: unsubscribeAsync
  nameWithType: ActorProxyEventUtility.unsubscribeAsync
  fullName: microsoft.servicefabric.actors.client.ActorProxyEventUtility.unsubscribeAsync
  package: microsoft.servicefabric.actors.client
- uid: microsoft.servicefabric.actors.ActorEvents
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.ActorEvents.yml
  name: ActorEvents
  nameWithType: ActorEvents
  fullName: microsoft.servicefabric.actors.ActorEvents
  type: Interface
  summary: "<p>Represents actor events. Interface that creates actor events must implement this interface </p>"
  syntax:
    content: public interface ActorEvents
- uid: microsoft.servicefabric.actors.ActorEventPublisher
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.ActorEventPublisher.yml
  name: ActorEventPublisher<TActorEvents>
  nameWithType: ActorEventPublisher<TActorEvents>
  fullName: microsoft.servicefabric.actors.ActorEventPublisher<TActorEvents>
  type: Interface
  summary: "<p>Represents publisher of actor events. Publishers of actor events must implement this interface</p>\r\n<p></p>"
  syntax:
    content: public interface ActorEventPublisher<TActorEvents extends ActorEvents>
    typeParameters:
    - id: TActorEvents
      type: 6e1c167f
      description: <p>Actor event interface type derived from <xref uid="microsoft.servicefabric.actors.ActorEvents" data-throw-if-not-resolved="false" data-raw-source="ActorEvents"></xref>. </p>
- uid: microsoft.servicefabric.actors.client.ActorProxy
  parent: microsoft.servicefabric.actors.client
  href: microsoft.servicefabric.actors.client.ActorProxy.yml
  name: ActorProxy
  nameWithType: ActorProxy
  fullName: microsoft.servicefabric.actors.client.ActorProxy
  type: Interface
  summary: "<p>Provides the interface for implementation of proxy access for actor service. </p>"
  syntax:
    content: public interface ActorProxy
