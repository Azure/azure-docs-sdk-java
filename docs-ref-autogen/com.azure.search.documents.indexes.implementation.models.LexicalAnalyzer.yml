### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer
  id: LexicalAnalyzer
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models
  children:
  - com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.LexicalAnalyzer(java.lang.String)
  - com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName()
  - com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate()
  langs:
  - java
  name: LexicalAnalyzer
  nameWithType: LexicalAnalyzer
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer
  type: Class
  package: com.azure.search.documents.indexes.implementation.models
  summary: The LexicalAnalyzer model.
  syntax:
    content: public class LexicalAnalyzer
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.LexicalAnalyzer(java.lang.String)
  id: LexicalAnalyzer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer
  langs:
  - java
  name: LexicalAnalyzer(String name)
  nameWithType: LexicalAnalyzer.LexicalAnalyzer(String name)
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.LexicalAnalyzer(String name)
  overload: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.LexicalAnalyzer*
  type: Constructor
  package: com.azure.search.documents.indexes.implementation.models
  summary: Creates an instance of LexicalAnalyzer class.
  syntax:
    content: public LexicalAnalyzer(String name)
    parameters:
    - id: name
      type: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName()
  id: getName()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer
  langs:
  - java
  name: getName()
  nameWithType: LexicalAnalyzer.getName()
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName()
  overload: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the name property: The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters.'
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
      description: the name value.
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate()
  id: validate()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer
  langs:
  - java
  name: validate()
  nameWithType: LexicalAnalyzer.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate()
  overload: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.LexicalAnalyzer*
  name: LexicalAnalyzer
  nameWithType: LexicalAnalyzer.LexicalAnalyzer
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.LexicalAnalyzer
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName*
  name: getName
  nameWithType: LexicalAnalyzer.getName
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.getName
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate*
  name: validate
  nameWithType: LexicalAnalyzer.validate
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalAnalyzer.validate
  package: com.azure.search.documents.indexes.implementation.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
