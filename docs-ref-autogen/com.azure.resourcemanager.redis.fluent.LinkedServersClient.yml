### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  id: LinkedServersClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent
  children:
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient.listAsync(java.lang.String,java.lang.String)
  langs:
  - java
  name: LinkedServersClient
  nameWithType: LinkedServersClient
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  type: Interface
  package: com.azure.resourcemanager.redis.fluent
  summary: An instance of this class provides access to all the operations defined in LinkedServersClient.
  syntax:
    content: public interface LinkedServersClient
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClient.beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public abstract SyncPoller<PollResult<RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner> beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  id: beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  nameWithType: LinkedServersClient.beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public abstract SyncPoller<PollResult<RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner> beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: beginCreateAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClient.beginCreateAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreateAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreateAsync*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public abstract PollerFlux<PollResult<RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner> beginCreateAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClient.create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.create*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public abstract RedisLinkedServerWithPropertiesInner create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  id: create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  nameWithType: LinkedServersClient.create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.create*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public abstract RedisLinkedServerWithPropertiesInner create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: createAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClient.createAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public abstract Mono<RedisLinkedServerWithPropertiesInner> createAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClient.createWithResponseAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createWithResponseAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> createWithResponseAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: delete(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClient.delete(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.delete(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.delete*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Deletes the linked server from a redis cache (requires Premium SKU).
  syntax:
    content: public abstract void delete(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClient.deleteAsync(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteAsync(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Deletes the linked server from a redis cache (requires Premium SKU).
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  nameWithType: LinkedServersClient.deleteWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Deletes the linked server from a redis cache (requires Premium SKU).
  syntax:
    content: public abstract Response<Void> deleteWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClient.deleteWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Deletes the linked server from a redis cache (requires Premium SKU).
  syntax:
    content: public abstract Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: get(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClient.get(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.get(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.get*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
  syntax:
    content: public abstract RedisLinkedServerWithPropertiesInner get(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
      description: the detailed information about a linked server of a redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClient.getAsync(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getAsync(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
  syntax:
    content: public abstract Mono<RedisLinkedServerWithPropertiesInner> getAsync(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the detailed information about a linked server of a redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  nameWithType: LinkedServersClient.getWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
  syntax:
    content: public abstract Response<RedisLinkedServerWithPropertiesInner> getWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the detailed information about a linked server of a redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClient.getWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
  syntax:
    content: public abstract Mono<Response<RedisLinkedServerWithPropertiesInner>> getWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>>
      description: the detailed information about a linked server of a redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: list(String resourceGroupName, String name)
  nameWithType: LinkedServersClient.list(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.list(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.list*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Gets the list of linked servers associated with this redis cache (requires Premium SKU).
  syntax:
    content: public abstract PagedIterable<RedisLinkedServerWithPropertiesInner> list(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the list of linked servers associated with this redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: list(String resourceGroupName, String name, Context context)
  nameWithType: LinkedServersClient.list(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.list(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.list*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Gets the list of linked servers associated with this redis cache (requires Premium SKU).
  syntax:
    content: public abstract PagedIterable<RedisLinkedServerWithPropertiesInner> list(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the list of linked servers associated with this redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  langs:
  - java
  name: listAsync(String resourceGroupName, String name)
  nameWithType: LinkedServersClient.listAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.listAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.fluent.LinkedServersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.redis.fluent
  summary: Gets the list of linked servers associated with this redis cache (requires Premium SKU).
  syntax:
    content: public abstract PagedFlux<RedisLinkedServerWithPropertiesInner> listAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the list of linked servers associated with this redis cache (requires Premium SKU).
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
  name: RedisLinkedServerCreateParameters
  nameWithType: RedisLinkedServerCreateParameters
  fullName: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: LinkedServersClient.createWithResponseAsync
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createWithResponseAsync
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreateAsync*
  name: beginCreateAsync
  nameWithType: LinkedServersClient.beginCreateAsync
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreateAsync
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate*
  name: beginCreate
  nameWithType: LinkedServersClient.beginCreate
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.beginCreate
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createAsync*
  name: createAsync
  nameWithType: LinkedServersClient.createAsync
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.createAsync
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  name: RedisLinkedServerWithPropertiesInner
  nameWithType: RedisLinkedServerWithPropertiesInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.create*
  name: create
  nameWithType: LinkedServersClient.create
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.create
  package: com.azure.resourcemanager.redis.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: LinkedServersClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.redis.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteAsync*
  name: deleteAsync
  nameWithType: LinkedServersClient.deleteAsync
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteAsync
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.delete*
  name: delete
  nameWithType: LinkedServersClient.delete
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.delete
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: LinkedServersClient.deleteWithResponse
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.deleteWithResponse
  package: com.azure.resourcemanager.redis.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: LinkedServersClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponseAsync
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getAsync*
  name: getAsync
  nameWithType: LinkedServersClient.getAsync
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getAsync
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.get*
  name: get
  nameWithType: LinkedServersClient.get
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.get
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponse*
  name: getWithResponse
  nameWithType: LinkedServersClient.getWithResponse
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.getWithResponse
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.listAsync*
  name: listAsync
  nameWithType: LinkedServersClient.listAsync
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.listAsync
  package: com.azure.resourcemanager.redis.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient.list*
  name: list
  nameWithType: LinkedServersClient.list
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient.list
  package: com.azure.resourcemanager.redis.fluent
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  name: RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner
  nameWithType: RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
