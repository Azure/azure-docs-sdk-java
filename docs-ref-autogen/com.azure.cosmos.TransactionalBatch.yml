### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.TransactionalBatch
  id: TransactionalBatch
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos
  children:
  - com.azure.cosmos.TransactionalBatch.<T>createItemOperation(T)
  - com.azure.cosmos.TransactionalBatch.<T>createItemOperation(T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  - com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation(java.lang.String,T)
  - com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation(java.lang.String,T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  - com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation(T)
  - com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation(T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  - com.azure.cosmos.TransactionalBatch.createTransactionalBatch(com.azure.cosmos.models.PartitionKey)
  - com.azure.cosmos.TransactionalBatch.deleteItemOperation(java.lang.String)
  - com.azure.cosmos.TransactionalBatch.deleteItemOperation(java.lang.String,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  - com.azure.cosmos.TransactionalBatch.getOperations()
  - com.azure.cosmos.TransactionalBatch.getPartitionKeyValue()
  - com.azure.cosmos.TransactionalBatch.readItemOperation(java.lang.String)
  - com.azure.cosmos.TransactionalBatch.readItemOperation(java.lang.String,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  langs:
  - java
  name: TransactionalBatch
  nameWithType: TransactionalBatch
  fullName: com.azure.cosmos.TransactionalBatch
  type: Class
  package: com.azure.cosmos
  summary: >-
    Represents a batch of operations against items with the same <xref uid="com.azure.cosmos.models.PartitionKey" data-throw-if-not-resolved="false">PartitionKey</xref> in a container that will be performed in a transactional manner at the Azure Cosmos DB service.


    Use <xref uid="com.azure.cosmos.TransactionalBatch.createTransactionalBatch(com.azure.cosmos.models.PartitionKey)" data-throw-if-not-resolved="false">TransactionalBatch#createTransactionalBatch(PartitionKey)</xref> to create an instance of TransactionalBatch. **Example** This example atomically modifies a set of items as a batch.


    ```java

    public class ToDoActivity {
         public final String type;
         public final String id;
         public final String status;
         public ToDoActivity(String type, String id, String status) {
             this.type = type;
             this.id = id;
             this.status = status;
         }
     }

     String activityType = "personal";

     ToDoActivity test1 = new ToDoActivity(activityType, "learning", "ToBeDone");
     ToDoActivity test2 = new ToDoActivity(activityType, "shopping", "Done");
     ToDoActivity test3 = new ToDoActivity(activityType, "swimming", "ToBeDone");

     TransactionalBatch batch = TransactionalBatch.createTransactionalBatch(new Cosmos.PartitionKey(activityType));
     batch.createItemOperation(test1);
     batch.replaceItemOperation(test2.id, test2);
     batch.upsertItemOperation(test3);
     batch.deleteItemOperation("reading");

     TransactionalBatchResponse response = container.executeTransactionalBatch(batch);

     if (!response.isSuccessStatusCode()) {
          // Handle and log exception
          return;
     }

     // Look up interested results - e.g., via typed access on operation results

     TransactionalBatchOperationResult result = response.get(0);
     ToDoActivity readActivity = result.getItem(ToDoActivity.class);
    ```


    **Example**


    This example atomically reads a set of items as a batch.


    ```java

    String activityType = "personal";

     TransactionalBatch batch = TransactionalBatch.createTransactionalBatch(new Cosmos.PartitionKey(activityType));
     batch.readItemOperation("playing");
     batch.readItemOperation("walking");
     batch.readItemOperation("jogging");
     batch.readItemOperation("running");

     TransactionalBatchResponse response = container.executeTransactionalBatch(batch);
     List resultItems = new ArrayList();

     for (int i = 0; i < response.size(); i++) {
         TransactionalBatchOperationResult result = response.get(0);
         resultItems.add(result.getItem(ToDoActivity.class));
     }
    ```


    **See:** [Limits on TransactionalBatch requests][].



    [Limits on TransactionalBatch requests]: https://docs.microsoft.com/azure/cosmos-db/concepts-limits
  syntax:
    content: public final class TransactionalBatch
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.TransactionalBatch.<T>createItemOperation(T)
  id: <T>createItemOperation(T)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: <T>createItemOperation(T item)
  nameWithType: TransactionalBatch.<T>createItemOperation(T item)
  fullName: com.azure.cosmos.TransactionalBatch.<T>createItemOperation(T item)
  overload: com.azure.cosmos.TransactionalBatch.createItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to create an item into the batch.
  syntax:
    content: public CosmosItemOperation <T>createItemOperation(T item)
    parameters:
    - id: item
      type: T
      description: A JSON serializable object that must contain an id property.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.<T>createItemOperation(T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  id: <T>createItemOperation(T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: <T>createItemOperation(T item, TransactionalBatchItemRequestOptions requestOptions)
  nameWithType: TransactionalBatch.<T>createItemOperation(T item, TransactionalBatchItemRequestOptions requestOptions)
  fullName: com.azure.cosmos.TransactionalBatch.<T>createItemOperation(T item, TransactionalBatchItemRequestOptions requestOptions)
  overload: com.azure.cosmos.TransactionalBatch.createItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to create an item into the batch.
  syntax:
    content: public CosmosItemOperation <T>createItemOperation(T item, TransactionalBatchItemRequestOptions requestOptions)
    parameters:
    - id: item
      type: T
      description: A JSON serializable object that must contain an id property.
    - id: requestOptions
      type: com.azure.cosmos.TransactionalBatchItemRequestOptions
      description: The options for the item request.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation(java.lang.String,T)
  id: <T>replaceItemOperation(java.lang.String,T)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: <T>replaceItemOperation(String id, T item)
  nameWithType: TransactionalBatch.<T>replaceItemOperation(String id, T item)
  fullName: com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation(String id, T item)
  overload: com.azure.cosmos.TransactionalBatch.replaceItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to replace an item into the batch.
  syntax:
    content: public CosmosItemOperation <T>replaceItemOperation(String id, T item)
    parameters:
    - id: id
      type: java.lang.String
      description: The unique id of the item.
    - id: item
      type: T
      description: A JSON serializable object that must contain an id property.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation(java.lang.String,T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  id: <T>replaceItemOperation(java.lang.String,T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: <T>replaceItemOperation(String id, T item, TransactionalBatchItemRequestOptions requestOptions)
  nameWithType: TransactionalBatch.<T>replaceItemOperation(String id, T item, TransactionalBatchItemRequestOptions requestOptions)
  fullName: com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation(String id, T item, TransactionalBatchItemRequestOptions requestOptions)
  overload: com.azure.cosmos.TransactionalBatch.replaceItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to replace an item into the batch.
  syntax:
    content: public CosmosItemOperation <T>replaceItemOperation(String id, T item, TransactionalBatchItemRequestOptions requestOptions)
    parameters:
    - id: id
      type: java.lang.String
      description: The unique id of the item.
    - id: item
      type: T
      description: A JSON serializable object that must contain an id property.
    - id: requestOptions
      type: com.azure.cosmos.TransactionalBatchItemRequestOptions
      description: The options for the item request.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation(T)
  id: <T>upsertItemOperation(T)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: <T>upsertItemOperation(T item)
  nameWithType: TransactionalBatch.<T>upsertItemOperation(T item)
  fullName: com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation(T item)
  overload: com.azure.cosmos.TransactionalBatch.upsertItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to upsert an item into the batch.
  syntax:
    content: public CosmosItemOperation <T>upsertItemOperation(T item)
    parameters:
    - id: item
      type: T
      description: A JSON serializable object that must contain an id property.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation(T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  id: <T>upsertItemOperation(T,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: <T>upsertItemOperation(T item, TransactionalBatchItemRequestOptions requestOptions)
  nameWithType: TransactionalBatch.<T>upsertItemOperation(T item, TransactionalBatchItemRequestOptions requestOptions)
  fullName: com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation(T item, TransactionalBatchItemRequestOptions requestOptions)
  overload: com.azure.cosmos.TransactionalBatch.upsertItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to upsert an item into the batch.
  syntax:
    content: public CosmosItemOperation <T>upsertItemOperation(T item, TransactionalBatchItemRequestOptions requestOptions)
    parameters:
    - id: item
      type: T
      description: A JSON serializable object that must contain an id property.
    - id: requestOptions
      type: com.azure.cosmos.TransactionalBatchItemRequestOptions
      description: The options for the item request.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.TransactionalBatch(com.azure.cosmos.models.PartitionKey)
  id: TransactionalBatch(com.azure.cosmos.models.PartitionKey)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: TransactionalBatch(PartitionKey partitionKey)
  nameWithType: TransactionalBatch.TransactionalBatch(PartitionKey partitionKey)
  fullName: com.azure.cosmos.TransactionalBatch.TransactionalBatch(PartitionKey partitionKey)
  overload: com.azure.cosmos.TransactionalBatch.TransactionalBatch*
  type: Constructor
  package: com.azure.cosmos
  syntax:
    content: " TransactionalBatch(PartitionKey partitionKey)"
    parameters:
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
- uid: com.azure.cosmos.TransactionalBatch.createTransactionalBatch(com.azure.cosmos.models.PartitionKey)
  id: createTransactionalBatch(com.azure.cosmos.models.PartitionKey)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: createTransactionalBatch(PartitionKey partitionKey)
  nameWithType: TransactionalBatch.createTransactionalBatch(PartitionKey partitionKey)
  fullName: com.azure.cosmos.TransactionalBatch.createTransactionalBatch(PartitionKey partitionKey)
  overload: com.azure.cosmos.TransactionalBatch.createTransactionalBatch*
  type: Method
  package: com.azure.cosmos
  summary: Initializes a new instance of <xref uid="com.azure.cosmos.TransactionalBatch" data-throw-if-not-resolved="false">TransactionalBatch</xref> that will contain operations to be performed across multiple items in the container with the provided partition key in a transactional manner
  syntax:
    content: public static TransactionalBatch createTransactionalBatch(PartitionKey partitionKey)
    parameters:
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: the partition key for all items in the batch.
    return:
      type: com.azure.cosmos.TransactionalBatch
      description: A new instance of <xref uid="com.azure.cosmos.TransactionalBatch" data-throw-if-not-resolved="false">TransactionalBatch</xref>.
- uid: com.azure.cosmos.TransactionalBatch.deleteItemOperation(java.lang.String)
  id: deleteItemOperation(java.lang.String)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: deleteItemOperation(String id)
  nameWithType: TransactionalBatch.deleteItemOperation(String id)
  fullName: com.azure.cosmos.TransactionalBatch.deleteItemOperation(String id)
  overload: com.azure.cosmos.TransactionalBatch.deleteItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to delete an item into the batch.
  syntax:
    content: public CosmosItemOperation deleteItemOperation(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: The unique id of the item.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.deleteItemOperation(java.lang.String,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  id: deleteItemOperation(java.lang.String,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: deleteItemOperation(String id, TransactionalBatchItemRequestOptions requestOptions)
  nameWithType: TransactionalBatch.deleteItemOperation(String id, TransactionalBatchItemRequestOptions requestOptions)
  fullName: com.azure.cosmos.TransactionalBatch.deleteItemOperation(String id, TransactionalBatchItemRequestOptions requestOptions)
  overload: com.azure.cosmos.TransactionalBatch.deleteItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to delete an item into the batch.
  syntax:
    content: public CosmosItemOperation deleteItemOperation(String id, TransactionalBatchItemRequestOptions requestOptions)
    parameters:
    - id: id
      type: java.lang.String
      description: The unique id of the item.
    - id: requestOptions
      type: com.azure.cosmos.TransactionalBatchItemRequestOptions
      description: The options for the item request.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.getOperations()
  id: getOperations()
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: getOperations()
  nameWithType: TransactionalBatch.getOperations()
  fullName: com.azure.cosmos.TransactionalBatch.getOperations()
  overload: com.azure.cosmos.TransactionalBatch.getOperations*
  type: Method
  package: com.azure.cosmos
  summary: Return the list of operation in an unmodifiable instance so no one can change it in the down path.
  syntax:
    content: public List<CosmosItemOperation> getOperations()
    return:
      type: java.util.List<com.azure.cosmos.CosmosItemOperation>
      description: The list of operations which are to be executed.
- uid: com.azure.cosmos.TransactionalBatch.getPartitionKeyValue()
  id: getPartitionKeyValue()
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: getPartitionKeyValue()
  nameWithType: TransactionalBatch.getPartitionKeyValue()
  fullName: com.azure.cosmos.TransactionalBatch.getPartitionKeyValue()
  overload: com.azure.cosmos.TransactionalBatch.getPartitionKeyValue*
  type: Method
  package: com.azure.cosmos
  summary: Return the partition key for this batch.
  syntax:
    content: public PartitionKey getPartitionKeyValue()
    return:
      type: com.azure.cosmos.models.PartitionKey
      description: The partition key for this batch.
- uid: com.azure.cosmos.TransactionalBatch.readItemOperation(java.lang.String)
  id: readItemOperation(java.lang.String)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: readItemOperation(String id)
  nameWithType: TransactionalBatch.readItemOperation(String id)
  fullName: com.azure.cosmos.TransactionalBatch.readItemOperation(String id)
  overload: com.azure.cosmos.TransactionalBatch.readItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to read an item into the batch.
  syntax:
    content: public CosmosItemOperation readItemOperation(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: The unique id of the item.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
- uid: com.azure.cosmos.TransactionalBatch.readItemOperation(java.lang.String,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  id: readItemOperation(java.lang.String,com.azure.cosmos.TransactionalBatchItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.7.1
  parent: com.azure.cosmos.TransactionalBatch
  langs:
  - java
  name: readItemOperation(String id, TransactionalBatchItemRequestOptions requestOptions)
  nameWithType: TransactionalBatch.readItemOperation(String id, TransactionalBatchItemRequestOptions requestOptions)
  fullName: com.azure.cosmos.TransactionalBatch.readItemOperation(String id, TransactionalBatchItemRequestOptions requestOptions)
  overload: com.azure.cosmos.TransactionalBatch.readItemOperation*
  type: Method
  package: com.azure.cosmos
  summary: Adds an operation to read an item into the batch.
  syntax:
    content: public CosmosItemOperation readItemOperation(String id, TransactionalBatchItemRequestOptions requestOptions)
    parameters:
    - id: id
      type: java.lang.String
      description: The unique id of the item.
    - id: requestOptions
      type: com.azure.cosmos.TransactionalBatchItemRequestOptions
      description: The options for the item request.
    return:
      type: com.azure.cosmos.CosmosItemOperation
      description: The transactional batch instance with the operation added.
references:
- uid: com.azure.cosmos.models.PartitionKey
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: com.azure.cosmos.models.PartitionKey
- uid: com.azure.cosmos.TransactionalBatch.TransactionalBatch*
  name: TransactionalBatch
  nameWithType: TransactionalBatch.TransactionalBatch
  fullName: com.azure.cosmos.TransactionalBatch.TransactionalBatch
  package: com.azure.cosmos
- uid: com.azure.cosmos.TransactionalBatch.createTransactionalBatch*
  name: createTransactionalBatch
  nameWithType: TransactionalBatch.createTransactionalBatch
  fullName: com.azure.cosmos.TransactionalBatch.createTransactionalBatch
  package: com.azure.cosmos
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.CosmosItemOperation
  name: CosmosItemOperation
  nameWithType: CosmosItemOperation
  fullName: com.azure.cosmos.CosmosItemOperation
- uid: com.azure.cosmos.TransactionalBatch.createItemOperation*
  name: <T>createItemOperation
  nameWithType: TransactionalBatch.<T>createItemOperation
  fullName: com.azure.cosmos.TransactionalBatch.<T>createItemOperation
  package: com.azure.cosmos
- uid: com.azure.cosmos.TransactionalBatchItemRequestOptions
  name: TransactionalBatchItemRequestOptions
  nameWithType: TransactionalBatchItemRequestOptions
  fullName: com.azure.cosmos.TransactionalBatchItemRequestOptions
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.TransactionalBatch.deleteItemOperation*
  name: deleteItemOperation
  nameWithType: TransactionalBatch.deleteItemOperation
  fullName: com.azure.cosmos.TransactionalBatch.deleteItemOperation
  package: com.azure.cosmos
- uid: com.azure.cosmos.TransactionalBatch.readItemOperation*
  name: readItemOperation
  nameWithType: TransactionalBatch.readItemOperation
  fullName: com.azure.cosmos.TransactionalBatch.readItemOperation
  package: com.azure.cosmos
- uid: com.azure.cosmos.TransactionalBatch.replaceItemOperation*
  name: <T>replaceItemOperation
  nameWithType: TransactionalBatch.<T>replaceItemOperation
  fullName: com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation
  package: com.azure.cosmos
- uid: com.azure.cosmos.TransactionalBatch.upsertItemOperation*
  name: <T>upsertItemOperation
  nameWithType: TransactionalBatch.<T>upsertItemOperation
  fullName: com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation
  package: com.azure.cosmos
- uid: java.util.List<com.azure.cosmos.CosmosItemOperation>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.cosmos.CosmosItemOperation
    name: CosmosItemOperation
    fullName: com.azure.cosmos.CosmosItemOperation
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.TransactionalBatch.getOperations*
  name: getOperations
  nameWithType: TransactionalBatch.getOperations
  fullName: com.azure.cosmos.TransactionalBatch.getOperations
  package: com.azure.cosmos
- uid: com.azure.cosmos.TransactionalBatch.getPartitionKeyValue*
  name: getPartitionKeyValue
  nameWithType: TransactionalBatch.getPartitionKeyValue
  fullName: com.azure.cosmos.TransactionalBatch.getPartitionKeyValue
  package: com.azure.cosmos
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
