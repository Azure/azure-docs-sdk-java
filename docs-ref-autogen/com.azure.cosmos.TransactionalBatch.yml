### YamlMime:JavaType
uid: "com.azure.cosmos.TransactionalBatch"
fullName: "com.azure.cosmos.TransactionalBatch"
name: "TransactionalBatch"
nameWithType: "TransactionalBatch"
summary: "Represents a batch of operations against items with the same <xref uid=\"com.azure.cosmos.models.PartitionKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PartitionKey\"></xref> in a container that will be performed in a transactional manner at the Azure Cosmos DB service.\n\nUse <xref uid=\"com.azure.cosmos.TransactionalBatch.createTransactionalBatch(com.azure.cosmos.models.PartitionKey)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransactionalBatch#createTransactionalBatch(PartitionKey)\"></xref> to create an instance of TransactionalBatch. **Example** This example atomically modifies a set of items as a batch.\n\n```java\npublic class ToDoActivity {\n     public final String type;\n     public final String id;\n     public final String status;\n     public ToDoActivity(String type, String id, String status) {\n         this.type = type;\n         this.id = id;\n         this.status = status;\n     }\n }\n\n String activityType = \"personal\";\n\n ToDoActivity test1 = new ToDoActivity(activityType, \"learning\", \"ToBeDone\");\n ToDoActivity test2 = new ToDoActivity(activityType, \"shopping\", \"Done\");\n ToDoActivity test3 = new ToDoActivity(activityType, \"swimming\", \"ToBeDone\");\n\n TransactionalBatch batch = TransactionalBatch.createTransactionalBatch(new Cosmos.PartitionKey(activityType));\n batch.createItemOperation(test1);\n batch.replaceItemOperation(test2.id, test2);\n batch.upsertItemOperation(test3);\n batch.deleteItemOperation(\"reading\");\n\n TransactionalBatchResponse response = container.executeTransactionalBatch(batch);\n\n if (!response.isSuccessStatusCode()) {\n      // Handle and log exception\n      return;\n }\n\n // Look up interested results - e.g., via typed access on operation results\n\n TransactionalBatchOperationResult result = response.get(0);\n ToDoActivity readActivity = result.getItem(ToDoActivity.class);\n```\n\n**Example**\n\nThis example atomically reads a set of items as a batch.\n\n```java\nString activityType = \"personal\";\n\n TransactionalBatch batch = TransactionalBatch.createTransactionalBatch(new Cosmos.PartitionKey(activityType));\n batch.readItemOperation(\"playing\");\n batch.readItemOperation(\"walking\");\n batch.readItemOperation(\"jogging\");\n batch.readItemOperation(\"running\");\n\n TransactionalBatchResponse response = container.executeTransactionalBatch(batch);\n List resultItems = new ArrayList();\n\n for (int i = 0; i < response.size(); i++) {\n     TransactionalBatchOperationResult result = response.get(0);\n     resultItems.add(result.getItem(ToDoActivity.class));\n }\n```\n\n**See:** [Limits on TransactionalBatch requests][].\n\n\n[Limits on TransactionalBatch requests]: https://docs.microsoft.com/azure/cosmos-db/concepts-limits"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TransactionalBatch"
methods:
- "com.azure.cosmos.TransactionalBatch.<T>createItemOperation(T)"
- "com.azure.cosmos.TransactionalBatch.<T>createItemOperation(T,com.azure.cosmos.TransactionalBatchItemRequestOptions)"
- "com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation(java.lang.String,T)"
- "com.azure.cosmos.TransactionalBatch.<T>replaceItemOperation(java.lang.String,T,com.azure.cosmos.TransactionalBatchItemRequestOptions)"
- "com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation(T)"
- "com.azure.cosmos.TransactionalBatch.<T>upsertItemOperation(T,com.azure.cosmos.TransactionalBatchItemRequestOptions)"
- "com.azure.cosmos.TransactionalBatch.createTransactionalBatch(com.azure.cosmos.models.PartitionKey)"
- "com.azure.cosmos.TransactionalBatch.deleteItemOperation(java.lang.String)"
- "com.azure.cosmos.TransactionalBatch.deleteItemOperation(java.lang.String,com.azure.cosmos.TransactionalBatchItemRequestOptions)"
- "com.azure.cosmos.TransactionalBatch.getOperations()"
- "com.azure.cosmos.TransactionalBatch.getPartitionKeyValue()"
- "com.azure.cosmos.TransactionalBatch.patchItemOperation(java.lang.String,com.azure.cosmos.CosmosPatchOperations)"
- "com.azure.cosmos.TransactionalBatch.patchItemOperation(java.lang.String,com.azure.cosmos.CosmosPatchOperations,com.azure.cosmos.TransactionalBatchItemRequestOptions)"
- "com.azure.cosmos.TransactionalBatch.readItemOperation(java.lang.String)"
- "com.azure.cosmos.TransactionalBatch.readItemOperation(java.lang.String,com.azure.cosmos.TransactionalBatchItemRequestOptions)"
type: "class"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.11.0
