### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler
  id: _service_remoting_exception_handler
  parent: microsoft.servicefabric.services.remoting.client
  children:
  - microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.handleException(ExceptionInformation,OperationRetrySettings)
  - microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.ServiceRemotingExceptionHandler(String)
  href: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.yml
  langs:
  - java
  name: ServiceRemotingExceptionHandler
  nameWithType: ServiceRemotingExceptionHandler
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingExceptionHandler
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceRemotingExceptionHandler.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceRemotingExceptionHandler.java
    startLine: 21
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>This class provide handling of exceptions encountered in communicating with a service fabric service over remoted interfaces. ServiceRemotingExceptionHandler </p>"
  syntax:
    content: public class ServiceRemotingExceptionHandler implements ExceptionHandler
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.communication.client._exception_handler
- uid: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.handleException(ExceptionInformation,OperationRetrySettings)
  id: handleException(ExceptionInformation,OperationRetrySettings)
  parent: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler
  href: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.yml
  langs:
  - java
  name: handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: ServiceRemotingExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  overload: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.handleException*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceRemotingExceptionHandler.java
    startLine: 46
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>Method that examines the exception and determines how that exception can be handled.</p>\r\n<p></p>"
  syntax:
    content: public ExceptionHandlingResult handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
    parameters:
    - id: exceptionInformation
      type: microsoft.servicefabric.services.communication.client._exception_information
      description: <p>Information about the exception </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client._operation_retry_settings
      description: <p>The operation retry preferences. </p>
    return:
      type: microsoft.servicefabric.services.communication.client._exception_handling_result
      description: <p>true if the exception is handled, false otherwise </p>
  overridden: microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)
- uid: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.ServiceRemotingExceptionHandler(String)
  id: ServiceRemotingExceptionHandler(String)
  parent: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler
  href: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.yml
  langs:
  - java
  name: ServiceRemotingExceptionHandler(String traceId)
  nameWithType: ServiceRemotingExceptionHandler.ServiceRemotingExceptionHandler(String traceId)
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingExceptionHandler.ServiceRemotingExceptionHandler(String traceId)
  overload: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.ServiceRemotingExceptionHandler*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceRemotingExceptionHandler.java
    startLine: 32
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>Constructs a ServiceRemotingExceptionHandler with a specified trace id.</p>\r\n<p></p>"
  syntax:
    content: public ServiceRemotingExceptionHandler(String traceId)
    parameters:
    - id: traceId
      type: "26831127"
      description: <p>Id to use in diagnostics traces from this component. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.ServiceRemotingExceptionHandler*
  name: ServiceRemotingExceptionHandler
  nameWithType: ServiceRemotingExceptionHandler.ServiceRemotingExceptionHandler
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingExceptionHandler.ServiceRemotingExceptionHandler
  package: microsoft.servicefabric.services.remoting.client
- uid: microsoft.servicefabric.services.remoting.client._service_remoting_exception_handler.handleException*
  name: handleException
  nameWithType: ServiceRemotingExceptionHandler.handleException
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingExceptionHandler.handleException
  package: microsoft.servicefabric.services.remoting.client
- uid: microsoft.servicefabric.services.communication.client._exception_handler
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._exception_handler.yml
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: microsoft.servicefabric.services.communication.client.ExceptionHandler
  type: Interface
  summary: <p>Defines the interface for handling the exceptions encountered in communicating with service fabric services. </p>
  syntax:
    content: public interface ExceptionHandler
- uid: microsoft.servicefabric.actors.remoting.client._actor_remoting_exception_handler
  parent: microsoft.servicefabric.actors.remoting.client
  href: microsoft.servicefabric.actors.remoting.client._actor_remoting_exception_handler.yml
  name: ActorRemotingExceptionHandler
  nameWithType: ActorRemotingExceptionHandler
  fullName: microsoft.servicefabric.actors.remoting.client.ActorRemotingExceptionHandler
  type: Class
  summary: >-
    <p>This class provide handling of exceptions encountered in communicating with service fabric actors over remoted actor interfaces.</p>

    <p>

      <b>Remarks:</b> This exception handler handles exceptions related to the following scenarios: </p>

    <p>

      <ul>

        <li>

          <p>&lt;cite&gt;Duplicate Messages:&lt;/cite&gt; </p>

          <p>Operations performed on the actor are retried from the client based on the exception handling logic. These exceptions represent various error condition including service failover. Therefore it is possible for the actors to receive duplicate messages. If a duplicate message is received while previous message is being processed by the actor, runtime return an internal exception to the client. The client then retries the operation to get the result back from the actor. From the actor's perspective duplicate operation will be performed by the clients and it should handle it in the similar manner as if the operation was already processed and then a duplicate message arrived. </p>

          <p></p>

          <p></p>

        </li>

        <li>

          <p>&lt;cite&gt;<xref uid="microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception" data-throw-if-not-resolved="false">ActorConcurrencyLockTimeoutException</xref>:&lt;/cite&gt; </p>

          <p>Operations on the actors are performed using a turn based concurrency lock ( <xref uid="" data-throw-if-not-resolved="false">ActorConcurrencySettings</xref>) that supports logical call context based reentrancy. In case of the long running actor operations it is possible for acquisition of this lock to time out. The acquisition of the lock can also time out in case of the deadlock situations (actor A and actor B calling each other almost at the same time). </p>

          <p></p>

          <p>The exception related to concurrency lock timeout is handled by returning <xref uid="" data-throw-if-not-resolved="false">ExceptionHandlingRetryResult</xref> from the <xref uid="microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)" data-throw-if-not-resolved="false">ExceptionHandler#handleException(ExceptionInformation, OperationRetrySettings)</xref> method if the client performing the operation is not another actor. The <xref uid="" data-throw-if-not-resolved="false">ExceptionHandlingRetryResult#isTransient</xref> property of the <xref uid="" data-throw-if-not-resolved="false">ExceptionHandlingRetryResult</xref> is set to true, the <xref uid="" data-throw-if-not-resolved="false">ExceptionHandlingRetryResult</xref>'s retryDelay property is set to a random value up to <xref uid="" data-throw-if-not-resolved="false">OperationRetrySettings</xref>'s MaxRetryBackoffIntervalOnTransientErrors and <xref uid="" data-throw-if-not-resolved="false">ExceptionHandlingRetryResult</xref>'s MaxRetryCount property is set to <xref uid="" data-throw-if-not-resolved="false">Integer#MAX_VALUE</xref>. </p>

          <p></p>

          <p>The exception related to concurrency lock timeout is handled by returning <xref uid="" data-throw-if-not-resolved="false">ExceptionHandlingThrowResult</xref> from the <xref uid="microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)" data-throw-if-not-resolved="false">ExceptionHandler#handleException(ExceptionInformation, OperationRetrySettings)</xref> method, if the client performing the operation is another actor. In the deadlock situations this allows the call chain to unwind all the way back to the original client and the operation is then retried from there. </p>

          <p></p>

        </li>

      </ul>

    </p>
  syntax:
    content: public class ActorRemotingExceptionHandler extends ServiceRemotingExceptionHandler
- uid: microsoft.servicefabric.services.communication.client._exception_handling_result
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._exception_handling_result.yml
  name: ExceptionHandlingResult
  nameWithType: ExceptionHandlingResult
  fullName: microsoft.servicefabric.services.communication.client.ExceptionHandlingResult
  type: Class
  summary: <p>Specifies the base class for the result from handling an exception during client to service communication. </p>
  syntax:
    content: public class ExceptionHandlingResult
- uid: microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client._exception_handler
  href: microsoft.servicefabric.services.communication.client._exception_handler.yml
  name: handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: ExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  fullName: microsoft.servicefabric.services.communication.client.ExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  type: Method
  summary: >-
    <p>Method that examines the exception and determines how that exception can be handled.</p>

    <p></p>
  syntax:
    content: public ExceptionHandlingResult handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
    parameters:
    - id: exceptionInformation
      type: microsoft.servicefabric.services.communication.client._exception_information
      description: <p>Information about the exception. </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client._operation_retry_settings
      description: <p>The operation retry preferences. </p>
    return:
      type: microsoft.servicefabric.services.communication.client._exception_handling_result
      description: <p>true if the exception is handled, false otherwise </p>
- uid: microsoft.servicefabric.services.communication.client._exception_information
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._exception_information.yml
  name: ExceptionInformation
  nameWithType: ExceptionInformation
  fullName: microsoft.servicefabric.services.communication.client.ExceptionInformation
  type: Class
  summary: <p>Specifies the class that encapsulates the exception seen on the communication channel and additional information required to handle that exception. </p>
  syntax:
    content: public class ExceptionInformation
- uid: microsoft.servicefabric.services.communication.client._operation_retry_settings
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._operation_retry_settings.yml
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: microsoft.servicefabric.services.communication.client.OperationRetrySettings
  type: Class
  syntax:
    content: public class OperationRetrySettings
