### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties
  id: TwinProperties
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.getDesired()
  langs:
  - java
  name: TwinProperties
  nameWithType: TwinProperties
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties
  type: Class
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    Representation of a single Twin Properties for the Device Provisioning Service.


    The Properties on the TwinState shall contains one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> of **desired** property.


    The desired property is a collection that can contain a associated <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinMetadata" data-throw-if-not-resolved="false">TwinMetadata</xref>.


    These metadata are provided by the Service and contains information about the last updated date time, and version.


    For instance, the following is a valid desired property, represented as `properties.desired` in the rest API.


    ```java

    {
              "desired": {
                  "MaxSpeed":{
                      "Value":500,
                      "NewValue":300
                  },
                  "$metadata":{
                      "$lastUpdated":"2017-09-21T02:07:44.238Z",
                      "$lastUpdatedVersion":4,
                      "MaxSpeed":{
                          "$lastUpdated":"2017-09-21T02:07:44.238Z",
                          "$lastUpdatedVersion":4,
                          "Value":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":4
                          },
                          "NewValue":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":4
                          }
                      }
                  },
                  "$version":4
              }
          }
    ```
  syntax:
    content: public class TwinProperties
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.TwinProperties()
  id: TwinProperties()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties
  langs:
  - java
  name: TwinProperties()
  nameWithType: TwinProperties.TwinProperties()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.TwinProperties()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.TwinProperties*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    Empty constructor


    Used only by the tools that will deserialize this class.
  syntax:
    content: " TwinProperties()"
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.TwinProperties(com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection)
  id: TwinProperties(com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties
  langs:
  - java
  name: TwinProperties(TwinCollection desired)
  nameWithType: TwinProperties.TwinProperties(TwinCollection desired)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.TwinProperties(TwinCollection desired)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.TwinProperties*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    CONSTRUCTOR


    This constructor creates an instance of the TwinProperties with the provided <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> desired property.


    When serialized, this class will looks like the following example:


    ```java

    "desired":{
          "MaxSpeed":{
              "Value":500,
              "NewValue":300
          },
          "$version":4
      }
    ```
  syntax:
    content: " TwinProperties(TwinCollection desired)"
    parameters:
    - id: desired
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> with the initial desired property. It cannot be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.getDesired()
  id: getDesired()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties
  langs:
  - java
  name: getDesired()
  nameWithType: TwinProperties.getDesired()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.getDesired()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.getDesired*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: Getter for the desired property.
  syntax:
    content: public TwinCollection getDesired()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
      description: The <code>TwinCollection</code> with the desired property content. It can be <code>null</code>.
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.TwinProperties*
  name: TwinProperties
  nameWithType: TwinProperties.TwinProperties
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.TwinProperties
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.getDesired*
  name: getDesired
  nameWithType: TwinProperties.getDesired
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.getDesired
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
