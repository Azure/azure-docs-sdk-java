### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  id: ManagedDatabasesClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent
  children:
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstanceAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstanceAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  langs:
  - java
  name: ManagedDatabasesClient
  nameWithType: ManagedDatabasesClient
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  type: Interface
  package: com.azure.resourcemanager.sql.fluent
  summary: An instance of this class provides access to all the operations defined in ManagedDatabasesClient.
  syntax:
    content: public interface ManagedDatabasesClient
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClient.beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  nameWithType: ManagedDatabasesClient.beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginCompleteRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginCompleteRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClient.beginCompleteRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestoreAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginCompleteRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClient.beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract SyncPoller<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  nameWithType: ManagedDatabasesClient.beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract SyncPoller<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClient.beginCreateOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract PollerFlux<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginCreateOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClient.beginDelete(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a managed database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabasesClient.beginDelete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a managed database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClient.beginDeleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDeleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a managed database.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClient.beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract SyncPoller<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  nameWithType: ManagedDatabasesClient.beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract SyncPoller<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClient.beginUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract PollerFlux<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClient.completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public abstract void completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  nameWithType: ManagedDatabasesClient.completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public abstract void completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: completeRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: completeRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClient.completeRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public abstract Mono<Void> completeRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: completeRestoreWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: completeRestoreWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClient.completeRestoreWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> completeRestoreWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClient.createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract ManagedDatabaseInner createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  nameWithType: ManagedDatabasesClient.createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract ManagedDatabaseInner createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClient.createOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract Mono<ManagedDatabaseInner> createOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: delete(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClient.delete(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a managed database.
  syntax:
    content: public abstract void delete(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: delete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabasesClient.delete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a managed database.
  syntax:
    content: public abstract void delete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClient.deleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a managed database.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClient.deleteWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a managed database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: get(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClient.get(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.get(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a managed database.
  syntax:
    content: public abstract ManagedDatabaseInner get(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClient.getAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a managed database.
  syntax:
    content: public abstract Mono<ManagedDatabaseInner> getAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabasesClient.getWithResponse(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponse(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a managed database.
  syntax:
    content: public abstract Response<ManagedDatabaseInner> getWithResponse(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClient.getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a managed database.
  syntax:
    content: public abstract Mono<Response<ManagedDatabaseInner>> getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>>
      description: a managed database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance(java.lang.String,java.lang.String)
  id: listByInstance(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: listByInstance(String resourceGroupName, String managedInstanceName)
  nameWithType: ManagedDatabasesClient.listByInstance(String resourceGroupName, String managedInstanceName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance(String resourceGroupName, String managedInstanceName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of managed databases.
  syntax:
    content: public abstract PagedIterable<ManagedDatabaseInner> listByInstance(String resourceGroupName, String managedInstanceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of managed databases.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: listByInstance(String resourceGroupName, String managedInstanceName, Context context)
  nameWithType: ManagedDatabasesClient.listByInstance(String resourceGroupName, String managedInstanceName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance(String resourceGroupName, String managedInstanceName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of managed databases.
  syntax:
    content: public abstract PagedIterable<ManagedDatabaseInner> listByInstance(String resourceGroupName, String managedInstanceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of managed databases.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstanceAsync(java.lang.String,java.lang.String)
  id: listByInstanceAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: listByInstanceAsync(String resourceGroupName, String managedInstanceName)
  nameWithType: ManagedDatabasesClient.listByInstanceAsync(String resourceGroupName, String managedInstanceName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstanceAsync(String resourceGroupName, String managedInstanceName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstanceAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of managed databases.
  syntax:
    content: public abstract PagedFlux<ManagedDatabaseInner> listByInstanceAsync(String resourceGroupName, String managedInstanceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of managed databases.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance(java.lang.String,java.lang.String)
  id: listInaccessibleByInstance(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: listInaccessibleByInstance(String resourceGroupName, String managedInstanceName)
  nameWithType: ManagedDatabasesClient.listInaccessibleByInstance(String resourceGroupName, String managedInstanceName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance(String resourceGroupName, String managedInstanceName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of inaccessible managed databases in a managed instance.
  syntax:
    content: public abstract PagedIterable<ManagedDatabaseInner> listInaccessibleByInstance(String resourceGroupName, String managedInstanceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of inaccessible managed databases in a managed instance.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listInaccessibleByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: listInaccessibleByInstance(String resourceGroupName, String managedInstanceName, Context context)
  nameWithType: ManagedDatabasesClient.listInaccessibleByInstance(String resourceGroupName, String managedInstanceName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance(String resourceGroupName, String managedInstanceName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of inaccessible managed databases in a managed instance.
  syntax:
    content: public abstract PagedIterable<ManagedDatabaseInner> listInaccessibleByInstance(String resourceGroupName, String managedInstanceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of inaccessible managed databases in a managed instance.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstanceAsync(java.lang.String,java.lang.String)
  id: listInaccessibleByInstanceAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: listInaccessibleByInstanceAsync(String resourceGroupName, String managedInstanceName)
  nameWithType: ManagedDatabasesClient.listInaccessibleByInstanceAsync(String resourceGroupName, String managedInstanceName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstanceAsync(String resourceGroupName, String managedInstanceName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstanceAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of inaccessible managed databases in a managed instance.
  syntax:
    content: public abstract PagedFlux<ManagedDatabaseInner> listInaccessibleByInstanceAsync(String resourceGroupName, String managedInstanceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of inaccessible managed databases in a managed instance.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClient.update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract ManagedDatabaseInner update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  nameWithType: ManagedDatabasesClient.update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract ManagedDatabaseInner update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClient.updateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract Mono<ManagedDatabaseInner> updateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClient.updateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a managed database resource.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstanceAsync*
  name: listByInstanceAsync
  nameWithType: ManagedDatabasesClient.listByInstanceAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstanceAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance*
  name: listByInstance
  nameWithType: ManagedDatabasesClient.listByInstance
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listByInstance
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ManagedDatabasesClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getAsync*
  name: getAsync
  nameWithType: ManagedDatabasesClient.getAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  name: ManagedDatabaseInner
  nameWithType: ManagedDatabaseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.get*
  name: get
  nameWithType: ManagedDatabasesClient.get
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.get
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponse*
  name: getWithResponse
  nameWithType: ManagedDatabasesClient.getWithResponse
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.getWithResponse
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ManagedDatabasesClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: ManagedDatabasesClient.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: ManagedDatabasesClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ManagedDatabasesClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: ManagedDatabasesClient.createOrUpdate
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.createOrUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ManagedDatabasesClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: ManagedDatabasesClient.beginDeleteAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDeleteAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete*
  name: beginDelete
  nameWithType: ManagedDatabasesClient.beginDelete
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginDelete
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteAsync*
  name: deleteAsync
  nameWithType: ManagedDatabasesClient.deleteAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.deleteAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete*
  name: delete
  nameWithType: ManagedDatabasesClient.delete
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.delete
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
  name: ManagedDatabaseUpdate
  nameWithType: ManagedDatabaseUpdate
  fullName: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: ManagedDatabasesClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: ManagedDatabasesClient.beginUpdateAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate*
  name: beginUpdate
  nameWithType: ManagedDatabasesClient.beginUpdate
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateAsync*
  name: updateAsync
  nameWithType: ManagedDatabasesClient.updateAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.updateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update*
  name: update
  nameWithType: ManagedDatabasesClient.update
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.update
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstanceAsync*
  name: listInaccessibleByInstanceAsync
  nameWithType: ManagedDatabasesClient.listInaccessibleByInstanceAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstanceAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance*
  name: listInaccessibleByInstance
  nameWithType: ManagedDatabasesClient.listInaccessibleByInstance
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.listInaccessibleByInstance
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreWithResponseAsync*
  name: completeRestoreWithResponseAsync
  nameWithType: ManagedDatabasesClient.completeRestoreWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestoreAsync*
  name: beginCompleteRestoreAsync
  nameWithType: ManagedDatabasesClient.beginCompleteRestoreAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestoreAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore*
  name: beginCompleteRestore
  nameWithType: ManagedDatabasesClient.beginCompleteRestore
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.beginCompleteRestore
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreAsync*
  name: completeRestoreAsync
  nameWithType: ManagedDatabasesClient.completeRestoreAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestoreAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore*
  name: completeRestore
  nameWithType: ManagedDatabasesClient.completeRestore
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient.completeRestore
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  name: ManagedDatabaseInner>,ManagedDatabaseInner
  nameWithType: ManagedDatabaseInner>,ManagedDatabaseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
