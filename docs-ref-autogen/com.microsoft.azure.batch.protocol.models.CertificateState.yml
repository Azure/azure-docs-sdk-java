### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.CertificateState
  id: CertificateState
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.CertificateState.ACTIVE
  - com.microsoft.azure.batch.protocol.models.CertificateState.DELETE_FAILED
  - com.microsoft.azure.batch.protocol.models.CertificateState.DELETING
  - com.microsoft.azure.batch.protocol.models.CertificateState.fromString(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.CertificateState.toString()
  - com.microsoft.azure.batch.protocol.models.CertificateState.valueOf(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.CertificateState.values()
  langs:
  - java
  name: CertificateState
  nameWithType: CertificateState
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState
  type: Enum
  package: com.microsoft.azure.batch.protocol.models
  summary: Defines values for CertificateState.
  syntax:
    content: public enum CertificateState extends Enum<CertificateState>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.ACTIVE
  id: ACTIVE
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CertificateState
  langs:
  - java
  name: ACTIVE
  nameWithType: CertificateState.ACTIVE
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.ACTIVE
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The Certificate is available for use in Pools.
  syntax:
    content: public static final CertificateState ACTIVE
    return:
      type: com.microsoft.azure.batch.protocol.models.CertificateState
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.CertificateState(java.lang.String)
  id: CertificateState(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CertificateState
  langs:
  - java
  name: CertificateState(String value)
  nameWithType: CertificateState.CertificateState(String value)
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.CertificateState(String value)
  overload: com.microsoft.azure.batch.protocol.models.CertificateState.CertificateState*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: private CertificateState(String value)
    parameters:
    - id: value
      type: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.DELETE_FAILED
  id: DELETE_FAILED
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CertificateState
  langs:
  - java
  name: DELETE_FAILED
  nameWithType: CertificateState.DELETE_FAILED
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.DELETE_FAILED
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The user requested that the Certificate be deleted, but there are Pools that still have references to the Certificate, or it is still installed on one or more Nodes. (The latter can occur if the Certificate has been removed from the Pool, but the Compute Node has not yet restarted. Compute Nodes refresh their Certificates only when they restart.) You may use the cancel Certificate delete operation to cancel the delete, or the delete Certificate operation to retry the delete.
  syntax:
    content: public static final CertificateState DELETE_FAILED
    return:
      type: com.microsoft.azure.batch.protocol.models.CertificateState
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.DELETING
  id: DELETING
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CertificateState
  langs:
  - java
  name: DELETING
  nameWithType: CertificateState.DELETING
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.DELETING
  type: Field
  package: com.microsoft.azure.batch.protocol.models
  summary: The user has requested that the Certificate be deleted, but the delete operation has not yet completed. You may not reference the Certificate when creating or updating Pools.
  syntax:
    content: public static final CertificateState DELETING
    return:
      type: com.microsoft.azure.batch.protocol.models.CertificateState
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.fromString(java.lang.String)
  id: fromString(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CertificateState
  langs:
  - java
  name: fromString(String value)
  nameWithType: CertificateState.fromString(String value)
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.fromString(String value)
  overload: com.microsoft.azure.batch.protocol.models.CertificateState.fromString*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Parses a serialized value to a CertificateState instance.
  syntax:
    content: public static CertificateState fromString(String value)
    parameters:
    - id: value
      type: java.lang.String
      description: the serialized value to parse.
    return:
      type: com.microsoft.azure.batch.protocol.models.CertificateState
      description: the parsed CertificateState object, or null if unable to parse.
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.toString()
  id: toString()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CertificateState
  langs:
  - java
  name: toString()
  nameWithType: CertificateState.toString()
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.toString()
  overload: com.microsoft.azure.batch.protocol.models.CertificateState.toString*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CertificateState
  langs:
  - java
  name: valueOf(String name)
  nameWithType: CertificateState.valueOf(String name)
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.valueOf(String name)
  overload: com.microsoft.azure.batch.protocol.models.CertificateState.valueOf*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public static CertificateState valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.microsoft.azure.batch.protocol.models.CertificateState
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.values()
  id: values()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.CertificateState
  langs:
  - java
  name: values()
  nameWithType: CertificateState.values()
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.values()
  overload: com.microsoft.azure.batch.protocol.models.CertificateState.values*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public static CertificateState[] values()
    return:
      type: com.microsoft.azure.batch.protocol.models.CertificateState[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.CertificateState*
  name: CertificateState
  nameWithType: CertificateState.CertificateState
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.CertificateState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CertificateState[]
  spec.java:
  - uid: com.microsoft.azure.batch.protocol.models.CertificateState
    name: CertificateState
    fullName: com.microsoft.azure.batch.protocol.models.CertificateState
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.values*
  name: values
  nameWithType: CertificateState.values
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.values
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.valueOf*
  name: valueOf
  nameWithType: CertificateState.valueOf
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.valueOf
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.fromString*
  name: fromString
  nameWithType: CertificateState.fromString
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.fromString
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CertificateState.toString*
  name: toString
  nameWithType: CertificateState.toString
  fullName: com.microsoft.azure.batch.protocol.models.CertificateState.toString
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Enum<com.microsoft.azure.batch.protocol.models.CertificateState>
  name: Enum<CertificateState>
  nameWithType: Enum<CertificateState>
  fullName: java.lang.Enum<com.microsoft.azure.batch.protocol.models.CertificateState>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
