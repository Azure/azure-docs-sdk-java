### YamlMime:JavaType
uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.TenantAccessGits"
fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.TenantAccessGits"
name: "TenantAccessGits"
nameWithType: "TenantAccessGits"
summary: "Type representing Tenant<wbr>Access<wbr>Gits."
syntax: "public interface TenantAccessGits extends HasInner<TenantAccessGitsInner>"
methods:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.TenantAccessGits.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.TenantAccessGits.getAsync(String resourceGroupName, String serviceName)"
  name: "getAsync(String resourceGroupName, String serviceName)"
  nameWithType: "TenantAccessGits.getAsync(String resourceGroupName, String serviceName)"
  summary: "Gets the Git access configuration for the tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AccessInformationContract> getAsync(String resourceGroupName, String serviceName)"
  desc: "Gets the Git access configuration for the tenant."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.AccessInformationContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.AccessInformationContract&text=AccessInformationContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.TenantAccessGits.regeneratePrimaryKeyAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.TenantAccessGits.regeneratePrimaryKeyAsync(String resourceGroupName, String serviceName)"
  name: "regeneratePrimaryKeyAsync(String resourceGroupName, String serviceName)"
  nameWithType: "TenantAccessGits.regeneratePrimaryKeyAsync(String resourceGroupName, String serviceName)"
  summary: "Regenerate primary access key for GIT."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable regeneratePrimaryKeyAsync(String resourceGroupName, String serviceName)"
  desc: "Regenerate primary access key for GIT."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.TenantAccessGits.regenerateSecondaryKeyAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.TenantAccessGits.regenerateSecondaryKeyAsync(String resourceGroupName, String serviceName)"
  name: "regenerateSecondaryKeyAsync(String resourceGroupName, String serviceName)"
  nameWithType: "TenantAccessGits.regenerateSecondaryKeyAsync(String resourceGroupName, String serviceName)"
  summary: "Regenerate secondary access key for GIT."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable regenerateSecondaryKeyAsync(String resourceGroupName, String serviceName)"
  desc: "Regenerate secondary access key for GIT."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Type representing TenantAccessGits."
implements:
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.TenantAccessGitsInner?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.TenantAccessGitsInner&text=TenantAccessGitsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.apimanagement.v2019_01_01"
artifact: com.microsoft.azure.apimanagement.v2019_01_01:azure-mgmt-apimanagement:1.0.0-beta-1
