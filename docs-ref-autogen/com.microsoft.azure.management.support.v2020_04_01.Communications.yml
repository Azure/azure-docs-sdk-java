### YamlMime:JavaType
uid: "com.microsoft.azure.management.support.v2020_04_01.Communications"
fullName: "com.microsoft.azure.management.support.v2020_04_01.Communications"
name: "Communications"
nameWithType: "Communications"
summary: "Type representing Communications."
syntax: "public interface Communications extends SupportsCreating<CommunicationDetails.DefinitionStages.Blank>, HasInner<CommunicationsInner>"
methods:
- uid: "com.microsoft.azure.management.support.v2020_04_01.Communications.checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput)"
  fullName: "com.microsoft.azure.management.support.v2020_04_01.Communications.checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "Communications.checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput?alt=com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CheckNameAvailabilityOutput> checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This API should be used to check the uniqueness of the name for adding a new communication to the support ticket."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityOutput?alt=com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityOutput&text=CheckNameAvailabilityOutput\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.support.v2020_04_01.Communications.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.support.v2020_04_01.Communications.getAsync(String supportTicketName, String communicationName)"
  name: "getAsync(String supportTicketName, String communicationName)"
  nameWithType: "Communications.getAsync(String supportTicketName, String communicationName)"
  summary: "Returns communication details for a support ticket."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Communication name."
    name: "communicationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CommunicationDetails> getAsync(String supportTicketName, String communicationName)"
  desc: "Returns communication details for a support ticket."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.support.v2020_04_01.CommunicationDetails?alt=com.microsoft.azure.management.support.v2020_04_01.CommunicationDetails&text=CommunicationDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.support.v2020_04_01.Communications.listAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.support.v2020_04_01.Communications.listAsync(String supportTicketName)"
  name: "listAsync(String supportTicketName)"
  nameWithType: "Communications.listAsync(String supportTicketName)"
  summary: "Lists all communications (attachments not included) for a support ticket."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CommunicationDetails> listAsync(String supportTicketName)"
  desc: "Lists all communications (attachments not included) for a support ticket. <br/></br> You can also filter support ticket communications by \\_CreatedDate\\_ or \\_CommunicationType\\_ using the $filter parameter. The only type of communication supported today is \\_Web\\_. Output will be a paged result with \\_nextLink\\_, using which you can retrieve the next set of Communication results. <br/><br/>Support ticket data is available for 12 months after ticket creation. If a ticket was created more than 12 months ago, a request for data might cause an error."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.support.v2020_04_01.CommunicationDetails?alt=com.microsoft.azure.management.support.v2020_04_01.CommunicationDetails&text=CommunicationDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing Communications."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.support.v2020_04_01.CommunicationDetails.DefinitionStages.Blank?alt=com.microsoft.azure.management.support.v2020_04_01.CommunicationDetails.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.support.v2020_04_01.implementation.CommunicationsInner?alt=com.microsoft.azure.management.support.v2020_04_01.implementation.CommunicationsInner&text=CommunicationsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.support.v2020_04_01"
artifact: com.microsoft.azure.support.v2020_04_01:azure-mgmt-support:1.0.0
