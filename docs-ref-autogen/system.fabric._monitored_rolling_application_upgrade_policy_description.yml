### YamlMime:ManagedReference
items:
- uid: system.fabric._monitored_rolling_application_upgrade_policy_description
  id: _monitored_rolling_application_upgrade_policy_description
  parent: system.fabric
  children:
  - system.fabric._monitored_rolling_application_upgrade_policy_description.getHealthPolicy()
  - system.fabric._monitored_rolling_application_upgrade_policy_description.MonitoredRollingApplicationUpgradePolicyDescription()
  - system.fabric._monitored_rolling_application_upgrade_policy_description.setHealthPolicy(ApplicationHealthPolicy)
  href: system.fabric._monitored_rolling_application_upgrade_policy_description.yml
  langs:
  - java
  name: MonitoredRollingApplicationUpgradePolicyDescription
  nameWithType: MonitoredRollingApplicationUpgradePolicyDescription
  fullName: system.fabric.MonitoredRollingApplicationUpgradePolicyDescription
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/MonitoredRollingApplicationUpgradePolicyDescription.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/MonitoredRollingApplicationUpgradePolicyDescription.java
    startLine: 6
  package: system.fabric
  summary: <p>Describes the behavior to use when performing an application upgrade. </p>
  syntax: &o1
    content: public class MonitoredRollingApplicationUpgradePolicyDescription extends MonitoredRollingUpgradePolicyDescription
  inheritance:
  - java.lang.Object
  - system.fabric._upgrade_policy_description
  - system.fabric._rolling_upgrade_policy_description
  - system.fabric._monitored_rolling_upgrade_policy_description
  inheritedMembers:
  - system.fabric._upgrade_policy_description.getKind()
  - system.fabric._monitored_rolling_upgrade_policy_description.getMonitoringPolicy()
  - system.fabric._rolling_upgrade_policy_description.getUpgradeMode()
  - system.fabric._rolling_upgrade_policy_description.getUpgradeReplicaSetCheckTimeout()
  - system.fabric._rolling_upgrade_policy_description.isForceRestart()
  - system.fabric._monitored_rolling_upgrade_policy_description.MonitoredRollingUpgradePolicyDescription()
  - system.fabric._rolling_upgrade_policy_description.RollingUpgradePolicyDescription()
  - system.fabric._rolling_upgrade_policy_description.setForceRestart(boolean)
  - system.fabric._monitored_rolling_upgrade_policy_description.setMonitoringPolicy(RollingUpgradeMonitoringPolicy)
  - system.fabric._rolling_upgrade_policy_description.setUpgradeMode(RollingUpgradeMode)
  - system.fabric._rolling_upgrade_policy_description.setUpgradeReplicaSetCheckTimeout(Duration)
  - system.fabric._rolling_upgrade_policy_description.toNative(PinCollection)
  - system.fabric._rolling_upgrade_policy_description.upgradeMode
  - system.fabric._upgrade_policy_description.UpgradePolicyDescription(UpgradeKind)
- uid: system.fabric._monitored_rolling_application_upgrade_policy_description.getHealthPolicy()
  id: getHealthPolicy()
  parent: system.fabric._monitored_rolling_application_upgrade_policy_description
  href: system.fabric._monitored_rolling_application_upgrade_policy_description.yml
  langs:
  - java
  name: getHealthPolicy()
  nameWithType: MonitoredRollingApplicationUpgradePolicyDescription.getHealthPolicy()
  fullName: ApplicationHealthPolicy system.fabric.MonitoredRollingApplicationUpgradePolicyDescription.getHealthPolicy()
  overload: system.fabric._monitored_rolling_application_upgrade_policy_description.getHealthPolicy*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/MonitoredRollingApplicationUpgradePolicyDescription.java
    startLine: 35
  package: system.fabric
  summary: >-
    <p>Gets the health policy to use when performing health checks against an upgrading application.</p>

    <p></p>
  syntax:
    content: public ApplicationHealthPolicy getHealthPolicy()
    return:
      type: system.fabric._application_health_policy
      description: <p>The health policy to use when performing health checks against an upgrading application. </p>
- uid: system.fabric._monitored_rolling_application_upgrade_policy_description.MonitoredRollingApplicationUpgradePolicyDescription()
  id: MonitoredRollingApplicationUpgradePolicyDescription()
  parent: system.fabric._monitored_rolling_application_upgrade_policy_description
  href: system.fabric._monitored_rolling_application_upgrade_policy_description.yml
  langs:
  - java
  name: MonitoredRollingApplicationUpgradePolicyDescription()
  nameWithType: MonitoredRollingApplicationUpgradePolicyDescription.MonitoredRollingApplicationUpgradePolicyDescription()
  fullName: system.fabric.MonitoredRollingApplicationUpgradePolicyDescription.MonitoredRollingApplicationUpgradePolicyDescription()
  overload: system.fabric._monitored_rolling_application_upgrade_policy_description.MonitoredRollingApplicationUpgradePolicyDescription*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/MonitoredRollingApplicationUpgradePolicyDescription.java
    startLine: 13
  package: system.fabric
  syntax:
    content: public MonitoredRollingApplicationUpgradePolicyDescription()
- uid: system.fabric._monitored_rolling_application_upgrade_policy_description.setHealthPolicy(ApplicationHealthPolicy)
  id: setHealthPolicy(ApplicationHealthPolicy)
  parent: system.fabric._monitored_rolling_application_upgrade_policy_description
  href: system.fabric._monitored_rolling_application_upgrade_policy_description.yml
  langs:
  - java
  name: setHealthPolicy(ApplicationHealthPolicy healthPolicy)
  nameWithType: MonitoredRollingApplicationUpgradePolicyDescription.setHealthPolicy(ApplicationHealthPolicy healthPolicy)
  fullName: void system.fabric.MonitoredRollingApplicationUpgradePolicyDescription.setHealthPolicy(ApplicationHealthPolicy healthPolicy)
  overload: system.fabric._monitored_rolling_application_upgrade_policy_description.setHealthPolicy*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/MonitoredRollingApplicationUpgradePolicyDescription.java
    startLine: 46
  package: system.fabric
  summary: >-
    <p>Sets the health policy to use when performing health checks against an upgrading application.</p>

    <p></p>
  syntax:
    content: public void setHealthPolicy(ApplicationHealthPolicy healthPolicy)
    parameters:
    - id: healthPolicy
      type: system.fabric._application_health_policy
      description: <p>The health policy to use when performing health checks against an upgrading application. </p>
references:
- uid: system.fabric._monitored_rolling_application_upgrade_policy_description.MonitoredRollingApplicationUpgradePolicyDescription*
  name: MonitoredRollingApplicationUpgradePolicyDescription
  nameWithType: MonitoredRollingApplicationUpgradePolicyDescription.MonitoredRollingApplicationUpgradePolicyDescription
  fullName: system.fabric.MonitoredRollingApplicationUpgradePolicyDescription.MonitoredRollingApplicationUpgradePolicyDescription
  package: system.fabric
- uid: system.fabric._monitored_rolling_application_upgrade_policy_description.getHealthPolicy*
  name: getHealthPolicy
  nameWithType: MonitoredRollingApplicationUpgradePolicyDescription.getHealthPolicy
  fullName: ApplicationHealthPolicy system.fabric.MonitoredRollingApplicationUpgradePolicyDescription.getHealthPolicy
  package: system.fabric
- uid: system.fabric._monitored_rolling_application_upgrade_policy_description.setHealthPolicy*
  name: setHealthPolicy
  nameWithType: MonitoredRollingApplicationUpgradePolicyDescription.setHealthPolicy
  fullName: void system.fabric.MonitoredRollingApplicationUpgradePolicyDescription.setHealthPolicy
  package: system.fabric
- uid: system.fabric._upgrade_policy_description.getKind()
  parent: system.fabric._upgrade_policy_description
  href: system.fabric._upgrade_policy_description.yml
  name: getKind()
  nameWithType: UpgradePolicyDescription.getKind()
  fullName: UpgradeKind system.fabric.UpgradePolicyDescription.getKind()
  type: Method
  summary: >-
    <p>Specifies the kind of application upgrade.</p>

    <p></p>
  syntax:
    content: public UpgradeKind getKind()
    return:
      type: system.fabric._upgrade_kind
      description: <p>Returns <xref uid="system.fabric._upgrade_kind" data-throw-if-not-resolved="false">system.fabric.UpgradeKind</xref>. </p>
- uid: system.fabric._monitored_rolling_upgrade_policy_description.getMonitoringPolicy()
  parent: system.fabric._monitored_rolling_upgrade_policy_description
  href: system.fabric._monitored_rolling_upgrade_policy_description.yml
  name: getMonitoringPolicy()
  nameWithType: MonitoredRollingUpgradePolicyDescription.getMonitoringPolicy()
  fullName: RollingUpgradeMonitoringPolicy system.fabric.MonitoredRollingUpgradePolicyDescription.getMonitoringPolicy()
  type: Method
  summary: >-
    <p>Gets or sets the monitoring policy to apply.</p>

    <p></p>
  syntax:
    content: public RollingUpgradeMonitoringPolicy getMonitoringPolicy()
    return:
      type: system.fabric._rolling_upgrade_monitoring_policy
      description: <p>The monitoring policy to apply. </p>
- uid: system.fabric._rolling_upgrade_policy_description.getUpgradeMode()
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: getUpgradeMode()
  nameWithType: RollingUpgradePolicyDescription.getUpgradeMode()
  fullName: RollingUpgradeMode system.fabric.RollingUpgradePolicyDescription.getUpgradeMode()
  type: Method
  summary: >-
    <p>Type: <xref uid="system.fabric._rolling_upgrade_mode" data-throw-if-not-resolved="false">system.fabric.RollingUpgradeMode</xref>Specifies the types of upgrade ( <xref uid="system.fabric._rolling_upgrade_mode" data-throw-if-not-resolved="false">system.fabric.RollingUpgradeMode</xref>) to be used for upgrading the application instance.</p>

    <p></p>
  syntax:
    content: public RollingUpgradeMode getUpgradeMode()
    return:
      type: system.fabric._rolling_upgrade_mode
      description: <p>Returns <xref uid="system.fabric._rolling_upgrade_mode" data-throw-if-not-resolved="false">system.fabric.RollingUpgradeMode</xref>. </p>
- uid: system.fabric._rolling_upgrade_policy_description.getUpgradeReplicaSetCheckTimeout()
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: getUpgradeReplicaSetCheckTimeout()
  nameWithType: RollingUpgradePolicyDescription.getUpgradeReplicaSetCheckTimeout()
  fullName: Duration system.fabric.RollingUpgradePolicyDescription.getUpgradeReplicaSetCheckTimeout()
  type: Method
  summary: >-
    <p>Specifies the duration Service Fabric should wait before upgrading the services of an application instance in the upgrade domain if the services does not have quorum.</p>

    <p></p>
  syntax:
    content: public Duration getUpgradeReplicaSetCheckTimeout()
    return:
      type: e02a2de0
      description: <p>Returns <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>. </p>
- uid: system.fabric._rolling_upgrade_policy_description.isForceRestart()
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: isForceRestart()
  nameWithType: RollingUpgradePolicyDescription.isForceRestart()
  fullName: boolean system.fabric.RollingUpgradePolicyDescription.isForceRestart()
  type: Method
  summary: >-
    <p>Specifies if the service host should be restarted even though if there is not code package changes as part of the upgrade. Set this flag to true if the service cannot dynamically accept config or data package changes.</p>

    <p></p>
  syntax:
    content: public boolean isForceRestart()
    return:
      type: 4fc6e284
      description: <p>Returns Boolean. </p>
- uid: system.fabric._monitored_rolling_upgrade_policy_description.MonitoredRollingUpgradePolicyDescription()
  parent: system.fabric._monitored_rolling_upgrade_policy_description
  href: system.fabric._monitored_rolling_upgrade_policy_description.yml
  name: MonitoredRollingUpgradePolicyDescription()
  nameWithType: MonitoredRollingUpgradePolicyDescription.MonitoredRollingUpgradePolicyDescription()
  fullName: system.fabric.MonitoredRollingUpgradePolicyDescription.MonitoredRollingUpgradePolicyDescription()
  type: Constructor
  syntax:
    content: protected MonitoredRollingUpgradePolicyDescription()
- uid: system.fabric._rolling_upgrade_policy_description.RollingUpgradePolicyDescription()
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: RollingUpgradePolicyDescription()
  nameWithType: RollingUpgradePolicyDescription.RollingUpgradePolicyDescription()
  fullName: system.fabric.RollingUpgradePolicyDescription.RollingUpgradePolicyDescription()
  type: Constructor
  syntax:
    content: public RollingUpgradePolicyDescription()
- uid: system.fabric._rolling_upgrade_policy_description.setForceRestart(boolean)
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: setForceRestart(boolean forceRestart)
  nameWithType: RollingUpgradePolicyDescription.setForceRestart(boolean forceRestart)
  fullName: void system.fabric.RollingUpgradePolicyDescription.setForceRestart(boolean forceRestart)
  type: Method
  summary: >-
    <p>Specifies if the service host should be restarted even though if there is not code package changes as part of the upgrade. Set this flag to true if the service cannot dynamically accept config or data package changes.</p>

    <p></p>
  syntax:
    content: public void setForceRestart(boolean forceRestart)
    parameters:
    - id: forceRestart
      type: 4fc6e284
      description: <p>A Boolean. </p>
- uid: system.fabric._monitored_rolling_upgrade_policy_description.setMonitoringPolicy(RollingUpgradeMonitoringPolicy)
  parent: system.fabric._monitored_rolling_upgrade_policy_description
  href: system.fabric._monitored_rolling_upgrade_policy_description.yml
  name: setMonitoringPolicy(RollingUpgradeMonitoringPolicy monitoringPolicy)
  nameWithType: MonitoredRollingUpgradePolicyDescription.setMonitoringPolicy(RollingUpgradeMonitoringPolicy monitoringPolicy)
  fullName: void system.fabric.MonitoredRollingUpgradePolicyDescription.setMonitoringPolicy(RollingUpgradeMonitoringPolicy monitoringPolicy)
  type: Method
  summary: >-
    <p>Gets or sets the monitoring policy to apply.</p>

    <p></p>
  syntax:
    content: public void setMonitoringPolicy(RollingUpgradeMonitoringPolicy monitoringPolicy)
    parameters:
    - id: monitoringPolicy
      type: system.fabric._rolling_upgrade_monitoring_policy
      description: <p>The monitoring policy to apply. </p>
- uid: system.fabric._rolling_upgrade_policy_description.setUpgradeMode(RollingUpgradeMode)
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: setUpgradeMode(RollingUpgradeMode upgradeMode)
  nameWithType: RollingUpgradePolicyDescription.setUpgradeMode(RollingUpgradeMode upgradeMode)
  fullName: void system.fabric.RollingUpgradePolicyDescription.setUpgradeMode(RollingUpgradeMode upgradeMode)
  type: Method
  summary: >-
    <p>Type: <xref uid="system.fabric._rolling_upgrade_mode" data-throw-if-not-resolved="false">system.fabric.RollingUpgradeMode</xref>Specifies the types of upgrade ( <xref uid="system.fabric._rolling_upgrade_mode" data-throw-if-not-resolved="false">system.fabric.RollingUpgradeMode</xref>) to be used for upgrading the application instance.</p>

    <p></p>
  syntax:
    content: public void setUpgradeMode(RollingUpgradeMode upgradeMode)
    parameters:
    - id: upgradeMode
      type: system.fabric._rolling_upgrade_mode
      description: <p>Returns <xref uid="system.fabric._rolling_upgrade_mode" data-throw-if-not-resolved="false">system.fabric.RollingUpgradeMode</xref>. </p>
- uid: system.fabric._rolling_upgrade_policy_description.setUpgradeReplicaSetCheckTimeout(Duration)
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: setUpgradeReplicaSetCheckTimeout(Duration upgradeReplicaSetCheckTimeout)
  nameWithType: RollingUpgradePolicyDescription.setUpgradeReplicaSetCheckTimeout(Duration upgradeReplicaSetCheckTimeout)
  fullName: void system.fabric.RollingUpgradePolicyDescription.setUpgradeReplicaSetCheckTimeout(Duration upgradeReplicaSetCheckTimeout)
  type: Method
  summary: >-
    <p>Specifies the duration Service Fabric should wait before upgrading the services of an application instance in the upgrade domain if the services does not have quorum.</p>

    <p></p>
  syntax:
    content: public void setUpgradeReplicaSetCheckTimeout(Duration upgradeReplicaSetCheckTimeout)
    parameters:
    - id: upgradeReplicaSetCheckTimeout
      type: e02a2de0
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>. </p>
- uid: system.fabric._rolling_upgrade_policy_description.toNative(PinCollection)
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: toNative(PinCollection pinCollection)
  nameWithType: RollingUpgradePolicyDescription.toNative(PinCollection pinCollection)
  fullName: long system.fabric.RollingUpgradePolicyDescription.toNative(PinCollection pinCollection)
  type: Method
  syntax:
    content: public long toNative(PinCollection pinCollection)
    parameters:
    - id: pinCollection
      type: system.fabric._pin_collection
    return:
      type: 0364520f
- uid: system.fabric._rolling_upgrade_policy_description.upgradeMode
  parent: system.fabric._rolling_upgrade_policy_description
  href: system.fabric._rolling_upgrade_policy_description.yml
  name: upgradeMode
  nameWithType: RollingUpgradePolicyDescription.upgradeMode
  fullName: RollingUpgradeMode system.fabric.RollingUpgradePolicyDescription.upgradeMode
  type: Field
  syntax:
    content: protected RollingUpgradeMode upgradeMode
    return:
      type: system.fabric._rolling_upgrade_mode
- uid: system.fabric._upgrade_policy_description.UpgradePolicyDescription(UpgradeKind)
  parent: system.fabric._upgrade_policy_description
  href: system.fabric._upgrade_policy_description.yml
  name: UpgradePolicyDescription(UpgradeKind kind)
  nameWithType: UpgradePolicyDescription.UpgradePolicyDescription(UpgradeKind kind)
  fullName: system.fabric.UpgradePolicyDescription.UpgradePolicyDescription(UpgradeKind kind)
  type: Constructor
  syntax:
    content: protected UpgradePolicyDescription(UpgradeKind kind)
    parameters:
    - id: kind
      type: system.fabric._upgrade_kind
- uid: system.fabric._monitored_rolling_upgrade_policy_description
  parent: system.fabric
  href: system.fabric._monitored_rolling_upgrade_policy_description.yml
  name: MonitoredRollingUpgradePolicyDescription
  nameWithType: MonitoredRollingUpgradePolicyDescription
  fullName: system.fabric.MonitoredRollingUpgradePolicyDescription
  type: Class
  summary: <p>Specifies the behavior to use when performing a monitored application or cluster upgrade. </p>
  syntax:
    content: public class MonitoredRollingUpgradePolicyDescription
- uid: system.fabric._application_health_policy
  parent: system.fabric
  href: system.fabric._application_health_policy.yml
  name: ApplicationHealthPolicy
  nameWithType: ApplicationHealthPolicy
  fullName: system.fabric.ApplicationHealthPolicy
  type: Class
  summary: <p>Defines a health policy used to evaluate the health of an application or one of its children entities. </p>
  syntax:
    content: public class ApplicationHealthPolicy
- uid: system.fabric._monitored_rolling_application_upgrade_policy_description
  parent: system.fabric
  href: system.fabric._monitored_rolling_application_upgrade_policy_description.yml
  name: MonitoredRollingApplicationUpgradePolicyDescription
  nameWithType: MonitoredRollingApplicationUpgradePolicyDescription
  fullName: system.fabric.MonitoredRollingApplicationUpgradePolicyDescription
  type: Class
  summary: <p>Describes the behavior to use when performing an application upgrade. </p>
  syntax: *o1
- uid: system.fabric._rolling_upgrade_monitoring_policy
  parent: system.fabric
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  name: RollingUpgradeMonitoringPolicy
  nameWithType: RollingUpgradeMonitoringPolicy
  fullName: system.fabric.RollingUpgradeMonitoringPolicy
  type: Class
  summary: <p>Represents a class to encapsulate a rolling upgrade monitoring policy. </p>
  syntax:
    content: public class RollingUpgradeMonitoringPolicy
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  nameWithType: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
