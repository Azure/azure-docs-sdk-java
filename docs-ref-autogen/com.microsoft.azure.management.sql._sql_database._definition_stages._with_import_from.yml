### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from
  id: _with_import_from
  parent: com.microsoft.azure.management.sql
  children:
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom(StorageAccount,String,String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom(String)
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.yml
  langs:
  - java
  name: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 489
  package: com.microsoft.azure.management.sql
  summary: "<p>The SQL Database definition to import a BACPAC file as the source database.</p>\r\n<p></p>"
  syntax:
    content: public interface WithImportFrom<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom(StorageAccount,String,String)
  id: importFrom(StorageAccount,String,String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.yml
  langs:
  - java
  name: importFrom(StorageAccount storageAccount, String containerName, String fileName)
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  overload: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 508
  package: com.microsoft.azure.management.sql
  summary: "<p>Creates a new database from a BACPAC file.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAuthentication<ParentT> importFrom(StorageAccount storageAccount, String containerName, String fileName)
    parameters:
    - id: storageAccount
      type: com.microsoft.azure.management.storage._storage_account
      description: <p>an existing storage account to be used </p>
    - id: containerName
      type: "26831127"
      description: <p>the container name within the storage account to use </p>
    - id: fileName
      type: "26831127"
      description: <p>the exported database file name </p>
    return:
      type: a03fdbba
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom(String)
  id: importFrom(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.yml
  langs:
  - java
  name: importFrom(String storageUri)
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(String storageUri)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(String storageUri)
  overload: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 497
  package: com.microsoft.azure.management.sql
  summary: "<p>Creates a new database from a BACPAC file.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithStorageKey<ParentT> importFrom(String storageUri)
    parameters:
    - id: storageUri
      type: "26831127"
      description: <p>the source URI for the database to be imported </p>
    return:
      type: cad5a990
      description: <p>The next stage of the definition. </p>
references:
- uid: 18a275b1
  spec.java:
  - name: ParentT
    fullName: ParentT
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: cad5a990
  spec.java:
  - name: SqlDatabase.DefinitionStages.WithStorageKey<ParentT>
    fullName: SqlDatabase.DefinitionStages.WithStorageKey<ParentT>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom*
  name: importFrom
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom
  package: com.microsoft.azure.management.sql
- uid: a03fdbba
  spec.java:
  - name: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>
    fullName: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_all_different_options
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_all_different_options.yml
  name: SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  type: Interface
  summary: >-
    <p>The SQL database interface with all starting options for definition.</p>

    <p>

    The SQL database interface with all starting options for definition. </p>
  syntax:
    content: public interface WithAllDifferentOptions<ParentT> extends SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>,SqlDatabase.DefinitionStages.WithImportFrom<ParentT>,SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>,SqlDatabase.DefinitionStages.WithSampleDatabase<ParentT>,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>,SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT>,SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithCreate
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql._sql_database._sql_database_definition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._sql_database_definition.yml
  name: SqlDatabase.SqlDatabaseDefinition<ParentT>
  nameWithType: SqlDatabase.SqlDatabaseDefinition<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.SqlDatabaseDefinition<ParentT>
  type: Interface
  summary: >-
    <p>Container interface for all the definitions that need to be implemented.</p>

    <p></p>
  syntax:
    content: public interface SqlDatabaseDefinition<ParentT> extends SqlDatabase.DefinitionStages.Blank<ParentT>,SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>,SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>,SqlDatabase.DefinitionStages.WithImportFrom<ParentT>,SqlDatabase.DefinitionStages.WithStorageKey<ParentT>,SqlDatabase.DefinitionStages.WithAuthentication<ParentT>,SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithCreateMode<ParentT>,SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT>,SqlDatabase.DefinitionStages.WithAttachFinal<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.storage._storage_account
  parent: com.microsoft.azure.management.storage
  href: com.microsoft.azure.management.storage._storage_account.yml
  name: StorageAccount
  nameWithType: StorageAccount
  fullName: com.microsoft.azure.management.storage.StorageAccount
  type: Interface
  summary: <p>An immutable client-side representation of an Azure storage account. </p>
  syntax:
    content: public interface StorageAccount extends GroupableResource<StorageManager, StorageAccountInner>,Refreshable<StorageAccount>,Updatable<StorageAccount.Update>
