### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync*"
fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync"
name: "listForScopeAsync"
nameWithType: "RoleAssignmentsClient.listForScopeAsync"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(String scope)"
  name: "listForScopeAsync(String scope)"
  nameWithType: "RoleAssignmentsClient.listForScopeAsync(String scope)"
  summary: "Gets role assignments for a scope."
  parameters:
  - description: "The scope of the role assignments."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listForScopeAsync(String scope)"
  returns:
    description: "role assignments for a scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(String scope, String filter)"
  name: "listForScopeAsync(String scope, String filter)"
  nameWithType: "RoleAssignmentsClient.listForScopeAsync(String scope, String filter)"
  summary: "Gets role assignments for a scope."
  parameters:
  - description: "The scope of the role assignments."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listForScopeAsync(String scope, String filter)"
  returns:
    description: "role assignments for a scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
