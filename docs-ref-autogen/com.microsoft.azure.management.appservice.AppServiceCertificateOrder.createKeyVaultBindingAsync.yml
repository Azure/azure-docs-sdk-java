### YamlMime:JavaMember
nameWithType: AppServiceCertificateOrder.createKeyVaultBindingAsync
type: method
members:
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.createKeyVaultBindingAsync(String certificateName, Vault vault)
  name: createKeyVaultBindingAsync(String certificateName, Vault vault)
  nameWithType: AppServiceCertificateOrder.createKeyVaultBindingAsync(String certificateName, Vault vault)
  parameters:
  - description: <p>the name of the Key Vault Secret </p>
    name: certificateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the key vault to store the certificate </p>
    name: vault
    type: <xref href="com.microsoft.azure.management.keyvault.Vault?alt=com.microsoft.azure.management.keyvault.Vault&text=Vault" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a binding containing the key vault information </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.appservice.AppServiceCertificateKeyVaultBinding?alt=com.microsoft.azure.management.appservice.AppServiceCertificateKeyVaultBinding&text=AppServiceCertificateKeyVaultBinding" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Bind a Key Vault secret to a certificate store that will be used for storing the certificate once it's ready. </p>
  syntax: public Observable<AppServiceCertificateKeyVaultBinding> createKeyVaultBindingAsync(String certificateName, Vault vault)
  uid: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.createKeyVaultBindingAsync(String,Vault)
uid: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.createKeyVaultBindingAsync*
fullName: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.createKeyVaultBindingAsync(String certificateName, Vault vault)
name: createKeyVaultBindingAsync(String certificateName, Vault vault)
package: com.microsoft.azure.management.appservice
metadata: {}
