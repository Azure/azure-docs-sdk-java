### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder"
name: "DataLakeFileSystemClientBuilder"
nameWithType: "DataLakeFileSystemClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient\" data-throw-if-not-resolved=\"false\">FileSystemClients</xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\">FileSystemAsyncClients</xref>, call <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> respectively to construct an instance of the desired client.\n\nThe following information must be provided on this builder:\n\n *  the endpoint through `.endpoint()`, including the file system name, in the format of `https://{accountName}.dfs.core.windows.net/{fileSystemName}`.\n *  the credential through `.credential()` or `.connectionString()` if the file system is not publicly accessible."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DataLakeFileSystemClientBuilder"
constructors:
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.DataLakeFileSystemClientBuilder()"
methods:
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildAsyncClient()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildClient()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(com.azure.core.credential.TokenCredential)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.endpoint(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.fileSystemName(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.getDefaultHttpLogOptions()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.sasToken(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.serviceVersion(com.azure.storage.file.datalake.DataLakeServiceVersion)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.setAnonymousAccess()"
type: "class"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.2.0
