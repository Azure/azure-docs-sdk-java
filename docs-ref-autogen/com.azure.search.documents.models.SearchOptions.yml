### YamlMime:JavaType
uid: "com.azure.search.documents.models.SearchOptions"
fullName: "com.azure.search.documents.models.SearchOptions"
name: "SearchOptions"
nameWithType: "SearchOptions"
summary: "Additional parameters for search<wbr>Get operation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SearchOptions"
constructors:
- uid: "com.azure.search.documents.models.SearchOptions.SearchOptions()"
  fullName: "com.azure.search.documents.models.SearchOptions.SearchOptions()"
  name: "SearchOptions()"
  nameWithType: "SearchOptions.SearchOptions()"
  syntax: "public SearchOptions()"
methods:
- uid: "com.azure.search.documents.models.SearchOptions.getFacets()"
  fullName: "com.azure.search.documents.models.SearchOptions.getFacets()"
  name: "getFacets()"
  nameWithType: "SearchOptions.getFacets()"
  summary: "Get the facets property: The list of facet expressions to apply to the search query."
  syntax: "public List<String> getFacets()"
  desc: "Get the facets property: The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs."
  returns:
    description: "the facets value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.models.SearchOptions.getFilter()"
  fullName: "com.azure.search.documents.models.SearchOptions.getFilter()"
  name: "getFilter()"
  nameWithType: "SearchOptions.getFilter()"
  summary: "Get the filter property: The OData $filter expression to apply to the search query."
  syntax: "public String getFilter()"
  desc: "Get the filter property: The OData $filter expression to apply to the search query."
  returns:
    description: "the filter value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getHighlightFields()"
  fullName: "com.azure.search.documents.models.SearchOptions.getHighlightFields()"
  name: "getHighlightFields()"
  nameWithType: "SearchOptions.getHighlightFields()"
  summary: "Get the highlight<wbr>Fields property: The list of field names to use for hit highlights."
  syntax: "public List<String> getHighlightFields()"
  desc: "Get the highlightFields property: The list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting."
  returns:
    description: "the highlightFields value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.models.SearchOptions.getHighlightPostTag()"
  fullName: "com.azure.search.documents.models.SearchOptions.getHighlightPostTag()"
  name: "getHighlightPostTag()"
  nameWithType: "SearchOptions.getHighlightPostTag()"
  summary: "Get the highlight<wbr>Post<wbr>Tag property: A string tag that is appended to hit highlights."
  syntax: "public String getHighlightPostTag()"
  desc: "Get the highlightPostTag property: A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is </em>."
  returns:
    description: "the highlightPostTag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getHighlightPreTag()"
  fullName: "com.azure.search.documents.models.SearchOptions.getHighlightPreTag()"
  name: "getHighlightPreTag()"
  nameWithType: "SearchOptions.getHighlightPreTag()"
  summary: "Get the highlight<wbr>Pre<wbr>Tag property: A string tag that is prepended to hit highlights."
  syntax: "public String getHighlightPreTag()"
  desc: "Get the highlightPreTag property: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is <em>."
  returns:
    description: "the highlightPreTag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getMinimumCoverage()"
  fullName: "com.azure.search.documents.models.SearchOptions.getMinimumCoverage()"
  name: "getMinimumCoverage()"
  nameWithType: "SearchOptions.getMinimumCoverage()"
  summary: "Get the minimum<wbr>Coverage property: A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success."
  syntax: "public Double getMinimumCoverage()"
  desc: "Get the minimumCoverage property: A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100."
  returns:
    description: "the minimumCoverage value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getOrderBy()"
  fullName: "com.azure.search.documents.models.SearchOptions.getOrderBy()"
  name: "getOrderBy()"
  nameWithType: "SearchOptions.getOrderBy()"
  summary: "Get the order<wbr>By property: The list of OData $orderby expressions by which to sort the results."
  syntax: "public List<String> getOrderBy()"
  desc: "Get the orderBy property: The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses."
  returns:
    description: "the orderBy value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.models.SearchOptions.getQueryType()"
  fullName: "com.azure.search.documents.models.SearchOptions.getQueryType()"
  name: "getQueryType()"
  nameWithType: "SearchOptions.getQueryType()"
  summary: "Get the query<wbr>Type property: A value that specifies the syntax of the search query."
  syntax: "public QueryType getQueryType()"
  desc: "Get the queryType property: A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax."
  returns:
    description: "the queryType value."
    type: "<xref href=\"com.azure.search.documents.models.QueryType?alt=com.azure.search.documents.models.QueryType&text=QueryType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getScoringParameters()"
  fullName: "com.azure.search.documents.models.SearchOptions.getScoringParameters()"
  name: "getScoringParameters()"
  nameWithType: "SearchOptions.getScoringParameters()"
  summary: "Get the scoring<wbr>Parameters property: The list of parameter values to be used in scoring functions (for example, reference<wbr>Point<wbr>Parameter) using the format name-values."
  syntax: "public List<ScoringParameter> getScoringParameters()"
  desc: "Get the scoringParameters property: The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be \"mylocation--122.2,44.8\" (without the quotes)."
  returns:
    description: "the scoringParameters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.models.ScoringParameter?alt=com.azure.search.documents.models.ScoringParameter&text=ScoringParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.models.SearchOptions.getScoringProfile()"
  fullName: "com.azure.search.documents.models.SearchOptions.getScoringProfile()"
  name: "getScoringProfile()"
  nameWithType: "SearchOptions.getScoringProfile()"
  summary: "Get the scoring<wbr>Profile property: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results."
  syntax: "public String getScoringProfile()"
  desc: "Get the scoringProfile property: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results."
  returns:
    description: "the scoringProfile value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getScoringStatistics()"
  fullName: "com.azure.search.documents.models.SearchOptions.getScoringStatistics()"
  name: "getScoringStatistics()"
  nameWithType: "SearchOptions.getScoringStatistics()"
  summary: "Get the scoring<wbr>Statistics property: A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency."
  syntax: "public ScoringStatistics getScoringStatistics()"
  desc: "Get the scoringStatistics property: A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency."
  returns:
    description: "the scoringStatistics value."
    type: "<xref href=\"com.azure.search.documents.models.ScoringStatistics?alt=com.azure.search.documents.models.ScoringStatistics&text=ScoringStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getSearchFields()"
  fullName: "com.azure.search.documents.models.SearchOptions.getSearchFields()"
  name: "getSearchFields()"
  nameWithType: "SearchOptions.getSearchFields()"
  summary: "Get the search<wbr>Fields property: The list of field names to which to scope the full-text search."
  syntax: "public List<String> getSearchFields()"
  desc: "Get the searchFields property: The list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any field names listed in this parameter."
  returns:
    description: "the searchFields value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.models.SearchOptions.getSearchMode()"
  fullName: "com.azure.search.documents.models.SearchOptions.getSearchMode()"
  name: "getSearchMode()"
  nameWithType: "SearchOptions.getSearchMode()"
  summary: "Get the search<wbr>Mode property: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match."
  syntax: "public SearchMode getSearchMode()"
  desc: "Get the searchMode property: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match."
  returns:
    description: "the searchMode value."
    type: "<xref href=\"com.azure.search.documents.models.SearchMode?alt=com.azure.search.documents.models.SearchMode&text=SearchMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getSelect()"
  fullName: "com.azure.search.documents.models.SearchOptions.getSelect()"
  name: "getSelect()"
  nameWithType: "SearchOptions.getSelect()"
  summary: "Get the select property: The list of fields to retrieve."
  syntax: "public List<String> getSelect()"
  desc: "Get the select property: The list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included."
  returns:
    description: "the select value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.models.SearchOptions.getSessionId()"
  fullName: "com.azure.search.documents.models.SearchOptions.getSessionId()"
  name: "getSessionId()"
  nameWithType: "SearchOptions.getSessionId()"
  summary: "Get the session<wbr>Id property: A value to be used to create a sticky session, which can help to get more consistent results."
  syntax: "public String getSessionId()"
  desc: "Get the sessionId property: A value to be used to create a sticky session, which can help to get more consistent results. As long as the same sessionId is used, a best-effort attempt will be made to target the same replica set. Be wary that reusing the same sessionID values repeatedly can interfere with the load balancing of the requests across replicas and adversely affect the performance of the search service. The value used as sessionId cannot start with a '\\_' character."
  returns:
    description: "the sessionId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getSkip()"
  fullName: "com.azure.search.documents.models.SearchOptions.getSkip()"
  name: "getSkip()"
  nameWithType: "SearchOptions.getSkip()"
  summary: "Get the skip property: The number of search results to skip."
  syntax: "public Integer getSkip()"
  desc: "Get the skip property: The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key and $filter with a range query instead."
  returns:
    description: "the skip value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.getTop()"
  fullName: "com.azure.search.documents.models.SearchOptions.getTop()"
  name: "getTop()"
  nameWithType: "SearchOptions.getTop()"
  summary: "Get the top property: The number of search results to retrieve."
  syntax: "public Integer getTop()"
  desc: "Get the top property: The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results."
  returns:
    description: "the top value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.isTotalCountIncluded()"
  fullName: "com.azure.search.documents.models.SearchOptions.isTotalCountIncluded()"
  name: "isTotalCountIncluded()"
  nameWithType: "SearchOptions.isTotalCountIncluded()"
  summary: "Get the include<wbr>Total<wbr>Count property: A value that specifies whether to fetch the total count of results."
  syntax: "public Boolean isTotalCountIncluded()"
  desc: "Get the includeTotalCount property: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation."
  returns:
    description: "the includeTotalCount value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setFacets(java.lang.String...)"
  fullName: "com.azure.search.documents.models.SearchOptions.setFacets(String[] facets)"
  name: "setFacets(String[] facets)"
  nameWithType: "SearchOptions.setFacets(String[] facets)"
  summary: "Set the facets property: The list of facet expressions to apply to the search query."
  parameters:
  - description: "the facets value to set."
    name: "facets"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchOptions setFacets(String[] facets)"
  desc: "Set the facets property: The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setFilter(java.lang.String)"
  fullName: "com.azure.search.documents.models.SearchOptions.setFilter(String filter)"
  name: "setFilter(String filter)"
  nameWithType: "SearchOptions.setFilter(String filter)"
  summary: "Set the filter property: The OData $filter expression to apply to the search query."
  parameters:
  - description: "the filter value to set."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setFilter(String filter)"
  desc: "Set the filter property: The OData $filter expression to apply to the search query."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setHighlightFields(java.lang.String...)"
  fullName: "com.azure.search.documents.models.SearchOptions.setHighlightFields(String[] highlightFields)"
  name: "setHighlightFields(String[] highlightFields)"
  nameWithType: "SearchOptions.setHighlightFields(String[] highlightFields)"
  summary: "Set the highlight<wbr>Fields property: The list of field names to use for hit highlights."
  parameters:
  - description: "the highlightFields value to set."
    name: "highlightFields"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchOptions setHighlightFields(String[] highlightFields)"
  desc: "Set the highlightFields property: The list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setHighlightPostTag(java.lang.String)"
  fullName: "com.azure.search.documents.models.SearchOptions.setHighlightPostTag(String highlightPostTag)"
  name: "setHighlightPostTag(String highlightPostTag)"
  nameWithType: "SearchOptions.setHighlightPostTag(String highlightPostTag)"
  summary: "Set the highlight<wbr>Post<wbr>Tag property: A string tag that is appended to hit highlights."
  parameters:
  - description: "the highlightPostTag value to set."
    name: "highlightPostTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setHighlightPostTag(String highlightPostTag)"
  desc: "Set the highlightPostTag property: A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is </em>."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setHighlightPreTag(java.lang.String)"
  fullName: "com.azure.search.documents.models.SearchOptions.setHighlightPreTag(String highlightPreTag)"
  name: "setHighlightPreTag(String highlightPreTag)"
  nameWithType: "SearchOptions.setHighlightPreTag(String highlightPreTag)"
  summary: "Set the highlight<wbr>Pre<wbr>Tag property: A string tag that is prepended to hit highlights."
  parameters:
  - description: "the highlightPreTag value to set."
    name: "highlightPreTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setHighlightPreTag(String highlightPreTag)"
  desc: "Set the highlightPreTag property: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is <em>."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setIncludeTotalCount(java.lang.Boolean)"
  fullName: "com.azure.search.documents.models.SearchOptions.setIncludeTotalCount(Boolean includeTotalCount)"
  name: "setIncludeTotalCount(Boolean includeTotalCount)"
  nameWithType: "SearchOptions.setIncludeTotalCount(Boolean includeTotalCount)"
  summary: "Set the include<wbr>Total<wbr>Count property: A value that specifies whether to fetch the total count of results."
  parameters:
  - description: "the includeTotalCount value to set."
    name: "includeTotalCount"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setIncludeTotalCount(Boolean includeTotalCount)"
  desc: "Set the includeTotalCount property: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setMinimumCoverage(java.lang.Double)"
  fullName: "com.azure.search.documents.models.SearchOptions.setMinimumCoverage(Double minimumCoverage)"
  name: "setMinimumCoverage(Double minimumCoverage)"
  nameWithType: "SearchOptions.setMinimumCoverage(Double minimumCoverage)"
  summary: "Set the minimum<wbr>Coverage property: A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success."
  parameters:
  - description: "the minimumCoverage value to set."
    name: "minimumCoverage"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setMinimumCoverage(Double minimumCoverage)"
  desc: "Set the minimumCoverage property: A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setOrderBy(java.lang.String...)"
  fullName: "com.azure.search.documents.models.SearchOptions.setOrderBy(String[] orderBy)"
  name: "setOrderBy(String[] orderBy)"
  nameWithType: "SearchOptions.setOrderBy(String[] orderBy)"
  summary: "Set the order<wbr>By property: The list of OData $orderby expressions by which to sort the results."
  parameters:
  - description: "the orderBy value to set."
    name: "orderBy"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchOptions setOrderBy(String[] orderBy)"
  desc: "Set the orderBy property: The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setQueryType(com.azure.search.documents.models.QueryType)"
  fullName: "com.azure.search.documents.models.SearchOptions.setQueryType(QueryType queryType)"
  name: "setQueryType(QueryType queryType)"
  nameWithType: "SearchOptions.setQueryType(QueryType queryType)"
  summary: "Set the query<wbr>Type property: A value that specifies the syntax of the search query."
  parameters:
  - description: "the queryType value to set."
    name: "queryType"
    type: "<xref href=\"com.azure.search.documents.models.QueryType?alt=com.azure.search.documents.models.QueryType&text=QueryType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setQueryType(QueryType queryType)"
  desc: "Set the queryType property: A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setScoringParameters(com.azure.search.documents.models.ScoringParameter...)"
  fullName: "com.azure.search.documents.models.SearchOptions.setScoringParameters(ScoringParameter[] scoringParameters)"
  name: "setScoringParameters(ScoringParameter[] scoringParameters)"
  nameWithType: "SearchOptions.setScoringParameters(ScoringParameter[] scoringParameters)"
  summary: "Set the scoring<wbr>Parameters property: The list of parameter values to be used in scoring functions (for example, reference<wbr>Point<wbr>Parameter) using the format name-values."
  parameters:
  - description: "the scoringParameters value to set."
    name: "scoringParameters"
    type: "<xref href=\"com.azure.search.documents.models.ScoringParameter?alt=com.azure.search.documents.models.ScoringParameter&text=ScoringParameter\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchOptions setScoringParameters(ScoringParameter[] scoringParameters)"
  desc: "Set the scoringParameters property: The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be \"mylocation--122.2,44.8\" (without the quotes)."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setScoringProfile(java.lang.String)"
  fullName: "com.azure.search.documents.models.SearchOptions.setScoringProfile(String scoringProfile)"
  name: "setScoringProfile(String scoringProfile)"
  nameWithType: "SearchOptions.setScoringProfile(String scoringProfile)"
  summary: "Set the scoring<wbr>Profile property: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results."
  parameters:
  - description: "the scoringProfile value to set."
    name: "scoringProfile"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setScoringProfile(String scoringProfile)"
  desc: "Set the scoringProfile property: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setScoringStatistics(com.azure.search.documents.models.ScoringStatistics)"
  fullName: "com.azure.search.documents.models.SearchOptions.setScoringStatistics(ScoringStatistics scoringStatistics)"
  name: "setScoringStatistics(ScoringStatistics scoringStatistics)"
  nameWithType: "SearchOptions.setScoringStatistics(ScoringStatistics scoringStatistics)"
  summary: "Set the scoring<wbr>Statistics property: A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency."
  parameters:
  - description: "the scoringStatistics value to set."
    name: "scoringStatistics"
    type: "<xref href=\"com.azure.search.documents.models.ScoringStatistics?alt=com.azure.search.documents.models.ScoringStatistics&text=ScoringStatistics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setScoringStatistics(ScoringStatistics scoringStatistics)"
  desc: "Set the scoringStatistics property: A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setSearchFields(java.lang.String...)"
  fullName: "com.azure.search.documents.models.SearchOptions.setSearchFields(String[] searchFields)"
  name: "setSearchFields(String[] searchFields)"
  nameWithType: "SearchOptions.setSearchFields(String[] searchFields)"
  summary: "Set the search<wbr>Fields property: The list of field names to which to scope the full-text search."
  parameters:
  - description: "the searchFields value to set."
    name: "searchFields"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchOptions setSearchFields(String[] searchFields)"
  desc: "Set the searchFields property: The list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any field names listed in this parameter."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setSearchMode(com.azure.search.documents.models.SearchMode)"
  fullName: "com.azure.search.documents.models.SearchOptions.setSearchMode(SearchMode searchMode)"
  name: "setSearchMode(SearchMode searchMode)"
  nameWithType: "SearchOptions.setSearchMode(SearchMode searchMode)"
  summary: "Set the search<wbr>Mode property: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match."
  parameters:
  - description: "the searchMode value to set."
    name: "searchMode"
    type: "<xref href=\"com.azure.search.documents.models.SearchMode?alt=com.azure.search.documents.models.SearchMode&text=SearchMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setSearchMode(SearchMode searchMode)"
  desc: "Set the searchMode property: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setSelect(java.lang.String...)"
  fullName: "com.azure.search.documents.models.SearchOptions.setSelect(String[] select)"
  name: "setSelect(String[] select)"
  nameWithType: "SearchOptions.setSelect(String[] select)"
  summary: "Set the select property: The list of fields to retrieve."
  parameters:
  - description: "the select value to set."
    name: "select"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchOptions setSelect(String[] select)"
  desc: "Set the select property: The list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setSessionId(java.lang.String)"
  fullName: "com.azure.search.documents.models.SearchOptions.setSessionId(String sessionId)"
  name: "setSessionId(String sessionId)"
  nameWithType: "SearchOptions.setSessionId(String sessionId)"
  summary: "Set the session<wbr>Id property: A value to be used to create a sticky session, which can help to get more consistent results."
  parameters:
  - description: "the sessionId value to set."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setSessionId(String sessionId)"
  desc: "Set the sessionId property: A value to be used to create a sticky session, which can help to get more consistent results. As long as the same sessionId is used, a best-effort attempt will be made to target the same replica set. Be wary that reusing the same sessionID values repeatedly can interfere with the load balancing of the requests across replicas and adversely affect the performance of the search service. The value used as sessionId cannot start with a '\\_' character."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setSkip(java.lang.Integer)"
  fullName: "com.azure.search.documents.models.SearchOptions.setSkip(Integer skip)"
  name: "setSkip(Integer skip)"
  nameWithType: "SearchOptions.setSkip(Integer skip)"
  summary: "Set the skip property: The number of search results to skip."
  parameters:
  - description: "the skip value to set."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setSkip(Integer skip)"
  desc: "Set the skip property: The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key and $filter with a range query instead."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.SearchOptions.setTop(java.lang.Integer)"
  fullName: "com.azure.search.documents.models.SearchOptions.setTop(Integer top)"
  name: "setTop(Integer top)"
  nameWithType: "SearchOptions.setTop(Integer top)"
  summary: "Set the top property: The number of search results to retrieve."
  parameters:
  - description: "the top value to set."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchOptions setTop(Integer top)"
  desc: "Set the top property: The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results."
  returns:
    description: "the SearchOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Additional parameters for searchGet operation."
metadata: {}
package: "com.azure.search.documents.models"
artifact: com.azure:azure-search-documents:11.4.13
