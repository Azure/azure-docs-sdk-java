### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus._i_message_browser
  id: _i_message_browser
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus._i_message_browser.peek()
  - com.microsoft.azure.servicebus._i_message_browser.peek(long)
  - com.microsoft.azure.servicebus._i_message_browser.peekAsync()
  - com.microsoft.azure.servicebus._i_message_browser.peekAsync(long)
  - com.microsoft.azure.servicebus._i_message_browser.peekBatch(int)
  - com.microsoft.azure.servicebus._i_message_browser.peekBatch(long,int)
  - com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(int)
  - com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(long,int)
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: IMessageBrowser
  nameWithType: IMessageBrowser
  fullName: com.microsoft.azure.servicebus.IMessageBrowser
  type: Interface
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 13
  package: com.microsoft.azure.servicebus
  summary: "<p>Represents a message browser that can browse messages from Azure Service Bus. </p>"
  syntax:
    content: public interface IMessageBrowser
- uid: com.microsoft.azure.servicebus._i_message_browser.peek()
  id: peek()
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: peek()
  nameWithType: IMessageBrowser.peek()
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peek()
  overload: com.microsoft.azure.servicebus._i_message_browser.peek*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 24
  package: com.microsoft.azure.servicebus
  summary: "<p>reads next the active message without changing the state of the receiver or the message source. The first call to <xref uid=\"com.microsoft.azure.servicebus._i_message_browser.peek()\" data-throw-if-not-resolved=\"false\">IMessageBrowser#peek()</xref> fetches the first active message for this receiver. Each subsequent call fetches the subsequent message in the entity.</p>\r\n<p></p>"
  syntax: &o1
    content: public IMessage peek()
    return:
      type: com.microsoft.azure.servicebus._i_message
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if peek failed </p>
- uid: com.microsoft.azure.servicebus._i_message_browser.peek(long)
  id: peek(long)
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: peek(long fromSequenceNumber)
  nameWithType: IMessageBrowser.peek(long fromSequenceNumber)
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peek(long fromSequenceNumber)
  overload: com.microsoft.azure.servicebus._i_message_browser.peek*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 34
  package: com.microsoft.azure.servicebus
  summary: "<p>Reads next the active message without changing the state of the receiver or the message source.</p>\r\n<p></p>"
  syntax:
    content: public IMessage peek(long fromSequenceNumber)
    parameters:
    - id: fromSequenceNumber
      type: 0364520f
      description: <p>The sequence number from where to read the message. </p>
    return:
      type: com.microsoft.azure.servicebus._i_message
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if peek failed </p>
- uid: com.microsoft.azure.servicebus._i_message_browser.peekAsync()
  id: peekAsync()
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: peekAsync()
  nameWithType: IMessageBrowser.peekAsync()
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekAsync()
  overload: com.microsoft.azure.servicebus._i_message_browser.peekAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 62
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously reads the active messages without changing the state of the receiver or the message source.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<IMessage> peekAsync()
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
- uid: com.microsoft.azure.servicebus._i_message_browser.peekAsync(long)
  id: peekAsync(long)
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: peekAsync(long fromSequenceNumber)
  nameWithType: IMessageBrowser.peekAsync(long fromSequenceNumber)
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekAsync(long fromSequenceNumber)
  overload: com.microsoft.azure.servicebus._i_message_browser.peekAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 70
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously reads next the active message without changing the state of the receiver or the message source.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<IMessage> peekAsync(long fromSequenceNumber)
    parameters:
    - id: fromSequenceNumber
      type: 0364520f
      description: <p>The sequence number from where to read the message. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>CompletableFuture that returns <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked. </p>
- uid: com.microsoft.azure.servicebus._i_message_browser.peekBatch(int)
  id: peekBatch(int)
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: peekBatch(int messageCount)
  nameWithType: IMessageBrowser.peekBatch(int messageCount)
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(int messageCount)
  overload: com.microsoft.azure.servicebus._i_message_browser.peekBatch*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 44
  package: com.microsoft.azure.servicebus
  summary: "<p>Reads next batch of the active messages without changing the state of the receiver or the message source.</p>\r\n<p></p>"
  syntax:
    content: public Collection<IMessage> peekBatch(int messageCount)
    parameters:
    - id: messageCount
      type: f75371fa
      description: <p>The number of messages. </p>
    return:
      type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>Batch of <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if peek failed </p>
- uid: com.microsoft.azure.servicebus._i_message_browser.peekBatch(long,int)
  id: peekBatch(long,int)
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: peekBatch(long fromSequenceNumber, int messageCount)
  nameWithType: IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)
  overload: com.microsoft.azure.servicebus._i_message_browser.peekBatch*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 55
  package: com.microsoft.azure.servicebus
  summary: "<p>Reads next batch of the active messages without changing the state of the receiver or the message source.</p>\r\n<p></p>"
  syntax:
    content: public Collection<IMessage> peekBatch(long fromSequenceNumber, int messageCount)
    parameters:
    - id: fromSequenceNumber
      type: 0364520f
      description: <p>The sequence number from where to read the message. </p>
    - id: messageCount
      type: f75371fa
      description: <p>The number of messages. </p>
    return:
      type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>Batch of <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if peek failed </p>
- uid: com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(int)
  id: peekBatchAsync(int)
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: peekBatchAsync(int messageCount)
  nameWithType: IMessageBrowser.peekBatchAsync(int messageCount)
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(int messageCount)
  overload: com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 78
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously reads the next batch of active messages without changing the state of the receiver or the message source.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Collection<IMessage>> peekBatchAsync(int messageCount)
    parameters:
    - id: messageCount
      type: f75371fa
      description: <p>The number of messages. </p>
    return:
      type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
      description: <p>CompletableFuture that returns batch of <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked. </p>
- uid: com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(long,int)
  id: peekBatchAsync(long,int)
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  langs:
  - java
  name: peekBatchAsync(long fromSequenceNumber, int messageCount)
  nameWithType: IMessageBrowser.peekBatchAsync(long fromSequenceNumber, int messageCount)
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(long fromSequenceNumber, int messageCount)
  overload: com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageBrowser.java
    startLine: 87
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously reads the next batch of active messages without changing the state of the receiver or the message source.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Collection<IMessage>> peekBatchAsync(long fromSequenceNumber, int messageCount)
    parameters:
    - id: fromSequenceNumber
      type: 0364520f
      description: <p>The sequence number from where to read the message. </p>
    - id: messageCount
      type: f75371fa
      description: <p>The number of messages. </p>
    return:
      type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
      description: <p>CompletableFuture that returns batch of <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked. </p>
references:
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: 73fec9fb
  spec.java:
  - name: ServiceBusException
    fullName: ServiceBusException
- uid: com.microsoft.azure.servicebus._i_message_browser.peek*
  name: peek
  nameWithType: IMessageBrowser.peek
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peek
  package: com.microsoft.azure.servicebus
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
  spec.java:
  - name: Collection<
    fullName: Collection<
  - uid: com.microsoft.azure.servicebus._i_message
    name: IMessage
    fullName: com.microsoft.azure.servicebus.IMessage
    href: com.microsoft.azure.servicebus._i_message.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus._i_message_browser.peekBatch*
  name: peekBatch
  nameWithType: IMessageBrowser.peekBatch
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatch
  package: com.microsoft.azure.servicebus
- uid: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus._i_message
    name: IMessage
    fullName: com.microsoft.azure.servicebus.IMessage
    href: com.microsoft.azure.servicebus._i_message.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus._i_message_browser.peekAsync*
  name: peekAsync
  nameWithType: IMessageBrowser.peekAsync
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekAsync
  package: com.microsoft.azure.servicebus
- uid: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
  spec.java:
  - name: CompletableFuture<Collection<
    fullName: CompletableFuture<Collection<
  - uid: com.microsoft.azure.servicebus._i_message
    name: IMessage
    fullName: com.microsoft.azure.servicebus.IMessage
    href: com.microsoft.azure.servicebus._i_message.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync*
  name: peekBatchAsync
  nameWithType: IMessageBrowser.peekBatchAsync
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._i_message_receiver
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_message_receiver.yml
  name: IMessageReceiver
  nameWithType: IMessageReceiver
  fullName: com.microsoft.azure.servicebus.IMessageReceiver
  type: Interface
  summary: <p>Defines message receiver interface. The MessageReceiver can be used to receive messages from Queues and Subscriptions and acknowledge them. </p>
  syntax:
    content: public interface IMessageReceiver
- uid: com.microsoft.azure.servicebus._i_topic_client
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_topic_client.yml
  name: ITopicClient
  nameWithType: ITopicClient
  fullName: com.microsoft.azure.servicebus.ITopicClient
  type: Interface
  summary: <p>TopicClient can be used for all basic interactions with a Service Bus topic. <code></code></p>
  syntax:
    content: public interface ITopicClient
- uid: com.microsoft.azure.servicebus._message_browser
- uid: com.microsoft.azure.servicebus._message_receiver
- uid: com.microsoft.azure.servicebus._i_message
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_message.yml
  name: IMessage
  nameWithType: IMessage
  fullName: com.microsoft.azure.servicebus.IMessage
  type: Interface
  summary: >-
    <p>Represents the message that is exchanged between Azure Service Bus and its clients.</p>

    <p></p>
  syntax:
    content: public interface IMessage
- uid: com.microsoft.azure.servicebus._topic_client.peek()
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: peek()
  nameWithType: TopicClient.peek()
  fullName: com.microsoft.azure.servicebus.TopicClient.peek()
  type: Method
  summary: >-
    <p>reads next the active message without changing the state of the receiver or the message source. The first call to <xref uid="com.microsoft.azure.servicebus._i_message_browser.peek()" data-throw-if-not-resolved="false">IMessageBrowser#peek()</xref> fetches the first active message for this receiver. Each subsequent call fetches the subsequent message in the entity.</p>

    <p></p>
  syntax:
    content: public IMessage peek()
    return:
      type: com.microsoft.azure.servicebus._i_message
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
  type: Class
  summary: <p>This is the base exception that service bus will generate for all error cases. </p>
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.servicebus._i_message_browser.peek()
  parent: com.microsoft.azure.servicebus._i_message_browser
  href: com.microsoft.azure.servicebus._i_message_browser.yml
  name: peek()
  nameWithType: IMessageBrowser.peek()
  fullName: com.microsoft.azure.servicebus.IMessageBrowser.peek()
  type: Method
  summary: >-
    <p>reads next the active message without changing the state of the receiver or the message source. The first call to <xref uid="com.microsoft.azure.servicebus._i_message_browser.peek()" data-throw-if-not-resolved="false">IMessageBrowser#peek()</xref> fetches the first active message for this receiver. Each subsequent call fetches the subsequent message in the entity.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.servicebus._message
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.servicebus.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.servicebus._topic_client.peek(long)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: peek(long fromSequenceNumber)
  nameWithType: TopicClient.peek(long fromSequenceNumber)
  fullName: com.microsoft.azure.servicebus.TopicClient.peek(long fromSequenceNumber)
  type: Method
  summary: >-
    <p>Reads next the active message without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax:
    content: public IMessage peek(long fromSequenceNumber)
    parameters:
    - id: fromSequenceNumber
      type: 0364520f
      description: <p>The sequence number from where to read the message. </p>
    return:
      type: com.microsoft.azure.servicebus._i_message
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
- uid: com.microsoft.azure.servicebus._topic_client.peekBatch(int)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: peekBatch(int messageCount)
  nameWithType: TopicClient.peekBatch(int messageCount)
  fullName: com.microsoft.azure.servicebus.TopicClient.peekBatch(int messageCount)
  type: Method
  summary: >-
    <p>Reads next batch of the active messages without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax:
    content: public Collection<IMessage> peekBatch(int messageCount)
    parameters:
    - id: messageCount
      type: f75371fa
      description: <p>The number of messages. </p>
    return:
      type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>Batch of <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
- uid: com.microsoft.azure.servicebus._topic_client.peekBatch(long,int)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: peekBatch(long fromSequenceNumber, int messageCount)
  nameWithType: TopicClient.peekBatch(long fromSequenceNumber, int messageCount)
  fullName: com.microsoft.azure.servicebus.TopicClient.peekBatch(long fromSequenceNumber, int messageCount)
  type: Method
  summary: >-
    <p>Reads next batch of the active messages without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax:
    content: public Collection<IMessage> peekBatch(long fromSequenceNumber, int messageCount)
    parameters:
    - id: fromSequenceNumber
      type: 0364520f
      description: <p>The sequence number from where to read the message. </p>
    - id: messageCount
      type: f75371fa
      description: <p>The number of messages. </p>
    return:
      type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>Batch of <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
- uid: com.microsoft.azure.servicebus._topic_client.peekAsync()
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: peekAsync()
  nameWithType: TopicClient.peekAsync()
  fullName: com.microsoft.azure.servicebus.TopicClient.peekAsync()
  type: Method
  summary: >-
    <p>Asynchronously reads the active messages without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<IMessage> peekAsync()
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
- uid: com.microsoft.azure.servicebus._topic_client.peekAsync(long)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: peekAsync(long fromSequenceNumber)
  nameWithType: TopicClient.peekAsync(long fromSequenceNumber)
  fullName: com.microsoft.azure.servicebus.TopicClient.peekAsync(long fromSequenceNumber)
  type: Method
  summary: >-
    <p>Asynchronously reads next the active message without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<IMessage> peekAsync(long fromSequenceNumber)
    parameters:
    - id: fromSequenceNumber
      type: 0364520f
      description: <p>The sequence number from where to read the message. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>CompletableFuture that returns <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked. </p>
- uid: com.microsoft.azure.servicebus._topic_client.peekBatchAsync(int)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: peekBatchAsync(int messageCount)
  nameWithType: TopicClient.peekBatchAsync(int messageCount)
  fullName: com.microsoft.azure.servicebus.TopicClient.peekBatchAsync(int messageCount)
  type: Method
  summary: >-
    <p>Asynchronously reads the next batch of active messages without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Collection<IMessage>> peekBatchAsync(int messageCount)
    parameters:
    - id: messageCount
      type: f75371fa
      description: <p>The number of messages. </p>
    return:
      type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
      description: <p>CompletableFuture that returns batch of <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked. </p>
- uid: com.microsoft.azure.servicebus._topic_client.peekBatchAsync(long,int)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: peekBatchAsync(long fromSequenceNumber, int messageCount)
  nameWithType: TopicClient.peekBatchAsync(long fromSequenceNumber, int messageCount)
  fullName: com.microsoft.azure.servicebus.TopicClient.peekBatchAsync(long fromSequenceNumber, int messageCount)
  type: Method
  summary: >-
    <p>Asynchronously reads the next batch of active messages without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Collection<IMessage>> peekBatchAsync(long fromSequenceNumber, int messageCount)
    parameters:
    - id: fromSequenceNumber
      type: 0364520f
      description: <p>The sequence number from where to read the message. </p>
    - id: messageCount
      type: f75371fa
      description: <p>The number of messages. </p>
    return:
      type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
      description: <p>CompletableFuture that returns batch of <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> peeked. </p>
