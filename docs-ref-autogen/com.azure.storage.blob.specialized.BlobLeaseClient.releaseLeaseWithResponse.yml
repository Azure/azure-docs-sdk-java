### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobLeaseClient.releaseLeaseWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.releaseLeaseWithResponse"
name: "releaseLeaseWithResponse"
nameWithType: "BlobLeaseClient.releaseLeaseWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobLeaseClient.releaseLeaseWithResponse(com.azure.core.http.RequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.releaseLeaseWithResponse(RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  name: "releaseLeaseWithResponse(RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  nameWithType: "BlobLeaseClient.releaseLeaseWithResponse(RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  summary: "Releases the previously acquired lease.\n\n**Code Samples**\n\n```java\nRequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n \n System.out.printf(\"Release lease completed with status %d%n\",\n     client.releaseLeaseWithResponse(modifiedRequestConditions, timeout, new Context(key, value))\n         .getStatusCode());\n```"
  parameters:
  - description: "Standard HTTP Access conditions related to the modification of data. ETag and\n LastModifiedTime are used to construct conditions related to when the resource was changed relative to the given\n request. The request will fail if the specified condition is not satisfied."
    name: "modifiedRequestConditions"
    type: "<xref href=\"com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> releaseLeaseWithResponse(RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClient.releaseLeaseWithResponse(com.azure.storage.blob.options.BlobReleaseLeaseOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.releaseLeaseWithResponse(BlobReleaseLeaseOptions options, Duration timeout, Context context)"
  name: "releaseLeaseWithResponse(BlobReleaseLeaseOptions options, Duration timeout, Context context)"
  nameWithType: "BlobLeaseClient.releaseLeaseWithResponse(BlobReleaseLeaseOptions options, Duration timeout, Context context)"
  summary: "Releases the previously acquired lease.\n\n**Code Samples**\n\n```java\nBlobLeaseRequestConditions requestConditions = new BlobLeaseRequestConditions()\n     .setIfModifiedSince(OffsetDateTime.now().minusDays(3));\n \n BlobReleaseLeaseOptions options = new BlobReleaseLeaseOptions()\n     .setRequestConditions(requestConditions);\n \n System.out.printf(\"Release lease completed with status %d%n\",\n     client.releaseLeaseWithResponse(options, timeout, new Context(key, value))\n         .getStatusCode());\n```"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobReleaseLeaseOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobReleaseLeaseOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobReleaseLeaseOptions?alt=com.azure.storage.blob.options.BlobReleaseLeaseOptions&text=BlobReleaseLeaseOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> releaseLeaseWithResponse(BlobReleaseLeaseOptions options, Duration timeout, Context context)"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
