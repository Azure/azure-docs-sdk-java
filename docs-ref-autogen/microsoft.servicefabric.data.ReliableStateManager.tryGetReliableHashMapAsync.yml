### YamlMime:JavaMember
nameWithType: ReliableStateManager.tryGetReliableHashMapAsync
type: method
members:
- fullName: microsoft.servicefabric.data.ReliableStateManager.tryGetReliableHashMapAsync(String name)
  name: tryGetReliableHashMapAsync(String name)
  nameWithType: ReliableStateManager.tryGetReliableHashMapAsync(String name)
  parameters:
  - description: <p>Name of the reliable hashmap. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns a conditional value containing the reference to the reliable hashmap with the given name. </p>
    type: '&lt;K extends String, V&gt; CompletableFuture&lt;<xref href="microsoft.servicefabric.data.ConditionalValue?alt=microsoft.servicefabric.data.ConditionalValue&text=ConditionalValue" data-throw-if-not-resolved="False"/>&lt;<xref href="microsoft.servicefabric.data.collections.ReliableHashMap?alt=microsoft.servicefabric.data.collections.ReliableHashMap&text=ReliableHashMap" data-throw-if-not-resolved="False"/>&lt;K, V&gt;&gt;&gt;'
  summary: <p>Gets the reliable hash map associated with the given name. </p>
  syntax: public <K extends String, V> CompletableFuture<ConditionalValue<ReliableHashMap<K, V>>> tryGetReliableHashMapAsync(String name)
  uid: microsoft.servicefabric.data.ReliableStateManager.tryGetReliableHashMapAsync(String)
uid: microsoft.servicefabric.data.ReliableStateManager.tryGetReliableHashMapAsync*
fullName: microsoft.servicefabric.data.ReliableStateManager.tryGetReliableHashMapAsync(String name)
name: tryGetReliableHashMapAsync(String name)
package: microsoft.servicefabric.data
metadata: {}
