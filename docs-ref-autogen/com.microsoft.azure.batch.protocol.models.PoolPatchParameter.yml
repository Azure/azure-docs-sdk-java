### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  id: PoolPatchParameter
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.PoolPatchParameter()
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.applicationPackageReferences()
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.certificateReferences()
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.metadata()
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.startTask()
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  langs:
  - java
  name: PoolPatchParameter
  nameWithType: PoolPatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: The set of changes to be made to a Pool.
  syntax:
    content: public class PoolPatchParameter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.PoolPatchParameter()
  id: PoolPatchParameter()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: PoolPatchParameter()
  nameWithType: PoolPatchParameter.PoolPatchParameter()
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.PoolPatchParameter()
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.PoolPatchParameter*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public PoolPatchParameter()
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.applicationPackageReferences()
  id: applicationPackageReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: applicationPackageReferences()
  nameWithType: PoolPatchParameter.applicationPackageReferences()
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.applicationPackageReferences()
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.applicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. If this element is present, it replaces any existing Package references. If you specify an empty collection, then all Package references are removed from the Pool. If omitted, any existing Package references are left unchanged.
  syntax:
    content: public List<ApplicationPackageReference> applicationPackageReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.certificateReferences()
  id: certificateReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: certificateReferences()
  nameWithType: PoolPatchParameter.certificateReferences()
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.certificateReferences()
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.certificateReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if this element is present, it replaces any existing Certificate references configured on the Pool. If omitted, any existing Certificate references are left unchanged. For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\_BATCH\_CERTIFICATES\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\{user-name\}/certs) and Certificates are placed in that directory.
  syntax:
    content: public List<CertificateReference> certificateReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: the certificateReferences value
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.metadata()
  id: metadata()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: metadata()
  nameWithType: PoolPatchParameter.metadata()
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.metadata()
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.metadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if this element is present, it replaces any existing metadata configured on the Pool. If you specify an empty collection, any metadata is removed from the Pool. If omitted, any existing metadata is left unchanged.
  syntax:
    content: public List<MetadataItem> metadata()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.startTask()
  id: startTask()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: startTask()
  nameWithType: PoolPatchParameter.startTask()
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.startTask()
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.startTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if this element is present, it overwrites any existing StartTask. If omitted, any existing StartTask is left unchanged.
  syntax:
    content: public StartTask startTask()
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: the startTask value
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  id: withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  nameWithType: PoolPatchParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withApplicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. If this element is present, it replaces any existing Package references. If you specify an empty collection, then all Package references are removed from the Pool. If omitted, any existing Package references are left unchanged.
  syntax:
    content: public PoolPatchParameter withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
    parameters:
    - id: applicationPackageReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: the PoolPatchParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  id: withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: withCertificateReferences(List<CertificateReference> certificateReferences)
  nameWithType: PoolPatchParameter.withCertificateReferences(List<CertificateReference> certificateReferences)
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withCertificateReferences(List<CertificateReference> certificateReferences)
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withCertificateReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if this element is present, it replaces any existing Certificate references configured on the Pool. If omitted, any existing Certificate references are left unchanged. For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\_BATCH\_CERTIFICATES\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\{user-name\}/certs) and Certificates are placed in that directory.
  syntax:
    content: public PoolPatchParameter withCertificateReferences(List<CertificateReference> certificateReferences)
    parameters:
    - id: certificateReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: the certificateReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: the PoolPatchParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: PoolPatchParameter.withMetadata(List<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata(List<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if this element is present, it replaces any existing metadata configured on the Pool. If you specify an empty collection, any metadata is removed from the Pool. If omitted, any existing metadata is left unchanged.
  syntax:
    content: public PoolPatchParameter withMetadata(List<MetadataItem> metadata)
    parameters:
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: the PoolPatchParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  id: withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  langs:
  - java
  name: withStartTask(StartTask startTask)
  nameWithType: PoolPatchParameter.withStartTask(StartTask startTask)
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withStartTask(StartTask startTask)
  overload: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withStartTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if this element is present, it overwrites any existing StartTask. If omitted, any existing StartTask is left unchanged.
  syntax:
    content: public PoolPatchParameter withStartTask(StartTask startTask)
    parameters:
    - id: startTask
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: the startTask value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: the PoolPatchParameter object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.PoolPatchParameter*
  name: PoolPatchParameter
  nameWithType: PoolPatchParameter.PoolPatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.PoolPatchParameter
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTask
  name: StartTask
  nameWithType: StartTask
  fullName: com.microsoft.azure.batch.protocol.models.StartTask
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.startTask*
  name: startTask
  nameWithType: PoolPatchParameter.startTask
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.startTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withStartTask*
  name: withStartTask
  nameWithType: PoolPatchParameter.withStartTask
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withStartTask
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CertificateReference
    name: CertificateReference
    fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.certificateReferences*
  name: certificateReferences
  nameWithType: PoolPatchParameter.certificateReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.certificateReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withCertificateReferences*
  name: withCertificateReferences
  nameWithType: PoolPatchParameter.withCertificateReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withCertificateReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
    name: ApplicationPackageReference
    fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.applicationPackageReferences*
  name: applicationPackageReferences
  nameWithType: PoolPatchParameter.applicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.applicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withApplicationPackageReferences*
  name: withApplicationPackageReferences
  nameWithType: PoolPatchParameter.withApplicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withApplicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MetadataItem
    name: MetadataItem
    fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.metadata*
  name: metadata
  nameWithType: PoolPatchParameter.metadata
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.metadata
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata*
  name: withMetadata
  nameWithType: PoolPatchParameter.withMetadata
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.withMetadata
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.CertificateReference
  name: CertificateReference
  nameWithType: CertificateReference
  fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
- uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  name: ApplicationPackageReference
  nameWithType: ApplicationPackageReference
  fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
- uid: com.microsoft.azure.batch.protocol.models.MetadataItem
  name: MetadataItem
  nameWithType: MetadataItem
  fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
