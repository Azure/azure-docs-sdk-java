### YamlMime:JavaType
constructors:
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Serializable" data-throw-if-not-resolved="False"/>
methods:
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.addHeader(String,byte [])
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.deserialize(byte [])
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCallContext()
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getCancellationHeaderName()
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaders()
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getHeaderValue(String)
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getInterfaceId()
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.getMethodId()
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.serialize(ServiceRemotingMessageHeaders)
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setCallContext(String)
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setHeaders(HashMap<String, byte[]>)
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setInterfaceId(int)
- microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders.setMethodId(int)
nameWithType: ServiceRemotingMessageHeaders
syntax: public class ServiceRemotingMessageHeaders
type: class
uid: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
name: ServiceRemotingMessageHeaders
package: microsoft.servicefabric.services.remoting
summary: <p>Specifies the headers that are sent along with a ServiceRemoting message. </p>
metadata: {}
