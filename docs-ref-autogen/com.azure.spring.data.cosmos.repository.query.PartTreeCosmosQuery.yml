### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery
  id: PartTreeCosmosQuery
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.query
  children:
  - com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.PartTreeCosmosQuery(com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod,com.azure.spring.data.cosmos.core.CosmosOperations)
  - com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  - com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isDeleteQuery()
  - com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isExistsQuery()
  langs:
  - java
  name: PartTreeCosmosQuery
  nameWithType: PartTreeCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery
  type: Class
  package: com.azure.spring.data.cosmos.repository.query
  summary: Cosmos query class with <xref uid="" data-throw-if-not-resolved="false">PartTree</xref> to parse a <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> into a tree or <xref uid="" data-throw-if-not-resolved="false">PartTree.OrPart</xref>s consisting of simple <xref uid="" data-throw-if-not-resolved="false">Part</xref> instances in turn.
  syntax:
    content: public class PartTreeCosmosQuery extends AbstractCosmosQuery
  inheritance:
  - java.lang.Object
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery
  inheritedMembers:
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.execute(java.lang.Object[])
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getExecution(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor,org.springframework.data.repository.query.ReturnedType)
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getQueryMethod()
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isCollectionQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isDeleteQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isExistsQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isPageQuery()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.PartTreeCosmosQuery(com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod,com.azure.spring.data.cosmos.core.CosmosOperations)
  id: PartTreeCosmosQuery(com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod,com.azure.spring.data.cosmos.core.CosmosOperations)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery
  langs:
  - java
  name: PartTreeCosmosQuery(CosmosQueryMethod method, CosmosOperations operations)
  nameWithType: PartTreeCosmosQuery.PartTreeCosmosQuery(CosmosQueryMethod method, CosmosOperations operations)
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.PartTreeCosmosQuery(CosmosQueryMethod method, CosmosOperations operations)
  overload: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.PartTreeCosmosQuery*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.query
  summary: Initialization
  syntax:
    content: public PartTreeCosmosQuery(CosmosQueryMethod method, CosmosOperations operations)
    parameters:
    - id: method
      type: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
      description: CosmosQueryMethod
    - id: operations
      type: com.azure.spring.data.cosmos.core.CosmosOperations
      description: CosmosOperations
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  id: createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery
  langs:
  - java
  name: createQuery(CosmosParameterAccessor accessor)
  nameWithType: PartTreeCosmosQuery.createQuery(CosmosParameterAccessor accessor)
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery(CosmosParameterAccessor accessor)
  overload: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: protected CosmosQuery createQuery(CosmosParameterAccessor accessor)
    parameters:
    - id: accessor
      type: com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor
    return:
      type: com.azure.spring.data.cosmos.core.query.CosmosQuery
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isDeleteQuery()
  id: isDeleteQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery
  langs:
  - java
  name: isDeleteQuery()
  nameWithType: PartTreeCosmosQuery.isDeleteQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isDeleteQuery()
  overload: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isDeleteQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: protected boolean isDeleteQuery()
    return:
      type: boolean
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isExistsQuery()
  id: isExistsQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery
  langs:
  - java
  name: isExistsQuery()
  nameWithType: PartTreeCosmosQuery.isExistsQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isExistsQuery()
  overload: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isExistsQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: protected boolean isExistsQuery()
    return:
      type: boolean
references:
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
  name: CosmosQueryMethod
  nameWithType: CosmosQueryMethod
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
- uid: com.azure.spring.data.cosmos.core.CosmosOperations
  name: CosmosOperations
  nameWithType: CosmosOperations
  fullName: com.azure.spring.data.cosmos.core.CosmosOperations
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.PartTreeCosmosQuery*
  name: PartTreeCosmosQuery
  nameWithType: PartTreeCosmosQuery.PartTreeCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.PartTreeCosmosQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor
  name: CosmosParameterAccessor
  nameWithType: CosmosParameterAccessor
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor
- uid: com.azure.spring.data.cosmos.core.query.CosmosQuery
  name: CosmosQuery
  nameWithType: CosmosQuery
  fullName: com.azure.spring.data.cosmos.core.query.CosmosQuery
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery*
  name: createQuery
  nameWithType: PartTreeCosmosQuery.createQuery
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isDeleteQuery*
  name: isDeleteQuery
  nameWithType: PartTreeCosmosQuery.isDeleteQuery
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isDeleteQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isExistsQuery*
  name: isExistsQuery
  nameWithType: PartTreeCosmosQuery.isExistsQuery
  fullName: com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.isExistsQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery
  name: AbstractCosmosQuery
  nameWithType: AbstractCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isExistsQuery()
  name: AbstractCosmosQuery.isExistsQuery()
  nameWithType: AbstractCosmosQuery.isExistsQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isExistsQuery()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isDeleteQuery()
  name: AbstractCosmosQuery.isDeleteQuery()
  nameWithType: AbstractCosmosQuery.isDeleteQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isDeleteQuery()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isPageQuery()
  name: AbstractCosmosQuery.isPageQuery()
  nameWithType: AbstractCosmosQuery.isPageQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isPageQuery()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
  name: AbstractCosmosQuery.createQuery(CosmosParameterAccessor)
  nameWithType: AbstractCosmosQuery.createQuery(CosmosParameterAccessor)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getQueryMethod()
  name: AbstractCosmosQuery.getQueryMethod()
  nameWithType: AbstractCosmosQuery.getQueryMethod()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getQueryMethod()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getExecution(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor,org.springframework.data.repository.query.ReturnedType)
  name: AbstractCosmosQuery.getExecution(CosmosParameterAccessor,ReturnedType)
  nameWithType: AbstractCosmosQuery.getExecution(CosmosParameterAccessor,ReturnedType)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.getExecution(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor,org.springframework.data.repository.query.ReturnedType)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.execute(java.lang.Object[])
  name: AbstractCosmosQuery.execute(Object[])
  nameWithType: AbstractCosmosQuery.execute(Object[])
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.execute(java.lang.Object[])
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isCollectionQuery()
  name: AbstractCosmosQuery.isCollectionQuery()
  nameWithType: AbstractCosmosQuery.isCollectionQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.isCollectionQuery()
