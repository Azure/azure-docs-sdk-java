items:
- uid: system.fabric._application_management_client
  id: _application_management_client
  parent: system.fabric
  children:
  - system.fabric._application_management_client.ApplicationManagementClient(long)
  - system.fabric._application_management_client.close()
  - system.fabric._application_management_client.copyApplicationPackage(String,String,String)
  - system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)
  - system.fabric._application_management_client.createApplicationAsync(ApplicationDescription,Duration)
  - system.fabric._application_management_client.deleteApplicationAsync(URI)
  - system.fabric._application_management_client.deleteApplicationAsync(URI,Duration)
  - system.fabric._application_management_client.deployServicePackageToNode(String,String,String,PackageSharingPolicyList,String)
  - system.fabric._application_management_client.deployServicePackageToNode(String,String,String,PackageSharingPolicyList,String,Duration)
  - system.fabric._application_management_client.getApplicationManifestAsync(String,String)
  - system.fabric._application_management_client.getApplicationManifestAsync(String,String,Duration)
  - system.fabric._application_management_client.getApplicationUpgradeProgressAsync(URI)
  - system.fabric._application_management_client.getApplicationUpgradeProgressAsync(URI,Duration)
  - system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress)
  - system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress,Duration)
  - system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(URI,String)
  - system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(URI,String,Duration)
  - system.fabric._application_management_client.provisionApplicationAsync(String)
  - system.fabric._application_management_client.provisionApplicationAsync(String,Duration)
  - system.fabric._application_management_client.RemoveApplicationPackage(String,String)
  - system.fabric._application_management_client.rollbackApplicationUpgradeAsync(URI)
  - system.fabric._application_management_client.rollbackApplicationUpgradeAsync(URI,Duration)
  - system.fabric._application_management_client.unprovisionApplicationAsync(String,String)
  - system.fabric._application_management_client.unprovisionApplicationAsync(String,String,Duration)
  - system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)
  - system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription,Duration)
  - system.fabric._application_management_client.updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription)
  - system.fabric._application_management_client.updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription,Duration)
  - system.fabric._application_management_client.upgradeApplicationAsync(ApplicationUpgradeDescription)
  - system.fabric._application_management_client.upgradeApplicationAsync(ApplicationUpgradeDescription,Duration)
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: ApplicationManagementClient
  nameWithType: ApplicationManagementClient
  fullName: system.fabric.ApplicationManagementClient
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 15
  package: system.fabric
  summary: <p>Provides the ability to deploy/un-deploy/create/delete applications and services </p>
  syntax:
    content: public class ApplicationManagementClient
  inheritance:
  - java.lang.Object
  - AutoCloseable
- uid: system.fabric._application_management_client.ApplicationManagementClient(long)
  id: ApplicationManagementClient(long)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: ApplicationManagementClient(long fabricClientPtr)
  nameWithType: ApplicationManagementClient.ApplicationManagementClient(long fabricClientPtr)
  fullName: system.fabric.ApplicationManagementClient.ApplicationManagementClient(long fabricClientPtr)
  overload: system.fabric._application_management_client.ApplicationManagementClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 151
  package: system.fabric
  syntax:
    content: public ApplicationManagementClient(long fabricClientPtr)
    parameters:
    - id: fabricClientPtr
      type: 0364520f
- uid: system.fabric._application_management_client.close()
  id: close()
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: close()
  nameWithType: ApplicationManagementClient.close()
  fullName: void system.fabric.ApplicationManagementClient.close()
  overload: system.fabric._application_management_client.close*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1313
  package: system.fabric
  syntax:
    content: public void close()
- uid: system.fabric._application_management_client.copyApplicationPackage(String,String,String)
  id: copyApplicationPackage(String,String,String)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: copyApplicationPackage(String imageStoreConnectionString, String applicationPackagePath, String applicationPackagePathInImageStore)
  nameWithType: ApplicationManagementClient.copyApplicationPackage(String imageStoreConnectionString, String applicationPackagePath, String applicationPackagePathInImageStore)
  fullName: void system.fabric.ApplicationManagementClient.copyApplicationPackage(String imageStoreConnectionString, String applicationPackagePath, String applicationPackagePathInImageStore)
  overload: system.fabric._application_management_client.copyApplicationPackage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1014
  package: system.fabric
  summary: >-
    <p>Uploads an application package to the Image Store in preparation for provisioning a new application type.</p>

    <p></p>
  syntax:
    content: public void copyApplicationPackage(String imageStoreConnectionString, String applicationPackagePath, String applicationPackagePathInImageStore)
    parameters:
    - id: imageStoreConnectionString
      type: "26831127"
      description: <p>The connection string for the Image Store as specified in the Cluster Manifest. </p>
    - id: applicationPackagePath
      type: "26831127"
      description: <p>The full path to the source application package. </p>
    - id: applicationPackagePathInImageStore
      type: "26831127"
      description: <p>The relative path for the destination in the Image Store. This same relative path should be passed into the subsequent <xref href="system.fabric._application_management_client.provisionApplicationAsync(String)" data-throw-if-not-resolved="false"></xref> call. </p>
- uid: system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)
  id: createApplicationAsync(ApplicationDescription)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: createApplicationAsync(ApplicationDescription applicationDescription)
  nameWithType: ApplicationManagementClient.createApplicationAsync(ApplicationDescription applicationDescription)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.createApplicationAsync(ApplicationDescription applicationDescription)
  overload: system.fabric._application_management_client.createApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 314
  package: system.fabric
  summary: >-
    <p>Creates and instantiates the specific Service Fabric application.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageBuilderValidationError</ref> : The create application request is not valid with respect to the provisioned manifests for the requested application type. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref> : The application name is not a valid Naming URI. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</ref> : A corrupted file was encountered on the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationAlreadyExists</ref> : The application has already been created. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeNotFound</ref> : The requested application type has not been provisioned yet. </p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> createApplicationAsync(ApplicationDescription applicationDescription)
    parameters:
    - id: applicationDescription
      type: system.fabric._application_description
      description: <p>The description of the application. </p>
    return:
      type: 7e53ac82
      description: <p>The created Service Fabric application. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: >-
      <p>

        <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_exception
  - type: system.fabric.exception._fabric_element_already_exists_exception
  - type: system.fabric.exception._fabric_element_not_found_exception
  - type: system.fabric.exception._unauthorized_access_exception
    description: <p>There was an error accessing a file on the Image Store. </p>
- uid: system.fabric._application_management_client.createApplicationAsync(ApplicationDescription,Duration)
  id: createApplicationAsync(ApplicationDescription,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: createApplicationAsync(ApplicationDescription applicationDescription, Duration timeout)
  nameWithType: ApplicationManagementClient.createApplicationAsync(ApplicationDescription applicationDescription, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.createApplicationAsync(ApplicationDescription applicationDescription, Duration timeout)
  overload: system.fabric._application_management_client.createApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 358
  package: system.fabric
  summary: >-
    <p>Creates and instantiates the specific Service Fabric application.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageBuilderValidationError</ref> : The create application request is not valid with respect to the provisioned manifests for the requested application type. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref> : The application name is not a valid Naming URI. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</ref> : A corrupted file was encountered on the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationAlreadyExists</ref> : The application has already been created. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeNotFound</ref> : The requested application type has not been provisioned yet. </p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> createApplicationAsync(ApplicationDescription applicationDescription, Duration timeout)
    parameters:
    - id: applicationDescription
      type: system.fabric._application_description
      description: <p>The description of the application. </p>
    - id: timeout
      type: e02a2de0
      description: <p>Defines the maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>The created Service Fabric application. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: >-
      <p>

        <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_exception
  - type: system.fabric.exception._fabric_element_already_exists_exception
  - type: system.fabric.exception._fabric_element_not_found_exception
  - type: system.fabric.exception._unauthorized_access_exception
    description: <p>There was an error accessing a file on the Image Store. </p>
- uid: system.fabric._application_management_client.deleteApplicationAsync(URI)
  id: deleteApplicationAsync(URI)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: deleteApplicationAsync(URI applicationName)
  nameWithType: ApplicationManagementClient.deleteApplicationAsync(URI applicationName)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.deleteApplicationAsync(URI applicationName)
  overload: system.fabric._application_management_client.deleteApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 669
  package: system.fabric
  summary: >-
    <p>Deletes the application instance from the cluster and deletes all services belonging to the application.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationUpgradeInProgress</ref> : The application is being upgraded. </p>

    <p>

      <bold>Remarks:</bold>All application state will be lost and cannot be recovered after the application is deleted. </p>
  syntax:
    content: public CompletableFuture<Boolean> deleteApplicationAsync(URI applicationName)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The URI of the application instance name. </p>
    return:
      type: 7e53ac82
      description: <p>The deleted application instance from the cluster. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_element_not_found_exception
  - type: system.fabric.exception._fabric_transient_exception
- uid: system.fabric._application_management_client.deleteApplicationAsync(URI,Duration)
  id: deleteApplicationAsync(URI,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: deleteApplicationAsync(URI applicationName, Duration timeout)
  nameWithType: ApplicationManagementClient.deleteApplicationAsync(URI applicationName, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.deleteApplicationAsync(URI applicationName, Duration timeout)
  overload: system.fabric._application_management_client.deleteApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 702
  package: system.fabric
  summary: >-
    <p>Deletes the application instance from the cluster and deletes all services belonging to the application.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationUpgradeInProgress</ref> : The application is being upgraded. </p>

    <p>

      <bold>Remarks:</bold>All application state will be lost and cannot be recovered after the application is deleted. </p>
  syntax:
    content: public CompletableFuture<Boolean> deleteApplicationAsync(URI applicationName, Duration timeout)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The URI of the application instance name. </p>
    - id: timeout
      type: e02a2de0
      description: <p>Defines the maximum amount of time the system will allow this operation to continue before returnin <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>The deleted application instance from the cluster. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_element_not_found_exception
  - type: system.fabric.exception._fabric_transient_exception
- uid: system.fabric._application_management_client.deployServicePackageToNode(String,String,String,PackageSharingPolicyList,String)
  id: deployServicePackageToNode(String,String,String,PackageSharingPolicyList,String)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: deployServicePackageToNode(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, PackageSharingPolicyList sharingPolicies, String nodeName)
  nameWithType: ApplicationManagementClient.deployServicePackageToNode(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, PackageSharingPolicyList sharingPolicies, String nodeName)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.deployServicePackageToNode(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, PackageSharingPolicyList sharingPolicies, String nodeName)
  overload: system.fabric._application_management_client.deployServicePackageToNode*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1053
  package: system.fabric
  summary: >-
    <p>Downloads packages associated with service manifest to image cache on specified node.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> deployServicePackageToNode(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, PackageSharingPolicyList sharingPolicies, String nodeName)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>ApplicationTypeName associated with service manifest to be downloaded </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>Version of ApplicationType </p>
    - id: serviceManifestName
      type: "26831127"
      description: <p>Name of service manifest whose packages need to be downloaded </p>
    - id: sharingPolicies
      type: system.fabric._package_sharing_policy_list
      description: <p>Sharing policy representing packages that need to be copied to shared folders </p>
    - id: nodeName
      type: "26831127"
      description: <p>Name of the node where packages need to be downloaded. </p>
    return:
      type: 7e53ac82
      description: <p>CompletableFuture </p>
- uid: system.fabric._application_management_client.deployServicePackageToNode(String,String,String,PackageSharingPolicyList,String,Duration)
  id: deployServicePackageToNode(String,String,String,PackageSharingPolicyList,String,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: deployServicePackageToNode(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, PackageSharingPolicyList sharingPolicies, String nodeName, Duration timeout)
  nameWithType: ApplicationManagementClient.deployServicePackageToNode(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, PackageSharingPolicyList sharingPolicies, String nodeName, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.deployServicePackageToNode(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, PackageSharingPolicyList sharingPolicies, String nodeName, Duration timeout)
  overload: system.fabric._application_management_client.deployServicePackageToNode*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1086
  package: system.fabric
  summary: >-
    <p>Downloads packages associated with service manifest to image cache on specified node.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> deployServicePackageToNode(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, PackageSharingPolicyList sharingPolicies, String nodeName, Duration timeout)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>ApplicationTypeName associated with service manifest to be downloaded </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>Version of ApplicationType </p>
    - id: serviceManifestName
      type: "26831127"
      description: <p>Name of service manifest whose packages need to be downloaded </p>
    - id: sharingPolicies
      type: system.fabric._package_sharing_policy_list
      description: <p>Sharing policy representing packages that need to be copied to shared folders </p>
    - id: nodeName
      type: "26831127"
      description: <p>Name of the node where packages need to be downloaded. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>CompletableFuture </p>
- uid: system.fabric._application_management_client.getApplicationManifestAsync(String,String)
  id: getApplicationManifestAsync(String,String)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: getApplicationManifestAsync(String applicationTypeName, String applicationTypeVersion)
  nameWithType: ApplicationManagementClient.getApplicationManifestAsync(String applicationTypeName, String applicationTypeVersion)
  fullName: CompletableFuture<String> system.fabric.ApplicationManagementClient.getApplicationManifestAsync(String applicationTypeName, String applicationTypeVersion)
  overload: system.fabric._application_management_client.getApplicationManifestAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 837
  package: system.fabric
  summary: >-
    <p>Gets the contents of a provisioned Application Manifest stored in the cluster.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<String> getApplicationManifestAsync(String applicationTypeName, String applicationTypeVersion)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>The type name as specified in the Application Manifest. </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>The type version as specified in the Application Manifest. </p>
    return:
      type: 06be942d
      description: <p>A Task whose result is the raw XML string contents of the Application Manifest. </p>
- uid: system.fabric._application_management_client.getApplicationManifestAsync(String,String,Duration)
  id: getApplicationManifestAsync(String,String,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: getApplicationManifestAsync(String applicationTypeName, String applicationTypeVersion, Duration timeout)
  nameWithType: ApplicationManagementClient.getApplicationManifestAsync(String applicationTypeName, String applicationTypeVersion, Duration timeout)
  fullName: CompletableFuture<String> system.fabric.ApplicationManagementClient.getApplicationManifestAsync(String applicationTypeName, String applicationTypeVersion, Duration timeout)
  overload: system.fabric._application_management_client.getApplicationManifestAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 858
  package: system.fabric
  summary: >-
    <p>Gets the contents of a provisioned Application Manifest stored in the cluster.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<String> getApplicationManifestAsync(String applicationTypeName, String applicationTypeVersion, Duration timeout)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>The type name as specified in the Application Manifest. </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>The type version as specified in the Application Manifest. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 06be942d
      description: <p>A Task whose result is the raw XML string contents of the Application Manifest. </p>
- uid: system.fabric._application_management_client.getApplicationUpgradeProgressAsync(URI)
  id: getApplicationUpgradeProgressAsync(URI)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: getApplicationUpgradeProgressAsync(URI applicationName)
  nameWithType: ApplicationManagementClient.getApplicationUpgradeProgressAsync(URI applicationName)
  fullName: CompletableFuture<ApplicationUpgradeProgress> system.fabric.ApplicationManagementClient.getApplicationUpgradeProgressAsync(URI applicationName)
  overload: system.fabric._application_management_client.getApplicationUpgradeProgressAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 520
  package: system.fabric
  summary: >-
    <p>Retrieves the upgrade progress of the specified application instance.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>
  syntax:
    content: public CompletableFuture<ApplicationUpgradeProgress> getApplicationUpgradeProgressAsync(URI applicationName)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The URI of the application instance name. </p>
    return:
      type: 9cdf14d0system.fabric._application_upgrade_progressa08ddfce
      description: <p>The upgrade progress of the specified application instance. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_element_not_found_exception
- uid: system.fabric._application_management_client.getApplicationUpgradeProgressAsync(URI,Duration)
  id: getApplicationUpgradeProgressAsync(URI,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: getApplicationUpgradeProgressAsync(URI applicationName, Duration timeout)
  nameWithType: ApplicationManagementClient.getApplicationUpgradeProgressAsync(URI applicationName, Duration timeout)
  fullName: CompletableFuture<ApplicationUpgradeProgress> system.fabric.ApplicationManagementClient.getApplicationUpgradeProgressAsync(URI applicationName, Duration timeout)
  overload: system.fabric._application_management_client.getApplicationUpgradeProgressAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 543
  package: system.fabric
  summary: >-
    <p>Retrieves the upgrade progress of the specified application instance.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>
  syntax:
    content: public CompletableFuture<ApplicationUpgradeProgress> getApplicationUpgradeProgressAsync(URI applicationName, Duration timeout)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The URI of the application instance name. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 9cdf14d0system.fabric._application_upgrade_progressa08ddfce
      description: <p>The upgrade progress of the specified application instance. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_element_not_found_exception
- uid: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress)
  id: moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress)
  nameWithType: ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress)
  overload: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 593
  package: system.fabric
  summary: >-
    <p>Instructs the Service Fabric to upgrade the application instance in the next upgrade domain.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <bold>Remarks:</bold>Service Fabric would only move to the next upgrade domain if it has completed the upgrade domain it is currently updating. </p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress)
    parameters:
    - id: upgradeProgress
      type: system.fabric._application_upgrade_progress
      description: <p>The upgrade progress of the application instance of interest. This provides information about the next upgrade domain to be upgraded. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded application instance. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_element_not_found_exception
- uid: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress,Duration)
  id: moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress, Duration timeout)
  nameWithType: ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress, Duration timeout)
  overload: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 621
  package: system.fabric
  summary: >-
    <p>Instructs the Service Fabric to upgrade the application instance in the next upgrade domain.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <bold>Remarks:</bold>Service Fabric would only move to the next upgrade domain if it has completed the upgrade domain it is currently updating. </p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress, Duration timeout)
    parameters:
    - id: upgradeProgress
      type: system.fabric._application_upgrade_progress
      description: <p>The upgrade progress of the application instance of interest. This provides information about the next upgrade domain to be upgraded. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded application instance. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_element_not_found_exception
- uid: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(URI,String)
  id: moveNextApplicationUpgradeDomainAsync(URI,String)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: moveNextApplicationUpgradeDomainAsync(URI applicationName, String nextUpgradeDomain)
  nameWithType: ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(URI applicationName, String nextUpgradeDomain)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(URI applicationName, String nextUpgradeDomain)
  overload: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 904
  package: system.fabric
  summary: >-
    <p>Instructs the Service Fabric to upgrade the application instance in the next upgrade domain.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextApplicationUpgradeDomainAsync(URI applicationName, String nextUpgradeDomain)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The Upgrade progress of the application instance of interest. This provides information about the next upgrade domain to be upgraded. </p>
    - id: nextUpgradeDomain
      type: "26831127"
      description: <p>next upgrade domain name </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded application instance. </p>
- uid: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(URI,String,Duration)
  id: moveNextApplicationUpgradeDomainAsync(URI,String,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: moveNextApplicationUpgradeDomainAsync(URI applicationName, String nextUpgradeDomain, Duration timeout)
  nameWithType: ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(URI applicationName, String nextUpgradeDomain, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(URI applicationName, String nextUpgradeDomain, Duration timeout)
  overload: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 926
  package: system.fabric
  summary: >-
    <p>Instructs the Service Fabric to upgrade the application instance in the next upgrade domain.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextApplicationUpgradeDomainAsync(URI applicationName, String nextUpgradeDomain, Duration timeout)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The Upgrade progress of the application instance of interest. This provides information about the next upgrade domain to be upgraded. </p>
    - id: nextUpgradeDomain
      type: "26831127"
      description: <p>next upgrade domain name </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded application instance. </p>
- uid: system.fabric._application_management_client.provisionApplicationAsync(String)
  id: provisionApplicationAsync(String)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: provisionApplicationAsync(String applicationBuildPath)
  nameWithType: ApplicationManagementClient.provisionApplicationAsync(String applicationBuildPath)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.provisionApplicationAsync(String applicationBuildPath)
  overload: system.fabric._application_management_client.provisionApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 199
  package: system.fabric
  summary: >-
    <p>Provisions or registers a Service Fabric application type with the cluster.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageBuilderValidationError</ref> : There are errors in the manifests being provisioned. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeProvisionInProgress</ref> : Another version of the application type is currently being provisioned. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref> : The application name is not a valid Naming URI. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</ref> : A corrupted file was encountered on the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageStoreIOException</ref> : There was an IO error communicating with the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeAlreadyExists</ref> : The application type has already been provisioned </p>

    <p>

      <bold>Remarks:</bold>This is mandatory before an application instance can be created. </p>
  syntax: &o1
    content: public CompletableFuture<Boolean> provisionApplicationAsync(String applicationBuildPath)
    parameters:
    - id: applicationBuildPath
      type: "26831127"
      description: <p>Relative path to the application package in the ImageStore location specified in the Cluster Manifest. </p>
    return:
      type: 7e53ac82
      description: <p>The registered Service Fabric application. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_exception
  - type: system.fabric.exception._fabric_element_already_exists_exception
  - type: system.fabric.exception._unauthorized_access_exception
    description: <p>There was an error accessing a file on the ImageStore. </p>
- uid: system.fabric._application_management_client.provisionApplicationAsync(String,Duration)
  id: provisionApplicationAsync(String,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: provisionApplicationAsync(String applicationBuildPath, Duration timeout)
  nameWithType: ApplicationManagementClient.provisionApplicationAsync(String applicationBuildPath, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.provisionApplicationAsync(String applicationBuildPath, Duration timeout)
  overload: system.fabric._application_management_client.provisionApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 249
  package: system.fabric
  summary: >-
    <p>Provisions or registers a Service Fabric application type with the cluster.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageBuilderValidationError</ref> : There are errors in the manifests being provisioned. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeProvisionInProgress</ref> : Another version of the application type is currently being provisioned. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref> : The application name is not a valid Naming URI. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</ref> : A corrupted file was encountered on the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageStoreIOException</ref> : There was an IO error communicating with the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeAlreadyExists</ref> : The application type has already been provisioned </p>

    <p>

      <bold>Remarks:</bold>This is mandatory before an application instance can be created. </p>
  syntax:
    content: public CompletableFuture<Boolean> provisionApplicationAsync(String applicationBuildPath, Duration timeout)
    parameters:
    - id: applicationBuildPath
      type: "26831127"
      description: <p>Relative path to the application package in the ImageStore location specified in the Cluster Manifest. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>The registered Service Fabric application. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_exception
  - type: system.fabric.exception._fabric_element_already_exists_exception
  - type: system.fabric.exception._unauthorized_access_exception
    description: <p>There was an error accessing a file on the ImageStore. </p>
- uid: system.fabric._application_management_client.RemoveApplicationPackage(String,String)
  id: RemoveApplicationPackage(String,String)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: RemoveApplicationPackage(String imageStoreConnectionString, String applicationPackagePathInImageStore)
  nameWithType: ApplicationManagementClient.RemoveApplicationPackage(String imageStoreConnectionString, String applicationPackagePathInImageStore)
  fullName: void system.fabric.ApplicationManagementClient.RemoveApplicationPackage(String imageStoreConnectionString, String applicationPackagePathInImageStore)
  overload: system.fabric._application_management_client.RemoveApplicationPackage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1032
  package: system.fabric
  summary: >-
    <p>Deletes an application package from the Image Store.</p>

    <p></p>
  syntax:
    content: public void RemoveApplicationPackage(String imageStoreConnectionString, String applicationPackagePathInImageStore)
    parameters:
    - id: imageStoreConnectionString
      type: "26831127"
      description: <p>The connection string for the Image Store as specified in the Cluster Manifest. </p>
    - id: applicationPackagePathInImageStore
      type: "26831127"
      description: <p>The relative path for the package in the Image Store. </p>
- uid: system.fabric._application_management_client.rollbackApplicationUpgradeAsync(URI)
  id: rollbackApplicationUpgradeAsync(URI)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: rollbackApplicationUpgradeAsync(URI applicationName)
  nameWithType: ApplicationManagementClient.rollbackApplicationUpgradeAsync(URI applicationName)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.rollbackApplicationUpgradeAsync(URI applicationName)
  overload: system.fabric._application_management_client.rollbackApplicationUpgradeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1163
  package: system.fabric
  summary: >-
    <p>Starts rolling back the current application upgrade.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotUpgrading</ref> : There is no pending upgrade for the specified application to rollback. </p>
  syntax:
    content: public CompletableFuture<Boolean> rollbackApplicationUpgradeAsync(URI applicationName)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>Name of the application </p>
    return:
      type: 7e53ac82
      description: <p>CompletableFuture </p>
  exceptions:
  - type: system.fabric.exception._fabric_exception
- uid: system.fabric._application_management_client.rollbackApplicationUpgradeAsync(URI,Duration)
  id: rollbackApplicationUpgradeAsync(URI,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: rollbackApplicationUpgradeAsync(URI applicationName, Duration timeout)
  nameWithType: ApplicationManagementClient.rollbackApplicationUpgradeAsync(URI applicationName, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.rollbackApplicationUpgradeAsync(URI applicationName, Duration timeout)
  overload: system.fabric._application_management_client.rollbackApplicationUpgradeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1181
  package: system.fabric
  summary: >-
    <p>Starts rolling back the current application upgrade.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotUpgrading</ref> : There is no pending upgrade for the specified application to rollback. </p>
  syntax:
    content: public CompletableFuture<Boolean> rollbackApplicationUpgradeAsync(URI applicationName, Duration timeout)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>Name of the application </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>CompletableFuture </p>
  exceptions:
  - type: system.fabric.exception._fabric_exception
- uid: system.fabric._application_management_client.unprovisionApplicationAsync(String,String)
  id: unprovisionApplicationAsync(String,String)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: unprovisionApplicationAsync(String applicationTypeName, String applicationTypeVersion)
  nameWithType: ApplicationManagementClient.unprovisionApplicationAsync(String applicationTypeName, String applicationTypeVersion)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.unprovisionApplicationAsync(String applicationTypeName, String applicationTypeVersion)
  overload: system.fabric._application_management_client.unprovisionApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 752
  package: system.fabric
  summary: >-
    <p>Removes or unregisters a Service Fabric application type from the cluster.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeInUse</ref> : The application type is being used by one or more applications. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <bold>Remarks:</bold>This method can only be called if all application instance of the application type has been deleted. Once the application type is unregistered, no new application instance can be created for this particular application type. </p>
  syntax:
    content: public CompletableFuture<Boolean> unprovisionApplicationAsync(String applicationTypeName, String applicationTypeVersion)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>The name of the application type. </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>The version of the application type. </p>
    return:
      type: 7e53ac82
      description: <p>The removed Service Fabric application type from the cluster. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: >-
      <p>

        <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_exception
  - type: system.fabric.exception._fabric_element_not_found_exception
- uid: system.fabric._application_management_client.unprovisionApplicationAsync(String,String,Duration)
  id: unprovisionApplicationAsync(String,String,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: unprovisionApplicationAsync(String applicationTypeName, String applicationTypeVersion, Duration timeout)
  nameWithType: ApplicationManagementClient.unprovisionApplicationAsync(String applicationTypeName, String applicationTypeVersion, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.unprovisionApplicationAsync(String applicationTypeName, String applicationTypeVersion, Duration timeout)
  overload: system.fabric._application_management_client.unprovisionApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 792
  package: system.fabric
  summary: >-
    <p>Removes or unregisters a Service Fabric application type from the cluster.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeInUse</ref> : The application type is being used by one or more applications. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <bold>Remarks:</bold>This method can only be called if all application instance of the application type has been deleted. Once the application type is unregistered, no new application instance can be created for this particular application type. </p>
  syntax:
    content: public CompletableFuture<Boolean> unprovisionApplicationAsync(String applicationTypeName, String applicationTypeVersion, Duration timeout)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>The name of the application type. </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>The version of the application type. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>The removed Service Fabric application type from the cluster. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: >-
      <p>

        <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_exception
  - type: system.fabric.exception._fabric_element_not_found_exception
- uid: system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)
  id: updateApplicationAsync(ApplicationUpdateDescription)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: updateApplicationAsync(ApplicationUpdateDescription applicationUpdateDescription)
  nameWithType: ApplicationManagementClient.updateApplicationAsync(ApplicationUpdateDescription applicationUpdateDescription)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.updateApplicationAsync(ApplicationUpdateDescription applicationUpdateDescription)
  overload: system.fabric._application_management_client.updateApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1239
  package: system.fabric
  summary: >-
    <p>Updates a Service Fabric application.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> updateApplicationAsync(ApplicationUpdateDescription applicationUpdateDescription)
    parameters:
    - id: applicationUpdateDescription
      type: system.fabric._application_update_description
      description: <p>Application update description. </p>
    return:
      type: 7e53ac82
      description: <p>The updated Service Fabric application. </p>
  exceptions:
  - type: system.fabric.exception._fabric_exception
    description: >-
      <p>

        <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref>: The application name is not a valid Naming URI. </p>
  - type: system.fabric.exception._fabric_element_not_found_exception
    description: >-
      <p>

        <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref>: The application does not exist. </p>
  - type: system.fabric.exception._fabric_transient_exception
    description: >-
      <p>

        <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationUpgradeInProgress</ref>: Another application update is already in progress. </p>
  - type: 6bd89211
    description: <p>The application update parameters specified are incorrect. Refer to <xref href="system.fabric._application_update_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref>, <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and <xref href="system.fabric._application_update_description.getMetrics()" data-throw-if-not-resolved="false"></xref> for correct specification of application capacity parameters. It is possible that parameters in <xref href="system.fabric._application_update_description" data-throw-if-not-resolved="false"></xref> are valid, but when combined with existing application capacity parameters they produce an invalid combination. For example, setting <xref href="system.fabric._application_update_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref> to a value that is higher than the one that was specified in <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> when application was created. </p>
- uid: system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription,Duration)
  id: updateApplicationAsync(ApplicationUpdateDescription,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: updateApplicationAsync(ApplicationUpdateDescription applicationUpdateDescription, Duration timeout)
  nameWithType: ApplicationManagementClient.updateApplicationAsync(ApplicationUpdateDescription applicationUpdateDescription, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.updateApplicationAsync(ApplicationUpdateDescription applicationUpdateDescription, Duration timeout)
  overload: system.fabric._application_management_client.updateApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 1277
  package: system.fabric
  summary: >-
    <p>Updates a Service Fabric application.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> updateApplicationAsync(ApplicationUpdateDescription applicationUpdateDescription, Duration timeout)
    parameters:
    - id: applicationUpdateDescription
      type: system.fabric._application_update_description
      description: <p>Application update description. </p>
    - id: timeout
      type: e02a2de0
      description: <p>Defines the maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The updated Service Fabric application. </p>
  exceptions:
  - type: system.fabric.exception._fabric_exception
    description: >-
      <p>

        <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref>: The application name is not a valid Naming URI. </p>
  - type: system.fabric.exception._fabric_element_not_found_exception
    description: >-
      <p>

        <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref>: The application does not exist. </p>
  - type: system.fabric.exception._fabric_transient_exception
    description: >-
      <p>

        <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationUpgradeInProgress</ref>: Another application update is already in progress. </p>
  - type: 6bd89211
    description: <p>The application update parameters specified are incorrect. Refer to <xref href="system.fabric._application_update_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref>, <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and <xref href="system.fabric._application_update_description.getMetrics()" data-throw-if-not-resolved="false"></xref> for correct specification of application capacity parameters. It is possible that parameters in <xref href="system.fabric._application_update_description" data-throw-if-not-resolved="false"></xref> are valid, but when combined with existing application capacity parameters they produce an invalid combination. For example, setting <xref href="system.fabric._application_update_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref> to a value that is higher than the one that was specified in <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> when application was created. </p>
- uid: system.fabric._application_management_client.updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription)
  id: updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription description)
  nameWithType: ApplicationManagementClient.updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription description)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription description)
  overload: system.fabric._application_management_client.updateApplicationUpgradeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 963
  package: system.fabric
  syntax:
    content: public CompletableFuture<Boolean> updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription description)
    parameters:
    - id: description
      type: system.fabric._application_upgrade_update_description
    return:
      type: 7e53ac82
- uid: system.fabric._application_management_client.updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription,Duration)
  id: updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription description, Duration timeout)
  nameWithType: ApplicationManagementClient.updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription description, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription description, Duration timeout)
  overload: system.fabric._application_management_client.updateApplicationUpgradeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 967
  package: system.fabric
  syntax:
    content: public CompletableFuture<Boolean> updateApplicationUpgradeAsync(ApplicationUpgradeUpdateDescription description, Duration timeout)
    parameters:
    - id: description
      type: system.fabric._application_upgrade_update_description
    - id: timeout
      type: e02a2de0
    return:
      type: 7e53ac82
- uid: system.fabric._application_management_client.upgradeApplicationAsync(ApplicationUpgradeDescription)
  id: upgradeApplicationAsync(ApplicationUpgradeDescription)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: upgradeApplicationAsync(ApplicationUpgradeDescription upgradeDescription)
  nameWithType: ApplicationManagementClient.upgradeApplicationAsync(ApplicationUpgradeDescription upgradeDescription)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.upgradeApplicationAsync(ApplicationUpgradeDescription upgradeDescription)
  overload: system.fabric._application_management_client.upgradeApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 425
  package: system.fabric
  summary: >-
    <p>Performs upgrade on an application instance.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageBuilderValidationError</ref> : The upgrade is invalid with respect to the provisioned manifests. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationUpgradeValidationError</ref> : The application type does not exist. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref> : The application name is not a valid Naming URI. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</ref> : A corrupted file was encountered on the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationUpgradeInProgress</ref> : The application is already being upgraded to the requested version. </p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> upgradeApplicationAsync(ApplicationUpgradeDescription upgradeDescription)
    parameters:
    - id: upgradeDescription
      type: system.fabric._application_upgrade_description
      description: <p>The description of the upgrade policy and the application to be upgrade. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded application instance. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_exception
  - type: system.fabric.exception._fabric_element_not_found_exception
  - type: system.fabric.exception._fabric_transient_exception
  - type: system.fabric.exception._unauthorized_access_exception
    description: <p>There was an error accessing a file on the ImageStore. </p>
- uid: system.fabric._application_management_client.upgradeApplicationAsync(ApplicationUpgradeDescription,Duration)
  id: upgradeApplicationAsync(ApplicationUpgradeDescription,Duration)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  langs:
  - java
  name: upgradeApplicationAsync(ApplicationUpgradeDescription upgradeDescription, Duration timeout)
  nameWithType: ApplicationManagementClient.upgradeApplicationAsync(ApplicationUpgradeDescription upgradeDescription, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.upgradeApplicationAsync(ApplicationUpgradeDescription upgradeDescription, Duration timeout)
  overload: system.fabric._application_management_client.upgradeApplicationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationManagementClient.java
    startLine: 472
  package: system.fabric
  summary: >-
    <p>Performs upgrade on an application instance.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageBuilderValidationError</ref> : The upgrade is invalid with respect to the provisioned manifests. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationUpgradeValidationError</ref> : The application type does not exist. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref> : The application name is not a valid Naming URI. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</ref> : A corrupted file was encountered on the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationUpgradeInProgress</ref> : The application is already being upgraded to the requested version. </p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> upgradeApplicationAsync(ApplicationUpgradeDescription upgradeDescription, Duration timeout)
    parameters:
    - id: upgradeDescription
      type: system.fabric._application_upgrade_description
      description: <p>The description of the upgrade policy and the application to be upgrade. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time the system will allow this operation to continue before returning <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref>. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded application instance. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
  - type: system.fabric.exception._fabric_exception
  - type: system.fabric.exception._fabric_element_not_found_exception
  - type: system.fabric.exception._fabric_transient_exception
  - type: system.fabric.exception._unauthorized_access_exception
    description: <p>There was an error accessing a file on the ImageStore. </p>
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._application_management_client.ApplicationManagementClient*
  name: ApplicationManagementClient
  nameWithType: ApplicationManagementClient.ApplicationManagementClient
  fullName: system.fabric.ApplicationManagementClient.ApplicationManagementClient
  package: system.fabric
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: system.fabric._application_management_client.provisionApplicationAsync*
  name: provisionApplicationAsync
  nameWithType: ApplicationManagementClient.provisionApplicationAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.provisionApplicationAsync
  package: system.fabric
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: system.fabric._application_management_client.createApplicationAsync*
  name: createApplicationAsync
  nameWithType: ApplicationManagementClient.createApplicationAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.createApplicationAsync
  package: system.fabric
- uid: system.fabric._application_management_client.upgradeApplicationAsync*
  name: upgradeApplicationAsync
  nameWithType: ApplicationManagementClient.upgradeApplicationAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.upgradeApplicationAsync
  package: system.fabric
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: 9cdf14d0system.fabric._application_upgrade_progressa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._application_upgrade_progress
    name: ApplicationUpgradeProgress
    fullName: system.fabric.ApplicationUpgradeProgress
    href: system.fabric._application_upgrade_progress.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._application_management_client.getApplicationUpgradeProgressAsync*
  name: getApplicationUpgradeProgressAsync
  nameWithType: ApplicationManagementClient.getApplicationUpgradeProgressAsync
  fullName: CompletableFuture<ApplicationUpgradeProgress> system.fabric.ApplicationManagementClient.getApplicationUpgradeProgressAsync
  package: system.fabric
- uid: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync*
  name: moveNextApplicationUpgradeDomainAsync
  nameWithType: ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync
  package: system.fabric
- uid: system.fabric._application_management_client.deleteApplicationAsync*
  name: deleteApplicationAsync
  nameWithType: ApplicationManagementClient.deleteApplicationAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.deleteApplicationAsync
  package: system.fabric
- uid: system.fabric._application_management_client.unprovisionApplicationAsync*
  name: unprovisionApplicationAsync
  nameWithType: ApplicationManagementClient.unprovisionApplicationAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.unprovisionApplicationAsync
  package: system.fabric
- uid: 06be942d
  spec.java:
  - name: CompletableFuture<String>
    fullName: CompletableFuture<String>
- uid: system.fabric._application_management_client.getApplicationManifestAsync*
  name: getApplicationManifestAsync
  nameWithType: ApplicationManagementClient.getApplicationManifestAsync
  fullName: CompletableFuture<String> system.fabric.ApplicationManagementClient.getApplicationManifestAsync
  package: system.fabric
- uid: system.fabric._application_management_client.updateApplicationUpgradeAsync*
  name: updateApplicationUpgradeAsync
  nameWithType: ApplicationManagementClient.updateApplicationUpgradeAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.updateApplicationUpgradeAsync
  package: system.fabric
- uid: system.fabric._application_management_client.copyApplicationPackage*
  name: copyApplicationPackage
  nameWithType: ApplicationManagementClient.copyApplicationPackage
  fullName: void system.fabric.ApplicationManagementClient.copyApplicationPackage
  package: system.fabric
- uid: system.fabric._application_management_client.RemoveApplicationPackage*
  name: RemoveApplicationPackage
  nameWithType: ApplicationManagementClient.RemoveApplicationPackage
  fullName: void system.fabric.ApplicationManagementClient.RemoveApplicationPackage
  package: system.fabric
- uid: system.fabric._application_management_client.deployServicePackageToNode*
  name: deployServicePackageToNode
  nameWithType: ApplicationManagementClient.deployServicePackageToNode
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.deployServicePackageToNode
  package: system.fabric
- uid: system.fabric._application_management_client.rollbackApplicationUpgradeAsync*
  name: rollbackApplicationUpgradeAsync
  nameWithType: ApplicationManagementClient.rollbackApplicationUpgradeAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.rollbackApplicationUpgradeAsync
  package: system.fabric
- uid: 6bd89211
  spec.java:
  - name: java.lang.IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: system.fabric._application_management_client.updateApplicationAsync*
  name: updateApplicationAsync
  nameWithType: ApplicationManagementClient.updateApplicationAsync
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.updateApplicationAsync
  package: system.fabric
- uid: system.fabric._application_management_client.close*
  name: close
  nameWithType: ApplicationManagementClient.close
  fullName: void system.fabric.ApplicationManagementClient.close
  package: system.fabric
- uid: system.fabric.interop._native_async_callback
  parent: system.fabric.interop
  href: system.fabric.interop._native_async_callback.yml
  name: NativeAsyncCallback
  nameWithType: NativeAsyncCallback
  fullName: system.fabric.interop.NativeAsyncCallback
  type: Interface
  syntax:
    content: public interface NativeAsyncCallback
- uid: system.fabric._application_upgrade_progress
  parent: system.fabric
  href: system.fabric._application_upgrade_progress.yml
  name: ApplicationUpgradeProgress
  nameWithType: ApplicationUpgradeProgress
  fullName: system.fabric.ApplicationUpgradeProgress
  type: Class
  summary: <p>Represents the upgrade status of the application instance. </p>
  syntax:
    content: public class ApplicationUpgradeProgress
- uid: system.fabric._application_description
  parent: system.fabric
  href: system.fabric._application_description.yml
  name: ApplicationDescription
  nameWithType: ApplicationDescription
  fullName: system.fabric.ApplicationDescription
  type: Class
  summary: <p>Describes an application to be created by using <xref href="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class ApplicationDescription
- uid: system.fabric._application_upgrade_description
  parent: system.fabric
  href: system.fabric._application_upgrade_description.yml
  name: ApplicationUpgradeDescription
  nameWithType: ApplicationUpgradeDescription
  fullName: system.fabric.ApplicationUpgradeDescription
  type: Class
  summary: <p>Describes the upgrade policy and the application to be upgraded. </p>
  syntax:
    content: public class ApplicationUpgradeDescription
- uid: system.fabric._application_upgrade_update_description
  parent: system.fabric
  href: system.fabric._application_upgrade_update_description.yml
  name: ApplicationUpgradeUpdateDescription
  nameWithType: ApplicationUpgradeUpdateDescription
  fullName: system.fabric.ApplicationUpgradeUpdateDescription
  type: Class
  summary: <p>Used to modify the upgrade parameters describing the behavior of application upgrades. </p>
  syntax:
    content: public class ApplicationUpgradeUpdateDescription
- uid: system.fabric._package_sharing_policy_list
  parent: system.fabric
  href: system.fabric._package_sharing_policy_list.yml
  name: PackageSharingPolicyList
  nameWithType: PackageSharingPolicyList
  fullName: system.fabric.PackageSharingPolicyList
  type: Class
  summary: <p>Represents a list of <xref href="system.fabric._package_sharing_policy" data-throw-if-not-resolved="false"></xref> objects. </p>
  syntax:
    content: public class PackageSharingPolicyList
- uid: system.fabric._application_update_description
  parent: system.fabric
  href: system.fabric._application_update_description.yml
  name: ApplicationUpdateDescription
  nameWithType: ApplicationUpdateDescription
  fullName: system.fabric.ApplicationUpdateDescription
  type: Class
  summary: <p>Describes an update of application capacity that will be updated using <xref href="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class ApplicationUpdateDescription
- uid: system.fabric.exception._fabric_object_closed_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_object_closed_exception.yml
  name: FabricObjectClosedException
  nameWithType: FabricObjectClosedException
  fullName: system.fabric.exception.FabricObjectClosedException
  type: Class
  syntax:
    content: public class FabricObjectClosedException
- uid: system.fabric._fabric_client
  parent: system.fabric
  href: system.fabric._fabric_client.yml
  name: FabricClient
  nameWithType: FabricClient
  fullName: system.fabric.FabricClient
  type: Class
  summary: >-
    <p>Creates and manages Service Fabric services and other entities. </p>

    <p>

      <bold>Remarks:</bold>It is highly recommended that you share FabricClients as much as possible. This is because the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>
  syntax:
    content: public class FabricClient
- uid: system.fabric.exception._fabric_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_exception.yml
  name: FabricException
  nameWithType: FabricException
  fullName: system.fabric.exception.FabricException
  type: Class
  syntax:
    content: public class FabricException
- uid: system.fabric.exception._fabric_element_already_exists_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_element_already_exists_exception.yml
  name: FabricElementAlreadyExistsException
  nameWithType: FabricElementAlreadyExistsException
  fullName: system.fabric.exception.FabricElementAlreadyExistsException
  type: Class
  syntax:
    content: public class FabricElementAlreadyExistsException
- uid: system.fabric.exception._unauthorized_access_exception
  parent: system.fabric.exception
  href: system.fabric.exception._unauthorized_access_exception.yml
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: system.fabric.exception.UnauthorizedAccessException
  type: Class
  summary: <p>Indicates mismatch between access credentials passed while creating visitor client object and the expected credentials that visitor services expects. </p>
  syntax:
    content: public class UnauthorizedAccessException
- uid: system.fabric.exception._fabric_element_not_found_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_element_not_found_exception.yml
  name: FabricElementNotFoundException
  nameWithType: FabricElementNotFoundException
  fullName: system.fabric.exception.FabricElementNotFoundException
  type: Class
  syntax:
    content: public class FabricElementNotFoundException
- uid: system.fabric.exception._fabric_transient_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_transient_exception.yml
  name: FabricTransientException
  nameWithType: FabricTransientException
  fullName: system.fabric.exception.FabricTransientException
  type: Class
  syntax:
    content: public class FabricTransientException
- uid: system.fabric._application_management_client.provisionApplicationAsync(String)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  name: provisionApplicationAsync(String applicationBuildPath)
  nameWithType: ApplicationManagementClient.provisionApplicationAsync(String applicationBuildPath)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.provisionApplicationAsync(String applicationBuildPath)
  type: Method
  summary: >-
    <p>Provisions or registers a Service Fabric application type with the cluster.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageBuilderValidationError</ref> : There are errors in the manifests being provisioned. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeProvisionInProgress</ref> : Another version of the application type is currently being provisioned. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#InvalidNameUri</ref> : The application name is not a valid Naming URI. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</ref> : A corrupted file was encountered on the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ImageStoreIOException</ref> : There was an IO error communicating with the ImageStore. </p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationTypeAlreadyExists</ref> : The application type has already been provisioned </p>

    <p>

      <bold>Remarks:</bold>This is mandatory before an application instance can be created. </p>
  syntax: *o1
- uid: system.fabric._application_update_description.getMinimumNodes()
  parent: system.fabric._application_update_description
  href: system.fabric._application_update_description.yml
  name: getMinimumNodes()
  nameWithType: ApplicationUpdateDescription.getMinimumNodes()
  fullName: Long system.fabric.ApplicationUpdateDescription.getMinimumNodes()
  type: Method
  summary: >-
    <p>Gets the minimum number of nodes.</p>

    <p>

    Note that this does not mean that the Application is guaranteed to have replicas on all those nodes. </p>

    <p>If this parameter is set to zero, no capacity will be reserved. If this parameter is not set when updating application then the minimum number of nodes remains unchanged. </p>

    <p>If this parameters is greater than <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and if both parameters are specified then an <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> will be thrown when <xref href="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false"></xref> is called. </p>
  syntax:
    content: public Long getMinimumNodes()
    return:
      type: 34f09483
      description: <p>Number of nodes where Service Fabric will reserve Capacity in the cluster for this Application to be placed. </p>
- uid: system.fabric._application_update_description.getMaximumNodes()
  parent: system.fabric._application_update_description
  href: system.fabric._application_update_description.yml
  name: getMaximumNodes()
  nameWithType: ApplicationUpdateDescription.getMaximumNodes()
  fullName: Long system.fabric.ApplicationUpdateDescription.getMaximumNodes()
  type: Method
  summary: >-
    <p>Gets the maximum number of nodes where this application can be instantiated.</p>

    <p>

    If it is zero, Application can be placed on any number of nodes in the cluster. </p>

    <p>If this parameter is not specified when updating an application, then the maximum number of nodes remains unchanged. </p>

    <p>If this parameter is smaller than <xref href="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref> an <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> will be thrown when <xref href="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false"></xref> is called. </p>
  syntax:
    content: public Long getMaximumNodes()
    return:
      type: 34f09483
      description: <p>Number of nodes this application is allowed to span. Default value is zero. </p>
- uid: system.fabric._application_update_description.getMetrics()
  parent: system.fabric._application_update_description
  href: system.fabric._application_update_description.yml
  name: getMetrics()
  nameWithType: ApplicationUpdateDescription.getMetrics()
  fullName: List<ApplicationMetricDescription> system.fabric.ApplicationUpdateDescription.getMetrics()
  type: Method
  summary: >-
    <p>Gets the list of metrics for which the application capacity is defined.</p>

    <p></p>
  syntax:
    content: public List<ApplicationMetricDescription> getMetrics()
    return:
      type: 5618da2dsystem.fabric._application_metric_descriptiona08ddfce
      description: <p>Specifies the metric Capacity of the Application. Capacity is specified for each metric using <xref href="system.fabric._application_metric_description" data-throw-if-not-resolved="false"></xref>. If this parameter is not set, then application capacity metrics will remain unchanged when updating application. </p>
- uid: system.fabric._application_description.getMaximumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  name: getMaximumNodes()
  nameWithType: ApplicationDescription.getMaximumNodes()
  fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
  type: Method
  summary: >-
    <p>Gets the maximum number of nodes where this application can be instantiated.</p>

    <p></p>
  syntax:
    content: public long getMaximumNodes()
    return:
      type: 0364520f
      description: <p>Number of nodes this application is allowed to span. Default value is zero. If it is zero, Application can span any number of nodes in the cluster. If this parameter is smaller than <xref href="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref> an <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> will be thrown when <xref href="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"></xref> is called. </p>
