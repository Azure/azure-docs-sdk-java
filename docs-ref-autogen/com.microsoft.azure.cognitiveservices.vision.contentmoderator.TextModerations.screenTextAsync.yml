### YamlMime:JavaMember
nameWithType: TextModerations.screenTextAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  name: screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  nameWithType: TextModerations.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  parameters:
  - description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'. </p>"
    name: textContentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Content to screen. </p>
    name: textContent
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: screenTextOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter&text=ScreenTextOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Screen object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen&text=Screen" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax: public Observable<Screen> screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync(String,byte [],ScreenTextOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync
name: screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
metadata: {}
