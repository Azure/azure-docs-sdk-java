### YamlMime:JavaMember
uid: "com.azure.resourcemanager.monitor.implementation.ScheduledQueryRulesClientImpl.getByResourceGroupAsync*"
fullName: "com.azure.resourcemanager.monitor.implementation.ScheduledQueryRulesClientImpl.getByResourceGroupAsync"
name: "getByResourceGroupAsync"
nameWithType: "ScheduledQueryRulesClientImpl.getByResourceGroupAsync"
members:
- uid: "com.azure.resourcemanager.monitor.implementation.ScheduledQueryRulesClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.monitor.implementation.ScheduledQueryRulesClientImpl.getByResourceGroupAsync(String resourceGroupName, String ruleName)"
  name: "getByResourceGroupAsync(String resourceGroupName, String ruleName)"
  nameWithType: "ScheduledQueryRulesClientImpl.getByResourceGroupAsync(String resourceGroupName, String ruleName)"
  summary: "Gets an Log Search rule."
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the rule."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<LogSearchRuleResourceInner> getByResourceGroupAsync(String resourceGroupName, String ruleName)"
  returns:
    description: "an Log Search rule."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.monitor.fluent.models.LogSearchRuleResourceInner?alt=com.azure.resourcemanager.monitor.fluent.models.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.monitor.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-monitor:2.1.0
