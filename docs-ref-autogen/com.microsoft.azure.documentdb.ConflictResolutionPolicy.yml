### YamlMime:JavaType
uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy"
fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy"
name: "ConflictResolutionPolicy"
nameWithType: "ConflictResolutionPolicy"
summary: "Represents the conflict resolution policy configuration for specifying how to resolve conflicts in case writes from different regions result in conflicts on documents in the collection in the Azure Cosmos DB service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.documentdb.JsonSerializable?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.documentdb.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>)"
- "com.microsoft.azure.documentdb.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>)"
- "com.microsoft.azure.documentdb.JsonSerializable.<T>set(java.lang.String,T)"
- "com.microsoft.azure.documentdb.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- "com.microsoft.azure.documentdb.JsonSerializable.get(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.getBoolean(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.getCollection(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.getDouble(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.getHashMap()"
- "com.microsoft.azure.documentdb.JsonSerializable.getInt(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.getLogger()"
- "com.microsoft.azure.documentdb.JsonSerializable.getLong(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.getMapper()"
- "com.microsoft.azure.documentdb.JsonSerializable.getObject(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.getObjectByPath(java.util.Collection<java.lang.String>)"
- "com.microsoft.azure.documentdb.JsonSerializable.getString(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.has(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.remove(java.lang.String)"
- "com.microsoft.azure.documentdb.JsonSerializable.toJson()"
- "com.microsoft.azure.documentdb.JsonSerializable.toJson(com.microsoft.azure.documentdb.SerializationFormattingPolicy)"
- "com.microsoft.azure.documentdb.JsonSerializable.toString()"
- "com.microsoft.azure.documentdb.JsonSerializable.toString(int)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ConflictResolutionPolicy extends JsonSerializable"
constructors:
- uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy()"
  fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy()"
  name: "ConflictResolutionPolicy()"
  nameWithType: "ConflictResolutionPolicy.ConflictResolutionPolicy()"
  summary: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> class for the Azure Cosmos DB service."
  syntax: "public ConflictResolutionPolicy()"
  desc: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> class for the Azure Cosmos DB service."
- uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy(java.lang.String)"
  fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy(String jsonString)"
  name: "ConflictResolutionPolicy(String jsonString)"
  nameWithType: "ConflictResolutionPolicy.ConflictResolutionPolicy(String jsonString)"
  parameters:
  - name: "jsonString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConflictResolutionPolicy(String jsonString)"
methods:
- uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.createCustomPolicy(java.lang.String)"
  fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.createCustomPolicy(String sprocLink)"
  name: "createCustomPolicy(String sprocLink)"
  nameWithType: "ConflictResolutionPolicy.createCustomPolicy(String sprocLink)"
  summary: "Creates a Custom conflict resolution policy."
  modifiers:
  - "static"
  parameters:
  - description: "The link to the stored procedure to perform conflict resolution."
    name: "sprocLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConflictResolutionPolicy createCustomPolicy(String sprocLink)"
  desc: "Creates a Custom conflict resolution policy. The Conflict resolution mode is set to <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionMode.Custom\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#Custom\"></xref>. Sets the <xref uid=\"com.microsoft.azure.documentdb.StoredProcedure\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoredProcedure\"></xref> which is used for conflict resolution in the Azure Cosmos DB service. This stored procedure may be created after the <xref uid=\"com.microsoft.azure.documentdb.DocumentCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentCollection\"></xref> is created and can be changed as required.\n\n *  In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed\n *  The user can provide the stored procedure @see <xref uid=\"com.microsoft.azure.documentdb.Resource.getId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Resource#getId()\"></xref>"
  returns:
    description: "policy the Custom conflict resolution policy"
    type: "<xref href=\"com.microsoft.azure.documentdb.ConflictResolutionPolicy?alt=com.microsoft.azure.documentdb.ConflictResolutionPolicy&text=ConflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy()"
  fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy()"
  name: "createLastWriterWinsPolicy()"
  nameWithType: "ConflictResolutionPolicy.createLastWriterWinsPolicy()"
  summary: "Creates a Last<wbr>Writer<wbr>Wins conflict resolution policy."
  modifiers:
  - "static"
  syntax: "public static ConflictResolutionPolicy createLastWriterWinsPolicy()"
  desc: "Creates a LastWriterWins conflict resolution policy. The Conflict resolution mode is set to <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionMode.LastWriterWins\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#LastWriterWins\"></xref>. The <xref uid=\"com.microsoft.azure.documentdb.Resource.getTimestamp()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Resource#getTimestamp()\"></xref> path will be used for last writer wins conflict-resolution. In case of a conflict occurring on a document, the document with the higher timestamp value wins."
  returns:
    description: "policy the LastWriterWins conflict resolution policy"
    type: "<xref href=\"com.microsoft.azure.documentdb.ConflictResolutionPolicy?alt=com.microsoft.azure.documentdb.ConflictResolutionPolicy&text=ConflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy(java.lang.String)"
  fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy(String path)"
  name: "createLastWriterWinsPolicy(String path)"
  nameWithType: "ConflictResolutionPolicy.createLastWriterWinsPolicy(String path)"
  summary: "Creates a Last<wbr>Writer<wbr>Wins conflict resolution policy."
  modifiers:
  - "static"
  parameters:
  - description: "The path to check values for last-writer wins conflict resolution.\n             That path is a rooted path of the property in the document, such as \"/name/first\"."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConflictResolutionPolicy createLastWriterWinsPolicy(String path)"
  desc: "Creates a LastWriterWins conflict resolution policy. The Conflict resolution mode is set to <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionMode.LastWriterWins\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#LastWriterWins\"></xref>. The path which is present in each document in the Azure Cosmos DB service is used for last writer wins conflict-resolution. This path must be present in each document and must be an integer value. In case of a conflict occurring on a document, the document with the higher integer value in the specified path will be picked."
  returns:
    description: "policy the LastWriterWins conflict resolution policy"
    type: "<xref href=\"com.microsoft.azure.documentdb.ConflictResolutionPolicy?alt=com.microsoft.azure.documentdb.ConflictResolutionPolicy&text=ConflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionMode()"
  fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionMode()"
  name: "getConflictResolutionMode()"
  nameWithType: "ConflictResolutionPolicy.getConflictResolutionMode()"
  summary: "Gets the <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode\"></xref> in the Azure Cosmos DB service."
  syntax: "public ConflictResolutionMode getConflictResolutionMode()"
  desc: "Gets the <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode\"></xref> in the Azure Cosmos DB service. By default it is <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionMode.LastWriterWins\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#LastWriterWins\"></xref>."
  returns:
    description: "ConflictResolutionMode."
    type: "<xref href=\"com.microsoft.azure.documentdb.ConflictResolutionMode?alt=com.microsoft.azure.documentdb.ConflictResolutionMode&text=ConflictResolutionMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionPath()"
  fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionPath()"
  name: "getConflictResolutionPath()"
  nameWithType: "ConflictResolutionPolicy.getConflictResolutionPath()"
  summary: "Gets the path which is present in each document in the Azure Cosmos DB service for last writer wins conflict-resolution."
  syntax: "public String getConflictResolutionPath()"
  desc: "Gets the path which is present in each document in the Azure Cosmos DB service for last writer wins conflict-resolution. This path must be present in each document and must be an integer value. In case of a conflict occurring on a document, the document with the higher integer value in the specified path will be picked. If the path is unspecified, by default the <xref uid=\"com.microsoft.azure.documentdb.Resource.getTimestamp()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Resource#getTimestamp()\"></xref> path will be used. This value should only be set when using <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionMode.LastWriterWins\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#LastWriterWins\"></xref>"
  returns:
    description: "The path to check values for last-writer wins conflict resolution.\n That path is a rooted path of the property in the document, such as \"/name/first\"."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionProcedure()"
  fullName: "com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionProcedure()"
  name: "getConflictResolutionProcedure()"
  nameWithType: "ConflictResolutionPolicy.getConflictResolutionProcedure()"
  summary: "Gets the <xref uid=\"com.microsoft.azure.documentdb.StoredProcedure\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoredProcedure\"></xref> which is used for conflict resolution in the Azure Cosmos DB service."
  syntax: "public String getConflictResolutionProcedure()"
  desc: "Gets the <xref uid=\"com.microsoft.azure.documentdb.StoredProcedure\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoredProcedure\"></xref> which is used for conflict resolution in the Azure Cosmos DB service. This stored procedure may be created after the <xref uid=\"com.microsoft.azure.documentdb.DocumentCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentCollection\"></xref> is created and can be changed as required.\n\n *  This value should only be set when using <xref uid=\"com.microsoft.azure.documentdb.ConflictResolutionMode.Custom\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionMode#Custom\"></xref>\n *  In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed\n *  The user can provide the stored procedure @see <xref uid=\"com.microsoft.azure.documentdb.Resource.getId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Resource#getId()\"></xref>"
  returns:
    description: "the stored procedure to perform conflict resolution.]"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents the conflict resolution policy configuration for specifying how to resolve conflicts in case writes from different regions result in conflicts on documents in the collection in the Azure Cosmos DB service. A collection with custom conflict resolution with no user-registered stored procedure.\n\n```java\nDocumentCollection collectionSpec = new DocumentCollection();\n collectionSpec.setId(\"Multi-master collection\");\n\n ConflictResolutionPolicy policy = ConflictResolutionPolicy.createCustomPolicy();\n collectionSpec.setConflictResolutionPolicy(policy);\n\n DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\n         .toBlocking().single().getResource();\n```\n\nA collection with custom conflict resolution with a user-registered stored procedure.\n\n```java\nDocumentCollection collectionSpec = new DocumentCollection();\n collectionSpec.setId(\"Multi-master collection\");\n\n ConflictResolutionPolicy policy = ConflictResolutionPolicy.createCustomPolicy(conflictResolutionSprocName);\n collectionSpec.setConflictResolutionPolicy(policy);\n\n DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\n         .toBlocking().single().getResource();\n```\n\nA collection with last writer wins conflict resolution, based on a path in the conflicting documents. A collection with custom conflict resolution with a user-registered stored procedure.\n\n```java\nDocumentCollection collectionSpec = new DocumentCollection();\n collectionSpec.setId(\"Multi-master collection\");\n\n ConflictResolutionPolicy policy = ConflictResolutionPolicy.createLastWriterWinsPolicy(\"/path/for/conflict/resolution\");\n collectionSpec.setConflictResolutionPolicy(policy);\n\n DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)\n         .toBlocking().single().getResource();\n```"
metadata: {}
package: "com.microsoft.azure.documentdb"
artifact: com.microsoft.azure:azure-documentdb:2.4.7
