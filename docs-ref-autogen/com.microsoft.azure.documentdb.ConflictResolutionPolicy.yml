### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  id: ConflictResolutionPolicy
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb
  children:
  - com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy()
  - com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy(java.lang.String)
  - com.microsoft.azure.documentdb.ConflictResolutionPolicy.createCustomPolicy(java.lang.String)
  - com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy()
  - com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy(java.lang.String)
  - com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionMode()
  - com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionPath()
  - com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionProcedure()
  langs:
  - java
  name: ConflictResolutionPolicy
  nameWithType: ConflictResolutionPolicy
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  type: Class
  package: com.microsoft.azure.documentdb
  summary: >-
    Represents the conflict resolution policy configuration for specifying how to resolve conflicts in case writes from different regions result in conflicts on documents in the collection in the Azure Cosmos DB service. A collection with custom conflict resolution with no user-registered stored procedure.


    ```java

    DocumentCollection collectionSpec = new DocumentCollection();
     collectionSpec.setId("Multi-master collection");

     ConflictResolutionPolicy policy = ConflictResolutionPolicy.createCustomPolicy();
     collectionSpec.setConflictResolutionPolicy(policy);

     DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)
             .toBlocking().single().getResource();
    ```


    A collection with custom conflict resolution with a user-registered stored procedure.


    ```java

    DocumentCollection collectionSpec = new DocumentCollection();
     collectionSpec.setId("Multi-master collection");

     ConflictResolutionPolicy policy = ConflictResolutionPolicy.createCustomPolicy(conflictResolutionSprocName);
     collectionSpec.setConflictResolutionPolicy(policy);

     DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)
             .toBlocking().single().getResource();
    ```


    A collection with last writer wins conflict resolution, based on a path in the conflicting documents. A collection with custom conflict resolution with a user-registered stored procedure.


    ```java

    DocumentCollection collectionSpec = new DocumentCollection();
     collectionSpec.setId("Multi-master collection");

     ConflictResolutionPolicy policy = ConflictResolutionPolicy.createLastWriterWinsPolicy("/path/for/conflict/resolution");
     collectionSpec.setConflictResolutionPolicy(policy);

     DocumentCollection collection = client.createCollection(databaseLink, collectionSpec, null)
             .toBlocking().single().getResource();
    ```
  syntax:
    content: public class ConflictResolutionPolicy extends JsonSerializable
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.documentdb.JsonSerializable
  inheritedMembers:
  - com.microsoft.azure.documentdb.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>)
  - com.microsoft.azure.documentdb.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>)
  - com.microsoft.azure.documentdb.JsonSerializable.<T>set(java.lang.String,T)
  - com.microsoft.azure.documentdb.JsonSerializable.<T>toObject(java.lang.Class<T>)
  - com.microsoft.azure.documentdb.JsonSerializable.get(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.getBoolean(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.getCollection(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.getDouble(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.getHashMap()
  - com.microsoft.azure.documentdb.JsonSerializable.getInt(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.getLogger()
  - com.microsoft.azure.documentdb.JsonSerializable.getLong(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.getMapper()
  - com.microsoft.azure.documentdb.JsonSerializable.getObject(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.getObjectByPath(java.util.Collection<java.lang.String>)
  - com.microsoft.azure.documentdb.JsonSerializable.getString(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.has(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.remove(java.lang.String)
  - com.microsoft.azure.documentdb.JsonSerializable.toJson()
  - com.microsoft.azure.documentdb.JsonSerializable.toJson(com.microsoft.azure.documentdb.SerializationFormattingPolicy)
  - com.microsoft.azure.documentdb.JsonSerializable.toString()
  - com.microsoft.azure.documentdb.JsonSerializable.toString(int)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy()
  id: ConflictResolutionPolicy()
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  langs:
  - java
  name: ConflictResolutionPolicy()
  nameWithType: ConflictResolutionPolicy.ConflictResolutionPolicy()
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy()
  overload: com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy*
  type: Constructor
  package: com.microsoft.azure.documentdb
  summary: Initializes a new instance of the <xref uid="com.microsoft.azure.documentdb.ConflictResolutionPolicy" data-throw-if-not-resolved="false">ConflictResolutionPolicy</xref> class for the Azure Cosmos DB service.
  syntax:
    content: public ConflictResolutionPolicy()
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy(java.lang.String)
  id: ConflictResolutionPolicy(java.lang.String)
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  langs:
  - java
  name: ConflictResolutionPolicy(String jsonString)
  nameWithType: ConflictResolutionPolicy.ConflictResolutionPolicy(String jsonString)
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy(String jsonString)
  overload: com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy*
  type: Constructor
  package: com.microsoft.azure.documentdb
  syntax:
    content: public ConflictResolutionPolicy(String jsonString)
    parameters:
    - id: jsonString
      type: java.lang.String
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createCustomPolicy(java.lang.String)
  id: createCustomPolicy(java.lang.String)
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  langs:
  - java
  name: createCustomPolicy(String sprocLink)
  nameWithType: ConflictResolutionPolicy.createCustomPolicy(String sprocLink)
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createCustomPolicy(String sprocLink)
  overload: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createCustomPolicy*
  type: Method
  package: com.microsoft.azure.documentdb
  summary: >-
    Creates a Custom conflict resolution policy. The Conflict resolution mode is set to <xref uid="com.microsoft.azure.documentdb.ConflictResolutionMode.Custom" data-throw-if-not-resolved="false">ConflictResolutionMode#Custom</xref>. Sets the <xref uid="com.microsoft.azure.documentdb.StoredProcedure" data-throw-if-not-resolved="false">StoredProcedure</xref> which is used for conflict resolution in the Azure Cosmos DB service. This stored procedure may be created after the <xref uid="com.microsoft.azure.documentdb.DocumentCollection" data-throw-if-not-resolved="false">DocumentCollection</xref> is created and can be changed as required.

     *  In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed
     *  The user can provide the stored procedure @see <xref uid="com.microsoft.azure.documentdb.Resource.getId()" data-throw-if-not-resolved="false">Resource#getId()</xref>
  syntax:
    content: public static ConflictResolutionPolicy createCustomPolicy(String sprocLink)
    parameters:
    - id: sprocLink
      type: java.lang.String
      description: The link to the stored procedure to perform conflict resolution.
    return:
      type: com.microsoft.azure.documentdb.ConflictResolutionPolicy
      description: policy the Custom conflict resolution policy
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy()
  id: createLastWriterWinsPolicy()
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  langs:
  - java
  name: createLastWriterWinsPolicy()
  nameWithType: ConflictResolutionPolicy.createLastWriterWinsPolicy()
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy()
  overload: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy*
  type: Method
  package: com.microsoft.azure.documentdb
  summary: Creates a LastWriterWins conflict resolution policy. The Conflict resolution mode is set to <xref uid="com.microsoft.azure.documentdb.ConflictResolutionMode.LastWriterWins" data-throw-if-not-resolved="false">ConflictResolutionMode#LastWriterWins</xref>. The <xref uid="com.microsoft.azure.documentdb.Resource.getTimestamp()" data-throw-if-not-resolved="false">Resource#getTimestamp()</xref> path will be used for last writer wins conflict-resolution. In case of a conflict occurring on a document, the document with the higher timestamp value wins.
  syntax:
    content: public static ConflictResolutionPolicy createLastWriterWinsPolicy()
    return:
      type: com.microsoft.azure.documentdb.ConflictResolutionPolicy
      description: policy the LastWriterWins conflict resolution policy
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy(java.lang.String)
  id: createLastWriterWinsPolicy(java.lang.String)
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  langs:
  - java
  name: createLastWriterWinsPolicy(String path)
  nameWithType: ConflictResolutionPolicy.createLastWriterWinsPolicy(String path)
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy(String path)
  overload: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy*
  type: Method
  package: com.microsoft.azure.documentdb
  summary: Creates a LastWriterWins conflict resolution policy. The Conflict resolution mode is set to <xref uid="com.microsoft.azure.documentdb.ConflictResolutionMode.LastWriterWins" data-throw-if-not-resolved="false">ConflictResolutionMode#LastWriterWins</xref>. The path which is present in each document in the Azure Cosmos DB service is used for last writer wins conflict-resolution. This path must be present in each document and must be an integer value. In case of a conflict occurring on a document, the document with the higher integer value in the specified path will be picked.
  syntax:
    content: public static ConflictResolutionPolicy createLastWriterWinsPolicy(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: >-
        The path to check values for last-writer wins conflict resolution.
                     That path is a rooted path of the property in the document, such as "/name/first".
    return:
      type: com.microsoft.azure.documentdb.ConflictResolutionPolicy
      description: policy the LastWriterWins conflict resolution policy
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionMode()
  id: getConflictResolutionMode()
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  langs:
  - java
  name: getConflictResolutionMode()
  nameWithType: ConflictResolutionPolicy.getConflictResolutionMode()
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionMode()
  overload: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionMode*
  type: Method
  package: com.microsoft.azure.documentdb
  summary: Gets the <xref uid="com.microsoft.azure.documentdb.ConflictResolutionMode" data-throw-if-not-resolved="false">ConflictResolutionMode</xref> in the Azure Cosmos DB service. By default it is <xref uid="com.microsoft.azure.documentdb.ConflictResolutionMode.LastWriterWins" data-throw-if-not-resolved="false">ConflictResolutionMode#LastWriterWins</xref>.
  syntax:
    content: public ConflictResolutionMode getConflictResolutionMode()
    return:
      type: com.microsoft.azure.documentdb.ConflictResolutionMode
      description: ConflictResolutionMode.
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionPath()
  id: getConflictResolutionPath()
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  langs:
  - java
  name: getConflictResolutionPath()
  nameWithType: ConflictResolutionPolicy.getConflictResolutionPath()
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionPath()
  overload: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionPath*
  type: Method
  package: com.microsoft.azure.documentdb
  summary: Gets the path which is present in each document in the Azure Cosmos DB service for last writer wins conflict-resolution. This path must be present in each document and must be an integer value. In case of a conflict occurring on a document, the document with the higher integer value in the specified path will be picked. If the path is unspecified, by default the <xref uid="com.microsoft.azure.documentdb.Resource.getTimestamp()" data-throw-if-not-resolved="false">Resource#getTimestamp()</xref> path will be used. This value should only be set when using <xref uid="com.microsoft.azure.documentdb.ConflictResolutionMode.LastWriterWins" data-throw-if-not-resolved="false">ConflictResolutionMode#LastWriterWins</xref>
  syntax:
    content: public String getConflictResolutionPath()
    return:
      type: java.lang.String
      description: >-
        The path to check values for last-writer wins conflict resolution.
         That path is a rooted path of the property in the document, such as "/name/first".
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionProcedure()
  id: getConflictResolutionProcedure()
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.ConflictResolutionPolicy
  langs:
  - java
  name: getConflictResolutionProcedure()
  nameWithType: ConflictResolutionPolicy.getConflictResolutionProcedure()
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionProcedure()
  overload: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionProcedure*
  type: Method
  package: com.microsoft.azure.documentdb
  summary: >-
    Gets the <xref uid="com.microsoft.azure.documentdb.StoredProcedure" data-throw-if-not-resolved="false">StoredProcedure</xref> which is used for conflict resolution in the Azure Cosmos DB service. This stored procedure may be created after the <xref uid="com.microsoft.azure.documentdb.DocumentCollection" data-throw-if-not-resolved="false">DocumentCollection</xref> is created and can be changed as required.

     *  This value should only be set when using <xref uid="com.microsoft.azure.documentdb.ConflictResolutionMode.Custom" data-throw-if-not-resolved="false">ConflictResolutionMode#Custom</xref>
     *  In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed
     *  The user can provide the stored procedure @see <xref uid="com.microsoft.azure.documentdb.Resource.getId()" data-throw-if-not-resolved="false">Resource#getId()</xref>
  syntax:
    content: public String getConflictResolutionProcedure()
    return:
      type: java.lang.String
      description: the stored procedure to perform conflict resolution.]
references:
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy*
  name: ConflictResolutionPolicy
  nameWithType: ConflictResolutionPolicy.ConflictResolutionPolicy
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.ConflictResolutionPolicy
  package: com.microsoft.azure.documentdb
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy*
  name: createLastWriterWinsPolicy
  nameWithType: ConflictResolutionPolicy.createLastWriterWinsPolicy
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createLastWriterWinsPolicy
  package: com.microsoft.azure.documentdb
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createCustomPolicy*
  name: createCustomPolicy
  nameWithType: ConflictResolutionPolicy.createCustomPolicy
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.createCustomPolicy
  package: com.microsoft.azure.documentdb
- uid: com.microsoft.azure.documentdb.ConflictResolutionMode
  name: ConflictResolutionMode
  nameWithType: ConflictResolutionMode
  fullName: com.microsoft.azure.documentdb.ConflictResolutionMode
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionMode*
  name: getConflictResolutionMode
  nameWithType: ConflictResolutionPolicy.getConflictResolutionMode
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionMode
  package: com.microsoft.azure.documentdb
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionPath*
  name: getConflictResolutionPath
  nameWithType: ConflictResolutionPolicy.getConflictResolutionPath
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionPath
  package: com.microsoft.azure.documentdb
- uid: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionProcedure*
  name: getConflictResolutionProcedure
  nameWithType: ConflictResolutionPolicy.getConflictResolutionProcedure
  fullName: com.microsoft.azure.documentdb.ConflictResolutionPolicy.getConflictResolutionProcedure
  package: com.microsoft.azure.documentdb
- uid: com.microsoft.azure.documentdb.JsonSerializable
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.microsoft.azure.documentdb.JsonSerializable
- uid: com.microsoft.azure.documentdb.JsonSerializable.getHashMap()
  name: JsonSerializable.getHashMap()
  nameWithType: JsonSerializable.getHashMap()
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getHashMap()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.microsoft.azure.documentdb.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>)
  name: JsonSerializable.<T>getObject(String,Class<T>)
  nameWithType: JsonSerializable.<T>getObject(String,Class<T>)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.microsoft.azure.documentdb.JsonSerializable.remove(java.lang.String)
  name: JsonSerializable.remove(String)
  nameWithType: JsonSerializable.remove(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.remove(java.lang.String)
- uid: com.microsoft.azure.documentdb.JsonSerializable.toString()
  name: JsonSerializable.toString()
  nameWithType: JsonSerializable.toString()
  fullName: com.microsoft.azure.documentdb.JsonSerializable.toString()
- uid: com.microsoft.azure.documentdb.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>)
  name: JsonSerializable.<T>getCollection(String,Class<T>)
  nameWithType: JsonSerializable.<T>getCollection(String,Class<T>)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>)
- uid: com.microsoft.azure.documentdb.JsonSerializable.<T>set(java.lang.String,T)
  name: JsonSerializable.<T>set(String,T)
  nameWithType: JsonSerializable.<T>set(String,T)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.<T>set(java.lang.String,T)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.documentdb.JsonSerializable.get(java.lang.String)
  name: JsonSerializable.get(String)
  nameWithType: JsonSerializable.get(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.get(java.lang.String)
- uid: com.microsoft.azure.documentdb.JsonSerializable.<T>toObject(java.lang.Class<T>)
  name: JsonSerializable.<T>toObject(Class<T>)
  nameWithType: JsonSerializable.<T>toObject(Class<T>)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.<T>toObject(java.lang.Class<T>)
- uid: com.microsoft.azure.documentdb.JsonSerializable.getCollection(java.lang.String)
  name: JsonSerializable.getCollection(String)
  nameWithType: JsonSerializable.getCollection(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getCollection(java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.microsoft.azure.documentdb.JsonSerializable.getObjectByPath(java.util.Collection<java.lang.String>)
  name: JsonSerializable.getObjectByPath(Collection<String>)
  nameWithType: JsonSerializable.getObjectByPath(Collection<String>)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getObjectByPath(java.util.Collection<java.lang.String>)
- uid: com.microsoft.azure.documentdb.JsonSerializable.getLogger()
  name: JsonSerializable.getLogger()
  nameWithType: JsonSerializable.getLogger()
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getLogger()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.microsoft.azure.documentdb.JsonSerializable.getDouble(java.lang.String)
  name: JsonSerializable.getDouble(String)
  nameWithType: JsonSerializable.getDouble(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getDouble(java.lang.String)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.microsoft.azure.documentdb.JsonSerializable.toJson()
  name: JsonSerializable.toJson()
  nameWithType: JsonSerializable.toJson()
  fullName: com.microsoft.azure.documentdb.JsonSerializable.toJson()
- uid: com.microsoft.azure.documentdb.JsonSerializable.getString(java.lang.String)
  name: JsonSerializable.getString(String)
  nameWithType: JsonSerializable.getString(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getString(java.lang.String)
- uid: com.microsoft.azure.documentdb.JsonSerializable.toJson(com.microsoft.azure.documentdb.SerializationFormattingPolicy)
  name: JsonSerializable.toJson(SerializationFormattingPolicy)
  nameWithType: JsonSerializable.toJson(SerializationFormattingPolicy)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.toJson(com.microsoft.azure.documentdb.SerializationFormattingPolicy)
- uid: com.microsoft.azure.documentdb.JsonSerializable.getMapper()
  name: JsonSerializable.getMapper()
  nameWithType: JsonSerializable.getMapper()
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getMapper()
- uid: com.microsoft.azure.documentdb.JsonSerializable.getObject(java.lang.String)
  name: JsonSerializable.getObject(String)
  nameWithType: JsonSerializable.getObject(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getObject(java.lang.String)
- uid: com.microsoft.azure.documentdb.JsonSerializable.getInt(java.lang.String)
  name: JsonSerializable.getInt(String)
  nameWithType: JsonSerializable.getInt(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getInt(java.lang.String)
- uid: com.microsoft.azure.documentdb.JsonSerializable.has(java.lang.String)
  name: JsonSerializable.has(String)
  nameWithType: JsonSerializable.has(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.has(java.lang.String)
- uid: com.microsoft.azure.documentdb.JsonSerializable.getLong(java.lang.String)
  name: JsonSerializable.getLong(String)
  nameWithType: JsonSerializable.getLong(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getLong(java.lang.String)
- uid: com.microsoft.azure.documentdb.JsonSerializable.getBoolean(java.lang.String)
  name: JsonSerializable.getBoolean(String)
  nameWithType: JsonSerializable.getBoolean(String)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getBoolean(java.lang.String)
- uid: com.microsoft.azure.documentdb.JsonSerializable.toString(int)
  name: JsonSerializable.toString(int)
  nameWithType: JsonSerializable.toString(int)
  fullName: com.microsoft.azure.documentdb.JsonSerializable.toString(int)
- uid: com.microsoft.azure.documentdb.JsonSerializable.
  name: JsonSerializable.
  nameWithType: JsonSerializable.
  fullName: com.microsoft.azure.documentdb.JsonSerializable.
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>getObject(java.lang.String,java.lang.Class
  name: T>getObject(String,Class
  nameWithType: T>getObject(String,Class
  fullName: T>getObject(java.lang.String,java.lang.Class
- uid: T>getCollection(java.lang.String,java.lang.Class
  name: T>getCollection(String,Class
  nameWithType: T>getCollection(String,Class
  fullName: T>getCollection(java.lang.String,java.lang.Class
- uid: T>set(java.lang.String,T)
  name: T>set(String,T)
  nameWithType: T>set(String,T)
  fullName: T>set(java.lang.String,T)
- uid: T>toObject(java.lang.Class
  name: T>toObject(Class
  nameWithType: T>toObject(Class
  fullName: T>toObject(java.lang.Class
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
- uid: com.microsoft.azure.documentdb.JsonSerializable.getObjectByPath(java.util.Collection
  name: JsonSerializable.getObjectByPath(Collection
  nameWithType: JsonSerializable.getObjectByPath(Collection
  fullName: com.microsoft.azure.documentdb.JsonSerializable.getObjectByPath(java.util.Collection
