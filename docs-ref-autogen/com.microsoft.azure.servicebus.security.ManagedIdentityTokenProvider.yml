### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.security.ManagedIdentityTokenProvider"
fullName: "com.microsoft.azure.servicebus.security.ManagedIdentityTokenProvider"
name: "ManagedIdentityTokenProvider"
nameWithType: "ManagedIdentityTokenProvider"
summary: "This is a token provider that obtains token using Managed Identity(MI)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.security.TokenProvider?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider(com.microsoft.azure.servicebus.security.AzureActiveDirectoryTokenProvider.AuthenticationCallback,java.lang.String,java.lang.Object)"
- "com.microsoft.azure.servicebus.security.TokenProvider.createManagedIdentityTokenProvider()"
- "com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(java.lang.String,java.lang.String)"
- "com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(java.lang.String,java.time.Instant)"
- "com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ManagedIdentityTokenProvider extends TokenProvider"
constructors:
- uid: "com.microsoft.azure.servicebus.security.ManagedIdentityTokenProvider.ManagedIdentityTokenProvider()"
  fullName: "com.microsoft.azure.servicebus.security.ManagedIdentityTokenProvider.ManagedIdentityTokenProvider()"
  name: "ManagedIdentityTokenProvider()"
  nameWithType: "ManagedIdentityTokenProvider.ManagedIdentityTokenProvider()"
  syntax: "public ManagedIdentityTokenProvider()"
methods:
- uid: "com.microsoft.azure.servicebus.security.ManagedIdentityTokenProvider.getSecurityTokenAsync(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.security.ManagedIdentityTokenProvider.getSecurityTokenAsync(String audience)"
  name: "getSecurityTokenAsync(String audience)"
  nameWithType: "ManagedIdentityTokenProvider.getSecurityTokenAsync(String audience)"
  summary: "Asynchronously gets a security token for the given audience."
  overridden: "com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(java.lang.String)"
  parameters:
  - name: "audience"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<SecurityToken> getSecurityTokenAsync(String audience)"
  desc: "Asynchronously gets a security token for the given audience. Implementations of this method may choose to create a new token for every call or return a cached token. But the token returned must be valid."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.security.SecurityToken?alt=com.microsoft.azure.servicebus.security.SecurityToken&text=SecurityToken\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "This is a token provider that obtains token using Managed Identity(MI). This token provider automatically detects MI settings."
metadata: {}
package: "com.microsoft.azure.servicebus.security"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
