### YamlMime:JavaMember
uid: "com.azure.monitor.query.implementation.logs.QueriesImpl.batchAsync*"
fullName: "com.azure.monitor.query.implementation.logs.QueriesImpl.batchAsync"
name: "batchAsync"
nameWithType: "QueriesImpl.batchAsync"
members:
- uid: "com.azure.monitor.query.implementation.logs.QueriesImpl.batchAsync(com.azure.monitor.query.implementation.logs.models.BatchRequest)"
  fullName: "com.azure.monitor.query.implementation.logs.QueriesImpl.batchAsync(BatchRequest body)"
  name: "batchAsync(BatchRequest body)"
  nameWithType: "QueriesImpl.batchAsync(BatchRequest body)"
  summary: "Executes a batch of Analytics queries for data. \\[Here\\](https://dev.loganalytics.io/documentation/Using-the-API) is an example for using POST with an Analytics query."
  parameters:
  - description: "The batch request body."
    name: "body"
    type: "<xref href=\"com.azure.monitor.query.implementation.logs.models.BatchRequest?alt=com.azure.monitor.query.implementation.logs.models.BatchRequest&text=BatchRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<BatchResponse> batchAsync(BatchRequest body)"
  returns:
    description: "response to a batch query."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.query.implementation.logs.models.BatchResponse?alt=com.azure.monitor.query.implementation.logs.models.BatchResponse&text=BatchResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.monitor.query.implementation.logs.QueriesImpl.batchAsync(com.azure.monitor.query.implementation.logs.models.BatchRequest,com.azure.core.util.Context)"
  fullName: "com.azure.monitor.query.implementation.logs.QueriesImpl.batchAsync(BatchRequest body, Context context)"
  name: "batchAsync(BatchRequest body, Context context)"
  nameWithType: "QueriesImpl.batchAsync(BatchRequest body, Context context)"
  summary: "Executes a batch of Analytics queries for data. \\[Here\\](https://dev.loganalytics.io/documentation/Using-the-API) is an example for using POST with an Analytics query."
  parameters:
  - description: "The batch request body."
    name: "body"
    type: "<xref href=\"com.azure.monitor.query.implementation.logs.models.BatchRequest?alt=com.azure.monitor.query.implementation.logs.models.BatchRequest&text=BatchRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<BatchResponse> batchAsync(BatchRequest body, Context context)"
  returns:
    description: "response to a batch query."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.query.implementation.logs.models.BatchResponse?alt=com.azure.monitor.query.implementation.logs.models.BatchResponse&text=BatchResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.monitor.query.implementation.logs"
artifact: com.azure:azure-monitor-query:1.0.1
