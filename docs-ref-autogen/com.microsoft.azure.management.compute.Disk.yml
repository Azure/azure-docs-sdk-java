### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.compute.Disk.availabilityZones()
  name: availabilityZones()
  nameWithType: Disk.availabilityZones()
  returns:
    description: <p>the availability zones assigned to the disk </p>
    type: Set&lt;<xref href="com.microsoft.azure.management.resources.fluentcore.arm.AvailabilityZoneId?alt=com.microsoft.azure.management.resources.fluentcore.arm.AvailabilityZoneId&text=AvailabilityZoneId" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Set<AvailabilityZoneId> availabilityZones()
  uid: com.microsoft.azure.management.compute.Disk.availabilityZones()
- fullName: com.microsoft.azure.management.compute.Disk.creationMethod()
  name: creationMethod()
  nameWithType: Disk.creationMethod()
  returns:
    description: <p>the disk creation method </p>
    type: <xref href="com.microsoft.azure.management.compute.DiskCreateOption?alt=com.microsoft.azure.management.compute.DiskCreateOption&text=DiskCreateOption" data-throw-if-not-resolved="False"/>
  syntax: public DiskCreateOption creationMethod()
  uid: com.microsoft.azure.management.compute.Disk.creationMethod()
- fullName: com.microsoft.azure.management.compute.Disk.grantAccess(int accessDurationInSeconds)
  name: grantAccess(int accessDurationInSeconds)
  nameWithType: Disk.grantAccess(int accessDurationInSeconds)
  parameters:
  - description: <p>the access duration in seconds </p>
    name: accessDurationInSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the read-only SAS URI to the disk </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Grants access to the disk.</p>

    <p></p>
  syntax: public String grantAccess(int accessDurationInSeconds)
  uid: com.microsoft.azure.management.compute.Disk.grantAccess(int)
- fullName: com.microsoft.azure.management.compute.Disk.grantAccessAsync(int accessDurationInSeconds)
  name: grantAccessAsync(int accessDurationInSeconds)
  nameWithType: Disk.grantAccessAsync(int accessDurationInSeconds)
  parameters:
  - description: <p>the access duration in seconds </p>
    name: accessDurationInSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning a read-only SAS URI to the disk </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Grants access to the disk asynchronously.</p>

    <p></p>
  syntax: public Observable<String> grantAccessAsync(int accessDurationInSeconds)
  uid: com.microsoft.azure.management.compute.Disk.grantAccessAsync(int)
- fullName: com.microsoft.azure.management.compute.Disk.grantAccessAsync(int accessDurationInSeconds, ServiceCallback<String> callback)
  name: grantAccessAsync(int accessDurationInSeconds, ServiceCallback<String> callback)
  nameWithType: Disk.grantAccessAsync(int accessDurationInSeconds, ServiceCallback<String> callback)
  parameters:
  - description: <p>the access duration in seconds </p>
    name: accessDurationInSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure, containing a read-only SAS URI to the disk, if successful </p>
    name: callback
    type: <xref href="ServiceCallback%3CString%3E?alt=ServiceCallback%3CString%3E&text=ServiceCallback%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CString%3E?alt=ServiceFuture%3CString%3E&text=ServiceFuture%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Grants access to the disk asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<String> grantAccessAsync(int accessDurationInSeconds, ServiceCallback<String> callback)
  uid: com.microsoft.azure.management.compute.Disk.grantAccessAsync(int,ServiceCallback<String>)
- fullName: com.microsoft.azure.management.compute.Disk.isAttachedToVirtualMachine()
  name: isAttachedToVirtualMachine()
  nameWithType: Disk.isAttachedToVirtualMachine()
  returns:
    description: <p>true if the disk is attached to a virtual machine, otherwise false </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isAttachedToVirtualMachine()
  uid: com.microsoft.azure.management.compute.Disk.isAttachedToVirtualMachine()
- fullName: com.microsoft.azure.management.compute.Disk.osType()
  name: osType()
  nameWithType: Disk.osType()
  returns:
    description: <p>the type of the operating system on the disk </p>
    type: <xref href="com.microsoft.azure.management.compute.OperatingSystemTypes?alt=com.microsoft.azure.management.compute.OperatingSystemTypes&text=OperatingSystemTypes" data-throw-if-not-resolved="False"/>
  syntax: public OperatingSystemTypes osType()
  uid: com.microsoft.azure.management.compute.Disk.osType()
- fullName: com.microsoft.azure.management.compute.Disk.revokeAccess()
  name: revokeAccess()
  nameWithType: Disk.revokeAccess()
  summary: <p>Revokes access granted to the disk. </p>
  syntax: public void revokeAccess()
  uid: com.microsoft.azure.management.compute.Disk.revokeAccess()
- fullName: com.microsoft.azure.management.compute.Disk.revokeAccessAsync()
  name: revokeAccessAsync()
  nameWithType: Disk.revokeAccessAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Revokes access granted to the disk asynchronously.</p>

    <p></p>
  syntax: public Completable revokeAccessAsync()
  uid: com.microsoft.azure.management.compute.Disk.revokeAccessAsync()
- fullName: com.microsoft.azure.management.compute.Disk.revokeAccessAsync(ServiceCallback<Void> callback)
  name: revokeAccessAsync(ServiceCallback<Void> callback)
  nameWithType: Disk.revokeAccessAsync(ServiceCallback<Void> callback)
  parameters:
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Revokes access granted to the disk asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> revokeAccessAsync(ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.Disk.revokeAccessAsync(ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.Disk.sizeInGB()
  name: sizeInGB()
  nameWithType: Disk.sizeInGB()
  returns:
    description: <p>disk size in GB </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int sizeInGB()
  uid: com.microsoft.azure.management.compute.Disk.sizeInGB()
- fullName: com.microsoft.azure.management.compute.Disk.sku()
  name: sku()
  nameWithType: Disk.sku()
  returns:
    description: <p>the disk SKU </p>
    type: <xref href="com.microsoft.azure.management.compute.DiskSkuTypes?alt=com.microsoft.azure.management.compute.DiskSkuTypes&text=DiskSkuTypes" data-throw-if-not-resolved="False"/>
  syntax: public DiskSkuTypes sku()
  uid: com.microsoft.azure.management.compute.Disk.sku()
- fullName: com.microsoft.azure.management.compute.Disk.source()
  name: source()
  nameWithType: Disk.source()
  returns:
    description: <p>the details of the source from which the disk is created </p>
    type: <xref href="com.microsoft.azure.management.compute.CreationSource?alt=com.microsoft.azure.management.compute.CreationSource&text=CreationSource" data-throw-if-not-resolved="False"/>
  syntax: public CreationSource source()
  uid: com.microsoft.azure.management.compute.Disk.source()
- fullName: com.microsoft.azure.management.compute.Disk.virtualMachineId()
  name: virtualMachineId()
  nameWithType: Disk.virtualMachineId()
  returns:
    description: <p>the resource ID of the virtual machine this disk is attached to, or null if the disk is in a detached state </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String virtualMachineId()
  uid: com.microsoft.azure.management.compute.Disk.virtualMachineId()
nameWithType: Disk
syntax: public interface Disk extends GroupableResource<ComputeManager, DiskInner>,Refreshable<Disk>,Updatable<Disk.Update>
type: interface
uid: com.microsoft.azure.management.compute.Disk
fullName: com.microsoft.azure.management.compute.Disk
name: Disk
package: com.microsoft.azure.management.compute
summary: <p>An immutable client-side representation of an Azure managed disk. </p>
metadata: {}
