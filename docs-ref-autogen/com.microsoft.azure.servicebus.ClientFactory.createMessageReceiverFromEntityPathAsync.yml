### YamlMime:JavaMember
nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync
type: method
members:
- fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  name: createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  parameters:
  - description: <p>messaging factory (which represents a connection) on which receiver needs to be created. </p>
    name: messagingFactory
    type: <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending creation of message receiver </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.IMessageReceiver?alt=com.microsoft.azure.servicebus.IMessageReceiver&text=IMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Asynchronously creates a new message receiver to the entity on the messagingFactory. </p>
  syntax: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory,String)
- fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  name: createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  parameters:
  - description: <p>messaging factory (which represents a connection) on which receiver needs to be created. </p>
    name: messagingFactory
    type: <xref href="com.microsoft.azure.servicebus.primitives.MessagingFactory?alt=com.microsoft.azure.servicebus.primitives.MessagingFactory&text=MessagingFactory" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PeekLock or ReceiveAndDelete </p>
    name: receiveMode
    type: <xref href="com.microsoft.azure.servicebus.ReceiveMode?alt=com.microsoft.azure.servicebus.ReceiveMode&text=ReceiveMode" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending creation of message receiver </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.IMessageReceiver?alt=com.microsoft.azure.servicebus.IMessageReceiver&text=IMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Asynchronously creates a new message receiver to the entity on the messagingFactory. </p>
  syntax: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory,String,ReceiveMode)
- fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  name: createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  parameters:
  - description: <p>namespace of entity </p>
    name: namespaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>client settings </p>
    name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending creation of message receiver </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.IMessageReceiver?alt=com.microsoft.azure.servicebus.IMessageReceiver&text=IMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Asynchronously creates a message receiver to the entity using the client settings in PeekLock mode </p>
  syntax: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String,String,ClientSettings)
- fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  name: createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  parameters:
  - description: <p>namespace of entity </p>
    name: namespaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>client settings </p>
    name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  - description: <p>PeekLock or ReceiveAndDelete </p>
    name: receiveMode
    type: <xref href="com.microsoft.azure.servicebus.ReceiveMode?alt=com.microsoft.azure.servicebus.ReceiveMode&text=ReceiveMode" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending creation of message receiver </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.IMessageReceiver?alt=com.microsoft.azure.servicebus.IMessageReceiver&text=IMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Asynchronously creates a message receiver to the entity using the client settings </p>
  syntax: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String,String,ClientSettings,ReceiveMode)
- fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  name: createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  parameters:
  - description: <p>endpoint uri of entity namespace </p>
    name: namespaceEndpointURI
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>client settings </p>
    name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending creation of message receiver </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.IMessageReceiver?alt=com.microsoft.azure.servicebus.IMessageReceiver&text=IMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Asynchronously creates a message receiver to the entity using the client settings in PeekLock mode </p>
  syntax: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI,String,ClientSettings)
- fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  name: createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  parameters:
  - description: <p>endpoint uri of entity namespace </p>
    name: namespaceEndpointURI
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>path of entity </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>client settings </p>
    name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  - description: <p>PeekLock or ReceiveAndDelete </p>
    name: receiveMode
    type: <xref href="com.microsoft.azure.servicebus.ReceiveMode?alt=com.microsoft.azure.servicebus.ReceiveMode&text=ReceiveMode" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending creation of message receiver </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.IMessageReceiver?alt=com.microsoft.azure.servicebus.IMessageReceiver&text=IMessageReceiver" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Asynchronously creates a message receiver to the entity using the client settings </p>
  syntax: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI,String,ClientSettings,ReceiveMode)
uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
name: createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
package: com.microsoft.azure.servicebus
metadata: {}
