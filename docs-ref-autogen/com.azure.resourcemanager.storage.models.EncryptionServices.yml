### YamlMime:JavaType
uid: "com.azure.resourcemanager.storage.models.EncryptionServices"
fullName: "com.azure.resourcemanager.storage.models.EncryptionServices"
name: "EncryptionServices"
nameWithType: "EncryptionServices"
summary: "A list of services that support encryption."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **EncryptionServices**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.EncryptionServices?alt=com.azure.resourcemanager.storage.models.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.EncryptionServices()"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.EncryptionServices()"
  name: "EncryptionServices()"
  nameWithType: "EncryptionServices.EncryptionServices()"
  summary: "Creates an instance of Encryption<wbr>Services class."
  syntax: "public EncryptionServices()"
  desc: "Creates an instance of EncryptionServices class."
methods:
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.blob()"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.blob()"
  name: "blob()"
  nameWithType: "EncryptionServices.blob()"
  summary: "Get the blob property: The encryption function of the blob storage service."
  syntax: "public EncryptionService blob()"
  desc: "Get the blob property: The encryption function of the blob storage service."
  returns:
    description: "the blob value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionService?alt=com.azure.resourcemanager.storage.models.EncryptionService&text=EncryptionService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.file()"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.file()"
  name: "file()"
  nameWithType: "EncryptionServices.file()"
  summary: "Get the file property: The encryption function of the file storage service."
  syntax: "public EncryptionService file()"
  desc: "Get the file property: The encryption function of the file storage service."
  returns:
    description: "the file value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionService?alt=com.azure.resourcemanager.storage.models.EncryptionService&text=EncryptionService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "EncryptionServices.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Encryption<wbr>Services from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static EncryptionServices fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the EncryptionServices."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of EncryptionServices from the JsonReader."
  returns:
    description: "An instance of EncryptionServices if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionServices?alt=com.azure.resourcemanager.storage.models.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.queue()"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.queue()"
  name: "queue()"
  nameWithType: "EncryptionServices.queue()"
  summary: "Get the queue property: The encryption function of the queue storage service."
  syntax: "public EncryptionService queue()"
  desc: "Get the queue property: The encryption function of the queue storage service."
  returns:
    description: "the queue value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionService?alt=com.azure.resourcemanager.storage.models.EncryptionService&text=EncryptionService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.table()"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.table()"
  name: "table()"
  nameWithType: "EncryptionServices.table()"
  summary: "Get the table property: The encryption function of the table storage service."
  syntax: "public EncryptionService table()"
  desc: "Get the table property: The encryption function of the table storage service."
  returns:
    description: "the table value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionService?alt=com.azure.resourcemanager.storage.models.EncryptionService&text=EncryptionService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "EncryptionServices.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.validate()"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.validate()"
  name: "validate()"
  nameWithType: "EncryptionServices.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.withBlob(com.azure.resourcemanager.storage.models.EncryptionService)"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.withBlob(EncryptionService blob)"
  name: "withBlob(EncryptionService blob)"
  nameWithType: "EncryptionServices.withBlob(EncryptionService blob)"
  summary: "Set the blob property: The encryption function of the blob storage service."
  parameters:
  - description: "the blob value to set."
    name: "blob"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionService?alt=com.azure.resourcemanager.storage.models.EncryptionService&text=EncryptionService\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptionServices withBlob(EncryptionService blob)"
  desc: "Set the blob property: The encryption function of the blob storage service."
  returns:
    description: "the EncryptionServices object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionServices?alt=com.azure.resourcemanager.storage.models.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.withFile(com.azure.resourcemanager.storage.models.EncryptionService)"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.withFile(EncryptionService file)"
  name: "withFile(EncryptionService file)"
  nameWithType: "EncryptionServices.withFile(EncryptionService file)"
  summary: "Set the file property: The encryption function of the file storage service."
  parameters:
  - description: "the file value to set."
    name: "file"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionService?alt=com.azure.resourcemanager.storage.models.EncryptionService&text=EncryptionService\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptionServices withFile(EncryptionService file)"
  desc: "Set the file property: The encryption function of the file storage service."
  returns:
    description: "the EncryptionServices object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionServices?alt=com.azure.resourcemanager.storage.models.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.withQueue(com.azure.resourcemanager.storage.models.EncryptionService)"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.withQueue(EncryptionService queue)"
  name: "withQueue(EncryptionService queue)"
  nameWithType: "EncryptionServices.withQueue(EncryptionService queue)"
  summary: "Set the queue property: The encryption function of the queue storage service."
  parameters:
  - description: "the queue value to set."
    name: "queue"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionService?alt=com.azure.resourcemanager.storage.models.EncryptionService&text=EncryptionService\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptionServices withQueue(EncryptionService queue)"
  desc: "Set the queue property: The encryption function of the queue storage service."
  returns:
    description: "the EncryptionServices object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionServices?alt=com.azure.resourcemanager.storage.models.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.EncryptionServices.withTable(com.azure.resourcemanager.storage.models.EncryptionService)"
  fullName: "com.azure.resourcemanager.storage.models.EncryptionServices.withTable(EncryptionService table)"
  name: "withTable(EncryptionService table)"
  nameWithType: "EncryptionServices.withTable(EncryptionService table)"
  summary: "Set the table property: The encryption function of the table storage service."
  parameters:
  - description: "the table value to set."
    name: "table"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionService?alt=com.azure.resourcemanager.storage.models.EncryptionService&text=EncryptionService\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptionServices withTable(EncryptionService table)"
  desc: "Set the table property: The encryption function of the table storage service."
  returns:
    description: "the EncryptionServices object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.EncryptionServices?alt=com.azure.resourcemanager.storage.models.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A list of services that support encryption."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.EncryptionServices?alt=com.azure.resourcemanager.storage.models.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.storage.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.45.0
