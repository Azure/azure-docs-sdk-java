### YamlMime:ManagedReference
items:
- uid: com.azure.storage.file.share.ShareServiceClient
  id: ShareServiceClient
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share
  children:
  - com.azure.storage.file.share.ShareServiceClient.createShare(java.lang.String)
  - com.azure.storage.file.share.ShareServiceClient.createShareWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Integer,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.file.share.ShareServiceClient.deleteShare(java.lang.String)
  - com.azure.storage.file.share.ShareServiceClient.deleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.file.share.ShareServiceClient.generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  - com.azure.storage.file.share.ShareServiceClient.getAccountName()
  - com.azure.storage.file.share.ShareServiceClient.getFileServiceUrl()
  - com.azure.storage.file.share.ShareServiceClient.getHttpPipeline()
  - com.azure.storage.file.share.ShareServiceClient.getProperties()
  - com.azure.storage.file.share.ShareServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.file.share.ShareServiceClient.getServiceVersion()
  - com.azure.storage.file.share.ShareServiceClient.getShareClient(java.lang.String)
  - com.azure.storage.file.share.ShareServiceClient.listShares()
  - com.azure.storage.file.share.ShareServiceClient.listShares(com.azure.storage.file.share.models.ListSharesOptions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.file.share.ShareServiceClient.setProperties(com.azure.storage.file.share.models.ShareServiceProperties)
  - com.azure.storage.file.share.ShareServiceClient.setPropertiesWithResponse(com.azure.storage.file.share.models.ShareServiceProperties,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.file.share.ShareServiceClient.undeleteShare(java.lang.String,java.lang.String)
  - com.azure.storage.file.share.ShareServiceClient.undeleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  langs:
  - java
  name: ShareServiceClient
  nameWithType: ShareServiceClient
  fullName: com.azure.storage.file.share.ShareServiceClient
  type: Class
  package: com.azure.storage.file.share
  summary: >-
    This class provides a shareServiceAsyncClient that contains all the operations for interacting with a file account in Azure Storage. Operations allowed by the shareServiceAsyncClient are creating, listing, and deleting shares and retrieving and updating properties of the account.


    **Instantiating a Synchronous File Service Client**


    ```java

    ShareServiceClient client = new ShareServiceClientBuilder()
         .connectionString("${connectionString}")
         .endpoint("${endpoint}")
         .buildClient();
    ```


    View <xref uid="com.azure.storage.file.share.ShareServiceClientBuilder" data-throw-if-not-resolved="false">this</xref> for additional ways to construct the shareServiceAsyncClient.
  syntax:
    content: public final class ShareServiceClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.file.share.ShareServiceClient.ShareServiceClient(com.azure.storage.file.share.ShareServiceAsyncClient)
  id: ShareServiceClient(com.azure.storage.file.share.ShareServiceAsyncClient)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: ShareServiceClient(ShareServiceAsyncClient client)
  nameWithType: ShareServiceClient.ShareServiceClient(ShareServiceAsyncClient client)
  fullName: com.azure.storage.file.share.ShareServiceClient.ShareServiceClient(ShareServiceAsyncClient client)
  overload: com.azure.storage.file.share.ShareServiceClient.ShareServiceClient*
  type: Constructor
  package: com.azure.storage.file.share
  summary: Creates a ShareServiceClient that wraps a ShareServiceAsyncClient and blocks requests.
  syntax:
    content: " ShareServiceClient(ShareServiceAsyncClient client)"
    parameters:
    - id: client
      type: com.azure.storage.file.share.ShareServiceAsyncClient
      description: ShareServiceAsyncClient that is used to send requests
- uid: com.azure.storage.file.share.ShareServiceClient.createShare(java.lang.String)
  id: createShare(java.lang.String)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: createShare(String shareName)
  nameWithType: ShareServiceClient.createShare(String shareName)
  fullName: com.azure.storage.file.share.ShareServiceClient.createShare(String shareName)
  overload: com.azure.storage.file.share.ShareServiceClient.createShare*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Creates a share in the storage account with the specified name and returns a ShareClient to interact with it.


    **Code Samples**


    Create the share with share name of "myshare"


    ```java

    fileServiceClient.createShare("myshare");
     System.out.println("Creating the share completed.");
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-share
  syntax:
    content: public ShareClient createShare(String shareName)
    parameters:
    - id: shareName
      type: java.lang.String
      description: Name of the share
    return:
      type: com.azure.storage.file.share.ShareClient
      description: The <xref uid="com.azure.storage.file.share.ShareClient" data-throw-if-not-resolved="false">ShareClient</xref>
- uid: com.azure.storage.file.share.ShareServiceClient.createShareWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Integer,java.time.Duration,com.azure.core.util.Context)
  id: createShareWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Integer,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)
  nameWithType: ShareServiceClient.createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)
  fullName: com.azure.storage.file.share.ShareServiceClient.createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)
  overload: com.azure.storage.file.share.ShareServiceClient.createShareWithResponse*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Creates a share in the storage account with the specified name and metadata and returns a ShareClient to interact with it.


    **Code Samples**


    Create the share "test" with a quota of 10 GB


    ```java

    Response<ShareClient> response = fileServiceClient.createShareWithResponse("test",
         Collections.singletonMap("share", "metadata"), null, Duration.ofSeconds(1),
         new Context(key1, value1));
     System.out.printf("Creating the share completed with status code %d", response.getStatusCode());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-share
  syntax:
    content: public Response<ShareClient> createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)
    parameters:
    - id: shareName
      type: java.lang.String
      description: Name of the share
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Optional metadata to associate with the share
    - id: quotaInGB
      type: java.lang.Integer
      description: >-
        Optional maximum size the share is allowed to grow to in GB. This must be greater than 0 and
         less than or equal to 5120. The default value is 5120.
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.file.share.ShareClient>
      description: A response containing the <xref uid="com.azure.storage.file.share.ShareClient" data-throw-if-not-resolved="false">ShareClient</xref> and the status of creating the share.
- uid: com.azure.storage.file.share.ShareServiceClient.deleteShare(java.lang.String)
  id: deleteShare(java.lang.String)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: deleteShare(String shareName)
  nameWithType: ShareServiceClient.deleteShare(String shareName)
  fullName: com.azure.storage.file.share.ShareServiceClient.deleteShare(String shareName)
  overload: com.azure.storage.file.share.ShareServiceClient.deleteShare*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Deletes the share in the storage account with the given name


    **Code Samples**


    Delete the share "test"


    ```java

    fileServiceClient.deleteShare("myshare");

    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share
  syntax:
    content: public void deleteShare(String shareName)
    parameters:
    - id: shareName
      type: java.lang.String
      description: Name of the share
- uid: com.azure.storage.file.share.ShareServiceClient.deleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: deleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)
  nameWithType: ShareServiceClient.deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)
  fullName: com.azure.storage.file.share.ShareServiceClient.deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)
  overload: com.azure.storage.file.share.ShareServiceClient.deleteShareWithResponse*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Deletes the specific snapshot of the share in the storage account with the given name. Snapshot are identified by the time they were created.


    **Code Samples**


    Delete the snapshot of share "test" that was created at current time.


    ```java

    OffsetDateTime midnight = OffsetDateTime.of(LocalDateTime.now(), ZoneOffset.UTC);
     Response<Void> response = fileServiceClient.deleteShareWithResponse("test", midnight.toString(),
         Duration.ofSeconds(1), new Context(key1, value1));
     System.out.printf("Deleting the snapshot completed with status code %d", response.getStatusCode());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share
  syntax:
    content: public Response<Void> deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)
    parameters:
    - id: shareName
      type: java.lang.String
      description: Name of the share
    - id: snapshot
      type: java.lang.String
      description: Identifier of the snapshot
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response that only contains headers and response status code
- uid: com.azure.storage.file.share.ShareServiceClient.generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  id: generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  nameWithType: ShareServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  fullName: com.azure.storage.file.share.ShareServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  overload: com.azure.storage.file.share.ShareServiceClient.generateAccountSas*
  type: Method
  package: com.azure.storage.file.share
  summary: "Generates an account SAS for the Azure Storage account using the specified <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSasSignatureValues</xref>. Note : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>\n\nSee <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSasSignatureValues</xref> for more information on how to construct an account SAS.\n\n**Generating an account SAS**\n\nThe snippet below generates an AccountSasSignatureValues object that lasts for two days and gives the user read and list access to blob and file shares.\n\n```java\nAccountSasPermission permissions = new AccountSasPermission()\n     .setListPermission(true)\n     .setReadPermission(true);\n AccountSasResourceType resourceTypes = new AccountSasResourceType().setContainer(true);\n AccountSasService services = new AccountSasService().setBlobAccess(true).setFileAccess(true);\n OffsetDateTime expiryTime = OffsetDateTime.now().plus(Duration.ofDays(2));\n \n AccountSasSignatureValues sasValues =\n     new AccountSasSignatureValues(expiryTime, permissions, services, resourceTypes);\n \n // Client must be authenticated via StorageSharedKeyCredential\n String sas = fileServiceClient.generateAccountSas(sasValues);\n```"
  syntax:
    content: public String generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
    parameters:
    - id: accountSasSignatureValues
      type: com.azure.storage.common.sas.AccountSasSignatureValues
      description: <xref uid="com.azure.storage.common.sas.AccountSasSignatureValues" data-throw-if-not-resolved="false">AccountSasSignatureValues</xref>
    return:
      type: java.lang.String
      description: A <code>String</code> representing all SAS query parameters.
- uid: com.azure.storage.file.share.ShareServiceClient.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: getAccountName()
  nameWithType: ShareServiceClient.getAccountName()
  fullName: com.azure.storage.file.share.ShareServiceClient.getAccountName()
  overload: com.azure.storage.file.share.ShareServiceClient.getAccountName*
  type: Method
  package: com.azure.storage.file.share
  summary: Get associated account name.
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: account name associated with this storage resource.
- uid: com.azure.storage.file.share.ShareServiceClient.getFileServiceUrl()
  id: getFileServiceUrl()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: getFileServiceUrl()
  nameWithType: ShareServiceClient.getFileServiceUrl()
  fullName: com.azure.storage.file.share.ShareServiceClient.getFileServiceUrl()
  overload: com.azure.storage.file.share.ShareServiceClient.getFileServiceUrl*
  type: Method
  package: com.azure.storage.file.share
  summary: Get the url of the storage file service client.
  syntax:
    content: public String getFileServiceUrl()
    return:
      type: java.lang.String
      description: the url of the Storage File service.
- uid: com.azure.storage.file.share.ShareServiceClient.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: ShareServiceClient.getHttpPipeline()
  fullName: com.azure.storage.file.share.ShareServiceClient.getHttpPipeline()
  overload: com.azure.storage.file.share.ShareServiceClient.getHttpPipeline*
  type: Method
  package: com.azure.storage.file.share
  summary: Gets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> powering this client.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: The pipeline.
- uid: com.azure.storage.file.share.ShareServiceClient.getProperties()
  id: getProperties()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: getProperties()
  nameWithType: ShareServiceClient.getProperties()
  fullName: com.azure.storage.file.share.ShareServiceClient.getProperties()
  overload: com.azure.storage.file.share.ShareServiceClient.getProperties*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Retrieves the properties of the storage account's File service. The properties range from storage analytics and metrics to CORS (Cross-Origin Resource Sharing).


    **Code Samples**


    Retrieve File service properties


    ```java

    ShareServiceProperties properties = fileServiceClient.getProperties();
     System.out.printf("Hour metrics enabled: %b, Minute metrics enabled: %b", properties.getHourMetrics().isEnabled(),
         properties.getMinuteMetrics().isEnabled());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties
  syntax:
    content: public ShareServiceProperties getProperties()
    return:
      type: com.azure.storage.file.share.models.ShareServiceProperties
      description: Storage account <xref uid="com.azure.storage.file.share.models.ShareServiceProperties" data-throw-if-not-resolved="false">File service properties</xref>
- uid: com.azure.storage.file.share.ShareServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: getPropertiesWithResponse(Duration timeout, Context context)
  nameWithType: ShareServiceClient.getPropertiesWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.file.share.ShareServiceClient.getPropertiesWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.file.share.ShareServiceClient.getPropertiesWithResponse*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Retrieves the properties of the storage account's File service. The properties range from storage analytics and metrics to CORS (Cross-Origin Resource Sharing).


    **Code Samples**


    Retrieve File service properties


    ```java

    ShareServiceProperties properties = fileServiceClient.getPropertiesWithResponse(
         Duration.ofSeconds(1), new Context(key1, value1)).getValue();
     System.out.printf("Hour metrics enabled: %b, Minute metrics enabled: %b", properties.getHourMetrics().isEnabled(),
         properties.getMinuteMetrics().isEnabled());
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties
  syntax:
    content: public Response<ShareServiceProperties> getPropertiesWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareServiceProperties>
      description: >-
        A response containing the Storage account <xref uid="com.azure.storage.file.share.models.ShareServiceProperties" data-throw-if-not-resolved="false">File service properties</xref> with
         headers and response status code
- uid: com.azure.storage.file.share.ShareServiceClient.getServiceVersion()
  id: getServiceVersion()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: getServiceVersion()
  nameWithType: ShareServiceClient.getServiceVersion()
  fullName: com.azure.storage.file.share.ShareServiceClient.getServiceVersion()
  overload: com.azure.storage.file.share.ShareServiceClient.getServiceVersion*
  type: Method
  package: com.azure.storage.file.share
  summary: Gets the service version the client is using.
  syntax:
    content: public ShareServiceVersion getServiceVersion()
    return:
      type: com.azure.storage.file.share.ShareServiceVersion
      description: the service version the client is using.
- uid: com.azure.storage.file.share.ShareServiceClient.getShareClient(java.lang.String)
  id: getShareClient(java.lang.String)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: getShareClient(String shareName)
  nameWithType: ShareServiceClient.getShareClient(String shareName)
  fullName: com.azure.storage.file.share.ShareServiceClient.getShareClient(String shareName)
  overload: com.azure.storage.file.share.ShareServiceClient.getShareClient*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Constructs a ShareClient that interacts with the specified share.


    If the share doesn't exist in the storage account <xref uid="com.azure.storage.file.share.ShareClient.create()" data-throw-if-not-resolved="false">create</xref> in the shareServiceAsyncClient will need to be called before interaction with the share can happen.
  syntax:
    content: public ShareClient getShareClient(String shareName)
    parameters:
    - id: shareName
      type: java.lang.String
      description: Name of the share
    return:
      type: com.azure.storage.file.share.ShareClient
      description: a ShareClient that interacts with the specified share
- uid: com.azure.storage.file.share.ShareServiceClient.listShares()
  id: listShares()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: listShares()
  nameWithType: ShareServiceClient.listShares()
  fullName: com.azure.storage.file.share.ShareServiceClient.listShares()
  overload: com.azure.storage.file.share.ShareServiceClient.listShares*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Lists all shares in the storage account without their metadata or snapshots.


    **Code Samples**


    List all shares in the account


    ```java

    fileServiceClient.listShares().forEach(
         shareItem -> System.out.printf("Share %s exists in the account", shareItem.getName())
     );
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-shares
  syntax:
    content: public PagedIterable<ShareItem> listShares()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.ShareItem>
      description: <xref uid="com.azure.storage.file.share.models.ShareItem" data-throw-if-not-resolved="false">Shares</xref> in the storage account without their metadata or snapshots
- uid: com.azure.storage.file.share.ShareServiceClient.listShares(com.azure.storage.file.share.models.ListSharesOptions,java.time.Duration,com.azure.core.util.Context)
  id: listShares(com.azure.storage.file.share.models.ListSharesOptions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: listShares(ListSharesOptions options, Duration timeout, Context context)
  nameWithType: ShareServiceClient.listShares(ListSharesOptions options, Duration timeout, Context context)
  fullName: com.azure.storage.file.share.ShareServiceClient.listShares(ListSharesOptions options, Duration timeout, Context context)
  overload: com.azure.storage.file.share.ShareServiceClient.listShares*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Lists the shares in the Storage account that pass the options filter.


    Set starts with name filter using <xref uid="com.azure.storage.file.share.models.ListSharesOptions.setPrefix(java.lang.String)" data-throw-if-not-resolved="false">prefix</xref> to filter shares that are listed.


    Pass true to <xref uid="com.azure.storage.file.share.models.ListSharesOptions.setIncludeMetadata(boolean)" data-throw-if-not-resolved="false">includeMetadata</xref> to have metadata returned for the shares.


    Pass true to <xref uid="com.azure.storage.file.share.models.ListSharesOptions.setIncludeSnapshots(boolean)" data-throw-if-not-resolved="false">includeSnapshots</xref> to have snapshots of the shares listed.


    **Code Samples**


    List all shares that begin with "azure"


    ```java

    fileServiceClient.listShares(new ListSharesOptions().setPrefix("azure"), Duration.ofSeconds(1),
         new Context(key1, value1)).forEach(
             shareItem -> System.out.printf("Share %s exists in the account", shareItem.getName())
     );
    ```


    List all shares including their snapshots and metadata


    ```java

    fileServiceClient.listShares(new ListSharesOptions().setIncludeMetadata(true)
         .setIncludeSnapshots(true), Duration.ofSeconds(1), new Context(key1, value1)).forEach(
             shareItem -> System.out.printf("Share %s exists in the account", shareItem.getName())
     );
    ```


    For more information, see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-shares
  syntax:
    content: public PagedIterable<ShareItem> listShares(ListSharesOptions options, Duration timeout, Context context)
    parameters:
    - id: options
      type: com.azure.storage.file.share.models.ListSharesOptions
      description: Options for listing shares
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.ShareItem>
      description: <xref uid="com.azure.storage.file.share.models.ShareItem" data-throw-if-not-resolved="false">Shares</xref> in the storage account that satisfy the filter requirements
- uid: com.azure.storage.file.share.ShareServiceClient.setProperties(com.azure.storage.file.share.models.ShareServiceProperties)
  id: setProperties(com.azure.storage.file.share.models.ShareServiceProperties)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: setProperties(ShareServiceProperties properties)
  nameWithType: ShareServiceClient.setProperties(ShareServiceProperties properties)
  fullName: com.azure.storage.file.share.ShareServiceClient.setProperties(ShareServiceProperties properties)
  overload: com.azure.storage.file.share.ShareServiceClient.setProperties*
  type: Method
  package: com.azure.storage.file.share
  summary: "Sets the properties for the storage account's File service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>. To disable all CORS in the Queue service pass an empty list for <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>.\n\n**Code Sample**\n\nClear CORS in the File service\n\n```java\nShareServiceProperties properties = fileServiceClient.getProperties();\n properties.setCors(Collections.emptyList());\n \n Response<Void> response = fileServiceClient.setPropertiesWithResponse(properties,\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Setting File service properties completed with status code %d\", response.getStatusCode());\n```\n\nEnable Minute and Hour Metrics\n\n```java\nShareServiceProperties properties = fileServiceClient.getProperties();\n \n properties.getMinuteMetrics().setEnabled(true);\n properties.getHourMetrics().setEnabled(true);\n \n fileServiceClient.setProperties(properties);\n System.out.println(\"Setting File service properties completed.\");\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-service-properties"
  syntax:
    content: public void setProperties(ShareServiceProperties properties)
    parameters:
    - id: properties
      type: com.azure.storage.file.share.models.ShareServiceProperties
      description: Storage account File service properties
- uid: com.azure.storage.file.share.ShareServiceClient.setPropertiesWithResponse(com.azure.storage.file.share.models.ShareServiceProperties,java.time.Duration,com.azure.core.util.Context)
  id: setPropertiesWithResponse(com.azure.storage.file.share.models.ShareServiceProperties,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: setPropertiesWithResponse(ShareServiceProperties properties, Duration timeout, Context context)
  nameWithType: ShareServiceClient.setPropertiesWithResponse(ShareServiceProperties properties, Duration timeout, Context context)
  fullName: com.azure.storage.file.share.ShareServiceClient.setPropertiesWithResponse(ShareServiceProperties properties, Duration timeout, Context context)
  overload: com.azure.storage.file.share.ShareServiceClient.setPropertiesWithResponse*
  type: Method
  package: com.azure.storage.file.share
  summary: "Sets the properties for the storage account's File service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>. To disable all CORS in the Queue service pass an empty list for <xref uid=\"com.azure.storage.file.share.models.ShareServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>.\n\n**Code Sample**\n\nClear CORS in the File service\n\n```java\nShareServiceProperties properties = fileServiceClient.getProperties();\n properties.setCors(Collections.emptyList());\n \n Response<Void> response = fileServiceClient.setPropertiesWithResponse(properties,\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Setting File service properties completed with status code %d\", response.getStatusCode());\n```\n\nEnable Minute and Hour Metrics\n\n```java\nShareServiceProperties properties = fileServiceClient.getPropertiesWithResponse(\n     Duration.ofSeconds(1), new Context(key1, value1)).getValue();\n \n properties.getMinuteMetrics().setEnabled(true);\n properties.getHourMetrics().setEnabled(true);\n \n Response<Void> response = fileServiceClient.setPropertiesWithResponse(properties,\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Setting File service properties completed with status code %d\", response.getStatusCode());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-service-properties"
  syntax:
    content: public Response<Void> setPropertiesWithResponse(ShareServiceProperties properties, Duration timeout, Context context)
    parameters:
    - id: properties
      type: com.azure.storage.file.share.models.ShareServiceProperties
      description: Storage account File service properties
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response that only contains headers and response status code
- uid: com.azure.storage.file.share.ShareServiceClient.undeleteShare(java.lang.String,java.lang.String)
  id: undeleteShare(java.lang.String,java.lang.String)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: undeleteShare(String deletedShareName, String deletedShareVersion)
  nameWithType: ShareServiceClient.undeleteShare(String deletedShareName, String deletedShareVersion)
  fullName: com.azure.storage.file.share.ShareServiceClient.undeleteShare(String deletedShareName, String deletedShareVersion)
  overload: com.azure.storage.file.share.ShareServiceClient.undeleteShare*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Restores a previously deleted share.


    If the share associated with provided `deletedShareName` already exists, this call will result in a 409 (conflict).


    This API is only functional if Share Soft Delete is enabled for the storage account associated with the share. For more information, see the Azure Docs.


    **Code Samples**


    ```java

    ListSharesOptions listSharesOptions = new ListSharesOptions();
     listSharesOptions.setIncludeDeleted(true);
     fileServiceClient.listShares(listSharesOptions, Duration.ofSeconds(1), context).forEach(
         deletedShare -> {
             ShareClient shareClient = fileServiceClient.undeleteShare(
                 deletedShare.getName(), deletedShare.getVersion());
         }
     );
    ```
  syntax:
    content: public ShareClient undeleteShare(String deletedShareName, String deletedShareVersion)
    parameters:
    - id: deletedShareName
      type: java.lang.String
      description: The name of the previously deleted share.
    - id: deletedShareVersion
      type: java.lang.String
      description: The version of the previously deleted share.
    return:
      type: com.azure.storage.file.share.ShareClient
      description: >-
        A <xref uid="com.azure.storage.file.share.ShareClient" data-throw-if-not-resolved="false">ShareClient</xref> used
         to interact with the restored share.
- uid: com.azure.storage.file.share.ShareServiceClient.undeleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: undeleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.ShareServiceClient
  langs:
  - java
  name: undeleteShareWithResponse(String deletedShareName, String deletedShareVersion, Duration timeout, Context context)
  nameWithType: ShareServiceClient.undeleteShareWithResponse(String deletedShareName, String deletedShareVersion, Duration timeout, Context context)
  fullName: com.azure.storage.file.share.ShareServiceClient.undeleteShareWithResponse(String deletedShareName, String deletedShareVersion, Duration timeout, Context context)
  overload: com.azure.storage.file.share.ShareServiceClient.undeleteShareWithResponse*
  type: Method
  package: com.azure.storage.file.share
  summary: >-
    Restores a previously deleted share.


    If the share associated with provided `deletedShareName` already exists, this call will result in a 409 (conflict).


    This API is only functional if Share Soft Delete is enabled for the storage account associated with the share. For more information, see the Azure Docs.


    **Code Samples**


    ```java

    ListSharesOptions listSharesOptions = new ListSharesOptions();
     listSharesOptions.setIncludeDeleted(true);
     fileServiceClient.listShares(listSharesOptions, Duration.ofSeconds(1), context).forEach(
         deletedShare -> {
             ShareClient shareClient = fileServiceClient.undeleteShareWithResponse(
                 deletedShare.getName(), deletedShare.getVersion(), Duration.ofSeconds(1), context).getValue();
         }
     );
    ```
  syntax:
    content: public Response<ShareClient> undeleteShareWithResponse(String deletedShareName, String deletedShareVersion, Duration timeout, Context context)
    parameters:
    - id: deletedShareName
      type: java.lang.String
      description: The name of the previously deleted share.
    - id: deletedShareVersion
      type: java.lang.String
      description: The version of the previously deleted share.
    - id: timeout
      type: java.time.Duration
      description: >-
        An optional timeout applied to the operation. If a response is not returned before the timeout
         concludes a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.file.share.ShareClient>
      description: >-
        A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the <xref uid="com.azure.storage.file.share.ShareClient" data-throw-if-not-resolved="false">ShareClient</xref> used
         to interact with the restored share.
references:
- uid: com.azure.storage.file.share.ShareServiceAsyncClient
  name: ShareServiceAsyncClient
  nameWithType: ShareServiceAsyncClient
  fullName: com.azure.storage.file.share.ShareServiceAsyncClient
- uid: com.azure.storage.file.share.ShareServiceClient.ShareServiceClient*
  name: ShareServiceClient
  nameWithType: ShareServiceClient.ShareServiceClient
  fullName: com.azure.storage.file.share.ShareServiceClient.ShareServiceClient
  package: com.azure.storage.file.share
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.file.share.ShareServiceClient.getFileServiceUrl*
  name: getFileServiceUrl
  nameWithType: ShareServiceClient.getFileServiceUrl
  fullName: com.azure.storage.file.share.ShareServiceClient.getFileServiceUrl
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareServiceVersion
  name: ShareServiceVersion
  nameWithType: ShareServiceVersion
  fullName: com.azure.storage.file.share.ShareServiceVersion
- uid: com.azure.storage.file.share.ShareServiceClient.getServiceVersion*
  name: getServiceVersion
  nameWithType: ShareServiceClient.getServiceVersion
  fullName: com.azure.storage.file.share.ShareServiceClient.getServiceVersion
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareClient
  name: ShareClient
  nameWithType: ShareClient
  fullName: com.azure.storage.file.share.ShareClient
- uid: com.azure.storage.file.share.ShareServiceClient.getShareClient*
  name: getShareClient
  nameWithType: ShareServiceClient.getShareClient
  fullName: com.azure.storage.file.share.ShareServiceClient.getShareClient
  package: com.azure.storage.file.share
- uid: com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.ShareItem>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.storage.file.share.models.ShareItem
    name: ShareItem
    fullName: com.azure.storage.file.share.models.ShareItem
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.ShareServiceClient.listShares*
  name: listShares
  nameWithType: ShareServiceClient.listShares
  fullName: com.azure.storage.file.share.ShareServiceClient.listShares
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.models.ListSharesOptions
  name: ListSharesOptions
  nameWithType: ListSharesOptions
  fullName: com.azure.storage.file.share.models.ListSharesOptions
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.storage.file.share.models.ShareServiceProperties
  name: ShareServiceProperties
  nameWithType: ShareServiceProperties
  fullName: com.azure.storage.file.share.models.ShareServiceProperties
- uid: com.azure.storage.file.share.ShareServiceClient.getProperties*
  name: getProperties
  nameWithType: ShareServiceClient.getProperties
  fullName: com.azure.storage.file.share.ShareServiceClient.getProperties
  package: com.azure.storage.file.share
- uid: com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareServiceProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.file.share.models.ShareServiceProperties
    name: ShareServiceProperties
    fullName: com.azure.storage.file.share.models.ShareServiceProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.ShareServiceClient.getPropertiesWithResponse*
  name: getPropertiesWithResponse
  nameWithType: ShareServiceClient.getPropertiesWithResponse
  fullName: com.azure.storage.file.share.ShareServiceClient.getPropertiesWithResponse
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareServiceClient.setProperties*
  name: setProperties
  nameWithType: ShareServiceClient.setProperties
  fullName: com.azure.storage.file.share.ShareServiceClient.setProperties
  package: com.azure.storage.file.share
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.ShareServiceClient.setPropertiesWithResponse*
  name: setPropertiesWithResponse
  nameWithType: ShareServiceClient.setPropertiesWithResponse
  fullName: com.azure.storage.file.share.ShareServiceClient.setPropertiesWithResponse
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareServiceClient.createShare*
  name: createShare
  nameWithType: ShareServiceClient.createShare
  fullName: com.azure.storage.file.share.ShareServiceClient.createShare
  package: com.azure.storage.file.share
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.core.http.rest.Response<com.azure.storage.file.share.ShareClient>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.file.share.ShareClient
    name: ShareClient
    fullName: com.azure.storage.file.share.ShareClient
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.ShareServiceClient.createShareWithResponse*
  name: createShareWithResponse
  nameWithType: ShareServiceClient.createShareWithResponse
  fullName: com.azure.storage.file.share.ShareServiceClient.createShareWithResponse
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareServiceClient.deleteShare*
  name: deleteShare
  nameWithType: ShareServiceClient.deleteShare
  fullName: com.azure.storage.file.share.ShareServiceClient.deleteShare
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareServiceClient.deleteShareWithResponse*
  name: deleteShareWithResponse
  nameWithType: ShareServiceClient.deleteShareWithResponse
  fullName: com.azure.storage.file.share.ShareServiceClient.deleteShareWithResponse
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareServiceClient.getAccountName*
  name: getAccountName
  nameWithType: ShareServiceClient.getAccountName
  fullName: com.azure.storage.file.share.ShareServiceClient.getAccountName
  package: com.azure.storage.file.share
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.storage.file.share.ShareServiceClient.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: ShareServiceClient.getHttpPipeline
  fullName: com.azure.storage.file.share.ShareServiceClient.getHttpPipeline
  package: com.azure.storage.file.share
- uid: com.azure.storage.common.sas.AccountSasSignatureValues
  spec.java:
  - uid: com.azure.storage.common.sas.AccountSasSignatureValues
    name: AccountSasSignatureValues
    fullName: com.azure.storage.common.sas.AccountSasSignatureValues
- uid: com.azure.storage.file.share.ShareServiceClient.generateAccountSas*
  name: generateAccountSas
  nameWithType: ShareServiceClient.generateAccountSas
  fullName: com.azure.storage.file.share.ShareServiceClient.generateAccountSas
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareServiceClient.undeleteShare*
  name: undeleteShare
  nameWithType: ShareServiceClient.undeleteShare
  fullName: com.azure.storage.file.share.ShareServiceClient.undeleteShare
  package: com.azure.storage.file.share
- uid: com.azure.storage.file.share.ShareServiceClient.undeleteShareWithResponse*
  name: undeleteShareWithResponse
  nameWithType: ShareServiceClient.undeleteShareWithResponse
  fullName: com.azure.storage.file.share.ShareServiceClient.undeleteShareWithResponse
  package: com.azure.storage.file.share
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.storage.file.share.models.ShareItem
  name: ShareItem
  nameWithType: ShareItem
  fullName: com.azure.storage.file.share.models.ShareItem
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
