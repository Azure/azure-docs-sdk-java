### YamlMime:JavaMember
uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync*"
fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync"
name: "putBlobFromUrlWithRestResponseAsync"
nameWithType: "BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync"
members:
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync(java.lang.String,java.lang.String,long,java.net.URL,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync(String containerName, String blob, long contentLength, URL copySource, Context context)"
  name: "putBlobFromUrlWithRestResponseAsync(String containerName, String blob, long contentLength, URL copySource, Context context)"
  nameWithType: "BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync(String containerName, String blob, long contentLength, URL copySource, Context context)"
  summary: "The Put Blob from URL operation creates a new Block Blob where the contents of the blob are read from a given URL. This API is supported beginning with the 2020-04-08 version. Partial updates are not supported with Put Blob from URL; the content of an existing blob is overwritten with the content of the new blob. To perform partial updates to a block blob\\\\u2019s contents using a source URL, use the Put Block from URL API in conjunction with Put Block List."
  parameters:
  - description: "The container name."
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The blob name."
    name: "blob"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The length of the request."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature."
    name: "copySource"
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<BlockBlobsPutBlobFromUrlResponse> putBlobFromUrlWithRestResponseAsync(String containerName, String blob, long contentLength, URL copySource, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.implementation.models.BlockBlobsPutBlobFromUrlResponse?alt=com.azure.storage.blob.implementation.models.BlockBlobsPutBlobFromUrlResponse&text=BlockBlobsPutBlobFromUrlResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync(java.lang.String,java.lang.String,long,java.net.URL,java.lang.Integer,byte[],java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.storage.blob.models.AccessTier,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],java.lang.String,java.lang.Boolean,com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync(String containerName, String blob, long contentLength, URL copySource, Integer timeout, byte[] transactionalContentMD5, Map<String,String> metadata, String leaseId, AccessTier tier, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String ifTags, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String sourceIfTags, String requestId, byte[] sourceContentMD5, String blobTagsString, Boolean copySourceBlobProperties, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  name: "putBlobFromUrlWithRestResponseAsync(String containerName, String blob, long contentLength, URL copySource, Integer timeout, byte[] transactionalContentMD5, Map<String,String> metadata, String leaseId, AccessTier tier, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String ifTags, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String sourceIfTags, String requestId, byte[] sourceContentMD5, String blobTagsString, Boolean copySourceBlobProperties, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "BlockBlobsImpl.putBlobFromUrlWithRestResponseAsync(String containerName, String blob, long contentLength, URL copySource, Integer timeout, byte[] transactionalContentMD5, Map<String,String> metadata, String leaseId, AccessTier tier, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String ifTags, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String sourceIfTags, String requestId, byte[] sourceContentMD5, String blobTagsString, Boolean copySourceBlobProperties, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  summary: "The Put Blob from URL operation creates a new Block Blob where the contents of the blob are read from a given URL. This API is supported beginning with the 2020-04-08 version. Partial updates are not supported with Put Blob from URL; the content of an existing blob is overwritten with the content of the new blob. To perform partial updates to a block blob\\\\u2019s contents using a source URL, use the Put Block from URL API in conjunction with Put Block List."
  parameters:
  - description: "The container name."
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The blob name."
    name: "blob"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The length of the request."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature."
    name: "copySource"
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify the transactional md5 for the body, to be validated by the service."
    name: "transactionalContentMD5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive'."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    name: "ifModifiedSince"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    name: "ifUnmodifiedSince"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify an ETag value to operate only on blobs with a matching value."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify an ETag value to operate only on blobs without a matching value."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify a SQL where clause on blob tags to operate only on blobs with a matching value."
    name: "ifTags"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    name: "sourceIfModifiedSince"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    name: "sourceIfUnmodifiedSince"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify an ETag value to operate only on blobs with a matching value."
    name: "sourceIfMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify an ETag value to operate only on blobs without a matching value."
    name: "sourceIfNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify a SQL where clause on blob tags to operate only on blobs with a matching value."
    name: "sourceIfTags"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify the md5 calculated for the range of bytes that must be read from the copy source."
    name: "sourceContentMD5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Optional.  Used to set blob tags in various blob operations."
    name: "blobTagsString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional, default is true.  Indicates if properties from the source blob should be copied."
    name: "copySourceBlobProperties"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "blobHttpHeaders"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "cpkInfo"
    type: "<xref href=\"com.azure.storage.blob.models.CpkInfo?alt=com.azure.storage.blob.models.CpkInfo&text=CpkInfo\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "encryptionScope"
    type: "<xref href=\"com.azure.storage.blob.implementation.models.EncryptionScope?alt=com.azure.storage.blob.implementation.models.EncryptionScope&text=EncryptionScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<BlockBlobsPutBlobFromUrlResponse> putBlobFromUrlWithRestResponseAsync(String containerName, String blob, long contentLength, URL copySource, Integer timeout, byte[] transactionalContentMD5, Map<String,String> metadata, String leaseId, AccessTier tier, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String ifTags, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String sourceIfTags, String requestId, byte[] sourceContentMD5, String blobTagsString, Boolean copySourceBlobProperties, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.implementation.models.BlockBlobsPutBlobFromUrlResponse?alt=com.azure.storage.blob.implementation.models.BlockBlobsPutBlobFromUrlResponse&text=BlockBlobsPutBlobFromUrlResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.implementation"
artifact: com.azure:azure-storage-blob:12.10.2
