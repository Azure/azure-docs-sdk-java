### YamlMime:JavaType
uid: "com.azure.core.experimental.serializer.AvroSerializer"
fullName: "com.azure.core.experimental.serializer.AvroSerializer"
name: "AvroSerializer"
nameWithType: "AvroSerializer"
summary: "Generic interface covering basic Avro serialization and deserialization methods."
syntax: "public interface **AvroSerializer**</br> extends <xref href=\"com.azure.core.util.serializer.ObjectSerializer?alt=com.azure.core.util.serializer.ObjectSerializer&text=ObjectSerializer\" data-throw-if-not-resolved=\"False\" />"
methods:
- uid: "com.azure.core.experimental.serializer.AvroSerializer.<T>deserialize(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializer.deserialize(InputStream stream, TypeReference<T> typeReference)"
  name: "deserialize(InputStream stream, TypeReference<T> typeReference)"
  nameWithType: "AvroSerializer.deserialize(InputStream stream, TypeReference<T> typeReference)"
  summary: "Reads an Avro stream into its object representation."
  modifiers:
  - "abstract"
  parameters:
  - description: "Avro stream."
    name: "stream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  - description: "<xref uid=\"com.azure.core.util.serializer.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref> representing the object."
    name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract T <T>deserialize(InputStream stream, TypeReference<T> typeReference)"
  desc: "Reads an Avro stream into its object representation."
  returns:
    description: "The object represented by the deserialized Avro stream."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.serializer.AvroSerializer.<T>deserializeAsync(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializer.deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  name: "deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  nameWithType: "AvroSerializer.deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  summary: "Reads an Avro stream into its object representation."
  modifiers:
  - "abstract"
  parameters:
  - description: "Avro stream."
    name: "stream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  - description: "<xref uid=\"com.azure.core.util.serializer.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref> representing the object."
    name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<T> <T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  desc: "Reads an Avro stream into its object representation."
  returns:
    description: "Reactive stream that emits the object represented by the deserialized Avro stream."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.experimental.serializer.AvroSerializer.<T>deserializeFromBytes(byte[],com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializer.deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  name: "deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  nameWithType: "AvroSerializer.deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  summary: "Reads an Avro byte array into its object representation."
  modifiers:
  - "default"
  parameters:
  - description: "Avro byte array."
    name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "<xref uid=\"com.azure.core.util.serializer.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref> representing the object."
    name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public default T <T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  desc: "Reads an Avro byte array into its object representation."
  returns:
    description: "The object represented by the deserialized Avro byte array."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.serializer.AvroSerializer.<T>deserializeFromBytesAsync(byte[],com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializer.deserializeFromBytesAsync(byte[] data, TypeReference<T> typeReference)"
  name: "deserializeFromBytesAsync(byte[] data, TypeReference<T> typeReference)"
  nameWithType: "AvroSerializer.deserializeFromBytesAsync(byte[] data, TypeReference<T> typeReference)"
  summary: "Reads an Avro byte array into its object representation."
  modifiers:
  - "default"
  parameters:
  - description: "Avro byte array."
    name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "<xref uid=\"com.azure.core.util.serializer.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref> representing the object."
    name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public default Mono<T> <T>deserializeFromBytesAsync(byte[] data, TypeReference<T> typeReference)"
  desc: "Reads an Avro byte array into its object representation."
  returns:
    description: "Reactive stream that emits the object represented by the deserialized Avro byte array."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.experimental.serializer.AvroSerializer.serialize(java.io.OutputStream,java.lang.Object)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializer.serialize(OutputStream stream, Object value)"
  name: "serialize(OutputStream stream, Object value)"
  nameWithType: "AvroSerializer.serialize(OutputStream stream, Object value)"
  summary: "Writes an object's Avro representation into a stream."
  modifiers:
  - "abstract"
  parameters:
  - description: "<xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> where the object's Avro representation will be written."
    name: "stream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html\">OutputStream</a>"
  - description: "The object."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public abstract void serialize(OutputStream stream, Object value)"
  desc: "Writes an object's Avro representation into a stream."
- uid: "com.azure.core.experimental.serializer.AvroSerializer.serializeAsync(java.io.OutputStream,java.lang.Object)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializer.serializeAsync(OutputStream stream, Object value)"
  name: "serializeAsync(OutputStream stream, Object value)"
  nameWithType: "AvroSerializer.serializeAsync(OutputStream stream, Object value)"
  summary: "Writes an object's Avro representation into a stream."
  modifiers:
  - "abstract"
  parameters:
  - description: "<xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> where the object's Avro representation will be written."
    name: "stream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html\">OutputStream</a>"
  - description: "The object."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public abstract Mono<Void> serializeAsync(OutputStream stream, Object value)"
  desc: "Writes an object's Avro representation into a stream."
  returns:
    description: "Reactive stream that will indicate operation completion."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.core.experimental.serializer.AvroSerializer.serializeToBytes(java.lang.Object)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializer.serializeToBytes(Object value)"
  name: "serializeToBytes(Object value)"
  nameWithType: "AvroSerializer.serializeToBytes(Object value)"
  summary: "Converts the object into an Avro byte array."
  modifiers:
  - "default"
  parameters:
  - description: "The object."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public default byte[] serializeToBytes(Object value)"
  desc: "Converts the object into an Avro byte array."
  returns:
    description: "The Avro binary representation of the serialized object."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.core.experimental.serializer.AvroSerializer.serializeToBytesAsync(java.lang.Object)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializer.serializeToBytesAsync(Object value)"
  name: "serializeToBytesAsync(Object value)"
  nameWithType: "AvroSerializer.serializeToBytesAsync(Object value)"
  summary: "Converts the object into a Avro byte array."
  modifiers:
  - "default"
  parameters:
  - description: "The object."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public default Mono<byte[]> serializeToBytesAsync(Object value)"
  desc: "Converts the object into a Avro byte array."
  returns:
    description: "Reactive stream that emits the Avro binary representation of the serialized object."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
type: "interface"
desc: "Generic interface covering basic Avro serialization and deserialization methods."
implements:
- "<xref href=\"com.azure.core.util.serializer.ObjectSerializer?alt=com.azure.core.util.serializer.ObjectSerializer&text=ObjectSerializer\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.experimental.serializer"
artifact: com.azure:azure-core-experimental:1.0.0-beta.46
