### YamlMime:JavaMember
nameWithType: Snapshots.grantAccessAsync
type: method
members:
- fullName: com.microsoft.azure.management.compute.Snapshots.grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration)
  name: grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration)
  nameWithType: Snapshots.grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration)
  parameters:
  - description: <p>the resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the snapshot name </p>
    name: snapshotName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>access level </p>
    name: accessLevel
    type: <xref href="com.microsoft.azure.management.compute.AccessLevel?alt=com.microsoft.azure.management.compute.AccessLevel&text=AccessLevel" data-throw-if-not-resolved="False"/>
  - description: <p>access duration </p>
    name: accessDuration
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning a read-only SAS URI to the snapshot </p>
    type: <xref href="Observable%3CString%3E?alt=Observable<String>&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Grants access to the snapshot asynchronously.</p>

    <p></p>
  syntax: public Observable<String> grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration)
  uid: com.microsoft.azure.management.compute.Snapshots.grantAccessAsync(String,String,AccessLevel,int)
- fullName: com.microsoft.azure.management.compute.Snapshots.grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration, ServiceCallback<String> callback)
  name: grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration, ServiceCallback<String> callback)
  nameWithType: Snapshots.grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration, ServiceCallback<String> callback)
  parameters:
  - description: <p>the resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the snapshot name </p>
    name: snapshotName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>access level </p>
    name: accessLevel
    type: <xref href="com.microsoft.azure.management.compute.AccessLevel?alt=com.microsoft.azure.management.compute.AccessLevel&text=AccessLevel" data-throw-if-not-resolved="False"/>
  - description: <p>access duration </p>
    name: accessDuration
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure, on success it will pass read-only SAS URI to the snapshot in callback </p>
    name: callback
    type: <xref href="ServiceCallback%3CString%3E?alt=ServiceCallback<String>&text=ServiceCallback%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CString%3E?alt=ServiceFuture<String>&text=ServiceFuture%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Grants access to the snapshot asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<String> grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration, ServiceCallback<String> callback)
  uid: com.microsoft.azure.management.compute.Snapshots.grantAccessAsync(String,String,AccessLevel,int,ServiceCallback<String>)
uid: com.microsoft.azure.management.compute.Snapshots.grantAccessAsync*
fullName: com.microsoft.azure.management.compute.Snapshots.grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration)
name: grantAccessAsync(String resourceGroupName, String snapshotName, AccessLevel accessLevel, int accessDuration)
package: com.microsoft.azure.management.compute
metadata: {}
