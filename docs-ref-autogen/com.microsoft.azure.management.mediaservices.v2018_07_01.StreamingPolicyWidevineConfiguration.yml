### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration
  id: StreamingPolicyWidevineConfiguration
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01
  children:
  - com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.StreamingPolicyWidevineConfiguration()
  - com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate()
  - com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.withCustomLicenseAcquisitionUrlTemplate(java.lang.String)
  langs:
  - java
  name: StreamingPolicyWidevineConfiguration
  nameWithType: StreamingPolicyWidevineConfiguration
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration
  type: Class
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  summary: Class to specify configurations of Widevine in Streaming Policy.
  syntax:
    content: public class StreamingPolicyWidevineConfiguration
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.StreamingPolicyWidevineConfiguration()
  id: StreamingPolicyWidevineConfiguration()
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration
  langs:
  - java
  name: StreamingPolicyWidevineConfiguration()
  nameWithType: StreamingPolicyWidevineConfiguration.StreamingPolicyWidevineConfiguration()
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.StreamingPolicyWidevineConfiguration()
  overload: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.StreamingPolicyWidevineConfiguration*
  type: Constructor
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  syntax:
    content: public StreamingPolicyWidevineConfiguration()
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate()
  id: customLicenseAcquisitionUrlTemplate()
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration
  langs:
  - java
  name: customLicenseAcquisitionUrlTemplate()
  nameWithType: StreamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate()
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate()
  overload: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate*
  type: Method
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  summary: Get template for the URL of the custom service delivering licenses to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request. The currently supported token values are \{AlternativeMediaId\}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and \{ContentKeyId\}, which is replaced with the value of identifier of the key being requested.
  syntax:
    content: public String customLicenseAcquisitionUrlTemplate()
    return:
      type: java.lang.String
      description: the customLicenseAcquisitionUrlTemplate value
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.withCustomLicenseAcquisitionUrlTemplate(java.lang.String)
  id: withCustomLicenseAcquisitionUrlTemplate(java.lang.String)
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration
  langs:
  - java
  name: withCustomLicenseAcquisitionUrlTemplate(String customLicenseAcquisitionUrlTemplate)
  nameWithType: StreamingPolicyWidevineConfiguration.withCustomLicenseAcquisitionUrlTemplate(String customLicenseAcquisitionUrlTemplate)
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.withCustomLicenseAcquisitionUrlTemplate(String customLicenseAcquisitionUrlTemplate)
  overload: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.withCustomLicenseAcquisitionUrlTemplate*
  type: Method
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  summary: Set template for the URL of the custom service delivering licenses to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request. The currently supported token values are \{AlternativeMediaId\}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and \{ContentKeyId\}, which is replaced with the value of identifier of the key being requested.
  syntax:
    content: public StreamingPolicyWidevineConfiguration withCustomLicenseAcquisitionUrlTemplate(String customLicenseAcquisitionUrlTemplate)
    parameters:
    - id: customLicenseAcquisitionUrlTemplate
      type: java.lang.String
      description: the customLicenseAcquisitionUrlTemplate value to set
    return:
      type: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration
      description: the StreamingPolicyWidevineConfiguration object itself.
references:
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.StreamingPolicyWidevineConfiguration*
  name: StreamingPolicyWidevineConfiguration
  nameWithType: StreamingPolicyWidevineConfiguration.StreamingPolicyWidevineConfiguration
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.StreamingPolicyWidevineConfiguration
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate*
  name: customLicenseAcquisitionUrlTemplate
  nameWithType: StreamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.customLicenseAcquisitionUrlTemplate
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.withCustomLicenseAcquisitionUrlTemplate*
  name: withCustomLicenseAcquisitionUrlTemplate
  nameWithType: StreamingPolicyWidevineConfiguration.withCustomLicenseAcquisitionUrlTemplate
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.StreamingPolicyWidevineConfiguration.withCustomLicenseAcquisitionUrlTemplate
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
