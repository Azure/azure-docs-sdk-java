### YamlMime:JavaMember
uid: "com.azure.resourcemanager.compute.fluent.CloudServicesClient.updateAsync*"
fullName: "com.azure.resourcemanager.compute.fluent.CloudServicesClient.updateAsync"
name: "updateAsync"
nameWithType: "CloudServicesClient.updateAsync"
members:
- uid: "com.azure.resourcemanager.compute.fluent.CloudServicesClient.updateAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.fluent.CloudServicesClient.updateAsync(String resourceGroupName, String cloudServiceName)"
  name: "updateAsync(String resourceGroupName, String cloudServiceName)"
  nameWithType: "CloudServicesClient.updateAsync(String resourceGroupName, String cloudServiceName)"
  summary: "Update a cloud service."
  parameters:
  - description: "Name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the cloud service."
    name: "cloudServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<CloudServiceInner> updateAsync(String resourceGroupName, String cloudServiceName)"
  returns:
    description: "describes the cloud service on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.fluent.models.CloudServiceInner?alt=com.azure.resourcemanager.compute.fluent.models.CloudServiceInner&text=CloudServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.compute.fluent.CloudServicesClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.CloudServiceUpdate)"
  fullName: "com.azure.resourcemanager.compute.fluent.CloudServicesClient.updateAsync(String resourceGroupName, String cloudServiceName, CloudServiceUpdate parameters)"
  name: "updateAsync(String resourceGroupName, String cloudServiceName, CloudServiceUpdate parameters)"
  nameWithType: "CloudServicesClient.updateAsync(String resourceGroupName, String cloudServiceName, CloudServiceUpdate parameters)"
  summary: "Update a cloud service."
  parameters:
  - description: "Name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the cloud service."
    name: "cloudServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The cloud service object."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CloudServiceUpdate?alt=com.azure.resourcemanager.compute.models.CloudServiceUpdate&text=CloudServiceUpdate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<CloudServiceInner> updateAsync(String resourceGroupName, String cloudServiceName, CloudServiceUpdate parameters)"
  returns:
    description: "describes the cloud service on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.fluent.models.CloudServiceInner?alt=com.azure.resourcemanager.compute.fluent.models.CloudServiceInner&text=CloudServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.compute.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.13.0
