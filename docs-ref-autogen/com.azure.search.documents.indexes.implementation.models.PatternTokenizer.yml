### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  id: PatternTokenizer
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models
  children:
  - com.azure.search.documents.indexes.implementation.models.PatternTokenizer.PatternTokenizer(java.lang.String)
  - com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getFlags()
  - com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getGroup()
  - com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getPattern()
  - com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setFlags(com.azure.search.documents.indexes.implementation.models.RegexFlags)
  - com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setGroup(java.lang.Integer)
  - com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setPattern(java.lang.String)
  - com.azure.search.documents.indexes.implementation.models.PatternTokenizer.validate()
  langs:
  - java
  name: PatternTokenizer
  nameWithType: PatternTokenizer
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  type: Class
  package: com.azure.search.documents.indexes.implementation.models
  summary: The PatternTokenizer model.
  syntax:
    content: public class PatternTokenizer extends LexicalTokenizer
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.implementation.models.LexicalTokenizer
  inheritedMembers:
  - com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.getName()
  - com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.validate()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.PatternTokenizer(java.lang.String)
  id: PatternTokenizer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  langs:
  - java
  name: PatternTokenizer(String name)
  nameWithType: PatternTokenizer.PatternTokenizer(String name)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.PatternTokenizer(String name)
  overload: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.PatternTokenizer*
  type: Constructor
  package: com.azure.search.documents.indexes.implementation.models
  summary: Creates an instance of PatternTokenizer class.
  syntax:
    content: public PatternTokenizer(String name)
    parameters:
    - id: name
      type: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getFlags()
  id: getFlags()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  langs:
  - java
  name: getFlags()
  nameWithType: PatternTokenizer.getFlags()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getFlags()
  overload: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getFlags*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the flags property: Regular expression flags.'
  syntax:
    content: public RegexFlags getFlags()
    return:
      type: com.azure.search.documents.indexes.implementation.models.RegexFlags
      description: the flags value.
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getGroup()
  id: getGroup()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  langs:
  - java
  name: getGroup()
  nameWithType: PatternTokenizer.getGroup()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getGroup()
  overload: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getGroup*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the group property: The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1.'
  syntax:
    content: public Integer getGroup()
    return:
      type: java.lang.Integer
      description: the group value.
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getPattern()
  id: getPattern()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  langs:
  - java
  name: getPattern()
  nameWithType: PatternTokenizer.getPattern()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getPattern()
  overload: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getPattern*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the pattern property: A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters.'
  syntax:
    content: public String getPattern()
    return:
      type: java.lang.String
      description: the pattern value.
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setFlags(com.azure.search.documents.indexes.implementation.models.RegexFlags)
  id: setFlags(com.azure.search.documents.indexes.implementation.models.RegexFlags)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  langs:
  - java
  name: setFlags(RegexFlags flags)
  nameWithType: PatternTokenizer.setFlags(RegexFlags flags)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setFlags(RegexFlags flags)
  overload: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setFlags*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the flags property: Regular expression flags.'
  syntax:
    content: public PatternTokenizer setFlags(RegexFlags flags)
    parameters:
    - id: flags
      type: com.azure.search.documents.indexes.implementation.models.RegexFlags
      description: the flags value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
      description: the PatternTokenizer object itself.
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setGroup(java.lang.Integer)
  id: setGroup(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  langs:
  - java
  name: setGroup(Integer group)
  nameWithType: PatternTokenizer.setGroup(Integer group)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setGroup(Integer group)
  overload: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setGroup*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the group property: The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1.'
  syntax:
    content: public PatternTokenizer setGroup(Integer group)
    parameters:
    - id: group
      type: java.lang.Integer
      description: the group value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
      description: the PatternTokenizer object itself.
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setPattern(java.lang.String)
  id: setPattern(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  langs:
  - java
  name: setPattern(String pattern)
  nameWithType: PatternTokenizer.setPattern(String pattern)
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setPattern(String pattern)
  overload: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setPattern*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the pattern property: A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters.'
  syntax:
    content: public PatternTokenizer setPattern(String pattern)
    parameters:
    - id: pattern
      type: java.lang.String
      description: the pattern value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
      description: the PatternTokenizer object itself.
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.validate()
  id: validate()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.implementation.models.PatternTokenizer
  langs:
  - java
  name: validate()
  nameWithType: PatternTokenizer.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.validate()
  overload: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.validate*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.PatternTokenizer*
  name: PatternTokenizer
  nameWithType: PatternTokenizer.PatternTokenizer
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.PatternTokenizer
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getPattern*
  name: getPattern
  nameWithType: PatternTokenizer.getPattern
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getPattern
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setPattern*
  name: setPattern
  nameWithType: PatternTokenizer.setPattern
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setPattern
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.RegexFlags
  name: RegexFlags
  nameWithType: RegexFlags
  fullName: com.azure.search.documents.indexes.implementation.models.RegexFlags
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getFlags*
  name: getFlags
  nameWithType: PatternTokenizer.getFlags
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getFlags
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setFlags*
  name: setFlags
  nameWithType: PatternTokenizer.setFlags
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setFlags
  package: com.azure.search.documents.indexes.implementation.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getGroup*
  name: getGroup
  nameWithType: PatternTokenizer.getGroup
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.getGroup
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setGroup*
  name: setGroup
  nameWithType: PatternTokenizer.setGroup
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.setGroup
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.validate*
  name: validate
  nameWithType: PatternTokenizer.validate
  fullName: com.azure.search.documents.indexes.implementation.models.PatternTokenizer.validate
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer
  name: LexicalTokenizer
  nameWithType: LexicalTokenizer
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.validate()
  name: LexicalTokenizer.validate()
  nameWithType: LexicalTokenizer.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.validate()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.getName()
  name: LexicalTokenizer.getName()
  nameWithType: LexicalTokenizer.getName()
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.getName()
