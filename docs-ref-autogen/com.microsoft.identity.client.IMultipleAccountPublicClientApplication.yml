### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  id: IMultipleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  children:
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String [],@NonNull final IAccount,@NonNull final String)
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String)
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String,@NonNull final GetAccountCallback)
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts()
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount)
  - com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: IMultipleAccountPublicClientApplication
  nameWithType: IMultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  type: Interface
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 43
  package: com.microsoft.identity.client
  summary: "<p>An interface that contains list of operations that are available when MSAL is in 'multiple account' mode.<ul><li><p>This mode allows an application to make API calls with more than one accounts.</p></li><li><p>The application will only be able to retrieve/remove accounts that have been used to acquire token interactively in this application</p></li><li><p>API calls' scope is limited to 'the calling app'. (i.e. removeAccount() will not remove credentials of the same account in other apps). </p></li></ul></p>\r\n<p>This is MSAL's default mode. </p>"
  syntax:
    content: public interface IMultipleAccountPublicClientApplication extends IPublicClientApplication
  inheritedMembers:
  - com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  - com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  - com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  - com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
  id: acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 111
  package: com.microsoft.identity.client
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that will be used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: loginHint
      type: b868e8dd
      description: <p>Optional. If provided, will be used as the query parameter sent for authenticating the user, which will have the UPN pre-populated. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The Non-null <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String [],@NonNull final IAccount,@NonNull final String)
  id: acquireTokenSilent(@NonNull final String [],@NonNull final IAccount,@NonNull final String)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilent(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority)
  nameWithType: IMultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority)
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 128
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: account
      type: d6b37550com.microsoft.identity.client.IAccount
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false" data-raw-source="IAccount"></xref> represents the account to silently request tokens for. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority to issue the token. </p>
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
  id: acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 146
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: account
      type: d6b37550com.microsoft.identity.client.IAccount
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false" data-raw-source="IAccount"></xref> represents the account to silently request tokens for. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority to issue the token. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="SilentAuthenticationCallback"></xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="SilentAuthenticationCallback#onSuccess(IAuthenticationResult)"></xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="}. "></xref></p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String)
  id: getAccount(@NonNull final String)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: getAccount(@NonNull final String identifier)
  nameWithType: IMultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier)
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 75
  package: com.microsoft.identity.client
  summary: "<p>Retrieve the IAccount object matching the identifier. The identifier could be homeAccountIdentifier, localAccountIdentifier or username.</p>\r\n<p></p>"
  syntax:
    content: public IAccount getAccount(@NonNull final String identifier)
    parameters:
    - id: identifier
      type: 8789feb4
      description: <p>String of the identifier </p>
    return:
      type: com.microsoft.identity.client.IAccount
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String,@NonNull final GetAccountCallback)
  id: getAccount(@NonNull final String,@NonNull final GetAccountCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 64
  package: com.microsoft.identity.client
  summary: "<p>Retrieve the IAccount object matching the identifier. The identifier could be homeAccountIdentifier, localAccountIdentifier or username.</p>\r\n<p></p>"
  syntax:
    content: public void getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
    parameters:
    - id: identifier
      type: 8789feb4
      description: <p>String of the identifier </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
      description: <p>The callback to notify once this action has finished. </p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts()
  id: getAccounts()
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: getAccounts()
  nameWithType: IMultipleAccountPublicClientApplication.getAccounts()
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts()
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 55
  package: com.microsoft.identity.client
  summary: "<p>Returns a List of <xref uid=\"com.microsoft.identity.client.IAccount\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAccount\"></xref> objects for which this application has RefreshTokens. </p>"
  syntax:
    content: public List<IAccount> getAccounts()
    return:
      type: 5618da2dcom.microsoft.identity.client.IAccounta08ddfce
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
  id: getAccounts(@NonNull final LoadAccountsCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: getAccounts(@NonNull final LoadAccountsCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 49
  package: com.microsoft.identity.client
  summary: "<p>Asynchronously returns a List of <xref uid=\"com.microsoft.identity.client.IAccount\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAccount\"></xref> objects for which this application has RefreshTokens.</p>\r\n<p></p>"
  syntax:
    content: public void getAccounts(@NonNull final LoadAccountsCallback callback)
    parameters:
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
      description: <p>The callback to notify once this action has finished. </p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount)
  id: removeAccount(@Nullable final IAccount)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: removeAccount(@Nullable final IAccount account)
  nameWithType: IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account)
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 93
  package: com.microsoft.identity.client
  summary: "<p>Removes the Account and Credentials (tokens) for the supplied IAccount.</p>\r\n<p></p>"
  syntax:
    content: public boolean removeAccount(@Nullable final IAccount account)
    parameters:
    - id: account
      type: 9a7d2fbdcom.microsoft.identity.client.IAccount
      description: <p>The IAccount whose entry and associated tokens should be removed. </p>
    return:
      type: 4fc6e284
      description: <p>True, if the account was removed. False otherwise. </p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
  id: removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  overload: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java
    startLine: 82
  package: com.microsoft.identity.client
  summary: "<p>Removes the Account and Credentials (tokens) for the supplied IAccount.</p>\r\n<p></p>"
  syntax:
    content: public void removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
    parameters:
    - id: account
      type: 9a7d2fbdcom.microsoft.identity.client.IAccount
      description: <p>The IAccount whose entry and associated tokens should be removed. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
references:
- uid: d6b37550com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
    name: IPublicClientApplication.LoadAccountsCallback
    fullName: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
    href: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback.yml
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts*
  name: getAccounts
  nameWithType: IMultipleAccountPublicClientApplication.getAccounts
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts
  package: com.microsoft.identity.client
- uid: 5618da2dcom.microsoft.identity.client.IAccounta08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
  - name: '>'
    fullName: '>'
- uid: 8789feb4
  spec.java:
  - name: '@NonNull final String'
    fullName: '@NonNull final String'
- uid: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
    name: IMultipleAccountPublicClientApplication.GetAccountCallback
    fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
    href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback.yml
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount*
  name: getAccount
  nameWithType: IMultipleAccountPublicClientApplication.getAccount
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount
  package: com.microsoft.identity.client
- uid: 9a7d2fbdcom.microsoft.identity.client.IAccount
  spec.java:
  - name: '@Nullable final '
    fullName: '@Nullable final '
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
- uid: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
    name: IMultipleAccountPublicClientApplication.RemoveAccountCallback
    fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
    href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback.yml
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount*
  name: removeAccount
  nameWithType: IMultipleAccountPublicClientApplication.removeAccount
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount
  package: com.microsoft.identity.client
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: "97576948"
  spec.java:
  - name: '@NonNull final Activity'
    fullName: '@NonNull final Activity'
- uid: e5895f1f
  spec.java:
  - name: '@NonNull final String []'
    fullName: '@NonNull final String []'
- uid: b868e8dd
  spec.java:
  - name: '@Nullable final String'
    fullName: '@Nullable final String'
- uid: d6b37550com.microsoft.identity.client.AuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AuthenticationCallback
    name: AuthenticationCallback
    fullName: com.microsoft.identity.client.AuthenticationCallback
    href: com.microsoft.identity.client.AuthenticationCallback.yml
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken*
  name: acquireToken
  nameWithType: IMultipleAccountPublicClientApplication.acquireToken
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken
  package: com.microsoft.identity.client
- uid: d6b37550com.microsoft.identity.client.IAccount
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent*
  name: acquireTokenSilent
  nameWithType: IMultipleAccountPublicClientApplication.acquireTokenSilent
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent
  package: com.microsoft.identity.client
- uid: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.SilentAuthenticationCallback
    name: SilentAuthenticationCallback
    fullName: com.microsoft.identity.client.SilentAuthenticationCallback
    href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync*
  name: acquireTokenSilentAsync
  nameWithType: IMultipleAccountPublicClientApplication.acquireTokenSilentAsync
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: IPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>. </p>\r\n<p>Convey parameters via the AquireTokenParameters object</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
    parameters:
    - id: acquireTokenParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  nameWithType: IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  type: Method
  summary: "<p>Perform the Device Code Flow (DCF) protocol to allow a device without input capability to authenticate and get a new access token. Currently, flow is only supported in local MSAL. No Broker support. </p>"
  syntax:
    content: public void acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
    parameters:
    - id: scopes
      type: 045b2b2f
      description: <p>the desired access scopes </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
      description: <p>callback object used to communicate with the API throughout the protocol </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: getConfiguration()
  nameWithType: IPublicClientApplication.getConfiguration()
  fullName: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  type: Method
  summary: "<p>Returns the PublicClientConfiguration for this instance of PublicClientApplication.</p>\r\n<p></p>"
  syntax:
    content: public PublicClientApplicationConfiguration getConfiguration()
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
      description: <p>The PublicClientApplicationConfiguration. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: isSharedDevice()
  nameWithType: IPublicClientApplication.isSharedDevice()
  fullName: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  type: Method
  summary: "<p>Returns whether the application is being run on a device that is marked as a shared. Only SingleAccountPublicClientApplications may be used on shared devices</p>\r\n<p></p>"
  syntax:
    content: public boolean isSharedDevice()
    return:
      type: 4fc6e284
- uid: com.microsoft.identity.client.IPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: IPublicClientApplication
  nameWithType: IPublicClientApplication
  fullName: com.microsoft.identity.client.IPublicClientApplication
  type: Interface
  syntax:
    content: public interface IPublicClientApplication
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: MultipleAccountPublicClientApplication
  nameWithType: MultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  type: Class
  syntax:
    content: public class MultipleAccountPublicClientApplication
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: getAccounts(@NonNull final LoadAccountsCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  type: Method
  summary: "<p>Asynchronously returns a List of <xref uid=\"com.microsoft.identity.client.IAccount\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAccount\"></xref> objects for which this application has RefreshTokens.</p>\r\n<p></p>"
  syntax:
    content: public void getAccounts(@NonNull final LoadAccountsCallback callback)
    parameters:
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
      description: <p>The callback to notify once this action has finished. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback.yml
  name: IPublicClientApplication.LoadAccountsCallback
  nameWithType: IPublicClientApplication.LoadAccountsCallback
  fullName: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
  type: Interface
  syntax:
    content: public interface LoadAccountsCallback
- uid: com.microsoft.identity.client.IAccount
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAccount.yml
  name: IAccount
  nameWithType: IAccount
  fullName: com.microsoft.identity.client.IAccount
  type: Interface
  syntax:
    content: public interface IAccount extends IClaimable
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts()
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: getAccounts()
  nameWithType: MultipleAccountPublicClientApplication.getAccounts()
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts()
  type: Method
  summary: "<p>Returns a List of <xref uid=\"com.microsoft.identity.client.IAccount\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAccount\"></xref> objects for which this application has RefreshTokens. </p>"
  syntax:
    content: public List<IAccount> getAccounts()
    return:
      type: 5618da2dcom.microsoft.identity.client.IAccounta08ddfce
- uid: com.microsoft.identity.client.exception.MsalException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalException.yml
  name: MsalException
  nameWithType: MsalException
  fullName: com.microsoft.identity.client.exception.MsalException
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.identity.client.exception.MsalException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalException\"></xref> thrown or sent back via callback, representing the detailed exception thrown by the sdk. It will contain the error code, error description (could be null) or throwable (could be null). </p>"
  syntax:
    content: public class MsalException
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull final String,@NonNull final GetAccountCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  type: Method
  summary: "<p>Retrieve the IAccount object matching the identifier. The identifier could be homeAccountIdentifier, localAccountIdentifier or username.</p>\r\n<p></p>"
  syntax:
    content: public void getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
    parameters:
    - id: identifier
      type: 8789feb4
      description: <p>String of the identifier </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
      description: <p>The callback to notify once this action has finished. </p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback.yml
  name: IMultipleAccountPublicClientApplication.GetAccountCallback
  nameWithType: IMultipleAccountPublicClientApplication.GetAccountCallback
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
  type: Interface
  syntax:
    content: public interface GetAccountCallback
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull String)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: getAccount(@NonNull String identifier)
  nameWithType: MultipleAccountPublicClientApplication.getAccount(@NonNull String identifier)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull String identifier)
  type: Method
  summary: "<p>Retrieve the IAccount object matching the identifier. The identifier could be homeAccountIdentifier, localAccountIdentifier or username.</p>\r\n<p></p>"
  syntax:
    content: public IAccount getAccount(@NonNull String identifier)
    parameters:
    - id: identifier
      type: 3d663bb1
      description: <p>String of the identifier </p>
    return:
      type: com.microsoft.identity.client.IAccount
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  type: Method
  summary: "<p>Removes the Account and Credentials (tokens) for the supplied IAccount.</p>\r\n<p></p>"
  syntax:
    content: public void removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
    parameters:
    - id: account
      type: 9a7d2fbdcom.microsoft.identity.client.IAccount
      description: <p>The IAccount whose entry and associated tokens should be removed. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback.yml
  name: IMultipleAccountPublicClientApplication.RemoveAccountCallback
  nameWithType: IMultipleAccountPublicClientApplication.RemoveAccountCallback
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
  type: Interface
  syntax:
    content: public interface RemoveAccountCallback
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable IAccount)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: removeAccount(@Nullable IAccount account)
  nameWithType: MultipleAccountPublicClientApplication.removeAccount(@Nullable IAccount account)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable IAccount account)
  type: Method
  summary: "<p>Removes the Account and Credentials (tokens) for the supplied IAccount.</p>\r\n<p></p>"
  syntax:
    content: public boolean removeAccount(@Nullable IAccount account)
    parameters:
    - id: account
      type: fef954a7com.microsoft.identity.client.IAccount
      description: <p>The IAccount whose entry and associated tokens should be removed. </p>
    return:
      type: 4fc6e284
      description: <p>True, if the account was removed. False otherwise. </p>
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that will be used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: loginHint
      type: b868e8dd
      description: <p>Optional. If provided, will be used as the query parameter sent for authenticating the user, which will have the UPN pre-populated. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The Non-null <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.AuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: AuthenticationCallback
  nameWithType: AuthenticationCallback
  fullName: com.microsoft.identity.client.AuthenticationCallback
  type: Interface
  summary: "<p>Callback passed with token acquisition. <xref uid=\"com.microsoft.identity.client.IAuthenticationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAuthenticationResult\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalException\"></xref> will be returned back via callback. </p>"
  syntax:
    content: public interface AuthenticationCallback extends SilentAuthenticationCallback
- uid: com.microsoft.identity.client.AuthenticationCallback.onCancel()
  parent: com.microsoft.identity.client.AuthenticationCallback
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: onCancel()
  nameWithType: AuthenticationCallback.onCancel()
  fullName: com.microsoft.identity.client.AuthenticationCallback.onCancel()
  type: Method
  summary: "<p>Will be called if user cancels the flow. </p>"
  syntax:
    content: public void onCancel()
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onSuccess(final IAuthenticationResult authenticationResult)
  nameWithType: SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  type: Method
  summary: "<p>Authentication finishes successfully.</p>\r\n<p></p>"
  syntax:
    content: public void onSuccess(final IAuthenticationResult authenticationResult)
    parameters:
    - id: authenticationResult
      type: 93de0ef9com.microsoft.identity.client.IAuthenticationResult
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="IAuthenticationResult"></xref> that contains the success response. </p>
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onError(final MsalException exception)
  nameWithType: SilentAuthenticationCallback.onError(final MsalException exception)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException exception)
  type: Method
  summary: "<p>Error occurs during the authentication.</p>\r\n<p></p>"
  syntax:
    content: public void onError(final MsalException exception)
    parameters:
    - id: exception
      type: 93de0ef9com.microsoft.identity.client.exception.MsalException
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalException"></xref> contains the error code, error message and cause if applicable. The exception returned in the callback could be <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalClientException"></xref>, <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalServiceException"></xref> or <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalUiRequiredException"></xref>. </p>
- uid: com.microsoft.identity.client.IAuthenticationResult
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAuthenticationResult.yml
  name: IAuthenticationResult
  nameWithType: IAuthenticationResult
  fullName: com.microsoft.identity.client.IAuthenticationResult
  type: Interface
  syntax:
    content: public interface IAuthenticationResult
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull String [],@NonNull IAccount,@NonNull String)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: acquireTokenSilent(@NonNull String[] scopes, @NonNull IAccount account, @NonNull String authority)
  nameWithType: MultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull String[] scopes, @NonNull IAccount account, @NonNull String authority)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull String[] scopes, @NonNull IAccount account, @NonNull String authority)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull String[] scopes, @NonNull IAccount account, @NonNull String authority)
    parameters:
    - id: scopes
      type: 045b2b2f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: account
      type: 3872da22com.microsoft.identity.client.IAccount
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false" data-raw-source="IAccount"></xref> represents the account to silently request tokens for. </p>
    - id: authority
      type: 3d663bb1
      description: <p>Authority to issue the token. </p>
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: account
      type: d6b37550com.microsoft.identity.client.IAccount
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false" data-raw-source="IAccount"></xref> represents the account to silently request tokens for. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority to issue the token. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="SilentAuthenticationCallback"></xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="SilentAuthenticationCallback#onSuccess(IAuthenticationResult)"></xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="}. "></xref></p>
- uid: com.microsoft.identity.client.SilentAuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: SilentAuthenticationCallback
  nameWithType: SilentAuthenticationCallback
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback
  type: Interface
  syntax:
    content: public interface SilentAuthenticationCallback
