### YamlMime:JavaMember
nameWithType: ComputerVision.analyzeImageInStreamAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  parameters:
  - description: <p>An image stream. </p>
    name: image
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: analyzeImageInStreamOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter&text=AnalyzeImageInStreamOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ImageAnalysis object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis&text=ImageAnalysis" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax: public Observable<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync
name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
package: com.microsoft.azure.cognitiveservices.vision.computervision
metadata: {}
