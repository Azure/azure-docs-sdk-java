### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy"
fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy"
name: "StreamingPolicy"
nameWithType: "StreamingPolicy"
summary: "An immutable client-side representation of StreamingPolicy."
syntax: "public interface StreamingPolicy"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.commonEncryptionCbcs()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.commonEncryptionCbcs()"
  name: "commonEncryptionCbcs()"
  nameWithType: "StreamingPolicy.commonEncryptionCbcs()"
  summary: "Gets the commonEncryptionCbcs property: Configuration of CommonEncryptionCbcs."
  modifiers:
  - "abstract"
  syntax: "public abstract CommonEncryptionCbcs commonEncryptionCbcs()"
  returns:
    description: "the commonEncryptionCbcs value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.commonEncryptionCenc()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.commonEncryptionCenc()"
  name: "commonEncryptionCenc()"
  nameWithType: "StreamingPolicy.commonEncryptionCenc()"
  summary: "Gets the commonEncryptionCenc property: Configuration of CommonEncryptionCenc."
  modifiers:
  - "abstract"
  syntax: "public abstract CommonEncryptionCenc commonEncryptionCenc()"
  returns:
    description: "the commonEncryptionCenc value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc&text=CommonEncryptionCenc\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.created()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.created()"
  name: "created()"
  nameWithType: "StreamingPolicy.created()"
  summary: "Gets the created property: Creation time of Streaming Policy."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime created()"
  returns:
    description: "the created value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.defaultContentKeyPolicyName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.defaultContentKeyPolicyName()"
  name: "defaultContentKeyPolicyName()"
  nameWithType: "StreamingPolicy.defaultContentKeyPolicyName()"
  summary: "Gets the defaultContentKeyPolicyName property: Default ContentKey used by current Streaming Policy."
  modifiers:
  - "abstract"
  syntax: "public abstract String defaultContentKeyPolicyName()"
  returns:
    description: "the defaultContentKeyPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.envelopeEncryption()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.envelopeEncryption()"
  name: "envelopeEncryption()"
  nameWithType: "StreamingPolicy.envelopeEncryption()"
  summary: "Gets the envelopeEncryption property: Configuration of EnvelopeEncryption."
  modifiers:
  - "abstract"
  syntax: "public abstract EnvelopeEncryption envelopeEncryption()"
  returns:
    description: "the envelopeEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption?alt=com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.id()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.id()"
  name: "id()"
  nameWithType: "StreamingPolicy.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.innerModel()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.innerModel()"
  name: "innerModel()"
  nameWithType: "StreamingPolicy.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract StreamingPolicyInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner&text=StreamingPolicyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.name()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.name()"
  name: "name()"
  nameWithType: "StreamingPolicy.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.noEncryption()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.noEncryption()"
  name: "noEncryption()"
  nameWithType: "StreamingPolicy.noEncryption()"
  summary: "Gets the noEncryption property: Configurations of NoEncryption."
  modifiers:
  - "abstract"
  syntax: "public abstract NoEncryption noEncryption()"
  returns:
    description: "the noEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.NoEncryption?alt=com.azure.resourcemanager.mediaservices.models.NoEncryption&text=NoEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.refresh()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.refresh()"
  name: "refresh()"
  nameWithType: "StreamingPolicy.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract StreamingPolicy refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicy?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicy&text=StreamingPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "StreamingPolicy.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract StreamingPolicy refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicy?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicy&text=StreamingPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.systemData()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.systemData()"
  name: "systemData()"
  nameWithType: "StreamingPolicy.systemData()"
  summary: "Gets the systemData property: The system metadata relating to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.type()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicy.type()"
  name: "type()"
  nameWithType: "StreamingPolicy.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.0.0
