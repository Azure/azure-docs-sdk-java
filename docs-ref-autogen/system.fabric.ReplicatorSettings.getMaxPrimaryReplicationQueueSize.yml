### YamlMime:JavaMember
nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueSize
type: method
members:
- fullName: system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueSize()
  name: getMaxPrimaryReplicationQueueSize()
  nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueSize()
  returns:
    description: <p>The maximum size of the primary replication operation queue inside <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, which contains replication <xref uid="system.fabric.Operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s. The unit here is the number of operations in the queue. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines the maximum size of the primary replication operation queue inside <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, which contains replication <xref uid="system.fabric.Operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s</p>

    <p>

      <b>Remarks:</b>If this queue size is reached, then the Primary will begin seeing <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricErrorCode#ReplicationQueueFull</xref> exceptions. The default value is 1024 Note that values for this parameter must be a power of 2. This setting is specific to the Replicator when the role of the service is Primary </p>
  syntax: public long getMaxPrimaryReplicationQueueSize()
  uid: system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueSize()
uid: system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueSize*
fullName: system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueSize()
name: getMaxPrimaryReplicationQueueSize()
package: system.fabric
metadata: {}
