### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.SubscriptionClient
  id: SubscriptionClient
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID)
  - com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID,Map<String, Object>)
  - com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID)
  - com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID,Map<String, Object>)
  - com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.addRule(RuleDescription)
  - com.microsoft.azure.servicebus.SubscriptionClient.addRule(String,Filter)
  - com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(RuleDescription)
  - com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(String,Filter)
  - com.microsoft.azure.servicebus.SubscriptionClient.complete(UUID)
  - com.microsoft.azure.servicebus.SubscriptionClient.complete(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.completeAsync(UUID)
  - com.microsoft.azure.servicebus.SubscriptionClient.completeAsync(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,Map<String, Object>)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,String,String)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,String,String,Map<String, Object>)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,String,String,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,String,String,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,Map<String, Object>)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,String,String)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,String,String,Map<String, Object>)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,String,String,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,String,String,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.SubscriptionClient.DEFAULT_RULE_NAME
  - com.microsoft.azure.servicebus.SubscriptionClient.getEntityPath()
  - com.microsoft.azure.servicebus.SubscriptionClient.getPrefetchCount()
  - com.microsoft.azure.servicebus.SubscriptionClient.getReceiveMode()
  - com.microsoft.azure.servicebus.SubscriptionClient.getRules()
  - com.microsoft.azure.servicebus.SubscriptionClient.getRulesAsync()
  - com.microsoft.azure.servicebus.SubscriptionClient.getSubscriptionName()
  - com.microsoft.azure.servicebus.SubscriptionClient.getTopicName()
  - com.microsoft.azure.servicebus.SubscriptionClient.onClose()
  - com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler)
  - com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler,ExecutorService)
  - com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler,MessageHandlerOptions)
  - com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler,MessageHandlerOptions,ExecutorService)
  - com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler)
  - com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler,ExecutorService)
  - com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler,SessionHandlerOptions)
  - com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler,SessionHandlerOptions,ExecutorService)
  - com.microsoft.azure.servicebus.SubscriptionClient.removeRule(String)
  - com.microsoft.azure.servicebus.SubscriptionClient.removeRuleAsync(String)
  - com.microsoft.azure.servicebus.SubscriptionClient.setPrefetchCount(int)
  - com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(ConnectionStringBuilder,ReceiveMode)
  - com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(String,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(URI,String,ClientSettings,ReceiveMode)
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: SubscriptionClient
  nameWithType: SubscriptionClient
  fullName: com.microsoft.azure.servicebus.SubscriptionClient
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 27
  package: com.microsoft.azure.servicebus
  syntax:
    content: public class SubscriptionClient implements ISubscriptionClient
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.servicebus.primitives.ClientEntity
  - com.microsoft.azure.servicebus.InitializableEntity
  inheritedMembers:
  - com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String)
  - com.microsoft.azure.servicebus.primitives.ClientEntity.close()
  - com.microsoft.azure.servicebus.ICloseable.close()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
  - com.microsoft.azure.servicebus.ICloseable.closeAsync()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
  - com.microsoft.azure.servicebus.InitializableEntity.InitializableEntity(String)
  - com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable)
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID)
  id: abandon(UUID)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: abandon(UUID lockToken)
  nameWithType: SubscriptionClient.abandon(UUID lockToken)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID lockToken)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.abandon*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 224
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void abandon(UUID lockToken)
    parameters:
    - id: lockToken
      type: add9545a
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID,Map<String, Object>)
  id: abandon(UUID,Map<String, Object>)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: abandon(UUID lockToken, Map<String, Object> propertiesToModify)
  nameWithType: SubscriptionClient.abandon(UUID lockToken, Map<String, Object> propertiesToModify)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID lockToken, Map<String, Object> propertiesToModify)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.abandon*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 234
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void abandon(UUID lockToken, Map<String, Object> propertiesToModify)
    parameters:
    - id: lockToken
      type: add9545a
    - id: propertiesToModify
      type: e7b06046
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID,Map<String, Object>,TransactionContext)
  id: abandon(UUID,Map<String, Object>,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: abandon(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: SubscriptionClient.abandon(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.abandon*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 239
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void abandon(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: propertiesToModify
      type: e7b06046
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID,TransactionContext)
  id: abandon(UUID,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: abandon(UUID lockToken, TransactionContext transaction)
  nameWithType: SubscriptionClient.abandon(UUID lockToken, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandon(UUID lockToken, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.abandon*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 229
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void abandon(UUID lockToken, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID)
  id: abandonAsync(UUID)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: abandonAsync(UUID lockToken)
  nameWithType: SubscriptionClient.abandonAsync(UUID lockToken)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID lockToken)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 244
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> abandonAsync(UUID lockToken)
    parameters:
    - id: lockToken
      type: add9545a
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID,Map<String, Object>)
  id: abandonAsync(UUID,Map<String, Object>)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)
  nameWithType: SubscriptionClient.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 254
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)
    parameters:
    - id: lockToken
      type: add9545a
    - id: propertiesToModify
      type: e7b06046
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID,Map<String, Object>,TransactionContext)
  id: abandonAsync(UUID,Map<String, Object>,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: SubscriptionClient.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 259
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: propertiesToModify
      type: e7b06046
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID,TransactionContext)
  id: abandonAsync(UUID,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: abandonAsync(UUID lockToken, TransactionContext transaction)
  nameWithType: SubscriptionClient.abandonAsync(UUID lockToken, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync(UUID lockToken, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 249
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> abandonAsync(UUID lockToken, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRule(RuleDescription)
  id: addRule(RuleDescription)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: addRule(RuleDescription ruleDescription)
  nameWithType: SubscriptionClient.addRule(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRule(RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.addRule*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 105
  package: com.microsoft.azure.servicebus
  summary: "<p>Adds a rule to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public void addRule(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>The rule description that provides the rule to add. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(RuleDescription)
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if add rule failed </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRule(String,Filter)
  id: addRule(String,Filter)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: addRule(String ruleName, Filter filter)
  nameWithType: SubscriptionClient.addRule(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRule(String ruleName, Filter filter)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.addRule*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 115
  package: com.microsoft.azure.servicebus
  summary: "<p>Adds a rule with specified name and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public void addRule(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The rule name </p>
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Filter"></xref> to add. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(String,Filter)
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if add rule failed </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(RuleDescription)
  id: addRuleAsync(RuleDescription)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: addRuleAsync(RuleDescription ruleDescription)
  nameWithType: SubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 110
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously adds a rule to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> addRuleAsync(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>The rule description that provides the rule to add. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule add operation. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(RuleDescription)
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(String,Filter)
  id: addRuleAsync(String,Filter)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: addRuleAsync(String ruleName, Filter filter)
  nameWithType: SubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 120
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously adds a rule with specified name and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> addRuleAsync(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The rule name </p>
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Filter"></xref> to add. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule add operation. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(String,Filter)
- uid: com.microsoft.azure.servicebus.SubscriptionClient.complete(UUID)
  id: complete(UUID)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: complete(UUID lockToken)
  nameWithType: SubscriptionClient.complete(UUID lockToken)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.complete(UUID lockToken)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.complete*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 264
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void complete(UUID lockToken)
    parameters:
    - id: lockToken
      type: add9545a
- uid: com.microsoft.azure.servicebus.SubscriptionClient.complete(UUID,TransactionContext)
  id: complete(UUID,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: complete(UUID lockToken, TransactionContext transaction)
  nameWithType: SubscriptionClient.complete(UUID lockToken, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.complete(UUID lockToken, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.complete*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 269
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void complete(UUID lockToken, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.SubscriptionClient.completeAsync(UUID)
  id: completeAsync(UUID)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: completeAsync(UUID lockToken)
  nameWithType: SubscriptionClient.completeAsync(UUID lockToken)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.completeAsync(UUID lockToken)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.completeAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 274
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> completeAsync(UUID lockToken)
    parameters:
    - id: lockToken
      type: add9545a
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.completeAsync(UUID,TransactionContext)
  id: completeAsync(UUID,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: completeAsync(UUID lockToken, TransactionContext transaction)
  nameWithType: SubscriptionClient.completeAsync(UUID lockToken, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.completeAsync(UUID lockToken, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.completeAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 279
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> completeAsync(UUID lockToken, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID)
  id: deadLetter(UUID)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetter(UUID lockToken)
  nameWithType: SubscriptionClient.deadLetter(UUID lockToken)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID lockToken)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 304
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void deadLetter(UUID lockToken)
    parameters:
    - id: lockToken
      type: add9545a
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,Map<String, Object>)
  id: deadLetter(UUID,Map<String, Object>)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)
  nameWithType: SubscriptionClient.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 314
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)
    parameters:
    - id: lockToken
      type: add9545a
    - id: propertiesToModify
      type: e7b06046
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,Map<String, Object>,TransactionContext)
  id: deadLetter(UUID,Map<String, Object>,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetter(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: SubscriptionClient.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 319
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void deadLetter(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: propertiesToModify
      type: e7b06046
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,String,String)
  id: deadLetter(UUID,String,String)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  nameWithType: SubscriptionClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 324
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
    parameters:
    - id: lockToken
      type: add9545a
    - id: deadLetterReason
      type: "26831127"
    - id: deadLetterErrorDescription
      type: "26831127"
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,String,String,Map<String, Object>)
  id: deadLetter(UUID,String,String,Map<String, Object>)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  nameWithType: SubscriptionClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 334
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
    parameters:
    - id: lockToken
      type: add9545a
    - id: deadLetterReason
      type: "26831127"
    - id: deadLetterErrorDescription
      type: "26831127"
    - id: propertiesToModify
      type: e7b06046
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,String,String,Map<String, Object>,TransactionContext)
  id: deadLetter(UUID,String,String,Map<String, Object>,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: SubscriptionClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 339
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: deadLetterReason
      type: "26831127"
    - id: deadLetterErrorDescription
      type: "26831127"
    - id: propertiesToModify
      type: e7b06046
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,String,String,TransactionContext)
  id: deadLetter(UUID,String,String,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  nameWithType: SubscriptionClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 329
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: deadLetterReason
      type: "26831127"
    - id: deadLetterErrorDescription
      type: "26831127"
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID,TransactionContext)
  id: deadLetter(UUID,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetter(UUID lockToken, TransactionContext transaction)
  nameWithType: SubscriptionClient.deadLetter(UUID lockToken, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter(UUID lockToken, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 309
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void deadLetter(UUID lockToken, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID)
  id: deadLetterAsync(UUID)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetterAsync(UUID lockToken)
  nameWithType: SubscriptionClient.deadLetterAsync(UUID lockToken)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID lockToken)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 344
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken)
    parameters:
    - id: lockToken
      type: add9545a
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,Map<String, Object>)
  id: deadLetterAsync(UUID,Map<String, Object>)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)
  nameWithType: SubscriptionClient.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 354
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)
    parameters:
    - id: lockToken
      type: add9545a
    - id: propertiesToModify
      type: e7b06046
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,Map<String, Object>,TransactionContext)
  id: deadLetterAsync(UUID,Map<String, Object>,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: SubscriptionClient.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 359
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: propertiesToModify
      type: e7b06046
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,String,String)
  id: deadLetterAsync(UUID,String,String)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  nameWithType: SubscriptionClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 364
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
    parameters:
    - id: lockToken
      type: add9545a
    - id: deadLetterReason
      type: "26831127"
    - id: deadLetterErrorDescription
      type: "26831127"
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,String,String,Map<String, Object>)
  id: deadLetterAsync(UUID,String,String,Map<String, Object>)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  nameWithType: SubscriptionClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 374
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
    parameters:
    - id: lockToken
      type: add9545a
    - id: deadLetterReason
      type: "26831127"
    - id: deadLetterErrorDescription
      type: "26831127"
    - id: propertiesToModify
      type: e7b06046
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,String,String,Map<String, Object>,TransactionContext)
  id: deadLetterAsync(UUID,String,String,Map<String, Object>,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: SubscriptionClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 379
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: deadLetterReason
      type: "26831127"
    - id: deadLetterErrorDescription
      type: "26831127"
    - id: propertiesToModify
      type: e7b06046
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,String,String,TransactionContext)
  id: deadLetterAsync(UUID,String,String,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  nameWithType: SubscriptionClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 369
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: deadLetterReason
      type: "26831127"
    - id: deadLetterErrorDescription
      type: "26831127"
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID,TransactionContext)
  id: deadLetterAsync(UUID,TransactionContext)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: deadLetterAsync(UUID lockToken, TransactionContext transaction)
  nameWithType: SubscriptionClient.deadLetterAsync(UUID lockToken, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync(UUID lockToken, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 349
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: add9545a
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.DEFAULT_RULE_NAME
  id: DEFAULT_RULE_NAME
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: DEFAULT_RULE_NAME
  nameWithType: SubscriptionClient.DEFAULT_RULE_NAME
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.DEFAULT_RULE_NAME
  type: Field
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 38
  package: com.microsoft.azure.servicebus
  syntax:
    content: public static final String DEFAULT_RULE_NAME= "$Default"
    return:
      type: 3d93591e
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getEntityPath()
  id: getEntityPath()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: getEntityPath()
  nameWithType: SubscriptionClient.getEntityPath()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getEntityPath()
  overload: com.microsoft.azure.servicebus.SubscriptionClient.getEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 100
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the path of the entity this client is sending messages to or receiving messages from.</p>\r\n<p></p>"
  syntax:
    content: public String getEntityPath()
    return:
      type: "26831127"
      description: <p>path of the entity this client is connecting to </p>
  overridden: com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getPrefetchCount()
  id: getPrefetchCount()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: getPrefetchCount()
  nameWithType: SubscriptionClient.getPrefetchCount()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getPrefetchCount()
  overload: com.microsoft.azure.servicebus.SubscriptionClient.getPrefetchCount*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 384
  package: com.microsoft.azure.servicebus
  syntax:
    content: public int getPrefetchCount()
    return:
      type: f75371fa
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getReceiveMode()
  id: getReceiveMode()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: getReceiveMode()
  nameWithType: SubscriptionClient.getReceiveMode()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getReceiveMode()
  overload: com.microsoft.azure.servicebus.SubscriptionClient.getReceiveMode*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 95
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode\"></xref> of the current receiver</p>\r\n<p></p>"
  syntax:
    content: public ReceiveMode getReceiveMode()
    return:
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>The receive mode. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getRules()
  id: getRules()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: getRules()
  nameWithType: SubscriptionClient.getRules()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getRules()
  overload: com.microsoft.azure.servicebus.SubscriptionClient.getRules*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 135
  package: com.microsoft.azure.servicebus
  summary: "<p>Get all rules associated with the subscription.</p>\r\n<p></p>"
  syntax:
    content: public Collection<RuleDescription> getRules()
    return:
      type: 12ebb11acom.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
      description: <p>The collection fo the rules. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if get rules failed </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getRulesAsync()
  id: getRulesAsync()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: getRulesAsync()
  nameWithType: SubscriptionClient.getRulesAsync()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getRulesAsync()
  overload: com.microsoft.azure.servicebus.SubscriptionClient.getRulesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 140
  package: com.microsoft.azure.servicebus
  summary: "<p>Get all rules associated with the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Collection<RuleDescription>> getRulesAsync()
    return:
      type: 9161dfdccom.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
      description: <p>a CompletableFuture representing the pending get rules operation. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getSubscriptionName()
  id: getSubscriptionName()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: getSubscriptionName()
  nameWithType: SubscriptionClient.getSubscriptionName()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getSubscriptionName()
  overload: com.microsoft.azure.servicebus.SubscriptionClient.getSubscriptionName*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 401
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the subscription name. </p>"
  syntax:
    content: public String getSubscriptionName()
    return:
      type: "26831127"
      description: <p>The subscription name. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getTopicName()
  id: getTopicName()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: getTopicName()
  nameWithType: SubscriptionClient.getTopicName()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getTopicName()
  overload: com.microsoft.azure.servicebus.SubscriptionClient.getTopicName*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 394
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the name of the topic, for this subscription.</p>\r\n<p></p>"
  syntax:
    content: public String getTopicName()
    return:
      type: "26831127"
      description: <p>the name of the topic </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
- uid: com.microsoft.azure.servicebus.SubscriptionClient.onClose()
  id: onClose()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: onClose()
  nameWithType: SubscriptionClient.onClose()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.onClose()
  overload: com.microsoft.azure.servicebus.SubscriptionClient.onClose*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 199
  package: com.microsoft.azure.servicebus
  syntax:
    content: protected CompletableFuture<Void> onClose()
    return:
      type: db03ee24
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler)
  id: registerMessageHandler(IMessageHandler)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: registerMessageHandler(IMessageHandler handler)
  nameWithType: SubscriptionClient.registerMessageHandler(IMessageHandler handler)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler handler)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 150
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void registerMessageHandler(IMessageHandler handler)
    parameters:
    - id: handler
      type: com.microsoft.azure.servicebus.IMessageHandler
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler,ExecutorService)
  id: registerMessageHandler(IMessageHandler,ExecutorService)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: registerMessageHandler(IMessageHandler handler, ExecutorService executorService)
  nameWithType: SubscriptionClient.registerMessageHandler(IMessageHandler handler, ExecutorService executorService)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler handler, ExecutorService executorService)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 173
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void registerMessageHandler(IMessageHandler handler, ExecutorService executorService)
    parameters:
    - id: handler
      type: com.microsoft.azure.servicebus.IMessageHandler
    - id: executorService
      type: ddc463eb
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler,MessageHandlerOptions)
  id: registerMessageHandler(IMessageHandler,MessageHandlerOptions)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)
  nameWithType: SubscriptionClient.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 156
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)
    parameters:
    - id: handler
      type: com.microsoft.azure.servicebus.IMessageHandler
    - id: handlerOptions
      type: com.microsoft.azure.servicebus.MessageHandlerOptions
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler,MessageHandlerOptions,ExecutorService)
  id: registerMessageHandler(IMessageHandler,MessageHandlerOptions,ExecutorService)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)
  nameWithType: SubscriptionClient.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 178
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)
    parameters:
    - id: handler
      type: com.microsoft.azure.servicebus.IMessageHandler
    - id: handlerOptions
      type: com.microsoft.azure.servicebus.MessageHandlerOptions
    - id: executorService
      type: ddc463eb
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler)
  id: registerSessionHandler(ISessionHandler)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: registerSessionHandler(ISessionHandler handler)
  nameWithType: SubscriptionClient.registerSessionHandler(ISessionHandler handler)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler handler)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 162
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void registerSessionHandler(ISessionHandler handler)
    parameters:
    - id: handler
      type: com.microsoft.azure.servicebus.ISessionHandler
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler,ExecutorService)
  id: registerSessionHandler(ISessionHandler,ExecutorService)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: registerSessionHandler(ISessionHandler handler, ExecutorService executorService)
  nameWithType: SubscriptionClient.registerSessionHandler(ISessionHandler handler, ExecutorService executorService)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler handler, ExecutorService executorService)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 183
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void registerSessionHandler(ISessionHandler handler, ExecutorService executorService)
    parameters:
    - id: handler
      type: com.microsoft.azure.servicebus.ISessionHandler
    - id: executorService
      type: ddc463eb
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler,SessionHandlerOptions)
  id: registerSessionHandler(ISessionHandler,SessionHandlerOptions)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)
  nameWithType: SubscriptionClient.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 168
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)
    parameters:
    - id: handler
      type: com.microsoft.azure.servicebus.ISessionHandler
    - id: handlerOptions
      type: com.microsoft.azure.servicebus.SessionHandlerOptions
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler,SessionHandlerOptions,ExecutorService)
  id: registerSessionHandler(ISessionHandler,SessionHandlerOptions,ExecutorService)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)
  nameWithType: SubscriptionClient.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 188
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)
    parameters:
    - id: handler
      type: com.microsoft.azure.servicebus.ISessionHandler
    - id: handlerOptions
      type: com.microsoft.azure.servicebus.SessionHandlerOptions
    - id: executorService
      type: ddc463eb
- uid: com.microsoft.azure.servicebus.SubscriptionClient.removeRule(String)
  id: removeRule(String)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: removeRule(String ruleName)
  nameWithType: SubscriptionClient.removeRule(String ruleName)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.removeRule(String ruleName)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.removeRule*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 125
  package: com.microsoft.azure.servicebus
  summary: "<p>Removes the rule on the subscription identified by ruleName</p>\r\n<p></p>"
  syntax:
    content: public void removeRule(String ruleName)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The name of rule. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(String)
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if remove rule failed </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.removeRuleAsync(String)
  id: removeRuleAsync(String)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: removeRuleAsync(String ruleName)
  nameWithType: SubscriptionClient.removeRuleAsync(String ruleName)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.removeRuleAsync(String ruleName)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.removeRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 130
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously removes the rule on the subscription identified by ruleName</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> removeRuleAsync(String ruleName)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>he name of rule. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule remove operation. </p>
  overridden: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(String)
- uid: com.microsoft.azure.servicebus.SubscriptionClient.setPrefetchCount(int)
  id: setPrefetchCount(int)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: setPrefetchCount(int prefetchCount)
  nameWithType: SubscriptionClient.setPrefetchCount(int prefetchCount)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.setPrefetchCount(int prefetchCount)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.setPrefetchCount*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 389
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void setPrefetchCount(int prefetchCount)
    parameters:
    - id: prefetchCount
      type: f75371fa
- uid: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(ConnectionStringBuilder,ReceiveMode)
  id: SubscriptionClient(ConnectionStringBuilder,ReceiveMode)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: SubscriptionClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  nameWithType: SubscriptionClient.SubscriptionClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 47
  package: com.microsoft.azure.servicebus
  syntax:
    content: public SubscriptionClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
- uid: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(String,String,ClientSettings,ReceiveMode)
  id: SubscriptionClient(String,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: SubscriptionClient(String namespace, String subscriptionPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: SubscriptionClient.SubscriptionClient(String namespace, String subscriptionPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(String namespace, String subscriptionPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 58
  package: com.microsoft.azure.servicebus
  syntax:
    content: public SubscriptionClient(String namespace, String subscriptionPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespace
      type: "26831127"
    - id: subscriptionPath
      type: "26831127"
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
- uid: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(URI,String,ClientSettings,ReceiveMode)
  id: SubscriptionClient(URI,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  langs:
  - java
  name: SubscriptionClient(URI namespaceEndpointURI, String subscriptionPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: SubscriptionClient.SubscriptionClient(URI namespaceEndpointURI, String subscriptionPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient(URI namespaceEndpointURI, String subscriptionPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/SubscriptionClient.java
    startLine: 63
  package: com.microsoft.azure.servicebus
  syntax:
    content: public SubscriptionClient(URI namespaceEndpointURI, String subscriptionPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
    - id: subscriptionPath
      type: "26831127"
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient*
  name: SubscriptionClient
  nameWithType: SubscriptionClient.SubscriptionClient
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.SubscriptionClient
  package: com.microsoft.azure.servicebus
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getReceiveMode*
  name: getReceiveMode
  nameWithType: SubscriptionClient.getReceiveMode
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getReceiveMode
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getEntityPath*
  name: getEntityPath
  nameWithType: SubscriptionClient.getEntityPath
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getEntityPath
  package: com.microsoft.azure.servicebus
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: 73fec9fb
  spec.java:
  - name: ServiceBusException
    fullName: ServiceBusException
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRule*
  name: addRule
  nameWithType: SubscriptionClient.addRule
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRule
  package: com.microsoft.azure.servicebus
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync*
  name: addRuleAsync
  nameWithType: SubscriptionClient.addRuleAsync
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.removeRule*
  name: removeRule
  nameWithType: SubscriptionClient.removeRule
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.removeRule
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.removeRuleAsync*
  name: removeRuleAsync
  nameWithType: SubscriptionClient.removeRuleAsync
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.removeRuleAsync
  package: com.microsoft.azure.servicebus
- uid: 12ebb11acom.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
  spec.java:
  - name: Collection<
    fullName: Collection<
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
    href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getRules*
  name: getRules
  nameWithType: SubscriptionClient.getRules
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getRules
  package: com.microsoft.azure.servicebus
- uid: 9161dfdccom.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
  spec.java:
  - name: CompletableFuture<Collection<
    fullName: CompletableFuture<Collection<
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
    href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getRulesAsync*
  name: getRulesAsync
  nameWithType: SubscriptionClient.getRulesAsync
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getRulesAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler*
  name: registerMessageHandler
  nameWithType: SubscriptionClient.registerMessageHandler
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerMessageHandler
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler*
  name: registerSessionHandler
  nameWithType: SubscriptionClient.registerSessionHandler
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.registerSessionHandler
  package: com.microsoft.azure.servicebus
- uid: ddc463eb
  spec.java:
  - name: ExecutorService
    fullName: ExecutorService
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandon*
  name: abandon
  nameWithType: SubscriptionClient.abandon
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandon
  package: com.microsoft.azure.servicebus
- uid: e7b06046
  spec.java:
  - name: Map<String, Object>
    fullName: Map<String, Object>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync*
  name: abandonAsync
  nameWithType: SubscriptionClient.abandonAsync
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.abandonAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.complete*
  name: complete
  nameWithType: SubscriptionClient.complete
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.complete
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.completeAsync*
  name: completeAsync
  nameWithType: SubscriptionClient.completeAsync
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.completeAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter*
  name: deadLetter
  nameWithType: SubscriptionClient.deadLetter
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetter
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync*
  name: deadLetterAsync
  nameWithType: SubscriptionClient.deadLetterAsync
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.deadLetterAsync
  package: com.microsoft.azure.servicebus
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getPrefetchCount*
  name: getPrefetchCount
  nameWithType: SubscriptionClient.getPrefetchCount
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getPrefetchCount
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.setPrefetchCount*
  name: setPrefetchCount
  nameWithType: SubscriptionClient.setPrefetchCount
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.setPrefetchCount
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getTopicName*
  name: getTopicName
  nameWithType: SubscriptionClient.getTopicName
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getTopicName
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getSubscriptionName*
  name: getSubscriptionName
  nameWithType: SubscriptionClient.getSubscriptionName
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getSubscriptionName
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SubscriptionClient.onClose*
  name: onClose
  nameWithType: SubscriptionClient.onClose
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.onClose
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String)
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: ClientEntity(final String clientId)
  nameWithType: ClientEntity.ClientEntity(final String clientId)
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String clientId)
  type: Constructor
  syntax:
    content: protected ClientEntity(final String clientId)
    parameters:
    - id: clientId
      type: 3d93591e
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.close()
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: close()
  nameWithType: ClientEntity.close()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.close()
  type: Method
  syntax:
    content: public final void close()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus.ICloseable.close()
  parent: com.microsoft.azure.servicebus.ICloseable
  href: com.microsoft.azure.servicebus.ICloseable.yml
  name: close()
  nameWithType: ICloseable.close()
  fullName: com.microsoft.azure.servicebus.ICloseable.close()
  type: Method
  summary: "<p>Synchronously closes and disposes any resources associated with this object. Calling this method is equivalent of calling . This method blocks until this object is closed. </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: closeAsync()
  nameWithType: ClientEntity.closeAsync()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
  type: Method
  syntax:
    content: public final CompletableFuture<Void> closeAsync()
    return:
      type: fc984e6f
- uid: com.microsoft.azure.servicebus.ICloseable.closeAsync()
  parent: com.microsoft.azure.servicebus.ICloseable
  href: com.microsoft.azure.servicebus.ICloseable.yml
  name: closeAsync()
  nameWithType: ICloseable.closeAsync()
  fullName: com.microsoft.azure.servicebus.ICloseable.closeAsync()
  type: Method
  summary: "<p>Closes and disposes any resources associated with this object. An object cannot be used after it is closed. This is an asynchronous method that returns a CompletableFuture immediately. This object is completely closed when the returned CompletableFuture is completed. </p>"
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the closing of this object. </p>
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: finalize()
  nameWithType: ClientEntity.finalize()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
  type: Method
  syntax:
    content: protected void finalize()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: getClientId()
  nameWithType: ClientEntity.getClientId()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
  type: Method
  syntax:
    content: public String getClientId()
    return:
      type: "26831127"
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: getIsClosed()
  nameWithType: ClientEntity.getIsClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
  type: Method
  syntax:
    content: protected boolean getIsClosed()
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: getIsClosingOrClosed()
  nameWithType: ClientEntity.getIsClosingOrClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
  type: Method
  syntax:
    content: protected boolean getIsClosingOrClosed()
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.servicebus.InitializableEntity.InitializableEntity(String)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: setClosed()
  nameWithType: ClientEntity.setClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
  type: Method
  syntax:
    content: protected final void setClosed()
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable)
  parent: com.microsoft.azure.servicebus.primitives.ClientEntity
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: throwIfClosed(Throwable cause)
  nameWithType: ClientEntity.throwIfClosed(Throwable cause)
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable cause)
  type: Method
  syntax:
    content: protected final void throwIfClosed(Throwable cause)
    parameters:
    - id: cause
      type: a04fafd7
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.servicebus.ISubscriptionClient
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: ISubscriptionClient
  nameWithType: ISubscriptionClient
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient
  type: Interface
  summary: "<p>SubscriptionClient can be used for all basic interactions with a Service Bus Subscription. </p>"
  syntax:
    content: public interface ISubscriptionClient extends IMessageEntityClient
- uid: com.microsoft.azure.servicebus.ReceiveMode
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.ReceiveMode.yml
  name: ReceiveMode
  nameWithType: ReceiveMode
  fullName: com.microsoft.azure.servicebus.ReceiveMode
  type: Enum
  summary: "<p>Enumeration to represent the two receive modes Azure Service Bus supports.</p>\r\n<p></p>"
  syntax:
    content: public enum ReceiveMode
- uid: com.microsoft.azure.servicebus.primitives.MessagingFactory
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessagingFactory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
  type: Class
  summary: "<p>Abstracts all AMQP related details and encapsulates an AMQP connection and manages its life cycle. Each instance of this class represent one AMQP connection to the namespace. If an application creates multiple senders, receivers or clients using the same MessagingFactory instance, all those senders, receivers or clients will share the same connection to the namespace. </p>"
  syntax:
    content: public class MessagingFactory extends ClientEntity
- uid: com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler.yml
  name: MiscRequestResponseOperationHandler
  nameWithType: MiscRequestResponseOperationHandler
  fullName: com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler
  type: Class
  syntax:
    content: public class MiscRequestResponseOperationHandler extends ClientEntity
- uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  type: Class
  summary: "<p>This class can be used to construct a connection string which can establish communication with ServiceBus entities. It can also be used to perform basic validation on an existing connection string. </p>\r\n<p>Sample Code: <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(\r\n                                             \"ServiceBusNamespaceName\", \r\n                                             \"ServiceBusEntityName\", // QueueName or TopicName or SubscriptionPath\r\n                                             \"SharedAccessSignatureKeyName\", \r\n                                             \"SharedAccessSignatureKey\");\r\n     \r\n    String connectionString = connectionStringBuilder.toString();\r\n    </code></pre></p>\r\n<p>A connection string is basically a string consisted of key-value pair separated by \";\". Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <ul><li><p>Endpoint - URL that points to the servicebus namespace </p></li><li><p>EntityPath - Path to the service bus entity (queue/topic/subscription/). For queues and topics, it is just the entity name. For subscriptions, path is &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p></li><li><p>SharedAccessKeyName - Key name to the corresponding shared access policy rule for the namespace, or entity. </p></li><li><p>SharedAccessKey - Key value for the corresponding shared access policy rule of the namespace or entity. </p></li><li><p>SharedAccessSignatureToken - Instead of a key name and key value, clients can provide an already generated SAS Token. </p></li><li><p>OperationTimeout - Default timeout to be used for all senders, receiver and clients created from this connection string. </p></li><li><p>RetryPolicy - Name of the retry policy. </p></li></ul></p>"
  syntax:
    content: public class ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ServiceBusException.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
  type: Class
  summary: "<p>This is the base exception that service bus will generate for all error cases. </p>"
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.servicebus.ClientSettings
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.ClientSettings.yml
  name: ClientSettings
  nameWithType: ClientSettings
  fullName: com.microsoft.azure.servicebus.ClientSettings
  type: Class
  summary: "<p>Class encapsulating common client level settings like TokenProvider, RetryPolicy, OperationTimeout. </p>"
  syntax:
    content: public class ClientSettings
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: getReceiveMode()
  nameWithType: ISubscriptionClient.getReceiveMode()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
  type: Method
  summary: "<p>Gets the <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode\"></xref> of the current receiver</p>\r\n<p></p>"
  syntax:
    content: public ReceiveMode getReceiveMode()
    return:
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>The receive mode. </p>
- uid: com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
  parent: com.microsoft.azure.servicebus.IMessageEntityClient
  href: com.microsoft.azure.servicebus.IMessageEntityClient.yml
  name: getEntityPath()
  nameWithType: IMessageEntityClient.getEntityPath()
  fullName: com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
  type: Method
  summary: "<p>Gets the path of the entity this client is sending messages to or receiving messages from.</p>\r\n<p></p>"
  syntax:
    content: public String getEntityPath()
    return:
      type: "26831127"
      description: <p>path of the entity this client is connecting to </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(RuleDescription)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: addRule(RuleDescription ruleDescription)
  nameWithType: ISubscriptionClient.addRule(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(RuleDescription ruleDescription)
  type: Method
  summary: "<p>Adds a rule to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public void addRule(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>The rule description that provides the rule to add. </p>
- uid: com.microsoft.azure.servicebus.rules.RuleDescription
  parent: com.microsoft.azure.servicebus.rules
  href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  name: RuleDescription
  nameWithType: RuleDescription
  fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  type: Class
  summary: "<p>Representation of a rule defined on service bus topics.</p>\r\n<p></p>"
  syntax:
    content: public class RuleDescription
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(RuleDescription)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: addRuleAsync(RuleDescription ruleDescription)
  nameWithType: ISubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  type: Method
  summary: "<p>Asynchronously adds a rule to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> addRuleAsync(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>The rule description that provides the rule to add. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule add operation. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(String,Filter)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: addRule(String ruleName, Filter filter)
  nameWithType: ISubscriptionClient.addRule(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(String ruleName, Filter filter)
  type: Method
  summary: "<p>Adds a rule with specified name and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public void addRule(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The rule name </p>
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Filter"></xref> to add. </p>
- uid: com.microsoft.azure.servicebus.rules.Filter
  parent: com.microsoft.azure.servicebus.rules
  href: com.microsoft.azure.servicebus.rules.Filter.yml
  name: Filter
  nameWithType: Filter
  fullName: com.microsoft.azure.servicebus.rules.Filter
  type: Class
  summary: "<p>Represents a filter expression that is evaluated against a message on a topic. This client library provides support for creating only limited types of filters. This is an empty interface to serve as root interface for all supported filter types.</p>\r\n<p></p>"
  syntax:
    content: public class Filter
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(String,Filter)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: addRuleAsync(String ruleName, Filter filter)
  nameWithType: ISubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  type: Method
  summary: "<p>Asynchronously adds a rule with specified name and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> addRuleAsync(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The rule name </p>
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Filter"></xref> to add. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule add operation. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(String)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: removeRule(String ruleName)
  nameWithType: ISubscriptionClient.removeRule(String ruleName)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(String ruleName)
  type: Method
  summary: "<p>Removes the rule on the subscription identified by ruleName</p>\r\n<p></p>"
  syntax:
    content: public void removeRule(String ruleName)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The name of rule. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(String)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: removeRuleAsync(String ruleName)
  nameWithType: ISubscriptionClient.removeRuleAsync(String ruleName)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(String ruleName)
  type: Method
  summary: "<p>Asynchronously removes the rule on the subscription identified by ruleName</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> removeRuleAsync(String ruleName)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>he name of rule. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule remove operation. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: getRules()
  nameWithType: ISubscriptionClient.getRules()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  type: Method
  summary: "<p>Get all rules associated with the subscription.</p>\r\n<p></p>"
  syntax:
    content: public Collection<RuleDescription> getRules()
    return:
      type: 12ebb11acom.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
      description: <p>The collection fo the rules. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: getRulesAsync()
  nameWithType: ISubscriptionClient.getRulesAsync()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
  type: Method
  summary: "<p>Get all rules associated with the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Collection<RuleDescription>> getRulesAsync()
    return:
      type: 9161dfdccom.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
      description: <p>a CompletableFuture representing the pending get rules operation. </p>
- uid: com.microsoft.azure.servicebus.IMessageHandler
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.IMessageHandler.yml
  name: IMessageHandler
  nameWithType: IMessageHandler
  fullName: com.microsoft.azure.servicebus.IMessageHandler
  type: Interface
  summary: "<p>Defines the contract for registering the callback <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueClient#registerMessageHandler(IMessageHandler)\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionClient#registerMessageHandler(IMessageHandler)\"></xref> for <xref uid=\"com.microsoft.azure.servicebus.QueueClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueClient\"></xref> and <xref uid=\"com.microsoft.azure.servicebus.SubscriptionClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionClient\"></xref>. </p>"
  syntax:
    content: public interface IMessageHandler
- uid: com.microsoft.azure.servicebus.MessageHandlerOptions
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.MessageHandlerOptions.yml
  name: MessageHandlerOptions
  nameWithType: MessageHandlerOptions
  fullName: com.microsoft.azure.servicebus.MessageHandlerOptions
  type: Class
  summary: "<p>The OnMessage handler processing options. </p>"
  syntax:
    content: public class MessageHandlerOptions
- uid: com.microsoft.azure.servicebus.ISessionHandler
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.ISessionHandler.yml
  name: ISessionHandler
  nameWithType: ISessionHandler
  fullName: com.microsoft.azure.servicebus.ISessionHandler
  type: Interface
  summary: "<p>Defines the contract for registering the session message processing callback <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueClient#registerSessionHandler(ISessionHandler)\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionClient#registerSessionHandler(ISessionHandler)\"></xref> for <xref uid=\"com.microsoft.azure.servicebus.QueueClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueClient\"></xref> and <xref uid=\"com.microsoft.azure.servicebus.SubscriptionClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionClient\"></xref>. </p>"
  syntax:
    content: public interface ISessionHandler
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.SessionHandlerOptions.yml
  name: SessionHandlerOptions
  nameWithType: SessionHandlerOptions
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions
  type: Class
  summary: "<p>The OnSession handler processing options. </p>"
  syntax:
    content: public class SessionHandlerOptions
- uid: com.microsoft.azure.servicebus.TransactionContext
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.TransactionContext.yml
  name: TransactionContext
  nameWithType: TransactionContext
  fullName: com.microsoft.azure.servicebus.TransactionContext
  type: Class
  summary: "<p>Represents an active servicebus transaction. A transaction is initiated by calling <xref uid=\"com.microsoft.azure.servicebus.primitives.MessagingFactory.startTransactionAsync()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MessagingFactory#startTransactionAsync()\"></xref>. A transaction can result in commit or rollback. To commit, call <xref uid=\"com.microsoft.azure.servicebus.primitives.MessagingFactory.endTransactionAsync(TransactionContext,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MessagingFactory#endTransactionAsync(TransactionContext, boolean)\"></xref> with  To rollback, call <xref uid=\"com.microsoft.azure.servicebus.primitives.MessagingFactory.endTransactionAsync(TransactionContext,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MessagingFactory#endTransactionAsync(TransactionContext, boolean)\"></xref> with </p>"
  syntax:
    content: public class TransactionContext
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: getTopicName()
  nameWithType: ISubscriptionClient.getTopicName()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
  type: Method
  summary: "<p>Gets the name of the topic, for this subscription.</p>\r\n<p></p>"
  syntax:
    content: public String getTopicName()
    return:
      type: "26831127"
      description: <p>the name of the topic </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  name: getSubscriptionName()
  nameWithType: ISubscriptionClient.getSubscriptionName()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
  type: Method
  summary: "<p>Gets the subscription name. </p>"
  syntax:
    content: public String getSubscriptionName()
    return:
      type: "26831127"
      description: <p>The subscription name. </p>
- uid: com.microsoft.azure.servicebus.IMessageSession
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.IMessageSession.yml
  name: IMessageSession
  nameWithType: IMessageSession
  fullName: com.microsoft.azure.servicebus.IMessageSession
  type: Interface
  summary: "<p>Describes a Session object. IMessageSession can be used to perform operations on sessions. </p>\r\n<p>Service Bus Sessions, also called 'Groups' in the AMQP 1.0 protocol, are unbounded sequences of related messages. ServiceBus guarantees ordering of messages in a session. </p>\r\n<p>Any sender can create a session when submitting messages into a Topic or Queue by setting the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#sessionId\"></xref> property on Message to some application defined unique identifier. At the AMQP 1.0 protocol level, this value maps to the group-id property. </p>\r\n<p>Sessions come into existence when there is at least one message with the session's SessionId in the Queue or Topic subscription. Once a Session exists, there is no defined moment or gesture for when the session expires or disappears. </p>"
  syntax:
    content: public interface IMessageSession extends IMessageReceiver
