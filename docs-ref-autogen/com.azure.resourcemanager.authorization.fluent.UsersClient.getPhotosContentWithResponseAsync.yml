### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.UsersClient.getPhotosContentWithResponseAsync*"
fullName: "com.azure.resourcemanager.authorization.fluent.UsersClient.getPhotosContentWithResponseAsync"
name: "getPhotosContentWithResponseAsync"
nameWithType: "UsersClient.getPhotosContentWithResponseAsync"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.UsersClient.getPhotosContentWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.UsersClient.getPhotosContentWithResponseAsync(String userId, String profilePhotoId)"
  name: "getPhotosContentWithResponseAsync(String userId, String profilePhotoId)"
  nameWithType: "UsersClient.getPhotosContentWithResponseAsync(String userId, String profilePhotoId)"
  summary: "Get media content for the navigation property photos from users."
  parameters:
  - description: "key: id of user."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<StreamResponse> getPhotosContentWithResponseAsync(String userId, String profilePhotoId)"
  returns:
    description: "media content for the navigation property photos from users."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.4.0
