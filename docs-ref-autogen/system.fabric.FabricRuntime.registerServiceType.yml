### YamlMime:JavaMember
nameWithType: FabricRuntime.registerServiceType
type: method
members:
- fullName: system.fabric.FabricRuntime.registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)
  name: registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)
  nameWithType: FabricRuntime.registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)
  parameters:
  - description: <p>The type name of the service type (as a string). This should match the type of the service group type as specified in the manifests and/or the CreateService command. </p>
    name: serviceTypeName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The qualified service Type that implements the specified serviceTypeName. </p>
    name: serviceTypeImplementation
    type: <xref href="Class%3C%3F%3E?alt=Class<?>&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Associates the specified serviceTypeName with the actual managed Type that implements it.</p>

    <p>

      <b>Remarks:</b>Note that this mechanism for service type registration does not require a custom <xref uid="system.fabric.StatelessServiceFactory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> or <xref uid="system.fabric.StatefulServiceFactory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> to be provided at registration time. Service Fabric will generate one at runtime and utilize it automatically. If there is a need for a custom implementation of the factory, you can implement <xref uid="system.fabric.StatelessServiceFactory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> or <xref uid="system.fabric.StatefulServiceFactory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> and then provide those via the corresponding factory registration methods ( <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime#registerStatelessServiceFactoryAsync(java.lang.String, system.fabric.StatelessServiceFactory, java.time.Duration)</xref> or <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime#registerStatefulServiceFactoryAsync(java.lang.String, system.fabric.StatefulServiceFactory, java.time.Duration)</xref> ) </p>
  syntax: public void registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)
  uid: system.fabric.FabricRuntime.registerServiceType(String,Class<?>)
uid: system.fabric.FabricRuntime.registerServiceType*
fullName: system.fabric.FabricRuntime.registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)
name: registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)
package: system.fabric
metadata: {}
