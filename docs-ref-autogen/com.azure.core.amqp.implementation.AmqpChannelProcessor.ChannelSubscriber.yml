### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber"
  id: "ChannelSubscriber"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.cancel()"
  - "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onComplete()"
  - "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onError(java.lang.Throwable)"
  - "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onNext(T)"
  langs:
  - "java"
  name: "AmqpChannelProcessor.ChannelSubscriber<T>"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  summary: "Represents a subscriber, waiting for an AMQP connection."
  syntax:
    content: "private static final class AmqpChannelProcessor.ChannelSubscriber<T> extends Operators.MonoSubscriber<T,T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  - "reactor.core.publisher.Operators.MonoSubscriber"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "reactor.core.publisher.Operators.MonoSubscriber.actual()"
  - "reactor.core.publisher.Operators.MonoSubscriber.cancel()"
  - "reactor.core.publisher.Operators.MonoSubscriber.clear()"
  - "reactor.core.publisher.Operators.MonoSubscriber.complete(O)"
  - "reactor.core.publisher.Operators.MonoSubscriber.discard(O)"
  - "reactor.core.publisher.Operators.MonoSubscriber.isCancelled()"
  - "reactor.core.publisher.Operators.MonoSubscriber.isEmpty()"
  - "reactor.core.publisher.Operators.MonoSubscriber.onComplete()"
  - "reactor.core.publisher.Operators.MonoSubscriber.onError(java.lang.Throwable)"
  - "reactor.core.publisher.Operators.MonoSubscriber.onNext(I)"
  - "reactor.core.publisher.Operators.MonoSubscriber.onSubscribe(org.reactivestreams.Subscription)"
  - "reactor.core.publisher.Operators.MonoSubscriber.poll()"
  - "reactor.core.publisher.Operators.MonoSubscriber.request(long)"
  - "reactor.core.publisher.Operators.MonoSubscriber.requestFusion(int)"
  - "reactor.core.publisher.Operators.MonoSubscriber.scanUnsafe(reactor.core.Scannable.Attr)"
  - "reactor.core.publisher.Operators.MonoSubscriber.setValue(O)"
  - "reactor.core.publisher.Operators.MonoSubscriber.size()"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.ChannelSubscriber(reactor.core.CoreSubscriber<? super T>,com.azure.core.amqp.implementation.AmqpChannelProcessor<T>)"
  id: "ChannelSubscriber(reactor.core.CoreSubscriber<? super T>,com.azure.core.amqp.implementation.AmqpChannelProcessor<T>)"
  parent: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber"
  langs:
  - "java"
  name: "ChannelSubscriber(CoreSubscriber<? super T> actual, AmqpChannelProcessor<T> processor)"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.ChannelSubscriber(CoreSubscriber<? super T> actual, AmqpChannelProcessor<T> processor)"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.ChannelSubscriber(CoreSubscriber<? super T> actual, AmqpChannelProcessor<T> processor)"
  overload: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.ChannelSubscriber*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "private ChannelSubscriber(CoreSubscriber<? super T> actual, AmqpChannelProcessor<T> processor)"
    parameters:
    - id: "actual"
      type: "reactor.core.CoreSubscriber<? super T>"
    - id: "processor"
      type: "com.azure.core.amqp.implementation.AmqpChannelProcessor<T>"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.cancel()"
  id: "cancel()"
  parent: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber"
  langs:
  - "java"
  name: "cancel()"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.cancel()"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.cancel()"
  overload: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.cancel*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void cancel()"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onComplete()"
  id: "onComplete()"
  parent: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber"
  langs:
  - "java"
  name: "onComplete()"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.onComplete()"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.onComplete()"
  overload: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onComplete*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void onComplete()"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onError(java.lang.Throwable)"
  id: "onError(java.lang.Throwable)"
  parent: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber"
  langs:
  - "java"
  name: "onError(Throwable throwable)"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.onError(Throwable throwable)"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.onError(Throwable throwable)"
  overload: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onError*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void onError(Throwable throwable)"
    parameters:
    - id: "throwable"
      type: "java.lang.Throwable"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onNext(T)"
  id: "onNext(T)"
  parent: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber"
  langs:
  - "java"
  name: "onNext(T channel)"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.onNext(T channel)"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.onNext(T channel)"
  overload: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onNext*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void onNext(T channel)"
    parameters:
    - id: "channel"
      type: "T"
references:
- uid: "reactor.core.CoreSubscriber<? super T>"
  spec.java:
  - uid: "reactor.core.CoreSubscriber"
    name: "CoreSubscriber"
    fullName: "reactor.core.CoreSubscriber"
  - name: "<"
    fullName: "<"
  - uid: "? super T"
    name: "? super T"
    fullName: "? super T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor<T>"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor"
    name: "AmqpChannelProcessor"
    fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.ChannelSubscriber*"
  name: "ChannelSubscriber"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.ChannelSubscriber"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.ChannelSubscriber"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.cancel*"
  name: "cancel"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.cancel"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.cancel"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onComplete*"
  name: "onComplete"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.onComplete"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.onComplete"
  package: "com.azure.core.amqp.implementation"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onNext*"
  name: "onNext"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.onNext"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.onNext"
  package: "com.azure.core.amqp.implementation"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber.onError*"
  name: "onError"
  nameWithType: "AmqpChannelProcessor.ChannelSubscriber<T>.onError"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor.ChannelSubscriber<T>.onError"
  package: "com.azure.core.amqp.implementation"
- uid: "reactor.core.publisher.Operators.MonoSubscriber<T,T>"
  name: "Operators.MonoSubscriber<T,T>"
  nameWithType: "Operators.MonoSubscriber<T,T>"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber<T,T>"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.request(long)"
  name: "Operators.MonoSubscriber.request(long)"
  nameWithType: "Operators.MonoSubscriber.request(long)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.request(long)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.cancel()"
  name: "Operators.MonoSubscriber.cancel()"
  nameWithType: "Operators.MonoSubscriber.cancel()"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.cancel()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.setValue(O)"
  name: "Operators.MonoSubscriber.setValue(O)"
  nameWithType: "Operators.MonoSubscriber.setValue(O)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.setValue(O)"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.onNext(I)"
  name: "Operators.MonoSubscriber.onNext(I)"
  nameWithType: "Operators.MonoSubscriber.onNext(I)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.onNext(I)"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.onError(java.lang.Throwable)"
  name: "Operators.MonoSubscriber.onError(Throwable)"
  nameWithType: "Operators.MonoSubscriber.onError(Throwable)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.onError(java.lang.Throwable)"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.isCancelled()"
  name: "Operators.MonoSubscriber.isCancelled()"
  nameWithType: "Operators.MonoSubscriber.isCancelled()"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.isCancelled()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.actual()"
  name: "Operators.MonoSubscriber.actual()"
  nameWithType: "Operators.MonoSubscriber.actual()"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.actual()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.discard(O)"
  name: "Operators.MonoSubscriber.discard(O)"
  nameWithType: "Operators.MonoSubscriber.discard(O)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.discard(O)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.onSubscribe(org.reactivestreams.Subscription)"
  name: "Operators.MonoSubscriber.onSubscribe(Subscription)"
  nameWithType: "Operators.MonoSubscriber.onSubscribe(Subscription)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.onSubscribe(org.reactivestreams.Subscription)"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.scanUnsafe(reactor.core.Scannable.Attr)"
  name: "Operators.MonoSubscriber.scanUnsafe(Scannable.Attr)"
  nameWithType: "Operators.MonoSubscriber.scanUnsafe(Scannable.Attr)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.scanUnsafe(reactor.core.Scannable.Attr)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.requestFusion(int)"
  name: "Operators.MonoSubscriber.requestFusion(int)"
  nameWithType: "Operators.MonoSubscriber.requestFusion(int)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.requestFusion(int)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.size()"
  name: "Operators.MonoSubscriber.size()"
  nameWithType: "Operators.MonoSubscriber.size()"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.size()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.poll()"
  name: "Operators.MonoSubscriber.poll()"
  nameWithType: "Operators.MonoSubscriber.poll()"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.poll()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.isEmpty()"
  name: "Operators.MonoSubscriber.isEmpty()"
  nameWithType: "Operators.MonoSubscriber.isEmpty()"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.isEmpty()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.complete(O)"
  name: "Operators.MonoSubscriber.complete(O)"
  nameWithType: "Operators.MonoSubscriber.complete(O)"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.complete(O)"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.onComplete()"
  name: "Operators.MonoSubscriber.onComplete()"
  nameWithType: "Operators.MonoSubscriber.onComplete()"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.onComplete()"
- uid: "reactor.core.publisher.Operators.MonoSubscriber.clear()"
  name: "Operators.MonoSubscriber.clear()"
  nameWithType: "Operators.MonoSubscriber.clear()"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber.clear()"
- uid: "reactor.core.CoreSubscriber"
  name: "CoreSubscriber"
  nameWithType: "CoreSubscriber"
  fullName: "reactor.core.CoreSubscriber"
- uid: "? super T"
  name: "? super T"
  nameWithType: "? super T"
  fullName: "? super T"
- uid: "com.azure.core.amqp.implementation.AmqpChannelProcessor"
  name: "AmqpChannelProcessor"
  nameWithType: "AmqpChannelProcessor"
  fullName: "com.azure.core.amqp.implementation.AmqpChannelProcessor"
- uid: "T,T"
  name: "T,T"
  nameWithType: "T,T"
  fullName: "T,T"
- uid: "reactor.core.publisher.Operators.MonoSubscriber"
  name: "Operators.MonoSubscriber"
  nameWithType: "Operators.MonoSubscriber"
  fullName: "reactor.core.publisher.Operators.MonoSubscriber"
