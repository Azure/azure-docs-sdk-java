### YamlMime:JavaMember
nameWithType: SpeechConfig.fromHost
type: method
members:
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI host)
  name: fromHost(java.net.URI host)
  nameWithType: SpeechConfig.fromHost(java.net.URI host)
  parameters:
  - description: <p>The service host to connect to. Format is "protocol://host:port" where ":port" is optional. </p>
    name: host
    type: <xref href="java.net.URI?alt=java.net.URI&text=java.net.URI" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of the speech config with specified host. This method is intended only for users who use a non-default service host. Standard resource path will be assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead. Note: Query parameters are not allowed in the host URI and must be set by other APIs. Note: If the host requires a subscription key for authentication, use fromHost(java.net.URI, String) to pass the subscription key as parameter. To use an authorization token with fromHost, use this method to create a SpeechConfig instance, and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.8.0. </p>'
  syntax: public static SpeechConfig fromHost(java.net.URI host)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI host, String subscriptionKey)
  name: fromHost(java.net.URI host, String subscriptionKey)
  nameWithType: SpeechConfig.fromHost(java.net.URI host, String subscriptionKey)
  parameters:
  - description: <p>The service host to connect to. Format is "protocol://host:port" where ":port" is optional. </p>
    name: host
    type: <xref href="java.net.URI?alt=java.net.URI&text=java.net.URI" data-throw-if-not-resolved="False"/>
  - description: <p>The subscription key. </p>
    name: subscriptionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of the speech config with specified host and subscription key. This method is intended only for users who use a non-default service host. Standard resource path will be assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead. Note: Query parameters are not allowed in the host URI and must be set by other APIs. Note: To use an authorization token with fromHost, use fromHost(java.net.URI), and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.8.0. </p>'
  syntax: public static SpeechConfig fromHost(java.net.URI host, String subscriptionKey)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI,String)
uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost*
fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI host)
name: fromHost(java.net.URI host)
package: com.microsoft.cognitiveservices.speech
metadata: {}
