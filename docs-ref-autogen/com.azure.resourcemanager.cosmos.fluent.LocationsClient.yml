### YamlMime:JavaType
uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient"
fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient"
name: "LocationsClient"
nameWithType: "LocationsClient"
summary: "An instance of this class provides access to all the operations defined in Locations<wbr>Client."
syntax: "public interface LocationsClient"
methods:
- uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.get(String location)"
  name: "get(String location)"
  nameWithType: "LocationsClient.get(String location)"
  summary: "Get the properties of an existing Cosmos DB location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Cosmos DB region, with spaces between words and each word capitalized."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract LocationGetResultInner get(String location)"
  desc: "Get the properties of an existing Cosmos DB location."
  returns:
    description: "the properties of an existing Cosmos DB location."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner?alt=com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner&text=LocationGetResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getAsync(String location)"
  name: "getAsync(String location)"
  nameWithType: "LocationsClient.getAsync(String location)"
  summary: "Get the properties of an existing Cosmos DB location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Cosmos DB region, with spaces between words and each word capitalized."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<LocationGetResultInner> getAsync(String location)"
  desc: "Get the properties of an existing Cosmos DB location."
  returns:
    description: "the properties of an existing Cosmos DB location on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner?alt=com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner&text=LocationGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getWithResponse(String location, Context context)"
  name: "getWithResponse(String location, Context context)"
  nameWithType: "LocationsClient.getWithResponse(String location, Context context)"
  summary: "Get the properties of an existing Cosmos DB location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Cosmos DB region, with spaces between words and each word capitalized."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<LocationGetResultInner> getWithResponse(String location, Context context)"
  desc: "Get the properties of an existing Cosmos DB location."
  returns:
    description: "the properties of an existing Cosmos DB location along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner?alt=com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner&text=LocationGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getWithResponseAsync(String location)"
  name: "getWithResponseAsync(String location)"
  nameWithType: "LocationsClient.getWithResponseAsync(String location)"
  summary: "Get the properties of an existing Cosmos DB location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Cosmos DB region, with spaces between words and each word capitalized."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<LocationGetResultInner>> getWithResponseAsync(String location)"
  desc: "Get the properties of an existing Cosmos DB location."
  returns:
    description: "the properties of an existing Cosmos DB location along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n     <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner?alt=com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner&text=LocationGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.list()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.list()"
  name: "list()"
  nameWithType: "LocationsClient.list()"
  summary: "List Cosmos DB locations and their properties."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<LocationGetResultInner> list()"
  desc: "List Cosmos DB locations and their properties."
  returns:
    description: "the List operation response, that contains Cosmos DB locations and their properties as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner?alt=com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner&text=LocationGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "LocationsClient.list(Context context)"
  summary: "List Cosmos DB locations and their properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<LocationGetResultInner> list(Context context)"
  desc: "List Cosmos DB locations and their properties."
  returns:
    description: "the List operation response, that contains Cosmos DB locations and their properties as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner?alt=com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner&text=LocationGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.listAsync()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.listAsync()"
  name: "listAsync()"
  nameWithType: "LocationsClient.listAsync()"
  summary: "List Cosmos DB locations and their properties."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<LocationGetResultInner> listAsync()"
  desc: "List Cosmos DB locations and their properties."
  returns:
    description: "the List operation response, that contains Cosmos DB locations and their properties as paginated response\n     with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner?alt=com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner&text=LocationGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in LocationsClient."
metadata: {}
package: "com.azure.resourcemanager.cosmos.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.19.0
