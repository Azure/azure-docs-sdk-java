### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options
  id: _event_processor_options
  parent: com.microsoft.azure.eventprocessorhost
  children:
  - com.microsoft.azure.eventprocessorhost._event_processor_options.EventProcessorOptions()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getDefaultOptions()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getInitialOffsetProvider()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getInvokeProcessorAfterReceiveTimeout()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getMaxBatchSize()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getPrefetchCount()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiverRuntimeMetricEnabled()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiveTimeOut()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setInitialOffsetProvider(Function<String, Object>)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setInvokeProcessorAfterReceiveTimeout(Boolean)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setMaxBatchSize(int)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setPrefetchCount(int)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiverRuntimeMetricEnabled(boolean)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiveTimeOut(Duration)
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 13
  package: com.microsoft.azure.eventprocessorhost
  syntax: &o1
    content: public class EventProcessorOptions
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.EventProcessorOptions()
  id: EventProcessorOptions()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: EventProcessorOptions()
  nameWithType: EventProcessorOptions.EventProcessorOptions()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.EventProcessorOptions*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 43
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public EventProcessorOptions()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getDefaultOptions()
  id: getDefaultOptions()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getDefaultOptions()
  nameWithType: EventProcessorOptions.getDefaultOptions()
  fullName: static EventProcessorOptions com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.getDefaultOptions*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 38
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public static EventProcessorOptions getDefaultOptions()
    return:
      type: com.microsoft.azure.eventprocessorhost._event_processor_options
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getInitialOffsetProvider()
  id: getInitialOffsetProvider()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getInitialOffsetProvider()
  nameWithType: EventProcessorOptions.getInitialOffsetProvider()
  fullName: Function<String, Object> com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialOffsetProvider()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.getInitialOffsetProvider*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 130
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public Function<String, Object> getInitialOffsetProvider()
    return:
      type: 852bded3
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getInvokeProcessorAfterReceiveTimeout()
  id: getInvokeProcessorAfterReceiveTimeout()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getInvokeProcessorAfterReceiveTimeout()
  nameWithType: EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout()
  fullName: Boolean com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.getInvokeProcessorAfterReceiveTimeout*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 185
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public Boolean getInvokeProcessorAfterReceiveTimeout()
    return:
      type: 866c2227
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getMaxBatchSize()
  id: getMaxBatchSize()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getMaxBatchSize()
  nameWithType: EventProcessorOptions.getMaxBatchSize()
  fullName: int com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.getMaxBatchSize*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 67
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Returns the maximum number of events that will be passed to one call to <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">IEventProcessor.onEvents</xref></p>

    <p></p>
  syntax:
    content: public int getMaxBatchSize()
    return:
      type: f75371fa
      description: <p>the maximum maximum number of events that will be passed to one call to <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">IEventProcessor.onEvents</xref></p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getPrefetchCount()
  id: getPrefetchCount()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getPrefetchCount()
  nameWithType: EventProcessorOptions.getPrefetchCount()
  fullName: int com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.getPrefetchCount*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 107
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public int getPrefetchCount()
    return:
      type: f75371fa
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiverRuntimeMetricEnabled()
  id: getReceiverRuntimeMetricEnabled()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getReceiverRuntimeMetricEnabled()
  nameWithType: EventProcessorOptions.getReceiverRuntimeMetricEnabled()
  fullName: boolean com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiverRuntimeMetricEnabled*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 211
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Knob to enable/disable runtime metric of the receiver. If this is set to true, the first parameter <xref uid="" data-throw-if-not-resolved="false">com.microsoft.azure.eventprocessorhost.PartitionContext#runtimeInformation</xref> of <xref uid="" data-throw-if-not-resolved="false">IEventProcessor#onEvents(com.microsoft.azure.eventprocessorhost.PartitionContext, java.lang.Iterable)</xref> will be populated. </p>

    <p>Enabling this knob will add 3 additional properties to all raw AMQP messages received. </p>
  syntax:
    content: public boolean getReceiverRuntimeMetricEnabled()
    return:
      type: 4fc6e284
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">boolean</xref> indicating, whether, the runtime metric of the receiver was enabled </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiveTimeOut()
  id: getReceiveTimeOut()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getReceiveTimeOut()
  nameWithType: EventProcessorOptions.getReceiveTimeOut()
  fullName: Duration com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiveTimeOut*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 87
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Returns the timeout for receive operations.</p>

    <p></p>
  syntax:
    content: public Duration getReceiveTimeOut()
    return:
      type: e02a2de0
      description: <p>the timeout for receive operations </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  id: setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
  nameWithType: EventProcessorOptions.setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.setExceptionNotification*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 57
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Sets a handler which receives notification of general exceptions.</p>

    <p>Exceptions which occur while processing events from a particular Event Hub partition are delivered to the onError method of the event processor for that partition. This handler is called on occasions when there is no event processor associated with the throwing activity, or the event processor could not be created.</p>

    <p></p>
  syntax:
    content: public void setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
    parameters:
    - id: notificationHandler
      type: e0918e98com.microsoft.azure.eventprocessorhost._exception_received_event_argsa08ddfce
      description: <p>Handler which is called when an exception occurs. Set to null to stop handling. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setInitialOffsetProvider(Function<String, Object>)
  id: setInitialOffsetProvider(Function<String, Object>)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setInitialOffsetProvider(Function<String, Object> initialOffsetProvider)
  nameWithType: EventProcessorOptions.setInitialOffsetProvider(Function<String, Object> initialOffsetProvider)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialOffsetProvider(Function<String, Object> initialOffsetProvider)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.setInitialOffsetProvider*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 144
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public void setInitialOffsetProvider(Function<String, Object> initialOffsetProvider)
    parameters:
    - id: initialOffsetProvider
      type: 852bded3
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setInvokeProcessorAfterReceiveTimeout(Boolean)
  id: setInvokeProcessorAfterReceiveTimeout(Boolean)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
  nameWithType: EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.setInvokeProcessorAfterReceiveTimeout*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 198
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Changes whether the <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> will call <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">IEventProcessor.onEvents()</xref> with an empty iterable when a receive timeout occurs (true) or not (false).</p>

    <p>The default is false (no call).</p>

    <p></p>
  syntax:
    content: public void setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
    parameters:
    - id: invokeProcessorAfterReceiveTimeout
      type: 866c2227
      description: <p>the new value for what to do </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setMaxBatchSize(int)
  id: setMaxBatchSize(int)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setMaxBatchSize(int maxBatchSize)
  nameWithType: EventProcessorOptions.setMaxBatchSize(int maxBatchSize)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize(int maxBatchSize)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.setMaxBatchSize*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 77
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Sets the maximum number of events that will be passed to one call to <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">IEventProcessor.onEvents</xref></p>

    <p></p>
  syntax:
    content: public void setMaxBatchSize(int maxBatchSize)
    parameters:
    - id: maxBatchSize
      type: f75371fa
      description: <p>the maximum number of events that will be passed to one call to <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">IEventProcessor.onEvents</xref></p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setPrefetchCount(int)
  id: setPrefetchCount(int)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setPrefetchCount(int prefetchCount)
  nameWithType: EventProcessorOptions.setPrefetchCount(int prefetchCount)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount(int prefetchCount)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.setPrefetchCount*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 119
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public void setPrefetchCount(int prefetchCount)
    parameters:
    - id: prefetchCount
      type: f75371fa
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiverRuntimeMetricEnabled(boolean)
  id: setReceiverRuntimeMetricEnabled(boolean)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setReceiverRuntimeMetricEnabled(boolean value)
  nameWithType: EventProcessorOptions.setReceiverRuntimeMetricEnabled(boolean value)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled(boolean value)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiverRuntimeMetricEnabled*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 224
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Knob to enable/disable runtime metric of the receiver. If this is set to true, the first parameter <xref uid="" data-throw-if-not-resolved="false">com.microsoft.azure.eventprocessorhost.PartitionContext#runtimeInformation</xref> of <xref uid="" data-throw-if-not-resolved="false">IEventProcessor#onEvents(com.microsoft.azure.eventprocessorhost.PartitionContext, java.lang.Iterable)</xref> will be populated. </p>

    <p>Enabling this knob will add 3 additional properties to all raw AMQP messages received. </p>
  syntax:
    content: public void setReceiverRuntimeMetricEnabled(boolean value)
    parameters:
    - id: value
      type: 4fc6e284
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">boolean</xref> to indicate, whether, the runtime metric of the receiver should be enabled </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiveTimeOut(Duration)
  id: setReceiveTimeOut(Duration)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setReceiveTimeOut(Duration receiveTimeOut)
  nameWithType: EventProcessorOptions.setReceiveTimeOut(Duration receiveTimeOut)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut(Duration receiveTimeOut)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiveTimeOut*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 97
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Sets the timeout for receive operations.</p>

    <p></p>
  syntax:
    content: public void setReceiveTimeOut(Duration receiveTimeOut)
    parameters:
    - id: receiveTimeOut
      type: e02a2de0
      description: <p>new timeout for receive operations </p>
references:
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getDefaultOptions*
  name: getDefaultOptions
  nameWithType: EventProcessorOptions.getDefaultOptions
  fullName: static EventProcessorOptions com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.EventProcessorOptions*
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions.EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions
  package: com.microsoft.azure.eventprocessorhost
- uid: e0918e98com.microsoft.azure.eventprocessorhost._exception_received_event_argsa08ddfce
  spec.java:
  - name: Consumer<
    fullName: Consumer<
  - uid: com.microsoft.azure.eventprocessorhost._exception_received_event_args
    name: ExceptionReceivedEventArgs
    fullName: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
    href: com.microsoft.azure.eventprocessorhost._exception_received_event_args.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setExceptionNotification*
  name: setExceptionNotification
  nameWithType: EventProcessorOptions.setExceptionNotification
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification
  package: com.microsoft.azure.eventprocessorhost
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getMaxBatchSize*
  name: getMaxBatchSize
  nameWithType: EventProcessorOptions.getMaxBatchSize
  fullName: int com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setMaxBatchSize*
  name: setMaxBatchSize
  nameWithType: EventProcessorOptions.setMaxBatchSize
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize
  package: com.microsoft.azure.eventprocessorhost
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiveTimeOut*
  name: getReceiveTimeOut
  nameWithType: EventProcessorOptions.getReceiveTimeOut
  fullName: Duration com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiveTimeOut*
  name: setReceiveTimeOut
  nameWithType: EventProcessorOptions.setReceiveTimeOut
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getPrefetchCount*
  name: getPrefetchCount
  nameWithType: EventProcessorOptions.getPrefetchCount
  fullName: int com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setPrefetchCount*
  name: setPrefetchCount
  nameWithType: EventProcessorOptions.setPrefetchCount
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount
  package: com.microsoft.azure.eventprocessorhost
- uid: 852bded3
  spec.java:
  - name: Function<String, Object>
    fullName: Function<String, Object>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getInitialOffsetProvider*
  name: getInitialOffsetProvider
  nameWithType: EventProcessorOptions.getInitialOffsetProvider
  fullName: Function<String, Object> com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialOffsetProvider
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setInitialOffsetProvider*
  name: setInitialOffsetProvider
  nameWithType: EventProcessorOptions.setInitialOffsetProvider
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialOffsetProvider
  package: com.microsoft.azure.eventprocessorhost
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getInvokeProcessorAfterReceiveTimeout*
  name: getInvokeProcessorAfterReceiveTimeout
  nameWithType: EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout
  fullName: Boolean com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setInvokeProcessorAfterReceiveTimeout*
  name: setInvokeProcessorAfterReceiveTimeout
  nameWithType: EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout
  package: com.microsoft.azure.eventprocessorhost
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiverRuntimeMetricEnabled*
  name: getReceiverRuntimeMetricEnabled
  nameWithType: EventProcessorOptions.getReceiverRuntimeMetricEnabled
  fullName: boolean com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiverRuntimeMetricEnabled*
  name: setReceiverRuntimeMetricEnabled
  nameWithType: EventProcessorOptions.setReceiverRuntimeMetricEnabled
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._exception_received_event_args
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._exception_received_event_args.yml
  name: ExceptionReceivedEventArgs
  nameWithType: ExceptionReceivedEventArgs
  fullName: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
  type: Class
  summary: <p>Passed as an argument to the general exception handler that can be set via <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_options" data-throw-if-not-resolved="false">EventProcessorOptions</xref>. </p>
  syntax:
    content: public class ExceptionReceivedEventArgs
- uid: com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: START_OF_STREAM
  nameWithType: PartitionReceiver.START_OF_STREAM
  fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.START_OF_STREAM
  type: Field
  summary: <p>This is a constant defined to represent the start of a partition stream in EventHub. </p>
  syntax:
    content: public static final String START_OF_STREAM= "-1"
    return:
      type: 3d93591e
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  type: Class
  syntax: *o1
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable<EventData>)
  parent: com.microsoft.azure.eventprocessorhost._i_event_processor
  href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
  name: onEvents(PartitionContext context, Iterable<EventData> messages)
  nameWithType: IEventProcessor.onEvents(PartitionContext context, Iterable<EventData> messages)
  fullName: void com.microsoft.azure.eventprocessorhost.IEventProcessor.onEvents(PartitionContext context, Iterable<EventData> messages)
  type: Method
  summary: >-
    <p>Called by the processor host when a batch of events has arrived.</p>

    <p>This is where the real work of the event processor is done. It is normally called when one or more events have arrived. If the <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> instance was set up with an <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_options" data-throw-if-not-resolved="false">EventProcessorOptions</xref> on which setInvokeProcessorAfterReceiveTimeout(true) has been called, then if a receive times out, it will be called with an empty iterable. By default this option is false and receive timeouts do not cause a call to this method.</p>

    <p></p>
  syntax:
    content: public void onEvents(PartitionContext context, Iterable<EventData> messages)
    parameters:
    - id: context
      type: com.microsoft.azure.eventprocessorhost._partition_context
      description: <p>Information about the partition. </p>
    - id: messages
      type: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
      description: <p>The events to be processed. May be empty. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  name: EventProcessorHost
  nameWithType: EventProcessorHost
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
  type: Class
  syntax:
    content: public class EventProcessorHost
