### YamlMime:JavaMember
nameWithType: Models.getPatternAnyEntityRoles
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getPatternAnyEntityRoles(UUID appId, String versionId, UUID entityId)
  name: getPatternAnyEntityRoles(UUID appId, String versionId, UUID entityId)
  nameWithType: Models.getPatternAnyEntityRoles(UUID appId, String versionId, UUID entityId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>entity Id. </p>
    name: entityId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;EntityRole&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityRole?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityRole&text=EntityRole" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get All Entity Roles for a given entity.</p>

    <p></p>
  syntax: public List<EntityRole> getPatternAnyEntityRoles(UUID appId, String versionId, UUID entityId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getPatternAnyEntityRoles(UUID,String,UUID)
uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getPatternAnyEntityRoles*
fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getPatternAnyEntityRoles(UUID appId, String versionId, UUID entityId)
name: getPatternAnyEntityRoles(UUID appId, String versionId, UUID entityId)
package: com.microsoft.azure.cognitiveservices.language.luis.authoring
metadata: {}
