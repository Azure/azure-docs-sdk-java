### YamlMime:JavaMember
uid: "com.azure.resourcemanager.cosmos.fluent.models.CassandraClusterPublicStatusInner.withConnectionErrors*"
fullName: "com.azure.resourcemanager.cosmos.fluent.models.CassandraClusterPublicStatusInner.withConnectionErrors"
name: "withConnectionErrors"
nameWithType: "CassandraClusterPublicStatusInner.withConnectionErrors"
members:
- uid: "com.azure.resourcemanager.cosmos.fluent.models.CassandraClusterPublicStatusInner.withConnectionErrors(java.util.List<com.azure.resourcemanager.cosmos.models.ConnectionError>)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.CassandraClusterPublicStatusInner.withConnectionErrors(List<ConnectionError> connectionErrors)"
  name: "withConnectionErrors(List<ConnectionError> connectionErrors)"
  nameWithType: "CassandraClusterPublicStatusInner.withConnectionErrors(List<ConnectionError> connectionErrors)"
  summary: "Set the connectionErrors property: List relevant information about any connection errors to the Datacenters."
  parameters:
  - description: "the connectionErrors value to set."
    name: "connectionErrors"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.models.ConnectionError?alt=com.azure.resourcemanager.cosmos.models.ConnectionError&text=ConnectionError\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CassandraClusterPublicStatusInner withConnectionErrors(List<ConnectionError> connectionErrors)"
  returns:
    description: "the CassandraClusterPublicStatusInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.CassandraClusterPublicStatusInner?alt=com.azure.resourcemanager.cosmos.fluent.models.CassandraClusterPublicStatusInner&text=CassandraClusterPublicStatusInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.cosmos.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.13.0
