### YamlMime:JavaType
uid: "com.microsoft.azure.management.keyvault.Permissions"
fullName: "com.microsoft.azure.management.keyvault.Permissions"
name: "Permissions"
nameWithType: "Permissions"
summary: "Permissions the identity has for keys, secrets, certificates and storage."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Permissions"
constructors:
- uid: "com.microsoft.azure.management.keyvault.Permissions.Permissions()"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.Permissions()"
  name: "Permissions()"
  nameWithType: "Permissions.Permissions()"
  syntax: "public Permissions()"
methods:
- uid: "com.microsoft.azure.management.keyvault.Permissions.certificates()"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.certificates()"
  name: "certificates()"
  nameWithType: "Permissions.certificates()"
  summary: "Get the certificates value."
  syntax: "public List<CertificatePermissions> certificates()"
  desc: "Get the certificates value."
  returns:
    description: "the certificates value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.CertificatePermissions?alt=com.microsoft.azure.management.keyvault.CertificatePermissions&text=CertificatePermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.Permissions.keys()"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.keys()"
  name: "keys()"
  nameWithType: "Permissions.keys()"
  summary: "Get the keys value."
  syntax: "public List<KeyPermissions> keys()"
  desc: "Get the keys value."
  returns:
    description: "the keys value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.KeyPermissions?alt=com.microsoft.azure.management.keyvault.KeyPermissions&text=KeyPermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.Permissions.secrets()"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.secrets()"
  name: "secrets()"
  nameWithType: "Permissions.secrets()"
  summary: "Get the secrets value."
  syntax: "public List<SecretPermissions> secrets()"
  desc: "Get the secrets value."
  returns:
    description: "the secrets value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.SecretPermissions?alt=com.microsoft.azure.management.keyvault.SecretPermissions&text=SecretPermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.Permissions.storage()"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.storage()"
  name: "storage()"
  nameWithType: "Permissions.storage()"
  summary: "Get the storage value."
  syntax: "public List<StoragePermissions> storage()"
  desc: "Get the storage value."
  returns:
    description: "the storage value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.StoragePermissions?alt=com.microsoft.azure.management.keyvault.StoragePermissions&text=StoragePermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.Permissions.withCertificates(java.util.List<com.microsoft.azure.management.keyvault.CertificatePermissions>)"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.withCertificates(List<CertificatePermissions> certificates)"
  name: "withCertificates(List<CertificatePermissions> certificates)"
  nameWithType: "Permissions.withCertificates(List<CertificatePermissions> certificates)"
  summary: "Set the certificates value."
  parameters:
  - description: "the certificates value to set"
    name: "certificates"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.CertificatePermissions?alt=com.microsoft.azure.management.keyvault.CertificatePermissions&text=CertificatePermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Permissions withCertificates(List<CertificatePermissions> certificates)"
  desc: "Set the certificates value."
  returns:
    description: "the Permissions object itself."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Permissions.withKeys(java.util.List<com.microsoft.azure.management.keyvault.KeyPermissions>)"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.withKeys(List<KeyPermissions> keys)"
  name: "withKeys(List<KeyPermissions> keys)"
  nameWithType: "Permissions.withKeys(List<KeyPermissions> keys)"
  summary: "Set the keys value."
  parameters:
  - description: "the keys value to set"
    name: "keys"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.KeyPermissions?alt=com.microsoft.azure.management.keyvault.KeyPermissions&text=KeyPermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Permissions withKeys(List<KeyPermissions> keys)"
  desc: "Set the keys value."
  returns:
    description: "the Permissions object itself."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Permissions.withSecrets(java.util.List<com.microsoft.azure.management.keyvault.SecretPermissions>)"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.withSecrets(List<SecretPermissions> secrets)"
  name: "withSecrets(List<SecretPermissions> secrets)"
  nameWithType: "Permissions.withSecrets(List<SecretPermissions> secrets)"
  summary: "Set the secrets value."
  parameters:
  - description: "the secrets value to set"
    name: "secrets"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.SecretPermissions?alt=com.microsoft.azure.management.keyvault.SecretPermissions&text=SecretPermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Permissions withSecrets(List<SecretPermissions> secrets)"
  desc: "Set the secrets value."
  returns:
    description: "the Permissions object itself."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Permissions.withStorage(java.util.List<com.microsoft.azure.management.keyvault.StoragePermissions>)"
  fullName: "com.microsoft.azure.management.keyvault.Permissions.withStorage(List<StoragePermissions> storage)"
  name: "withStorage(List<StoragePermissions> storage)"
  nameWithType: "Permissions.withStorage(List<StoragePermissions> storage)"
  summary: "Set the storage value."
  parameters:
  - description: "the storage value to set"
    name: "storage"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.StoragePermissions?alt=com.microsoft.azure.management.keyvault.StoragePermissions&text=StoragePermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Permissions withStorage(List<StoragePermissions> storage)"
  desc: "Set the storage value."
  returns:
    description: "the Permissions object itself."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Permissions the identity has for keys, secrets, certificates and storage."
metadata: {}
package: "com.microsoft.azure.management.keyvault"
artifact: com.microsoft.azure:azure-mgmt-keyvault:1.41.4
