### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.ContainerRegistry"
fullName: "com.microsoft.azure.batch.protocol.models.ContainerRegistry"
name: "ContainerRegistry"
nameWithType: "ContainerRegistry"
summary: "A private container registry."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ContainerRegistry"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.ContainerRegistry()"
  fullName: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.ContainerRegistry()"
  name: "ContainerRegistry()"
  nameWithType: "ContainerRegistry.ContainerRegistry()"
  syntax: "public ContainerRegistry()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.password()"
  fullName: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.password()"
  name: "password()"
  nameWithType: "ContainerRegistry.password()"
  summary: "Get the password value."
  syntax: "public String password()"
  desc: "Get the password value."
  returns:
    description: "the password value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.registryServer()"
  fullName: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.registryServer()"
  name: "registryServer()"
  nameWithType: "ContainerRegistry.registryServer()"
  summary: "Get if omitted, the default is \"docker.<wbr>io\"."
  syntax: "public String registryServer()"
  desc: "Get if omitted, the default is \"docker.io\"."
  returns:
    description: "the registryServer value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.userName()"
  fullName: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.userName()"
  name: "userName()"
  nameWithType: "ContainerRegistry.userName()"
  summary: "Get the user<wbr>Name value."
  syntax: "public String userName()"
  desc: "Get the userName value."
  returns:
    description: "the userName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.withPassword(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.withPassword(String password)"
  name: "withPassword(String password)"
  nameWithType: "ContainerRegistry.withPassword(String password)"
  summary: "Set the password value."
  parameters:
  - description: "the password value to set"
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistry withPassword(String password)"
  desc: "Set the password value."
  returns:
    description: "the ContainerRegistry object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ContainerRegistry?alt=com.microsoft.azure.batch.protocol.models.ContainerRegistry&text=ContainerRegistry\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.withRegistryServer(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.withRegistryServer(String registryServer)"
  name: "withRegistryServer(String registryServer)"
  nameWithType: "ContainerRegistry.withRegistryServer(String registryServer)"
  summary: "Set if omitted, the default is \"docker.<wbr>io\"."
  parameters:
  - description: "the registryServer value to set"
    name: "registryServer"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistry withRegistryServer(String registryServer)"
  desc: "Set if omitted, the default is \"docker.io\"."
  returns:
    description: "the ContainerRegistry object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ContainerRegistry?alt=com.microsoft.azure.batch.protocol.models.ContainerRegistry&text=ContainerRegistry\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.withUserName(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.ContainerRegistry.withUserName(String userName)"
  name: "withUserName(String userName)"
  nameWithType: "ContainerRegistry.withUserName(String userName)"
  summary: "Set the user<wbr>Name value."
  parameters:
  - description: "the userName value to set"
    name: "userName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistry withUserName(String userName)"
  desc: "Set the userName value."
  returns:
    description: "the ContainerRegistry object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ContainerRegistry?alt=com.microsoft.azure.batch.protocol.models.ContainerRegistry&text=ContainerRegistry\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A private container registry."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
