### YamlMime:JavaMember
uid: "com.azure.security.keyvault.secrets.SecretAsyncClient.backupSecret*"
fullName: "com.azure.security.keyvault.secrets.SecretAsyncClient.backupSecret"
name: "backupSecret"
nameWithType: "SecretAsyncClient.backupSecret"
members:
- uid: "com.azure.security.keyvault.secrets.SecretAsyncClient.backupSecret(java.lang.String)"
  fullName: "com.azure.security.keyvault.secrets.SecretAsyncClient.backupSecret(String name)"
  name: "backupSecret(String name)"
  nameWithType: "SecretAsyncClient.backupSecret(String name)"
  summary: "Requests a backup of the secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the `secrets/backup` permission.\n\n**Code sample**\n\nBacks up the secret from the key vault. Subscribes to the call asynchronously and prints out the length of the secret's backup byte array returned in the response.\n\n```java\nsecretAsyncClient.backupSecret(\"secretName\")\n     .subscribe(secretBackupResponse ->\n         System.out.printf(\"Secret's Backup Byte array's length %s%n\", secretBackupResponse.length));\n```"
  parameters:
  - description: "The name of the secret."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<byte[]> backupSecret(String name)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the backed up secret blob."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.secrets"
artifact: com.azure:azure-security-keyvault-secrets:4.2.4
