### YamlMime:ManagedReference
items:
- uid: system.fabric._observer
  id: _observer
  parent: system.fabric
  children:
  - system.fabric._observer.update(final Object,U)
  href: system.fabric._observer.yml
  langs:
  - java
  name: Observer<U>
  nameWithType: Observer<U>
  fullName: system.fabric.Observer<U>
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/Observer.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/Observer.java
    startLine: 6
  package: system.fabric
  summary: <p>A class can implement the <xref uid="system.fabric._observer" data-throw-if-not-resolved="false">Observer</xref> interface when it wants to be informed of changes in observable objects. </p>
  syntax: &o1
    content: public interface Observer<U>
    typeParameters:
    - type: 6043614c
      description: >-
        <p>

          <xref uid="system.fabric._observer" data-throw-if-not-resolved="false">Observer</xref> class template parameter. </p>
- uid: system.fabric._observer.update(final Object,U)
  id: update(final Object,U)
  parent: system.fabric._observer
  href: system.fabric._observer.yml
  langs:
  - java
  name: update(final Object sender, U arg)
  nameWithType: Observer<U>.update(final Object sender, U arg)
  fullName: void system.fabric.Observer<U>.update(final Object sender, U arg)
  overload: system.fabric._observer.update*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Observer.java
    startLine: 12
  package: system.fabric
  summary: <p>This method is called whenever the observed object is changed. </p>
  syntax:
    content: public void update(final Object sender, U arg)
    parameters:
    - id: sender
      type: 1b60ba29
      description: >-
        <p>

          <xref uid="system.fabric._observable" data-throw-if-not-resolved="false">Observable</xref> object. </p>
    - id: arg
      type: 6043614c
      description: <p>an argument passed to the <xref uid="" data-throw-if-not-resolved="false">system.fabric.Observable#notifyObservers(Object, Object)</xref> method. </p>
references:
- uid: 6043614c
  spec.java:
  - name: U
    fullName: U
- uid: 1b60ba29
  spec.java:
  - name: final Object
    fullName: final Object
- uid: system.fabric._observer.update*
  name: update
  nameWithType: Observer<U>.update
  fullName: void system.fabric.Observer<U>.update
  package: system.fabric
- uid: system.fabric._observable
  parent: system.fabric
  href: system.fabric._observable.yml
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: system.fabric.Observable<T>
  type: Class
  summary: <p>This class represents an observable object </p>
  syntax:
    content: public class Observable<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>Takes a template parameter T. </p>
- uid: system.fabric._observer
  parent: system.fabric
  href: system.fabric._observer.yml
  name: Observer<U>
  nameWithType: Observer<U>
  fullName: system.fabric.Observer<U>
  type: Interface
  summary: <p>A class can implement the <xref uid="system.fabric._observer" data-throw-if-not-resolved="false">Observer</xref> interface when it wants to be informed of changes in observable objects. </p>
  syntax: *o1
