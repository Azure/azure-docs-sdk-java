### YamlMime:JavaMember
nameWithType: ComputerVision.analyzeImageByDomain
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
  name: analyzeImageByDomain()
  nameWithType: ComputerVision.analyzeImageByDomain()
  returns:
    description: <p>the first stage of the analyzeImageByDomain call </p>
    type: <xref href="ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel?alt=ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel&text=ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax: public ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel analyzeImageByDomain()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  name: analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  parameters:
  - description: <p>The domain-specific content to recognize. </p>
    name: model
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Publicly reachable URL of an image. </p>
    name: url
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: analyzeImageByDomainOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter&text=AnalyzeImageByDomainOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ComputerVisionErrorException?alt=ComputerVisionErrorException&text=ComputerVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the DomainModelResults object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax: public DomainModelResults analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain*
fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain
name: analyzeImageByDomain()
package: com.microsoft.azure.cognitiveservices.vision.computervision
metadata: {}
