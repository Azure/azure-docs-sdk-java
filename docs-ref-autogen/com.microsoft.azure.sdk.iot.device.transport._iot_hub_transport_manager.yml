### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager
  id: _iot_hub_transport_manager
  parent: com.microsoft.azure.sdk.iot.device.transport
  children:
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.close()
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.open()
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.open(String [])
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.receive()
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.send(IotHubTransportMessage,Map<String, String>)
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.yml
  langs:
  - java
  name: IotHubTransportManager
  nameWithType: IotHubTransportManager
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager
  type: Interface
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportManager.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportManager.java
    startLine: 14
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>An interface for an simple and synchronous IoT Hub transport. </p>"
  syntax:
    content: public interface IotHubTransportManager
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.yml
  langs:
  - java
  name: close()
  nameWithType: IotHubTransportManager.close()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.close()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.close*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportManager.java
    startLine: 40
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Closes all resources used to communicate with an IoT Hub. Once<code>close()Â \r\n    </code> is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing.</p>\r\n<p></p>"
  syntax:
    content: public void close()
  exceptions:
  - type: cbf33bbe
    description: <p>if an error occurs in closing the transport. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.yml
  langs:
  - java
  name: open()
  nameWithType: IotHubTransportManager.open()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.open()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportManager.java
    startLine: 22
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing.</p>\r\n<p></p>"
  syntax:
    content: public void open()
  exceptions:
  - type: cbf33bbe
    description: <p>if a communication channel cannot be established. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.open(String [])
  id: open(String [])
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.yml
  langs:
  - java
  name: open(String[] topics)
  nameWithType: IotHubTransportManager.open(String[] topics)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.open(String[] topics)
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportManager.java
    startLine: 31
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Establishes a communication channel with an IoT Hub for a specific set of topics. If a channel is already open, the function shall do nothing.</p>\r\n<p></p>"
  syntax:
    content: public void open(String[] topics)
    parameters:
    - id: topics
      type: 1bb63ab0
      description: <p>is a list of topics to signed in. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if a communication channel cannot be established. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.receive()
  id: receive()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.yml
  langs:
  - java
  name: receive()
  nameWithType: IotHubTransportManager.receive()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.receive()
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.receive*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportManager.java
    startLine: 59
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Synchronously receive message from the IoT Hub.</p>\r\n<p></p>"
  syntax:
    content: public Message receive()
    return:
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the received message. If there is no new message, it will return null. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if an error occurs in receiving a message. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.send(IotHubTransportMessage,Map<String, String>)
  id: send(IotHubTransportMessage,Map<String, String>)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.yml
  langs:
  - java
  name: send(IotHubTransportMessage message, Map<String, String> additionalHeaders)
  nameWithType: IotHubTransportManager.send(IotHubTransportMessage message, Map<String, String> additionalHeaders)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.send(IotHubTransportMessage message, Map<String, String> additionalHeaders)
  overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.send*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportManager.java
    startLine: 51
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Synchronously send a message to the IoT Hub. And return the response with the status and message.</p>\r\n<p></p>"
  syntax:
    content: public ResponseMessage send(IotHubTransportMessage message, Map<String, String> additionalHeaders)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
      description: <p>is the message to send. </p>
    - id: additionalHeaders
      type: 689c8cb5
      description: <p>any extra headers to include </p>
    return:
      type: com.microsoft.azure.sdk.iot.device._response_message
      description: <p>the response from IoT Hub, including status and message. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if an error occurs in sending a message. </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.open*
  name: open
  nameWithType: IotHubTransportManager.open
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.open
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: 1bb63ab0
  spec.java:
  - name: String []
    fullName: String []
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.close*
  name: close
  nameWithType: IotHubTransportManager.close
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.close
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.send*
  name: send
  nameWithType: IotHubTransportManager.send
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.send
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_manager.receive*
  name: receive
  nameWithType: IotHubTransportManager.receive
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.receive
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.yml
  name: HttpsTransportManager
  nameWithType: HttpsTransportManager
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager
  type: Class
  summary: <p>Implementation of the transport manager for https. </p>
  syntax:
    content: public class HttpsTransportManager implements IotHubTransportManager
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.open()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.yml
  name: open()
  nameWithType: HttpsTransportManager.open()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.open()
  type: Method
  summary: <p>Opens the connection by creating a new instance of the HttpsIotHubConnection. </p>
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.open(String [])
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.yml
  name: open(String[] topics)
  nameWithType: HttpsTransportManager.open(String[] topics)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.open(String[] topics)
  type: Method
  summary: >-
    <p>Opens the connection by creating a new instance of the HttpsIotHubConnection. The provided topics have no effect for HTTPS protocol, and it is ignored.</p>

    <p></p>
  syntax:
    content: public void open(String[] topics)
    parameters:
    - id: topics
      type: 1bb63ab0
      description: <p>is a list of topics to signed in. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.close()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.yml
  name: close()
  nameWithType: HttpsTransportManager.close()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.close()
  type: Method
  summary: <p>Close the connection destroying the HttpsIotHubConnection instance. </p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.device._response_message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._response_message.yml
  name: ResponseMessage
  nameWithType: ResponseMessage
  fullName: com.microsoft.azure.sdk.iot.device.ResponseMessage
  type: Class
  summary: <p>Extend Message to support status response </p>
  syntax:
    content: public class ResponseMessage
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.send(IotHubTransportMessage,Map<String, String>)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.yml
  name: send(IotHubTransportMessage message, Map<String, String> additionalHeaders)
  nameWithType: HttpsTransportManager.send(IotHubTransportMessage message, Map<String, String> additionalHeaders)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.send(IotHubTransportMessage message, Map<String, String> additionalHeaders)
  type: Method
  summary: >-
    <p>This is a blocking send message. It send the provide message, wait for the IotHub answer, and return is in the ResponseMessage, which contains the status and the payload.</p>

    <p></p>
  syntax:
    content: public ResponseMessage send(IotHubTransportMessage message, Map<String, String> additionalHeaders)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
      description: <p>is the message to send. </p>
    - id: additionalHeaders
      type: 689c8cb5
    return:
      type: com.microsoft.azure.sdk.iot.device._response_message
      description: <p>the IotHub response with the status and payload. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message.yml
  name: IotHubTransportMessage
  nameWithType: IotHubTransportMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
  type: Class
  summary: <p>Extends Message, adding transport artifacts. </p>
  syntax:
    content: public class IotHubTransportMessage
- uid: com.microsoft.azure.sdk.iot.device._message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.receive()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.yml
  name: receive()
  nameWithType: HttpsTransportManager.receive()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.receive()
  type: Method
  summary: <p>Pull the IotHub looking for new message. </p>
  syntax:
    content: public Message receive()
    return:
      type: com.microsoft.azure.sdk.iot.device._message
      description: >-
        <p>New message from the IotHub. It can be<code>nullÂ 

            </code> is there is no new message to read. </p>
