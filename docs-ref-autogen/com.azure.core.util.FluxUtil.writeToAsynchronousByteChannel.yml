### YamlMime:JavaMember
uid: "com.azure.core.util.FluxUtil.writeToAsynchronousByteChannel*"
fullName: "com.azure.core.util.FluxUtil.writeToAsynchronousByteChannel"
name: "writeToAsynchronousByteChannel"
nameWithType: "FluxUtil.writeToAsynchronousByteChannel"
members:
- uid: "com.azure.core.util.FluxUtil.writeToAsynchronousByteChannel(reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.nio.channels.AsynchronousByteChannel)"
  fullName: "com.azure.core.util.FluxUtil.writeToAsynchronousByteChannel(Flux<ByteBuffer> content, AsynchronousByteChannel channel)"
  name: "writeToAsynchronousByteChannel(Flux<ByteBuffer> content, AsynchronousByteChannel channel)"
  nameWithType: "FluxUtil.writeToAsynchronousByteChannel(Flux<ByteBuffer> content, AsynchronousByteChannel channel)"
  summary: "Writes the <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffers\"></xref> emitted by a <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> of <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref> to an <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>.\n\nThe `channel` is not closed by this call, closing of the `channel` is managed by the caller.\n\nThe response <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will emit an error if `content` or `channel` are null."
  parameters:
  - description: "The <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> of <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref> content."
    name: "content"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
    name: "channel"
    type: "<xref href=\"java.nio.channels.AsynchronousByteChannel?alt=java.nio.channels.AsynchronousByteChannel&text=AsynchronousByteChannel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Mono<Void> writeToAsynchronousByteChannel(Flux<ByteBuffer> content, AsynchronousByteChannel channel)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> which emits a completion status once the <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> has been written to the <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.util"
artifact: com.azure:azure-core:1.31.0
