### YamlMime:JavaType
uid: "com.azure.storage.blob.BlobContainerClient"
fullName: "com.azure.storage.blob.BlobContainerClient"
name: "BlobContainerClient"
nameWithType: "BlobContainerClient"
summary: "Client to a container. It may only be instantiated through a <xref uid=\"com.azure.storage.blob.BlobContainerClientBuilder\" data-throw-if-not-resolved=\"false\">BlobContainerClientBuilder</xref> or via the method <xref uid=\"com.azure.storage.blob.BlobServiceClient.getBlobContainerClient(java.lang.String)\" data-throw-if-not-resolved=\"false\">BlobServiceClient#getBlobContainerClient(String)</xref>. This class does not hold any state about a particular container but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to blobs.\n\nThis client contains operations on a container. Operations on a blob are available on <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\">BlobClient</xref> through <xref uid=\"com.azure.storage.blob.BlobContainerClient.getBlobClient(java.lang.String)\" data-throw-if-not-resolved=\"false\">#getBlobClient(String)</xref>, and operations on the service are available on <xref uid=\"com.azure.storage.blob.BlobServiceClient\" data-throw-if-not-resolved=\"false\">BlobServiceClient</xref>.\n\nPlease refer to the [Azure Docs][] for more information on containers.\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BlobContainerClient"
fields:
- "com.azure.storage.blob.BlobContainerClient.LOG_CONTAINER_NAME"
- "com.azure.storage.blob.BlobContainerClient.ROOT_CONTAINER_NAME"
- "com.azure.storage.blob.BlobContainerClient.STATIC_WEBSITE_CONTAINER_NAME"
methods:
- "com.azure.storage.blob.BlobContainerClient.create()"
- "com.azure.storage.blob.BlobContainerClient.createWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.blob.BlobContainerClient.delete()"
- "com.azure.storage.blob.BlobContainerClient.deleteWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.blob.BlobContainerClient.exists()"
- "com.azure.storage.blob.BlobContainerClient.existsWithResponse(java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.blob.BlobContainerClient.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)"
- "com.azure.storage.blob.BlobContainerClient.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)"
- "com.azure.storage.blob.BlobContainerClient.getAccessPolicy()"
- "com.azure.storage.blob.BlobContainerClient.getAccessPolicyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.blob.BlobContainerClient.getAccountInfo(java.time.Duration)"
- "com.azure.storage.blob.BlobContainerClient.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.blob.BlobContainerClient.getAccountName()"
- "com.azure.storage.blob.BlobContainerClient.getBlobClient(java.lang.String)"
- "com.azure.storage.blob.BlobContainerClient.getBlobClient(java.lang.String,java.lang.String)"
- "com.azure.storage.blob.BlobContainerClient.getBlobContainerName()"
- "com.azure.storage.blob.BlobContainerClient.getBlobContainerUrl()"
- "com.azure.storage.blob.BlobContainerClient.getBlobVersionClient(java.lang.String,java.lang.String)"
- "com.azure.storage.blob.BlobContainerClient.getCustomerProvidedKey()"
- "com.azure.storage.blob.BlobContainerClient.getEncryptionScope()"
- "com.azure.storage.blob.BlobContainerClient.getHttpPipeline()"
- "com.azure.storage.blob.BlobContainerClient.getProperties()"
- "com.azure.storage.blob.BlobContainerClient.getPropertiesWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.blob.BlobContainerClient.getServiceVersion()"
- "com.azure.storage.blob.BlobContainerClient.listBlobs()"
- "com.azure.storage.blob.BlobContainerClient.listBlobs(com.azure.storage.blob.models.ListBlobsOptions,java.lang.String,java.time.Duration)"
- "com.azure.storage.blob.BlobContainerClient.listBlobs(com.azure.storage.blob.models.ListBlobsOptions,java.time.Duration)"
- "com.azure.storage.blob.BlobContainerClient.listBlobsByHierarchy(java.lang.String)"
- "com.azure.storage.blob.BlobContainerClient.listBlobsByHierarchy(java.lang.String,com.azure.storage.blob.models.ListBlobsOptions,java.time.Duration)"
- "com.azure.storage.blob.BlobContainerClient.setAccessPolicy(com.azure.storage.blob.models.PublicAccessType,java.util.List<com.azure.storage.blob.models.BlobSignedIdentifier>)"
- "com.azure.storage.blob.BlobContainerClient.setAccessPolicyWithResponse(com.azure.storage.blob.models.PublicAccessType,java.util.List<com.azure.storage.blob.models.BlobSignedIdentifier>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.blob.BlobContainerClient.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.storage.blob.BlobContainerClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
type: "class"
metadata: {}
package: "com.azure.storage.blob"
artifact: com.azure:azure-storage-blob:12.8.0
