### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  id: LoadBalancerFrontendIpConfigurationsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent
  children:
  - com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.listAsync(java.lang.String,java.lang.String)
  langs:
  - java
  name: LoadBalancerFrontendIpConfigurationsClient
  nameWithType: LoadBalancerFrontendIpConfigurationsClient
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  type: Interface
  package: com.azure.resourcemanager.network.fluent
  summary: An instance of this class provides access to all the operations defined in LoadBalancerFrontendIpConfigurationsClient.
  syntax:
    content: public interface LoadBalancerFrontendIpConfigurationsClient
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  langs:
  - java
  name: get(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.get(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.get(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  overload: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.get*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets load balancer frontend IP configuration.
  syntax:
    content: public abstract FrontendIpConfigurationInner get(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: loadBalancerName
      type: java.lang.String
      description: The name of the load balancer.
    - id: frontendIpConfigurationName
      type: java.lang.String
      description: The name of the frontend IP configuration.
    return:
      type: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
      description: load balancer frontend IP configuration.
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.getAsync(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getAsync(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  overload: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets load balancer frontend IP configuration.
  syntax:
    content: public abstract Mono<FrontendIpConfigurationInner> getAsync(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: loadBalancerName
      type: java.lang.String
      description: The name of the load balancer.
    - id: frontendIpConfigurationName
      type: java.lang.String
      description: The name of the frontend IP configuration.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
      description: load balancer frontend IP configuration.
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName, Context context)
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.getWithResponse(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponse(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName, Context context)
  overload: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets load balancer frontend IP configuration.
  syntax:
    content: public abstract Response<FrontendIpConfigurationInner> getWithResponse(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: loadBalancerName
      type: java.lang.String
      description: The name of the load balancer.
    - id: frontendIpConfigurationName
      type: java.lang.String
      description: The name of the frontend IP configuration.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
      description: load balancer frontend IP configuration.
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.getWithResponseAsync(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponseAsync(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
  overload: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets load balancer frontend IP configuration.
  syntax:
    content: public abstract Mono<Response<FrontendIpConfigurationInner>> getWithResponseAsync(String resourceGroupName, String loadBalancerName, String frontendIpConfigurationName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: loadBalancerName
      type: java.lang.String
      description: The name of the load balancer.
    - id: frontendIpConfigurationName
      type: java.lang.String
      description: The name of the frontend IP configuration.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>>
      description: load balancer frontend IP configuration.
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  langs:
  - java
  name: list(String resourceGroupName, String loadBalancerName)
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.list(String resourceGroupName, String loadBalancerName)
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list(String resourceGroupName, String loadBalancerName)
  overload: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the load balancer frontend IP configurations.
  syntax:
    content: public abstract PagedIterable<FrontendIpConfigurationInner> list(String resourceGroupName, String loadBalancerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: loadBalancerName
      type: java.lang.String
      description: The name of the load balancer.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
      description: all the load balancer frontend IP configurations.
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  langs:
  - java
  name: list(String resourceGroupName, String loadBalancerName, Context context)
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.list(String resourceGroupName, String loadBalancerName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list(String resourceGroupName, String loadBalancerName, Context context)
  overload: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the load balancer frontend IP configurations.
  syntax:
    content: public abstract PagedIterable<FrontendIpConfigurationInner> list(String resourceGroupName, String loadBalancerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: loadBalancerName
      type: java.lang.String
      description: The name of the load balancer.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
      description: all the load balancer frontend IP configurations.
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient
  langs:
  - java
  name: listAsync(String resourceGroupName, String loadBalancerName)
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.listAsync(String resourceGroupName, String loadBalancerName)
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.listAsync(String resourceGroupName, String loadBalancerName)
  overload: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the load balancer frontend IP configurations.
  syntax:
    content: public abstract PagedFlux<FrontendIpConfigurationInner> listAsync(String resourceGroupName, String loadBalancerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: loadBalancerName
      type: java.lang.String
      description: The name of the load balancer.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
      description: all the load balancer frontend IP configurations.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
    name: FrontendIpConfigurationInner
    fullName: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.listAsync*
  name: listAsync
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.listAsync
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.listAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
    name: FrontendIpConfigurationInner
    fullName: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list*
  name: list
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.list
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.list
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
    name: FrontendIpConfigurationInner
    fullName: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
    name: FrontendIpConfigurationInner
    fullName: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getAsync*
  name: getAsync
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.getAsync
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
  name: FrontendIpConfigurationInner
  nameWithType: FrontendIpConfigurationInner
  fullName: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.get*
  name: get
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.get
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.get
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
    name: FrontendIpConfigurationInner
    fullName: com.azure.resourcemanager.network.fluent.models.FrontendIpConfigurationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponse*
  name: getWithResponse
  nameWithType: LoadBalancerFrontendIpConfigurationsClient.getWithResponse
  fullName: com.azure.resourcemanager.network.fluent.LoadBalancerFrontendIpConfigurationsClient.getWithResponse
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
