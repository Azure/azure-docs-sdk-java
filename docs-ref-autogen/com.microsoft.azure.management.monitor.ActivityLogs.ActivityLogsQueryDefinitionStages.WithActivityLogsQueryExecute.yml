### YamlMime:JavaType
uid: "com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute"
fullName: "com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute"
name: "ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute"
nameWithType: "ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute"
summary: "The stage of the Activity log query execution."
syntax: "public static interface ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute"
methods:
- uid: "com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.execute()"
  fullName: "com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.execute()"
  name: "execute()"
  nameWithType: "ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.execute()"
  summary: "Executes the query."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedList<EventData> execute()"
  desc: "Executes the query."
  returns:
    description: "Activity Log events received after query execution."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.monitor.EventData?alt=com.microsoft.azure.management.monitor.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.executeAsync()"
  fullName: "com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.executeAsync()"
  name: "executeAsync()"
  nameWithType: "ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.executeAsync()"
  summary: "Executes the query."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<EventData> executeAsync()"
  desc: "Executes the query."
  returns:
    description: "a representation of the deferred computation of Activity Log query call."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.monitor.EventData?alt=com.microsoft.azure.management.monitor.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.filterAtTenantLevel()"
  fullName: "com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.filterAtTenantLevel()"
  name: "filterAtTenantLevel()"
  nameWithType: "ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute.filterAtTenantLevel()"
  summary: "Filters events that were generated at the Tenant level."
  modifiers:
  - "abstract"
  syntax: "public abstract ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute filterAtTenantLevel()"
  desc: "Filters events that were generated at the Tenant level."
  returns:
    description: "the stage of Activity log filtering by Tenant level and query execution."
    type: "<xref href=\"com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute?alt=com.microsoft.azure.management.monitor.ActivityLogs.ActivityLogsQueryDefinitionStages.WithActivityLogsQueryExecute&text=WithActivityLogsQueryExecute\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the Activity log query execution."
metadata: {}
package: "com.microsoft.azure.management.monitor"
artifact: com.microsoft.azure:azure-mgmt-monitor:1.41.4
