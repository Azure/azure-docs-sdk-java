### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.storage.fluent.TablesClient
  id: TablesClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent
  children:
  - com.azure.resourcemanager.storage.fluent.TablesClient.create(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.createAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.fluent.TablesClient.listAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.update(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.updateAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  langs:
  - java
  name: TablesClient
  nameWithType: TablesClient
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient
  type: Interface
  package: com.azure.resourcemanager.storage.fluent
  summary: An instance of this class provides access to all the operations defined in TablesClient.
  syntax:
    content: public interface TablesClient
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.create(java.lang.String,java.lang.String,java.lang.String)
  id: create(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: create(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.create(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.create(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.create*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Creates a new table with the specified table name, under the specified account.
  syntax:
    content: public abstract TableInner create(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.TableInner
      description: properties of the table, including Id, resource name, resource type.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.createAsync(java.lang.String,java.lang.String,java.lang.String)
  id: createAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: createAsync(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.createAsync(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.createAsync(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Creates a new table with the specified table name, under the specified account.
  syntax:
    content: public abstract Mono<TableInner> createAsync(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: properties of the table, including Id, resource name, resource type.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: createWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: createWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  nameWithType: TablesClient.createWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Creates a new table with the specified table name, under the specified account.
  syntax:
    content: public abstract Response<TableInner> createWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: properties of the table, including Id, resource name, resource type.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.createWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Creates a new table with the specified table name, under the specified account.
  syntax:
    content: public abstract Mono<Response<TableInner>> createWithResponseAsync(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.TableInner>>
      description: properties of the table, including Id, resource name, resource type.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: delete(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.delete(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.delete(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.delete*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Deletes the table with the specified table name, under the specified account if it exists.
  syntax:
    content: public abstract void delete(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.deleteAsync(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.deleteAsync(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Deletes the table with the specified table name, under the specified account if it exists.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  nameWithType: TablesClient.deleteWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Deletes the table with the specified table name, under the specified account if it exists.
  syntax:
    content: public abstract Response<Void> deleteWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.deleteWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Deletes the table with the specified table name, under the specified account if it exists.
  syntax:
    content: public abstract Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: get(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.get(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.get(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.get*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Gets the table with the specified table name, under the specified account if it exists.
  syntax:
    content: public abstract TableInner get(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.TableInner
      description: the table with the specified table name, under the specified account if it exists.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.getAsync(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.getAsync(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Gets the table with the specified table name, under the specified account if it exists.
  syntax:
    content: public abstract Mono<TableInner> getAsync(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: the table with the specified table name, under the specified account if it exists.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  nameWithType: TablesClient.getWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Gets the table with the specified table name, under the specified account if it exists.
  syntax:
    content: public abstract Response<TableInner> getWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: the table with the specified table name, under the specified account if it exists.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.getWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Gets the table with the specified table name, under the specified account if it exists.
  syntax:
    content: public abstract Mono<Response<TableInner>> getWithResponseAsync(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.TableInner>>
      description: the table with the specified table name, under the specified account if it exists.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: list(String resourceGroupName, String accountName)
  nameWithType: TablesClient.list(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.list(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.list*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Gets a list of all the tables under the specified storage account.
  syntax:
    content: public abstract PagedIterable<TableInner> list(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: a list of all the tables under the specified storage account.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: list(String resourceGroupName, String accountName, Context context)
  nameWithType: TablesClient.list(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.list(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.list*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Gets a list of all the tables under the specified storage account.
  syntax:
    content: public abstract PagedIterable<TableInner> list(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: a list of all the tables under the specified storage account.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: listAsync(String resourceGroupName, String accountName)
  nameWithType: TablesClient.listAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.listAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Gets a list of all the tables under the specified storage account.
  syntax:
    content: public abstract PagedFlux<TableInner> listAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: a list of all the tables under the specified storage account.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.update(java.lang.String,java.lang.String,java.lang.String)
  id: update(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: update(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.update(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.update(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.update*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Creates a new table with the specified table name, under the specified account.
  syntax:
    content: public abstract TableInner update(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.TableInner
      description: properties of the table, including Id, resource name, resource type.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.updateAsync(java.lang.String,java.lang.String,java.lang.String)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.updateAsync(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.updateAsync(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Creates a new table with the specified table name, under the specified account.
  syntax:
    content: public abstract Mono<TableInner> updateAsync(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: properties of the table, including Id, resource name, resource type.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: updateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: updateWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  nameWithType: TablesClient.updateWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Creates a new table with the specified table name, under the specified account.
  syntax:
    content: public abstract Response<TableInner> updateWithResponse(String resourceGroupName, String accountName, String tableName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.TableInner>
      description: properties of the table, including Id, resource name, resource type.
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.fluent.TablesClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  nameWithType: TablesClient.updateWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponseAsync(String resourceGroupName, String accountName, String tableName)
  overload: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.fluent
  summary: Creates a new table with the specified table name, under the specified account.
  syntax:
    content: public abstract Mono<Response<TableInner>> updateWithResponseAsync(String resourceGroupName, String accountName, String tableName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: tableName
      type: java.lang.String
      description: >-
        A table name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.TableInner>>
      description: properties of the table, including Id, resource name, resource type.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.TableInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.TableInner
    name: TableInner
    fullName: com.azure.resourcemanager.storage.fluent.models.TableInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: TablesClient.createWithResponseAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponseAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.TableInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.TableInner
    name: TableInner
    fullName: com.azure.resourcemanager.storage.fluent.models.TableInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.createAsync*
  name: createAsync
  nameWithType: TablesClient.createAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.createAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.models.TableInner
  name: TableInner
  nameWithType: TableInner
  fullName: com.azure.resourcemanager.storage.fluent.models.TableInner
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.create*
  name: create
  nameWithType: TablesClient.create
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.create
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.TableInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.TableInner
    name: TableInner
    fullName: com.azure.resourcemanager.storage.fluent.models.TableInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponse*
  name: createWithResponse
  nameWithType: TablesClient.createWithResponse
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.createWithResponse
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: TablesClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponseAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.updateAsync*
  name: updateAsync
  nameWithType: TablesClient.updateAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.updateAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.update*
  name: update
  nameWithType: TablesClient.update
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.update
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponse*
  name: updateWithResponse
  nameWithType: TablesClient.updateWithResponse
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.updateWithResponse
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: TablesClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponseAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.getAsync*
  name: getAsync
  nameWithType: TablesClient.getAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.getAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.get*
  name: get
  nameWithType: TablesClient.get
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.get
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponse*
  name: getWithResponse
  nameWithType: TablesClient.getWithResponse
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.getWithResponse
  package: com.azure.resourcemanager.storage.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: TablesClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.deleteAsync*
  name: deleteAsync
  nameWithType: TablesClient.deleteAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.deleteAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.delete*
  name: delete
  nameWithType: TablesClient.delete
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.delete
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: TablesClient.deleteWithResponse
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.deleteWithResponse
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.TableInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.TableInner
    name: TableInner
    fullName: com.azure.resourcemanager.storage.fluent.models.TableInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.listAsync*
  name: listAsync
  nameWithType: TablesClient.listAsync
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.listAsync
  package: com.azure.resourcemanager.storage.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.TableInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.TableInner
    name: TableInner
    fullName: com.azure.resourcemanager.storage.fluent.models.TableInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.fluent.TablesClient.list*
  name: list
  nameWithType: TablesClient.list
  fullName: com.azure.resourcemanager.storage.fluent.TablesClient.list
  package: com.azure.resourcemanager.storage.fluent
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
