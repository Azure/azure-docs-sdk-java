### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.defaultGroup()
  name: defaultGroup()
  nameWithType: DataLakeStoreAccountUpdateParameters.defaultGroup()
  returns:
    description: <p>the defaultGroup value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the defaultGroup value.</p>

    <p></p>
  syntax: public String defaultGroup()
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.defaultGroup()
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.encryptionConfig()
  name: encryptionConfig()
  nameWithType: DataLakeStoreAccountUpdateParameters.encryptionConfig()
  returns:
    description: <p>the encryptionConfig value </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.UpdateEncryptionConfig?alt=com.microsoft.azure.management.datalake.store.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the encryptionConfig value.</p>

    <p></p>
  syntax: public UpdateEncryptionConfig encryptionConfig()
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.encryptionConfig()
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.firewallAllowAzureIps()
  name: firewallAllowAzureIps()
  nameWithType: DataLakeStoreAccountUpdateParameters.firewallAllowAzureIps()
  returns:
    description: <p>the firewallAllowAzureIps value </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.FirewallAllowAzureIpsState?alt=com.microsoft.azure.management.datalake.store.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the firewallAllowAzureIps value.</p>

    <p></p>
  syntax: public FirewallAllowAzureIpsState firewallAllowAzureIps()
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.firewallAllowAzureIps()
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.firewallState()
  name: firewallState()
  nameWithType: DataLakeStoreAccountUpdateParameters.firewallState()
  returns:
    description: <p>the firewallState value </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.FirewallState?alt=com.microsoft.azure.management.datalake.store.models.FirewallState&text=FirewallState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the firewallState value.</p>

    <p></p>
  syntax: public FirewallState firewallState()
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.firewallState()
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.newTier()
  name: newTier()
  nameWithType: DataLakeStoreAccountUpdateParameters.newTier()
  returns:
    description: <p>the newTier value </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.TierType?alt=com.microsoft.azure.management.datalake.store.models.TierType&text=TierType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the newTier value.</p>

    <p></p>
  syntax: public TierType newTier()
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.newTier()
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.tags()
  name: tags()
  nameWithType: DataLakeStoreAccountUpdateParameters.tags()
  returns:
    description: <p>the tags value </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tags value.</p>

    <p></p>
  syntax: public Map<String, String> tags()
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.tags()
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.trustedIdProviderState()
  name: trustedIdProviderState()
  nameWithType: DataLakeStoreAccountUpdateParameters.trustedIdProviderState()
  returns:
    description: <p>the trustedIdProviderState value </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.TrustedIdProviderState?alt=com.microsoft.azure.management.datalake.store.models.TrustedIdProviderState&text=TrustedIdProviderState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the trustedIdProviderState value.</p>

    <p></p>
  syntax: public TrustedIdProviderState trustedIdProviderState()
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.trustedIdProviderState()
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withDefaultGroup(String defaultGroup)
  name: withDefaultGroup(String defaultGroup)
  nameWithType: DataLakeStoreAccountUpdateParameters.withDefaultGroup(String defaultGroup)
  parameters:
  - description: <p>the defaultGroup value to set </p>
    name: defaultGroup
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataLakeStoreAccountUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters?alt=com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters&text=DataLakeStoreAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the defaultGroup value.</p>

    <p></p>
  syntax: public DataLakeStoreAccountUpdateParameters withDefaultGroup(String defaultGroup)
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withDefaultGroup(String)
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)
  name: withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)
  nameWithType: DataLakeStoreAccountUpdateParameters.withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)
  parameters:
  - description: <p>the encryptionConfig value to set </p>
    name: encryptionConfig
    type: <xref href="com.microsoft.azure.management.datalake.store.models.UpdateEncryptionConfig?alt=com.microsoft.azure.management.datalake.store.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataLakeStoreAccountUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters?alt=com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters&text=DataLakeStoreAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the encryptionConfig value.</p>

    <p></p>
  syntax: public DataLakeStoreAccountUpdateParameters withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withEncryptionConfig(UpdateEncryptionConfig)
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)
  name: withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)
  nameWithType: DataLakeStoreAccountUpdateParameters.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)
  parameters:
  - description: <p>the firewallAllowAzureIps value to set </p>
    name: firewallAllowAzureIps
    type: <xref href="com.microsoft.azure.management.datalake.store.models.FirewallAllowAzureIpsState?alt=com.microsoft.azure.management.datalake.store.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataLakeStoreAccountUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters?alt=com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters&text=DataLakeStoreAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the firewallAllowAzureIps value.</p>

    <p></p>
  syntax: public DataLakeStoreAccountUpdateParameters withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withFirewallAllowAzureIps(FirewallAllowAzureIpsState)
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withFirewallState(FirewallState firewallState)
  name: withFirewallState(FirewallState firewallState)
  nameWithType: DataLakeStoreAccountUpdateParameters.withFirewallState(FirewallState firewallState)
  parameters:
  - description: <p>the firewallState value to set </p>
    name: firewallState
    type: <xref href="com.microsoft.azure.management.datalake.store.models.FirewallState?alt=com.microsoft.azure.management.datalake.store.models.FirewallState&text=FirewallState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataLakeStoreAccountUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters?alt=com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters&text=DataLakeStoreAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the firewallState value.</p>

    <p></p>
  syntax: public DataLakeStoreAccountUpdateParameters withFirewallState(FirewallState firewallState)
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withFirewallState(FirewallState)
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withNewTier(TierType newTier)
  name: withNewTier(TierType newTier)
  nameWithType: DataLakeStoreAccountUpdateParameters.withNewTier(TierType newTier)
  parameters:
  - description: <p>the newTier value to set </p>
    name: newTier
    type: <xref href="com.microsoft.azure.management.datalake.store.models.TierType?alt=com.microsoft.azure.management.datalake.store.models.TierType&text=TierType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataLakeStoreAccountUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters?alt=com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters&text=DataLakeStoreAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the newTier value.</p>

    <p></p>
  syntax: public DataLakeStoreAccountUpdateParameters withNewTier(TierType newTier)
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withNewTier(TierType)
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withTags(Map<String, String> tags)
  name: withTags(Map<String, String> tags)
  nameWithType: DataLakeStoreAccountUpdateParameters.withTags(Map<String, String> tags)
  parameters:
  - description: <p>the tags value to set </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataLakeStoreAccountUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters?alt=com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters&text=DataLakeStoreAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tags value.</p>

    <p></p>
  syntax: public DataLakeStoreAccountUpdateParameters withTags(Map<String, String> tags)
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withTags(Map<String, String>)
- fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)
  name: withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)
  nameWithType: DataLakeStoreAccountUpdateParameters.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)
  parameters:
  - description: <p>the trustedIdProviderState value to set </p>
    name: trustedIdProviderState
    type: <xref href="com.microsoft.azure.management.datalake.store.models.TrustedIdProviderState?alt=com.microsoft.azure.management.datalake.store.models.TrustedIdProviderState&text=TrustedIdProviderState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataLakeStoreAccountUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters?alt=com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters&text=DataLakeStoreAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the trustedIdProviderState value.</p>

    <p></p>
  syntax: public DataLakeStoreAccountUpdateParameters withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)
  uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters.withTrustedIdProviderState(TrustedIdProviderState)
nameWithType: DataLakeStoreAccountUpdateParameters
syntax: public class DataLakeStoreAccountUpdateParameters
type: class
uid: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters
fullName: com.microsoft.azure.management.datalake.store.models.DataLakeStoreAccountUpdateParameters
name: DataLakeStoreAccountUpdateParameters
package: com.microsoft.azure.management.datalake.store.models
summary: <p>Data Lake Store account information to update. </p>
metadata: {}
