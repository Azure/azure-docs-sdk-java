### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator
  id: ServiceProxyGenerator
  parent: microsoft.servicefabric.services.remoting.builder
  children:
  - microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.createServiceProxy(FabricServiceRemotingPartitionClient)
  - microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.ServiceProxyGenerator(Class<?>,ProxyActivator)
  href: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.yml
  langs:
  - java
  name: ServiceProxyGenerator
  nameWithType: ServiceProxyGenerator
  fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ServiceProxyGenerator.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ServiceProxyGenerator.java
    startLine: 10
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Used in Service code builder to create service proxy base object. For internal use only. </p>"
  syntax:
    content: public class ServiceProxyGenerator extends ProxyGenerator
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.remoting.builder.ProxyGenerator
  inheritedMembers:
  - microsoft.servicefabric.services.remoting.builder.ProxyGenerator.getProxyInterfaceType()
  - microsoft.servicefabric.services.remoting.builder.ProxyGenerator.ProxyGenerator(Class<?>)
- uid: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.createServiceProxy(FabricServiceRemotingPartitionClient)
  id: createServiceProxy(FabricServiceRemotingPartitionClient)
  parent: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator
  href: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.yml
  langs:
  - java
  name: createServiceProxy(FabricServiceRemotingPartitionClient remotingPartitionClient)
  nameWithType: ServiceProxyGenerator.createServiceProxy(FabricServiceRemotingPartitionClient remotingPartitionClient)
  fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.createServiceProxy(FabricServiceRemotingPartitionClient remotingPartitionClient)
  overload: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.createServiceProxy*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ServiceProxyGenerator.java
    startLine: 18
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: public ServiceProxyBase createServiceProxy(FabricServiceRemotingPartitionClient remotingPartitionClient)
    parameters:
    - id: remotingPartitionClient
      type: microsoft.servicefabric.services.remoting.client.FabricServiceRemotingPartitionClient
    return:
      type: microsoft.servicefabric.services.remoting.client.ServiceProxyBase
- uid: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.ServiceProxyGenerator(Class<?>,ProxyActivator)
  id: ServiceProxyGenerator(Class<?>,ProxyActivator)
  parent: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator
  href: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.yml
  langs:
  - java
  name: ServiceProxyGenerator(Class<?> proxyInterfaceType, ProxyActivator proxyActivator)
  nameWithType: ServiceProxyGenerator.ServiceProxyGenerator(Class<?> proxyInterfaceType, ProxyActivator proxyActivator)
  fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.ServiceProxyGenerator(Class<?> proxyInterfaceType, ProxyActivator proxyActivator)
  overload: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.ServiceProxyGenerator*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ServiceProxyGenerator.java
    startLine: 13
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected ServiceProxyGenerator(Class<?> proxyInterfaceType, ProxyActivator proxyActivator)
    parameters:
    - id: proxyInterfaceType
      type: a19781f8
    - id: proxyActivator
      type: microsoft.servicefabric.services.remoting.builder.ProxyActivator
references:
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.ServiceProxyGenerator*
  name: ServiceProxyGenerator
  nameWithType: ServiceProxyGenerator.ServiceProxyGenerator
  fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.ServiceProxyGenerator
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.createServiceProxy*
  name: createServiceProxy
  nameWithType: ServiceProxyGenerator.createServiceProxy
  fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.createServiceProxy
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.getProxyInterfaceType()
  parent: microsoft.servicefabric.services.remoting.builder.ProxyGenerator
  href: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.yml
  name: getProxyInterfaceType()
  nameWithType: ProxyGenerator.getProxyInterfaceType()
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.getProxyInterfaceType()
  type: Method
  syntax:
    content: public Class<?> getProxyInterfaceType()
    return:
      type: a19781f8
- uid: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.ProxyGenerator(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.ProxyGenerator
  href: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.yml
  name: ProxyGenerator(Class<?> proxyInterfaceType)
  nameWithType: ProxyGenerator.ProxyGenerator(Class<?> proxyInterfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.ProxyGenerator(Class<?> proxyInterfaceType)
  type: Constructor
  syntax:
    content: protected ProxyGenerator(Class<?> proxyInterfaceType)
    parameters:
    - id: proxyInterfaceType
      type: a19781f8
- uid: microsoft.servicefabric.services.remoting.builder.ProxyGenerator
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.yml
  name: ProxyGenerator
  nameWithType: ProxyGenerator
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyGenerator
  type: Class
  summary: "<p>Abstract class from which Actor ans Services Proxy generator base classes derive. For internal use only. </p>"
  syntax:
    content: public class ProxyGenerator
- uid: microsoft.servicefabric.services.remoting.builder.ProxyActivator
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.ProxyActivator.yml
  name: ProxyActivator
  nameWithType: ProxyActivator
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyActivator
  type: Interface
  summary: "<p>Defines the interface implemented by generated code to create proxy objects. </p>"
  syntax:
    content: public interface ProxyActivator
- uid: microsoft.servicefabric.services.remoting.client.ServiceProxyBase
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.ServiceProxyBase.yml
  name: ServiceProxyBase
  nameWithType: ServiceProxyBase
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyBase
  type: Class
  summary: "<p>Provides the base implementation for the proxy to the remoted IService interfaces. </p>"
  syntax:
    content: public class ServiceProxyBase extends ProxyBase implements ServiceProxy
- uid: microsoft.servicefabric.services.remoting.client.FabricServiceRemotingPartitionClient
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client.FabricServiceRemotingPartitionClient.yml
  name: FabricServiceRemotingPartitionClient
  nameWithType: FabricServiceRemotingPartitionClient
  fullName: microsoft.servicefabric.services.remoting.client.FabricServiceRemotingPartitionClient
  type: Class
  summary: "<p>Specifies the Service partition client for Remoting communication </p>"
  syntax:
    content: public class FabricServiceRemotingPartitionClient extends FabricServicePartitionClient<ServiceRemotingClient> implements ServiceRemotingPartitionClient
