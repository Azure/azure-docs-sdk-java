### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  id: EdgeNGramTokenFilter
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models
  children:
  - com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter(java.lang.String)
  - com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMaxGram()
  - com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMinGram()
  - com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getSide()
  - com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMaxGram(java.lang.Integer)
  - com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMinGram(java.lang.Integer)
  - com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setSide(com.azure.search.documents.indexes.models.EdgeNGramTokenFilterSide)
  langs:
  - java
  name: EdgeNGramTokenFilter
  nameWithType: EdgeNGramTokenFilter
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  type: Class
  package: com.azure.search.documents.indexes.models
  summary: Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene.
  syntax:
    content: public final class EdgeNGramTokenFilter extends TokenFilter
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.models.TokenFilter
  inheritedMembers:
  - com.azure.search.documents.indexes.models.TokenFilter.getName()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter(java.lang.String)
  id: EdgeNGramTokenFilter(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  langs:
  - java
  name: EdgeNGramTokenFilter(String name)
  nameWithType: EdgeNGramTokenFilter.EdgeNGramTokenFilter(String name)
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter(String name)
  overload: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter*
  type: Constructor
  package: com.azure.search.documents.indexes.models
  summary: Constructor of <xref uid="com.azure.search.documents.indexes.models.TokenFilter" data-throw-if-not-resolved="false">TokenFilter</xref>.
  syntax:
    content: public EdgeNGramTokenFilter(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: >-
        The name of the token filter. It must only contain letters, digits,
         spaces, dashes or underscores, can only start and end with alphanumeric
         characters, and is limited to 128 characters.
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMaxGram()
  id: getMaxGram()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  langs:
  - java
  name: getMaxGram()
  nameWithType: EdgeNGramTokenFilter.getMaxGram()
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMaxGram()
  overload: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMaxGram*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the maxGram property: The maximum n-gram length. Default is 2.'
  syntax:
    content: public Integer getMaxGram()
    return:
      type: java.lang.Integer
      description: the maxGram value.
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMinGram()
  id: getMinGram()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  langs:
  - java
  name: getMinGram()
  nameWithType: EdgeNGramTokenFilter.getMinGram()
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMinGram()
  overload: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMinGram*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the minGram property: The minimum n-gram length. Default is 1. Must be less than the value of maxGram.'
  syntax:
    content: public Integer getMinGram()
    return:
      type: java.lang.Integer
      description: the minGram value.
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getSide()
  id: getSide()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  langs:
  - java
  name: getSide()
  nameWithType: EdgeNGramTokenFilter.getSide()
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getSide()
  overload: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getSide*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: "Get the side property: Specifies which side of the input the n-gram should be generated from. Default is \"front\". Possible values include: 'Front', 'Back'."
  syntax:
    content: public EdgeNGramTokenFilterSide getSide()
    return:
      type: com.azure.search.documents.indexes.models.EdgeNGramTokenFilterSide
      description: the side value.
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMaxGram(java.lang.Integer)
  id: setMaxGram(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  langs:
  - java
  name: setMaxGram(Integer maxGram)
  nameWithType: EdgeNGramTokenFilter.setMaxGram(Integer maxGram)
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMaxGram(Integer maxGram)
  overload: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMaxGram*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the maxGram property: The maximum n-gram length. Default is 2.'
  syntax:
    content: public EdgeNGramTokenFilter setMaxGram(Integer maxGram)
    parameters:
    - id: maxGram
      type: java.lang.Integer
      description: the maxGram value to set.
    return:
      type: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
      description: the EdgeNGramTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMinGram(java.lang.Integer)
  id: setMinGram(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  langs:
  - java
  name: setMinGram(Integer minGram)
  nameWithType: EdgeNGramTokenFilter.setMinGram(Integer minGram)
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMinGram(Integer minGram)
  overload: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMinGram*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the minGram property: The minimum n-gram length. Default is 1. Must be less than the value of maxGram.'
  syntax:
    content: public EdgeNGramTokenFilter setMinGram(Integer minGram)
    parameters:
    - id: minGram
      type: java.lang.Integer
      description: the minGram value to set.
    return:
      type: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
      description: the EdgeNGramTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setSide(com.azure.search.documents.indexes.models.EdgeNGramTokenFilterSide)
  id: setSide(com.azure.search.documents.indexes.models.EdgeNGramTokenFilterSide)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
  langs:
  - java
  name: setSide(EdgeNGramTokenFilterSide side)
  nameWithType: EdgeNGramTokenFilter.setSide(EdgeNGramTokenFilterSide side)
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setSide(EdgeNGramTokenFilterSide side)
  overload: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setSide*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: "Set the side property: Specifies which side of the input the n-gram should be generated from. Default is \"front\". Possible values include: 'Front', 'Back'."
  syntax:
    content: public EdgeNGramTokenFilter setSide(EdgeNGramTokenFilterSide side)
    parameters:
    - id: side
      type: com.azure.search.documents.indexes.models.EdgeNGramTokenFilterSide
      description: the side value to set.
    return:
      type: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter
      description: the EdgeNGramTokenFilter object itself.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter*
  name: EdgeNGramTokenFilter
  nameWithType: EdgeNGramTokenFilter.EdgeNGramTokenFilter
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMinGram*
  name: getMinGram
  nameWithType: EdgeNGramTokenFilter.getMinGram
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMinGram
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMinGram*
  name: setMinGram
  nameWithType: EdgeNGramTokenFilter.setMinGram
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMinGram
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMaxGram*
  name: getMaxGram
  nameWithType: EdgeNGramTokenFilter.getMaxGram
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getMaxGram
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMaxGram*
  name: setMaxGram
  nameWithType: EdgeNGramTokenFilter.setMaxGram
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setMaxGram
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilterSide
  name: EdgeNGramTokenFilterSide
  nameWithType: EdgeNGramTokenFilterSide
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilterSide
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getSide*
  name: getSide
  nameWithType: EdgeNGramTokenFilter.getSide
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.getSide
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setSide*
  name: setSide
  nameWithType: EdgeNGramTokenFilter.setSide
  fullName: com.azure.search.documents.indexes.models.EdgeNGramTokenFilter.setSide
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.TokenFilter
  name: TokenFilter
  nameWithType: TokenFilter
  fullName: com.azure.search.documents.indexes.models.TokenFilter
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.search.documents.indexes.models.TokenFilter.getName()
  name: TokenFilter.getName()
  nameWithType: TokenFilter.getName()
  fullName: com.azure.search.documents.indexes.models.TokenFilter.getName()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
