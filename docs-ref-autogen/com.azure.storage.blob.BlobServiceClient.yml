### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.BlobServiceClient
  id: BlobServiceClient
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob
  children:
  - com.azure.storage.blob.BlobServiceClient.createBlobContainer(java.lang.String)
  - com.azure.storage.blob.BlobServiceClient.createBlobContainerWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,com.azure.core.util.Context)
  - com.azure.storage.blob.BlobServiceClient.deleteBlobContainer(java.lang.String)
  - com.azure.storage.blob.BlobServiceClient.deleteBlobContainerWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.storage.blob.BlobServiceClient.generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  - com.azure.storage.blob.BlobServiceClient.getAccountInfo()
  - com.azure.storage.blob.BlobServiceClient.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.BlobServiceClient.getAccountName()
  - com.azure.storage.blob.BlobServiceClient.getAccountUrl()
  - com.azure.storage.blob.BlobServiceClient.getBlobContainerClient(java.lang.String)
  - com.azure.storage.blob.BlobServiceClient.getHttpPipeline()
  - com.azure.storage.blob.BlobServiceClient.getProperties()
  - com.azure.storage.blob.BlobServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.BlobServiceClient.getServiceVersion()
  - com.azure.storage.blob.BlobServiceClient.getStatistics()
  - com.azure.storage.blob.BlobServiceClient.getStatisticsWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.BlobServiceClient.getUserDelegationKey(java.time.OffsetDateTime,java.time.OffsetDateTime)
  - com.azure.storage.blob.BlobServiceClient.getUserDelegationKeyWithResponse(java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.BlobServiceClient.listBlobContainers()
  - com.azure.storage.blob.BlobServiceClient.listBlobContainers(com.azure.storage.blob.models.ListBlobContainersOptions,java.time.Duration)
  - com.azure.storage.blob.BlobServiceClient.setProperties(com.azure.storage.blob.models.BlobServiceProperties)
  - com.azure.storage.blob.BlobServiceClient.setPropertiesWithResponse(com.azure.storage.blob.models.BlobServiceProperties,java.time.Duration,com.azure.core.util.Context)
  langs:
  - java
  name: BlobServiceClient
  nameWithType: BlobServiceClient
  fullName: com.azure.storage.blob.BlobServiceClient
  type: Class
  package: com.azure.storage.blob
  summary: >-
    Client to a storage account. It may only be instantiated through a <xref uid="com.azure.storage.blob.BlobServiceClientBuilder" data-throw-if-not-resolved="false">BlobServiceClientBuilder</xref>. This class does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to blobs and containers.


    This client contains operations on a blob. Operations on a container are available on <xref uid="com.azure.storage.blob.BlobContainerClient" data-throw-if-not-resolved="false">BlobContainerClient</xref> through <xref uid="com.azure.storage.blob.BlobServiceClient.getBlobContainerClient(java.lang.String)" data-throw-if-not-resolved="false">#getBlobContainerClient(String)</xref>, and operations on a blob are available on <xref uid="com.azure.storage.blob.BlobClient" data-throw-if-not-resolved="false">BlobClient</xref>.


    Please see [here][] for more information on containers.



    [here]: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction
  syntax:
    content: public final class BlobServiceClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.BlobServiceClient.BlobServiceClient(com.azure.storage.blob.BlobServiceAsyncClient)
  id: BlobServiceClient(com.azure.storage.blob.BlobServiceAsyncClient)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: BlobServiceClient(BlobServiceAsyncClient blobServiceAsyncClient)
  nameWithType: BlobServiceClient.BlobServiceClient(BlobServiceAsyncClient blobServiceAsyncClient)
  fullName: com.azure.storage.blob.BlobServiceClient.BlobServiceClient(BlobServiceAsyncClient blobServiceAsyncClient)
  overload: com.azure.storage.blob.BlobServiceClient.BlobServiceClient*
  type: Constructor
  package: com.azure.storage.blob
  summary: Package-private constructor for use by <xref uid="com.azure.storage.blob.BlobServiceClientBuilder" data-throw-if-not-resolved="false">BlobServiceClientBuilder</xref>.
  syntax:
    content: " BlobServiceClient(BlobServiceAsyncClient blobServiceAsyncClient)"
    parameters:
    - id: blobServiceAsyncClient
      type: com.azure.storage.blob.BlobServiceAsyncClient
      description: the async storage account client
- uid: com.azure.storage.blob.BlobServiceClient.createBlobContainer(java.lang.String)
  id: createBlobContainer(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: createBlobContainer(String containerName)
  nameWithType: BlobServiceClient.createBlobContainer(String containerName)
  fullName: com.azure.storage.blob.BlobServiceClient.createBlobContainer(String containerName)
  overload: com.azure.storage.blob.BlobServiceClient.createBlobContainer*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Creates a new container within a storage account. If a container with the same name already exists, the operation fails. For more information, see the [Azure Docs][].


    **Code Samples**


    ```java

    BlobContainerClient blobContainerClient = client.createBlobContainer("containerName");

    ```



    [Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/create-container
  syntax:
    content: public BlobContainerClient createBlobContainer(String containerName)
    parameters:
    - id: containerName
      type: java.lang.String
      description: Name of the container to create
    return:
      type: com.azure.storage.blob.BlobContainerClient
      description: The <xref uid="com.azure.storage.blob.BlobContainerClient" data-throw-if-not-resolved="false">BlobContainerClient</xref> used to interact with the container created.
- uid: com.azure.storage.blob.BlobServiceClient.createBlobContainerWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,com.azure.core.util.Context)
  id: createBlobContainerWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: createBlobContainerWithResponse(String containerName, Map<String,String> metadata, PublicAccessType accessType, Context context)
  nameWithType: BlobServiceClient.createBlobContainerWithResponse(String containerName, Map<String,String> metadata, PublicAccessType accessType, Context context)
  fullName: com.azure.storage.blob.BlobServiceClient.createBlobContainerWithResponse(String containerName, Map<String,String> metadata, PublicAccessType accessType, Context context)
  overload: com.azure.storage.blob.BlobServiceClient.createBlobContainerWithResponse*
  type: Method
  package: com.azure.storage.blob
  summary: "Creates a new container within a storage account. If a container with the same name already exists, the operation fails. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Context context = new Context(\"Key\", \"Value\");\n \n BlobContainerClient blobContainerClient = client.createBlobContainerWithResponse(\n     \"containerName\",\n     metadata,\n     PublicAccessType.CONTAINER,\n     context).getValue();\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/create-container"
  syntax:
    content: public Response<BlobContainerClient> createBlobContainerWithResponse(String containerName, Map<String,String> metadata, PublicAccessType accessType, Context context)
    parameters:
    - id: containerName
      type: java.lang.String
      description: Name of the container to create
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the container.
    - id: accessType
      type: com.azure.storage.blob.models.PublicAccessType
      description: >-
        Specifies how the data in this container is available to the public. See the
         x-ms-blob-public-access header in the Azure Docs for more information. Pass null for no public access.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.BlobContainerClient>
      description: >-
        A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the <xref uid="com.azure.storage.blob.BlobContainerClient" data-throw-if-not-resolved="false">BlobContainerClient</xref> used
         to interact with the container created.
- uid: com.azure.storage.blob.BlobServiceClient.deleteBlobContainer(java.lang.String)
  id: deleteBlobContainer(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: deleteBlobContainer(String containerName)
  nameWithType: BlobServiceClient.deleteBlobContainer(String containerName)
  fullName: com.azure.storage.blob.BlobServiceClient.deleteBlobContainer(String containerName)
  overload: com.azure.storage.blob.BlobServiceClient.deleteBlobContainer*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Deletes the specified container in the storage account. If the container doesn't exist the operation fails. For more information see the [Azure Docs][].


    **Code Samples**


    ```java

    try {
         client.deleteBlobContainer("container Name");
         System.out.printf("Delete container completed with status %n");
     } catch (UnsupportedOperationException error) {
         System.out.printf("Delete container failed: %s%n", error);
     }
    ```



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container
  syntax:
    content: public void deleteBlobContainer(String containerName)
    parameters:
    - id: containerName
      type: java.lang.String
      description: Name of the container to delete
- uid: com.azure.storage.blob.BlobServiceClient.deleteBlobContainerWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteBlobContainerWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: deleteBlobContainerWithResponse(String containerName, Context context)
  nameWithType: BlobServiceClient.deleteBlobContainerWithResponse(String containerName, Context context)
  fullName: com.azure.storage.blob.BlobServiceClient.deleteBlobContainerWithResponse(String containerName, Context context)
  overload: com.azure.storage.blob.BlobServiceClient.deleteBlobContainerWithResponse*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Deletes the specified container in the storage account. If the container doesn't exist the operation fails. For more information see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container
  syntax:
    content: public Response<Void> deleteBlobContainerWithResponse(String containerName, Context context)
    parameters:
    - id: containerName
      type: java.lang.String
      description: Name of the container to delete
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers
- uid: com.azure.storage.blob.BlobServiceClient.generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  id: generateAccountSas(com.azure.storage.common.sas.AccountSasSignatureValues)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  nameWithType: BlobServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  fullName: com.azure.storage.blob.BlobServiceClient.generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
  overload: com.azure.storage.blob.BlobServiceClient.generateAccountSas*
  type: Method
  package: com.azure.storage.blob
  summary: "Generates an account SAS for the Azure Storage account using the specified <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSasSignatureValues</xref>. Note : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>\n\nSee <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSasSignatureValues</xref> for more information on how to construct an account SAS.\n\n**Generating an account SAS**\n\nThe snippet below generates an AccountSasSignatureValues object that lasts for two days and gives the user read and list access to blob and file shares.\n\n```java\nAccountSasPermission permissions = new AccountSasPermission()\n     .setListPermission(true)\n     .setReadPermission(true);\n AccountSasResourceType resourceTypes = new AccountSasResourceType().setContainer(true);\n AccountSasService services = new AccountSasService().setBlobAccess(true).setFileAccess(true);\n OffsetDateTime expiryTime = OffsetDateTime.now().plus(Duration.ofDays(2));\n \n AccountSasSignatureValues sasValues =\n     new AccountSasSignatureValues(expiryTime, permissions, services, resourceTypes);\n \n // Client must be authenticated via StorageSharedKeyCredential\n String sas = client.generateAccountSas(sasValues);\n```"
  syntax:
    content: public String generateAccountSas(AccountSasSignatureValues accountSasSignatureValues)
    parameters:
    - id: accountSasSignatureValues
      type: com.azure.storage.common.sas.AccountSasSignatureValues
      description: <xref uid="com.azure.storage.common.sas.AccountSasSignatureValues" data-throw-if-not-resolved="false">AccountSasSignatureValues</xref>
    return:
      type: java.lang.String
      description: A <code>String</code> representing all SAS query parameters.
- uid: com.azure.storage.blob.BlobServiceClient.getAccountInfo()
  id: getAccountInfo()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getAccountInfo()
  nameWithType: BlobServiceClient.getAccountInfo()
  fullName: com.azure.storage.blob.BlobServiceClient.getAccountInfo()
  overload: com.azure.storage.blob.BlobServiceClient.getAccountInfo*
  type: Method
  package: com.azure.storage.blob
  summary: "Returns the sku name and account kind for the account. For more information, please see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nStorageAccountInfo accountInfo = client.getAccountInfo();\n \n System.out.printf(\"Account kind: %s, SKU: %s%n\", accountInfo.getAccountKind(), accountInfo.getSkuName());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information"
  syntax:
    content: public StorageAccountInfo getAccountInfo()
    return:
      type: com.azure.storage.blob.models.StorageAccountInfo
      description: The storage account info.
- uid: com.azure.storage.blob.BlobServiceClient.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getAccountInfoWithResponse(Duration timeout, Context context)
  nameWithType: BlobServiceClient.getAccountInfoWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.blob.BlobServiceClient.getAccountInfoWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.blob.BlobServiceClient.getAccountInfoWithResponse*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Returns the sku name and account kind for the account. For more information, please see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information
  syntax:
    content: public Response<StorageAccountInfo> getAccountInfoWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.StorageAccountInfo>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the storage account info.
- uid: com.azure.storage.blob.BlobServiceClient.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getAccountName()
  nameWithType: BlobServiceClient.getAccountName()
  fullName: com.azure.storage.blob.BlobServiceClient.getAccountName()
  overload: com.azure.storage.blob.BlobServiceClient.getAccountName*
  type: Method
  package: com.azure.storage.blob
  summary: Get associated account name.
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: account name associated with this storage resource.
- uid: com.azure.storage.blob.BlobServiceClient.getAccountUrl()
  id: getAccountUrl()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getAccountUrl()
  nameWithType: BlobServiceClient.getAccountUrl()
  fullName: com.azure.storage.blob.BlobServiceClient.getAccountUrl()
  overload: com.azure.storage.blob.BlobServiceClient.getAccountUrl*
  type: Method
  package: com.azure.storage.blob
  summary: Gets the URL of the storage account represented by this client.
  syntax:
    content: public String getAccountUrl()
    return:
      type: java.lang.String
      description: the URL.
- uid: com.azure.storage.blob.BlobServiceClient.getBlobContainerClient(java.lang.String)
  id: getBlobContainerClient(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getBlobContainerClient(String containerName)
  nameWithType: BlobServiceClient.getBlobContainerClient(String containerName)
  fullName: com.azure.storage.blob.BlobServiceClient.getBlobContainerClient(String containerName)
  overload: com.azure.storage.blob.BlobServiceClient.getBlobContainerClient*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Initializes a <xref uid="com.azure.storage.blob.BlobContainerClient" data-throw-if-not-resolved="false">BlobContainerClient</xref> object pointing to the specified container. This method does not create a container. It simply constructs the URL to the container and offers access to methods relevant to containers.


    **Code Samples**


    ```java

    BlobContainerClient blobContainerClient = client.getBlobContainerClient("containerName");

    ```
  syntax:
    content: public BlobContainerClient getBlobContainerClient(String containerName)
    parameters:
    - id: containerName
      type: java.lang.String
      description: The name of the container to point to.
    return:
      type: com.azure.storage.blob.BlobContainerClient
      description: A <xref uid="com.azure.storage.blob.BlobContainerClient" data-throw-if-not-resolved="false">BlobContainerClient</xref> object pointing to the specified container
- uid: com.azure.storage.blob.BlobServiceClient.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: BlobServiceClient.getHttpPipeline()
  fullName: com.azure.storage.blob.BlobServiceClient.getHttpPipeline()
  overload: com.azure.storage.blob.BlobServiceClient.getHttpPipeline*
  type: Method
  package: com.azure.storage.blob
  summary: Gets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> powering this client.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: The pipeline.
- uid: com.azure.storage.blob.BlobServiceClient.getProperties()
  id: getProperties()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getProperties()
  nameWithType: BlobServiceClient.getProperties()
  fullName: com.azure.storage.blob.BlobServiceClient.getProperties()
  overload: com.azure.storage.blob.BlobServiceClient.getProperties*
  type: Method
  package: com.azure.storage.blob
  summary: "Gets the properties of a storage account\\\\u2019s Blob service. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobServiceProperties properties = client.getProperties();\n \n System.out.printf(\"Hour metrics enabled: %b, Minute metrics enabled: %b%n\",\n     properties.getHourMetrics().isEnabled(),\n     properties.getMinuteMetrics().isEnabled());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties"
  syntax:
    content: public BlobServiceProperties getProperties()
    return:
      type: com.azure.storage.blob.models.BlobServiceProperties
      description: The storage account properties.
- uid: com.azure.storage.blob.BlobServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getPropertiesWithResponse(Duration timeout, Context context)
  nameWithType: BlobServiceClient.getPropertiesWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.blob.BlobServiceClient.getPropertiesWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.blob.BlobServiceClient.getPropertiesWithResponse*
  type: Method
  package: com.azure.storage.blob
  summary: "Gets the properties of a storage account\\\\u2019s Blob service. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nContext context = new Context(\"Key\", \"Value\");\n BlobServiceProperties properties = client.getPropertiesWithResponse(timeout, context).getValue();\n \n System.out.printf(\"Hour metrics enabled: %b, Minute metrics enabled: %b%n\",\n     properties.getHourMetrics().isEnabled(),\n     properties.getMinuteMetrics().isEnabled());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties"
  syntax:
    content: public Response<BlobServiceProperties> getPropertiesWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobServiceProperties>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the storage account properties.
- uid: com.azure.storage.blob.BlobServiceClient.getServiceVersion()
  id: getServiceVersion()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getServiceVersion()
  nameWithType: BlobServiceClient.getServiceVersion()
  fullName: com.azure.storage.blob.BlobServiceClient.getServiceVersion()
  overload: com.azure.storage.blob.BlobServiceClient.getServiceVersion*
  type: Method
  package: com.azure.storage.blob
  summary: Gets the service version the client is using.
  syntax:
    content: public BlobServiceVersion getServiceVersion()
    return:
      type: com.azure.storage.blob.BlobServiceVersion
      description: the service version the client is using.
- uid: com.azure.storage.blob.BlobServiceClient.getStatistics()
  id: getStatistics()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getStatistics()
  nameWithType: BlobServiceClient.getStatistics()
  fullName: com.azure.storage.blob.BlobServiceClient.getStatistics()
  overload: com.azure.storage.blob.BlobServiceClient.getStatistics*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Retrieves statistics related to replication for the Blob service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the storage account. For more information, see the [Azure Docs][].


    **Code Samples**


    ```java

    System.out.printf("Geo-replication status: %s%n",
         client.getStatistics().getGeoReplication().getStatus());
    ```



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats
  syntax:
    content: public BlobServiceStatistics getStatistics()
    return:
      type: com.azure.storage.blob.models.BlobServiceStatistics
      description: The storage account statistics.
- uid: com.azure.storage.blob.BlobServiceClient.getStatisticsWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: getStatisticsWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getStatisticsWithResponse(Duration timeout, Context context)
  nameWithType: BlobServiceClient.getStatisticsWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.blob.BlobServiceClient.getStatisticsWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.blob.BlobServiceClient.getStatisticsWithResponse*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Retrieves statistics related to replication for the Blob service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the storage account. For more information, see the [Azure Docs][].


    **Code Samples**


    ```java

    System.out.printf("Geo-replication status: %s%n",
         client.getStatisticsWithResponse(timeout, context).getValue().getGeoReplication().getStatus());
    ```



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats
  syntax:
    content: public Response<BlobServiceStatistics> getStatisticsWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobServiceStatistics>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> the storage account statistics.
- uid: com.azure.storage.blob.BlobServiceClient.getUserDelegationKey(java.time.OffsetDateTime,java.time.OffsetDateTime)
  id: getUserDelegationKey(java.time.OffsetDateTime,java.time.OffsetDateTime)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getUserDelegationKey(OffsetDateTime start, OffsetDateTime expiry)
  nameWithType: BlobServiceClient.getUserDelegationKey(OffsetDateTime start, OffsetDateTime expiry)
  fullName: com.azure.storage.blob.BlobServiceClient.getUserDelegationKey(OffsetDateTime start, OffsetDateTime expiry)
  overload: com.azure.storage.blob.BlobServiceClient.getUserDelegationKey*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Gets a user delegation key for use with this account's blob storage. Note: This method call is only valid when using <xref uid="" data-throw-if-not-resolved="false">TokenCredential</xref> in this object's <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref>.


    **Code Samples**


    ```java

    System.out.printf("User delegation key: %s%n",
         client.getUserDelegationKey(delegationKeyStartTime, delegationKeyExpiryTime));
    ```
  syntax:
    content: public UserDelegationKey getUserDelegationKey(OffsetDateTime start, OffsetDateTime expiry)
    parameters:
    - id: start
      type: java.time.OffsetDateTime
      description: Start time for the key's validity. Null indicates immediate start.
    - id: expiry
      type: java.time.OffsetDateTime
      description: Expiration of the key's validity.
    return:
      type: com.azure.storage.blob.models.UserDelegationKey
      description: The user delegation key.
- uid: com.azure.storage.blob.BlobServiceClient.getUserDelegationKeyWithResponse(java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.Duration,com.azure.core.util.Context)
  id: getUserDelegationKeyWithResponse(java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: getUserDelegationKeyWithResponse(OffsetDateTime start, OffsetDateTime expiry, Duration timeout, Context context)
  nameWithType: BlobServiceClient.getUserDelegationKeyWithResponse(OffsetDateTime start, OffsetDateTime expiry, Duration timeout, Context context)
  fullName: com.azure.storage.blob.BlobServiceClient.getUserDelegationKeyWithResponse(OffsetDateTime start, OffsetDateTime expiry, Duration timeout, Context context)
  overload: com.azure.storage.blob.BlobServiceClient.getUserDelegationKeyWithResponse*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Gets a user delegation key for use with this account's blob storage. Note: This method call is only valid when using <xref uid="" data-throw-if-not-resolved="false">TokenCredential</xref> in this object's <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref>.


    **Code Samples**


    ```java

    System.out.printf("User delegation key: %s%n",
         client.getUserDelegationKeyWithResponse(delegationKeyStartTime, delegationKeyExpiryTime, timeout, context));
    ```
  syntax:
    content: public Response<UserDelegationKey> getUserDelegationKeyWithResponse(OffsetDateTime start, OffsetDateTime expiry, Duration timeout, Context context)
    parameters:
    - id: start
      type: java.time.OffsetDateTime
      description: Start time for the key's validity. Null indicates immediate start.
    - id: expiry
      type: java.time.OffsetDateTime
      description: Expiration of the key's validity.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.UserDelegationKey>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the user delegation key.
- uid: com.azure.storage.blob.BlobServiceClient.listBlobContainers()
  id: listBlobContainers()
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: listBlobContainers()
  nameWithType: BlobServiceClient.listBlobContainers()
  fullName: com.azure.storage.blob.BlobServiceClient.listBlobContainers()
  overload: com.azure.storage.blob.BlobServiceClient.listBlobContainers*
  type: Method
  package: com.azure.storage.blob
  summary: >-
    Returns a lazy loaded list of containers in this account. The returned <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> can be consumed while new items are automatically retrieved as needed. For more information, see the [Azure Docs][].


    **Code Samples**


    ```java

    client.listBlobContainers().forEach(container -> System.out.printf("Name: %s%n", container.getName()));

    ```



    [Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/list-containers2
  syntax:
    content: public PagedIterable<BlobContainerItem> listBlobContainers()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.storage.blob.models.BlobContainerItem>
      description: The list of containers.
- uid: com.azure.storage.blob.BlobServiceClient.listBlobContainers(com.azure.storage.blob.models.ListBlobContainersOptions,java.time.Duration)
  id: listBlobContainers(com.azure.storage.blob.models.ListBlobContainersOptions,java.time.Duration)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: listBlobContainers(ListBlobContainersOptions options, Duration timeout)
  nameWithType: BlobServiceClient.listBlobContainers(ListBlobContainersOptions options, Duration timeout)
  fullName: com.azure.storage.blob.BlobServiceClient.listBlobContainers(ListBlobContainersOptions options, Duration timeout)
  overload: com.azure.storage.blob.BlobServiceClient.listBlobContainers*
  type: Method
  package: com.azure.storage.blob
  summary: "Returns a lazy loaded list of containers in this account. The returned <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\">PagedIterable</xref> can be consumed while new items are automatically retrieved as needed. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nListBlobContainersOptions options = new ListBlobContainersOptions()\n     .setPrefix(\"containerNamePrefixToMatch\")\n     .setDetails(new BlobContainerListDetails().setRetrieveMetadata(true));\n \n client.listBlobContainers(options, timeout).forEach(container -> System.out.printf(\"Name: %s%n\", container.getName()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/list-containers2"
  syntax:
    content: public PagedIterable<BlobContainerItem> listBlobContainers(ListBlobContainersOptions options, Duration timeout)
    parameters:
    - id: options
      type: com.azure.storage.blob.models.ListBlobContainersOptions
      description: A <xref uid="com.azure.storage.blob.models.ListBlobContainersOptions" data-throw-if-not-resolved="false">ListBlobContainersOptions</xref> which specifies what data should be returned by the service.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.storage.blob.models.BlobContainerItem>
      description: The list of containers.
- uid: com.azure.storage.blob.BlobServiceClient.setProperties(com.azure.storage.blob.models.BlobServiceProperties)
  id: setProperties(com.azure.storage.blob.models.BlobServiceProperties)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: setProperties(BlobServiceProperties properties)
  nameWithType: BlobServiceClient.setProperties(BlobServiceProperties properties)
  fullName: com.azure.storage.blob.BlobServiceClient.setProperties(BlobServiceProperties properties)
  overload: com.azure.storage.blob.BlobServiceClient.setProperties*
  type: Method
  package: com.azure.storage.blob
  summary: "Sets properties for a storage account's Blob service endpoint. For more information, see the [Azure Docs][]. Note that setting the default service version has no effect when using this client because this client explicitly sets the version header on each request, overriding the default.\n\nThis method checks to ensure the properties being sent follow the specifications indicated in the Azure Docs. If CORS policies are set, CORS parameters that are not set default to the empty string.\n\n**Code Samples**\n\n```java\nBlobRetentionPolicy loggingRetentionPolicy = new BlobRetentionPolicy().setEnabled(true).setDays(3);\n BlobRetentionPolicy metricsRetentionPolicy = new BlobRetentionPolicy().setEnabled(true).setDays(1);\n \n BlobServiceProperties properties = new BlobServiceProperties()\n     .setLogging(new BlobAnalyticsLogging()\n         .setWrite(true)\n         .setDelete(true)\n         .setRetentionPolicy(loggingRetentionPolicy))\n     .setHourMetrics(new BlobMetrics()\n         .setEnabled(true)\n         .setRetentionPolicy(metricsRetentionPolicy))\n     .setMinuteMetrics(new BlobMetrics()\n         .setEnabled(true)\n         .setRetentionPolicy(metricsRetentionPolicy));\n \n try {\n     client.setProperties(properties);\n     System.out.printf(\"Setting properties completed%n\");\n } catch (UnsupportedOperationException error) {\n     System.out.printf(\"Setting properties failed: %s%n\", error);\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties"
  syntax:
    content: public void setProperties(BlobServiceProperties properties)
    parameters:
    - id: properties
      type: com.azure.storage.blob.models.BlobServiceProperties
      description: Configures the service.
- uid: com.azure.storage.blob.BlobServiceClient.setPropertiesWithResponse(com.azure.storage.blob.models.BlobServiceProperties,java.time.Duration,com.azure.core.util.Context)
  id: setPropertiesWithResponse(com.azure.storage.blob.models.BlobServiceProperties,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.7.0-beta.1
  parent: com.azure.storage.blob.BlobServiceClient
  langs:
  - java
  name: setPropertiesWithResponse(BlobServiceProperties properties, Duration timeout, Context context)
  nameWithType: BlobServiceClient.setPropertiesWithResponse(BlobServiceProperties properties, Duration timeout, Context context)
  fullName: com.azure.storage.blob.BlobServiceClient.setPropertiesWithResponse(BlobServiceProperties properties, Duration timeout, Context context)
  overload: com.azure.storage.blob.BlobServiceClient.setPropertiesWithResponse*
  type: Method
  package: com.azure.storage.blob
  summary: "Sets properties for a storage account's Blob service endpoint. For more information, see the [Azure Docs][]. Note that setting the default service version has no effect when using this client because this client explicitly sets the version header on each request, overriding the default.\n\nThis method checks to ensure the properties being sent follow the specifications indicated in the Azure Docs. If CORS policies are set, CORS parameters that are not set default to the empty string.\n\n**Code Samples**\n\n```java\nBlobRetentionPolicy loggingRetentionPolicy = new BlobRetentionPolicy().setEnabled(true).setDays(3);\n BlobRetentionPolicy metricsRetentionPolicy = new BlobRetentionPolicy().setEnabled(true).setDays(1);\n \n BlobServiceProperties properties = new BlobServiceProperties()\n     .setLogging(new BlobAnalyticsLogging()\n         .setWrite(true)\n         .setDelete(true)\n         .setRetentionPolicy(loggingRetentionPolicy))\n     .setHourMetrics(new BlobMetrics()\n         .setEnabled(true)\n         .setRetentionPolicy(metricsRetentionPolicy))\n     .setMinuteMetrics(new BlobMetrics()\n         .setEnabled(true)\n         .setRetentionPolicy(metricsRetentionPolicy));\n \n Context context = new Context(\"Key\", \"Value\");\n \n System.out.printf(\"Setting properties completed with status %d%n\",\n     client.setPropertiesWithResponse(properties, timeout, context).getStatusCode());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties"
  syntax:
    content: public Response<Void> setPropertiesWithResponse(BlobServiceProperties properties, Duration timeout, Context context)
    parameters:
    - id: properties
      type: com.azure.storage.blob.models.BlobServiceProperties
      description: Configures the service.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The storage account properties.
references:
- uid: com.azure.storage.blob.BlobServiceAsyncClient
  name: BlobServiceAsyncClient
  nameWithType: BlobServiceAsyncClient
  fullName: com.azure.storage.blob.BlobServiceAsyncClient
- uid: com.azure.storage.blob.BlobServiceClient.BlobServiceClient*
  name: BlobServiceClient
  nameWithType: BlobServiceClient.BlobServiceClient
  fullName: com.azure.storage.blob.BlobServiceClient.BlobServiceClient
  package: com.azure.storage.blob
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.blob.BlobContainerClient
  name: BlobContainerClient
  nameWithType: BlobContainerClient
  fullName: com.azure.storage.blob.BlobContainerClient
- uid: com.azure.storage.blob.BlobServiceClient.getBlobContainerClient*
  name: getBlobContainerClient
  nameWithType: BlobServiceClient.getBlobContainerClient
  fullName: com.azure.storage.blob.BlobServiceClient.getBlobContainerClient
  package: com.azure.storage.blob
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.storage.blob.BlobServiceClient.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: BlobServiceClient.getHttpPipeline
  fullName: com.azure.storage.blob.BlobServiceClient.getHttpPipeline
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.BlobServiceVersion
  name: BlobServiceVersion
  nameWithType: BlobServiceVersion
  fullName: com.azure.storage.blob.BlobServiceVersion
- uid: com.azure.storage.blob.BlobServiceClient.getServiceVersion*
  name: getServiceVersion
  nameWithType: BlobServiceClient.getServiceVersion
  fullName: com.azure.storage.blob.BlobServiceClient.getServiceVersion
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.BlobServiceClient.createBlobContainer*
  name: createBlobContainer
  nameWithType: BlobServiceClient.createBlobContainer
  fullName: com.azure.storage.blob.BlobServiceClient.createBlobContainer
  package: com.azure.storage.blob
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.models.PublicAccessType
  name: PublicAccessType
  nameWithType: PublicAccessType
  fullName: com.azure.storage.blob.models.PublicAccessType
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.BlobContainerClient>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.BlobContainerClient
    name: BlobContainerClient
    fullName: com.azure.storage.blob.BlobContainerClient
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.BlobServiceClient.createBlobContainerWithResponse*
  name: createBlobContainerWithResponse
  nameWithType: BlobServiceClient.createBlobContainerWithResponse
  fullName: com.azure.storage.blob.BlobServiceClient.createBlobContainerWithResponse
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.BlobServiceClient.deleteBlobContainer*
  name: deleteBlobContainer
  nameWithType: BlobServiceClient.deleteBlobContainer
  fullName: com.azure.storage.blob.BlobServiceClient.deleteBlobContainer
  package: com.azure.storage.blob
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.BlobServiceClient.deleteBlobContainerWithResponse*
  name: deleteBlobContainerWithResponse
  nameWithType: BlobServiceClient.deleteBlobContainerWithResponse
  fullName: com.azure.storage.blob.BlobServiceClient.deleteBlobContainerWithResponse
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.BlobServiceClient.getAccountUrl*
  name: getAccountUrl
  nameWithType: BlobServiceClient.getAccountUrl
  fullName: com.azure.storage.blob.BlobServiceClient.getAccountUrl
  package: com.azure.storage.blob
- uid: com.azure.core.http.rest.PagedIterable<com.azure.storage.blob.models.BlobContainerItem>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobContainerItem
    name: BlobContainerItem
    fullName: com.azure.storage.blob.models.BlobContainerItem
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.BlobServiceClient.listBlobContainers*
  name: listBlobContainers
  nameWithType: BlobServiceClient.listBlobContainers
  fullName: com.azure.storage.blob.BlobServiceClient.listBlobContainers
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.models.ListBlobContainersOptions
  name: ListBlobContainersOptions
  nameWithType: ListBlobContainersOptions
  fullName: com.azure.storage.blob.models.ListBlobContainersOptions
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.storage.blob.models.BlobServiceProperties
  name: BlobServiceProperties
  nameWithType: BlobServiceProperties
  fullName: com.azure.storage.blob.models.BlobServiceProperties
- uid: com.azure.storage.blob.BlobServiceClient.getProperties*
  name: getProperties
  nameWithType: BlobServiceClient.getProperties
  fullName: com.azure.storage.blob.BlobServiceClient.getProperties
  package: com.azure.storage.blob
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobServiceProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobServiceProperties
    name: BlobServiceProperties
    fullName: com.azure.storage.blob.models.BlobServiceProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.BlobServiceClient.getPropertiesWithResponse*
  name: getPropertiesWithResponse
  nameWithType: BlobServiceClient.getPropertiesWithResponse
  fullName: com.azure.storage.blob.BlobServiceClient.getPropertiesWithResponse
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.BlobServiceClient.setProperties*
  name: setProperties
  nameWithType: BlobServiceClient.setProperties
  fullName: com.azure.storage.blob.BlobServiceClient.setProperties
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.BlobServiceClient.setPropertiesWithResponse*
  name: setPropertiesWithResponse
  nameWithType: BlobServiceClient.setPropertiesWithResponse
  fullName: com.azure.storage.blob.BlobServiceClient.setPropertiesWithResponse
  package: com.azure.storage.blob
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: com.azure.storage.blob.models.UserDelegationKey
  name: UserDelegationKey
  nameWithType: UserDelegationKey
  fullName: com.azure.storage.blob.models.UserDelegationKey
- uid: com.azure.storage.blob.BlobServiceClient.getUserDelegationKey*
  name: getUserDelegationKey
  nameWithType: BlobServiceClient.getUserDelegationKey
  fullName: com.azure.storage.blob.BlobServiceClient.getUserDelegationKey
  package: com.azure.storage.blob
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.UserDelegationKey>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.UserDelegationKey
    name: UserDelegationKey
    fullName: com.azure.storage.blob.models.UserDelegationKey
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.BlobServiceClient.getUserDelegationKeyWithResponse*
  name: getUserDelegationKeyWithResponse
  nameWithType: BlobServiceClient.getUserDelegationKeyWithResponse
  fullName: com.azure.storage.blob.BlobServiceClient.getUserDelegationKeyWithResponse
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.models.BlobServiceStatistics
  name: BlobServiceStatistics
  nameWithType: BlobServiceStatistics
  fullName: com.azure.storage.blob.models.BlobServiceStatistics
- uid: com.azure.storage.blob.BlobServiceClient.getStatistics*
  name: getStatistics
  nameWithType: BlobServiceClient.getStatistics
  fullName: com.azure.storage.blob.BlobServiceClient.getStatistics
  package: com.azure.storage.blob
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobServiceStatistics>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobServiceStatistics
    name: BlobServiceStatistics
    fullName: com.azure.storage.blob.models.BlobServiceStatistics
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.BlobServiceClient.getStatisticsWithResponse*
  name: getStatisticsWithResponse
  nameWithType: BlobServiceClient.getStatisticsWithResponse
  fullName: com.azure.storage.blob.BlobServiceClient.getStatisticsWithResponse
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.models.StorageAccountInfo
  name: StorageAccountInfo
  nameWithType: StorageAccountInfo
  fullName: com.azure.storage.blob.models.StorageAccountInfo
- uid: com.azure.storage.blob.BlobServiceClient.getAccountInfo*
  name: getAccountInfo
  nameWithType: BlobServiceClient.getAccountInfo
  fullName: com.azure.storage.blob.BlobServiceClient.getAccountInfo
  package: com.azure.storage.blob
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.StorageAccountInfo>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.StorageAccountInfo
    name: StorageAccountInfo
    fullName: com.azure.storage.blob.models.StorageAccountInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.BlobServiceClient.getAccountInfoWithResponse*
  name: getAccountInfoWithResponse
  nameWithType: BlobServiceClient.getAccountInfoWithResponse
  fullName: com.azure.storage.blob.BlobServiceClient.getAccountInfoWithResponse
  package: com.azure.storage.blob
- uid: com.azure.storage.blob.BlobServiceClient.getAccountName*
  name: getAccountName
  nameWithType: BlobServiceClient.getAccountName
  fullName: com.azure.storage.blob.BlobServiceClient.getAccountName
  package: com.azure.storage.blob
- uid: com.azure.storage.common.sas.AccountSasSignatureValues
  spec.java:
  - uid: com.azure.storage.common.sas.AccountSasSignatureValues
    name: AccountSasSignatureValues
    fullName: com.azure.storage.common.sas.AccountSasSignatureValues
- uid: com.azure.storage.blob.BlobServiceClient.generateAccountSas*
  name: generateAccountSas
  nameWithType: BlobServiceClient.generateAccountSas
  fullName: com.azure.storage.blob.BlobServiceClient.generateAccountSas
  package: com.azure.storage.blob
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.storage.blob.models.BlobContainerItem
  name: BlobContainerItem
  nameWithType: BlobContainerItem
  fullName: com.azure.storage.blob.models.BlobContainerItem
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
