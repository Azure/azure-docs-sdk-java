### YamlMime:JavaType
uid: "com.azure.search.documents.models.RangeFacetResult"
fullName: "com.azure.search.documents.models.RangeFacetResult<T>"
name: "RangeFacetResult<T>"
nameWithType: "RangeFacetResult<T>"
summary: "A single bucket of a range facet query result that reports the number of documents with a field value falling within a particular range."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RangeFacetResult<T>"
constructors:
- uid: "com.azure.search.documents.models.RangeFacetResult.RangeFacetResult(com.azure.search.documents.models.FacetResult)"
  fullName: "com.azure.search.documents.models.RangeFacetResult<T>.RangeFacetResult(FacetResult facetResult)"
  name: "RangeFacetResult(FacetResult facetResult)"
  nameWithType: "RangeFacetResult<T>.RangeFacetResult(FacetResult facetResult)"
  summary: "Constructor from <xref uid=\"com.azure.search.documents.models.FacetResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FacetResult\"></xref>"
  parameters:
  - description: "<xref uid=\"com.azure.search.documents.models.FacetResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FacetResult\"></xref>."
    name: "facetResult"
    type: "<xref href=\"com.azure.search.documents.models.FacetResult?alt=com.azure.search.documents.models.FacetResult&text=FacetResult\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RangeFacetResult(FacetResult facetResult)"
  desc: "Constructor from <xref uid=\"com.azure.search.documents.models.FacetResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FacetResult\"></xref>"
- uid: "com.azure.search.documents.models.RangeFacetResult.RangeFacetResult(java.lang.Long,T,T)"
  fullName: "com.azure.search.documents.models.RangeFacetResult<T>.RangeFacetResult(Long count, T from, T to)"
  name: "RangeFacetResult(Long count, T from, T to)"
  nameWithType: "RangeFacetResult<T>.RangeFacetResult(Long count, T from, T to)"
  summary: "Constructor of Range<wbr>Facet<wbr>Result."
  parameters:
  - description: "The count of the result."
    name: "count"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Value indicates the lower bound of facet's range"
    name: "from"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "Value indicates the upper bound of facet's range"
    name: "to"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RangeFacetResult(Long count, T from, T to)"
  desc: "Constructor of RangeFacetResult."
methods:
- uid: "com.azure.search.documents.models.RangeFacetResult.getCount()"
  fullName: "com.azure.search.documents.models.RangeFacetResult<T>.getCount()"
  name: "getCount()"
  nameWithType: "RangeFacetResult<T>.getCount()"
  summary: "Gets the approximate count of documents falling within the bucket described by this facet."
  syntax: "public Long getCount()"
  desc: "Gets the approximate count of documents falling within the bucket described by this facet."
  returns:
    description: "count"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.RangeFacetResult.getFrom()"
  fullName: "com.azure.search.documents.models.RangeFacetResult<T>.getFrom()"
  name: "getFrom()"
  nameWithType: "RangeFacetResult<T>.getFrom()"
  summary: "Gets a value indicating the inclusive lower bound of the facet's range, or null to indicate that there is no lower bound (i.<wbr>e."
  syntax: "public T getFrom()"
  desc: "Gets a value indicating the inclusive lower bound of the facet's range, or null to indicate that there is no lower bound (i.e. -- for the first bucket)."
  returns:
    description: "from"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.RangeFacetResult.getTo()"
  fullName: "com.azure.search.documents.models.RangeFacetResult<T>.getTo()"
  name: "getTo()"
  nameWithType: "RangeFacetResult<T>.getTo()"
  summary: "Gets a value indicating the exclusive upper bound of the facet's range, or null to indicate that there is no upper bound (i.<wbr>e."
  syntax: "public T getTo()"
  desc: "Gets a value indicating the exclusive upper bound of the facet's range, or null to indicate that there is no upper bound (i.e. -- for the last bucket)."
  returns:
    description: "to"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "class"
typeParameters:
- name: "T"
desc: "A single bucket of a range facet query result that reports the number of documents with a field value falling within a particular range."
metadata: {}
package: "com.azure.search.documents.models"
artifact: com.azure:azure-search-documents:11.4.13
