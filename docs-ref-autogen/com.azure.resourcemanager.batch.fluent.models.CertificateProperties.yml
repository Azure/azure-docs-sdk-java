### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties"
fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties"
name: "CertificateProperties"
nameWithType: "CertificateProperties"
summary: "Certificate properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.batch.models.CertificateBaseProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.batch.models.CertificateBaseProperties.format()"
- "com.azure.resourcemanager.batch.models.CertificateBaseProperties.thumbprint()"
- "com.azure.resourcemanager.batch.models.CertificateBaseProperties.thumbprintAlgorithm()"
- "com.azure.resourcemanager.batch.models.CertificateBaseProperties.validate()"
- "com.azure.resourcemanager.batch.models.CertificateBaseProperties.withFormat(com.azure.resourcemanager.batch.models.CertificateFormat)"
- "com.azure.resourcemanager.batch.models.CertificateBaseProperties.withThumbprint(java.lang.String)"
- "com.azure.resourcemanager.batch.models.CertificateBaseProperties.withThumbprintAlgorithm(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CertificateProperties extends CertificateBaseProperties"
constructors:
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.CertificateProperties()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.CertificateProperties()"
  name: "CertificateProperties()"
  nameWithType: "CertificateProperties.CertificateProperties()"
  syntax: "public CertificateProperties()"
methods:
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.deleteCertificateError()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.deleteCertificateError()"
  name: "deleteCertificateError()"
  nameWithType: "CertificateProperties.deleteCertificateError()"
  summary: "Get the delete<wbr>Certificate<wbr>Error property: This is only returned when the certificate provisioning<wbr>State is 'Failed'."
  syntax: "public DeleteCertificateError deleteCertificateError()"
  desc: "Get the deleteCertificateError property: This is only returned when the certificate provisioningState is 'Failed'."
  returns:
    description: "the deleteCertificateError value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DeleteCertificateError?alt=com.azure.resourcemanager.batch.models.DeleteCertificateError&text=DeleteCertificateError\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.previousProvisioningState()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.previousProvisioningState()"
  name: "previousProvisioningState()"
  nameWithType: "CertificateProperties.previousProvisioningState()"
  summary: "Get the previous<wbr>Provisioning<wbr>State property: The previous provisioned state of the resource."
  syntax: "public CertificateProvisioningState previousProvisioningState()"
  desc: "Get the previousProvisioningState property: The previous provisioned state of the resource."
  returns:
    description: "the previousProvisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.CertificateProvisioningState?alt=com.azure.resourcemanager.batch.models.CertificateProvisioningState&text=CertificateProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.previousProvisioningStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.previousProvisioningStateTransitionTime()"
  name: "previousProvisioningStateTransitionTime()"
  nameWithType: "CertificateProperties.previousProvisioningStateTransitionTime()"
  summary: "Get the previous<wbr>Provisioning<wbr>State<wbr>Transition<wbr>Time property: The time at which the certificate entered its previous state."
  syntax: "public OffsetDateTime previousProvisioningStateTransitionTime()"
  desc: "Get the previousProvisioningStateTransitionTime property: The time at which the certificate entered its previous state."
  returns:
    description: "the previousProvisioningStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "CertificateProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning<wbr>State property."
  syntax: "public CertificateProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioningState property."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.CertificateProvisioningState?alt=com.azure.resourcemanager.batch.models.CertificateProvisioningState&text=CertificateProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.provisioningStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.provisioningStateTransitionTime()"
  name: "provisioningStateTransitionTime()"
  nameWithType: "CertificateProperties.provisioningStateTransitionTime()"
  summary: "Get the provisioning<wbr>State<wbr>Transition<wbr>Time property: The time at which the certificate entered its current state."
  syntax: "public OffsetDateTime provisioningStateTransitionTime()"
  desc: "Get the provisioningStateTransitionTime property: The time at which the certificate entered its current state."
  returns:
    description: "the provisioningStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.publicData()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.publicData()"
  name: "publicData()"
  nameWithType: "CertificateProperties.publicData()"
  summary: "Get the public<wbr>Data property: The public key of the certificate."
  syntax: "public String publicData()"
  desc: "Get the publicData property: The public key of the certificate."
  returns:
    description: "the publicData value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.validate()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.validate()"
  name: "validate()"
  nameWithType: "CertificateProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.batch.models.CertificateBaseProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.withFormat(com.azure.resourcemanager.batch.models.CertificateFormat)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.withFormat(CertificateFormat format)"
  name: "withFormat(CertificateFormat format)"
  nameWithType: "CertificateProperties.withFormat(CertificateFormat format)"
  summary: "Set the format property: The format of the certificate - either Pfx or Cer."
  overridden: "com.azure.resourcemanager.batch.models.CertificateBaseProperties.withFormat(com.azure.resourcemanager.batch.models.CertificateFormat)"
  parameters:
  - name: "format"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.CertificateFormat?alt=com.azure.resourcemanager.batch.models.CertificateFormat&text=CertificateFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificateProperties withFormat(CertificateFormat format)"
  desc: "Set the format property: The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.CertificateProperties?alt=com.azure.resourcemanager.batch.fluent.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.withThumbprint(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.withThumbprint(String thumbprint)"
  name: "withThumbprint(String thumbprint)"
  nameWithType: "CertificateProperties.withThumbprint(String thumbprint)"
  summary: "Set the thumbprint property: The thumbprint of the certificate."
  overridden: "com.azure.resourcemanager.batch.models.CertificateBaseProperties.withThumbprint(java.lang.String)"
  parameters:
  - name: "thumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificateProperties withThumbprint(String thumbprint)"
  desc: "Set the thumbprint property: The thumbprint of the certificate. This must match the thumbprint from the name."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.CertificateProperties?alt=com.azure.resourcemanager.batch.fluent.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.withThumbprintAlgorithm(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.CertificateProperties.withThumbprintAlgorithm(String thumbprintAlgorithm)"
  name: "withThumbprintAlgorithm(String thumbprintAlgorithm)"
  nameWithType: "CertificateProperties.withThumbprintAlgorithm(String thumbprintAlgorithm)"
  summary: "Set the thumbprint<wbr>Algorithm property: The algorithm of the certificate thumbprint."
  overridden: "com.azure.resourcemanager.batch.models.CertificateBaseProperties.withThumbprintAlgorithm(java.lang.String)"
  parameters:
  - name: "thumbprintAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificateProperties withThumbprintAlgorithm(String thumbprintAlgorithm)"
  desc: "Set the thumbprintAlgorithm property: The algorithm of the certificate thumbprint. This must match the first portion of the certificate name. Currently required to be 'SHA1'."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.CertificateProperties?alt=com.azure.resourcemanager.batch.fluent.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Certificate properties."
metadata: {}
package: "com.azure.resourcemanager.batch.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:1.0.0
