### YamlMime:JavaType
uid: "com.microsoft.azure.management.redis.RedisCache.Update"
fullName: "com.microsoft.azure.management.redis.RedisCache.Update"
name: "RedisCache.Update"
nameWithType: "RedisCache.Update"
summary: "The template for a Redis Cache update operation, containing all the settings that can be modified."
syntax: "public static interface RedisCache.Update extends Appliable<RedisCache>, Resource.UpdateWithTags<RedisCache.Update>, RedisCache.UpdateStages.WithSku, RedisCache.UpdateStages.WithNonSslPort, RedisCache.UpdateStages.WithRedisConfiguration"
methods:
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(com.microsoft.azure.management.redis.RedisFirewallRule)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(RedisFirewallRule rule)"
  name: "withFirewallRule(RedisFirewallRule rule)"
  nameWithType: "RedisCache.Update.withFirewallRule(RedisFirewallRule rule)"
  summary: "Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache."
  modifiers:
  - "abstract"
  parameters:
  - description: "firewall rule that specifies name, lowest and highest IP address included in the range of permitted IP addresses."
    name: "rule"
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisFirewallRule?alt=com.microsoft.azure.management.redis.RedisFirewallRule&text=RedisFirewallRule\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisCache.Update withFirewallRule(RedisFirewallRule rule)"
  desc: "Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache."
  returns:
    description: "the next stage of Redis Cache update."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(String name, String lowestIp, String highestIp)"
  name: "withFirewallRule(String name, String lowestIp, String highestIp)"
  nameWithType: "RedisCache.Update.withFirewallRule(String name, String lowestIp, String highestIp)"
  summary: "Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache."
  modifiers:
  - "abstract"
  parameters:
  - description: "name of the rule."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "lowest IP address included in the range."
    name: "lowestIp"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "highest IP address included in the range."
    name: "highestIp"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisCache.Update withFirewallRule(String name, String lowestIp, String highestIp)"
  desc: "Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache."
  returns:
    description: "the next stage of Redis Cache update."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withMinimumTlsVersion(com.microsoft.azure.management.redis.TlsVersion)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withMinimumTlsVersion(TlsVersion tlsVersion)"
  name: "withMinimumTlsVersion(TlsVersion tlsVersion)"
  nameWithType: "RedisCache.Update.withMinimumTlsVersion(TlsVersion tlsVersion)"
  summary: "Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  modifiers:
  - "abstract"
  parameters:
  - description: "minimum TLS version."
    name: "tlsVersion"
    type: "<xref href=\"com.microsoft.azure.management.redis.TlsVersion?alt=com.microsoft.azure.management.redis.TlsVersion&text=TlsVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisCache.Update withMinimumTlsVersion(TlsVersion tlsVersion)"
  desc: "Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  returns:
    description: "the next stage of Redis Cache definition."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)"
  name: "withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)"
  nameWithType: "RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)"
  summary: "Adds Patch schedule to the current Premium Cluster Cache."
  modifiers:
  - "abstract"
  parameters:
  - description: "day of week when cache can be patched."
    name: "dayOfWeek"
    type: "<xref href=\"com.microsoft.azure.management.redis.DayOfWeek?alt=com.microsoft.azure.management.redis.DayOfWeek&text=DayOfWeek\" data-throw-if-not-resolved=\"False\" />"
  - description: "start hour after which cache patching can start."
    name: "startHourUtc"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisCache.Update withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)"
  desc: "Adds Patch schedule to the current Premium Cluster Cache."
  returns:
    description: "the next stage of Redis Cache with Premium SKU definition."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int,org.joda.time.Period)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)"
  name: "withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)"
  nameWithType: "RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)"
  summary: "Adds Patch schedule to the current Premium Cluster Cache."
  modifiers:
  - "abstract"
  parameters:
  - description: "day of week when cache can be patched."
    name: "dayOfWeek"
    type: "<xref href=\"com.microsoft.azure.management.redis.DayOfWeek?alt=com.microsoft.azure.management.redis.DayOfWeek&text=DayOfWeek\" data-throw-if-not-resolved=\"False\" />"
  - description: "start hour after which cache patching can start."
    name: "startHourUtc"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "ISO8601 timespan specifying how much time cache patching can take."
    name: "maintenanceWindow"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisCache.Update withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)"
  desc: "Adds Patch schedule to the current Premium Cluster Cache."
  returns:
    description: "the next stage of Redis Cache with Premium SKU definition."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.ScheduleEntry)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(ScheduleEntry scheduleEntry)"
  name: "withPatchSchedule(ScheduleEntry scheduleEntry)"
  nameWithType: "RedisCache.Update.withPatchSchedule(ScheduleEntry scheduleEntry)"
  summary: "Adds Patch schedule to the current Premium Cluster Cache."
  modifiers:
  - "abstract"
  parameters:
  - description: "Patch schedule entry for Premium Redis Cache."
    name: "scheduleEntry"
    type: "<xref href=\"com.microsoft.azure.management.redis.ScheduleEntry?alt=com.microsoft.azure.management.redis.ScheduleEntry&text=ScheduleEntry\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisCache.Update withPatchSchedule(ScheduleEntry scheduleEntry)"
  desc: "Adds Patch schedule to the current Premium Cluster Cache."
  returns:
    description: "the next stage of Redis Cache with Premium SKU definition."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(List<ScheduleEntry> scheduleEntry)"
  name: "withPatchSchedule(List<ScheduleEntry> scheduleEntry)"
  nameWithType: "RedisCache.Update.withPatchSchedule(List<ScheduleEntry> scheduleEntry)"
  summary: "Adds Patch schedule to the current Premium Cluster Cache."
  modifiers:
  - "abstract"
  parameters:
  - description: "List of patch schedule entries for Premium Redis Cache."
    name: "scheduleEntry"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.redis.ScheduleEntry?alt=com.microsoft.azure.management.redis.ScheduleEntry&text=ScheduleEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract RedisCache.Update withPatchSchedule(List<ScheduleEntry> scheduleEntry)"
  desc: "Adds Patch schedule to the current Premium Cluster Cache."
  returns:
    description: "the next stage of Redis Cache with Premium SKU definition."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int shardCount)"
  name: "withShardCount(int shardCount)"
  nameWithType: "RedisCache.Update.withShardCount(int shardCount)"
  summary: "The number of shards to be created on a Premium Cluster Cache."
  modifiers:
  - "abstract"
  parameters:
  - description: "the shard count value to set."
    name: "shardCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisCache.Update withShardCount(int shardCount)"
  desc: "The number of shards to be created on a Premium Cluster Cache."
  returns:
    description: "the next stage of Redis Cache update."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withoutFirewallRule(java.lang.String)"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withoutFirewallRule(String name)"
  name: "withoutFirewallRule(String name)"
  nameWithType: "RedisCache.Update.withoutFirewallRule(String name)"
  summary: "Deletes a single firewall rule in the current Redis cache instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "name of the rule."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisCache.Update withoutFirewallRule(String name)"
  desc: "Deletes a single firewall rule in the current Redis cache instance."
  returns:
    description: "the next stage of Redis Cache update."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withoutMinimumTlsVersion()"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withoutMinimumTlsVersion()"
  name: "withoutMinimumTlsVersion()"
  nameWithType: "RedisCache.Update.withoutMinimumTlsVersion()"
  summary: "Removes the requirement for clients minimum TLS version."
  modifiers:
  - "abstract"
  syntax: "public abstract RedisCache.Update withoutMinimumTlsVersion()"
  desc: "Removes the requirement for clients minimum TLS version."
  returns:
    description: "the next stage of Redis Cache definition."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCache.Update.withoutPatchSchedule()"
  fullName: "com.microsoft.azure.management.redis.RedisCache.Update.withoutPatchSchedule()"
  name: "withoutPatchSchedule()"
  nameWithType: "RedisCache.Update.withoutPatchSchedule()"
  summary: "Removes all Patch schedules from the current Premium Cluster Cache."
  modifiers:
  - "abstract"
  syntax: "public abstract RedisCache.Update withoutPatchSchedule()"
  desc: "Removes all Patch schedules from the current Premium Cluster Cache."
  returns:
    description: "the next stage of Redis Cache with Premium SKU definition."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The template for a Redis Cache update operation, containing all the settings that can be modified."
implements:
- "<xref href=\"com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort?alt=com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort&text=WithNonSslPort\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration?alt=com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration&text=WithRedisConfiguration\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku?alt=com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku&text=WithSku\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags&text=UpdateWithTags\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Appliable?alt=com.microsoft.azure.management.resources.fluentcore.model.Appliable&text=Appliable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.redis.RedisCache?alt=com.microsoft.azure.management.redis.RedisCache&text=RedisCache\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.redis"
artifact: com.microsoft.azure:azure-mgmt-redis:1.41.4
