### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.redis.RedisCache.Update
  id: Update
  parent: com.microsoft.azure.management.redis
  children:
  - com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek,int)
  - com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek,int,Period)
  - com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(List<ScheduleEntry>)
  - com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(ScheduleEntry)
  - com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int)
  - com.microsoft.azure.management.redis.RedisCache.Update.withStaticIP(String)
  - com.microsoft.azure.management.redis.RedisCache.Update.withSubnet(HasId,String)
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  langs:
  - java
  name: RedisCache.Update
  nameWithType: RedisCache.Update
  fullName: com.microsoft.azure.management.redis.RedisCache.Update
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 430
  package: com.microsoft.azure.management.redis
  summary: "<p>The template for a Redis Cache update operation, containing all the settings that can be modified. </p>"
  syntax: &o1
    content: public interface Update extends Appliable<RedisCache>,Resource.UpdateWithTags<Update>,RedisCache.UpdateStages.WithSku,RedisCache.UpdateStages.WithNonSslPort,RedisCache.UpdateStages.WithRedisConfiguration
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withBasicSku(int)
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.withNonSslPort()
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.withoutNonSslPort()
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration()
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration(String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withPremiumSku()
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withPremiumSku(int)
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(Map<String, String>)
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(String,String)
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withStandardSku()
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withStandardSku(int)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek,int)
  id: withPatchSchedule(DayOfWeek,int)
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  langs:
  - java
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  nameWithType: RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 469
  package: com.microsoft.azure.management.redis
  summary: "<p>Patch schedule on a Premium Cluster Cache.</p>\r\n<p></p>"
  syntax:
    content: public Update withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
    parameters:
    - id: dayOfWeek
      type: com.microsoft.azure.management.redis.DayOfWeek
      description: <p>day of week when cache can be patched. </p>
    - id: startHourUtc
      type: f75371fa
      description: <p>start hour after which cache patching can start. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek,int,Period)
  id: withPatchSchedule(DayOfWeek,int,Period)
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  langs:
  - java
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  nameWithType: RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 479
  package: com.microsoft.azure.management.redis
  summary: "<p>The number of shards to be created on a Premium Cluster Cache.</p>\r\n<p></p>"
  syntax:
    content: public Update withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
    parameters:
    - id: dayOfWeek
      type: com.microsoft.azure.management.redis.DayOfWeek
      description: <p>day of week when cache can be patched. </p>
    - id: startHourUtc
      type: f75371fa
      description: <p>start hour after which cache patching can start. </p>
    - id: maintenanceWindow
      type: "6e600119"
      description: <p>ISO8601 timespan specifying how much time cache patching can take. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(List<ScheduleEntry>)
  id: withPatchSchedule(List<ScheduleEntry>)
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  langs:
  - java
  name: withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  nameWithType: RedisCache.Update.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 495
  package: com.microsoft.azure.management.redis
  summary: "<p>Patch schedule on a Premium Cluster Cache.</p>\r\n<p></p>"
  syntax:
    content: public Update withPatchSchedule(List<ScheduleEntry> scheduleEntry)
    parameters:
    - id: scheduleEntry
      type: 5618da2dcom.microsoft.azure.management.redis.ScheduleEntrya08ddfce
      description: <p>List of patch schedule entries for Premium Redis Cache. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(ScheduleEntry)
  id: withPatchSchedule(ScheduleEntry)
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  langs:
  - java
  name: withPatchSchedule(ScheduleEntry scheduleEntry)
  nameWithType: RedisCache.Update.withPatchSchedule(ScheduleEntry scheduleEntry)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(ScheduleEntry scheduleEntry)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 487
  package: com.microsoft.azure.management.redis
  summary: "<p>Patch schedule on a Premium Cluster Cache.</p>\r\n<p></p>"
  syntax:
    content: public Update withPatchSchedule(ScheduleEntry scheduleEntry)
    parameters:
    - id: scheduleEntry
      type: com.microsoft.azure.management.redis.ScheduleEntry
      description: <p>Patch schedule entry for Premium Redis Cache. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int)
  id: withShardCount(int)
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  langs:
  - java
  name: withShardCount(int shardCount)
  nameWithType: RedisCache.Update.withShardCount(int shardCount)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int shardCount)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 460
  package: com.microsoft.azure.management.redis
  summary: "<p>The number of shards to be created on a Premium Cluster Cache.</p>\r\n<p></p>"
  syntax:
    content: public Update withShardCount(int shardCount)
    parameters:
    - id: shardCount
      type: f75371fa
      description: <p>the shard count value to set. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withStaticIP(String)
  id: withStaticIP(String)
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  langs:
  - java
  name: withStaticIP(String staticIP)
  nameWithType: RedisCache.Update.withStaticIP(String staticIP)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withStaticIP(String staticIP)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withStaticIP*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 452
  package: com.microsoft.azure.management.redis
  summary: "<p>Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.</p>\r\n<p></p>"
  syntax:
    content: public Update withStaticIP(String staticIP)
    parameters:
    - id: staticIP
      type: "26831127"
      description: <p>the staticIP value to set. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withSubnet(HasId,String)
  id: withSubnet(HasId,String)
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  langs:
  - java
  name: withSubnet(HasId networkResource, String subnetName)
  nameWithType: RedisCache.Update.withSubnet(HasId networkResource, String subnetName)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withSubnet(HasId networkResource, String subnetName)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withSubnet*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 444
  package: com.microsoft.azure.management.redis
  summary: "<p>Assigns the specified subnet to this instance of Redis Cache.</p>\r\n<p></p>"
  syntax:
    content: public Update withSubnet(HasId networkResource, String subnetName)
    parameters:
    - id: networkResource
      type: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId
      description: <p>instance of Network object. </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of the subnet. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withSubnet*
  name: withSubnet
  nameWithType: RedisCache.Update.withSubnet
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withSubnet
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withStaticIP*
  name: withStaticIP
  nameWithType: RedisCache.Update.withStaticIP
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withStaticIP
  package: com.microsoft.azure.management.redis
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount*
  name: withShardCount
  nameWithType: RedisCache.Update.withShardCount
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  name: withPatchSchedule
  nameWithType: RedisCache.Update.withPatchSchedule
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule
  package: com.microsoft.azure.management.redis
- uid: "6e600119"
  spec.java:
  - name: Period
    fullName: Period
- uid: 5618da2dcom.microsoft.azure.management.redis.ScheduleEntrya08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.management.redis.ScheduleEntry
    name: ScheduleEntry
    fullName: com.microsoft.azure.management.redis.ScheduleEntry
    href: com.microsoft.azure.management.redis.ScheduleEntry.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: apply()
  nameWithType: Appliable<T>.apply()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.apply()
  type: Method
  summary: "<p>Execute the update request.</p>\r\n<p></p>"
  syntax:
    content: public T apply()
    return:
      type: 8ce1ecb9
      description: <p>the updated resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: applyAsync()
  nameWithType: Appliable<T>.applyAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync()
  type: Method
  summary: "<p>Execute the update request asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public Observable<T> applyAsync()
    return:
      type: c4094ba1
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: applyAsync(final ServiceCallback<T> callback)
  nameWithType: Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Execute the update request asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> applyAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback for success and failure </p>
    return:
      type: c0371a4e
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withBasicSku(int)
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.yml
  name: withBasicSku(int capacity)
  nameWithType: RedisCache.UpdateStages.WithSku.withBasicSku(int capacity)
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withBasicSku(int capacity)
  type: Method
  summary: "<p>Updates Redis Cache to Basic sku with new capacity.</p>\r\n<p></p>"
  syntax:
    content: public Update withBasicSku(int capacity)
    parameters:
    - id: capacity
      type: f75371fa
      description: <p>specifies what size of Redis Cache to update to for Basic sku with C family (0, 1, 2, 3, 4, 5, 6). </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.withNonSslPort()
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.yml
  name: withNonSslPort()
  nameWithType: RedisCache.UpdateStages.WithNonSslPort.withNonSslPort()
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.withNonSslPort()
  type: Method
  summary: "<p>Enables non-ssl Redis server port (6379).</p>\r\n<p></p>"
  syntax:
    content: public Update withNonSslPort()
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.withoutNonSslPort()
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.yml
  name: withoutNonSslPort()
  nameWithType: RedisCache.UpdateStages.WithNonSslPort.withoutNonSslPort()
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.withoutNonSslPort()
  type: Method
  summary: "<p>Disables non-ssl Redis server port (6379).</p>\r\n<p></p>"
  syntax:
    content: public Update withoutNonSslPort()
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration()
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.yml
  name: withoutRedisConfiguration()
  nameWithType: RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration()
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration()
  type: Method
  summary: "<p>Cleans all the configuration settings being set on Redis Cache.</p>\r\n<p></p>"
  syntax:
    content: public Update withoutRedisConfiguration()
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration(String)
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.yml
  name: withoutRedisConfiguration(String key)
  nameWithType: RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration(String key)
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration(String key)
  type: Method
  summary: "<p>Removes specified Redis Cache configuration setting.</p>\r\n<p></p>"
  syntax:
    content: public Update withoutRedisConfiguration(String key)
    parameters:
    - id: key
      type: "26831127"
      description: <p>Redis configuration name. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withoutTag(String key)
  nameWithType: Resource.UpdateWithTags<T>.withoutTag(String key)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withoutTag(String key)
  type: Method
  summary: "<p>Removes a tag from the resource. </p>"
  syntax:
    content: public T withoutTag(String key)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key of the tag to remove </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withPremiumSku()
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.yml
  name: withPremiumSku()
  nameWithType: RedisCache.UpdateStages.WithSku.withPremiumSku()
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withPremiumSku()
  type: Method
  summary: "<p>Updates Redis Cache to Premium sku.</p>\r\n<p></p>"
  syntax:
    content: public Update withPremiumSku()
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withPremiumSku(int)
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.yml
  name: withPremiumSku(int capacity)
  nameWithType: RedisCache.UpdateStages.WithSku.withPremiumSku(int capacity)
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withPremiumSku(int capacity)
  type: Method
  summary: "<p>Updates Redis Cache to Premium sku with new capacity.</p>\r\n<p></p>"
  syntax:
    content: public Update withPremiumSku(int capacity)
    parameters:
    - id: capacity
      type: f75371fa
      description: <p>specifies what size of Redis Cache to update to for Premium sku with P family (1, 2, 3, 4). </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(Map<String, String>)
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.yml
  name: withRedisConfiguration(Map<String, String> redisConfiguration)
  nameWithType: RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(Map<String, String> redisConfiguration)
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(Map<String, String> redisConfiguration)
  type: Method
  summary: "<p>All Redis Settings. Few possible keys: rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy, notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries, list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries, zset-max-ziplist-entries, zset-max-ziplist-value etc.</p>\r\n<p></p>"
  syntax:
    content: public Update withRedisConfiguration(Map<String, String> redisConfiguration)
    parameters:
    - id: redisConfiguration
      type: 689c8cb5
      description: <p>configuration of Redis Cache as a map indexed by configuration name </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(String,String)
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.yml
  name: withRedisConfiguration(String key, String value)
  nameWithType: RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(String key, String value)
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(String key, String value)
  type: Method
  summary: "<p>Specifies Redis Setting. rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy, notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries, list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries, zset-max-ziplist-entries, zset-max-ziplist-value etc.</p>\r\n<p></p>"
  syntax:
    content: public Update withRedisConfiguration(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>Redis configuration name. </p>
    - id: value
      type: "26831127"
      description: <p>Redis configuration value. </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withStandardSku()
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.yml
  name: withStandardSku()
  nameWithType: RedisCache.UpdateStages.WithSku.withStandardSku()
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withStandardSku()
  type: Method
  summary: "<p>Updates Redis Cache to Standard sku.</p>\r\n<p></p>"
  syntax:
    content: public Update withStandardSku()
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withStandardSku(int)
  parent: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.yml
  name: withStandardSku(int capacity)
  nameWithType: RedisCache.UpdateStages.WithSku.withStandardSku(int capacity)
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withStandardSku(int capacity)
  type: Method
  summary: "<p>Updates Redis Cache to Standard sku with new capacity.</p>\r\n<p></p>"
  syntax:
    content: public Update withStandardSku(int capacity)
    parameters:
    - id: capacity
      type: f75371fa
      description: <p>specifies what size of Redis Cache to update to for Standard sku with C family (0, 1, 2, 3, 4, 5, 6). </p>
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: <p>the next stage of Redis Cache update. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.UpdateWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.UpdateWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  parent: com.microsoft.azure.management.resources.fluentcore.model
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: Appliable<T>
  nameWithType: Appliable<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>
  type: Interface
  summary: "<p>The base interface for all template interfaces that support update operations.</p>\r\n<p></p>"
  syntax:
    content: public interface Appliable<T> extends Indexable
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the type of the resource returned from the update. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: Resource.UpdateWithTags<T>
  nameWithType: Resource.UpdateWithTags<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>
  type: Interface
  summary: "<p>An update allowing tags to be modified for the resource.</p>\r\n<p></p>"
  syntax:
    content: public interface UpdateWithTags<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the type of the next stage resource update </p>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.yml
  name: RedisCache.UpdateStages.WithSku
  nameWithType: RedisCache.UpdateStages.WithSku
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  type: Interface
  summary: "<p>A Redis Cache update stage allowing to change the parameters. </p>"
  syntax:
    content: public interface WithSku
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.yml
  name: RedisCache.UpdateStages.WithNonSslPort
  nameWithType: RedisCache.UpdateStages.WithNonSslPort
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort
  type: Interface
  summary: "<p>A Redis Cache update allowing non SSL port to be enabled or disabled. </p>"
  syntax:
    content: public interface WithNonSslPort
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.yml
  name: RedisCache.UpdateStages.WithRedisConfiguration
  nameWithType: RedisCache.UpdateStages.WithRedisConfiguration
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
  type: Interface
  summary: "<p>A Redis Cache update allowing Redis configuration to be modified. </p>"
  syntax:
    content: public interface WithRedisConfiguration
- uid: com.microsoft.azure.management.redis.RedisCache.Update
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis.RedisCache.Update.yml
  name: RedisCache.Update
  nameWithType: RedisCache.Update
  fullName: com.microsoft.azure.management.redis.RedisCache.Update
  type: Interface
  summary: "<p>The template for a Redis Cache update operation, containing all the settings that can be modified. </p>"
  syntax: *o1
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.yml
  name: HasId
  nameWithType: HasId
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId
  type: Interface
  summary: "<p>An interface representing a model that has a resource group name. </p>"
  syntax:
    content: public interface HasId
- uid: com.microsoft.azure.management.redis.DayOfWeek
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis.DayOfWeek.yml
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: com.microsoft.azure.management.redis.DayOfWeek
  type: Enum
  summary: "<p>Defines values for DayOfWeek. </p>"
  syntax:
    content: public enum DayOfWeek
- uid: com.microsoft.azure.management.redis.ScheduleEntry
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis.ScheduleEntry.yml
  name: ScheduleEntry
  nameWithType: ScheduleEntry
  fullName: com.microsoft.azure.management.redis.ScheduleEntry
  type: Class
  summary: "<p>Patch schedule entry for a Premium Redis Cache. </p>"
  syntax:
    content: public class ScheduleEntry
