### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.redis.RedisCache.Update
  id: Update
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis
  children:
  - com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(com.microsoft.azure.management.redis.RedisFirewallRule)
  - com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.management.redis.RedisCache.Update.withMinimumTlsVersion(com.microsoft.azure.management.redis.TlsVersion)
  - com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int)
  - com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int,org.joda.time.Period)
  - com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.ScheduleEntry)
  - com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>)
  - com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int)
  - com.microsoft.azure.management.redis.RedisCache.Update.withoutFirewallRule(java.lang.String)
  - com.microsoft.azure.management.redis.RedisCache.Update.withoutMinimumTlsVersion()
  - com.microsoft.azure.management.redis.RedisCache.Update.withoutPatchSchedule()
  langs:
  - java
  name: RedisCache.Update
  nameWithType: RedisCache.Update
  fullName: com.microsoft.azure.management.redis.RedisCache.Update
  type: Interface
  package: com.microsoft.azure.management.redis
  summary: The template for a Redis Cache update operation, containing all the settings that can be modified.
  syntax:
    content: public static interface RedisCache.Update extends Appliable<RedisCache>, Resource.UpdateWithTags<RedisCache.Update>, RedisCache.UpdateStages.WithSku, RedisCache.UpdateStages.WithNonSslPort, RedisCache.UpdateStages.WithRedisConfiguration
  implements:
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable<com.microsoft.azure.management.redis.RedisCache>
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<com.microsoft.azure.management.redis.RedisCache.Update>
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort
  - com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(com.microsoft.azure.management.redis.RedisFirewallRule)
  id: withFirewallRule(com.microsoft.azure.management.redis.RedisFirewallRule)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withFirewallRule(RedisFirewallRule rule)
  nameWithType: RedisCache.Update.withFirewallRule(RedisFirewallRule rule)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(RedisFirewallRule rule)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
  syntax:
    content: public abstract RedisCache.Update withFirewallRule(RedisFirewallRule rule)
    parameters:
    - id: rule
      type: com.microsoft.azure.management.redis.RedisFirewallRule
      description: firewall rule that specifies name, lowest and highest IP address included in the range of permitted IP addresses.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache update.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(java.lang.String,java.lang.String,java.lang.String)
  id: withFirewallRule(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withFirewallRule(String name, String lowestIp, String highestIp)
  nameWithType: RedisCache.Update.withFirewallRule(String name, String lowestIp, String highestIp)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule(String name, String lowestIp, String highestIp)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
  syntax:
    content: public abstract RedisCache.Update withFirewallRule(String name, String lowestIp, String highestIp)
    parameters:
    - id: name
      type: java.lang.String
      description: name of the rule.
    - id: lowestIp
      type: java.lang.String
      description: lowest IP address included in the range.
    - id: highestIp
      type: java.lang.String
      description: highest IP address included in the range.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache update.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withMinimumTlsVersion(com.microsoft.azure.management.redis.TlsVersion)
  id: withMinimumTlsVersion(com.microsoft.azure.management.redis.TlsVersion)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withMinimumTlsVersion(TlsVersion tlsVersion)
  nameWithType: RedisCache.Update.withMinimumTlsVersion(TlsVersion tlsVersion)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withMinimumTlsVersion(TlsVersion tlsVersion)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withMinimumTlsVersion*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2').
  syntax:
    content: public abstract RedisCache.Update withMinimumTlsVersion(TlsVersion tlsVersion)
    parameters:
    - id: tlsVersion
      type: com.microsoft.azure.management.redis.TlsVersion
      description: minimum TLS version.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache definition.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int)
  id: withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  nameWithType: RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Adds Patch schedule to the current Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.Update withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
    parameters:
    - id: dayOfWeek
      type: com.microsoft.azure.management.redis.DayOfWeek
      description: day of week when cache can be patched.
    - id: startHourUtc
      type: int
      description: start hour after which cache patching can start.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int,org.joda.time.Period)
  id: withPatchSchedule(com.microsoft.azure.management.redis.DayOfWeek,int,org.joda.time.Period)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  nameWithType: RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Adds Patch schedule to the current Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.Update withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
    parameters:
    - id: dayOfWeek
      type: com.microsoft.azure.management.redis.DayOfWeek
      description: day of week when cache can be patched.
    - id: startHourUtc
      type: int
      description: start hour after which cache patching can start.
    - id: maintenanceWindow
      type: org.joda.time.Period
      description: ISO8601 timespan specifying how much time cache patching can take.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(com.microsoft.azure.management.redis.ScheduleEntry)
  id: withPatchSchedule(com.microsoft.azure.management.redis.ScheduleEntry)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withPatchSchedule(ScheduleEntry scheduleEntry)
  nameWithType: RedisCache.Update.withPatchSchedule(ScheduleEntry scheduleEntry)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(ScheduleEntry scheduleEntry)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Adds Patch schedule to the current Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.Update withPatchSchedule(ScheduleEntry scheduleEntry)
    parameters:
    - id: scheduleEntry
      type: com.microsoft.azure.management.redis.ScheduleEntry
      description: Patch schedule entry for Premium Redis Cache.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>)
  id: withPatchSchedule(java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  nameWithType: RedisCache.Update.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Adds Patch schedule to the current Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.Update withPatchSchedule(List<ScheduleEntry> scheduleEntry)
    parameters:
    - id: scheduleEntry
      type: java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>
      description: List of patch schedule entries for Premium Redis Cache.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int)
  id: withShardCount(int)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withShardCount(int shardCount)
  nameWithType: RedisCache.Update.withShardCount(int shardCount)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int shardCount)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: The number of shards to be created on a Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.Update withShardCount(int shardCount)
    parameters:
    - id: shardCount
      type: int
      description: the shard count value to set.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache update.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withoutFirewallRule(java.lang.String)
  id: withoutFirewallRule(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withoutFirewallRule(String name)
  nameWithType: RedisCache.Update.withoutFirewallRule(String name)
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withoutFirewallRule(String name)
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withoutFirewallRule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Deletes a single firewall rule in the current Redis cache instance.
  syntax:
    content: public abstract RedisCache.Update withoutFirewallRule(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: name of the rule.
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache update.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withoutMinimumTlsVersion()
  id: withoutMinimumTlsVersion()
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withoutMinimumTlsVersion()
  nameWithType: RedisCache.Update.withoutMinimumTlsVersion()
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withoutMinimumTlsVersion()
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withoutMinimumTlsVersion*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Removes the requirement for clients minimum TLS version.
  syntax:
    content: public abstract RedisCache.Update withoutMinimumTlsVersion()
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache definition.
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withoutPatchSchedule()
  id: withoutPatchSchedule()
  artifact: com.microsoft.azure:azure-mgmt-redis:1.36.1
  parent: com.microsoft.azure.management.redis.RedisCache.Update
  langs:
  - java
  name: withoutPatchSchedule()
  nameWithType: RedisCache.Update.withoutPatchSchedule()
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withoutPatchSchedule()
  overload: com.microsoft.azure.management.redis.RedisCache.Update.withoutPatchSchedule*
  type: Method
  package: com.microsoft.azure.management.redis
  summary: Removes all Patch schedules from the current Premium Cluster Cache.
  syntax:
    content: public abstract RedisCache.Update withoutPatchSchedule()
    return:
      type: com.microsoft.azure.management.redis.RedisCache.Update
      description: the next stage of Redis Cache with Premium SKU definition.
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount*
  name: withShardCount
  nameWithType: RedisCache.Update.withShardCount
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis.DayOfWeek
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: com.microsoft.azure.management.redis.DayOfWeek
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule*
  name: withPatchSchedule
  nameWithType: RedisCache.Update.withPatchSchedule
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule
  package: com.microsoft.azure.management.redis
- uid: org.joda.time.Period
  spec.java:
  - uid: org.joda.time.Period
    name: Period
    fullName: org.joda.time.Period
- uid: com.microsoft.azure.management.redis.ScheduleEntry
  name: ScheduleEntry
  nameWithType: ScheduleEntry
  fullName: com.microsoft.azure.management.redis.ScheduleEntry
- uid: java.util.List<com.microsoft.azure.management.redis.ScheduleEntry>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.redis.ScheduleEntry
    name: ScheduleEntry
    fullName: com.microsoft.azure.management.redis.ScheduleEntry
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withoutPatchSchedule*
  name: withoutPatchSchedule
  nameWithType: RedisCache.Update.withoutPatchSchedule
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withoutPatchSchedule
  package: com.microsoft.azure.management.redis
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule*
  name: withFirewallRule
  nameWithType: RedisCache.Update.withFirewallRule
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withFirewallRule
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis.RedisFirewallRule
  name: RedisFirewallRule
  nameWithType: RedisFirewallRule
  fullName: com.microsoft.azure.management.redis.RedisFirewallRule
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withoutFirewallRule*
  name: withoutFirewallRule
  nameWithType: RedisCache.Update.withoutFirewallRule
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withoutFirewallRule
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis.TlsVersion
  name: TlsVersion
  nameWithType: TlsVersion
  fullName: com.microsoft.azure.management.redis.TlsVersion
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withMinimumTlsVersion*
  name: withMinimumTlsVersion
  nameWithType: RedisCache.Update.withMinimumTlsVersion
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withMinimumTlsVersion
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis.RedisCache.Update.withoutMinimumTlsVersion*
  name: withoutMinimumTlsVersion
  nameWithType: RedisCache.Update.withoutMinimumTlsVersion
  fullName: com.microsoft.azure.management.redis.RedisCache.Update.withoutMinimumTlsVersion
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable<com.microsoft.azure.management.redis.RedisCache>
  name: Appliable<RedisCache>
  nameWithType: Appliable<RedisCache>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<com.microsoft.azure.management.redis.RedisCache>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<com.microsoft.azure.management.redis.RedisCache.Update>
  name: Resource.UpdateWithTags<RedisCache.Update>
  nameWithType: Resource.UpdateWithTags<RedisCache.Update>
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<com.microsoft.azure.management.redis.RedisCache.Update>
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort
  name: RedisCache.UpdateStages.WithNonSslPort
  nameWithType: RedisCache.UpdateStages.WithNonSslPort
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
  name: RedisCache.UpdateStages.WithRedisConfiguration
  nameWithType: RedisCache.UpdateStages.WithRedisConfiguration
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration
- uid: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
  name: RedisCache.UpdateStages.WithSku
  nameWithType: RedisCache.UpdateStages.WithSku
  fullName: com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.management.redis.RedisCache
  name: RedisCache
  nameWithType: RedisCache
  fullName: com.microsoft.azure.management.redis.RedisCache
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  name: Appliable
  nameWithType: Appliable
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  name: Resource.UpdateWithTags
  nameWithType: Resource.UpdateWithTags
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
