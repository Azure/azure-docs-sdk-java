### YamlMime:JavaMember
uid: "com.azure.resourcemanager.cosmos.fluent.CassandraClustersClient.startAsync*"
fullName: "com.azure.resourcemanager.cosmos.fluent.CassandraClustersClient.startAsync"
name: "startAsync"
nameWithType: "CassandraClustersClient.startAsync"
members:
- uid: "com.azure.resourcemanager.cosmos.fluent.CassandraClustersClient.startAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.CassandraClustersClient.startAsync(String resourceGroupName, String clusterName)"
  name: "startAsync(String resourceGroupName, String clusterName)"
  nameWithType: "CassandraClustersClient.startAsync(String resourceGroupName, String clusterName)"
  summary: "Start the Managed Cassandra Cluster and Associated Data Centers. Start will start the host virtual machine of this cluster with reserved data disk. This won't do anything on an already running cluster. Use Deallocate to deallocate the cluster."
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Managed Cassandra cluster name."
    name: "clusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> startAsync(String resourceGroupName, String clusterName)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.cosmos.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.13.0
