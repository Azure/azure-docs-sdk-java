items:
- uid: system.fabric.health._delta_nodes_check_health_evaluation
  id: _delta_nodes_check_health_evaluation
  parent: system.fabric.health
  children:
  - system.fabric.health._delta_nodes_check_health_evaluation.getBaselineErrorCount()
  - system.fabric.health._delta_nodes_check_health_evaluation.getBaselineTotalCount()
  - system.fabric.health._delta_nodes_check_health_evaluation.getMaxPercentDeltaUnhealthyNodes()
  - system.fabric.health._delta_nodes_check_health_evaluation.getTotalCount()
  - system.fabric.health._delta_nodes_check_health_evaluation.getUnhealthyEvaluations()
  href: system.fabric.health._delta_nodes_check_health_evaluation.yml
  langs:
  - java
  name: DeltaNodesCheckHealthEvaluation
  nameWithType: DeltaNodesCheckHealthEvaluation
  fullName: system.fabric.health.DeltaNodesCheckHealthEvaluation
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/DeltaNodesCheckHealthEvaluation.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeltaNodesCheckHealthEvaluation.java
    startLine: 10
  package: system.fabric.health
  summary: <p>Represents health evaluation for delta nodes, containing health evaluations for each unhealthy node that impacted current aggregated health state. Can be returned during cluster upgrade when the aggregated health state of the cluster is <ref refid="" kindref="compound">system.fabric.health.HealthState#Error</ref>. </p>
  syntax:
    content: public class DeltaNodesCheckHealthEvaluation extends HealthEvaluation
  inheritance:
  - java.lang.Object
  - system.fabric.health._health_evaluation
  inheritedMembers:
  - system.fabric.health._delta_nodes_check_health_evaluation.DeltaNodesCheckHealthEvaluation(String,int,HealthEvaluation [],long,long,long,byte)
  - system.fabric.health._health_evaluation.fromNative(long)
  - system.fabric.health._health_evaluation.getAggregatedHealthState()
  - system.fabric.health._health_evaluation.getDescription()
  - system.fabric.health._health_evaluation.getKind()
  - system.fabric.health._health_evaluation.HealthEvaluation(HealthEvaluationKind,String,HealthState)
  - system.fabric.health._health_evaluation.toString()
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getBaselineErrorCount()
  id: getBaselineErrorCount()
  parent: system.fabric.health._delta_nodes_check_health_evaluation
  href: system.fabric.health._delta_nodes_check_health_evaluation.yml
  langs:
  - java
  name: getBaselineErrorCount()
  nameWithType: DeltaNodesCheckHealthEvaluation.getBaselineErrorCount()
  fullName: long system.fabric.health.DeltaNodesCheckHealthEvaluation.getBaselineErrorCount()
  overload: system.fabric.health._delta_nodes_check_health_evaluation.getBaselineErrorCount*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeltaNodesCheckHealthEvaluation.java
    startLine: 85
  package: system.fabric.health
  summary: >-
    <p>Gets the number of nodes with aggregated heath state <ref refid="" kindref="compound">system.fabric.health.HealthState#Error</ref> in the health store at the beginning of the cluster upgrade.</p>

    <p></p>
  syntax:
    content: public long getBaselineErrorCount()
    return:
      type: 0364520f
      description: <p>The number of nodes with aggregated heath state <ref refid="" kindref="compound">system.fabric.health.HealthState#Error</ref> in the health store at the beginning of the cluster upgrade. </p>
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getBaselineTotalCount()
  id: getBaselineTotalCount()
  parent: system.fabric.health._delta_nodes_check_health_evaluation
  href: system.fabric.health._delta_nodes_check_health_evaluation.yml
  langs:
  - java
  name: getBaselineTotalCount()
  nameWithType: DeltaNodesCheckHealthEvaluation.getBaselineTotalCount()
  fullName: long system.fabric.health.DeltaNodesCheckHealthEvaluation.getBaselineTotalCount()
  overload: system.fabric.health._delta_nodes_check_health_evaluation.getBaselineTotalCount*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeltaNodesCheckHealthEvaluation.java
    startLine: 72
  package: system.fabric.health
  summary: >-
    <p>Gets the total number of nodes in the health store at the beginning of the cluster upgrade.</p>

    <p></p>
  syntax:
    content: public long getBaselineTotalCount()
    return:
      type: 0364520f
      description: <p>The total number of nodes in the health store at the beginning of the cluster upgrade. </p>
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getMaxPercentDeltaUnhealthyNodes()
  id: getMaxPercentDeltaUnhealthyNodes()
  parent: system.fabric.health._delta_nodes_check_health_evaluation
  href: system.fabric.health._delta_nodes_check_health_evaluation.yml
  langs:
  - java
  name: getMaxPercentDeltaUnhealthyNodes()
  nameWithType: DeltaNodesCheckHealthEvaluation.getMaxPercentDeltaUnhealthyNodes()
  fullName: byte system.fabric.health.DeltaNodesCheckHealthEvaluation.getMaxPercentDeltaUnhealthyNodes()
  overload: system.fabric.health._delta_nodes_check_health_evaluation.getMaxPercentDeltaUnhealthyNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeltaNodesCheckHealthEvaluation.java
    startLine: 53
  package: system.fabric.health
  summary: >-
    <p>Gets the maximum allowed percentage of delta unhealthy nodes from the <xref href="system.fabric.health._cluster_upgrade_health_policy" data-throw-if-not-resolved="false"></xref></p>

    <p></p>
  syntax:
    content: public byte getMaxPercentDeltaUnhealthyNodes()
    return:
      type: d357ea40
      description: <p>The maximum allowed percentage of delta unhealthy nodes. </p>
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getTotalCount()
  id: getTotalCount()
  parent: system.fabric.health._delta_nodes_check_health_evaluation
  href: system.fabric.health._delta_nodes_check_health_evaluation.yml
  langs:
  - java
  name: getTotalCount()
  nameWithType: DeltaNodesCheckHealthEvaluation.getTotalCount()
  fullName: long system.fabric.health.DeltaNodesCheckHealthEvaluation.getTotalCount()
  overload: system.fabric.health._delta_nodes_check_health_evaluation.getTotalCount*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeltaNodesCheckHealthEvaluation.java
    startLine: 62
  package: system.fabric.health
  summary: >-
    <p>Gets the current total number of nodes in the health store.</p>

    <p></p>
  syntax:
    content: public long getTotalCount()
    return:
      type: 0364520f
      description: <p>The current total number of nodes in the health store. </p>
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getUnhealthyEvaluations()
  id: getUnhealthyEvaluations()
  parent: system.fabric.health._delta_nodes_check_health_evaluation
  href: system.fabric.health._delta_nodes_check_health_evaluation.yml
  langs:
  - java
  name: getUnhealthyEvaluations()
  nameWithType: DeltaNodesCheckHealthEvaluation.getUnhealthyEvaluations()
  fullName: List<HealthEvaluation> system.fabric.health.DeltaNodesCheckHealthEvaluation.getUnhealthyEvaluations()
  overload: system.fabric.health._delta_nodes_check_health_evaluation.getUnhealthyEvaluations*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeltaNodesCheckHealthEvaluation.java
    startLine: 43
  package: system.fabric.health
  summary: >-
    <p>Gets the list of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy <xref href="system.fabric.health._node_health_evaluation" data-throw-if-not-resolved="false"></xref> that impacted the aggregated health.</p>

    <p></p>
  syntax:
    content: public List<HealthEvaluation> getUnhealthyEvaluations()
    return:
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
      description: <p>a list of the unhealthy evaluations that led to current aggregated health state. </p>
references:
- uid: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: system.fabric.health._health_evaluation
    name: HealthEvaluation
    fullName: system.fabric.health.HealthEvaluation
    href: system.fabric.health._health_evaluation.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getUnhealthyEvaluations*
  name: getUnhealthyEvaluations
  nameWithType: DeltaNodesCheckHealthEvaluation.getUnhealthyEvaluations
  fullName: List<HealthEvaluation> system.fabric.health.DeltaNodesCheckHealthEvaluation.getUnhealthyEvaluations
  package: system.fabric.health
- uid: d357ea40
  spec.java:
  - name: byte
    fullName: byte
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getMaxPercentDeltaUnhealthyNodes*
  name: getMaxPercentDeltaUnhealthyNodes
  nameWithType: DeltaNodesCheckHealthEvaluation.getMaxPercentDeltaUnhealthyNodes
  fullName: byte system.fabric.health.DeltaNodesCheckHealthEvaluation.getMaxPercentDeltaUnhealthyNodes
  package: system.fabric.health
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getTotalCount*
  name: getTotalCount
  nameWithType: DeltaNodesCheckHealthEvaluation.getTotalCount
  fullName: long system.fabric.health.DeltaNodesCheckHealthEvaluation.getTotalCount
  package: system.fabric.health
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getBaselineTotalCount*
  name: getBaselineTotalCount
  nameWithType: DeltaNodesCheckHealthEvaluation.getBaselineTotalCount
  fullName: long system.fabric.health.DeltaNodesCheckHealthEvaluation.getBaselineTotalCount
  package: system.fabric.health
- uid: system.fabric.health._delta_nodes_check_health_evaluation.getBaselineErrorCount*
  name: getBaselineErrorCount
  nameWithType: DeltaNodesCheckHealthEvaluation.getBaselineErrorCount
  fullName: long system.fabric.health.DeltaNodesCheckHealthEvaluation.getBaselineErrorCount
  package: system.fabric.health
- uid: system.fabric.health._delta_nodes_check_health_evaluation.DeltaNodesCheckHealthEvaluation(String,int,HealthEvaluation [],long,long,long,byte)
- uid: system.fabric.health._health_evaluation.fromNative(long)
  parent: system.fabric.health._health_evaluation
  href: system.fabric.health._health_evaluation.yml
  name: fromNative(long unhealthyEvaluations)
  nameWithType: HealthEvaluation.fromNative(long unhealthyEvaluations)
  fullName: static List<HealthEvaluation> system.fabric.health.HealthEvaluation.fromNative(long unhealthyEvaluations)
  type: Method
  syntax:
    content: public static List<HealthEvaluation> fromNative(long unhealthyEvaluations)
    parameters:
    - id: unhealthyEvaluations
      type: 0364520f
    return:
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
- uid: system.fabric.health._health_evaluation.getAggregatedHealthState()
  parent: system.fabric.health._health_evaluation
  href: system.fabric.health._health_evaluation.yml
  name: getAggregatedHealthState()
  nameWithType: HealthEvaluation.getAggregatedHealthState()
  fullName: HealthState system.fabric.health.HealthEvaluation.getAggregatedHealthState()
  type: Method
  summary: >-
    <p>The aggregated health state of the evaluated entity.</p>

    <p></p>
  syntax:
    content: public HealthState getAggregatedHealthState()
    return:
      type: system.fabric.health._health_state
      description: <p>A <xref href="system.fabric.health._health_state" data-throw-if-not-resolved="false"></xref> representing the aggregated health state. </p>
- uid: system.fabric.health._health_evaluation.getDescription()
  parent: system.fabric.health._health_evaluation
  href: system.fabric.health._health_evaluation.yml
  name: getDescription()
  nameWithType: HealthEvaluation.getDescription()
  fullName: String system.fabric.health.HealthEvaluation.getDescription()
  type: Method
  summary: >-
    <p>Gets the description of the health evaluation, which represents a summary of the evaluation process.</p>

    <p></p>
  syntax:
    content: public String getDescription()
    return:
      type: "26831127"
      description: <p>A <ref refid="" kindref="compound">java.lang.String</ref> representing the description of the health evaluation. </p>
- uid: system.fabric.health._health_evaluation.getKind()
  parent: system.fabric.health._health_evaluation
  href: system.fabric.health._health_evaluation.yml
  name: getKind()
  nameWithType: HealthEvaluation.getKind()
  fullName: HealthEvaluationKind system.fabric.health.HealthEvaluation.getKind()
  type: Method
  summary: >-
    <p>Gets the kind of the health evaluation.</p>

    <p></p>
  syntax:
    content: public HealthEvaluationKind getKind()
    return:
      type: system.fabric.health._health_evaluation_kind
      description: <p>A <xref href="system.fabric.health._health_evaluation_kind" data-throw-if-not-resolved="false"></xref> of the health evaluation. </p>
- uid: system.fabric.health._health_evaluation.HealthEvaluation(HealthEvaluationKind,String,HealthState)
  parent: system.fabric.health._health_evaluation
  href: system.fabric.health._health_evaluation.yml
  name: HealthEvaluation(HealthEvaluationKind kind, String description, HealthState aggregatedHealthState)
  nameWithType: HealthEvaluation.HealthEvaluation(HealthEvaluationKind kind, String description, HealthState aggregatedHealthState)
  fullName: system.fabric.health.HealthEvaluation.HealthEvaluation(HealthEvaluationKind kind, String description, HealthState aggregatedHealthState)
  type: Constructor
  syntax:
    content: public HealthEvaluation(HealthEvaluationKind kind, String description, HealthState aggregatedHealthState)
    parameters:
    - id: kind
      type: system.fabric.health._health_evaluation_kind
    - id: description
      type: "26831127"
    - id: aggregatedHealthState
      type: system.fabric.health._health_state
- uid: system.fabric.health._health_evaluation.toString()
  parent: system.fabric.health._health_evaluation
  href: system.fabric.health._health_evaluation.yml
  name: toString()
  nameWithType: HealthEvaluation.toString()
  fullName: String system.fabric.health.HealthEvaluation.toString()
  type: Method
  syntax:
    content: public String toString()
    return:
      type: "26831127"
- uid: system.fabric.health._health_evaluation
  parent: system.fabric.health
  href: system.fabric.health._health_evaluation.yml
  name: HealthEvaluation
  nameWithType: HealthEvaluation
  fullName: system.fabric.health.HealthEvaluation
  type: Class
  summary: <p>Represents a health evaluation which describes the data and the algorithm used by health store to evaluate the health of an entity. </p>
  syntax:
    content: public class HealthEvaluation
- uid: system.fabric.health._node_health_evaluation
  parent: system.fabric.health
  href: system.fabric.health._node_health_evaluation.yml
  name: NodeHealthEvaluation
  nameWithType: NodeHealthEvaluation
  fullName: system.fabric.health.NodeHealthEvaluation
  type: Class
  summary: <p>Represents health evaluation for a node, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either <ref refid="" kindref="compound">system.fabric.health.HealthState#Error</ref> or <ref refid="" kindref="compound">system.fabric.health.HealthState#Warning</ref>. </p>
  syntax:
    content: public class NodeHealthEvaluation
- uid: system.fabric.health._cluster_upgrade_health_policy
  parent: system.fabric.health
  href: system.fabric.health._cluster_upgrade_health_policy.yml
  name: ClusterUpgradeHealthPolicy
  nameWithType: ClusterUpgradeHealthPolicy
  fullName: system.fabric.health.ClusterUpgradeHealthPolicy
  type: Class
  summary: >-
    <p>Defines a health policy used to evaluate the health of the cluster specific to cluster upgrade. </p>

    <p>

      <bold>Remarks:</bold>Itâ€™s used together with <xref href="system.fabric._cluster_health_policy" data-throw-if-not-resolved="false"></xref> to evaluate cluster health and determine whether the monitored cluster upgrade is successful or needs to be rolled back. </p>
  syntax:
    content: public class ClusterUpgradeHealthPolicy
