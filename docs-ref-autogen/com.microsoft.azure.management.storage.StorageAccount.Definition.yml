### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.storage.StorageAccount.Definition
  id: Definition
  parent: com.microsoft.azure.management.storage
  href: com.microsoft.azure.management.storage.StorageAccount.Definition.yml
  langs:
  - java
  name: StorageAccount.Definition
  nameWithType: StorageAccount.Definition
  fullName: com.microsoft.azure.management.storage.StorageAccount.Definition
  type: Interface
  source:
    remote:
      path: azure-mgmt-storage/src/main/java/com/microsoft/azure/management/storage/StorageAccount.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-storage/src/main/java/com/microsoft/azure/management/storage/StorageAccount.java
    startLine: 164
  package: com.microsoft.azure.management.storage
  summary: "<p>Container interface for all the definitions that need to be implemented. </p>"
  syntax:
    content: public interface Definition extends StorageAccount.DefinitionStages.Blank,StorageAccount.DefinitionStages.WithGroup,StorageAccount.DefinitionStages.WithCreate,StorageAccount.DefinitionStages.WithCreateAndAccessTier
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier.withAccessTier(AccessTier)
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithBlobStorageAccountKind.withBlobStorageAccountKind()
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(CustomDomain)
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(String)
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(String,boolean)
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption.withEncryption(Encryption)
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption.withEncryption()
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithGeneralPurposeAccountKind.withGeneralPurposeAccountKind()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(Region)
  - com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithSku.withSku(SkuName)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: "<p>Execute the create request.</p>\r\n<p></p>"
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model.Indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier.withAccessTier(AccessTier)
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier.yml
  name: withAccessTier(AccessTier accessTier)
  nameWithType: StorageAccount.DefinitionStages.WithCreateAndAccessTier.withAccessTier(AccessTier accessTier)
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier.withAccessTier(AccessTier accessTier)
  type: Method
  summary: "<p>Specifies the access tier used for billing. </p>\r\n<p>Access tier cannot be changed more than once every 7 days (168 hours). Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.</p>\r\n<p></p>"
  syntax:
    content: public DefinitionStages.WithCreate withAccessTier(AccessTier accessTier)
    parameters:
    - id: accessTier
      type: com.microsoft.azure.management.storage.AccessTier
      description: <p>the access tier value </p>
    return:
      type: 6e9abd9d
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithBlobStorageAccountKind.withBlobStorageAccountKind()
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithBlobStorageAccountKind
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithBlobStorageAccountKind.yml
  name: withBlobStorageAccountKind()
  nameWithType: StorageAccount.DefinitionStages.WithBlobStorageAccountKind.withBlobStorageAccountKind()
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithBlobStorageAccountKind.withBlobStorageAccountKind()
  type: Method
  summary: "<p>Specifies the storage account kind to be \"BlobStorage\". The access tier is defaulted to be \"Hot\".</p>\r\n<p></p>"
  syntax:
    content: public WithCreateAndAccessTier withBlobStorageAccountKind()
    return:
      type: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(CustomDomain)
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.yml
  name: withCustomDomain(CustomDomain customDomain)
  nameWithType: StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(CustomDomain customDomain)
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(CustomDomain customDomain)
  type: Method
  summary: "<p>Specifies the user domain assigned to the storage account.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withCustomDomain(CustomDomain customDomain)
    parameters:
    - id: customDomain
      type: com.microsoft.azure.management.storage.CustomDomain
      description: <p>the user domain assigned to the storage account </p>
    return:
      type: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(String)
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.yml
  name: withCustomDomain(String name)
  nameWithType: StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(String name)
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(String name)
  type: Method
  summary: "<p>Specifies the user domain assigned to the storage account.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withCustomDomain(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the custom domain name, which is the CNAME source </p>
    return:
      type: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(String,boolean)
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.yml
  name: withCustomDomain(String name, boolean useSubDomain)
  nameWithType: StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(String name, boolean useSubDomain)
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCustomDomain.withCustomDomain(String name, boolean useSubDomain)
  type: Method
  summary: "<p>Specifies the user domain assigned to the storage account.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withCustomDomain(String name, boolean useSubDomain)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the custom domain name, which is the CNAME source </p>
    - id: useSubDomain
      type: 4fc6e284
      description: <p>whether indirect CName validation is enabled </p>
    return:
      type: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption.withEncryption(Encryption)
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption.yml
  name: withEncryption(Encryption encryption)
  nameWithType: StorageAccount.DefinitionStages.WithEncryption.withEncryption(Encryption encryption)
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption.withEncryption(Encryption encryption)
  type: Method
  summary: "<p>Specifies the encryption settings on the account. The default setting is unencrypted. TODO: This overload should be deprecated and removed (the new fully fluent encryption withers replaces this)</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withEncryption(Encryption encryption)
    parameters:
    - id: encryption
      type: com.microsoft.azure.management.storage.Encryption
      description: <p>the encryption setting </p>
    return:
      type: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption.withEncryption()
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption.yml
  name: withEncryption()
  nameWithType: StorageAccount.DefinitionStages.WithEncryption.withEncryption()
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithEncryption.withEncryption()
  type: Method
  summary: "<p>Enables encryption for all storage services in the account that supports encryption.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withEncryption()
    return:
      type: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithGeneralPurposeAccountKind.withGeneralPurposeAccountKind()
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithGeneralPurposeAccountKind
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithGeneralPurposeAccountKind.yml
  name: withGeneralPurposeAccountKind()
  nameWithType: StorageAccount.DefinitionStages.WithGeneralPurposeAccountKind.withGeneralPurposeAccountKind()
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithGeneralPurposeAccountKind.withGeneralPurposeAccountKind()
  type: Method
  summary: "<p>Specifies the storage account kind to be \"Storage\", the kind for general purposes.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withGeneralPurposeAccountKind()
    return:
      type: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.yml
  name: withRegion(String regionName)
  nameWithType: Resource.DefinitionWithRegion<T>.withRegion(String regionName)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion<T>.withRegion(String regionName)
  type: Method
  summary: "<p>Specifies the region for the resource by name. </p>"
  syntax:
    content: public T withRegion(String regionName)
    parameters:
    - id: regionName
      type: "26831127"
      description: <p>The name of the region for the resource </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(Region)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.yml
  name: withRegion(Region region)
  nameWithType: Resource.DefinitionWithRegion<T>.withRegion(Region region)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion<T>.withRegion(Region region)
  type: Method
  summary: "<p>Specifies the region for the resource. </p>"
  syntax:
    content: public T withRegion(Region region)
    parameters:
    - id: region
      type: com.microsoft.azure.management.resources.fluentcore.arm.Region
      description: <p>The location for the resource </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithSku.withSku(SkuName)
  parent: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithSku
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithSku.yml
  name: withSku(SkuName skuName)
  nameWithType: StorageAccount.DefinitionStages.WithSku.withSku(SkuName skuName)
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithSku.withSku(SkuName skuName)
  type: Method
  summary: "<p>Specifies the sku of the storage account. This used to be called account types.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withSku(SkuName skuName)
    parameters:
    - id: skuName
      type: com.microsoft.azure.management.storage.SkuName
      description: <p>the sku </p>
    return:
      type: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
      description: <p>the next stage of storage account definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.Blank
  parent: com.microsoft.azure.management.storage
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.Blank.yml
  name: StorageAccount.DefinitionStages.Blank
  nameWithType: StorageAccount.DefinitionStages.Blank
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.Blank
  type: Interface
  summary: "<p>The first stage of the storage account definition. </p>"
  syntax:
    content: public interface Blank extends Resource.DefinitionWithRegion<WithGroup>
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithGroup
  parent: com.microsoft.azure.management.storage
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithGroup.yml
  name: StorageAccount.DefinitionStages.WithGroup
  nameWithType: StorageAccount.DefinitionStages.WithGroup
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithGroup
  type: Interface
  summary: "<p>A storage account definition allowing resource group to be set. </p>"
  syntax:
    content: public interface WithGroup
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
  parent: com.microsoft.azure.management.storage
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate.yml
  name: StorageAccount.DefinitionStages.WithCreate
  nameWithType: StorageAccount.DefinitionStages.WithCreate
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreate
  type: Interface
  summary: "<p>A storage account definition with sufficient inputs to create a new storage account in the cloud, but exposing additional optional inputs to specify. </p>"
  syntax:
    content: public interface WithCreate
- uid: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier
  parent: com.microsoft.azure.management.storage
  href: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier.yml
  name: StorageAccount.DefinitionStages.WithCreateAndAccessTier
  nameWithType: StorageAccount.DefinitionStages.WithCreateAndAccessTier
  fullName: com.microsoft.azure.management.storage.StorageAccount.DefinitionStages.WithCreateAndAccessTier
  type: Interface
  summary: "<p>A storage account definition allowing access tier to be set. </p>"
  syntax:
    content: public interface WithCreateAndAccessTier
