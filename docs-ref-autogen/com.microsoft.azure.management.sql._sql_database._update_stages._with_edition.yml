### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  id: _with_edition
  parent: com.microsoft.azure.management.sql
  children:
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withBasicEdition()
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withBasicEdition(SqlDatabaseBasicStorage)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withEdition(DatabaseEditions)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withStandardEdition(SqlDatabaseStandardServiceObjective)
  - com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  langs:
  - java
  name: SqlDatabase.UpdateStages.WithEdition
  nameWithType: SqlDatabase.UpdateStages.WithEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1008
  package: com.microsoft.azure.management.sql
  summary: "<p>The SQL Database definition to set the edition for database. </p>"
  syntax:
    content: public interface WithEdition
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withBasicEdition()
  id: withBasicEdition()
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  langs:
  - java
  name: withBasicEdition()
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withBasicEdition()
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition()
  overload: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withBasicEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1023
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Basic\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withBasicEdition()
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withBasicEdition(SqlDatabaseBasicStorage)
  id: withBasicEdition(SqlDatabaseBasicStorage)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  langs:
  - java
  name: withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  overload: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withBasicEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1031
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Basic\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
    parameters:
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql._sql_database_basic_storage
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withEdition(DatabaseEditions)
  id: withEdition(DatabaseEditions)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  langs:
  - java
  name: withEdition(DatabaseEditions edition)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEditions edition)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEditions edition)
  overload: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1016
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets the edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withEdition(DatabaseEditions edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql._database_editions
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  id: withPremiumEdition(SqlDatabasePremiumServiceObjective)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  langs:
  - java
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  overload: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withPremiumEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1059
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Premium\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql._sql_database_premium_service_objective
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  id: withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  langs:
  - java
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  overload: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withPremiumEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1069
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Premium\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql._sql_database_premium_service_objective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql._sql_database_premium_storage
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withStandardEdition(SqlDatabaseStandardServiceObjective)
  id: withStandardEdition(SqlDatabaseStandardServiceObjective)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  langs:
  - java
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  overload: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withStandardEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1040
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Standard\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql._sql_database_standard_service_objective
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  id: withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  parent: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.yml
  langs:
  - java
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  overload: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withStandardEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1050
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Standard\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql._sql_database_standard_service_objective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql._sql_database_standard_storage
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._update
      description: <p>The next stage of the definition </p>
references:
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withEdition*
  name: withEdition
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withBasicEdition*
  name: withBasicEdition
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withBasicEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withStandardEdition*
  name: withStandardEdition
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withStandardEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql._sql_database._update_stages._with_edition.withPremiumEdition*
  name: withPremiumEdition
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withPremiumEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql._sql_database._update
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._update.yml
  name: SqlDatabase.Update
  nameWithType: SqlDatabase.Update
  fullName: com.microsoft.azure.management.sql.SqlDatabase.Update
  type: Interface
  summary: >-
    <p>The template for a SqlDatabase update operation, containing all the settings that can be modified.</p>

    <p>The template for a SQLDatabase modifyState operation, containing all the settings that can be modified. </p>
  syntax:
    content: public interface Update extends SqlDatabase.UpdateStages.WithEdition,SqlDatabase.UpdateStages.WithElasticPoolName,SqlDatabase.UpdateStages.WithMaxSizeBytes,SqlDatabase.UpdateStages.WithServiceObjective,Appliable<SqlDatabase>,SqlDatabase.UpdateStages.WithEdition,SqlDatabase.UpdateStages.WithElasticPoolName,SqlDatabase.UpdateStages.WithMaxSizeBytes,SqlDatabase.UpdateStages.WithServiceObjective,Resource.UpdateWithTags<SqlDatabase.Update>,Appliable<SqlDatabase>
- uid: com.microsoft.azure.management.sql._database_editions
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._database_editions.yml
  name: DatabaseEditions
  nameWithType: DatabaseEditions
  fullName: com.microsoft.azure.management.sql.DatabaseEditions
  type: Class
  summary: >-
    <p>Defines values for DatabaseEdition.</p>

    <p>Defines values for DatabaseEditions. </p>
  syntax:
    content: public class DatabaseEditions
- uid: com.microsoft.azure.management.sql._sql_database_basic_storage
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database_basic_storage.yml
  name: SqlDatabaseBasicStorage
  nameWithType: SqlDatabaseBasicStorage
  fullName: com.microsoft.azure.management.sql.SqlDatabaseBasicStorage
  type: Enum
  summary: <p>The maximum allowed storage capacity for a "Basic" edition of an Azure SQL Elastic Pool. </p>
  syntax:
    content: public enum SqlDatabaseBasicStorage
- uid: com.microsoft.azure.management.sql._sql_database_standard_service_objective
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database_standard_service_objective.yml
  name: SqlDatabaseStandardServiceObjective
  nameWithType: SqlDatabaseStandardServiceObjective
  fullName: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
  type: Class
  summary: <p>The name of the configured Service Level Objective of a "Standard" Azure SQL Database. </p>
  syntax:
    content: public class SqlDatabaseStandardServiceObjective
- uid: com.microsoft.azure.management.sql._sql_database_standard_storage
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database_standard_storage.yml
  name: SqlDatabaseStandardStorage
  nameWithType: SqlDatabaseStandardStorage
  fullName: com.microsoft.azure.management.sql.SqlDatabaseStandardStorage
  type: Enum
  summary: <p>The maximum allowed storage capacity for a "Standard" edition of an Azure SQL Elastic Pool. </p>
  syntax:
    content: public enum SqlDatabaseStandardStorage
- uid: com.microsoft.azure.management.sql._sql_database_premium_service_objective
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database_premium_service_objective.yml
  name: SqlDatabasePremiumServiceObjective
  nameWithType: SqlDatabasePremiumServiceObjective
  fullName: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
  type: Class
  summary: <p>The name of the configured Service Level Objective of a "Premium" Azure SQL Database. </p>
  syntax:
    content: public class SqlDatabasePremiumServiceObjective
- uid: com.microsoft.azure.management.sql._sql_database_premium_storage
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database_premium_storage.yml
  name: SqlDatabasePremiumStorage
  nameWithType: SqlDatabasePremiumStorage
  fullName: com.microsoft.azure.management.sql.SqlDatabasePremiumStorage
  type: Enum
  summary: <p>The maximum allowed storage capacity for a "Premium" edition of an Azure SQL Elastic Pool. </p>
  syntax:
    content: public enum SqlDatabasePremiumStorage
