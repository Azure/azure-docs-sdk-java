### YamlMime:JavaMember
nameWithType: KeyVaultClient.getKey
type: method
members:
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getKey(String keyIdentifier)
  name: getKey(String keyIdentifier)
  nameWithType: KeyVaultClient.getKey(String keyIdentifier)
  parameters:
  - description: <p>The full key identifier</p>
    name: keyIdentifier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyBundle if successful. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax: public KeyBundle getKey(String keyIdentifier)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getKey(String)
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getKey(String vaultBaseUrl, String keyName)
  name: getKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClient.getKey(String vaultBaseUrl, String keyName)
  parameters:
  - description: <p>The vault name, e.g. <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a></p>
    name: vaultBaseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the key </p>
    name: keyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyBundle if successful. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax: public KeyBundle getKey(String vaultBaseUrl, String keyName)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getKey(String,String)
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  name: getKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClient.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  parameters:
  - description: <p>The vault name, e.g. <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a></p>
    name: vaultBaseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the key </p>
    name: keyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The version of the key</p>
    name: keyVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyBundle if successful. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax: public KeyBundle getKey(String vaultBaseUrl, String keyName, String keyVersion)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getKey(String,String,String)
uid: com.microsoft.azure.keyvault.KeyVaultClient.getKey*
fullName: com.microsoft.azure.keyvault.KeyVaultClient.getKey(String keyIdentifier)
name: getKey(String keyIdentifier)
package: com.microsoft.azure.keyvault
metadata: {}
