items:
- uid: microsoft.servicefabric.actors
  id: actors
  children:
  - microsoft.servicefabric.actors._actor
  - microsoft.servicefabric.actors._actor_base
  - microsoft.servicefabric.actors._actor_call_type
  - microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception
  - microsoft.servicefabric.actors._actor_concurrency_settings
  - microsoft.servicefabric.actors._actor_event_proxy
  - microsoft.servicefabric.actors._actor_event_publisher
  - microsoft.servicefabric.actors._actor_event_publisher_e
  - microsoft.servicefabric.actors._actor_events
  - microsoft.servicefabric.actors._actor_extensions
  - microsoft.servicefabric.actors._actor_garbage_collection
  - microsoft.servicefabric.actors._actor_garbage_collection_settings
  - microsoft.servicefabric.actors._actor_id
  - microsoft.servicefabric.actors._actor_id_kind
  - microsoft.servicefabric.actors._actor_information
  - microsoft.servicefabric.actors._actor_message_headers
  - microsoft.servicefabric.actors._actor_method_attributes
  - microsoft.servicefabric.actors._actor_method_context
  - microsoft.servicefabric.actors._actor_method_dispatcher_base
  - microsoft.servicefabric.actors._actor_name_format
  - microsoft.servicefabric.actors._actor_proxy
  - microsoft.servicefabric.actors._actor_proxy_base
  - microsoft.servicefabric.actors._actor_proxy_event_utility
  - microsoft.servicefabric.actors._actor_proxy_factory
  - microsoft.servicefabric.actors._actor_reentrancy_mode
  - microsoft.servicefabric.actors._actor_reminder
  - microsoft.servicefabric.actors._actor_reminder_attributes
  - microsoft.servicefabric.actors._actor_reminder_collection
  - microsoft.servicefabric.actors._actor_reminder_state
  - microsoft.servicefabric.actors._actor_remoting_exception_handler
  - microsoft.servicefabric.actors._actor_runtime
  - microsoft.servicefabric.actors._actor_service
  - microsoft.servicefabric.actors._actor_service_attribute
  - microsoft.servicefabric.actors._actor_service_partition_client
  - microsoft.servicefabric.actors._actor_service_proxy
  - microsoft.servicefabric.actors._actor_service_remoting_dispatcher
  - microsoft.servicefabric.actors._actor_service_settings
  - microsoft.servicefabric.actors._actor_state_change
  - microsoft.servicefabric.actors._actor_state_manager
  - microsoft.servicefabric.actors._actor_state_provider
  - microsoft.servicefabric.actors._actor_state_provider_attribute
  - microsoft.servicefabric.actors._actor_timer
  - microsoft.servicefabric.actors._actor_type_extensions
  - microsoft.servicefabric.actors._actor_type_information
  - microsoft.servicefabric.actors._continuation_token
  - microsoft.servicefabric.actors._diagnostics_manager
  - microsoft.servicefabric.actors._fabric_actor
  - microsoft.servicefabric.actors._fabric_actor_proxy_factory
  - microsoft.servicefabric.actors._fabric_actor_reference
  - microsoft.servicefabric.actors._fabric_actor_service
  - microsoft.servicefabric.actors._fabric_transport_actor_remoting
  - microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory
  - microsoft.servicefabric.actors._fabric_transport_actor_service_remoting_listener
  - microsoft.servicefabric.actors._kvs_actor_state_provider
  - microsoft.servicefabric.actors._observable
  - microsoft.servicefabric.actors._paged_result
  - microsoft.servicefabric.actors._readonly
  - microsoft.servicefabric.actors._reentrancy_mode
  - microsoft.servicefabric.actors._reentrancy_mode_disallowed_exception
  - microsoft.servicefabric.actors._reentrant
  - microsoft.servicefabric.actors._remindable
  - microsoft.servicefabric.actors._reminder_not_found_exception
  - microsoft.servicefabric.actors._state_change_kind
  - microsoft.servicefabric.actors._state_persistence
  - microsoft.servicefabric.actors._state_persistence_attribute
  - microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.yml
  langs:
  - java
  name: microsoft.servicefabric.actors
  nameWithType: microsoft.servicefabric.actors
  fullName: microsoft.servicefabric.actors
  type: Namespace
  source:
    remote:
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActivationDiagnosticData.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActivationDiagnosticData.java
  syntax:
    content: package microsoft.servicefabric.actors
references:
- uid: microsoft.servicefabric.actors._actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor.yml
  name: Actor
  nameWithType: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: <p>Base interface for inheriting reliable actor interfaces. </p>
  syntax:
    content: public interface Actor
- uid: microsoft.servicefabric.actors._actor_base
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_base.yml
  name: ActorBase
  nameWithType: ActorBase
  fullName: microsoft.servicefabric.actors.ActorBase
  type: Class
  summary: >-
    <p>Represents base class for actors. <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref></p>

    <p>

      <bold>Remarks:</bold>This is a base type for actor, it provides the functionality that is common across actors implemented by actor deriving from <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref href="microsoft.servicefabric.actors._actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ActorBase
- uid: microsoft.servicefabric.actors._actor_call_type
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_call_type.yml
  name: ActorCallType
  nameWithType: ActorCallType
  fullName: microsoft.servicefabric.actors.ActorCallType
  type: Enum
  summary: >-
    <p>Represents the call-type associated with the method invoked by actor runtime. </p>

    <p>

      <bold>Remarks:</bold>This is provided as part of <xref href="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false"></xref> which is passed as argument to <xref href="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false"></xref> and <xref href="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum ActorCallType
- uid: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception.yml
  name: ActorConcurrencyLockTimeoutException
  nameWithType: ActorConcurrencyLockTimeoutException
  fullName: microsoft.servicefabric.actors.ActorConcurrencyLockTimeoutException
  type: Class
  summary: <p>Exception thrown by actor runtime when runtime cannot acquire the turn based concurrency lock to dispatch the method. </p>
  syntax:
    content: public class ActorConcurrencyLockTimeoutException extends FabricException
- uid: microsoft.servicefabric.actors._actor_concurrency_settings
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  name: ActorConcurrencySettings
  nameWithType: ActorConcurrencySettings
  fullName: microsoft.servicefabric.actors.ActorConcurrencySettings
  type: Class
  summary: <p>The method calls on an actor dispatched via in turn with support for logical call context based reentrancy. This class provides the settings to configure the turn based concurrency lock for actors. </p>
  syntax:
    content: public class ActorConcurrencySettings
- uid: microsoft.servicefabric.actors._actor_event_proxy
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_event_proxy.yml
  name: ActorEventProxy
  nameWithType: ActorEventProxy
  fullName: microsoft.servicefabric.actors.ActorEventProxy
  type: Class
  summary: <p>Provides the base implementation for the proxy to invoke methods on actor event subscribers. </p>
  syntax:
    content: public class ActorEventProxy extends ProxyBase
- uid: microsoft.servicefabric.actors._actor_event_publisher
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_event_publisher.yml
  name: ActorEventPublisher
  nameWithType: ActorEventPublisher
  fullName: microsoft.servicefabric.actors.ActorEventPublisher
  type: Interface
  summary: <p>Represents publisher of actor events. Publishers of actor events must implement this interface </p>
  syntax:
    content: public interface ActorEventPublisher
- uid: microsoft.servicefabric.actors._actor_event_publisher_e
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_event_publisher_e.yml
  name: ActorEventPublisherE<TActorEvents>
  nameWithType: ActorEventPublisherE<TActorEvents>
  fullName: microsoft.servicefabric.actors.ActorEventPublisherE<TActorEvents>
  type: Interface
  summary: >-
    <p>Represents publisher of actor events. Publishers of actor events must implement this interface</p>

    <p></p>
  syntax:
    content: public interface ActorEventPublisherE<TActorEvents extends ActorEvents> extends ActorEventPublisher
    typeParameters:
    - type: 6e1c167f
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> event interface type derived from <xref href="microsoft.servicefabric.actors._actor_events" data-throw-if-not-resolved="false"></xref>. </p>
- uid: microsoft.servicefabric.actors._actor_events
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_events.yml
  name: ActorEvents
  nameWithType: ActorEvents
  fullName: microsoft.servicefabric.actors.ActorEvents
  type: Interface
  summary: <p>Represents actor events. Interface that creates actor events must implement this interface </p>
  syntax:
    content: public interface ActorEvents
- uid: microsoft.servicefabric.actors._actor_extensions
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_extensions.yml
  name: ActorExtensions
  nameWithType: ActorExtensions
  fullName: microsoft.servicefabric.actors.ActorExtensions
  type: Class
  summary: <p>Class containing extension methods for Actors. </p>
  syntax:
    content: public class ActorExtensions
- uid: microsoft.servicefabric.actors._actor_garbage_collection
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_garbage_collection.yml
  name: ActorGarbageCollection
  nameWithType: ActorGarbageCollection
  fullName: microsoft.servicefabric.actors.ActorGarbageCollection
  type: Interface
  summary: <p>Settings to configures Garbage Collection behavior of <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Service. </p>
  syntax:
    content: public interface ActorGarbageCollection
- uid: microsoft.servicefabric.actors._actor_garbage_collection_settings
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_garbage_collection_settings.yml
  name: ActorGarbageCollectionSettings
  nameWithType: ActorGarbageCollectionSettings
  fullName: microsoft.servicefabric.actors.ActorGarbageCollectionSettings
  type: Class
  summary: <p>Settings to configures Garbage Collection behavior of <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Service. </p>
  syntax:
    content: public class ActorGarbageCollectionSettings
- uid: microsoft.servicefabric.actors._actor_id
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: >-
    <p>

      <xref href="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false"></xref> represents identity of an actor within an actor service. The actors can be identified by <ref refid="" kindref="compound">java.lang.String</ref>, <ref refid="" kindref="compound">java.util.UUID</ref> or long. </p>
  syntax:
    content: public class ActorId
- uid: microsoft.servicefabric.actors._actor_id_kind
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id_kind.yml
  name: ActorIdKind
  nameWithType: ActorIdKind
  fullName: microsoft.servicefabric.actors.ActorIdKind
  type: Enum
  summary: <p>Specifies the type of id value for <xref href="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum ActorIdKind
- uid: microsoft.servicefabric.actors._actor_information
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_information.yml
  name: ActorInformation
  nameWithType: ActorInformation
  fullName: microsoft.servicefabric.actors.ActorInformation
  type: Class
  summary: <p>Represents the information about an actor returned by <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Query method call. </p>
  syntax:
    content: public class ActorInformation
- uid: microsoft.servicefabric.actors._actor_message_headers
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_message_headers.yml
  name: ActorMessageHeaders
  nameWithType: ActorMessageHeaders
  fullName: microsoft.servicefabric.actors.ActorMessageHeaders
  type: Class
  summary: <p>Header for the actor messages. </p>
  syntax:
    content: public class ActorMessageHeaders
- uid: microsoft.servicefabric.actors._actor_method_attributes
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_method_attributes.yml
  name: ActorMethodAttributes
  nameWithType: ActorMethodAttributes
  fullName: microsoft.servicefabric.actors.ActorMethodAttributes
  type: Enum
  syntax:
    content: public enum ActorMethodAttributes
- uid: microsoft.servicefabric.actors._actor_method_context
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_method_context.yml
  name: ActorMethodContext
  nameWithType: ActorMethodContext
  fullName: microsoft.servicefabric.actors.ActorMethodContext
  type: Class
  summary: <p>An <xref href="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false"></xref> contains information about the method that is invoked by actor runtime and is passed as an argument to <xref href="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false"></xref> and <xref href="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ActorMethodContext
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  name: ActorMethodDispatcherBase
  nameWithType: ActorMethodDispatcherBase
  fullName: microsoft.servicefabric.actors.ActorMethodDispatcherBase
  type: Class
  summary: <p>The base class used by remoting code generator to generate the type that dispatches requests from the client to the right interface and method of the remoted object. </p>
  syntax:
    content: public class ActorMethodDispatcherBase extends MethodDispatcherBaseWithSerializer
- uid: microsoft.servicefabric.actors._actor_name_format
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_name_format.yml
  name: ActorNameFormat
  nameWithType: ActorNameFormat
  fullName: microsoft.servicefabric.actors.ActorNameFormat
  type: Class
  summary: <p>Contains static methods for generating names like service name, application name form the actor interface type. </p>
  syntax:
    content: public class ActorNameFormat
- uid: microsoft.servicefabric.actors._actor_proxy
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_proxy.yml
  name: ActorProxy
  nameWithType: ActorProxy
  fullName: microsoft.servicefabric.actors.ActorProxy
  type: Interface
  summary: <p>Provides the interface for implementation of proxy access for actor service. </p>
  syntax:
    content: public interface ActorProxy
- uid: microsoft.servicefabric.actors._actor_proxy_base
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_proxy_base.yml
  name: ActorProxyBase
  nameWithType: ActorProxyBase
  fullName: microsoft.servicefabric.actors.ActorProxyBase
  type: Class
  summary: <p>Provides the base implementation for the proxy to the remote actor objects implementing IActor interfaces. </p>
  syntax:
    content: public class ActorProxyBase extends ProxyBase implements ActorProxy
- uid: microsoft.servicefabric.actors._actor_proxy_event_utility
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_proxy_event_utility.yml
  name: ActorProxyEventUtility
  nameWithType: ActorProxyEventUtility
  fullName: microsoft.servicefabric.actors.ActorProxyEventUtility
  type: Class
  summary: <p>Contains extension methods related to actor events. </p>
  syntax:
    content: public class ActorProxyEventUtility
- uid: microsoft.servicefabric.actors._actor_proxy_factory
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_proxy_factory.yml
  name: ActorProxyFactory
  nameWithType: ActorProxyFactory
  fullName: microsoft.servicefabric.actors.ActorProxyFactory
  type: Interface
  summary: <p>Defines the interface containing methods to create actor proxy factory class. </p>
  syntax:
    content: public interface ActorProxyFactory
- uid: microsoft.servicefabric.actors._actor_reentrancy_mode
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reentrancy_mode.yml
  name: ActorReentrancyMode
  nameWithType: ActorReentrancyMode
  fullName: microsoft.servicefabric.actors.ActorReentrancyMode
  type: Enum
  summary: <p>Specifies Reentrancy mode for actor method calls. </p>
  syntax:
    content: public enum ActorReentrancyMode
- uid: microsoft.servicefabric.actors._actor_reminder
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reminder.yml
  name: ActorReminder
  nameWithType: ActorReminder
  fullName: microsoft.servicefabric.actors.ActorReminder
  type: Interface
  summary: <p>Encapsulates Reminder set on an <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public interface ActorReminder
- uid: microsoft.servicefabric.actors._actor_reminder_attributes
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reminder_attributes.yml
  name: ActorReminderAttributes
  nameWithType: ActorReminderAttributes
  fullName: microsoft.servicefabric.actors.ActorReminderAttributes
  type: Enum
  syntax:
    content: public enum ActorReminderAttributes
- uid: microsoft.servicefabric.actors._actor_reminder_collection
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reminder_collection.yml
  name: ActorReminderCollection
  nameWithType: ActorReminderCollection
  fullName: microsoft.servicefabric.actors.ActorReminderCollection
  type: Interface
  summary: <p>Captures <xref href="microsoft.servicefabric.actors._actor_reminder_state" data-throw-if-not-resolved="false"></xref> for Actors </p>
  syntax:
    content: public interface ActorReminderCollection
- uid: microsoft.servicefabric.actors._actor_reminder_state
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reminder_state.yml
  name: ActorReminderState
  nameWithType: ActorReminderState
  fullName: microsoft.servicefabric.actors.ActorReminderState
  type: Interface
  summary: <p>Represents internal state of <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Reminder </p>
  syntax:
    content: public interface ActorReminderState extends ActorReminder
- uid: microsoft.servicefabric.actors._actor_remoting_exception_handler
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_remoting_exception_handler.yml
  name: ActorRemotingExceptionHandler
  nameWithType: ActorRemotingExceptionHandler
  fullName: microsoft.servicefabric.actors.ActorRemotingExceptionHandler
  type: Class
  summary: >-
    <p>This class provide handling of exceptions encountered in communicating with service fabric actors over remoted actor interfaces.</p>

    <p>

      <bold>Remarks:</bold> This exception handler handles exceptions related to the following scenarios: </p>

    <p>

      <itemizedlist>

        <listitem>

          <p>&lt;cite&gt;Duplicate Messages:&lt;/cite&gt; </p>

          <p>Operations performed on the actor are retried from the client based on the exception handling logic. These exceptions represent various error condition including service failover. Therefore it is possible for the actors to receive duplicate messages. If a duplicate message is received while previous message is being processed by the actor, runtime return an internal exception to the client. The client then retries the operation to get the result back from the actor. From the actor's perspective duplicate operation will be performed by the clients and it should handle it in the similar manner as if the operation was already processed and then a duplicate message arrived. </p>

          <p></p>

          <p></p>

        </listitem>

        <listitem>

          <p>&lt;cite&gt;<xref href="microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception" data-throw-if-not-resolved="false"></xref>:&lt;/cite&gt; </p>

          <p>Operations on the actors are performed using a turn based concurrency lock ( <xref href="microsoft.servicefabric.actors._actor_concurrency_settings" data-throw-if-not-resolved="false"></xref>) that supports logical call context based reentrancy. In case of the long running actor operations it is possible for acquisition of this lock to time out. The acquisition of the lock can also time out in case of the deadlock situations (actor A and actor B calling each other almost at the same time). </p>

          <p></p>

          <p>The exception related to concurrency lock timeout is handled by returning <ref refid="" kindref="compound">ExceptionHandlingRetryResult</ref> from the <xref href="microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)" data-throw-if-not-resolved="false"></xref> method if the client performing the operation is not another actor. The <ref refid="" kindref="compound">ExceptionHandlingRetryResult#isTransient</ref> property of the <ref refid="" kindref="compound">ExceptionHandlingRetryResult</ref> is set to true, the <ref refid="" kindref="compound">ExceptionHandlingRetryResult</ref>'s retryDelay property is set to a random value up to <ref refid="" kindref="compound">OperationRetrySettings</ref>'s MaxRetryBackoffIntervalOnTransientErrors and <ref refid="" kindref="compound">ExceptionHandlingRetryResult</ref>'s MaxRetryCount property is set to <ref refid="" kindref="compound">Integer#MAX_VALUE</ref>. </p>

          <p></p>

          <p>The exception related to concurrency lock timeout is handled by returning <ref refid="" kindref="compound">ExceptionHandlingThrowResult</ref> from the <xref href="microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)" data-throw-if-not-resolved="false"></xref> method, if the client performing the operation is another actor. In the deadlock situations this allows the call chain to unwind all the way back to the original client and the operation is then retried from there. </p>

          <p></p>

        </listitem>

      </itemizedlist>

    </p>
  syntax:
    content: public class ActorRemotingExceptionHandler implements ExceptionHandler
- uid: microsoft.servicefabric.actors._actor_runtime
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_runtime.yml
  name: ActorRuntime
  nameWithType: ActorRuntime
  fullName: microsoft.servicefabric.actors.ActorRuntime
  type: Class
  summary: <p>Contains methods to register actor type with Service Fabric runtime. </p>
  syntax:
    content: public class ActorRuntime
- uid: microsoft.servicefabric.actors._actor_service
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service.yml
  name: ActorService
  nameWithType: ActorService
  fullName: microsoft.servicefabric.actors.ActorService
  type: Interface
  summary: <p>Defines the interface containing methods which can be called at <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Service level. </p>
  syntax:
    content: public interface ActorService extends Service
- uid: microsoft.servicefabric.actors._actor_service_attribute
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service_attribute.yml
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: microsoft.servicefabric.actors.ActorServiceAttribute
  type: Interface
  summary: <p>This attributes allows configuring the properties of the actor service. The attribute is applied on the actor type. </p>
  syntax:
    content: public interface ActorServiceAttribute
- uid: microsoft.servicefabric.actors._actor_service_partition_client
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service_partition_client.yml
  name: ActorServicePartitionClient
  nameWithType: ActorServicePartitionClient
  fullName: microsoft.servicefabric.actors.ActorServicePartitionClient
  type: Interface
  syntax:
    content: public interface ActorServicePartitionClient extends ServiceRemotingPartitionClient
- uid: microsoft.servicefabric.actors._actor_service_proxy
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service_proxy.yml
  name: ActorServiceProxy
  nameWithType: ActorServiceProxy
  fullName: microsoft.servicefabric.actors.ActorServiceProxy
  type: Class
  summary: <p>Proxy used by clients to interact with the actor service running in Service Fabric cluster and perform actor service level operations. </p>
  syntax:
    content: public class ActorServiceProxy
- uid: microsoft.servicefabric.actors._actor_service_remoting_dispatcher
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service_remoting_dispatcher.yml
  name: ActorServiceRemotingDispatcher
  nameWithType: ActorServiceRemotingDispatcher
  fullName: microsoft.servicefabric.actors.ActorServiceRemotingDispatcher
  type: Class
  summary: <p>Provides an implementation of <ref refid="" kindref="compound">ServiceRemotingMessageHandler</ref> that can dispatch messages to an actor service and to the actors hosted in the service. </p>
  syntax:
    content: public class ActorServiceRemotingDispatcher extends ServiceRemotingDispatcher
- uid: microsoft.servicefabric.actors._actor_service_settings
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service_settings.yml
  name: ActorServiceSettings
  nameWithType: ActorServiceSettings
  fullName: microsoft.servicefabric.actors.ActorServiceSettings
  type: Class
  summary: <p>Settings to configures behavior of <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Service. </p>
  syntax:
    content: public class ActorServiceSettings
- uid: microsoft.servicefabric.actors._actor_state_change
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_state_change.yml
  name: ActorStateChange
  nameWithType: ActorStateChange
  fullName: microsoft.servicefabric.actors.ActorStateChange
  type: Class
  summary: <p>Represents change to an actor state with a given state name. </p>
  syntax:
    content: public class ActorStateChange
- uid: microsoft.servicefabric.actors._actor_state_manager
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_state_manager.yml
  name: ActorStateManager
  nameWithType: ActorStateManager
  fullName: microsoft.servicefabric.actors.ActorStateManager
  type: Interface
  summary: <p>Represents the interface that state manager for <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> implements. </p>
  syntax:
    content: public interface ActorStateManager
- uid: microsoft.servicefabric.actors._actor_state_provider
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  name: ActorStateProvider
  nameWithType: ActorStateProvider
  fullName: microsoft.servicefabric.actors.ActorStateProvider
  type: Interface
  summary: <p>Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it. </p>
  syntax:
    content: public interface ActorStateProvider extends StateProviderReplica
- uid: microsoft.servicefabric.actors._actor_state_provider_attribute
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_state_provider_attribute.yml
  name: ActorStateProviderAttribute
  nameWithType: ActorStateProviderAttribute
  fullName: microsoft.servicefabric.actors.ActorStateProviderAttribute
  type: Interface
  syntax:
    content: public interface ActorStateProviderAttribute
- uid: microsoft.servicefabric.actors._actor_timer
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_timer.yml
  name: ActorTimer
  nameWithType: ActorTimer
  fullName: microsoft.servicefabric.actors.ActorTimer
  type: Interface
  summary: <p>Represents Timer set on an <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public interface ActorTimer
- uid: microsoft.servicefabric.actors._actor_type_extensions
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_type_extensions.yml
  name: ActorTypeExtensions
  nameWithType: ActorTypeExtensions
  fullName: microsoft.servicefabric.actors.ActorTypeExtensions
  type: Class
  syntax:
    content: public class ActorTypeExtensions
- uid: microsoft.servicefabric.actors._actor_type_information
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_type_information.yml
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.ActorTypeInformation
  type: Class
  summary: <p>Contains information about the type implementing an actor. </p>
  syntax:
    content: public class ActorTypeInformation
- uid: microsoft.servicefabric.actors._continuation_token
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._continuation_token.yml
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: microsoft.servicefabric.actors.ContinuationToken
  type: Class
  summary: >-
    <p>Represents a continuation token for query operations. </p>

    <p>

      <bold>Remarks:</bold>A method that may return a partial set of results via a <xref href="microsoft.servicefabric.actors._paged_result" data-throw-if-not-resolved="false"></xref> object also returns a continuation token in the object, which can be used in a subsequent call to return the next set of available results. </p>
  syntax:
    content: public class ContinuationToken
- uid: microsoft.servicefabric.actors._diagnostics_manager
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._diagnostics_manager.yml
  name: DiagnosticsManager
  nameWithType: DiagnosticsManager
  fullName: microsoft.servicefabric.actors.DiagnosticsManager
  type: Interface
  syntax:
    content: public interface DiagnosticsManager
- uid: microsoft.servicefabric.actors._fabric_actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_actor.yml
  name: FabricActor
  nameWithType: FabricActor
  fullName: microsoft.servicefabric.actors.FabricActor
  type: Class
  summary: >-
    <p>Represents a actor that can have multiple reliable 'named' states associated with it. <xref href="microsoft.servicefabric.actors._actor_base" data-throw-if-not-resolved="false"></xref></p>

    <p>

      <bold>Remarks:</bold>The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref href="microsoft.servicefabric.actors._actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class FabricActor extends ActorBase
- uid: microsoft.servicefabric.actors._fabric_actor_proxy_factory
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
  name: FabricActorProxyFactory
  nameWithType: FabricActorProxyFactory
  fullName: microsoft.servicefabric.actors.FabricActorProxyFactory
  type: Class
  summary: <p>Factory class to create a proxy to the remote actor objects. </p>
  syntax:
    content: public class FabricActorProxyFactory implements ActorProxyFactory
- uid: microsoft.servicefabric.actors._fabric_actor_reference
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_actor_reference.yml
  name: FabricActorReference
  nameWithType: FabricActorReference
  fullName: microsoft.servicefabric.actors.FabricActorReference
  type: Class
  summary: <p>Encapsulation of a reference to an actor for serialization. </p>
  syntax:
    content: public class FabricActorReference
- uid: microsoft.servicefabric.actors._fabric_actor_service
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_actor_service.yml
  name: FabricActorService
  nameWithType: FabricActorService
  fullName: microsoft.servicefabric.actors.FabricActorService
  type: Class
  summary: >-
    <p>Represents the base class for Microsoft Service Fabric based reliable actors service. </p>

    <p>

      <bold>Remarks:</bold>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors. </p>
  syntax:
    content: public class FabricActorService extends StatefulServiceBase implements ActorService
- uid: microsoft.servicefabric.actors._fabric_transport_actor_remoting
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_transport_actor_remoting.yml
  name: FabricTransportActorRemoting
  nameWithType: FabricTransportActorRemoting
  fullName: microsoft.servicefabric.actors.FabricTransportActorRemoting
  type: Interface
  summary: <p>Sets fabric TCP transport as the default remoting provider for the actors. </p>
  syntax:
    content: public interface FabricTransportActorRemoting
- uid: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.yml
  name: FabricTransportActorRemotingClientFactory
  nameWithType: FabricTransportActorRemotingClientFactory
  fullName: microsoft.servicefabric.actors.FabricTransportActorRemotingClientFactory
  type: Class
  summary: <p>An <xref href="microsoft.servicefabric.services.remoting.client._service_remoting_client_factory" data-throw-if-not-resolved="false"></xref> that uses Fabric TCP transport to create <xref href="microsoft.servicefabric.services.remoting.client._service_remoting_client" data-throw-if-not-resolved="false"></xref> that communicate with actors over interfaces that are remoted via <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime._fabric198c971d5cab31d2511f0c386313959d" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class FabricTransportActorRemotingClientFactory extends FabricTransportServiceRemotingClientFactory
- uid: microsoft.servicefabric.actors._fabric_transport_actor_service_remoting_listener
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_transport_actor_service_remoting_listener.yml
  name: FabricTransportActorServiceRemotingListener
  nameWithType: FabricTransportActorServiceRemotingListener
  fullName: microsoft.servicefabric.actors.FabricTransportActorServiceRemotingListener
  type: Class
  summary: <p>An <xref href="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false"></xref> that uses fabric TCP transport to provide remoting of actor and service interfaces for actor service. </p>
  syntax:
    content: public class FabricTransportActorServiceRemotingListener extends FabricTransportServiceRemotingListener
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: KvsActorStateProvider
  nameWithType: KvsActorStateProvider
  fullName: microsoft.servicefabric.actors.KvsActorStateProvider
  type: Class
  syntax:
    content: public class KvsActorStateProvider implements ActorStateProvider
- uid: microsoft.servicefabric.actors._observable
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._observable.yml
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: microsoft.servicefabric.actors.Observable<T>
  type: Class
  syntax:
    content: public class Observable<T>
    typeParameters:
    - type: 8ce1ecb9
- uid: microsoft.servicefabric.actors._paged_result
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._paged_result.yml
  name: PagedResult<T>
  nameWithType: PagedResult<T>
  fullName: microsoft.servicefabric.actors.PagedResult<T>
  type: Class
  summary: >-
    <p>Represents the result of actor query calls.</p>

    <p></p>
  syntax:
    content: public class PagedResult<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>Type of the items this query result contains. </p>
- uid: microsoft.servicefabric.actors._readonly
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._readonly.yml
  name: Readonly
  nameWithType: Readonly
  fullName: microsoft.servicefabric.actors.Readonly
  type: Interface
  syntax:
    content: public interface Readonly
- uid: microsoft.servicefabric.actors._reentrancy_mode
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._reentrancy_mode.yml
  name: ReentrancyMode
  nameWithType: ReentrancyMode
  fullName: microsoft.servicefabric.actors.ReentrancyMode
  type: Enum
  summary: <p>Specifies Reentrancy mode for actor method calls. </p>
  syntax:
    content: public enum ReentrancyMode
- uid: microsoft.servicefabric.actors._reentrancy_mode_disallowed_exception
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._reentrancy_mode_disallowed_exception.yml
  name: ReentrancyModeDisallowedException
  nameWithType: ReentrancyModeDisallowedException
  fullName: microsoft.servicefabric.actors.ReentrancyModeDisallowedException
  type: Class
  summary: <p>Exception thrown by actor runtime when reentrant call is made for an actor and its <xref href="microsoft.servicefabric.actors._reentrancy_mode" data-throw-if-not-resolved="false"></xref> is set to <xref href="microsoft.servicefabric.actors._reentrancy_mode.Disallowed()" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ReentrancyModeDisallowedException extends FabricException
- uid: microsoft.servicefabric.actors._reentrant
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._reentrant.yml
  name: Reentrant
  nameWithType: Reentrant
  fullName: microsoft.servicefabric.actors.Reentrant
  type: Interface
  syntax:
    content: public interface Reentrant
- uid: microsoft.servicefabric.actors._remindable
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._remindable.yml
  name: Remindable
  nameWithType: Remindable
  fullName: microsoft.servicefabric.actors.Remindable
  type: Interface
  summary: <p>Interface which actors that use reminders must implement. </p>
  syntax:
    content: public interface Remindable
- uid: microsoft.servicefabric.actors._reminder_not_found_exception
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._reminder_not_found_exception.yml
  name: ReminderNotFoundException
  nameWithType: ReminderNotFoundException
  fullName: microsoft.servicefabric.actors.ReminderNotFoundException
  type: Class
  summary: <p>Exception thrown by actor runtime when a specified reminder is not found for the actor. </p>
  syntax:
    content: public class ReminderNotFoundException extends FabricException
- uid: microsoft.servicefabric.actors._state_change_kind
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._state_change_kind.yml
  name: StateChangeKind
  nameWithType: StateChangeKind
  fullName: microsoft.servicefabric.actors.StateChangeKind
  type: Enum
  summary: <p>Represents kind of state change for an actor state when <ref refid="" kindref="compound">ActorStateProvider#saveStateAsync(ActorId, java.util.List)</ref> saves changes to a set of actor states. </p>
  syntax:
    content: public enum StateChangeKind
- uid: microsoft.servicefabric.actors._state_persistence
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._state_persistence.yml
  name: StatePersistence
  nameWithType: StatePersistence
  fullName: microsoft.servicefabric.actors.StatePersistence
  type: Enum
  summary: <p>Indicates how actor state is stored for an actor service. </p>
  syntax:
    content: public enum StatePersistence
- uid: microsoft.servicefabric.actors._state_persistence_attribute
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._state_persistence_attribute.yml
  name: StatePersistenceAttribute
  nameWithType: StatePersistenceAttribute
  fullName: microsoft.servicefabric.actors.StatePersistenceAttribute
  type: Interface
  summary: <p>Indicates whether actor state should be volatile (in-memory only), persisted, or not stored at all. The store type given to this attribute must match the type of state provider used in the actor service. </p>
  syntax:
    content: public interface StatePersistenceAttribute
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: VolatileActorStateProvider
  nameWithType: VolatileActorStateProvider
  fullName: microsoft.servicefabric.actors.VolatileActorStateProvider
  type: Class
  summary: >-
    <p>

      <xref href="microsoft.servicefabric.actors._actor_state_provider" data-throw-if-not-resolved="false"></xref> implementation for Volatile persistence i.e <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> state is kept in-memory only. </p>
  syntax:
    content: public class VolatileActorStateProvider implements ActorStateProvider,StateProvider
