### YamlMime:JavaType
uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient"
fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient"
name: "PersonalizerAdministrationAsyncClient"
nameWithType: "PersonalizerAdministrationAsyncClient"
summary: "This class provides an asynchronous client that contains the operations that apply to Azure Personalizer."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **PersonalizerAdministrationAsyncClient**"
methods:
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.applyEvaluation(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.applyEvaluation(String evaluationId, String policyName)"
  name: "applyEvaluation(String evaluationId, String policyName)"
  nameWithType: "PersonalizerAdministrationAsyncClient.applyEvaluation(String evaluationId, String policyName)"
  summary: "Apply Learning Settings and model from a pre-existing Offline Evaluation, making them the current online Learning Settings and model and replacing the previous ones."
  parameters:
  - description: "EvaluationId of the evaluation."
    name: "evaluationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "PolicyName of the policy within the evaluation."
    name: "policyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> applyEvaluation(String evaluationId, String policyName)"
  desc: "Apply Learning Settings and model from a pre-existing Offline Evaluation, making them the current online Learning Settings and model and replacing the previous ones."
  returns:
    description: "the completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.applyEvaluationWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.applyEvaluationWithResponse(String evaluationId, String policyName)"
  name: "applyEvaluationWithResponse(String evaluationId, String policyName)"
  nameWithType: "PersonalizerAdministrationAsyncClient.applyEvaluationWithResponse(String evaluationId, String policyName)"
  summary: "Apply Learning Settings and model from a pre-existing Offline Evaluation, making them the current online Learning Settings and model and replacing the previous ones."
  parameters:
  - description: "EvaluationId of the evaluation."
    name: "evaluationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "PolicyName of the policy within the evaluation."
    name: "policyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> applyEvaluationWithResponse(String evaluationId, String policyName)"
  desc: "Apply Learning Settings and model from a pre-existing Offline Evaluation, making them the current online Learning Settings and model and replacing the previous ones."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.beginCreateEvaluation(com.azure.ai.personalizer.administration.models.PersonalizerEvaluationOptions)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.beginCreateEvaluation(PersonalizerEvaluationOptions evaluationOptions)"
  name: "beginCreateEvaluation(PersonalizerEvaluationOptions evaluationOptions)"
  nameWithType: "PersonalizerAdministrationAsyncClient.beginCreateEvaluation(PersonalizerEvaluationOptions evaluationOptions)"
  summary: "Submit a new Offline Evaluation job."
  parameters:
  - description: "The Offline Evaluation job definition."
    name: "evaluationOptions"
    type: "<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerEvaluationOptions?alt=com.azure.ai.personalizer.administration.models.PersonalizerEvaluationOptions&text=PersonalizerEvaluationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<CreateEvaluationOperationResult,PersonalizerEvaluation> beginCreateEvaluation(PersonalizerEvaluationOptions evaluationOptions)"
  desc: "Submit a new Offline Evaluation job.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support."
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the counterfactual evaluation until it has completed, has failed, or has\n been cancelled. The completed operation returns the completed <xref uid=\"com.azure.ai.personalizer.administration.models.PersonalizerEvaluation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"evaluation with results\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.CreateEvaluationOperationResult?alt=com.azure.ai.personalizer.administration.models.CreateEvaluationOperationResult&text=CreateEvaluationOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerEvaluation?alt=com.azure.ai.personalizer.administration.models.PersonalizerEvaluation&text=PersonalizerEvaluation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.deleteEvaluation(java.lang.String)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.deleteEvaluation(String evaluationId)"
  name: "deleteEvaluation(String evaluationId)"
  nameWithType: "PersonalizerAdministrationAsyncClient.deleteEvaluation(String evaluationId)"
  summary: "Delete the Offline Evaluation associated with the Id."
  parameters:
  - description: "Id of the Offline Evaluation to delete."
    name: "evaluationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteEvaluation(String evaluationId)"
  desc: "Delete the Offline Evaluation associated with the Id."
  returns:
    description: "the completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.deleteEvaluationWithResponse(java.lang.String)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.deleteEvaluationWithResponse(String evaluationId)"
  name: "deleteEvaluationWithResponse(String evaluationId)"
  nameWithType: "PersonalizerAdministrationAsyncClient.deleteEvaluationWithResponse(String evaluationId)"
  summary: "Delete the Offline Evaluation associated with the Id."
  parameters:
  - description: "Id of the Offline Evaluation to delete."
    name: "evaluationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteEvaluationWithResponse(String evaluationId)"
  desc: "Delete the Offline Evaluation associated with the Id."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.deleteLogs()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.deleteLogs()"
  name: "deleteLogs()"
  nameWithType: "PersonalizerAdministrationAsyncClient.deleteLogs()"
  summary: "Delete all logs of Rank and Reward calls stored by Personalizer."
  syntax: "public Mono<Void> deleteLogs()"
  desc: "Delete all logs of Rank and Reward calls stored by Personalizer."
  returns:
    description: "the completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.deleteLogsWithResponse()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.deleteLogsWithResponse()"
  name: "deleteLogsWithResponse()"
  nameWithType: "PersonalizerAdministrationAsyncClient.deleteLogsWithResponse()"
  summary: "Delete all logs of Rank and Reward calls stored by Personalizer."
  syntax: "public Mono<Response<Void>> deleteLogsWithResponse()"
  desc: "Delete all logs of Rank and Reward calls stored by Personalizer."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.exportModelWithResponse(boolean)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.exportModelWithResponse(boolean isSigned)"
  name: "exportModelWithResponse(boolean isSigned)"
  nameWithType: "PersonalizerAdministrationAsyncClient.exportModelWithResponse(boolean isSigned)"
  summary: "Get the model file generated by Personalizer service."
  parameters:
  - description: "True if requesting signed model zip archive, false otherwise."
    name: "isSigned"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> exportModelWithResponse(boolean isSigned)"
  desc: "Get the model file generated by Personalizer service."
  returns:
    description: "the model file generated by Personalizer service."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getEvaluation(java.lang.String)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getEvaluation(String evaluationId)"
  name: "getEvaluation(String evaluationId)"
  nameWithType: "PersonalizerAdministrationAsyncClient.getEvaluation(String evaluationId)"
  summary: "Get the Offline Evaluation associated with the Id."
  parameters:
  - description: "Id of the Offline Evaluation."
    name: "evaluationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<PersonalizerEvaluation> getEvaluation(String evaluationId)"
  desc: "Get the Offline Evaluation associated with the Id."
  returns:
    description: "the Offline Evaluation associated with the Id on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerEvaluation?alt=com.azure.ai.personalizer.administration.models.PersonalizerEvaluation&text=PersonalizerEvaluation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getEvaluationWithResponse(java.lang.String)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getEvaluationWithResponse(String evaluationId)"
  name: "getEvaluationWithResponse(String evaluationId)"
  nameWithType: "PersonalizerAdministrationAsyncClient.getEvaluationWithResponse(String evaluationId)"
  summary: "Get the Offline Evaluation associated with the Id."
  parameters:
  - description: "Id of the Offline Evaluation."
    name: "evaluationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<PersonalizerEvaluation>> getEvaluationWithResponse(String evaluationId)"
  desc: "Get the Offline Evaluation associated with the Id."
  returns:
    description: "the Offline Evaluation associated with the Id along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerEvaluation?alt=com.azure.ai.personalizer.administration.models.PersonalizerEvaluation&text=PersonalizerEvaluation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getLogsProperties()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getLogsProperties()"
  name: "getLogsProperties()"
  nameWithType: "PersonalizerAdministrationAsyncClient.getLogsProperties()"
  summary: "Get properties of the Personalizer logs."
  syntax: "public Mono<PersonalizerLogProperties> getLogsProperties()"
  desc: "Get properties of the Personalizer logs."
  returns:
    description: "properties of the Personalizer logs on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerLogProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerLogProperties&text=PersonalizerLogProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getLogsPropertiesWithResponse()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getLogsPropertiesWithResponse()"
  name: "getLogsPropertiesWithResponse()"
  nameWithType: "PersonalizerAdministrationAsyncClient.getLogsPropertiesWithResponse()"
  summary: "Get properties of the Personalizer logs."
  syntax: "public Mono<Response<PersonalizerLogProperties>> getLogsPropertiesWithResponse()"
  desc: "Get properties of the Personalizer logs."
  returns:
    description: "properties of the Personalizer logs along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerLogProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerLogProperties&text=PersonalizerLogProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getModelProperties()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getModelProperties()"
  name: "getModelProperties()"
  nameWithType: "PersonalizerAdministrationAsyncClient.getModelProperties()"
  summary: "Get properties of the model file generated by Personalizer service."
  syntax: "public Mono<PersonalizerModelProperties> getModelProperties()"
  desc: "Get properties of the model file generated by Personalizer service."
  returns:
    description: "properties of the model file generated by Personalizer service on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerModelProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerModelProperties&text=PersonalizerModelProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getModelPropertiesWithResponse()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getModelPropertiesWithResponse()"
  name: "getModelPropertiesWithResponse()"
  nameWithType: "PersonalizerAdministrationAsyncClient.getModelPropertiesWithResponse()"
  summary: "Get properties of the model file generated by Personalizer service."
  syntax: "public Mono<Response<PersonalizerModelProperties>> getModelPropertiesWithResponse()"
  desc: "Get properties of the model file generated by Personalizer service."
  returns:
    description: "properties of the model file generated by Personalizer service along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerModelProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerModelProperties&text=PersonalizerModelProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getPolicy()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getPolicy()"
  name: "getPolicy()"
  nameWithType: "PersonalizerAdministrationAsyncClient.getPolicy()"
  summary: "Get the Learning Settings currently used by the Personalizer service."
  syntax: "public Mono<PersonalizerPolicy> getPolicy()"
  desc: "Get the Learning Settings currently used by the Personalizer service."
  returns:
    description: "the Learning Settings currently used by the Personalizer service on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerPolicy?alt=com.azure.ai.personalizer.administration.models.PersonalizerPolicy&text=PersonalizerPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getPolicyWithResponse()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getPolicyWithResponse()"
  name: "getPolicyWithResponse()"
  nameWithType: "PersonalizerAdministrationAsyncClient.getPolicyWithResponse()"
  summary: "Get the Learning Settings currently used by the Personalizer service."
  syntax: "public Mono<Response<PersonalizerPolicy>> getPolicyWithResponse()"
  desc: "Get the Learning Settings currently used by the Personalizer service."
  returns:
    description: "the Learning Settings currently used by the Personalizer service along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerPolicy?alt=com.azure.ai.personalizer.administration.models.PersonalizerPolicy&text=PersonalizerPolicy\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getServiceProperties()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getServiceProperties()"
  name: "getServiceProperties()"
  nameWithType: "PersonalizerAdministrationAsyncClient.getServiceProperties()"
  summary: "Get the current properties of the personalizer service."
  syntax: "public Mono<PersonalizerServiceProperties> getServiceProperties()"
  desc: "Get the current properties of the personalizer service."
  returns:
    description: "The properties of the personalizer service on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties&text=PersonalizerServiceProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getServicePropertiesWithResponse()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.getServicePropertiesWithResponse()"
  name: "getServicePropertiesWithResponse()"
  nameWithType: "PersonalizerAdministrationAsyncClient.getServicePropertiesWithResponse()"
  summary: "Get the current properties of the personalizer service."
  syntax: "public Mono<Response<PersonalizerServiceProperties>> getServicePropertiesWithResponse()"
  desc: "Get the current properties of the personalizer service."
  returns:
    description: "The properties of the personalizer service along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties&text=PersonalizerServiceProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.importModel(com.azure.core.util.BinaryData)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.importModel(BinaryData signedModel)"
  name: "importModel(BinaryData signedModel)"
  nameWithType: "PersonalizerAdministrationAsyncClient.importModel(BinaryData signedModel)"
  summary: "Import the digitally signed model file."
  parameters:
  - description: "The signed model file."
    name: "signedModel"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> importModel(BinaryData signedModel)"
  desc: "Import the digitally signed model file. The input file is obtained by calling the exportModel api."
  returns:
    description: "completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.importModelWithResponse(com.azure.core.util.BinaryData)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.importModelWithResponse(BinaryData signedModel)"
  name: "importModelWithResponse(BinaryData signedModel)"
  nameWithType: "PersonalizerAdministrationAsyncClient.importModelWithResponse(BinaryData signedModel)"
  summary: "Import the digitally signed model file."
  parameters:
  - description: "The signed model file."
    name: "signedModel"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> importModelWithResponse(BinaryData signedModel)"
  desc: "Import the digitally signed model file. The input file is obtained by calling the exportModel api."
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.listEvaluations()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.listEvaluations()"
  name: "listEvaluations()"
  nameWithType: "PersonalizerAdministrationAsyncClient.listEvaluations()"
  summary: "Get list of evaluations with paging."
  syntax: "public PagedFlux<PersonalizerEvaluation> listEvaluations()"
  desc: "Get list of evaluations with paging."
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> of <xref uid=\"com.azure.ai.personalizer.administration.models.PersonalizerEvaluation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PersonalizerEvaluation\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerEvaluation?alt=com.azure.ai.personalizer.administration.models.PersonalizerEvaluation&text=PersonalizerEvaluation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.resetModel()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.resetModel()"
  name: "resetModel()"
  nameWithType: "PersonalizerAdministrationAsyncClient.resetModel()"
  summary: "Resets the model file generated by Personalizer service."
  syntax: "public Mono<Void> resetModel()"
  desc: "Resets the model file generated by Personalizer service."
  returns:
    description: "completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.resetModelWithResponse()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.resetModelWithResponse()"
  name: "resetModelWithResponse()"
  nameWithType: "PersonalizerAdministrationAsyncClient.resetModelWithResponse()"
  summary: "Resets the model file generated by Personalizer service."
  syntax: "public Mono<Response<Void>> resetModelWithResponse()"
  desc: "Resets the model file generated by Personalizer service."
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.resetPolicy()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.resetPolicy()"
  name: "resetPolicy()"
  nameWithType: "PersonalizerAdministrationAsyncClient.resetPolicy()"
  summary: "Resets the learning settings of the Personalizer service to default."
  syntax: "public Mono<PersonalizerPolicy> resetPolicy()"
  desc: "Resets the learning settings of the Personalizer service to default."
  returns:
    description: "the new learning settings on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerPolicy?alt=com.azure.ai.personalizer.administration.models.PersonalizerPolicy&text=PersonalizerPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.resetPolicyWithResponse()"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.resetPolicyWithResponse()"
  name: "resetPolicyWithResponse()"
  nameWithType: "PersonalizerAdministrationAsyncClient.resetPolicyWithResponse()"
  summary: "Resets the learning settings of the Personalizer service to default."
  syntax: "public Mono<Response<PersonalizerPolicy>> resetPolicyWithResponse()"
  desc: "Resets the learning settings of the Personalizer service to default."
  returns:
    description: "the new learning settings along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerPolicy?alt=com.azure.ai.personalizer.administration.models.PersonalizerPolicy&text=PersonalizerPolicy\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.updatePolicy(com.azure.ai.personalizer.administration.models.PersonalizerPolicy)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.updatePolicy(PersonalizerPolicy policy)"
  name: "updatePolicy(PersonalizerPolicy policy)"
  nameWithType: "PersonalizerAdministrationAsyncClient.updatePolicy(PersonalizerPolicy policy)"
  summary: "Update the Learning Settings that the Personalizer service will use to train models."
  parameters:
  - description: "The learning settings."
    name: "policy"
    type: "<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerPolicy?alt=com.azure.ai.personalizer.administration.models.PersonalizerPolicy&text=PersonalizerPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PersonalizerPolicy> updatePolicy(PersonalizerPolicy policy)"
  desc: "Update the Learning Settings that the Personalizer service will use to train models."
  returns:
    description: "learning settings specifying how to train the model on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerPolicy?alt=com.azure.ai.personalizer.administration.models.PersonalizerPolicy&text=PersonalizerPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.updatePolicyWithResponse(com.azure.ai.personalizer.administration.models.PersonalizerPolicy)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.updatePolicyWithResponse(PersonalizerPolicy policy)"
  name: "updatePolicyWithResponse(PersonalizerPolicy policy)"
  nameWithType: "PersonalizerAdministrationAsyncClient.updatePolicyWithResponse(PersonalizerPolicy policy)"
  summary: "Update the Learning Settings that the Personalizer service will use to train models."
  parameters:
  - description: "The learning settings."
    name: "policy"
    type: "<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerPolicy?alt=com.azure.ai.personalizer.administration.models.PersonalizerPolicy&text=PersonalizerPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<PersonalizerPolicy>> updatePolicyWithResponse(PersonalizerPolicy policy)"
  desc: "Update the Learning Settings that the Personalizer service will use to train models."
  returns:
    description: "learning settings specifying how to train the model along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerPolicy?alt=com.azure.ai.personalizer.administration.models.PersonalizerPolicy&text=PersonalizerPolicy\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.updateProperties(com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.updateProperties(PersonalizerServiceProperties serviceProperties)"
  name: "updateProperties(PersonalizerServiceProperties serviceProperties)"
  nameWithType: "PersonalizerAdministrationAsyncClient.updateProperties(PersonalizerServiceProperties serviceProperties)"
  summary: "Update the Personalizer service service<wbr>Properties."
  parameters:
  - description: "The personalizer service serviceProperties."
    name: "serviceProperties"
    type: "<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties&text=PersonalizerServiceProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PersonalizerServiceProperties> updateProperties(PersonalizerServiceProperties serviceProperties)"
  desc: "Update the Personalizer service serviceProperties."
  returns:
    description: "the serviceProperties of the service with the completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties&text=PersonalizerServiceProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.updatePropertiesWithResponse(com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties)"
  fullName: "com.azure.ai.personalizer.administration.PersonalizerAdministrationAsyncClient.updatePropertiesWithResponse(PersonalizerServiceProperties serviceProperties)"
  name: "updatePropertiesWithResponse(PersonalizerServiceProperties serviceProperties)"
  nameWithType: "PersonalizerAdministrationAsyncClient.updatePropertiesWithResponse(PersonalizerServiceProperties serviceProperties)"
  summary: "Update the Personalizer service service<wbr>Properties."
  parameters:
  - description: "The personalizer service serviceProperties."
    name: "serviceProperties"
    type: "<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties&text=PersonalizerServiceProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<PersonalizerServiceProperties>> updatePropertiesWithResponse(PersonalizerServiceProperties serviceProperties)"
  desc: "Update the Personalizer service serviceProperties."
  returns:
    description: "the serviceProperties of the service along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties?alt=com.azure.ai.personalizer.administration.models.PersonalizerServiceProperties&text=PersonalizerServiceProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "This class provides an asynchronous client that contains the operations that apply to Azure Personalizer. Operations allowed by the client are viewing and editing the properties, policy, model, running evaluations.\n\n**Instantiating an asynchronous Personalizer Admin Client**\n\n```java\nPersonalizerAdministrationAsyncClient adminClient = new PersonalizerAdministrationClientBuilder()\n     .credential(new AzureKeyCredential(\"{key}\"))\n     .endpoint(\"{endpoint}\")\n     .buildAsyncClient();\n```"
metadata: {}
package: "com.azure.ai.personalizer.administration"
artifact: com.azure:azure-ai-personalizer:1.0.0-beta.1
