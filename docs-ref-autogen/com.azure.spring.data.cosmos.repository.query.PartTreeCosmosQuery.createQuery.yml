### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery*"
fullName: "com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery"
name: "createQuery"
nameWithType: "PartTreeCosmosQuery.createQuery"
members:
- uid: "com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)"
  fullName: "com.azure.spring.data.cosmos.repository.query.PartTreeCosmosQuery.createQuery(CosmosParameterAccessor accessor)"
  name: "createQuery(CosmosParameterAccessor accessor)"
  nameWithType: "PartTreeCosmosQuery.createQuery(CosmosParameterAccessor accessor)"
  overridden: "com.azure.spring.data.cosmos.repository.query.AbstractCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor)"
  parameters:
  - name: "accessor"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor?alt=com.azure.spring.data.cosmos.repository.query.CosmosParameterAccessor&text=CosmosParameterAccessor\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected CosmosQuery createQuery(CosmosParameterAccessor accessor)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.query"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
