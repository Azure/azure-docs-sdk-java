### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.AudioDataStream"
fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream"
name: "AudioDataStream"
nameWithType: "AudioDataStream"
summary: "Represents audio data stream used for operating audio data as a stream."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **AudioDataStream**</br> implements <xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
methods:
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.canReadData(long)"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.canReadData(long bytesRequested)"
  name: "canReadData(long bytesRequested)"
  nameWithType: "AudioDataStream.canReadData(long bytesRequested)"
  summary: "Check whether the stream has enough data to be read."
  parameters:
  - description: "The requested data size in bytes."
    name: "bytesRequested"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean canReadData(long bytesRequested)"
  desc: "Check whether the stream has enough data to be read."
  returns:
    description: "A bool indicating the result."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.canReadData(long,long)"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.canReadData(long pos, long bytesRequested)"
  name: "canReadData(long pos, long bytesRequested)"
  nameWithType: "AudioDataStream.canReadData(long pos, long bytesRequested)"
  summary: "Check whether the stream has enough data to be read, starting from the specified position."
  parameters:
  - description: "The position to start with."
    name: "pos"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The requested data size in bytes."
    name: "bytesRequested"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean canReadData(long pos, long bytesRequested)"
  desc: "Check whether the stream has enough data to be read, starting from the specified position."
  returns:
    description: "A bool indicating the result."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.close()"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.close()"
  name: "close()"
  nameWithType: "AudioDataStream.close()"
  summary: "Dispose of associated resources."
  syntax: "public void close()"
  desc: "Dispose of associated resources."
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.detachInput()"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.detachInput()"
  name: "detachInput()"
  nameWithType: "AudioDataStream.detachInput()"
  summary: "Stops any more data from getting to the stream."
  syntax: "public void detachInput()"
  desc: "Stops any more data from getting to the stream."
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.fromResult(com.microsoft.cognitiveservices.speech.KeywordRecognitionResult)"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.fromResult(KeywordRecognitionResult result)"
  name: "fromResult(KeywordRecognitionResult result)"
  nameWithType: "AudioDataStream.fromResult(KeywordRecognitionResult result)"
  summary: "Obtains the memory backed Audio<wbr>Data<wbr>Stream associated with a given Keyword<wbr>Recognition result."
  modifiers:
  - "static"
  parameters:
  - description: "The keyword recognition result."
    name: "result"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.KeywordRecognitionResult?alt=com.microsoft.cognitiveservices.speech.KeywordRecognitionResult&text=KeywordRecognitionResult\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AudioDataStream fromResult(KeywordRecognitionResult result)"
  desc: "Obtains the memory backed AudioDataStream associated with a given KeywordRecognition result."
  returns:
    description: "An audio stream with the input to the KeywordRecognizer starting from right before the Keyword."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.AudioDataStream?alt=com.microsoft.cognitiveservices.speech.AudioDataStream&text=AudioDataStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.fromResult(com.microsoft.cognitiveservices.speech.SpeechSynthesisResult)"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.fromResult(SpeechSynthesisResult result)"
  name: "fromResult(SpeechSynthesisResult result)"
  nameWithType: "AudioDataStream.fromResult(SpeechSynthesisResult result)"
  summary: "Creates a memory backed Audio<wbr>Data<wbr>Stream from given speech synthesis result."
  modifiers:
  - "static"
  parameters:
  - description: "The speech synthesis result."
    name: "result"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechSynthesisResult?alt=com.microsoft.cognitiveservices.speech.SpeechSynthesisResult&text=SpeechSynthesisResult\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AudioDataStream fromResult(SpeechSynthesisResult result)"
  desc: "Creates a memory backed AudioDataStream from given speech synthesis result."
  returns:
    description: "The audio data stream being created."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.AudioDataStream?alt=com.microsoft.cognitiveservices.speech.AudioDataStream&text=AudioDataStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.getImpl()"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.getImpl()"
  name: "getImpl()"
  nameWithType: "AudioDataStream.getImpl()"
  summary: "Returns the audio data stream implementation."
  syntax: "public SafeHandle getImpl()"
  desc: "Returns the audio data stream implementation."
  returns:
    description: "The implementation of the stream."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.getPosition()"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.getPosition()"
  name: "getPosition()"
  nameWithType: "AudioDataStream.getPosition()"
  summary: "Get current position of the audio data stream."
  syntax: "public long getPosition()"
  desc: "Get current position of the audio data stream."
  returns:
    description: "Current position."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.getProperties()"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.getProperties()"
  name: "getProperties()"
  nameWithType: "AudioDataStream.getProperties()"
  summary: "The collection of properties and their values defined for this audio data stream."
  syntax: "public PropertyCollection getProperties()"
  desc: "The collection of properties and their values defined for this audio data stream."
  returns:
    description: "The collection of properties and their values defined for this audio data stream."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.getStatus()"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.getStatus()"
  name: "getStatus()"
  nameWithType: "AudioDataStream.getStatus()"
  summary: "Get current status of the audio data stream."
  syntax: "public StreamStatus getStatus()"
  desc: "Get current status of the audio data stream."
  returns:
    description: "Current status."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.StreamStatus?alt=com.microsoft.cognitiveservices.speech.StreamStatus&text=StreamStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.readData(byte[])"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.readData(byte[] dataBuffer)"
  name: "readData(byte[] dataBuffer)"
  nameWithType: "AudioDataStream.readData(byte[] dataBuffer)"
  summary: "Reads the audio data specified by making an internal copy of the data."
  parameters:
  - description: "The audio buffer of which this function will make a copy to."
    name: "dataBuffer"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public long readData(byte[] dataBuffer)"
  desc: "Reads the audio data specified by making an internal copy of the data. The maximal number of bytes to be read is determined by the size of dataBuffer. If there is no data immediately available, read() blocks until the next data becomes available."
  returns:
    description: "The number of bytes filled, or 0 in case the stream hits its end and there is no more data available."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.readData(long,byte[])"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.readData(long pos, byte[] dataBuffer)"
  name: "readData(long pos, byte[] dataBuffer)"
  nameWithType: "AudioDataStream.readData(long pos, byte[] dataBuffer)"
  summary: "Reads the audio data specified by making an internal copy of the data, starting from the specified position."
  parameters:
  - description: "The position to start with."
    name: "pos"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The audio buffer of which this function will make a copy to."
    name: "dataBuffer"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public long readData(long pos, byte[] dataBuffer)"
  desc: "Reads the audio data specified by making an internal copy of the data, starting from the specified position. The maximal number of bytes to be read is determined by the size of dataBuffer. If there is no data immediately available, read() blocks until the next data becomes available."
  returns:
    description: "The number of bytes filled, or 0 in case the stream hits its end and there is no more data available."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.saveToWavFile(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.saveToWavFile(String fileName)"
  name: "saveToWavFile(String fileName)"
  nameWithType: "AudioDataStream.saveToWavFile(String fileName)"
  summary: "Save the audio data to a file, synchronously."
  parameters:
  - description: "The file name with full path."
    name: "fileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void saveToWavFile(String fileName)"
  desc: "Save the audio data to a file, synchronously."
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.saveToWavFileAsync(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.saveToWavFileAsync(String fileName)"
  name: "saveToWavFileAsync(String fileName)"
  nameWithType: "AudioDataStream.saveToWavFileAsync(String fileName)"
  summary: "Save the audio data to a file, asynchronously."
  parameters:
  - description: "The file name with full path."
    name: "fileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Void> saveToWavFileAsync(String fileName)"
  desc: "Save the audio data to a file, asynchronously."
  returns:
    description: "An asynchronous operation representing the saving."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.AudioDataStream.setPosition(long)"
  fullName: "com.microsoft.cognitiveservices.speech.AudioDataStream.setPosition(long pos)"
  name: "setPosition(long pos)"
  nameWithType: "AudioDataStream.setPosition(long pos)"
  summary: "Set current position of the audio data stream."
  parameters:
  - description: "Position to be set."
    name: "pos"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setPosition(long pos)"
  desc: "Set current position of the audio data stream."
type: "class"
desc: "Represents audio data stream used for operating audio data as a stream. Note: close() must be called in order to release underlying resources held by the object. Added in version 1.7.0"
implements:
- "<xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.cognitiveservices.speech"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.24.2
