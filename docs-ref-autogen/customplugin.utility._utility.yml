### YamlMime:ManagedReference
items:
- uid: customplugin.utility._utility
  id: _utility
  parent: customplugin.utility
  children:
  - customplugin.utility._utility.findConsole(String)
  - customplugin.utility._utility.findGradleFilesInPath(IPath,IWorkspaceRoot)
  - customplugin.utility._utility.formatClassName(String)
  - customplugin.utility._utility.getCurrentProject()
  - customplugin.utility._utility.getStandardDisplay()
  - customplugin.utility._utility.linkDefaultOutStreamToConsole()
  - customplugin.utility._utility.openWizard(String,WizardInvokationType)
  - customplugin.utility._utility.unlinkDefaultOutStreamToConsole()
  - customplugin.utility._utility.validateClassName(final String)
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: Utility
  nameWithType: Utility
  fullName: customplugin.utility.Utility
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 38
  package: customplugin.utility
  summary: >-
    <p>

      <xref uid="customplugin.utility._utility" data-throw-if-not-resolved="false">Utility</xref> class for Eclipse-plugin related utility Methods.</p>

    <p></p>
  syntax: &o2
    content: public class Utility
  inheritance:
  - java.lang.Object
- uid: customplugin.utility._utility.findConsole(String)
  id: findConsole(String)
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: findConsole(String name)
  nameWithType: Utility.findConsole(String name)
  fullName: static MessageConsole customplugin.utility.Utility.findConsole(String name)
  overload: customplugin.utility._utility.findConsole*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 157
  package: customplugin.utility
  summary: >-
    <p>Returns MessageConsole of the input name given</p>

    <p></p>
  syntax:
    content: public static MessageConsole findConsole(String name)
    parameters:
    - id: name
      type: "26831127"
    return:
      type: 946590ef
      description: <p>MessageConsole </p>
- uid: customplugin.utility._utility.findGradleFilesInPath(IPath,IWorkspaceRoot)
  id: findGradleFilesInPath(IPath,IWorkspaceRoot)
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: findGradleFilesInPath(IPath path, IWorkspaceRoot myWorkspaceRoot)
  nameWithType: Utility.findGradleFilesInPath(IPath path, IWorkspaceRoot myWorkspaceRoot)
  fullName: static List<IResource> customplugin.utility.Utility.findGradleFilesInPath(IPath path, IWorkspaceRoot myWorkspaceRoot)
  overload: customplugin.utility._utility.findGradleFilesInPath*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 125
  package: customplugin.utility
  syntax:
    content: public static List<IResource> findGradleFilesInPath(IPath path, IWorkspaceRoot myWorkspaceRoot)
    parameters:
    - id: path
      type: 6edc16cb
      description: <p>IPath - Specifies Path to the resource </p>
    - id: myWorkspaceRoot
      type: 601e17f2
      description: <p>IWorkspaceRoot - specifies workspace-root </p>
    return:
      type: 6f868ff4
- uid: customplugin.utility._utility.formatClassName(String)
  id: formatClassName(String)
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: formatClassName(String name)
  nameWithType: Utility.formatClassName(String name)
  fullName: static String customplugin.utility.Utility.formatClassName(String name)
  overload: customplugin.utility._utility.formatClassName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 66
  package: customplugin.utility
  summary: >-
    <p>Formats and returns input class-name - so that the first letter is always upper case.</p>

    <p></p>
  syntax: &o1
    content: public static String formatClassName(String name)
    parameters:
    - id: name
      type: "26831127"
    return:
      type: "26831127"
      description: <p>String name - Formatted such that first letter is upper-case letter if not already. </p>
- uid: customplugin.utility._utility.getCurrentProject()
  id: getCurrentProject()
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: getCurrentProject()
  nameWithType: Utility.getCurrentProject()
  fullName: static IProject customplugin.utility.Utility.getCurrentProject()
  overload: customplugin.utility._utility.getCurrentProject*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 84
  package: customplugin.utility
  summary: >-
    <p>Returns current project from platform+workbench+selection</p>

    <p></p>
  syntax:
    content: public static IProject getCurrentProject()
    return:
      type: 1750ec8e
      description: <p>IProject </p>
- uid: customplugin.utility._utility.getStandardDisplay()
  id: getStandardDisplay()
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: getStandardDisplay()
  nameWithType: Utility.getStandardDisplay()
  fullName: static Display customplugin.utility.Utility.getStandardDisplay()
  overload: customplugin.utility._utility.getStandardDisplay*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 223
  package: customplugin.utility
  summary: >-
    <p>

      <xref uid="customplugin.utility._utility" data-throw-if-not-resolved="false">Utility</xref> function to return the standard display at any instant</p>

    <p></p>
  syntax:
    content: public static Display getStandardDisplay()
    return:
      type: 247a98b9
      description: <p>Standard Display </p>
- uid: customplugin.utility._utility.linkDefaultOutStreamToConsole()
  id: linkDefaultOutStreamToConsole()
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: linkDefaultOutStreamToConsole()
  nameWithType: Utility.linkDefaultOutStreamToConsole()
  fullName: static void customplugin.utility.Utility.linkDefaultOutStreamToConsole()
  overload: customplugin.utility._utility.linkDefaultOutStreamToConsole*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 134
  package: customplugin.utility
  summary: <p>Reroute default output streams to a new console, added to console view. </p>
  syntax:
    content: public static void linkDefaultOutStreamToConsole()
- uid: customplugin.utility._utility.openWizard(String,WizardInvokationType)
  id: openWizard(String,WizardInvokationType)
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: openWizard(String fullyQuallifiedWizardId, WizardInvokationType wizardInvokationType)
  nameWithType: Utility.openWizard(String fullyQuallifiedWizardId, WizardInvokationType wizardInvokationType)
  fullName: static void customplugin.utility.Utility.openWizard(String fullyQuallifiedWizardId, WizardInvokationType wizardInvokationType)
  overload: customplugin.utility._utility.openWizard*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 175
  package: customplugin.utility
  summary: >-
    <p>Given fully quallified id to the wizard, it opens the wizard</p>

    <p></p>
  syntax:
    content: public static void openWizard(String fullyQuallifiedWizardId, WizardInvokationType wizardInvokationType)
    parameters:
    - id: fullyQuallifiedWizardId
      type: "26831127"
    - id: wizardInvokationType
      type: customplugin.utility._wizard_invokation_type
- uid: customplugin.utility._utility.unlinkDefaultOutStreamToConsole()
  id: unlinkDefaultOutStreamToConsole()
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: unlinkDefaultOutStreamToConsole()
  nameWithType: Utility.unlinkDefaultOutStreamToConsole()
  fullName: static void customplugin.utility.Utility.unlinkDefaultOutStreamToConsole()
  overload: customplugin.utility._utility.unlinkDefaultOutStreamToConsole*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 146
  package: customplugin.utility
  summary: <p>Reset output stream to system ones. </p>
  syntax:
    content: public static void unlinkDefaultOutStreamToConsole()
- uid: customplugin.utility._utility.validateClassName(final String)
  id: validateClassName(final String)
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  langs:
  - java
  name: validateClassName(final String name)
  nameWithType: Utility.validateClassName(final String name)
  fullName: static String customplugin.utility.Utility.validateClassName(final String name)
  overload: customplugin.utility._utility.validateClassName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/Utility.java
    startLine: 49
  package: customplugin.utility
  summary: >-
    <p>Checks if input String name is in accordance with Java standards. If it follows standard, then calls <xref uid="customplugin.utility._utility.formatClassName(String)" data-throw-if-not-resolved="false">formatClassName()</xref> to make the first-letter capital.</p>

    <p></p>
  syntax:
    content: public static String validateClassName(final String name)
    parameters:
    - id: name
      type: 3d93591e
    return:
      type: "26831127"
      description: <p>String name, with first character as upper case letter, if input name does not violate any Java class naming conventions, </p>
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: customplugin.utility._utility.validateClassName*
  name: validateClassName
  nameWithType: Utility.validateClassName
  fullName: static String customplugin.utility.Utility.validateClassName
  package: customplugin.utility
- uid: customplugin.utility._utility.formatClassName*
  name: formatClassName
  nameWithType: Utility.formatClassName
  fullName: static String customplugin.utility.Utility.formatClassName
  package: customplugin.utility
- uid: 1750ec8e
  spec.java:
  - name: IProject
    fullName: IProject
- uid: customplugin.utility._utility.getCurrentProject*
  name: getCurrentProject
  nameWithType: Utility.getCurrentProject
  fullName: static IProject customplugin.utility.Utility.getCurrentProject
  package: customplugin.utility
- uid: 6edc16cb
  spec.java:
  - name: IPath
    fullName: IPath
- uid: 601e17f2
  spec.java:
  - name: IWorkspaceRoot
    fullName: IWorkspaceRoot
- uid: 6f868ff4
  spec.java:
  - name: List<IResource>
    fullName: List<IResource>
- uid: customplugin.utility._utility.findGradleFilesInPath*
  name: findGradleFilesInPath
  nameWithType: Utility.findGradleFilesInPath
  fullName: static List<IResource> customplugin.utility.Utility.findGradleFilesInPath
  package: customplugin.utility
- uid: customplugin.utility._utility.linkDefaultOutStreamToConsole*
  name: linkDefaultOutStreamToConsole
  nameWithType: Utility.linkDefaultOutStreamToConsole
  fullName: static void customplugin.utility.Utility.linkDefaultOutStreamToConsole
  package: customplugin.utility
- uid: customplugin.utility._utility.unlinkDefaultOutStreamToConsole*
  name: unlinkDefaultOutStreamToConsole
  nameWithType: Utility.unlinkDefaultOutStreamToConsole
  fullName: static void customplugin.utility.Utility.unlinkDefaultOutStreamToConsole
  package: customplugin.utility
- uid: 946590ef
  spec.java:
  - name: MessageConsole
    fullName: MessageConsole
- uid: customplugin.utility._utility.findConsole*
  name: findConsole
  nameWithType: Utility.findConsole
  fullName: static MessageConsole customplugin.utility.Utility.findConsole
  package: customplugin.utility
- uid: customplugin.utility._utility.openWizard*
  name: openWizard
  nameWithType: Utility.openWizard
  fullName: static void customplugin.utility.Utility.openWizard
  package: customplugin.utility
- uid: 247a98b9
  spec.java:
  - name: Display
    fullName: Display
- uid: customplugin.utility._utility.getStandardDisplay*
  name: getStandardDisplay
  nameWithType: Utility.getStandardDisplay
  fullName: static Display customplugin.utility.Utility.getStandardDisplay
  package: customplugin.utility
- uid: customplugin.utility._utility.formatClassName(String)
  parent: customplugin.utility._utility
  href: customplugin.utility._utility.yml
  name: formatClassName(String name)
  nameWithType: Utility.formatClassName(String name)
  fullName: static String customplugin.utility.Utility.formatClassName(String name)
  type: Method
  summary: >-
    <p>Formats and returns input class-name - so that the first letter is always upper case.</p>

    <p></p>
  syntax: *o1
- uid: customplugin.utility._wizard_invokation_type
  parent: customplugin.utility
  href: customplugin.utility._wizard_invokation_type.yml
  name: WizardInvokationType
  nameWithType: WizardInvokationType
  fullName: customplugin.utility.WizardInvokationType
  type: Enum
  syntax:
    content: public enum WizardInvokationType
- uid: customplugin.utility._utility
  parent: customplugin.utility
  href: customplugin.utility._utility.yml
  name: Utility
  nameWithType: Utility
  fullName: customplugin.utility.Utility
  type: Class
  summary: >-
    <p>

      <xref uid="customplugin.utility._utility" data-throw-if-not-resolved="false">Utility</xref> class for Eclipse-plugin related utility Methods.</p>

    <p></p>
  syntax: *o2
