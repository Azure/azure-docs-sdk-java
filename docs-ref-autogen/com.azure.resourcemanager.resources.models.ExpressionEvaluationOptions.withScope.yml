### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.models.ExpressionEvaluationOptions.withScope*"
fullName: "com.azure.resourcemanager.resources.models.ExpressionEvaluationOptions.withScope"
name: "withScope"
nameWithType: "ExpressionEvaluationOptions.withScope"
members:
- uid: "com.azure.resourcemanager.resources.models.ExpressionEvaluationOptions.withScope(com.azure.resourcemanager.resources.models.ExpressionEvaluationOptionsScopeType)"
  fullName: "com.azure.resourcemanager.resources.models.ExpressionEvaluationOptions.withScope(ExpressionEvaluationOptionsScopeType scope)"
  name: "withScope(ExpressionEvaluationOptionsScopeType scope)"
  nameWithType: "ExpressionEvaluationOptions.withScope(ExpressionEvaluationOptionsScopeType scope)"
  summary: "Set the scope property: The scope to be used for evaluation of parameters, variables and functions in a nested template."
  parameters:
  - description: "the scope value to set."
    name: "scope"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ExpressionEvaluationOptionsScopeType?alt=com.azure.resourcemanager.resources.models.ExpressionEvaluationOptionsScopeType&text=ExpressionEvaluationOptionsScopeType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressionEvaluationOptions withScope(ExpressionEvaluationOptionsScopeType scope)"
  returns:
    description: "the ExpressionEvaluationOptions object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ExpressionEvaluationOptions?alt=com.azure.resourcemanager.resources.models.ExpressionEvaluationOptions&text=ExpressionEvaluationOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.3.0
