### YamlMime:JavaType
uid: "com.azure.data.tables.sas.TableSasPermission"
fullName: "com.azure.data.tables.sas.TableSasPermission"
name: "TableSasPermission"
nameWithType: "TableSasPermission"
summary: "Constructs a string representing the permissions granted by an Azure Service SAS to a table."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TableSasPermission"
constructors:
- uid: "com.azure.data.tables.sas.TableSasPermission.TableSasPermission()"
  fullName: "com.azure.data.tables.sas.TableSasPermission.TableSasPermission()"
  name: "TableSasPermission()"
  nameWithType: "TableSasPermission.TableSasPermission()"
  syntax: "public TableSasPermission()"
methods:
- uid: "com.azure.data.tables.sas.TableSasPermission.hasAddPermission()"
  fullName: "com.azure.data.tables.sas.TableSasPermission.hasAddPermission()"
  name: "hasAddPermission()"
  nameWithType: "TableSasPermission.hasAddPermission()"
  summary: "Gets the add permission status."
  syntax: "public boolean hasAddPermission()"
  desc: "Gets the add permission status."
  returns:
    description: "<code>true</code> if the SAS has permission to add entities to the table. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.hasDeletePermission()"
  fullName: "com.azure.data.tables.sas.TableSasPermission.hasDeletePermission()"
  name: "hasDeletePermission()"
  nameWithType: "TableSasPermission.hasDeletePermission()"
  summary: "Gets the delete permission status."
  syntax: "public boolean hasDeletePermission()"
  desc: "Gets the delete permission status."
  returns:
    description: "<code>true</code> if the SAS has permission to delete entities from the table. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.hasReadPermission()"
  fullName: "com.azure.data.tables.sas.TableSasPermission.hasReadPermission()"
  name: "hasReadPermission()"
  nameWithType: "TableSasPermission.hasReadPermission()"
  summary: "Gets the read permissions status."
  syntax: "public boolean hasReadPermission()"
  desc: "Gets the read permissions status."
  returns:
    description: "<code>true</code> if the SAS has permission to get entities and query entities. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.hasUpdatePermission()"
  fullName: "com.azure.data.tables.sas.TableSasPermission.hasUpdatePermission()"
  name: "hasUpdatePermission()"
  nameWithType: "TableSasPermission.hasUpdatePermission()"
  summary: "Gets the update permission status."
  syntax: "public boolean hasUpdatePermission()"
  desc: "Gets the update permission status."
  returns:
    description: "<code>true</code> if the SAS has permission to update entities in the table. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.parse(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableSasPermission.parse(String permString)"
  name: "parse(String permString)"
  nameWithType: "TableSasPermission.parse(String permString)"
  summary: "Creates a <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref> from the specified permissions string."
  modifiers:
  - "static"
  parameters:
  - description: "A <code>String</code> which represents the <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref>."
    name: "permString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TableSasPermission parse(String permString)"
  desc: "Creates a <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref> from the specified permissions string. This method will throw an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> if it encounters a character that does not correspond to a valid permission."
  returns:
    description: "A <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref> generated from the given <code>String</code>."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasPermission?alt=com.azure.data.tables.sas.TableSasPermission&text=TableSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.setAddPermission(boolean)"
  fullName: "com.azure.data.tables.sas.TableSasPermission.setAddPermission(boolean hasAddPermission)"
  name: "setAddPermission(boolean hasAddPermission)"
  nameWithType: "TableSasPermission.setAddPermission(boolean hasAddPermission)"
  summary: "Sets the add permission status."
  parameters:
  - description: "<code>true</code> if the SAS has permission to add entities to the table. <code>false</code>,\n otherwise.\n\n <p>\n <b>Note:</b> The <code>add</code> and <code>update</code> permissions are required for upsert operations.\n </p>"
    name: "hasAddPermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasPermission setAddPermission(boolean hasAddPermission)"
  desc: "Sets the add permission status."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasPermission?alt=com.azure.data.tables.sas.TableSasPermission&text=TableSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.setDeletePermission(boolean)"
  fullName: "com.azure.data.tables.sas.TableSasPermission.setDeletePermission(boolean hasDeletePermission)"
  name: "setDeletePermission(boolean hasDeletePermission)"
  nameWithType: "TableSasPermission.setDeletePermission(boolean hasDeletePermission)"
  summary: "Sets the process permission status."
  parameters:
  - description: "<code>true</code> if the SAS has permission to delete entities from the table.\n <code>false</code>, otherwise."
    name: "hasDeletePermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasPermission setDeletePermission(boolean hasDeletePermission)"
  desc: "Sets the process permission status."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasPermission?alt=com.azure.data.tables.sas.TableSasPermission&text=TableSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.setReadPermission(boolean)"
  fullName: "com.azure.data.tables.sas.TableSasPermission.setReadPermission(boolean hasReadPermission)"
  name: "setReadPermission(boolean hasReadPermission)"
  nameWithType: "TableSasPermission.setReadPermission(boolean hasReadPermission)"
  summary: "Sets the read permission status."
  parameters:
  - description: "<code>true</code> if the SAS has permission to get entities and query entities.\n <code>false</code>, otherwise"
    name: "hasReadPermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasPermission setReadPermission(boolean hasReadPermission)"
  desc: "Sets the read permission status."
  returns:
    description: "The updated TableSasPermission object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasPermission?alt=com.azure.data.tables.sas.TableSasPermission&text=TableSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.setUpdatePermission(boolean)"
  fullName: "com.azure.data.tables.sas.TableSasPermission.setUpdatePermission(boolean hasUpdatePermission)"
  name: "setUpdatePermission(boolean hasUpdatePermission)"
  nameWithType: "TableSasPermission.setUpdatePermission(boolean hasUpdatePermission)"
  summary: "Sets the update permission status."
  parameters:
  - description: "<code>true</code> if the SAS has permission to update entities in the table. <code>false</code>,\n otherwise."
    name: "hasUpdatePermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasPermission setUpdatePermission(boolean hasUpdatePermission)"
  desc: "Sets the update permission status.\n\n**Note:** The `add` and `update` permissions are required for upsert operations."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasPermission?alt=com.azure.data.tables.sas.TableSasPermission&text=TableSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasPermission.toString()"
  fullName: "com.azure.data.tables.sas.TableSasPermission.toString()"
  name: "toString()"
  nameWithType: "TableSasPermission.toString()"
  summary: "Converts the given permissions to a `String`."
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  desc: "Converts the given permissions to a `String`. Using this method will guarantee the permissions are in an order accepted by the service. If all permissions are set to false, an empty string is returned from this method."
  returns:
    description: "A <code>String</code> which represents the <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Constructs a string representing the permissions granted by an Azure Service SAS to a table. Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the values are set, this should be serialized with <xref uid=\"com.azure.data.tables.sas.TableSasPermission.toString()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"toString\"></xref> and set as the permissions field on <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues.setPermissions(com.azure.data.tables.sas.TableSasPermission)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues#setPermissions(TableSasPermission)\"></xref> TableSasSignatureValues\\}.\n\nIt is possible to construct the permissions string without this class, but the order of the permissions is particular and this class guarantees correctness."
metadata: {}
package: "com.azure.data.tables.sas"
artifact: com.azure:azure-data-tables:12.3.3
