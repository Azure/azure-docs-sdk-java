### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.implementation.ContainersImpl"
  id: "ContainersImpl"
  parent: "com.azure.storage.blob.implementation"
  children:
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  - "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,java.lang.String,com.azure.storage.blob.models.BlobContainerEncryptionScope,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.getAccountInfoWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync(java.lang.String,java.util.List<com.azure.storage.blob.models.BlobSignedIdentifier>,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.PublicAccessType,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "ContainersImpl"
  nameWithType: "ContainersImpl"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl"
  type: "Class"
  package: "com.azure.storage.blob.implementation"
  summary: "An instance of this class provides access to all the operations defined in Containers."
  syntax:
    content: "public final class ContainersImpl"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  id: "ContainersImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "ContainersImpl(AzureBlobStorageImpl client)"
  nameWithType: "ContainersImpl.ContainersImpl(AzureBlobStorageImpl client)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersImpl(AzureBlobStorageImpl client)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersImpl*"
  type: "Constructor"
  package: "com.azure.storage.blob.implementation"
  summary: "Initializes an instance of ContainersImpl."
  syntax:
    content: "public ContainersImpl(AzureBlobStorageImpl client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "acquireLeaseWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "acquireLeaseWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.acquireLeaseWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersAcquireLeaseResponse> acquireLeaseWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  id: "acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "acquireLeaseWithRestResponseAsync(String containerName, Integer timeout, Integer duration, String proposedLeaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  nameWithType: "ContainersImpl.acquireLeaseWithRestResponseAsync(String containerName, Integer timeout, Integer duration, String proposedLeaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync(String containerName, Integer timeout, Integer duration, String proposedLeaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersAcquireLeaseResponse> acquireLeaseWithRestResponseAsync(String containerName, Integer timeout, Integer duration, String proposedLeaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "duration"
      type: "java.lang.Integer"
      description: "Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "breakLeaseWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "breakLeaseWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.breakLeaseWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersBreakLeaseResponse> breakLeaseWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  id: "breakLeaseWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "breakLeaseWithRestResponseAsync(String containerName, Integer timeout, Integer breakPeriod, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  nameWithType: "ContainersImpl.breakLeaseWithRestResponseAsync(String containerName, Integer timeout, Integer breakPeriod, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync(String containerName, Integer timeout, Integer breakPeriod, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersBreakLeaseResponse> breakLeaseWithRestResponseAsync(String containerName, Integer timeout, Integer breakPeriod, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "breakPeriod"
      type: "java.lang.Integer"
      description: "For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "changeLeaseWithRestResponseAsync(String containerName, String leaseId, String proposedLeaseId, Context context)"
  nameWithType: "ContainersImpl.changeLeaseWithRestResponseAsync(String containerName, String leaseId, String proposedLeaseId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync(String containerName, String leaseId, String proposedLeaseId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersChangeLeaseResponse> changeLeaseWithRestResponseAsync(String containerName, String leaseId, String proposedLeaseId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  id: "changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "changeLeaseWithRestResponseAsync(String containerName, String leaseId, String proposedLeaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  nameWithType: "ContainersImpl.changeLeaseWithRestResponseAsync(String containerName, String leaseId, String proposedLeaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync(String containerName, String leaseId, String proposedLeaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersChangeLeaseResponse> changeLeaseWithRestResponseAsync(String containerName, String leaseId, String proposedLeaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.createWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "creates a new container under the specified account. If the container with the same name already exists, the operation fails."
  syntax:
    content: "public Mono<ContainersCreateResponse> createWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,java.lang.String,com.azure.storage.blob.models.BlobContainerEncryptionScope,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,java.lang.String,com.azure.storage.blob.models.BlobContainerEncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String containerName, Integer timeout, Map<String,String> metadata, PublicAccessType access, String requestId, BlobContainerEncryptionScope blobContainerEncryptionScope, Context context)"
  nameWithType: "ContainersImpl.createWithRestResponseAsync(String containerName, Integer timeout, Map<String,String> metadata, PublicAccessType access, String requestId, BlobContainerEncryptionScope blobContainerEncryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync(String containerName, Integer timeout, Map<String,String> metadata, PublicAccessType access, String requestId, BlobContainerEncryptionScope blobContainerEncryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "creates a new container under the specified account. If the container with the same name already exists, the operation fails."
  syntax:
    content: "public Mono<ContainersCreateResponse> createWithRestResponseAsync(String containerName, Integer timeout, Map<String,String> metadata, PublicAccessType access, String requestId, BlobContainerEncryptionScope blobContainerEncryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information."
    - id: "access"
      type: "com.azure.storage.blob.models.PublicAccessType"
      description: "Specifies whether data in the container may be accessed publicly and the level of access. Possible values include: 'container', 'blob'."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "blobContainerEncryptionScope"
      type: "com.azure.storage.blob.models.BlobContainerEncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "deleteWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "deleteWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.deleteWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "operation marks the specified container for deletion. The container and any blobs contained within it are later deleted during garbage collection."
  syntax:
    content: "public Mono<ContainersDeleteResponse> deleteWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersDeleteResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  id: "deleteWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "deleteWithRestResponseAsync(String containerName, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  nameWithType: "ContainersImpl.deleteWithRestResponseAsync(String containerName, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync(String containerName, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "operation marks the specified container for deletion. The container and any blobs contained within it are later deleted during garbage collection."
  syntax:
    content: "public Mono<ContainersDeleteResponse> deleteWithRestResponseAsync(String containerName, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersDeleteResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "getAccessPolicyWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "getAccessPolicyWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.getAccessPolicyWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "gets the permissions for the specified container. The permissions indicate whether container data may be accessed publicly."
  syntax:
    content: "public Mono<ContainersGetAccessPolicyResponse> getAccessPolicyWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getAccessPolicyWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "getAccessPolicyWithRestResponseAsync(String containerName, Integer timeout, String leaseId, String requestId, Context context)"
  nameWithType: "ContainersImpl.getAccessPolicyWithRestResponseAsync(String containerName, Integer timeout, String leaseId, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync(String containerName, Integer timeout, String leaseId, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "gets the permissions for the specified container. The permissions indicate whether container data may be accessed publicly."
  syntax:
    content: "public Mono<ContainersGetAccessPolicyResponse> getAccessPolicyWithRestResponseAsync(String containerName, Integer timeout, String leaseId, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.getAccountInfoWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "getAccountInfoWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "getAccountInfoWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.getAccountInfoWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.getAccountInfoWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.getAccountInfoWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "Returns the sku name and account kind."
  syntax:
    content: "public Mono<ContainersGetAccountInfoResponse> getAccountInfoWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "getPropertiesWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "getPropertiesWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.getPropertiesWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "returns all user-defined metadata and system properties for the specified container. The data returned does not include the container's list of blobs."
  syntax:
    content: "public Mono<ContainersGetPropertiesResponse> getPropertiesWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getPropertiesWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "getPropertiesWithRestResponseAsync(String containerName, Integer timeout, String leaseId, String requestId, Context context)"
  nameWithType: "ContainersImpl.getPropertiesWithRestResponseAsync(String containerName, Integer timeout, String leaseId, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync(String containerName, Integer timeout, String leaseId, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "returns all user-defined metadata and system properties for the specified container. The data returned does not include the container's list of blobs."
  syntax:
    content: "public Mono<ContainersGetPropertiesResponse> getPropertiesWithRestResponseAsync(String containerName, Integer timeout, String leaseId, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "listBlobFlatSegmentWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "listBlobFlatSegmentWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.listBlobFlatSegmentWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] The List Blobs operation returns a list of the blobs under the specified container."
  syntax:
    content: "public Mono<ContainersListBlobFlatSegmentResponse> listBlobFlatSegmentWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "listBlobFlatSegmentWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "listBlobFlatSegmentWithRestResponseAsync(String containerName, String prefix, String marker, Integer maxresults, List<ListBlobsIncludeItem> include, Integer timeout, String requestId, Context context)"
  nameWithType: "ContainersImpl.listBlobFlatSegmentWithRestResponseAsync(String containerName, String prefix, String marker, Integer maxresults, List<ListBlobsIncludeItem> include, Integer timeout, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync(String containerName, String prefix, String marker, Integer maxresults, List<ListBlobsIncludeItem> include, Integer timeout, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] The List Blobs operation returns a list of the blobs under the specified container."
  syntax:
    content: "public Mono<ContainersListBlobFlatSegmentResponse> listBlobFlatSegmentWithRestResponseAsync(String containerName, String prefix, String marker, Integer maxresults, List<ListBlobsIncludeItem> include, Integer timeout, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "prefix"
      type: "java.lang.String"
      description: "Filters the results to return only containers whose name begins with the specified prefix."
    - id: "marker"
      type: "java.lang.String"
      description: "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client."
    - id: "maxresults"
      type: "java.lang.Integer"
      description: "Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000."
    - id: "include"
      type: "java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>"
      description: "Include this parameter to specify one or more datasets to include in the response."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listBlobHierarchySegmentWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "listBlobHierarchySegmentWithRestResponseAsync(String containerName, String delimiter, Context context)"
  nameWithType: "ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync(String containerName, String delimiter, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync(String containerName, String delimiter, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] The List Blobs operation returns a list of the blobs under the specified container."
  syntax:
    content: "public Mono<ContainersListBlobHierarchySegmentResponse> listBlobHierarchySegmentWithRestResponseAsync(String containerName, String delimiter, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "delimiter"
      type: "java.lang.String"
      description: "When the request includes this parameter, the operation returns a BlobPrefix element in the response body that acts as a placeholder for all blobs whose names begin with the same substring up to the appearance of the delimiter character. The delimiter may be a single character or a string."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "listBlobHierarchySegmentWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "listBlobHierarchySegmentWithRestResponseAsync(String containerName, String delimiter, String prefix, String marker, Integer maxresults, List<ListBlobsIncludeItem> include, Integer timeout, String requestId, Context context)"
  nameWithType: "ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync(String containerName, String delimiter, String prefix, String marker, Integer maxresults, List<ListBlobsIncludeItem> include, Integer timeout, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync(String containerName, String delimiter, String prefix, String marker, Integer maxresults, List<ListBlobsIncludeItem> include, Integer timeout, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] The List Blobs operation returns a list of the blobs under the specified container."
  syntax:
    content: "public Mono<ContainersListBlobHierarchySegmentResponse> listBlobHierarchySegmentWithRestResponseAsync(String containerName, String delimiter, String prefix, String marker, Integer maxresults, List<ListBlobsIncludeItem> include, Integer timeout, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "delimiter"
      type: "java.lang.String"
      description: "When the request includes this parameter, the operation returns a BlobPrefix element in the response body that acts as a placeholder for all blobs whose names begin with the same substring up to the appearance of the delimiter character. The delimiter may be a single character or a string."
    - id: "prefix"
      type: "java.lang.String"
      description: "Filters the results to return only containers whose name begins with the specified prefix."
    - id: "marker"
      type: "java.lang.String"
      description: "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client."
    - id: "maxresults"
      type: "java.lang.Integer"
      description: "Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000."
    - id: "include"
      type: "java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>"
      description: "Include this parameter to specify one or more datasets to include in the response."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "releaseLeaseWithRestResponseAsync(String containerName, String leaseId, Context context)"
  nameWithType: "ContainersImpl.releaseLeaseWithRestResponseAsync(String containerName, String leaseId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync(String containerName, String leaseId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersReleaseLeaseResponse> releaseLeaseWithRestResponseAsync(String containerName, String leaseId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  id: "releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "releaseLeaseWithRestResponseAsync(String containerName, String leaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  nameWithType: "ContainersImpl.releaseLeaseWithRestResponseAsync(String containerName, String leaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync(String containerName, String leaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersReleaseLeaseResponse> releaseLeaseWithRestResponseAsync(String containerName, String leaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "renewLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "renewLeaseWithRestResponseAsync(String containerName, String leaseId, Context context)"
  nameWithType: "ContainersImpl.renewLeaseWithRestResponseAsync(String containerName, String leaseId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync(String containerName, String leaseId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersRenewLeaseResponse> renewLeaseWithRestResponseAsync(String containerName, String leaseId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  id: "renewLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "renewLeaseWithRestResponseAsync(String containerName, String leaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  nameWithType: "ContainersImpl.renewLeaseWithRestResponseAsync(String containerName, String leaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync(String containerName, String leaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite."
  syntax:
    content: "public Mono<ContainersRenewLeaseResponse> renewLeaseWithRestResponseAsync(String containerName, String leaseId, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "setAccessPolicyWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "setAccessPolicyWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.setAccessPolicyWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "sets the permissions for the specified container. The permissions indicate whether blobs in a container may be accessed publicly."
  syntax:
    content: "public Mono<ContainersSetAccessPolicyResponse> setAccessPolicyWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync(java.lang.String,java.util.List<com.azure.storage.blob.models.BlobSignedIdentifier>,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.PublicAccessType,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  id: "setAccessPolicyWithRestResponseAsync(java.lang.String,java.util.List<com.azure.storage.blob.models.BlobSignedIdentifier>,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.PublicAccessType,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "setAccessPolicyWithRestResponseAsync(String containerName, List<BlobSignedIdentifier> containerAcl, Integer timeout, String leaseId, PublicAccessType access, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  nameWithType: "ContainersImpl.setAccessPolicyWithRestResponseAsync(String containerName, List<BlobSignedIdentifier> containerAcl, Integer timeout, String leaseId, PublicAccessType access, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync(String containerName, List<BlobSignedIdentifier> containerAcl, Integer timeout, String leaseId, PublicAccessType access, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "sets the permissions for the specified container. The permissions indicate whether blobs in a container may be accessed publicly."
  syntax:
    content: "public Mono<ContainersSetAccessPolicyResponse> setAccessPolicyWithRestResponseAsync(String containerName, List<BlobSignedIdentifier> containerAcl, Integer timeout, String leaseId, PublicAccessType access, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "containerAcl"
      type: "java.util.List<com.azure.storage.blob.models.BlobSignedIdentifier>"
      description: "the acls for the container."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "access"
      type: "com.azure.storage.blob.models.PublicAccessType"
      description: "Specifies whether data in the container may be accessed publicly and the level of access. Possible values include: 'container', 'blob'."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  id: "setMetadataWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "setMetadataWithRestResponseAsync(String containerName, Context context)"
  nameWithType: "ContainersImpl.setMetadataWithRestResponseAsync(String containerName, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync(String containerName, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "operation sets one or more user-defined name-value pairs for the specified container."
  syntax:
    content: "public Mono<ContainersSetMetadataResponse> setMetadataWithRestResponseAsync(String containerName, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  id: "setMetadataWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.OffsetDateTime,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl"
  langs:
  - "java"
  name: "setMetadataWithRestResponseAsync(String containerName, Integer timeout, String leaseId, Map<String,String> metadata, OffsetDateTime ifModifiedSince, String requestId, Context context)"
  nameWithType: "ContainersImpl.setMetadataWithRestResponseAsync(String containerName, Integer timeout, String leaseId, Map<String,String> metadata, OffsetDateTime ifModifiedSince, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync(String containerName, Integer timeout, String leaseId, Map<String,String> metadata, OffsetDateTime ifModifiedSince, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "operation sets one or more user-defined name-value pairs for the specified container."
  syntax:
    content: "public Mono<ContainersSetMetadataResponse> setMetadataWithRestResponseAsync(String containerName, Integer timeout, String leaseId, Map<String,String> metadata, OffsetDateTime ifModifiedSince, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse>"
      description: "a Mono which performs the network request upon subscription."
references:
- uid: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
  name: "AzureBlobStorageImpl"
  nameWithType: "AzureBlobStorageImpl"
  fullName: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersImpl*"
  name: "ContainersImpl"
  nameWithType: "ContainersImpl.ContainersImpl"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersImpl"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersCreateResponse"
    name: "ContainersCreateResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync*"
  name: "createWithRestResponseAsync"
  nameWithType: "ContainersImpl.createWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.createWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.models.PublicAccessType"
  name: "PublicAccessType"
  nameWithType: "PublicAccessType"
  fullName: "com.azure.storage.blob.models.PublicAccessType"
- uid: "com.azure.storage.blob.models.BlobContainerEncryptionScope"
  name: "BlobContainerEncryptionScope"
  nameWithType: "BlobContainerEncryptionScope"
  fullName: "com.azure.storage.blob.models.BlobContainerEncryptionScope"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse"
    name: "ContainersGetPropertiesResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync*"
  name: "getPropertiesWithRestResponseAsync"
  nameWithType: "ContainersImpl.getPropertiesWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.getPropertiesWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersDeleteResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersDeleteResponse"
    name: "ContainersDeleteResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersDeleteResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync*"
  name: "deleteWithRestResponseAsync"
  nameWithType: "ContainersImpl.deleteWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.deleteWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse"
    name: "ContainersSetMetadataResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync*"
  name: "setMetadataWithRestResponseAsync"
  nameWithType: "ContainersImpl.setMetadataWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.setMetadataWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse"
    name: "ContainersGetAccessPolicyResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync*"
  name: "getAccessPolicyWithRestResponseAsync"
  nameWithType: "ContainersImpl.getAccessPolicyWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.getAccessPolicyWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse"
    name: "ContainersSetAccessPolicyResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync*"
  name: "setAccessPolicyWithRestResponseAsync"
  nameWithType: "ContainersImpl.setAccessPolicyWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.setAccessPolicyWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.util.List<com.azure.storage.blob.models.BlobSignedIdentifier>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.models.BlobSignedIdentifier"
    name: "BlobSignedIdentifier"
    fullName: "com.azure.storage.blob.models.BlobSignedIdentifier"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse"
    name: "ContainersAcquireLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync*"
  name: "acquireLeaseWithRestResponseAsync"
  nameWithType: "ContainersImpl.acquireLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.acquireLeaseWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse"
    name: "ContainersReleaseLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync*"
  name: "releaseLeaseWithRestResponseAsync"
  nameWithType: "ContainersImpl.releaseLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.releaseLeaseWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse"
    name: "ContainersRenewLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync*"
  name: "renewLeaseWithRestResponseAsync"
  nameWithType: "ContainersImpl.renewLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.renewLeaseWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse"
    name: "ContainersBreakLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync*"
  name: "breakLeaseWithRestResponseAsync"
  nameWithType: "ContainersImpl.breakLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.breakLeaseWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse"
    name: "ContainersChangeLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync*"
  name: "changeLeaseWithRestResponseAsync"
  nameWithType: "ContainersImpl.changeLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.changeLeaseWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse"
    name: "ContainersListBlobFlatSegmentResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync*"
  name: "listBlobFlatSegmentWithRestResponseAsync"
  nameWithType: "ContainersImpl.listBlobFlatSegmentWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.listBlobFlatSegmentWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.util.List<com.azure.storage.blob.models.ListBlobsIncludeItem>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.models.ListBlobsIncludeItem"
    name: "ListBlobsIncludeItem"
    fullName: "com.azure.storage.blob.models.ListBlobsIncludeItem"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse"
    name: "ContainersListBlobHierarchySegmentResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync*"
  name: "listBlobHierarchySegmentWithRestResponseAsync"
  nameWithType: "ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.listBlobHierarchySegmentWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse"
    name: "ContainersGetAccountInfoResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.getAccountInfoWithRestResponseAsync*"
  name: "getAccountInfoWithRestResponseAsync"
  nameWithType: "ContainersImpl.getAccountInfoWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.getAccountInfoWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  name: "ContainersImpl.ContainersService"
  nameWithType: "ContainersImpl.ContainersService"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.blob.implementation.models.ContainersCreateResponse"
  name: "ContainersCreateResponse"
  nameWithType: "ContainersCreateResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersCreateResponse"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse"
  name: "ContainersGetPropertiesResponse"
  nameWithType: "ContainersGetPropertiesResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersDeleteResponse"
  name: "ContainersDeleteResponse"
  nameWithType: "ContainersDeleteResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersDeleteResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse"
  name: "ContainersSetMetadataResponse"
  nameWithType: "ContainersSetMetadataResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse"
  name: "ContainersGetAccessPolicyResponse"
  nameWithType: "ContainersGetAccessPolicyResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse"
  name: "ContainersSetAccessPolicyResponse"
  nameWithType: "ContainersSetAccessPolicyResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.storage.blob.models.BlobSignedIdentifier"
  name: "BlobSignedIdentifier"
  nameWithType: "BlobSignedIdentifier"
  fullName: "com.azure.storage.blob.models.BlobSignedIdentifier"
- uid: "com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse"
  name: "ContainersAcquireLeaseResponse"
  nameWithType: "ContainersAcquireLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse"
  name: "ContainersReleaseLeaseResponse"
  nameWithType: "ContainersReleaseLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse"
  name: "ContainersRenewLeaseResponse"
  nameWithType: "ContainersRenewLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse"
  name: "ContainersBreakLeaseResponse"
  nameWithType: "ContainersBreakLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse"
  name: "ContainersChangeLeaseResponse"
  nameWithType: "ContainersChangeLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse"
  name: "ContainersListBlobFlatSegmentResponse"
  nameWithType: "ContainersListBlobFlatSegmentResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse"
- uid: "com.azure.storage.blob.models.ListBlobsIncludeItem"
  name: "ListBlobsIncludeItem"
  nameWithType: "ListBlobsIncludeItem"
  fullName: "com.azure.storage.blob.models.ListBlobsIncludeItem"
- uid: "com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse"
  name: "ContainersListBlobHierarchySegmentResponse"
  nameWithType: "ContainersListBlobHierarchySegmentResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse"
  name: "ContainersGetAccountInfoResponse"
  nameWithType: "ContainersGetAccountInfoResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse"
