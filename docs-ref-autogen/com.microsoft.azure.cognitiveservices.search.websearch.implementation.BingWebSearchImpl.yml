### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  id: "BingWebSearchImpl"
  parent: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  children:
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebSearchImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchAPIImpl)"
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebsSearchParameters"
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebsService"
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search()"
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>)"
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  - "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,com.microsoft.azure.cognitiveservices.search.websearch.models.Freshness,java.lang.String,java.lang.Integer,java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>,java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>,com.microsoft.azure.cognitiveservices.search.websearch.models.SafeSearch,java.lang.String,java.lang.Boolean,com.microsoft.azure.cognitiveservices.search.websearch.models.TextFormat)"
  langs:
  - "java"
  name: "BingWebSearchImpl"
  nameWithType: "BingWebSearchImpl"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  type: "Class"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  summary: "An instance of this class provides access to all the operations defined in BingWebSearch."
  syntax:
    content: "public class BingWebSearchImpl implements BingWebSearch"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.azure.cognitiveservices.search.websearch.BingWebSearch"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebSearchImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchAPIImpl)"
  id: "BingWebSearchImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchAPIImpl)"
  parent: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  langs:
  - "java"
  name: "BingWebSearchImpl(Retrofit retrofit, BingWebSearchAPIImpl client)"
  nameWithType: "BingWebSearchImpl.BingWebSearchImpl(Retrofit retrofit, BingWebSearchAPIImpl client)"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebSearchImpl(Retrofit retrofit, BingWebSearchAPIImpl client)"
  overload: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebSearchImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  summary: "Initializes an instance of BingWebSearchImpl."
  syntax:
    content: "public BingWebSearchImpl(Retrofit retrofit, BingWebSearchAPIImpl client)"
    parameters:
    - id: "retrofit"
      type: "retrofit2.Retrofit"
      description: "the Retrofit instance built from a Retrofit Builder."
    - id: "client"
      type: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchAPIImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search()"
  id: "search()"
  parent: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  langs:
  - "java"
  name: "search()"
  nameWithType: "BingWebSearchImpl.search()"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search()"
  overload: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search*"
  type: "Method"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  syntax:
    content: "public BingWebSearchImpl.BingWebsSearchParameters search()"
    return:
      type: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebsSearchParameters"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  id: "search(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  parent: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  langs:
  - "java"
  name: "search(String query, SearchOptionalParameter searchOptionalParameter)"
  nameWithType: "BingWebSearchImpl.search(String query, SearchOptionalParameter searchOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search(String query, SearchOptionalParameter searchOptionalParameter)"
  overload: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search*"
  type: "Method"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  summary: "The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more."
  syntax:
    content: "public SearchResponse search(String query, SearchOptionalParameter searchOptionalParameter)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "The user's search query term. The term may not be empty. The term may contain Bing Advanced Operators. For example, to limit results to a specific domain, use the site: operator."
    - id: "searchOptionalParameter"
      type: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter"
      description: "the object representing the optional parameters to be set before calling this API"
    return:
      type: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
      description: "the SearchResponse object if successful."
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  id: "searchAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  parent: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  langs:
  - "java"
  name: "searchAsync(String query, SearchOptionalParameter searchOptionalParameter)"
  nameWithType: "BingWebSearchImpl.searchAsync(String query, SearchOptionalParameter searchOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync(String query, SearchOptionalParameter searchOptionalParameter)"
  overload: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync*"
  type: "Method"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  summary: "The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more."
  syntax:
    content: "public Observable<SearchResponse> searchAsync(String query, SearchOptionalParameter searchOptionalParameter)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "The user's search query term. The term may not be empty. The term may contain Bing Advanced Operators. For example, to limit results to a specific domain, use the site: operator."
    - id: "searchOptionalParameter"
      type: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter"
      description: "the object representing the optional parameters to be set before calling this API"
    return:
      type: "rx.Observable<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>"
      description: "the observable to the SearchResponse object"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>)"
  id: "searchAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>)"
  parent: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  langs:
  - "java"
  name: "searchAsync(String query, SearchOptionalParameter searchOptionalParameter, ServiceCallback<SearchResponse> serviceCallback)"
  nameWithType: "BingWebSearchImpl.searchAsync(String query, SearchOptionalParameter searchOptionalParameter, ServiceCallback<SearchResponse> serviceCallback)"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync(String query, SearchOptionalParameter searchOptionalParameter, ServiceCallback<SearchResponse> serviceCallback)"
  overload: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync*"
  type: "Method"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  summary: "The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more."
  syntax:
    content: "public ServiceFuture<SearchResponse> searchAsync(String query, SearchOptionalParameter searchOptionalParameter, ServiceCallback<SearchResponse> serviceCallback)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "The user's search query term. The term may not be empty. The term may contain Bing Advanced Operators. For example, to limit results to a specific domain, use the site: operator."
    - id: "searchOptionalParameter"
      type: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter"
      description: "the object representing the optional parameters to be set before calling this API"
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  id: "searchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter)"
  parent: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  langs:
  - "java"
  name: "searchWithServiceResponseAsync(String query, SearchOptionalParameter searchOptionalParameter)"
  nameWithType: "BingWebSearchImpl.searchWithServiceResponseAsync(String query, SearchOptionalParameter searchOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync(String query, SearchOptionalParameter searchOptionalParameter)"
  overload: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  summary: "The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more."
  syntax:
    content: "public Observable<ServiceResponse<SearchResponse>> searchWithServiceResponseAsync(String query, SearchOptionalParameter searchOptionalParameter)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "The user's search query term. The term may not be empty. The term may contain Bing Advanced Operators. For example, to limit results to a specific domain, use the site: operator."
    - id: "searchOptionalParameter"
      type: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter"
      description: "the object representing the optional parameters to be set before calling this API"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>>"
      description: "the observable to the SearchResponse object"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,com.microsoft.azure.cognitiveservices.search.websearch.models.Freshness,java.lang.String,java.lang.Integer,java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>,java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>,com.microsoft.azure.cognitiveservices.search.websearch.models.SafeSearch,java.lang.String,java.lang.Boolean,com.microsoft.azure.cognitiveservices.search.websearch.models.TextFormat)"
  id: "searchWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,com.microsoft.azure.cognitiveservices.search.websearch.models.Freshness,java.lang.String,java.lang.Integer,java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>,java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>,com.microsoft.azure.cognitiveservices.search.websearch.models.SafeSearch,java.lang.String,java.lang.Boolean,com.microsoft.azure.cognitiveservices.search.websearch.models.TextFormat)"
  parent: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl"
  langs:
  - "java"
  name: "searchWithServiceResponseAsync(String query, String acceptLanguage, String pragma, String userAgent, String clientId, String clientIp, String location, Integer answerCount, String countryCode, Integer count, Freshness freshness, String market, Integer offset, List<AnswerType> promote, List<AnswerType> responseFilter, SafeSearch safeSearch, String setLang, Boolean textDecorations, TextFormat textFormat)"
  nameWithType: "BingWebSearchImpl.searchWithServiceResponseAsync(String query, String acceptLanguage, String pragma, String userAgent, String clientId, String clientIp, String location, Integer answerCount, String countryCode, Integer count, Freshness freshness, String market, Integer offset, List<AnswerType> promote, List<AnswerType> responseFilter, SafeSearch safeSearch, String setLang, Boolean textDecorations, TextFormat textFormat)"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync(String query, String acceptLanguage, String pragma, String userAgent, String clientId, String clientIp, String location, Integer answerCount, String countryCode, Integer count, Freshness freshness, String market, Integer offset, List<AnswerType> promote, List<AnswerType> responseFilter, SafeSearch safeSearch, String setLang, Boolean textDecorations, TextFormat textFormat)"
  overload: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
  summary: "The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more."
  syntax:
    content: "public Observable<ServiceResponse<SearchResponse>> searchWithServiceResponseAsync(String query, String acceptLanguage, String pragma, String userAgent, String clientId, String clientIp, String location, Integer answerCount, String countryCode, Integer count, Freshness freshness, String market, Integer offset, List<AnswerType> promote, List<AnswerType> responseFilter, SafeSearch safeSearch, String setLang, Boolean textDecorations, TextFormat textFormat)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "The user's search query term. The term may not be empty. The term may contain Bing Advanced Operators. For example, to limit results to a specific domain, use the site: operator."
    - id: "acceptLanguage"
      type: "java.lang.String"
      description: "A comma-delimited list of one or more languages to use for user interface strings. The list is in decreasing order of preference. For additional information, including expected format, see [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the setLang query parameter are mutually exclusive; do not specify both. If you set this header, you must also specify the cc query parameter. Bing will use the first supported language it finds from the list, and combine that language with the cc parameter value to determine the market to return results for. If the list does not include a supported language, Bing will find the closest language and market that supports the request, and may use an aggregated or default market for the results instead of a specified one. You should use this header and the cc query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. A user interface string is a string that's used as a label in a user interface. There are very few user interface strings in the JSON response objects. Any links in the response objects to Bing.com properties will apply the specified language."
    - id: "pragma"
      type: "java.lang.String"
      description: "By default, Bing returns cached content, if available. To prevent Bing from returning cached content, set the Pragma header to no-cache (for example, Pragma: no-cache)."
    - id: "userAgent"
      type: "java.lang.String"
      description: "The user agent originating the request. Bing uses the user agent to provide mobile users with an optimized experience. Although optional, you are strongly encouraged to always specify this header. The user-agent should be the same string that any commonly used browser would send. For information about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html)."
    - id: "clientId"
      type: "java.lang.String"
      description: "Bing uses this header to provide users with consistent behavior across Bing API calls. Bing often flights new features and improvements, and it uses the client ID as a key for assigning traffic on different flights. If you do not use the same client ID for a user across multiple requests, then Bing may assign the user to multiple conflicting flights. Being assigned to multiple conflicting flights can lead to an inconsistent user experience. For example, if the second request has a different flight assignment than the first, the experience may be unexpected. Also, Bing can use the client ID to tailor web results to that client ID\\u2019s search history, providing a richer experience for the user. Bing also uses this header to help improve result rankings by analyzing the activity generated by a client ID. The relevance improvements help with better quality of results delivered by Bing APIs and in turn enables higher click-through rates for the API consumer. IMPORTANT: Although optional, you should consider this header required. Persisting the client ID across multiple requests for the same end user and device combination enables 1) the API consumer to receive a consistent user experience, and 2) higher click-through rates via better quality of results from the Bing APIs. Each user that uses your application on the device must have a unique, Bing generated client ID. If you do not include this header in the request, Bing generates an ID and returns it in the X-MSEdge-ClientID response header. The only time that you should NOT include this header in a request is the first time the user uses your app on that device. Use the client ID for each Bing API request that your app makes for this user on the device. Persist the client ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the device's persistent storage to persist the ID. The next time the user uses your app on that device, get the client ID that you persisted. Bing responses may or may not include this header. If the response includes this header, capture the client ID and use it for all subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID, you must not include cookies in the request."
    - id: "clientIp"
      type: "java.lang.String"
      description: "The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's location. Bing uses the location information to determine safe search behavior. Although optional, you are encouraged to always specify this header and the X-Search-Location header. Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the address results in the location not being anywhere near the device's actual location, which may result in Bing serving erroneous results."
    - id: "location"
      type: "java.lang.String"
      description: "A semicolon-delimited list of key/value pairs that describe the client's geographical location. Bing uses the location information to determine safe search behavior and to return relevant local content. Specify the key/value pair as &lt;key&gt;:&lt;value&gt;. The following are the keys that you use to specify the user's location. lat (required): The latitude of the client's location, in degrees. The latitude must be greater than or equal to -90.0 and less than or equal to +90.0. Negative values indicate southern latitudes and positive values indicate northern latitudes. long (required): The longitude of the client's location, in degrees. The longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative values indicate western longitudes and positive values indicate eastern longitudes. re (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates. Pass the value returned by the device's location service. Typical values might be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp is the number of seconds since January 1, 1970.) head (optional): The client's relative heading or direction of travel. Specify the direction of travel as degrees from 0 through 360, counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp (optional): The horizontal velocity (speed), in meters per second, that the client device is traveling. alt (optional): The altitude of the client device, in meters. are (optional): The radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key only if you specify the alt key. Although many of the keys are optional, the more information that you provide, the more accurate the location results are. Although optional, you are encouraged to always specify the user's geographical location. Providing the location is especially important if the client's IP address does not accurately reflect the user's physical location (for example, if the client uses VPN). For optimal results, you should include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include this header."
    - id: "answerCount"
      type: "java.lang.Integer"
      description: "The number of answers that you want the response to include. The answers that Bing returns are based on ranking. For example, if Bing returns webpages, images, videos, and relatedSearches for a request and you set this parameter to two (2), the response includes webpages and images.If you included the responseFilter query parameter in the same request and set it to webpages and news, the response would include only webpages."
    - id: "countryCode"
      type: "java.lang.String"
      description: "A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive\\u2014do not specify both."
    - id: "count"
      type: "java.lang.Integer"
      description: "The number of search results to return in the response. The default is 10 and the maximum value is 50. The actual number delivered may be less than requested.Use this parameter along with the offset parameter to page results.For example, if your user interface displays 10 search results per page, set count to 10 and offset to 0 to get the first page of results. For each subsequent page, increment offset by 10 (for example, 0, 10, 20). It is possible for multiple pages to include some overlap in results."
    - id: "freshness"
      type: "com.microsoft.azure.cognitiveservices.search.websearch.models.Freshness"
      description: "Filter search results by the following age values: Day\\u2014Return webpages that Bing discovered within the last 24 hours. Week\\u2014Return webpages that Bing discovered within the last 7 days. Month\\u2014Return webpages that discovered within the last 30 days. This filter applies only to webpage results and not to the other results such as news and images. Possible values include: 'Day', 'Week', 'Month'"
    - id: "market"
      type: "java.lang.String"
      description: "The market where the results come from. Typically, mkt is the country where the user is making the request from. However, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form &lt;language code&gt;-&lt;country code&gt;. For example, en-US. The string is case insensitive. If known, you are encouraged to always specify the market. Specifying the market helps Bing route the request and return an appropriate and optimal response. If you specify a market that is not listed in Market Codes, Bing uses a best fit market code based on an internal mapping that is subject to change. This parameter and the cc query parameter are mutually exclusive\\u2014do not specify both."
    - id: "offset"
      type: "java.lang.Integer"
      description: "The zero-based offset that indicates the number of search results to skip before returning results. The default is 0. The offset should be less than (totalEstimatedMatches - count). Use this parameter along with the count parameter to page results. For example, if your user interface displays 10 search results per page, set count to 10 and offset to 0 to get the first page of results. For each subsequent page, increment offset by 10 (for example, 0, 10, 20). it is possible for multiple pages to include some overlap in results."
    - id: "promote"
      type: "java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>"
      description: "A comma-delimited list of answers that you want the response to include regardless of their ranking. For example, if you set answerCount) to two (2) so Bing returns the top two ranked answers, but you also want the response to include news, you'd set promote to news. If the top ranked answers are webpages, images, videos, and relatedSearches, the response includes webpages and images because news is not a ranked answer. But if you set promote to video, Bing would promote the video answer into the response and return webpages, images, and videos. The answers that you want to promote do not count against the answerCount limit. For example, if the ranked answers are news, images, and videos, and you set answerCount to 1 and promote to news, the response contains news and images. Or, if the ranked answers are videos, images, and news, the response contains videos and news. Possible values are Computation, Images, News, RelatedSearches, SpellSuggestions, TimeZone, Videos, Webpages. Use only if you specify answerCount."
    - id: "responseFilter"
      type: "java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>"
      description: "A comma-delimited list of answers to include in the response. If you do not specify this parameter, the response includes all search answers for which there's relevant data. Possible filter values are Computation, Images, News, RelatedSearches, SpellSuggestions, TimeZone, Videos, Webpages. Although you may use this filter to get a single answer, you should instead use the answer-specific endpoint in order to get richer results. For example, to receive only images, send the request to one of the Image Search API endpoints. The RelatedSearches and SpellSuggestions answers do not support a separate endpoint like the Image Search API does (only the Web Search API returns them). To include answers that would otherwise be excluded because of ranking, see the promote query parameter."
    - id: "safeSearch"
      type: "com.microsoft.azure.cognitiveservices.search.websearch.models.SafeSearch"
      description: "A filter used to filter adult content. Off: Return webpages with adult text, images, or videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do not return webpages with adult text, images, or videos. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content. Possible values include: 'Off', 'Moderate', 'Strict'"
    - id: "setLang"
      type: "java.lang.String"
      description: "The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language."
    - id: "textDecorations"
      type: "java.lang.Boolean"
      description: "A Boolean value that determines whether display strings should contain decoration markers such as hit highlighting characters. If true, the strings may include markers. The default is false. To specify whether to use Unicode characters or HTML tags as the markers, see the textFormat query parameter."
    - id: "textFormat"
      type: "com.microsoft.azure.cognitiveservices.search.websearch.models.TextFormat"
      description: "The type of markers to use for text decorations (see the textDecorations query parameter). Possible values are Raw\\u2014Use Unicode characters to mark content that needs special formatting. The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and E001 to mark the beginning and end of query terms for hit highlighting. HTML\\u2014Use HTML tags to mark content that needs special formatting. For example, use &lt;b&gt; tags to highlight query terms in display strings. The default is Raw. For display strings that contain escapable HTML characters such as &lt;, &gt;, and &amp;, if textFormat is set to HTML, Bing escapes the characters as appropriate (for example, &lt; is escaped to &amp;lt;). Possible values include: 'Raw', 'Html'"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>>"
      description: "the observable to the SearchResponse object"
references:
- uid: "retrofit2.Retrofit"
  spec.java:
  - uid: "retrofit2.Retrofit"
    name: "Retrofit"
    fullName: "retrofit2.Retrofit"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchAPIImpl"
  name: "BingWebSearchAPIImpl"
  nameWithType: "BingWebSearchAPIImpl"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchAPIImpl"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebSearchImpl*"
  name: "BingWebSearchImpl"
  nameWithType: "BingWebSearchImpl.BingWebSearchImpl"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebSearchImpl"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter"
  name: "SearchOptionalParameter"
  nameWithType: "SearchOptionalParameter"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchOptionalParameter"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
  name: "SearchResponse"
  nameWithType: "SearchResponse"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search*"
  name: "search"
  nameWithType: "BingWebSearchImpl.search"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.search"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
    name: "SearchResponse"
    fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
    name: "SearchResponse"
    fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync*"
  name: "searchAsync"
  nameWithType: "BingWebSearchImpl.searchAsync"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchAsync"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
- uid: "rx.Observable<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
    name: "SearchResponse"
    fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
    name: "SearchResponse"
    fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync*"
  name: "searchWithServiceResponseAsync"
  nameWithType: "BingWebSearchImpl.searchWithServiceResponseAsync"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.searchWithServiceResponseAsync"
  package: "com.microsoft.azure.cognitiveservices.search.websearch.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.Freshness"
  name: "Freshness"
  nameWithType: "Freshness"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.Freshness"
- uid: "java.util.List<com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType"
    name: "AnswerType"
    fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.SafeSearch"
  name: "SafeSearch"
  nameWithType: "SafeSearch"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.SafeSearch"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.TextFormat"
  name: "TextFormat"
  nameWithType: "TextFormat"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.TextFormat"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebsSearchParameters"
  name: "BingWebSearchImpl.BingWebsSearchParameters"
  nameWithType: "BingWebSearchImpl.BingWebsSearchParameters"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebsSearchParameters"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.BingWebSearch"
  name: "BingWebSearch"
  nameWithType: "BingWebSearch"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.BingWebSearch"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebsService"
  name: "BingWebSearchImpl.BingWebsService"
  nameWithType: "BingWebSearchImpl.BingWebsService"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.implementation.BingWebSearchImpl.BingWebsService"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceResponse"
  name: "ServiceResponse"
  nameWithType: "ServiceResponse"
  fullName: "com.microsoft.rest.ServiceResponse"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType"
  name: "AnswerType"
  nameWithType: "AnswerType"
  fullName: "com.microsoft.azure.cognitiveservices.search.websearch.models.AnswerType"
