### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexClient.analyzeText*"
fullName: "com.azure.search.documents.indexes.SearchIndexClient.analyzeText"
name: "analyzeText"
nameWithType: "SearchIndexClient.analyzeText"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexClient.analyzeText(java.lang.String,com.azure.search.documents.indexes.models.AnalyzeTextOptions)"
  fullName: "com.azure.search.documents.indexes.SearchIndexClient.analyzeText(String indexName, AnalyzeTextOptions analyzeTextOptions)"
  name: "analyzeText(String indexName, AnalyzeTextOptions analyzeTextOptions)"
  nameWithType: "SearchIndexClient.analyzeText(String indexName, AnalyzeTextOptions analyzeTextOptions)"
  summary: "Shows how an analyzer breaks text into tokens.\n\n**Code Sample**\n\nAnalyzer text with LexicalTokenizerName \"Classic\" in search index \"searchIndex\".\n\n\\{@codesnippet com.azure.search.documents.indexes.SearchIndexClient.analyzeText\\#String-AnalyzeTextOptions\\}"
  parameters:
  - description: "the name of the index for which to test an analyzer"
    name: "indexName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the text and analyzer or analysis components to test. Requires to provide either <xref uid=\"com.azure.search.documents.indexes.models.LexicalTokenizerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalTokenizerName\"></xref> or <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref>."
    name: "analyzeTextOptions"
    type: "<xref href=\"com.azure.search.documents.indexes.models.AnalyzeTextOptions?alt=com.azure.search.documents.indexes.models.AnalyzeTextOptions&text=AnalyzeTextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<AnalyzedTokenInfo> analyzeText(String indexName, AnalyzeTextOptions analyzeTextOptions)"
  returns:
    description: "analyze result."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.AnalyzedTokenInfo?alt=com.azure.search.documents.indexes.models.AnalyzedTokenInfo&text=AnalyzedTokenInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.SearchIndexClient.analyzeText(java.lang.String,com.azure.search.documents.indexes.models.AnalyzeTextOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.documents.indexes.SearchIndexClient.analyzeText(String indexName, AnalyzeTextOptions analyzeTextOptions, Context context)"
  name: "analyzeText(String indexName, AnalyzeTextOptions analyzeTextOptions, Context context)"
  nameWithType: "SearchIndexClient.analyzeText(String indexName, AnalyzeTextOptions analyzeTextOptions, Context context)"
  summary: "Shows how an analyzer breaks text into tokens.\n\n**Code Sample**\n\nAnalyzer text response with LexicalTokenizerName \"Classic\" in search index \"searchIndex\".\n\n\\{@codesnippet com.azure.search.documents.indexes.SearchIndexClient.analyzeText\\#String-AnalyzeTextOptions-Context\\}"
  parameters:
  - description: "the name of the index for which to test an analyzer"
    name: "indexName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the text and analyzer or analysis components to test. Requires to provide either <xref uid=\"com.azure.search.documents.indexes.models.LexicalTokenizerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalTokenizerName\"></xref> or <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref>."
    name: "analyzeTextOptions"
    type: "<xref href=\"com.azure.search.documents.indexes.models.AnalyzeTextOptions?alt=com.azure.search.documents.indexes.models.AnalyzeTextOptions&text=AnalyzeTextOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<AnalyzedTokenInfo> analyzeText(String indexName, AnalyzeTextOptions analyzeTextOptions, Context context)"
  returns:
    description: "analyze result."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.AnalyzedTokenInfo?alt=com.azure.search.documents.indexes.models.AnalyzedTokenInfo&text=AnalyzedTokenInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.4.0
