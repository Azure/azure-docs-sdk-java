### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.compute.ContainerService.agentPoolCount()
  name: agentPoolCount()
  nameWithType: ContainerService.agentPoolCount()
  returns:
    description: <p>the agent pool count </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int agentPoolCount()
  uid: com.microsoft.azure.management.compute.ContainerService.agentPoolCount()
- fullName: com.microsoft.azure.management.compute.ContainerService.agentPoolFqdn()
  name: agentPoolFqdn()
  nameWithType: ContainerService.agentPoolFqdn()
  returns:
    description: <p>the agent pool FQDN </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String agentPoolFqdn()
  uid: com.microsoft.azure.management.compute.ContainerService.agentPoolFqdn()
- fullName: com.microsoft.azure.management.compute.ContainerService.agentPoolLeafDomainLabel()
  name: agentPoolLeafDomainLabel()
  nameWithType: ContainerService.agentPoolLeafDomainLabel()
  returns:
    description: <p>the agent pool leaf domain label </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String agentPoolLeafDomainLabel()
  uid: com.microsoft.azure.management.compute.ContainerService.agentPoolLeafDomainLabel()
- fullName: com.microsoft.azure.management.compute.ContainerService.agentPoolName()
  name: agentPoolName()
  nameWithType: ContainerService.agentPoolName()
  returns:
    description: <p>the agent pool name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String agentPoolName()
  uid: com.microsoft.azure.management.compute.ContainerService.agentPoolName()
- fullName: com.microsoft.azure.management.compute.ContainerService.agentPoolVMSize()
  name: agentPoolVMSize()
  nameWithType: ContainerService.agentPoolVMSize()
  returns:
    description: <p>the agent pool VM size </p>
    type: <xref href="com.microsoft.azure.management.compute.ContainerServiceVMSizeTypes?alt=com.microsoft.azure.management.compute.ContainerServiceVMSizeTypes&text=ContainerServiceVMSizeTypes" data-throw-if-not-resolved="False"/>
  syntax: public ContainerServiceVMSizeTypes agentPoolVMSize()
  uid: com.microsoft.azure.management.compute.ContainerService.agentPoolVMSize()
- fullName: com.microsoft.azure.management.compute.ContainerService.isDiagnosticsEnabled()
  name: isDiagnosticsEnabled()
  nameWithType: ContainerService.isDiagnosticsEnabled()
  returns:
    description: <p>diagnostics enabled </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isDiagnosticsEnabled()
  uid: com.microsoft.azure.management.compute.ContainerService.isDiagnosticsEnabled()
- fullName: com.microsoft.azure.management.compute.ContainerService.linuxRootUsername()
  name: linuxRootUsername()
  nameWithType: ContainerService.linuxRootUsername()
  returns:
    description: <p>the linux root username </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String linuxRootUsername()
  uid: com.microsoft.azure.management.compute.ContainerService.linuxRootUsername()
- fullName: com.microsoft.azure.management.compute.ContainerService.masterFqdn()
  name: masterFqdn()
  nameWithType: ContainerService.masterFqdn()
  returns:
    description: <p>the master FQDN </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String masterFqdn()
  uid: com.microsoft.azure.management.compute.ContainerService.masterFqdn()
- fullName: com.microsoft.azure.management.compute.ContainerService.masterLeafDomainLabel()
  name: masterLeafDomainLabel()
  nameWithType: ContainerService.masterLeafDomainLabel()
  returns:
    description: <p>the master leaf domain label </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String masterLeafDomainLabel()
  uid: com.microsoft.azure.management.compute.ContainerService.masterLeafDomainLabel()
- fullName: com.microsoft.azure.management.compute.ContainerService.masterNodeCount()
  name: masterNodeCount()
  nameWithType: ContainerService.masterNodeCount()
  returns:
    description: <p>the master node count </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int masterNodeCount()
  uid: com.microsoft.azure.management.compute.ContainerService.masterNodeCount()
- fullName: com.microsoft.azure.management.compute.ContainerService.orchestratorType()
  name: orchestratorType()
  nameWithType: ContainerService.orchestratorType()
  returns:
    description: <p>the type of the orchestrator </p>
    type: <xref href="com.microsoft.azure.management.compute.ContainerServiceOrchestratorTypes?alt=com.microsoft.azure.management.compute.ContainerServiceOrchestratorTypes&text=ContainerServiceOrchestratorTypes" data-throw-if-not-resolved="False"/>
  syntax: public ContainerServiceOrchestratorTypes orchestratorType()
  uid: com.microsoft.azure.management.compute.ContainerService.orchestratorType()
- fullName: com.microsoft.azure.management.compute.ContainerService.servicePrincipalClientId()
  name: servicePrincipalClientId()
  nameWithType: ContainerService.servicePrincipalClientId()
  returns:
    description: <p>the service principal clientId </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String servicePrincipalClientId()
  uid: com.microsoft.azure.management.compute.ContainerService.servicePrincipalClientId()
- fullName: com.microsoft.azure.management.compute.ContainerService.servicePrincipalSecret()
  name: servicePrincipalSecret()
  nameWithType: ContainerService.servicePrincipalSecret()
  returns:
    description: <p>the service principal secret </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String servicePrincipalSecret()
  uid: com.microsoft.azure.management.compute.ContainerService.servicePrincipalSecret()
- fullName: com.microsoft.azure.management.compute.ContainerService.sshKey()
  name: sshKey()
  nameWithType: ContainerService.sshKey()
  returns:
    description: <p>the linux ssh key </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String sshKey()
  uid: com.microsoft.azure.management.compute.ContainerService.sshKey()
nameWithType: ContainerService
syntax: public interface ContainerService extends GroupableResource<ComputeManager, ContainerServiceInner>,Refreshable<ContainerService>,Updatable<ContainerService.Update>
type: interface
uid: com.microsoft.azure.management.compute.ContainerService
fullName: com.microsoft.azure.management.compute.ContainerService
name: ContainerService
package: com.microsoft.azure.management.compute
summary: <p>An client-side representation for a container service. </p>
metadata: {}
