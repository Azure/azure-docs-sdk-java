### YamlMime:JavaMember
nameWithType: Applications.getWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Applications.getWithServiceResponseAsync(String applicationId)
  name: getWithServiceResponseAsync(String applicationId)
  nameWithType: Applications.getWithServiceResponseAsync(String applicationId)
  parameters:
  - description: <p>The ID of the application. </p>
    name: applicationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ApplicationSummary object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.batch.protocol.models.ApplicationSummary?alt=com.microsoft.azure.batch.protocol.models.ApplicationSummary&text=ApplicationSummary" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.batch.protocol.models.ApplicationGetHeaders?alt=com.microsoft.azure.batch.protocol.models.ApplicationGetHeaders&text=ApplicationGetHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the specified application. This operation returns only applications and versions that are available for use on compute nodes; that is, that can be used in an application package reference. For administrator information about applications and versions that are not yet available to compute nodes, use the Azure portal or the Azure Resource Manager API.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<ApplicationSummary, ApplicationGetHeaders>> getWithServiceResponseAsync(String applicationId)
  uid: com.microsoft.azure.batch.protocol.Applications.getWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.batch.protocol.Applications.getWithServiceResponseAsync(String applicationId, ApplicationGetOptions applicationGetOptions)
  name: getWithServiceResponseAsync(String applicationId, ApplicationGetOptions applicationGetOptions)
  nameWithType: Applications.getWithServiceResponseAsync(String applicationId, ApplicationGetOptions applicationGetOptions)
  parameters:
  - description: <p>The ID of the application. </p>
    name: applicationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: applicationGetOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.ApplicationGetOptions?alt=com.microsoft.azure.batch.protocol.models.ApplicationGetOptions&text=ApplicationGetOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ApplicationSummary object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.batch.protocol.models.ApplicationSummary?alt=com.microsoft.azure.batch.protocol.models.ApplicationSummary&text=ApplicationSummary" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.batch.protocol.models.ApplicationGetHeaders?alt=com.microsoft.azure.batch.protocol.models.ApplicationGetHeaders&text=ApplicationGetHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the specified application. This operation returns only applications and versions that are available for use on compute nodes; that is, that can be used in an application package reference. For administrator information about applications and versions that are not yet available to compute nodes, use the Azure portal or the Azure Resource Manager API.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<ApplicationSummary, ApplicationGetHeaders>> getWithServiceResponseAsync(String applicationId, ApplicationGetOptions applicationGetOptions)
  uid: com.microsoft.azure.batch.protocol.Applications.getWithServiceResponseAsync(String,ApplicationGetOptions)
uid: com.microsoft.azure.batch.protocol.Applications.getWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Applications.getWithServiceResponseAsync(String applicationId)
name: getWithServiceResponseAsync(String applicationId)
package: com.microsoft.azure.batch.protocol
metadata: {}
