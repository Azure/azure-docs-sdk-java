### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey"
fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey"
name: "StreamingPolicyContentKey"
nameWithType: "StreamingPolicyContentKey"
summary: "Class to specify properties of content key."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **StreamingPolicyContentKey**"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.StreamingPolicyContentKey()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.StreamingPolicyContentKey()"
  name: "StreamingPolicyContentKey()"
  nameWithType: "StreamingPolicyContentKey.StreamingPolicyContentKey()"
  summary: "Creates an instance of Streaming<wbr>Policy<wbr>Content<wbr>Key class."
  syntax: "public StreamingPolicyContentKey()"
  desc: "Creates an instance of StreamingPolicyContentKey class."
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.label()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.label()"
  name: "label()"
  nameWithType: "StreamingPolicyContentKey.label()"
  summary: "Get the label property: Label can be used to specify Content Key when creating a Streaming Locator."
  syntax: "public String label()"
  desc: "Get the label property: Label can be used to specify Content Key when creating a Streaming Locator."
  returns:
    description: "the label value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.policyName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.policyName()"
  name: "policyName()"
  nameWithType: "StreamingPolicyContentKey.policyName()"
  summary: "Get the policy<wbr>Name property: Policy used by Content Key."
  syntax: "public String policyName()"
  desc: "Get the policyName property: Policy used by Content Key."
  returns:
    description: "the policyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.tracks()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.tracks()"
  name: "tracks()"
  nameWithType: "StreamingPolicyContentKey.tracks()"
  summary: "Get the tracks property: Tracks which use this content key."
  syntax: "public List<TrackSelection> tracks()"
  desc: "Get the tracks property: Tracks which use this content key."
  returns:
    description: "the tracks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackSelection?alt=com.azure.resourcemanager.mediaservices.models.TrackSelection&text=TrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.validate()"
  name: "validate()"
  nameWithType: "StreamingPolicyContentKey.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.withLabel(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.withLabel(String label)"
  name: "withLabel(String label)"
  nameWithType: "StreamingPolicyContentKey.withLabel(String label)"
  summary: "Set the label property: Label can be used to specify Content Key when creating a Streaming Locator."
  parameters:
  - description: "the label value to set."
    name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyContentKey withLabel(String label)"
  desc: "Set the label property: Label can be used to specify Content Key when creating a Streaming Locator."
  returns:
    description: "the StreamingPolicyContentKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey&text=StreamingPolicyContentKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.withPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.withPolicyName(String policyName)"
  name: "withPolicyName(String policyName)"
  nameWithType: "StreamingPolicyContentKey.withPolicyName(String policyName)"
  summary: "Set the policy<wbr>Name property: Policy used by Content Key."
  parameters:
  - description: "the policyName value to set."
    name: "policyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyContentKey withPolicyName(String policyName)"
  desc: "Set the policyName property: Policy used by Content Key."
  returns:
    description: "the StreamingPolicyContentKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey&text=StreamingPolicyContentKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.withTracks(java.util.List<com.azure.resourcemanager.mediaservices.models.TrackSelection>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey.withTracks(List<TrackSelection> tracks)"
  name: "withTracks(List<TrackSelection> tracks)"
  nameWithType: "StreamingPolicyContentKey.withTracks(List<TrackSelection> tracks)"
  summary: "Set the tracks property: Tracks which use this content key."
  parameters:
  - description: "the tracks value to set."
    name: "tracks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackSelection?alt=com.azure.resourcemanager.mediaservices.models.TrackSelection&text=TrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StreamingPolicyContentKey withTracks(List<TrackSelection> tracks)"
  desc: "Set the tracks property: Tracks which use this content key."
  returns:
    description: "the StreamingPolicyContentKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey&text=StreamingPolicyContentKey\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class to specify properties of content key."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.3.0
