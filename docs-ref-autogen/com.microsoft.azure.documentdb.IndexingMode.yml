### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.documentdb.IndexingMode
  id: IndexingMode
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb
  children:
  - com.microsoft.azure.documentdb.IndexingMode.Consistent
  - com.microsoft.azure.documentdb.IndexingMode.Lazy
  - com.microsoft.azure.documentdb.IndexingMode.None
  - com.microsoft.azure.documentdb.IndexingMode.valueOf(java.lang.String)
  - com.microsoft.azure.documentdb.IndexingMode.values()
  langs:
  - java
  name: IndexingMode
  nameWithType: IndexingMode
  fullName: com.microsoft.azure.documentdb.IndexingMode
  type: Enum
  package: com.microsoft.azure.documentdb
  summary: Specifies the supported indexing modes in the Azure Cosmos DB database service.
  syntax:
    content: public enum IndexingMode extends Enum<IndexingMode>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.documentdb.IndexingMode.Consistent
  id: Consistent
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.IndexingMode
  langs:
  - java
  name: Consistent
  nameWithType: IndexingMode.Consistent
  fullName: com.microsoft.azure.documentdb.IndexingMode.Consistent
  type: Field
  package: com.microsoft.azure.documentdb
  summary: >-
    Index is updated synchronously with a create or update operation.


    With consistent indexing, query behavior is the same as the default consistency level for the collection. The index is always kept up to date with the data.
  syntax:
    content: public static final IndexingMode Consistent
    return:
      type: com.microsoft.azure.documentdb.IndexingMode
- uid: com.microsoft.azure.documentdb.IndexingMode.IndexingMode()
  id: IndexingMode()
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.IndexingMode
  langs:
  - java
  name: IndexingMode()
  nameWithType: IndexingMode.IndexingMode()
  fullName: com.microsoft.azure.documentdb.IndexingMode.IndexingMode()
  overload: com.microsoft.azure.documentdb.IndexingMode.IndexingMode*
  type: Constructor
  package: com.microsoft.azure.documentdb
  syntax:
    content: private IndexingMode()
- uid: com.microsoft.azure.documentdb.IndexingMode.Lazy
  id: Lazy
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.IndexingMode
  langs:
  - java
  name: Lazy
  nameWithType: IndexingMode.Lazy
  fullName: com.microsoft.azure.documentdb.IndexingMode.Lazy
  type: Field
  package: com.microsoft.azure.documentdb
  summary: >-
    Index is updated asynchronously with respect to a create or update operation.


    With lazy indexing, queries are eventually consistent. The index is updated when the collection is idle.
  syntax:
    content: public static final IndexingMode Lazy
    return:
      type: com.microsoft.azure.documentdb.IndexingMode
- uid: com.microsoft.azure.documentdb.IndexingMode.None
  id: None
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.IndexingMode
  langs:
  - java
  name: None
  nameWithType: IndexingMode.None
  fullName: com.microsoft.azure.documentdb.IndexingMode.None
  type: Field
  package: com.microsoft.azure.documentdb
  summary: >-
    No index is provided.


    Setting IndexingMode to "None" drops the index. Use this if you don't want to maintain the index for a document collection, to save the storage cost or improve the write throughput. Your queries will degenerate to scans of the entire collection.
  syntax:
    content: public static final IndexingMode None
    return:
      type: com.microsoft.azure.documentdb.IndexingMode
- uid: com.microsoft.azure.documentdb.IndexingMode.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.IndexingMode
  langs:
  - java
  name: valueOf(String name)
  nameWithType: IndexingMode.valueOf(String name)
  fullName: com.microsoft.azure.documentdb.IndexingMode.valueOf(String name)
  overload: com.microsoft.azure.documentdb.IndexingMode.valueOf*
  type: Method
  package: com.microsoft.azure.documentdb
  syntax:
    content: public static IndexingMode valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.microsoft.azure.documentdb.IndexingMode
- uid: com.microsoft.azure.documentdb.IndexingMode.values()
  id: values()
  artifact: com.microsoft.azure:azure-documentdb:2.4.7
  parent: com.microsoft.azure.documentdb.IndexingMode
  langs:
  - java
  name: values()
  nameWithType: IndexingMode.values()
  fullName: com.microsoft.azure.documentdb.IndexingMode.values()
  overload: com.microsoft.azure.documentdb.IndexingMode.values*
  type: Method
  package: com.microsoft.azure.documentdb
  syntax:
    content: public static IndexingMode[] values()
    return:
      type: com.microsoft.azure.documentdb.IndexingMode[]
references:
- uid: com.microsoft.azure.documentdb.IndexingMode.IndexingMode*
  name: IndexingMode
  nameWithType: IndexingMode.IndexingMode
  fullName: com.microsoft.azure.documentdb.IndexingMode.IndexingMode
  package: com.microsoft.azure.documentdb
- uid: com.microsoft.azure.documentdb.IndexingMode[]
  spec.java:
  - uid: com.microsoft.azure.documentdb.IndexingMode
    name: IndexingMode
    fullName: com.microsoft.azure.documentdb.IndexingMode
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.documentdb.IndexingMode.values*
  name: values
  nameWithType: IndexingMode.values
  fullName: com.microsoft.azure.documentdb.IndexingMode.values
  package: com.microsoft.azure.documentdb
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.documentdb.IndexingMode.valueOf*
  name: valueOf
  nameWithType: IndexingMode.valueOf
  fullName: com.microsoft.azure.documentdb.IndexingMode.valueOf
  package: com.microsoft.azure.documentdb
- uid: java.lang.Enum<com.microsoft.azure.documentdb.IndexingMode>
  name: Enum<IndexingMode>
  nameWithType: Enum<IndexingMode>
  fullName: java.lang.Enum<com.microsoft.azure.documentdb.IndexingMode>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
