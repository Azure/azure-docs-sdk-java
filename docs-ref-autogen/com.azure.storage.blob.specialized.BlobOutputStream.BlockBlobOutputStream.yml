### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream"
  id: "BlockBlobOutputStream"
  parent: "com.azure.storage.blob.specialized"
  children:
  - "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.commit()"
  - "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.complete"
  - "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.dispatchWrite(byte[],int,long)"
  - "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.writeInternal(byte[],int,int)"
  langs:
  - "java"
  name: "BlobOutputStream.BlockBlobOutputStream"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream"
  type: "Class"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: "private static final class BlobOutputStream.BlockBlobOutputStream extends BlobOutputStream"
  inheritance:
  - "java.lang.Object"
  - "java.io.OutputStream"
  - "com.azure.storage.common.StorageOutputStream"
  - "com.azure.storage.blob.specialized.BlobOutputStream"
  inheritedMembers:
  - "com.azure.storage.blob.specialized.BlobOutputStream.appendBlobOutputStream(com.azure.storage.blob.specialized.AppendBlobAsyncClient,com.azure.storage.blob.models.AppendBlobRequestConditions)"
  - "com.azure.storage.blob.specialized.BlobOutputStream.blockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions)"
  - "com.azure.storage.blob.specialized.BlobOutputStream.blockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobOutputStream.close()"
  - "com.azure.storage.blob.specialized.BlobOutputStream.commit()"
  - "com.azure.storage.blob.specialized.BlobOutputStream.pageBlobOutputStream(com.azure.storage.blob.specialized.PageBlobAsyncClient,com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.BlobRequestConditions)"
  - "com.azure.storage.common.StorageOutputStream.checkStreamState()"
  - "com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[],int,long)"
  - "com.azure.storage.common.StorageOutputStream.flush()"
  - "com.azure.storage.common.StorageOutputStream.write(byte[])"
  - "com.azure.storage.common.StorageOutputStream.write(byte[],int,int)"
  - "com.azure.storage.common.StorageOutputStream.write(int)"
  - "com.azure.storage.common.StorageOutputStream.writeInternal(byte[],int,int)"
  - "java.io.OutputStream.nullOutputStream()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.BlockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,com.azure.core.util.Context)"
  id: "BlockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream"
  langs:
  - "java"
  name: "BlockBlobOutputStream(BlobAsyncClient client, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Context context)"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.BlockBlobOutputStream(BlobAsyncClient client, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Context context)"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.BlockBlobOutputStream(BlobAsyncClient client, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Context context)"
  overload: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.BlockBlobOutputStream*"
  type: "Constructor"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: "private BlockBlobOutputStream(BlobAsyncClient client, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Context context)"
    parameters:
    - id: "client"
      type: "com.azure.storage.blob.BlobAsyncClient"
    - id: "parallelTransferOptions"
      type: "com.azure.storage.blob.models.ParallelTransferOptions"
    - id: "headers"
      type: "com.azure.storage.blob.models.BlobHttpHeaders"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "tier"
      type: "com.azure.storage.blob.models.AccessTier"
    - id: "requestConditions"
      type: "com.azure.storage.blob.models.BlobRequestConditions"
    - id: "context"
      type: "com.azure.core.util.Context"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.commit()"
  id: "commit()"
  parent: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream"
  langs:
  - "java"
  name: "commit()"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.commit()"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.commit()"
  overload: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.commit*"
  type: "Method"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: " void commit()"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.complete"
  id: "complete"
  parent: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream"
  langs:
  - "java"
  name: "complete"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.complete"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.complete"
  type: "Field"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: " boolean complete"
    return:
      type: "boolean"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.dispatchWrite(byte[],int,long)"
  id: "dispatchWrite(byte[],int,long)"
  parent: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream"
  langs:
  - "java"
  name: "dispatchWrite(byte[] data, int writeLength, long offset)"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.dispatchWrite(byte[] data, int writeLength, long offset)"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.dispatchWrite(byte[] data, int writeLength, long offset)"
  overload: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.dispatchWrite*"
  type: "Method"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: "protected Mono<Void> dispatchWrite(byte[] data, int writeLength, long offset)"
    parameters:
    - id: "data"
      type: "byte[]"
    - id: "writeLength"
      type: "int"
    - id: "offset"
      type: "long"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.writeInternal(byte[],int,int)"
  id: "writeInternal(byte[],int,int)"
  parent: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream"
  langs:
  - "java"
  name: "writeInternal(byte[] data, int offset, int length)"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.writeInternal(byte[] data, int offset, int length)"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.writeInternal(byte[] data, int offset, int length)"
  overload: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.writeInternal*"
  type: "Method"
  package: "com.azure.storage.blob.specialized"
  syntax:
    content: "protected void writeInternal(byte[] data, int offset, int length)"
    parameters:
    - id: "data"
      type: "byte[]"
    - id: "offset"
      type: "int"
    - id: "length"
      type: "int"
references:
- uid: "com.azure.storage.blob.BlobAsyncClient"
  name: "BlobAsyncClient"
  nameWithType: "BlobAsyncClient"
  fullName: "com.azure.storage.blob.BlobAsyncClient"
- uid: "com.azure.storage.blob.models.ParallelTransferOptions"
  name: "ParallelTransferOptions"
  nameWithType: "ParallelTransferOptions"
  fullName: "com.azure.storage.blob.models.ParallelTransferOptions"
- uid: "com.azure.storage.blob.models.BlobHttpHeaders"
  name: "BlobHttpHeaders"
  nameWithType: "BlobHttpHeaders"
  fullName: "com.azure.storage.blob.models.BlobHttpHeaders"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.models.AccessTier"
  name: "AccessTier"
  nameWithType: "AccessTier"
  fullName: "com.azure.storage.blob.models.AccessTier"
- uid: "com.azure.storage.blob.models.BlobRequestConditions"
  name: "BlobRequestConditions"
  nameWithType: "BlobRequestConditions"
  fullName: "com.azure.storage.blob.models.BlobRequestConditions"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.BlockBlobOutputStream*"
  name: "BlockBlobOutputStream"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.BlockBlobOutputStream"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.BlockBlobOutputStream"
  package: "com.azure.storage.blob.specialized"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.commit*"
  name: "commit"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.commit"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.commit"
  package: "com.azure.storage.blob.specialized"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.writeInternal*"
  name: "writeInternal"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.writeInternal"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.writeInternal"
  package: "com.azure.storage.blob.specialized"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.dispatchWrite*"
  name: "dispatchWrite"
  nameWithType: "BlobOutputStream.BlockBlobOutputStream.dispatchWrite"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.BlockBlobOutputStream.dispatchWrite"
  package: "com.azure.storage.blob.specialized"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream"
  name: "BlobOutputStream"
  nameWithType: "BlobOutputStream"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.pageBlobOutputStream(com.azure.storage.blob.specialized.PageBlobAsyncClient,com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.BlobRequestConditions)"
  name: "BlobOutputStream.pageBlobOutputStream(PageBlobAsyncClient,PageRange,BlobRequestConditions)"
  nameWithType: "BlobOutputStream.pageBlobOutputStream(PageBlobAsyncClient,PageRange,BlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.pageBlobOutputStream(com.azure.storage.blob.specialized.PageBlobAsyncClient,com.azure.storage.blob.models.PageRange,com.azure.storage.blob.models.BlobRequestConditions)"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.appendBlobOutputStream(com.azure.storage.blob.specialized.AppendBlobAsyncClient,com.azure.storage.blob.models.AppendBlobRequestConditions)"
  name: "BlobOutputStream.appendBlobOutputStream(AppendBlobAsyncClient,AppendBlobRequestConditions)"
  nameWithType: "BlobOutputStream.appendBlobOutputStream(AppendBlobAsyncClient,AppendBlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.appendBlobOutputStream(com.azure.storage.blob.specialized.AppendBlobAsyncClient,com.azure.storage.blob.models.AppendBlobRequestConditions)"
- uid: "com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[],int,long)"
  name: "StorageOutputStream.dispatchWrite(byte[],int,long)"
  nameWithType: "StorageOutputStream.dispatchWrite(byte[],int,long)"
  fullName: "com.azure.storage.common.StorageOutputStream.dispatchWrite(byte[],int,long)"
- uid: "java.io.OutputStream.nullOutputStream()"
  name: "OutputStream.nullOutputStream()"
  nameWithType: "OutputStream.nullOutputStream()"
  fullName: "java.io.OutputStream.nullOutputStream()"
- uid: "com.azure.storage.common.StorageOutputStream.write(byte[])"
  name: "StorageOutputStream.write(byte[])"
  nameWithType: "StorageOutputStream.write(byte[])"
  fullName: "com.azure.storage.common.StorageOutputStream.write(byte[])"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.StorageOutputStream.flush()"
  name: "StorageOutputStream.flush()"
  nameWithType: "StorageOutputStream.flush()"
  fullName: "com.azure.storage.common.StorageOutputStream.flush()"
- uid: "com.azure.storage.common.StorageOutputStream.write(int)"
  name: "StorageOutputStream.write(int)"
  nameWithType: "StorageOutputStream.write(int)"
  fullName: "com.azure.storage.common.StorageOutputStream.write(int)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.storage.common.StorageOutputStream.checkStreamState()"
  name: "StorageOutputStream.checkStreamState()"
  nameWithType: "StorageOutputStream.checkStreamState()"
  fullName: "com.azure.storage.common.StorageOutputStream.checkStreamState()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.blockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,com.azure.core.util.Context)"
  name: "BlobOutputStream.blockBlobOutputStream(BlobAsyncClient,ParallelTransferOptions,BlobHttpHeaders,Map<String,String>,AccessTier,BlobRequestConditions,Context)"
  nameWithType: "BlobOutputStream.blockBlobOutputStream(BlobAsyncClient,ParallelTransferOptions,BlobHttpHeaders,Map<String,String>,AccessTier,BlobRequestConditions,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.blockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,com.azure.core.util.Context)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.blockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions)"
  name: "BlobOutputStream.blockBlobOutputStream(BlobAsyncClient,ParallelTransferOptions,BlobHttpHeaders,Map<String,String>,AccessTier,BlobRequestConditions)"
  nameWithType: "BlobOutputStream.blockBlobOutputStream(BlobAsyncClient,ParallelTransferOptions,BlobHttpHeaders,Map<String,String>,AccessTier,BlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.blockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions)"
- uid: "com.azure.storage.common.StorageOutputStream.writeInternal(byte[],int,int)"
  name: "StorageOutputStream.writeInternal(byte[],int,int)"
  nameWithType: "StorageOutputStream.writeInternal(byte[],int,int)"
  fullName: "com.azure.storage.common.StorageOutputStream.writeInternal(byte[],int,int)"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.commit()"
  name: "BlobOutputStream.commit()"
  nameWithType: "BlobOutputStream.commit()"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.commit()"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.close()"
  name: "BlobOutputStream.close()"
  nameWithType: "BlobOutputStream.close()"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.close()"
- uid: "com.azure.storage.common.StorageOutputStream.write(byte[],int,int)"
  name: "StorageOutputStream.write(byte[],int,int)"
  nameWithType: "StorageOutputStream.write(byte[],int,int)"
  fullName: "com.azure.storage.common.StorageOutputStream.write(byte[],int,int)"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,com.azure.core.util.Context)"
  name: "String,String>,AccessTier,BlobRequestConditions,Context)"
  nameWithType: "String,String>,AccessTier,BlobRequestConditions,Context)"
  fullName: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobOutputStream.blockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map"
  name: "BlobOutputStream.blockBlobOutputStream(BlobAsyncClient,ParallelTransferOptions,BlobHttpHeaders,Map"
  nameWithType: "BlobOutputStream.blockBlobOutputStream(BlobAsyncClient,ParallelTransferOptions,BlobHttpHeaders,Map"
  fullName: "com.azure.storage.blob.specialized.BlobOutputStream.blockBlobOutputStream(com.azure.storage.blob.BlobAsyncClient,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map"
- uid: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions)"
  name: "String,String>,AccessTier,BlobRequestConditions)"
  nameWithType: "String,String>,AccessTier,BlobRequestConditions)"
  fullName: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions)"
