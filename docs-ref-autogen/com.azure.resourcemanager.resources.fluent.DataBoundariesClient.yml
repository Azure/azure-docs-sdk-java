### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient"
fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient"
name: "DataBoundariesClient"
nameWithType: "DataBoundariesClient"
summary: "An instance of this class provides access to all the operations defined in Data<wbr>Boundaries<wbr>Client."
syntax: "public interface **DataBoundariesClient**"
methods:
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getScope(java.lang.String,com.azure.resourcemanager.resources.models.DefaultName)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getScope(String scope, DefaultName defaultParameter)"
  name: "getScope(String scope, DefaultName defaultParameter)"
  nameWithType: "DataBoundariesClient.getScope(String scope, DefaultName defaultParameter)"
  summary: "Get data boundary at specified scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope at which the operation is performed."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataBoundaryDefinitionInner getScope(String scope, DefaultName defaultParameter)"
  desc: "Get data boundary at specified scope."
  returns:
    description: "data boundary at specified scope."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.DefaultName)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getScopeAsync(String scope, DefaultName defaultParameter)"
  name: "getScopeAsync(String scope, DefaultName defaultParameter)"
  nameWithType: "DataBoundariesClient.getScopeAsync(String scope, DefaultName defaultParameter)"
  summary: "Get data boundary at specified scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope at which the operation is performed."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DataBoundaryDefinitionInner> getScopeAsync(String scope, DefaultName defaultParameter)"
  desc: "Get data boundary at specified scope."
  returns:
    description: "data boundary at specified scope on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getScopeWithResponse(java.lang.String,com.azure.resourcemanager.resources.models.DefaultName,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getScopeWithResponse(String scope, DefaultName defaultParameter, Context context)"
  name: "getScopeWithResponse(String scope, DefaultName defaultParameter, Context context)"
  nameWithType: "DataBoundariesClient.getScopeWithResponse(String scope, DefaultName defaultParameter, Context context)"
  summary: "Get data boundary at specified scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope at which the operation is performed."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DataBoundaryDefinitionInner> getScopeWithResponse(String scope, DefaultName defaultParameter, Context context)"
  desc: "Get data boundary at specified scope."
  returns:
    description: "data boundary at specified scope along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getScopeWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.DefaultName)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getScopeWithResponseAsync(String scope, DefaultName defaultParameter)"
  name: "getScopeWithResponseAsync(String scope, DefaultName defaultParameter)"
  nameWithType: "DataBoundariesClient.getScopeWithResponseAsync(String scope, DefaultName defaultParameter)"
  summary: "Get data boundary at specified scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope at which the operation is performed."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<DataBoundaryDefinitionInner>> getScopeWithResponseAsync(String scope, DefaultName defaultParameter)"
  desc: "Get data boundary at specified scope."
  returns:
    description: "data boundary at specified scope along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getTenant(com.azure.resourcemanager.resources.models.DefaultName)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getTenant(DefaultName defaultParameter)"
  name: "getTenant(DefaultName defaultParameter)"
  nameWithType: "DataBoundariesClient.getTenant(DefaultName defaultParameter)"
  summary: "Get data boundary of tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataBoundaryDefinitionInner getTenant(DefaultName defaultParameter)"
  desc: "Get data boundary of tenant."
  returns:
    description: "data boundary of tenant."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getTenantAsync(com.azure.resourcemanager.resources.models.DefaultName)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getTenantAsync(DefaultName defaultParameter)"
  name: "getTenantAsync(DefaultName defaultParameter)"
  nameWithType: "DataBoundariesClient.getTenantAsync(DefaultName defaultParameter)"
  summary: "Get data boundary of tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DataBoundaryDefinitionInner> getTenantAsync(DefaultName defaultParameter)"
  desc: "Get data boundary of tenant."
  returns:
    description: "data boundary of tenant on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getTenantWithResponse(com.azure.resourcemanager.resources.models.DefaultName,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getTenantWithResponse(DefaultName defaultParameter, Context context)"
  name: "getTenantWithResponse(DefaultName defaultParameter, Context context)"
  nameWithType: "DataBoundariesClient.getTenantWithResponse(DefaultName defaultParameter, Context context)"
  summary: "Get data boundary of tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DataBoundaryDefinitionInner> getTenantWithResponse(DefaultName defaultParameter, Context context)"
  desc: "Get data boundary of tenant."
  returns:
    description: "data boundary of tenant along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getTenantWithResponseAsync(com.azure.resourcemanager.resources.models.DefaultName)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.getTenantWithResponseAsync(DefaultName defaultParameter)"
  name: "getTenantWithResponseAsync(DefaultName defaultParameter)"
  nameWithType: "DataBoundariesClient.getTenantWithResponseAsync(DefaultName defaultParameter)"
  summary: "Get data boundary of tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<DataBoundaryDefinitionInner>> getTenantWithResponseAsync(DefaultName defaultParameter)"
  desc: "Get data boundary of tenant."
  returns:
    description: "data boundary of tenant along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.put(com.azure.resourcemanager.resources.models.DefaultName,com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.put(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  name: "put(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  nameWithType: "DataBoundariesClient.put(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  summary: "Opt-in tenant to data boundary."
  modifiers:
  - "abstract"
  parameters:
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data boundary to opt the tenant to."
    name: "dataBoundaryDefinition"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataBoundaryDefinitionInner put(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  desc: "Opt-in tenant to data boundary."
  returns:
    description: "a data boundary definition."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.putAsync(com.azure.resourcemanager.resources.models.DefaultName,com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.putAsync(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  name: "putAsync(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  nameWithType: "DataBoundariesClient.putAsync(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  summary: "Opt-in tenant to data boundary."
  modifiers:
  - "abstract"
  parameters:
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data boundary to opt the tenant to."
    name: "dataBoundaryDefinition"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DataBoundaryDefinitionInner> putAsync(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  desc: "Opt-in tenant to data boundary."
  returns:
    description: "a data boundary definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.putWithResponse(com.azure.resourcemanager.resources.models.DefaultName,com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.putWithResponse(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition, Context context)"
  name: "putWithResponse(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition, Context context)"
  nameWithType: "DataBoundariesClient.putWithResponse(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition, Context context)"
  summary: "Opt-in tenant to data boundary."
  modifiers:
  - "abstract"
  parameters:
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data boundary to opt the tenant to."
    name: "dataBoundaryDefinition"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DataBoundaryDefinitionInner> putWithResponse(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition, Context context)"
  desc: "Opt-in tenant to data boundary."
  returns:
    description: "a data boundary definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.putWithResponseAsync(com.azure.resourcemanager.resources.models.DefaultName,com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataBoundariesClient.putWithResponseAsync(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  name: "putWithResponseAsync(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  nameWithType: "DataBoundariesClient.putWithResponseAsync(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  summary: "Opt-in tenant to data boundary."
  modifiers:
  - "abstract"
  parameters:
  - description: "Default string modeled as parameter for auto generation to work correctly."
    name: "defaultParameter"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DefaultName?alt=com.azure.resourcemanager.resources.models.DefaultName&text=DefaultName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data boundary to opt the tenant to."
    name: "dataBoundaryDefinition"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<DataBoundaryDefinitionInner>> putWithResponseAsync(DefaultName defaultParameter, DataBoundaryDefinitionInner dataBoundaryDefinition)"
  desc: "Opt-in tenant to data boundary."
  returns:
    description: "a data boundary definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.DataBoundaryDefinitionInner&text=DataBoundaryDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in DataBoundariesClient."
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.44.0
