### YamlMime:JavaMember
nameWithType: Pools.addWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool)
  name: addWithServiceResponseAsync(PoolAddParameter pool)
  nameWithType: Pools.addWithServiceResponseAsync(PoolAddParameter pool)
  parameters:
  - description: <p>The pool to be added. </p>
    name: pool
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.PoolAddHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolAddHeaders&text=PoolAddHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, PoolAddHeaders>> addWithServiceResponseAsync(PoolAddParameter pool)
  uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter)
- fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  name: addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  nameWithType: Pools.addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  parameters:
  - description: <p>The pool to be added. </p>
    name: pool
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: poolAddOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddOptions?alt=com.microsoft.azure.batch.protocol.models.PoolAddOptions&text=PoolAddOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.PoolAddHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolAddHeaders&text=PoolAddHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, PoolAddHeaders>> addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter,PoolAddOptions)
uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool)
name: addWithServiceResponseAsync(PoolAddParameter pool)
package: com.microsoft.azure.batch.protocol
metadata: {}
