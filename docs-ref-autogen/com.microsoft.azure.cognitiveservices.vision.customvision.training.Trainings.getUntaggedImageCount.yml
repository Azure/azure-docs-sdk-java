### YamlMime:JavaMember
nameWithType: Trainings.getUntaggedImageCount
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount()
  name: getUntaggedImageCount()
  nameWithType: Trainings.getUntaggedImageCount()
  returns:
    description: <p>the first stage of the getUntaggedImageCount call </p>
    type: <xref href="TrainingsGetUntaggedImageCountDefinitionStages.WithProjectId?alt=TrainingsGetUntaggedImageCountDefinitionStages.WithProjectId&text=TrainingsGetUntaggedImageCountDefinitionStages.WithProjectId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax: public TrainingsGetUntaggedImageCountDefinitionStages.WithProjectId getUntaggedImageCount()
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount()
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  name: getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  nameWithType: Trainings.getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  parameters:
  - description: <p>The project id. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: getUntaggedImageCountOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter&text=GetUntaggedImageCountOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CustomVisionErrorException?alt=CustomVisionErrorException&text=CustomVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the int object if successful. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax: public int getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount(UUID,GetUntaggedImageCountOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount()
name: getUntaggedImageCount()
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
