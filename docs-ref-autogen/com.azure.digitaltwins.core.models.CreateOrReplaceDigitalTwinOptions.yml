### YamlMime:ManagedReference
items:
- uid: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions
  id: CreateOrReplaceDigitalTwinOptions
  artifact: com.azure:azure-digitaltwins-core:1.0.0
  parent: com.azure.digitaltwins.core.models
  children:
  - com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions()
  - com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.getIfNoneMatch()
  - com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.setIfNoneMatch(java.lang.String)
  langs:
  - java
  name: CreateOrReplaceDigitalTwinOptions
  nameWithType: CreateOrReplaceDigitalTwinOptions
  fullName: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions
  type: Class
  package: com.azure.digitaltwins.core.models
  summary: The optional parameters for <xref uid="com.azure.digitaltwins.core.DigitalTwinsClient.createOrReplaceDigitalTwinWithResponse*" data-throw-if-not-resolved="false">com.azure.digitaltwins.core.DigitalTwinsClient#createOrReplaceDigitalTwinWithResponse(String, Object, Class, CreateOrReplaceDigitalTwinOptions, Context)</xref> and <xref uid="com.azure.digitaltwins.core.DigitalTwinsAsyncClient.createOrReplaceDigitalTwinWithResponse*" data-throw-if-not-resolved="false">com.azure.digitaltwins.core.DigitalTwinsAsyncClient#createOrReplaceDigitalTwinWithResponse(String, Object, Class, CreateOrReplaceDigitalTwinOptions)</xref>
  syntax:
    content: public final class CreateOrReplaceDigitalTwinOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions()
  id: CreateOrReplaceDigitalTwinOptions()
  artifact: com.azure:azure-digitaltwins-core:1.0.0
  parent: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions
  langs:
  - java
  name: CreateOrReplaceDigitalTwinOptions()
  nameWithType: CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions()
  fullName: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions()
  overload: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions*
  type: Constructor
  package: com.azure.digitaltwins.core.models
  syntax:
    content: public CreateOrReplaceDigitalTwinOptions()
- uid: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.getIfNoneMatch()
  id: getIfNoneMatch()
  artifact: com.azure:azure-digitaltwins-core:1.0.0
  parent: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions
  langs:
  - java
  name: getIfNoneMatch()
  nameWithType: CreateOrReplaceDigitalTwinOptions.getIfNoneMatch()
  fullName: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.getIfNoneMatch()
  overload: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.getIfNoneMatch*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Get the ifNoneMatch property If-Non-Match header makes the request method conditional on a recipient cache or origin server either not having any current representation of the target resource. Acceptable values are null or "\*". If IfNonMatch option is null the service will replace the existing entity with the new entity. If IfNonMatch option is "\*" the service will reject the request if the entity already exists.
  syntax:
    content: public String getIfNoneMatch()
    return:
      type: java.lang.String
      description: the ifNoneMatch value.
- uid: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.setIfNoneMatch(java.lang.String)
  id: setIfNoneMatch(java.lang.String)
  artifact: com.azure:azure-digitaltwins-core:1.0.0
  parent: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions
  langs:
  - java
  name: setIfNoneMatch(String ifNoneMatch)
  nameWithType: CreateOrReplaceDigitalTwinOptions.setIfNoneMatch(String ifNoneMatch)
  fullName: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.setIfNoneMatch(String ifNoneMatch)
  overload: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.setIfNoneMatch*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Set the ifNoneMatch property. If-Non-Match header makes the request method conditional on a recipient cache or origin server either not having any current representation of the target resource. Acceptable values are null or "\*". If IfNonMatch option is null the service will replace the existing entity with the new entity. If IfNonMatch option is "\*" the service will reject the request if the entity already exists.
  syntax:
    content: public CreateOrReplaceDigitalTwinOptions setIfNoneMatch(String ifNoneMatch)
    parameters:
    - id: ifNoneMatch
      type: java.lang.String
      description: the ifNoneMatch value to set.
    return:
      type: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions
      description: the CreateOrReplaceRelationshipOptions object itself.
references:
- uid: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions*
  name: CreateOrReplaceDigitalTwinOptions
  nameWithType: CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions
  fullName: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions
  package: com.azure.digitaltwins.core.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.getIfNoneMatch*
  name: getIfNoneMatch
  nameWithType: CreateOrReplaceDigitalTwinOptions.getIfNoneMatch
  fullName: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.getIfNoneMatch
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.setIfNoneMatch*
  name: setIfNoneMatch
  nameWithType: CreateOrReplaceDigitalTwinOptions.setIfNoneMatch
  fullName: com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.setIfNoneMatch
  package: com.azure.digitaltwins.core.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
