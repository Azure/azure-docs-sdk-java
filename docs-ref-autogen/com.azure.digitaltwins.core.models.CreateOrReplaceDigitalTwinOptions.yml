### YamlMime:JavaType
uid: "com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions"
fullName: "com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions"
name: "CreateOrReplaceDigitalTwinOptions"
nameWithType: "CreateOrReplaceDigitalTwinOptions"
summary: "The optional parameters for <xref uid=\"com.azure.digitaltwins.core.DigitalTwinsClient.createOrReplaceDigitalTwinWithResponse*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.digitaltwins.core.DigitalTwinsClient#createOrReplaceDigitalTwinWithResponse(String, Object, Class, CreateOrReplaceDigitalTwinOptions, Context)\"></xref> and <xref uid=\"com.azure.digitaltwins.core.DigitalTwinsAsyncClient.createOrReplaceDigitalTwinWithResponse*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.digitaltwins.core.DigitalTwinsAsyncClient#createOrReplaceDigitalTwinWithResponse(String, Object, Class, CreateOrReplaceDigitalTwinOptions)\"></xref>"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CreateOrReplaceDigitalTwinOptions"
constructors:
- uid: "com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions()"
  fullName: "com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions()"
  name: "CreateOrReplaceDigitalTwinOptions()"
  nameWithType: "CreateOrReplaceDigitalTwinOptions.CreateOrReplaceDigitalTwinOptions()"
  syntax: "public CreateOrReplaceDigitalTwinOptions()"
methods:
- uid: "com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.getIfNoneMatch()"
  fullName: "com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.getIfNoneMatch()"
  name: "getIfNoneMatch()"
  nameWithType: "CreateOrReplaceDigitalTwinOptions.getIfNoneMatch()"
  summary: "Get the if<wbr>None<wbr>Match property If-Non-Match header makes the request method conditional on a recipient cache or origin server either not having any current representation of the target resource."
  syntax: "public String getIfNoneMatch()"
  desc: "Get the ifNoneMatch property If-Non-Match header makes the request method conditional on a recipient cache or origin server either not having any current representation of the target resource. Acceptable values are null or \"\\*\". If IfNonMatch option is null the service will replace the existing entity with the new entity. If IfNonMatch option is \"\\*\" the service will reject the request if the entity already exists."
  returns:
    description: "the ifNoneMatch value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.setIfNoneMatch(java.lang.String)"
  fullName: "com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions.setIfNoneMatch(String ifNoneMatch)"
  name: "setIfNoneMatch(String ifNoneMatch)"
  nameWithType: "CreateOrReplaceDigitalTwinOptions.setIfNoneMatch(String ifNoneMatch)"
  summary: "Set the if<wbr>None<wbr>Match property."
  parameters:
  - description: "the ifNoneMatch value to set."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateOrReplaceDigitalTwinOptions setIfNoneMatch(String ifNoneMatch)"
  desc: "Set the ifNoneMatch property. If-Non-Match header makes the request method conditional on a recipient cache or origin server either not having any current representation of the target resource. Acceptable values are null or \"\\*\". If IfNonMatch option is null the service will replace the existing entity with the new entity. If IfNonMatch option is \"\\*\" the service will reject the request if the entity already exists."
  returns:
    description: "the CreateOrReplaceRelationshipOptions object itself."
    type: "<xref href=\"com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions?alt=com.azure.digitaltwins.core.models.CreateOrReplaceDigitalTwinOptions&text=CreateOrReplaceDigitalTwinOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The optional parameters for <xref uid=\"com.azure.digitaltwins.core.DigitalTwinsClient.createOrReplaceDigitalTwinWithResponse*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.digitaltwins.core.DigitalTwinsClient#createOrReplaceDigitalTwinWithResponse(String, Object, Class, CreateOrReplaceDigitalTwinOptions, Context)\"></xref> and <xref uid=\"com.azure.digitaltwins.core.DigitalTwinsAsyncClient.createOrReplaceDigitalTwinWithResponse*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.digitaltwins.core.DigitalTwinsAsyncClient#createOrReplaceDigitalTwinWithResponse(String, Object, Class, CreateOrReplaceDigitalTwinOptions)\"></xref>"
metadata: {}
package: "com.azure.digitaltwins.core.models"
artifact: com.azure:azure-digitaltwins-core:1.3.1
