### YamlMime:JavaMember
uid: "com.azure.core.util.logging.ClientLogger.ClientLogger*"
fullName: "com.azure.core.util.logging.ClientLogger.ClientLogger"
name: "ClientLogger"
nameWithType: "ClientLogger.ClientLogger"
members:
- uid: "com.azure.core.util.logging.ClientLogger.ClientLogger(java.lang.Class<?>)"
  fullName: "com.azure.core.util.logging.ClientLogger.ClientLogger(Class<?> clazz)"
  name: "ClientLogger(Class<?> clazz)"
  nameWithType: "ClientLogger.ClientLogger(Class<?> clazz)"
  summary: "Retrieves a logger for the passed class using the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LoggerFactory\"></xref>."
  parameters:
  - description: "Class creating the logger."
    name: "clazz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public ClientLogger(Class<?> clazz)"
- uid: "com.azure.core.util.logging.ClientLogger.ClientLogger(java.lang.Class<?>,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.core.util.logging.ClientLogger.ClientLogger(Class<?> clazz, Map<String,Object> context)"
  name: "ClientLogger(Class<?> clazz, Map<String,Object> context)"
  nameWithType: "ClientLogger.ClientLogger(Class<?> clazz, Map<String,Object> context)"
  summary: "Retrieves a logger for the passed class using the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LoggerFactory\"></xref>."
  parameters:
  - description: "Class creating the logger."
    name: "clazz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "Context to be populated on every log record written with this logger.\n                Objects are serialized with <code>toString()</code> method."
    name: "context"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ClientLogger(Class<?> clazz, Map<String,Object> context)"
- uid: "com.azure.core.util.logging.ClientLogger.ClientLogger(java.lang.String)"
  fullName: "com.azure.core.util.logging.ClientLogger.ClientLogger(String className)"
  name: "ClientLogger(String className)"
  nameWithType: "ClientLogger.ClientLogger(String className)"
  summary: "Retrieves a logger for the passed class name using the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LoggerFactory\"></xref>."
  parameters:
  - description: "Class name creating the logger."
    name: "className"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ClientLogger(String className)"
- uid: "com.azure.core.util.logging.ClientLogger.ClientLogger(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.core.util.logging.ClientLogger.ClientLogger(String className, Map<String,Object> context)"
  name: "ClientLogger(String className, Map<String,Object> context)"
  nameWithType: "ClientLogger.ClientLogger(String className, Map<String,Object> context)"
  summary: "Retrieves a logger for the passed class name using the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LoggerFactory\"></xref> with context that will be populated on all log records produced with this logger.\n\n```java\nMap<String, Object> context = new HashMap<>();\n context.put(\"connectionId\", \"95a47cf\");\n\n ClientLogger loggerWithContext = new ClientLogger(ClientLoggerJavaDocCodeSnippets.class, context);\n loggerWithContext.info(\"A formattable message. Hello, {}\", name);\n```"
  parameters:
  - description: "Class name creating the logger."
    name: "className"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Context to be populated on every log record written with this logger.\n                Objects are serialized with <code>toString()</code> method."
    name: "context"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ClientLogger(String className, Map<String,Object> context)"
type: "constructor"
metadata: {}
package: "com.azure.core.util.logging"
artifact: com.azure:azure-core:1.25.0
