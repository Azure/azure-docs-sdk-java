### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation"
fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>"
name: "CosmosEntityInformation<T,ID>"
nameWithType: "CosmosEntityInformation<T,ID>"
summary: "Class to describe cosmos<wbr>Db entity"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.core.support.AbstractEntityInformation?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.springframework.data.repository.core.support.AbstractEntityInformation?alt=org.springframework.data.repository.core.support.AbstractEntityInformation&text=AbstractEntityInformation\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.repository.core.support.AbstractEntityInformation.getJavaType()?alt=org.springframework.data.repository.core.support.AbstractEntityInformation.getJavaType&text=getJavaType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.AbstractEntityInformation.isNew(T)?alt=org.springframework.data.repository.core.support.AbstractEntityInformation.isNew&text=isNew\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **CosmosEntityInformation<T,ID>**</br> extends <xref href=\"org.springframework.data.repository.core.support.AbstractEntityInformation?alt=org.springframework.data.repository.core.support.AbstractEntityInformation&text=AbstractEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.CosmosEntityInformation(java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.CosmosEntityInformation(Class<T> domainType)"
  name: "CosmosEntityInformation(Class<T> domainType)"
  nameWithType: "CosmosEntityInformation<T,ID>.CosmosEntityInformation(Class<T> domainType)"
  summary: "Initialization"
  parameters:
  - description: "to specify id field"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosEntityInformation(Class<T> domainType)"
  desc: "Initialization"
methods:
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getContainerName()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getContainerName()"
  name: "getContainerName()"
  nameWithType: "CosmosEntityInformation<T,ID>.getContainerName()"
  summary: "Get container name"
  syntax: "public String getContainerName()"
  desc: "Get container name"
  returns:
    description: "container name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getId(T)"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getId(T entity)"
  name: "getId(T entity)"
  nameWithType: "CosmosEntityInformation<T,ID>.getId(T entity)"
  summary: "Get the field represented by the supplied id field on the specified entity."
  parameters:
  - description: "the target object from which to get the field"
    name: "entity"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ID getId(T entity)"
  desc: "Get the field represented by the supplied id field on the specified entity."
  returns:
    description: "the id's current value"
    type: "<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdField()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdField()"
  name: "getIdField()"
  nameWithType: "CosmosEntityInformation<T,ID>.getIdField()"
  summary: "Get id field"
  syntax: "public Field getIdField()"
  desc: "Get id field"
  returns:
    description: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Field.html\">Field</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdFieldName()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdFieldName()"
  name: "getIdFieldName()"
  nameWithType: "CosmosEntityInformation<T,ID>.getIdFieldName()"
  summary: "Get id field name"
  syntax: "public String getIdFieldName()"
  desc: "Get id field name"
  returns:
    description: "string"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdType()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdType()"
  name: "getIdType()"
  nameWithType: "CosmosEntityInformation<T,ID>.getIdType()"
  summary: "Get id type"
  syntax: "public Class<ID> getIdType()"
  desc: "Get id type"
  returns:
    description: "class of id type"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIndexingPolicy()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIndexingPolicy()"
  name: "getIndexingPolicy()"
  nameWithType: "CosmosEntityInformation<T,ID>.getIndexingPolicy()"
  summary: "Get indexing policy"
  syntax: "public IndexingPolicy getIndexingPolicy()"
  desc: "Get indexing policy"
  returns:
    description: "IndexingPolicy"
    type: "<xref href=\"com.azure.cosmos.models.IndexingPolicy?alt=com.azure.cosmos.models.IndexingPolicy&text=IndexingPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getInstance(java.lang.Class<?>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getInstance(Class<?> domainClass)"
  name: "getInstance(Class<?> domainClass)"
  nameWithType: "CosmosEntityInformation<T,ID>.getInstance(Class<?> domainClass)"
  summary: "Static Factory"
  modifiers:
  - "static"
  parameters:
  - description: "to specify id field"
    name: "domainClass"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  syntax: "public static CosmosEntityInformation<?,?> getInstance(Class<?> domainClass)"
  desc: "Static Factory"
  returns:
    description: "new CosmosEntityInformation"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;?,?&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyFieldName()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getPartitionKeyFieldName()"
  name: "getPartitionKeyFieldName()"
  nameWithType: "CosmosEntityInformation<T,ID>.getPartitionKeyFieldName()"
  summary: "Return the partition key field name."
  syntax: "public String getPartitionKeyFieldName()"
  desc: "Return the partition key field name."
  returns:
    description: "the partition key field name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyFieldValue(T)"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getPartitionKeyFieldValue(T entity)"
  name: "getPartitionKeyFieldValue(T entity)"
  nameWithType: "CosmosEntityInformation<T,ID>.getPartitionKeyFieldValue(T entity)"
  summary: "Get the field value represented by the supplied partition<wbr>Key<wbr>Field object on the specified entity object."
  parameters:
  - description: "the target object from which to get the field"
    name: "entity"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Object getPartitionKeyFieldValue(T entity)"
  desc: "Get the field value represented by the supplied partitionKeyField object on the specified entity object."
  returns:
    description: "partition key field"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyPath()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getPartitionKeyPath()"
  name: "getPartitionKeyPath()"
  nameWithType: "CosmosEntityInformation<T,ID>.getPartitionKeyPath()"
  summary: "Get the computed partition key path for container"
  syntax: "public String getPartitionKeyPath()"
  desc: "Get the computed partition key path for container"
  returns:
    description: "partition key path"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getRequestUnit()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getRequestUnit()"
  name: "getRequestUnit()"
  nameWithType: "CosmosEntityInformation<T,ID>.getRequestUnit()"
  summary: "Get request unit value"
  syntax: "public Integer getRequestUnit()"
  desc: "Get request unit value"
  returns:
    description: "request unit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getTimeToLive()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getTimeToLive()"
  name: "getTimeToLive()"
  nameWithType: "CosmosEntityInformation<T,ID>.getTimeToLive()"
  summary: "Get time<wbr>ToLive value"
  syntax: "public Integer getTimeToLive()"
  desc: "Get timeToLive value"
  returns:
    description: "timeToLive"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getTransientFields()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getTransientFields()"
  name: "getTransientFields()"
  nameWithType: "CosmosEntityInformation<T,ID>.getTransientFields()"
  summary: "Get transient field list"
  syntax: "public List<String> getTransientFields()"
  desc: "Get transient field list"
  returns:
    description: "fields with @Transient annotation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getUniqueKeyPolicy()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getUniqueKeyPolicy()"
  name: "getUniqueKeyPolicy()"
  nameWithType: "CosmosEntityInformation<T,ID>.getUniqueKeyPolicy()"
  summary: "Gets the Unique<wbr>Key<wbr>Policy"
  syntax: "public UniqueKeyPolicy getUniqueKeyPolicy()"
  desc: "Gets the UniqueKeyPolicy"
  returns:
    description: "UniqueKeyPolicy"
    type: "<xref href=\"com.azure.cosmos.models.UniqueKeyPolicy?alt=com.azure.cosmos.models.UniqueKeyPolicy&text=UniqueKeyPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldName()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getVersionFieldName()"
  name: "getVersionFieldName()"
  nameWithType: "CosmosEntityInformation<T,ID>.getVersionFieldName()"
  summary: "Get name of field annotated with @Version if any"
  syntax: "public String getVersionFieldName()"
  desc: "Get name of field annotated with @Version if any"
  returns:
    description: "String"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldValue(java.lang.Object)"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getVersionFieldValue(Object entity)"
  name: "getVersionFieldValue(Object entity)"
  nameWithType: "CosmosEntityInformation<T,ID>.getVersionFieldValue(Object entity)"
  summary: "Get the value of the field marked as the version field"
  parameters:
  - description: "the object to get the value from"
    name: "entity"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public String getVersionFieldValue(Object entity)"
  desc: "Get the value of the field marked as the version field"
  returns:
    description: "the value of the version field"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isAutoCreateContainer()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isAutoCreateContainer()"
  name: "isAutoCreateContainer()"
  nameWithType: "CosmosEntityInformation<T,ID>.isAutoCreateContainer()"
  summary: "Check if auto creating container is allowed"
  syntax: "public boolean isAutoCreateContainer()"
  desc: "Check if auto creating container is allowed"
  returns:
    description: "boolean"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isAutoScale()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isAutoScale()"
  name: "isAutoScale()"
  nameWithType: "CosmosEntityInformation<T,ID>.isAutoScale()"
  summary: "Check if container should use autoscale for resource units"
  syntax: "public boolean isAutoScale()"
  desc: "Check if container should use autoscale for resource units"
  returns:
    description: "boolean"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isIndexingPolicySpecified()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isIndexingPolicySpecified()"
  name: "isIndexingPolicySpecified()"
  nameWithType: "CosmosEntityInformation<T,ID>.isIndexingPolicySpecified()"
  summary: "Return whether indexing policy is specified."
  syntax: "public boolean isIndexingPolicySpecified()"
  desc: "Return whether indexing policy is specified."
  returns:
    description: "whether indexing policy is specified"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isNew(T)"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isNew(T entity)"
  name: "isNew(T entity)"
  nameWithType: "CosmosEntityInformation<T,ID>.isNew(T entity)"
  overridden: "org.springframework.data.repository.core.support.AbstractEntityInformation.isNew(T)"
  parameters:
  - name: "entity"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean isNew(T entity)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isOverwriteIndexingPolicy()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isOverwriteIndexingPolicy()"
  name: "isOverwriteIndexingPolicy()"
  nameWithType: "CosmosEntityInformation<T,ID>.isOverwriteIndexingPolicy()"
  summary: "Check if overwrite indexing policy is enabled"
  syntax: "public boolean isOverwriteIndexingPolicy()"
  desc: "Check if overwrite indexing policy is enabled"
  returns:
    description: "boolean"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isVersioned()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isVersioned()"
  name: "isVersioned()"
  nameWithType: "CosmosEntityInformation<T,ID>.isVersioned()"
  summary: "Check if is versioned"
  syntax: "public boolean isVersioned()"
  desc: "Check if is versioned"
  returns:
    description: "boolean"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.shouldGenerateId()"
  fullName: "com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.shouldGenerateId()"
  name: "shouldGenerateId()"
  nameWithType: "CosmosEntityInformation<T,ID>.shouldGenerateId()"
  summary: "Should generate Id field value"
  syntax: "public boolean shouldGenerateId()"
  desc: "Should generate Id field value"
  returns:
    description: "boolean"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
typeParameters:
- description: "domain type."
  name: "T"
- description: "id type."
  name: "ID"
desc: "Class to describe cosmosDb entity"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:5.20.0
