### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.rest.PagedIterable
  id: PagedIterable
  artifact: com.azure:azure-core:1.7.0
  parent: com.azure.core.http.rest
  children:
  - com.azure.core.http.rest.PagedIterable.<S>mapPage(java.util.function.Function<T,S>)
  - com.azure.core.http.rest.PagedIterable.PagedIterable(com.azure.core.http.rest.PagedFlux<T>)
  langs:
  - java
  name: PagedIterable<T>
  nameWithType: PagedIterable<T>
  fullName: com.azure.core.http.rest.PagedIterable<T>
  type: Class
  package: com.azure.core.http.rest
  summary: >-
    This class provides utility to iterate over <xref uid="com.azure.core.http.rest.PagedResponse" data-throw-if-not-resolved="false">PagedResponse</xref> using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> and <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> interfaces.


    **Code sample using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> by page**


    ```java

    // process the streamByPage
     pagedIterableResponse.streamByPage().forEach(resp -> {
         System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
             resp.getRequest().getUrl(), resp.getStatusCode());
         resp.getItems().forEach(value -> {
             System.out.printf("Response value is %d %n", value);
         });
     });
    ```


    **Code sample using <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> by page**


    ```java

    // process the iterableByPage
     pagedIterableResponse.iterableByPage().forEach(resp -> {
         System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
             resp.getRequest().getUrl(), resp.getStatusCode());
         resp.getItems().forEach(value -> {
             System.out.printf("Response value is %d %n", value);
         });
     });
    ```


    **Code sample using <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> by page and while loop**


    ```java

    // iterate over each page
     Iterator<PagedResponse<Integer>> ite = pagedIterableResponse.iterableByPage().iterator();
     while (ite.hasNext()) {
         PagedResponse<Integer> resp = ite.next();
         System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
             resp.getRequest().getUrl(), resp.getStatusCode());
         resp.getItems().forEach(value -> {
             System.out.printf("Response value is %d %n", value);
         });
     }
    ```
  syntax:
    content: public class PagedIterable<T> extends PagedIterableBase<T,PagedResponse<T>>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - com.azure.core.util.IterableStream
  - com.azure.core.util.paging.ContinuablePagedIterable
  - com.azure.core.http.rest.PagedIterableBase
  inheritedMembers:
  - com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
  - com.azure.core.util.IterableStream.iterator()
  - com.azure.core.util.IterableStream.stream()
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.http.rest.PagedIterable.<S>mapPage(java.util.function.Function<T,S>)
  id: <S>mapPage(java.util.function.Function<T,S>)
  artifact: com.azure:azure-core:1.7.0
  parent: com.azure.core.http.rest.PagedIterable
  langs:
  - java
  name: <S>mapPage(Function<T,S> mapper)
  nameWithType: PagedIterable<T>.<S>mapPage(Function<T,S> mapper)
  fullName: com.azure.core.http.rest.PagedIterable<T>.<S>mapPage(Function<T,S> mapper)
  overload: com.azure.core.http.rest.PagedIterable.mapPage*
  type: Method
  package: com.azure.core.http.rest
  summary: Maps this PagedIterable instance of T to a PagedIterable instance of type S as per the provided mapper function.
  syntax:
    content: public PagedIterable<S> <S>mapPage(Function<T,S> mapper)
    parameters:
    - id: mapper
      type: java.util.function.Function<T,S>
      description: The mapper function to convert from type T to type S.
    return:
      type: com.azure.core.http.rest.PagedIterable<S>
      description: A PagedIterable of type S.
- uid: com.azure.core.http.rest.PagedIterable.PagedIterable(com.azure.core.http.rest.PagedFlux<T>)
  id: PagedIterable(com.azure.core.http.rest.PagedFlux<T>)
  artifact: com.azure:azure-core:1.7.0
  parent: com.azure.core.http.rest.PagedIterable
  langs:
  - java
  name: PagedIterable(PagedFlux<T> pagedFlux)
  nameWithType: PagedIterable<T>.PagedIterable(PagedFlux<T> pagedFlux)
  fullName: com.azure.core.http.rest.PagedIterable<T>.PagedIterable(PagedFlux<T> pagedFlux)
  overload: com.azure.core.http.rest.PagedIterable.PagedIterable*
  type: Constructor
  package: com.azure.core.http.rest
  summary: Creates instance given <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref>.
  syntax:
    content: public PagedIterable(PagedFlux<T> pagedFlux)
    parameters:
    - id: pagedFlux
      type: com.azure.core.http.rest.PagedFlux<T>
      description: to use as iterable
references:
- uid: com.azure.core.http.rest.PagedFlux<T>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.rest.PagedIterable.PagedIterable*
  name: PagedIterable
  nameWithType: PagedIterable<T>.PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable<T>.PagedIterable
  package: com.azure.core.http.rest
- uid: java.util.function.Function<T,S>
  spec.java:
  - uid: java.util.function.Function
    name: Function
    fullName: java.util.function.Function
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: S
    name: S
    fullName: S
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.rest.PagedIterable<S>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: S
    name: S
    fullName: S
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.rest.PagedIterable.mapPage*
  name: <S>mapPage
  nameWithType: PagedIterable<T>.<S>mapPage
  fullName: com.azure.core.http.rest.PagedIterable<T>.<S>mapPage
  package: com.azure.core.http.rest
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: com.azure.core.http.rest.PagedIterableBase<T,com.azure.core.http.rest.PagedResponse<T>>
  name: PagedIterableBase<T,PagedResponse<T>>
  nameWithType: PagedIterableBase<T,PagedResponse<T>>
  fullName: com.azure.core.http.rest.PagedIterableBase<T,com.azure.core.http.rest.PagedResponse<T>>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
  name: ContinuablePagedIterable.streamByPage(C)
  nameWithType: ContinuablePagedIterable.streamByPage(C)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
  name: ContinuablePagedIterable.iterableByPage(C,int)
  nameWithType: ContinuablePagedIterable.iterableByPage(C,int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
  name: ContinuablePagedIterable.streamByPage(C,int)
  nameWithType: ContinuablePagedIterable.streamByPage(C,int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
  name: ContinuablePagedIterable.iterableByPage(C)
  nameWithType: ContinuablePagedIterable.iterableByPage(C)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
  name: ContinuablePagedIterable.streamByPage()
  nameWithType: ContinuablePagedIterable.streamByPage()
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.core.util.IterableStream.iterator()
  name: IterableStream.iterator()
  nameWithType: IterableStream.iterator()
  fullName: com.azure.core.util.IterableStream.iterator()
- uid: com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
  name: IterableStream.<T>of(Iterable<T>)
  nameWithType: IterableStream.<T>of(Iterable<T>)
  fullName: com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
  name: ContinuablePagedIterable.streamByPage(int)
  nameWithType: ContinuablePagedIterable.streamByPage(int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
  name: ContinuablePagedIterable.iterableByPage(int)
  nameWithType: ContinuablePagedIterable.iterableByPage(int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.util.IterableStream.stream()
  name: IterableStream.stream()
  nameWithType: IterableStream.stream()
  fullName: com.azure.core.util.IterableStream.stream()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
  name: ContinuablePagedIterable.iterableByPage()
  nameWithType: ContinuablePagedIterable.iterableByPage()
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: T,S
  name: T,S
  nameWithType: T,S
  fullName: T,S
- uid: java.util.function.Function
  name: Function
  nameWithType: Function
  fullName: java.util.function.Function
- uid: S
  name: S
  nameWithType: S
  fullName: S
- uid: T,com.azure.core.http.rest.PagedResponse
  name: T,PagedResponse
  nameWithType: T,PagedResponse
  fullName: T,com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedIterableBase
  name: PagedIterableBase
  nameWithType: PagedIterableBase
  fullName: com.azure.core.http.rest.PagedIterableBase
- uid: com.azure.core.util.IterableStream.
  name: IterableStream.
  nameWithType: IterableStream.
  fullName: com.azure.core.util.IterableStream.
- uid: T>of(java.lang.Iterable
  name: T>of(Iterable
  nameWithType: T>of(Iterable
  fullName: T>of(java.lang.Iterable
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
