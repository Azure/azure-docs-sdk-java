### YamlMime:JavaMember
uid: "com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*"
fullName: "com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet"
name: "fromExistingSubnet"
nameWithType: "HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet"
members:
- uid: "com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(com.microsoft.azure.management.network.Network,java.lang.String)"
  fullName: "com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)"
  name: "fromExistingSubnet(Network network, String subnetName)"
  nameWithType: "HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)"
  summary: "Specifies an existing private subnet to receive network traffic from.\n\nIf this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer."
  parameters:
  - description: "an existing network"
    name: "network"
    type: "<xref href=\"com.microsoft.azure.management.network.Network?alt=com.microsoft.azure.management.network.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of an existing subnet within the specified network"
    name: "subnetName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ReturnT fromExistingSubnet(Network network, String subnetName)"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"ReturnT?alt=ReturnT&text=ReturnT\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(com.microsoft.azure.management.network.Subnet)"
  fullName: "com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)"
  name: "fromExistingSubnet(Subnet subnet)"
  nameWithType: "HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)"
  summary: "Specifies an existing private subnet to receive network traffic from.\n\nIf this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer."
  parameters:
  - description: "an existing subnet"
    name: "subnet"
    type: "<xref href=\"com.microsoft.azure.management.network.Subnet?alt=com.microsoft.azure.management.network.Subnet&text=Subnet\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ReturnT fromExistingSubnet(Subnet subnet)"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"ReturnT?alt=ReturnT&text=ReturnT\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)"
  name: "fromExistingSubnet(String networkResourceId, String subnetName)"
  nameWithType: "HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)"
  summary: "Specifies an existing private subnet to receive network traffic from.\n\nIf this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer."
  parameters:
  - description: "the resource ID of an existing network"
    name: "networkResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of an existing subnet within the specified network"
    name: "subnetName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ReturnT fromExistingSubnet(String networkResourceId, String subnetName)"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"ReturnT?alt=ReturnT&text=ReturnT\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.network.model"
artifact: com.microsoft.azure:azure-mgmt-network:1.38.1
