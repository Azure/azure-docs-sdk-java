### YamlMime:JavaMember
uid: "com.azure.security.confidentialledger.ConfidentialLedgerClient.listLedgerEntries*"
fullName: "com.azure.security.confidentialledger.ConfidentialLedgerClient.listLedgerEntries"
name: "listLedgerEntries"
nameWithType: "ConfidentialLedgerClient.listLedgerEntries"
members:
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerClient.listLedgerEntries(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerClient.listLedgerEntries(RequestOptions requestOptions)"
  name: "listLedgerEntries(RequestOptions requestOptions)"
  nameWithType: "ConfidentialLedgerClient.listLedgerEntries(RequestOptions requestOptions)"
  summary: "A collection id may optionally be specified. Only entries in the specified (or default) collection will be returned.\n\n**Query Parameters**\n\n    | ----------------- | ------ | -------- | -------------------------------------------- |\n    | Name              | Type   | Required | Description                                  |\n    | collectionId      | String | No       | The collection id.                           |\n    | fromTransactionId | String | No       | Specify the first transaction ID in a range. |\n    | toTransactionId   | String | No       | Specify the last transaction ID in a range.  |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     state: String(Loading/Ready) (Required)\n     nextLink: String (Optional)\n     entries (Required): [\n          (Required){\n             contents: String (Required)\n             collectionId: String (Optional)\n             transactionId: String (Optional)\n         }\n     ]\n }\n```"
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listLedgerEntries(RequestOptions requestOptions)"
  returns:
    description: "paginated ledger entries returned in response to a query as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.confidentialledger"
artifact: com.azure:azure-security-confidentialledger:1.0.0
