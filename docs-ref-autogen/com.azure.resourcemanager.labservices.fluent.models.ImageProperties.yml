### YamlMime:JavaType
uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties"
fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties"
name: "ImageProperties"
nameWithType: "ImageProperties"
summary: "Properties of an image resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties?alt=com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties&text=ImageUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.enabledState()?alt=com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.enabledState&text=enabledState\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.validate()?alt=com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.withEnabledState(com.azure.resourcemanager.labservices.models.EnableState)?alt=com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.withEnabledState&text=withEnabledState\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **ImageProperties**</br> extends <xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties?alt=com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties&text=ImageUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.ImageProperties()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.ImageProperties()"
  name: "ImageProperties()"
  nameWithType: "ImageProperties.ImageProperties()"
  summary: "Creates an instance of Image<wbr>Properties class."
  syntax: "public ImageProperties()"
  desc: "Creates an instance of ImageProperties class."
methods:
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.author()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.author()"
  name: "author()"
  nameWithType: "ImageProperties.author()"
  summary: "Get the author property: The image author."
  syntax: "public String author()"
  desc: "Get the author property: The image author."
  returns:
    description: "the author value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.availableRegions()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.availableRegions()"
  name: "availableRegions()"
  nameWithType: "ImageProperties.availableRegions()"
  summary: "Get the available<wbr>Regions property: The available regions of the image in the shared gallery."
  syntax: "public List<String> availableRegions()"
  desc: "Get the availableRegions property: The available regions of the image in the shared gallery."
  returns:
    description: "the availableRegions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.description()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.description()"
  name: "description()"
  nameWithType: "ImageProperties.description()"
  summary: "Get the description property: A description of the image."
  syntax: "public String description()"
  desc: "Get the description property: A description of the image."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.displayName()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.displayName()"
  name: "displayName()"
  nameWithType: "ImageProperties.displayName()"
  summary: "Get the display<wbr>Name property: The image display name."
  syntax: "public String displayName()"
  desc: "Get the displayName property: The image display name."
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ImageProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Image<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImageProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the ImageProperties."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of ImageProperties from the JsonReader."
  returns:
    description: "An instance of ImageProperties if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageProperties?alt=com.azure.resourcemanager.labservices.fluent.models.ImageProperties&text=ImageProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.iconUrl()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.iconUrl()"
  name: "iconUrl()"
  nameWithType: "ImageProperties.iconUrl()"
  summary: "Get the icon<wbr>Url property: URL of the image icon."
  syntax: "public String iconUrl()"
  desc: "Get the iconUrl property: URL of the image icon."
  returns:
    description: "the iconUrl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.offer()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.offer()"
  name: "offer()"
  nameWithType: "ImageProperties.offer()"
  summary: "Get the offer property: The ID of an offer associated with the image."
  syntax: "public String offer()"
  desc: "Get the offer property: The ID of an offer associated with the image."
  returns:
    description: "the offer value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.osState()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.osState()"
  name: "osState()"
  nameWithType: "ImageProperties.osState()"
  summary: "Get the os<wbr>State property: The OS State of the image."
  syntax: "public OsState osState()"
  desc: "Get the osState property: The OS State of the image."
  returns:
    description: "the osState value."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.OsState?alt=com.azure.resourcemanager.labservices.models.OsState&text=OsState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.osType()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.osType()"
  name: "osType()"
  nameWithType: "ImageProperties.osType()"
  summary: "Get the os<wbr>Type property: The OS Type of the image."
  syntax: "public OsType osType()"
  desc: "Get the osType property: The OS Type of the image."
  returns:
    description: "the osType value."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.OsType?alt=com.azure.resourcemanager.labservices.models.OsType&text=OsType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.plan()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.plan()"
  name: "plan()"
  nameWithType: "ImageProperties.plan()"
  summary: "Get the plan property: The ID of marketplace plan associated with the image (optional)."
  syntax: "public String plan()"
  desc: "Get the plan property: The ID of marketplace plan associated with the image (optional)."
  returns:
    description: "the plan value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ImageProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Current provisioning state of the image."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Current provisioning state of the image."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.ProvisioningState?alt=com.azure.resourcemanager.labservices.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.publisher()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.publisher()"
  name: "publisher()"
  nameWithType: "ImageProperties.publisher()"
  summary: "Get the publisher property: The ID of the publisher of the image."
  syntax: "public String publisher()"
  desc: "Get the publisher property: The ID of the publisher of the image."
  returns:
    description: "the publisher value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.sharedGalleryId()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.sharedGalleryId()"
  name: "sharedGalleryId()"
  nameWithType: "ImageProperties.sharedGalleryId()"
  summary: "Get the shared<wbr>Gallery<wbr>Id property: The ID for the image in the shared gallery."
  syntax: "public String sharedGalleryId()"
  desc: "Get the sharedGalleryId property: The ID for the image in the shared gallery."
  returns:
    description: "the sharedGalleryId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.sku()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.sku()"
  name: "sku()"
  nameWithType: "ImageProperties.sku()"
  summary: "Get the sku property: The image SKU."
  syntax: "public String sku()"
  desc: "Get the sku property: The image SKU."
  returns:
    description: "the sku value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.termsStatus()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.termsStatus()"
  name: "termsStatus()"
  nameWithType: "ImageProperties.termsStatus()"
  summary: "Get the terms<wbr>Status property: The status of image terms of use (enabled = accepted, disabled = not accepted)."
  syntax: "public EnableState termsStatus()"
  desc: "Get the termsStatus property: The status of image terms of use (enabled = accepted, disabled = not accepted)."
  returns:
    description: "the termsStatus value."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.EnableState?alt=com.azure.resourcemanager.labservices.models.EnableState&text=EnableState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ImageProperties.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.validate()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.validate()"
  name: "validate()"
  nameWithType: "ImageProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.version()"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.version()"
  name: "version()"
  nameWithType: "ImageProperties.version()"
  summary: "Get the version property: The image version."
  syntax: "public String version()"
  desc: "Get the version property: The image version."
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.withAvailableRegions(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.withAvailableRegions(List<String> availableRegions)"
  name: "withAvailableRegions(List<String> availableRegions)"
  nameWithType: "ImageProperties.withAvailableRegions(List<String> availableRegions)"
  summary: "Set the available<wbr>Regions property: The available regions of the image in the shared gallery."
  parameters:
  - description: "the availableRegions value to set."
    name: "availableRegions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ImageProperties withAvailableRegions(List<String> availableRegions)"
  desc: "Set the availableRegions property: The available regions of the image in the shared gallery."
  returns:
    description: "the ImageProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageProperties?alt=com.azure.resourcemanager.labservices.fluent.models.ImageProperties&text=ImageProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.withEnabledState(com.azure.resourcemanager.labservices.models.EnableState)"
  fullName: "com.azure.resourcemanager.labservices.fluent.models.ImageProperties.withEnabledState(EnableState enabledState)"
  name: "withEnabledState(EnableState enabledState)"
  nameWithType: "ImageProperties.withEnabledState(EnableState enabledState)"
  summary: "Set the enabled<wbr>State property: Is the image enabled."
  overridden: "com.azure.resourcemanager.labservices.fluent.models.ImageUpdateProperties.withEnabledState(com.azure.resourcemanager.labservices.models.EnableState)"
  parameters:
  - name: "enabledState"
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.EnableState?alt=com.azure.resourcemanager.labservices.models.EnableState&text=EnableState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageProperties withEnabledState(EnableState enabledState)"
  desc: "Set the enabledState property: Is the image enabled."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.labservices.fluent.models.ImageProperties?alt=com.azure.resourcemanager.labservices.fluent.models.ImageProperties&text=ImageProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of an image resource."
metadata: {}
package: "com.azure.resourcemanager.labservices.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-labservices:1.0.0
