### YamlMime:JavaType
uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore"
fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore"
name: "OneLakeDatastore"
nameWithType: "OneLakeDatastore"
summary: "One<wbr>Lake (Trident) datastore configuration."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.machinelearning.models.ResourceBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties&text=DatastoreProperties\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.credentials()?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.credentials&text=credentials\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.datastoreType()?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.datastoreType&text=datastoreType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.isDefault()?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.isDefault&text=isDefault\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.validate()?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withCredentials(com.azure.resourcemanager.machinelearning.models.DatastoreCredentials)?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withCredentials&text=withCredentials\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withDescription(java.lang.String)?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withDescription&text=withDescription\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withProperties(java.util.Map<java.lang.String,java.lang.String>)?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withProperties&text=withProperties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withTags(java.util.Map<java.lang.String,java.lang.String>)?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withTags&text=withTags\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ResourceBase?alt=com.azure.resourcemanager.machinelearning.models.ResourceBase&text=ResourceBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.ResourceBase.description()?alt=com.azure.resourcemanager.machinelearning.models.ResourceBase.description&text=description\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.ResourceBase.properties()?alt=com.azure.resourcemanager.machinelearning.models.ResourceBase.properties&text=properties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.machinelearning.models.ResourceBase.tags()?alt=com.azure.resourcemanager.machinelearning.models.ResourceBase.tags&text=tags\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **OneLakeDatastore**</br> extends <xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreProperties?alt=com.azure.resourcemanager.machinelearning.models.DatastoreProperties&text=DatastoreProperties\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.OneLakeDatastore()"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.OneLakeDatastore()"
  name: "OneLakeDatastore()"
  nameWithType: "OneLakeDatastore.OneLakeDatastore()"
  summary: "Creates an instance of One<wbr>Lake<wbr>Datastore class."
  syntax: "public OneLakeDatastore()"
  desc: "Creates an instance of OneLakeDatastore class."
methods:
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.artifact()"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.artifact()"
  name: "artifact()"
  nameWithType: "OneLakeDatastore.artifact()"
  summary: "Get the artifact property: \\[Required\\] One<wbr>Lake artifact backing the datastore."
  syntax: "public OneLakeArtifact artifact()"
  desc: "Get the artifact property: \\[Required\\] OneLake artifact backing the datastore."
  returns:
    description: "the artifact value."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeArtifact?alt=com.azure.resourcemanager.machinelearning.models.OneLakeArtifact&text=OneLakeArtifact\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.datastoreType()"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.datastoreType()"
  name: "datastoreType()"
  nameWithType: "OneLakeDatastore.datastoreType()"
  summary: "Get the datastore<wbr>Type property: \\[Required\\] Storage type backing the datastore."
  overridden: "com.azure.resourcemanager.machinelearning.models.DatastoreProperties.datastoreType()"
  syntax: "public DatastoreType datastoreType()"
  desc: "Get the datastoreType property: \\[Required\\] Storage type backing the datastore."
  returns:
    description: "the datastoreType value."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreType?alt=com.azure.resourcemanager.machinelearning.models.DatastoreType&text=DatastoreType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.endpoint()"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.endpoint()"
  name: "endpoint()"
  nameWithType: "OneLakeDatastore.endpoint()"
  summary: "Get the endpoint property: One<wbr>Lake endpoint to use for the datastore."
  syntax: "public String endpoint()"
  desc: "Get the endpoint property: OneLake endpoint to use for the datastore."
  returns:
    description: "the endpoint value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "OneLakeDatastore.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of One<wbr>Lake<wbr>Datastore from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static OneLakeDatastore fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of OneLakeDatastore from the JsonReader."
  returns:
    description: "An instance of OneLakeDatastore if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.isDefault()"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.isDefault()"
  name: "isDefault()"
  nameWithType: "OneLakeDatastore.isDefault()"
  summary: "Get the is<wbr>Default property: Readonly property to indicate if datastore is the workspace default datastore."
  overridden: "com.azure.resourcemanager.machinelearning.models.DatastoreProperties.isDefault()"
  syntax: "public Boolean isDefault()"
  desc: "Get the isDefault property: Readonly property to indicate if datastore is the workspace default datastore."
  returns:
    description: "the isDefault value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.oneLakeWorkspaceName()"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.oneLakeWorkspaceName()"
  name: "oneLakeWorkspaceName()"
  nameWithType: "OneLakeDatastore.oneLakeWorkspaceName()"
  summary: "Get the one<wbr>Lake<wbr>Workspace<wbr>Name property: \\[Required\\] One<wbr>Lake workspace name."
  syntax: "public String oneLakeWorkspaceName()"
  desc: "Get the oneLakeWorkspaceName property: \\[Required\\] OneLake workspace name."
  returns:
    description: "the oneLakeWorkspaceName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.serviceDataAccessAuthIdentity()"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.serviceDataAccessAuthIdentity()"
  name: "serviceDataAccessAuthIdentity()"
  nameWithType: "OneLakeDatastore.serviceDataAccessAuthIdentity()"
  summary: "Get the service<wbr>Data<wbr>Access<wbr>Auth<wbr>Identity property: Indicates which identity to use to authenticate service data access to customer's storage."
  syntax: "public ServiceDataAccessAuthIdentity serviceDataAccessAuthIdentity()"
  desc: "Get the serviceDataAccessAuthIdentity property: Indicates which identity to use to authenticate service data access to customer's storage."
  returns:
    description: "the serviceDataAccessAuthIdentity value."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ServiceDataAccessAuthIdentity?alt=com.azure.resourcemanager.machinelearning.models.ServiceDataAccessAuthIdentity&text=ServiceDataAccessAuthIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "OneLakeDatastore.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.machinelearning.models.DatastoreProperties.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.validate()"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.validate()"
  name: "validate()"
  nameWithType: "OneLakeDatastore.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.machinelearning.models.DatastoreProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withArtifact(com.azure.resourcemanager.machinelearning.models.OneLakeArtifact)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withArtifact(OneLakeArtifact artifact)"
  name: "withArtifact(OneLakeArtifact artifact)"
  nameWithType: "OneLakeDatastore.withArtifact(OneLakeArtifact artifact)"
  summary: "Set the artifact property: \\[Required\\] One<wbr>Lake artifact backing the datastore."
  parameters:
  - description: "the artifact value to set."
    name: "artifact"
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeArtifact?alt=com.azure.resourcemanager.machinelearning.models.OneLakeArtifact&text=OneLakeArtifact\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OneLakeDatastore withArtifact(OneLakeArtifact artifact)"
  desc: "Set the artifact property: \\[Required\\] OneLake artifact backing the datastore."
  returns:
    description: "the OneLakeDatastore object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withCredentials(com.azure.resourcemanager.machinelearning.models.DatastoreCredentials)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withCredentials(DatastoreCredentials credentials)"
  name: "withCredentials(DatastoreCredentials credentials)"
  nameWithType: "OneLakeDatastore.withCredentials(DatastoreCredentials credentials)"
  summary: "Set the credentials property: \\[Required\\] Account credentials."
  overridden: "com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withCredentials(com.azure.resourcemanager.machinelearning.models.DatastoreCredentials)"
  parameters:
  - name: "credentials"
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.DatastoreCredentials?alt=com.azure.resourcemanager.machinelearning.models.DatastoreCredentials&text=DatastoreCredentials\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OneLakeDatastore withCredentials(DatastoreCredentials credentials)"
  desc: "Set the credentials property: \\[Required\\] Account credentials."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "OneLakeDatastore.withDescription(String description)"
  summary: "Set the description property: The asset description text."
  overridden: "com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public OneLakeDatastore withDescription(String description)"
  desc: "Set the description property: The asset description text."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withEndpoint(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withEndpoint(String endpoint)"
  name: "withEndpoint(String endpoint)"
  nameWithType: "OneLakeDatastore.withEndpoint(String endpoint)"
  summary: "Set the endpoint property: One<wbr>Lake endpoint to use for the datastore."
  parameters:
  - description: "the endpoint value to set."
    name: "endpoint"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public OneLakeDatastore withEndpoint(String endpoint)"
  desc: "Set the endpoint property: OneLake endpoint to use for the datastore."
  returns:
    description: "the OneLakeDatastore object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withOneLakeWorkspaceName(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withOneLakeWorkspaceName(String oneLakeWorkspaceName)"
  name: "withOneLakeWorkspaceName(String oneLakeWorkspaceName)"
  nameWithType: "OneLakeDatastore.withOneLakeWorkspaceName(String oneLakeWorkspaceName)"
  summary: "Set the one<wbr>Lake<wbr>Workspace<wbr>Name property: \\[Required\\] One<wbr>Lake workspace name."
  parameters:
  - description: "the oneLakeWorkspaceName value to set."
    name: "oneLakeWorkspaceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public OneLakeDatastore withOneLakeWorkspaceName(String oneLakeWorkspaceName)"
  desc: "Set the oneLakeWorkspaceName property: \\[Required\\] OneLake workspace name."
  returns:
    description: "the OneLakeDatastore object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withProperties(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withProperties(Map<String,String> properties)"
  name: "withProperties(Map<String,String> properties)"
  nameWithType: "OneLakeDatastore.withProperties(Map<String,String> properties)"
  summary: "Set the properties property: The asset property dictionary."
  overridden: "com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withProperties(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "properties"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public OneLakeDatastore withProperties(Map<String,String> properties)"
  desc: "Set the properties property: The asset property dictionary."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withServiceDataAccessAuthIdentity(com.azure.resourcemanager.machinelearning.models.ServiceDataAccessAuthIdentity)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withServiceDataAccessAuthIdentity(ServiceDataAccessAuthIdentity serviceDataAccessAuthIdentity)"
  name: "withServiceDataAccessAuthIdentity(ServiceDataAccessAuthIdentity serviceDataAccessAuthIdentity)"
  nameWithType: "OneLakeDatastore.withServiceDataAccessAuthIdentity(ServiceDataAccessAuthIdentity serviceDataAccessAuthIdentity)"
  summary: "Set the service<wbr>Data<wbr>Access<wbr>Auth<wbr>Identity property: Indicates which identity to use to authenticate service data access to customer's storage."
  parameters:
  - description: "the serviceDataAccessAuthIdentity value to set."
    name: "serviceDataAccessAuthIdentity"
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ServiceDataAccessAuthIdentity?alt=com.azure.resourcemanager.machinelearning.models.ServiceDataAccessAuthIdentity&text=ServiceDataAccessAuthIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OneLakeDatastore withServiceDataAccessAuthIdentity(ServiceDataAccessAuthIdentity serviceDataAccessAuthIdentity)"
  desc: "Set the serviceDataAccessAuthIdentity property: Indicates which identity to use to authenticate service data access to customer's storage."
  returns:
    description: "the OneLakeDatastore object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.machinelearning.models.OneLakeDatastore.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "OneLakeDatastore.withTags(Map<String,String> tags)"
  summary: "Set the tags property: Tag dictionary."
  overridden: "com.azure.resourcemanager.machinelearning.models.DatastoreProperties.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public OneLakeDatastore withTags(Map<String,String> tags)"
  desc: "Set the tags property: Tag dictionary. Tags can be added, removed, and updated."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.OneLakeDatastore?alt=com.azure.resourcemanager.machinelearning.models.OneLakeDatastore&text=OneLakeDatastore\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "OneLake (Trident) datastore configuration."
metadata: {}
package: "com.azure.resourcemanager.machinelearning.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-machinelearning:1.1.0
