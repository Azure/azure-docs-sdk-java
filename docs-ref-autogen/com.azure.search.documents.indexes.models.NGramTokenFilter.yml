### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.NGramTokenFilter"
fullName: "com.azure.search.documents.indexes.models.NGramTokenFilter"
name: "NGramTokenFilter"
nameWithType: "NGramTokenFilter"
summary: "Generates n-grams of the given size(s)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.TokenFilter.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class NGramTokenFilter extends TokenFilter"
constructors:
- uid: "com.azure.search.documents.indexes.models.NGramTokenFilter.NGramTokenFilter(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.NGramTokenFilter.NGramTokenFilter(String name)"
  name: "NGramTokenFilter(String name)"
  nameWithType: "NGramTokenFilter.NGramTokenFilter(String name)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.NGramTokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NGramTokenFilter\"></xref>."
  parameters:
  - description: "The name of the token filter. It must only contain letters, digits,\n spaces, dashes or underscores, can only start and end with alphanumeric\n characters, and is limited to 128 characters."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NGramTokenFilter(String name)"
  desc: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.NGramTokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NGramTokenFilter\"></xref>."
methods:
- uid: "com.azure.search.documents.indexes.models.NGramTokenFilter.getMaxGram()"
  fullName: "com.azure.search.documents.indexes.models.NGramTokenFilter.getMaxGram()"
  name: "getMaxGram()"
  nameWithType: "NGramTokenFilter.getMaxGram()"
  summary: "Get the max<wbr>Gram property: The maximum n-gram length."
  syntax: "public Integer getMaxGram()"
  desc: "Get the maxGram property: The maximum n-gram length. Default is 2."
  returns:
    description: "the maxGram value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.NGramTokenFilter.getMinGram()"
  fullName: "com.azure.search.documents.indexes.models.NGramTokenFilter.getMinGram()"
  name: "getMinGram()"
  nameWithType: "NGramTokenFilter.getMinGram()"
  summary: "Get the min<wbr>Gram property: The minimum n-gram length."
  syntax: "public Integer getMinGram()"
  desc: "Get the minGram property: The minimum n-gram length. Default is 1. Must be less than the value of maxGram."
  returns:
    description: "the minGram value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.NGramTokenFilter.setMaxGram(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.NGramTokenFilter.setMaxGram(Integer maxGram)"
  name: "setMaxGram(Integer maxGram)"
  nameWithType: "NGramTokenFilter.setMaxGram(Integer maxGram)"
  summary: "Set the max<wbr>Gram property: The maximum n-gram length."
  parameters:
  - description: "the maxGram value to set."
    name: "maxGram"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NGramTokenFilter setMaxGram(Integer maxGram)"
  desc: "Set the maxGram property: The maximum n-gram length. Default is 2."
  returns:
    description: "the NGramTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.NGramTokenFilter?alt=com.azure.search.documents.indexes.models.NGramTokenFilter&text=NGramTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.NGramTokenFilter.setMinGram(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.NGramTokenFilter.setMinGram(Integer minGram)"
  name: "setMinGram(Integer minGram)"
  nameWithType: "NGramTokenFilter.setMinGram(Integer minGram)"
  summary: "Set the min<wbr>Gram property: The minimum n-gram length."
  parameters:
  - description: "the minGram value to set."
    name: "minGram"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NGramTokenFilter setMinGram(Integer minGram)"
  desc: "Set the minGram property: The minimum n-gram length. Default is 1. Must be less than the value of maxGram."
  returns:
    description: "the NGramTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.NGramTokenFilter?alt=com.azure.search.documents.indexes.models.NGramTokenFilter&text=NGramTokenFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.4.13
