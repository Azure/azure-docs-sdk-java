### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.EventHubConsumerClient"
fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient"
name: "EventHubConsumerClient"
nameWithType: "EventHubConsumerClient"
summary: "A **synchronous** consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> from an Event Hub partition in the context of a specific consumer group.\n\n**Creating a synchronous consumer**\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventhubconsumerclient.instantiation\\}\n\n**Consuming events from a single partition**\n\nEvents from a single partition can be consumed using <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#receiveFromPartition(String, int, EventPosition)\"></xref> or <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition,java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#receiveFromPartition(String, int, EventPosition, Duration)\"></xref>. The call to `receiveFromPartition` completes and returns an <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> when either the maximum number of events is received, or the timeout has elapsed.\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventhubconsumerclient.receive\\#string-int-eventposition-duration\\}"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EventHubConsumerClient implements Closeable"
methods:
- "com.azure.messaging.eventhubs.EventHubConsumerClient.close()"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.getConsumerGroup()"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.getEventHubName()"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.getEventHubProperties()"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.getFullyQualifiedNamespace()"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.getPartitionIds()"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.getPartitionProperties(java.lang.String)"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition)"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition,java.time.Duration)"
- "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition,java.time.Duration,com.azure.messaging.eventhubs.models.ReceiveOptions)"
type: "class"
implements:
- "<xref href=\"java.io.Closeable?alt=java.io.Closeable&text=Closeable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.messaging.eventhubs"
artifact: com.azure:azure-messaging-eventhubs:5.9.0
