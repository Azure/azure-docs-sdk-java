### YamlMime:JavaPackage
uid: "com.azure.core.util.polling"
fullName: "com.azure.core.util.polling"
name: "com.azure.core.util.polling"
summary: "<p>This package contains utility classes and interfaces for handling long-running operations in the\n Azure client libraries."
classes:
- "com.azure.core.util.polling.AsyncPollResponse"
- "com.azure.core.util.polling.ChainedPollingStrategy"
- "com.azure.core.util.polling.DefaultPollingStrategy"
- "com.azure.core.util.polling.LocationPollingStrategy"
- "com.azure.core.util.polling.LongRunningOperationStatus"
- "com.azure.core.util.polling.OperationResourcePollingStrategy"
- "com.azure.core.util.polling.PollOperationDetails"
- "com.azure.core.util.polling.PollResponse"
- "com.azure.core.util.polling.PollerFlux"
- "com.azure.core.util.polling.PollingContext"
- "com.azure.core.util.polling.PollingStrategyOptions"
- "com.azure.core.util.polling.StatusCheckPollingStrategy"
- "com.azure.core.util.polling.SyncChainedPollingStrategy"
- "com.azure.core.util.polling.SyncDefaultPollingStrategy"
- "com.azure.core.util.polling.SyncLocationPollingStrategy"
- "com.azure.core.util.polling.SyncOperationResourcePollingStrategy"
- "com.azure.core.util.polling.SyncStatusCheckPollingStrategy"
interfaces:
- "com.azure.core.util.polling.PollingStrategy"
- "com.azure.core.util.polling.SyncPoller"
- "com.azure.core.util.polling.SyncPollingStrategy"
desc: "<p>This package contains utility classes and interfaces for handling long-running operations in the\n Azure client libraries.</p>\n\n <p>Long-running operations are operations such as the creation or deletion of a resource, which take a significant\n amount of time to complete. These operations are typically handled asynchronously, with the client initiating the\n operation and then polling the service at intervals to determine whether the operation has completed.</p>\n\n <p>This package provides a standard mechanism for initiating, tracking, and retrieving the results of long-running\n operations</p>\n\n <p><strong>Code Sample: Asynchronously wait for polling to complete and then retrieve the final result</strong></p>\n\n <!-- src_embed com.azure.core.util.polling.poller.getResult -->\n <pre>\n LocalDateTime timeToReturnFinalResponse = LocalDateTime.now&#40;&#41;.plus&#40;Duration.ofMinutes&#40;5&#41;&#41;;\n\n &#47;&#47; Create poller instance\n PollerFlux&lt;String, String&gt; poller = new PollerFlux&lt;&gt;&#40;Duration.ofMillis&#40;100&#41;,\n     &#40;context&#41; -&gt; Mono.empty&#40;&#41;,\n     &#40;context&#41; -&gt;  &#123;\n         if &#40;LocalDateTime.now&#40;&#41;.isBefore&#40;timeToReturnFinalResponse&#41;&#41; &#123;\n             System.out.println&#40;&quot;Returning intermediate response.&quot;&#41;;\n             return Mono.just&#40;new PollResponse&lt;&gt;&#40;LongRunningOperationStatus.IN_PROGRESS,\n                     &quot;Operation in progress.&quot;&#41;&#41;;\n         &#125; else &#123;\n             System.out.println&#40;&quot;Returning final response.&quot;&#41;;\n             return Mono.just&#40;new PollResponse&lt;&gt;&#40;LongRunningOperationStatus.SUCCESSFULLY_COMPLETED,\n                     &quot;Operation completed.&quot;&#41;&#41;;\n         &#125;\n     &#125;,\n     &#40;activationResponse, context&#41; -&gt; Mono.just&#40;&quot;FromServer:OperationIsCancelled&quot;&#41;,\n     &#40;context&#41; -&gt; Mono.just&#40;&quot;FromServer:FinalOutput&quot;&#41;&#41;;\n\n poller.take&#40;Duration.ofMinutes&#40;30&#41;&#41;\n         .last&#40;&#41;\n         .flatMap&#40;asyncPollResponse -&gt; &#123;\n             if &#40;asyncPollResponse.getStatus&#40;&#41; == LongRunningOperationStatus.SUCCESSFULLY_COMPLETED&#41; &#123;\n                 &#47;&#47; operation completed successfully, retrieving final result.\n                 return asyncPollResponse\n                         .getFinalResult&#40;&#41;;\n             &#125; else &#123;\n                 return Mono.error&#40;new RuntimeException&#40;&quot;polling completed unsuccessfully with status:&quot;\n                         + asyncPollResponse.getStatus&#40;&#41;&#41;&#41;;\n             &#125;\n         &#125;&#41;.block&#40;&#41;;\n\n </pre>\n <!-- end com.azure.core.util.polling.poller.getResult -->\n\n <p><strong>Code Sample: Using a SimpleSyncPoller to poll until the operation is successfully completed</strong></p>\n\n <!-- src_embed com.azure.core.util.polling.simpleSyncPoller.instantiationAndPoll -->\n <pre>\n LongRunningOperationStatus operationStatus = syncPoller.poll&#40;&#41;.getStatus&#40;&#41;;\n while &#40;operationStatus != LongRunningOperationStatus.SUCCESSFULLY_COMPLETED&#41; &#123;\n     System.out.println&#40;&quot;Polling status: &quot; + operationStatus.toString&#40;&#41;&#41;;\n     System.out.println&#40;&quot;Polling response: &quot; + operationStatus.toString&#40;&#41;&#41;;\n     operationStatus = syncPoller.poll&#40;&#41;.getStatus&#40;&#41;;\n &#125;\n </pre>\n <!-- end com.azure.core.util.polling.simpleSyncPoller.instantiationAndPoll -->"
metadata: {}
package: "com.azure.core.util.polling"
artifact: com.azure:azure-core:1.47.0
