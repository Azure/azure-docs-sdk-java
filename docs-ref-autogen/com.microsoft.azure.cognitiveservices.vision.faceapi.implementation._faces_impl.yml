### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  id: _faces_impl
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  children:
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStream()
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStream(byte [],DetectWithStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamAsync(byte [],DetectWithStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamAsync(byte [],DetectWithStreamOptionalParameter,final ServiceCallback<List<DetectedFace>>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamWithServiceResponseAsync(byte [],Boolean,Boolean,List<FaceAttributeType>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamWithServiceResponseAsync(byte [],DetectWithStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrl()
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrl(String,DetectWithUrlOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlAsync(String,DetectWithUrlOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlAsync(String,DetectWithUrlOptionalParameter,final ServiceCallback<List<DetectedFace>>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlWithServiceResponseAsync(String,Boolean,Boolean,List<FaceAttributeType>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlWithServiceResponseAsync(String,DetectWithUrlOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.FacesImpl(Retrofit,FaceAPIImpl)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilar()
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilar(UUID,FindSimilarOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarAsync(UUID,FindSimilarOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarAsync(UUID,FindSimilarOptionalParameter,final ServiceCallback<List<SimilarFace>>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarWithServiceResponseAsync(UUID,FindSimilarOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarWithServiceResponseAsync(UUID,String,List<UUID>,Integer,FindSimilarMatchMode)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.group(List<UUID>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupAsync(List<UUID>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupAsync(List<UUID>,final ServiceCallback<GroupResult>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupWithServiceResponseAsync(List<UUID>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identify()
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identify(String,List<UUID>,IdentifyOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyAsync(String,List<UUID>,IdentifyOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyAsync(String,List<UUID>,IdentifyOptionalParameter,final ServiceCallback<List<IdentifyResult>>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyWithServiceResponseAsync(String,List<UUID>,IdentifyOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyWithServiceResponseAsync(String,List<UUID>,Integer,Double)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFace(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceAsync(UUID,UUID,final ServiceCallback<VerifyResult>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceWithServiceResponseAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPerson(UUID,String,UUID)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonAsync(UUID,String,UUID)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonAsync(UUID,String,UUID,final ServiceCallback<VerifyResult>)
  - com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonWithServiceResponseAsync(UUID,String,UUID)
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: FacesImpl
  nameWithType: FacesImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl
  type: Class
  source:
    remote: &o0
      path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 56
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi._faces" data-throw-if-not-resolved="false">Faces</xref>. </p>
  syntax: &o1
    content: public class FacesImpl implements Faces
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.cognitiveservices.vision.faceapi._faces
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStream()
  id: detectWithStream()
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithStream()
  nameWithType: FacesImpl.detectWithStream()
  fullName: FacesDetectWithStreamParameters com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStream()
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 1023
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public FacesDetectWithStreamParameters detectWithStream()
    return:
      type: 5a311a13
      description: <p>the first stage of the detectWithStream call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithStream()
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStream(byte [],DetectWithStreamOptionalParameter)
  id: detectWithStream(byte [],DetectWithStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithStream(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  nameWithType: FacesImpl.detectWithStream(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  fullName: List<DetectedFace> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStream(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 924
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public List<DetectedFace> detectWithStream(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: detectWithStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facea08ddfce
      description: <p>the List&lt;DetectedFace&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithStream(byte [],DetectWithStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamAsync(byte [],DetectWithStreamOptionalParameter)
  id: detectWithStreamAsync(byte [],DetectWithStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  nameWithType: FacesImpl.detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  fullName: Observable<List<DetectedFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 949
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public Observable<List<DetectedFace>> detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: detectWithStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
      description: <p>the observable to the List&lt;DetectedFace&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithStreamAsync(byte [],DetectWithStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamAsync(byte [],DetectWithStreamOptionalParameter,final ServiceCallback<List<DetectedFace>>)
  id: detectWithStreamAsync(byte [],DetectWithStreamOptionalParameter,final ServiceCallback<List<DetectedFace>>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter, final ServiceCallback<List<DetectedFace>> serviceCallback)
  nameWithType: FacesImpl.detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter, final ServiceCallback<List<DetectedFace>> serviceCallback)
  fullName: ServiceFuture<List<DetectedFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter, final ServiceCallback<List<DetectedFace>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 937
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DetectedFace>> detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter, final ServiceCallback<List<DetectedFace>> serviceCallback)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: detectWithStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamWithServiceResponseAsync(byte [],Boolean,Boolean,List<FaceAttributeType>)
  id: detectWithStreamWithServiceResponseAsync(byte [],Boolean,Boolean,List<FaceAttributeType>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithStreamWithServiceResponseAsync(byte[] image, Boolean returnFaceId, Boolean returnFaceLandmarks, List<FaceAttributeType> returnFaceAttributes)
  nameWithType: FacesImpl.detectWithStreamWithServiceResponseAsync(byte[] image, Boolean returnFaceId, Boolean returnFaceLandmarks, List<FaceAttributeType> returnFaceAttributes)
  fullName: Observable<ServiceResponse<List<DetectedFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStreamWithServiceResponseAsync(byte[] image, Boolean returnFaceId, Boolean returnFaceLandmarks, List<FaceAttributeType> returnFaceAttributes)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 990
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<List<DetectedFace>>> detectWithStreamWithServiceResponseAsync(byte[] image, Boolean returnFaceId, Boolean returnFaceLandmarks, List<FaceAttributeType> returnFaceAttributes)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: returnFaceId
      type: 866c2227
      description: <p>A value indicating whether the operation should return faceIds of detected faces. </p>
    - id: returnFaceLandmarks
      type: 866c2227
      description: <p>A value indicating whether the operation should return landmarks of the detected faces. </p>
    - id: returnFaceAttributes
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._face_attribute_typea08ddfce
      description: <p>Analyze and return the one or more specified face attributes in the comma-separated string like "returnFaceAttributes=age,gender". Supported face attributes include age, gender, headPose, smile, facialHair, glasses and emotion. Note that each face attribute analysis has additional computational and time cost. </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face2646ccb0
      description: <p>the observable to the List&lt;DetectedFace&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamWithServiceResponseAsync(byte [],DetectWithStreamOptionalParameter)
  id: detectWithStreamWithServiceResponseAsync(byte [],DetectWithStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithStreamWithServiceResponseAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  nameWithType: FacesImpl.detectWithStreamWithServiceResponseAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  fullName: Observable<ServiceResponse<List<DetectedFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStreamWithServiceResponseAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 966
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<List<DetectedFace>>> detectWithStreamWithServiceResponseAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: detectWithStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face2646ccb0
      description: <p>the observable to the List&lt;DetectedFace&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrl()
  id: detectWithUrl()
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithUrl()
  nameWithType: FacesImpl.detectWithUrl()
  fullName: FacesDetectWithUrlParameters com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrl()
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrl*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 756
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public FacesDetectWithUrlParameters detectWithUrl()
    return:
      type: f5e24853
      description: <p>the first stage of the detectWithUrl call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithUrl()
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrl(String,DetectWithUrlOptionalParameter)
  id: detectWithUrl(String,DetectWithUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithUrl(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  nameWithType: FacesImpl.detectWithUrl(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  fullName: List<DetectedFace> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrl(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrl*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 656
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public List<DetectedFace> detectWithUrl(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: detectWithUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facea08ddfce
      description: <p>the List&lt;DetectedFace&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithUrl(String,DetectWithUrlOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlAsync(String,DetectWithUrlOptionalParameter)
  id: detectWithUrlAsync(String,DetectWithUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  nameWithType: FacesImpl.detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  fullName: Observable<List<DetectedFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 681
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public Observable<List<DetectedFace>> detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: detectWithUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
      description: <p>the observable to the List&lt;DetectedFace&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithUrlAsync(String,DetectWithUrlOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlAsync(String,DetectWithUrlOptionalParameter,final ServiceCallback<List<DetectedFace>>)
  id: detectWithUrlAsync(String,DetectWithUrlOptionalParameter,final ServiceCallback<List<DetectedFace>>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter, final ServiceCallback<List<DetectedFace>> serviceCallback)
  nameWithType: FacesImpl.detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter, final ServiceCallback<List<DetectedFace>> serviceCallback)
  fullName: ServiceFuture<List<DetectedFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter, final ServiceCallback<List<DetectedFace>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 669
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DetectedFace>> detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter, final ServiceCallback<List<DetectedFace>> serviceCallback)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: detectWithUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlWithServiceResponseAsync(String,Boolean,Boolean,List<FaceAttributeType>)
  id: detectWithUrlWithServiceResponseAsync(String,Boolean,Boolean,List<FaceAttributeType>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithUrlWithServiceResponseAsync(String url, Boolean returnFaceId, Boolean returnFaceLandmarks, List<FaceAttributeType> returnFaceAttributes)
  nameWithType: FacesImpl.detectWithUrlWithServiceResponseAsync(String url, Boolean returnFaceId, Boolean returnFaceLandmarks, List<FaceAttributeType> returnFaceAttributes)
  fullName: Observable<ServiceResponse<List<DetectedFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrlWithServiceResponseAsync(String url, Boolean returnFaceId, Boolean returnFaceLandmarks, List<FaceAttributeType> returnFaceAttributes)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 722
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<List<DetectedFace>>> detectWithUrlWithServiceResponseAsync(String url, Boolean returnFaceId, Boolean returnFaceLandmarks, List<FaceAttributeType> returnFaceAttributes)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: returnFaceId
      type: 866c2227
      description: <p>A value indicating whether the operation should return faceIds of detected faces. </p>
    - id: returnFaceLandmarks
      type: 866c2227
      description: <p>A value indicating whether the operation should return landmarks of the detected faces. </p>
    - id: returnFaceAttributes
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._face_attribute_typea08ddfce
      description: <p>Analyze and return the one or more specified face attributes in the comma-separated string like "returnFaceAttributes=age,gender". Supported face attributes include age, gender, headPose, smile, facialHair, glasses and emotion. Note that each face attribute analysis has additional computational and time cost. </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face2646ccb0
      description: <p>the observable to the List&lt;DetectedFace&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlWithServiceResponseAsync(String,DetectWithUrlOptionalParameter)
  id: detectWithUrlWithServiceResponseAsync(String,DetectWithUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: detectWithUrlWithServiceResponseAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  nameWithType: FacesImpl.detectWithUrlWithServiceResponseAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  fullName: Observable<ServiceResponse<List<DetectedFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrlWithServiceResponseAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 698
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<List<DetectedFace>>> detectWithUrlWithServiceResponseAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: detectWithUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face2646ccb0
      description: <p>the observable to the List&lt;DetectedFace&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.FacesImpl(Retrofit,FaceAPIImpl)
  id: FacesImpl(Retrofit,FaceAPIImpl)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: FacesImpl(Retrofit retrofit, FaceAPIImpl client)
  nameWithType: FacesImpl.FacesImpl(Retrofit retrofit, FaceAPIImpl client)
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.FacesImpl(Retrofit retrofit, FaceAPIImpl client)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.FacesImpl*
  type: Constructor
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 68
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Initializes an instance of <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl" data-throw-if-not-resolved="false">FacesImpl</xref>.</p>

    <p></p>
  syntax:
    content: public FacesImpl(Retrofit retrofit, FaceAPIImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._face_a_p_i_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilar()
  id: findSimilar()
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: findSimilar()
  nameWithType: FacesImpl.findSimilar()
  fullName: FacesFindSimilarParameters com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilar()
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilar*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 224
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public FacesFindSimilarParameters findSimilar()
    return:
      type: b36170d8
      description: <p>the first stage of the findSimilar call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.findSimilar()
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilar(UUID,FindSimilarOptionalParameter)
  id: findSimilar(UUID,FindSimilarOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: findSimilar(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  nameWithType: FacesImpl.findSimilar(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  fullName: List<SimilarFace> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilar(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilar*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 119
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public List<SimilarFace> findSimilar(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call </p>
    - id: findSimilarOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facea08ddfce
      description: <p>the List&lt;SimilarFace&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.findSimilar(UUID,FindSimilarOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarAsync(UUID,FindSimilarOptionalParameter)
  id: findSimilarAsync(UUID,FindSimilarOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  nameWithType: FacesImpl.findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  fullName: Observable<List<SimilarFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 144
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public Observable<List<SimilarFace>> findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call </p>
    - id: findSimilarOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facee7daa122
      description: <p>the observable to the List&lt;SimilarFace&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.findSimilarAsync(UUID,FindSimilarOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarAsync(UUID,FindSimilarOptionalParameter,final ServiceCallback<List<SimilarFace>>)
  id: findSimilarAsync(UUID,FindSimilarOptionalParameter,final ServiceCallback<List<SimilarFace>>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter, final ServiceCallback<List<SimilarFace>> serviceCallback)
  nameWithType: FacesImpl.findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter, final ServiceCallback<List<SimilarFace>> serviceCallback)
  fullName: ServiceFuture<List<SimilarFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter, final ServiceCallback<List<SimilarFace>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 132
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SimilarFace>> findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter, final ServiceCallback<List<SimilarFace>> serviceCallback)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call </p>
    - id: findSimilarOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facee7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarWithServiceResponseAsync(UUID,FindSimilarOptionalParameter)
  id: findSimilarWithServiceResponseAsync(UUID,FindSimilarOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: findSimilarWithServiceResponseAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  nameWithType: FacesImpl.findSimilarWithServiceResponseAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  fullName: Observable<ServiceResponse<List<SimilarFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilarWithServiceResponseAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 161
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<List<SimilarFace>>> findSimilarWithServiceResponseAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call </p>
    - id: findSimilarOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face2646ccb0
      description: <p>the observable to the List&lt;SimilarFace&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarWithServiceResponseAsync(UUID,String,List<UUID>,Integer,FindSimilarMatchMode)
  id: findSimilarWithServiceResponseAsync(UUID,String,List<UUID>,Integer,FindSimilarMatchMode)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: findSimilarWithServiceResponseAsync(UUID faceId, String faceListId, List<UUID> faceIds, Integer maxNumOfCandidatesReturned, FindSimilarMatchMode mode)
  nameWithType: FacesImpl.findSimilarWithServiceResponseAsync(UUID faceId, String faceListId, List<UUID> faceIds, Integer maxNumOfCandidatesReturned, FindSimilarMatchMode mode)
  fullName: Observable<ServiceResponse<List<SimilarFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilarWithServiceResponseAsync(UUID faceId, String faceListId, List<UUID> faceIds, Integer maxNumOfCandidatesReturned, FindSimilarMatchMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 187
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<List<SimilarFace>>> findSimilarWithServiceResponseAsync(UUID faceId, String faceListId, List<UUID> faceIds, Integer maxNumOfCandidatesReturned, FindSimilarMatchMode mode)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call </p>
    - id: faceListId
      type: "26831127"
      description: <p>An existing user-specified unique candidate face list, created in Face List - Create a Face List. Face list contains a set of persistedFaceIds which are persisted and will never expire. Parameter faceListId and faceIds should not be provided at the same time </p>
    - id: faceIds
      type: 2e038ed4
      description: <p>An array of candidate faceIds. All of them are created by Face - Detect and the faceIds will expire 24 hours after the detection call. </p>
    - id: maxNumOfCandidatesReturned
      type: 08effaa0
      description: <p>The number of top similar faces returned. The valid range is [1, 1000]. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_match_mode
      description: "<p>Similar face searching mode. It can be \"matchPerson\" or \"matchFace\". Possible values include: 'matchPerson', 'matchFace' </p>"
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face2646ccb0
      description: <p>the observable to the List&lt;SimilarFace&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.group(List<UUID>)
  id: group(List<UUID>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: group(List<UUID> faceIds)
  nameWithType: FacesImpl.group(List<UUID> faceIds)
  fullName: GroupResult com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.group(List<UUID> faceIds)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.group*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 302
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Divide candidate faces into groups based on face similarity.</p>

    <p></p>
  syntax:
    content: public GroupResult group(List<UUID> faceIds)
    parameters:
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of candidate faceId created by Face - Detect. The maximum is 1000 faces </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result
      description: <p>the GroupResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.group(List<UUID>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupAsync(List<UUID>)
  id: groupAsync(List<UUID>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: groupAsync(List<UUID> faceIds)
  nameWithType: FacesImpl.groupAsync(List<UUID> faceIds)
  fullName: Observable<GroupResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.groupAsync(List<UUID> faceIds)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 325
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Divide candidate faces into groups based on face similarity.</p>

    <p></p>
  syntax:
    content: public Observable<GroupResult> groupAsync(List<UUID> faceIds)
    parameters:
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of candidate faceId created by Face - Detect. The maximum is 1000 faces </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulta08ddfce
      description: <p>the observable to the GroupResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.groupAsync(List<UUID>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupAsync(List<UUID>,final ServiceCallback<GroupResult>)
  id: groupAsync(List<UUID>,final ServiceCallback<GroupResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: groupAsync(List<UUID> faceIds, final ServiceCallback<GroupResult> serviceCallback)
  nameWithType: FacesImpl.groupAsync(List<UUID> faceIds, final ServiceCallback<GroupResult> serviceCallback)
  fullName: ServiceFuture<GroupResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.groupAsync(List<UUID> faceIds, final ServiceCallback<GroupResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 314
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Divide candidate faces into groups based on face similarity.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<GroupResult> groupAsync(List<UUID> faceIds, final ServiceCallback<GroupResult> serviceCallback)
    parameters:
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of candidate faceId created by Face - Detect. The maximum is 1000 faces </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupWithServiceResponseAsync(List<UUID>)
  id: groupWithServiceResponseAsync(List<UUID>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: groupWithServiceResponseAsync(List<UUID> faceIds)
  nameWithType: FacesImpl.groupWithServiceResponseAsync(List<UUID> faceIds)
  fullName: Observable<ServiceResponse<GroupResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.groupWithServiceResponseAsync(List<UUID> faceIds)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 341
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Divide candidate faces into groups based on face similarity.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<GroupResult>> groupWithServiceResponseAsync(List<UUID> faceIds)
    parameters:
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of candidate faceId created by Face - Detect. The maximum is 1000 faces </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulte7daa122
      description: <p>the observable to the GroupResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identify()
  id: identify()
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: identify()
  nameWithType: FacesImpl.identify()
  fullName: FacesIdentifyParameters com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identify()
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identify*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 496
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public FacesIdentifyParameters identify()
    return:
      type: d9462080
      description: <p>the first stage of the identify call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.identify()
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identify(String,List<UUID>,IdentifyOptionalParameter)
  id: identify(String,List<UUID>,IdentifyOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: identify(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  nameWithType: FacesImpl.identify(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  fullName: List<IdentifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identify(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identify*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 385
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public List<IdentifyResult> identify(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
    parameters:
    - id: personGroupId
      type: "26831127"
      description: <p>PersonGroupId of the target person group, created by PersonGroups.Create </p>
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </p>
    - id: identifyOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulta08ddfce
      description: <p>the List&lt;IdentifyResult&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.identify(String,List<UUID>,IdentifyOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyAsync(String,List<UUID>,IdentifyOptionalParameter)
  id: identifyAsync(String,List<UUID>,IdentifyOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  nameWithType: FacesImpl.identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  fullName: Observable<List<IdentifyResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 412
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public Observable<List<IdentifyResult>> identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
    parameters:
    - id: personGroupId
      type: "26831127"
      description: <p>PersonGroupId of the target person group, created by PersonGroups.Create </p>
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </p>
    - id: identifyOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulte7daa122
      description: <p>the observable to the List&lt;IdentifyResult&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.identifyAsync(String,List<UUID>,IdentifyOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyAsync(String,List<UUID>,IdentifyOptionalParameter,final ServiceCallback<List<IdentifyResult>>)
  id: identifyAsync(String,List<UUID>,IdentifyOptionalParameter,final ServiceCallback<List<IdentifyResult>>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter, final ServiceCallback<List<IdentifyResult>> serviceCallback)
  nameWithType: FacesImpl.identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter, final ServiceCallback<List<IdentifyResult>> serviceCallback)
  fullName: ServiceFuture<List<IdentifyResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter, final ServiceCallback<List<IdentifyResult>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 399
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<IdentifyResult>> identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter, final ServiceCallback<List<IdentifyResult>> serviceCallback)
    parameters:
    - id: personGroupId
      type: "26831127"
      description: <p>PersonGroupId of the target person group, created by PersonGroups.Create </p>
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </p>
    - id: identifyOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulte7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulte7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyWithServiceResponseAsync(String,List<UUID>,IdentifyOptionalParameter)
  id: identifyWithServiceResponseAsync(String,List<UUID>,IdentifyOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: identifyWithServiceResponseAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  nameWithType: FacesImpl.identifyWithServiceResponseAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  fullName: Observable<ServiceResponse<List<IdentifyResult>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identifyWithServiceResponseAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 430
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<List<IdentifyResult>>> identifyWithServiceResponseAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
    parameters:
    - id: personGroupId
      type: "26831127"
      description: <p>PersonGroupId of the target person group, created by PersonGroups.Create </p>
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </p>
    - id: identifyOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result2646ccb0
      description: <p>the observable to the List&lt;IdentifyResult&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyWithServiceResponseAsync(String,List<UUID>,Integer,Double)
  id: identifyWithServiceResponseAsync(String,List<UUID>,Integer,Double)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: identifyWithServiceResponseAsync(String personGroupId, List<UUID> faceIds, Integer maxNumOfCandidatesReturned, Double confidenceThreshold)
  nameWithType: FacesImpl.identifyWithServiceResponseAsync(String personGroupId, List<UUID> faceIds, Integer maxNumOfCandidatesReturned, Double confidenceThreshold)
  fullName: Observable<ServiceResponse<List<IdentifyResult>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identifyWithServiceResponseAsync(String personGroupId, List<UUID> faceIds, Integer maxNumOfCandidatesReturned, Double confidenceThreshold)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 457
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<List<IdentifyResult>>> identifyWithServiceResponseAsync(String personGroupId, List<UUID> faceIds, Integer maxNumOfCandidatesReturned, Double confidenceThreshold)
    parameters:
    - id: personGroupId
      type: "26831127"
      description: <p>PersonGroupId of the target person group, created by PersonGroups.Create </p>
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </p>
    - id: maxNumOfCandidatesReturned
      type: 08effaa0
      description: <p>The range of maxNumOfCandidatesReturned is between 1 and 5 (default is 1). </p>
    - id: confidenceThreshold
      type: 8dd309d9
      description: <p>Confidence threshold of identification, used to judge whether one face belong to one person. The range of confidenceThreshold is [0, 1] (default specified by algorithm). </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result2646ccb0
      description: <p>the observable to the List&lt;IdentifyResult&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFace(UUID,UUID)
  id: verifyFaceToFace(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: verifyFaceToFace(UUID faceId1, UUID faceId2)
  nameWithType: FacesImpl.verifyFaceToFace(UUID faceId1, UUID faceId2)
  fullName: VerifyResult com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToFace(UUID faceId1, UUID faceId2)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFace*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 568
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Verify whether two faces belong to a same person or whether one face belongs to a person.</p>

    <p></p>
  syntax:
    content: public VerifyResult verifyFaceToFace(UUID faceId1, UUID faceId2)
    parameters:
    - id: faceId1
      type: add9545a
      description: <p>FaceId of the first face, comes from Face - Detect </p>
    - id: faceId2
      type: add9545a
      description: <p>FaceId of the second face, comes from Face - Detect </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
      description: <p>the VerifyResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.verifyFaceToFace(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceAsync(UUID,UUID)
  id: verifyFaceToFaceAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: verifyFaceToFaceAsync(UUID faceId1, UUID faceId2)
  nameWithType: FacesImpl.verifyFaceToFaceAsync(UUID faceId1, UUID faceId2)
  fullName: Observable<VerifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToFaceAsync(UUID faceId1, UUID faceId2)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 593
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Verify whether two faces belong to a same person or whether one face belongs to a person.</p>

    <p></p>
  syntax:
    content: public Observable<VerifyResult> verifyFaceToFaceAsync(UUID faceId1, UUID faceId2)
    parameters:
    - id: faceId1
      type: add9545a
      description: <p>FaceId of the first face, comes from Face - Detect </p>
    - id: faceId2
      type: add9545a
      description: <p>FaceId of the second face, comes from Face - Detect </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
      description: <p>the observable to the VerifyResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.verifyFaceToFaceAsync(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceAsync(UUID,UUID,final ServiceCallback<VerifyResult>)
  id: verifyFaceToFaceAsync(UUID,UUID,final ServiceCallback<VerifyResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: verifyFaceToFaceAsync(UUID faceId1, UUID faceId2, final ServiceCallback<VerifyResult> serviceCallback)
  nameWithType: FacesImpl.verifyFaceToFaceAsync(UUID faceId1, UUID faceId2, final ServiceCallback<VerifyResult> serviceCallback)
  fullName: ServiceFuture<VerifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToFaceAsync(UUID faceId1, UUID faceId2, final ServiceCallback<VerifyResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 581
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Verify whether two faces belong to a same person or whether one face belongs to a person.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<VerifyResult> verifyFaceToFaceAsync(UUID faceId1, UUID faceId2, final ServiceCallback<VerifyResult> serviceCallback)
    parameters:
    - id: faceId1
      type: add9545a
      description: <p>FaceId of the first face, comes from Face - Detect </p>
    - id: faceId2
      type: add9545a
      description: <p>FaceId of the second face, comes from Face - Detect </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceWithServiceResponseAsync(UUID,UUID)
  id: verifyFaceToFaceWithServiceResponseAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: verifyFaceToFaceWithServiceResponseAsync(UUID faceId1, UUID faceId2)
  nameWithType: FacesImpl.verifyFaceToFaceWithServiceResponseAsync(UUID faceId1, UUID faceId2)
  fullName: Observable<ServiceResponse<VerifyResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToFaceWithServiceResponseAsync(UUID faceId1, UUID faceId2)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 610
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Verify whether two faces belong to a same person or whether one face belongs to a person.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<VerifyResult>> verifyFaceToFaceWithServiceResponseAsync(UUID faceId1, UUID faceId2)
    parameters:
    - id: faceId1
      type: add9545a
      description: <p>FaceId of the first face, comes from Face - Detect </p>
    - id: faceId2
      type: add9545a
      description: <p>FaceId of the second face, comes from Face - Detect </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulte7daa122
      description: <p>the observable to the VerifyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPerson(UUID,String,UUID)
  id: verifyFaceToPerson(UUID,String,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: verifyFaceToPerson(UUID faceId, String personGroupId, UUID personId)
  nameWithType: FacesImpl.verifyFaceToPerson(UUID faceId, String personGroupId, UUID personId)
  fullName: VerifyResult com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToPerson(UUID faceId, String personGroupId, UUID personId)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPerson*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 829
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Verify whether two faces belong to a same person. Compares a face Id with a Person Id.</p>

    <p></p>
  syntax:
    content: public VerifyResult verifyFaceToPerson(UUID faceId, String personGroupId, UUID personId)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId the face, comes from Face - Detect </p>
    - id: personGroupId
      type: "26831127"
      description: <p>Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in Person Groups.Create. </p>
    - id: personId
      type: add9545a
      description: <p>Specify a certain person in a person group. personId is created in Persons.Create. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
      description: <p>the VerifyResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.verifyFaceToPerson(UUID,String,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonAsync(UUID,String,UUID)
  id: verifyFaceToPersonAsync(UUID,String,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId)
  nameWithType: FacesImpl.verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId)
  fullName: Observable<VerifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 856
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Verify whether two faces belong to a same person. Compares a face Id with a Person Id.</p>

    <p></p>
  syntax:
    content: public Observable<VerifyResult> verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId the face, comes from Face - Detect </p>
    - id: personGroupId
      type: "26831127"
      description: <p>Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in Person Groups.Create. </p>
    - id: personId
      type: add9545a
      description: <p>Specify a certain person in a person group. personId is created in Persons.Create. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
      description: <p>the observable to the VerifyResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.verifyFaceToPersonAsync(UUID,String,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonAsync(UUID,String,UUID,final ServiceCallback<VerifyResult>)
  id: verifyFaceToPersonAsync(UUID,String,UUID,final ServiceCallback<VerifyResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId, final ServiceCallback<VerifyResult> serviceCallback)
  nameWithType: FacesImpl.verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId, final ServiceCallback<VerifyResult> serviceCallback)
  fullName: ServiceFuture<VerifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId, final ServiceCallback<VerifyResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 843
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Verify whether two faces belong to a same person. Compares a face Id with a Person Id.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<VerifyResult> verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId, final ServiceCallback<VerifyResult> serviceCallback)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId the face, comes from Face - Detect </p>
    - id: personGroupId
      type: "26831127"
      description: <p>Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in Person Groups.Create. </p>
    - id: personId
      type: add9545a
      description: <p>Specify a certain person in a person group. personId is created in Persons.Create. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonWithServiceResponseAsync(UUID,String,UUID)
  id: verifyFaceToPersonWithServiceResponseAsync(UUID,String,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  langs:
  - java
  name: verifyFaceToPersonWithServiceResponseAsync(UUID faceId, String personGroupId, UUID personId)
  nameWithType: FacesImpl.verifyFaceToPersonWithServiceResponseAsync(UUID faceId, String personGroupId, UUID personId)
  fullName: Observable<ServiceResponse<VerifyResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToPersonWithServiceResponseAsync(UUID faceId, String personGroupId, UUID personId)
  overload: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/faceapi/src/main/java/com/microsoft/azure/cognitiveservices/vision/faceapi/implementation/FacesImpl.java
    startLine: 874
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  summary: >-
    <p>Verify whether two faces belong to a same person. Compares a face Id with a Person Id.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<VerifyResult>> verifyFaceToPersonWithServiceResponseAsync(UUID faceId, String personGroupId, UUID personId)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId the face, comes from Face - Detect </p>
    - id: personGroupId
      type: "26831127"
      description: <p>Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in Person Groups.Create. </p>
    - id: personId
      type: add9545a
      description: <p>Specify a certain person in a person group. personId is created in Persons.Create. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulte7daa122
      description: <p>the observable to the VerifyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.FacesImpl*
  name: FacesImpl
  nameWithType: FacesImpl.FacesImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.FacesImpl
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 3690e14b
  spec.java:
  - name: APIErrorException
    fullName: APIErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face
    name: SimilarFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.SimilarFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilar*
  name: findSimilar
  nameWithType: FacesImpl.findSimilar
  fullName: List<SimilarFace> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilar
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facee7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face
    name: SimilarFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.SimilarFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facee7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face
    name: SimilarFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.SimilarFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarAsync*
  name: findSimilarAsync
  nameWithType: FacesImpl.findSimilarAsync
  fullName: ServiceFuture<List<SimilarFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilarAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facee7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face
    name: SimilarFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.SimilarFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face
    name: SimilarFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.SimilarFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.findSimilarWithServiceResponseAsync*
  name: findSimilarWithServiceResponseAsync
  nameWithType: FacesImpl.findSimilarWithServiceResponseAsync
  fullName: Observable<ServiceResponse<List<SimilarFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.findSimilarWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 2e038ed4
  spec.java:
  - name: List<UUID>
    fullName: List<UUID>
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: b36170d8
  spec.java:
  - name: FacesFindSimilarParameters
    fullName: FacesFindSimilarParameters
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.group*
  name: group
  nameWithType: FacesImpl.group
  fullName: GroupResult com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.group
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result
    name: GroupResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.GroupResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result
    name: GroupResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.GroupResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupAsync*
  name: groupAsync
  nameWithType: FacesImpl.groupAsync
  fullName: ServiceFuture<GroupResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.groupAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result
    name: GroupResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.GroupResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result
    name: GroupResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.GroupResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.groupWithServiceResponseAsync*
  name: groupWithServiceResponseAsync
  nameWithType: FacesImpl.groupWithServiceResponseAsync
  fullName: Observable<ServiceResponse<GroupResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.groupWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulta08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result
    name: IdentifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identify*
  name: identify
  nameWithType: FacesImpl.identify
  fullName: List<IdentifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identify
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulte7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result
    name: IdentifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulte7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result
    name: IdentifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyAsync*
  name: identifyAsync
  nameWithType: FacesImpl.identifyAsync
  fullName: ServiceFuture<List<IdentifyResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identifyAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulte7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result
    name: IdentifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result
    name: IdentifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.identifyWithServiceResponseAsync*
  name: identifyWithServiceResponseAsync
  nameWithType: FacesImpl.identifyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<List<IdentifyResult>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.identifyWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 8dd309d9
  spec.java:
  - name: Double
    fullName: Double
- uid: d9462080
  spec.java:
  - name: FacesIdentifyParameters
    fullName: FacesIdentifyParameters
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFace*
  name: verifyFaceToFace
  nameWithType: FacesImpl.verifyFaceToFace
  fullName: VerifyResult com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToFace
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
    name: VerifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.VerifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
    name: VerifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.VerifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceAsync*
  name: verifyFaceToFaceAsync
  nameWithType: FacesImpl.verifyFaceToFaceAsync
  fullName: ServiceFuture<VerifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToFaceAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
    name: VerifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.VerifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
    name: VerifyResult
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.VerifyResult
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToFaceWithServiceResponseAsync*
  name: verifyFaceToFaceWithServiceResponseAsync
  nameWithType: FacesImpl.verifyFaceToFaceWithServiceResponseAsync
  fullName: Observable<ServiceResponse<VerifyResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToFaceWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face
    name: DetectedFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.DetectedFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrl*
  name: detectWithUrl
  nameWithType: FacesImpl.detectWithUrl
  fullName: List<DetectedFace> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrl
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face
    name: DetectedFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.DetectedFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face
    name: DetectedFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.DetectedFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlAsync*
  name: detectWithUrlAsync
  nameWithType: FacesImpl.detectWithUrlAsync
  fullName: ServiceFuture<List<DetectedFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrlAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face
    name: DetectedFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.DetectedFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face
    name: DetectedFace
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.DetectedFace
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithUrlWithServiceResponseAsync*
  name: detectWithUrlWithServiceResponseAsync
  nameWithType: FacesImpl.detectWithUrlWithServiceResponseAsync
  fullName: Observable<ServiceResponse<List<DetectedFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithUrlWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._face_attribute_typea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._face_attribute_type
    name: FaceAttributeType
    fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceAttributeType
    href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._face_attribute_type.yml
  - name: '>'
    fullName: '>'
- uid: f5e24853
  spec.java:
  - name: FacesDetectWithUrlParameters
    fullName: FacesDetectWithUrlParameters
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPerson*
  name: verifyFaceToPerson
  nameWithType: FacesImpl.verifyFaceToPerson
  fullName: VerifyResult com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToPerson
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonAsync*
  name: verifyFaceToPersonAsync
  nameWithType: FacesImpl.verifyFaceToPersonAsync
  fullName: ServiceFuture<VerifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToPersonAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.verifyFaceToPersonWithServiceResponseAsync*
  name: verifyFaceToPersonWithServiceResponseAsync
  nameWithType: FacesImpl.verifyFaceToPersonWithServiceResponseAsync
  fullName: Observable<ServiceResponse<VerifyResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.verifyFaceToPersonWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStream*
  name: detectWithStream
  nameWithType: FacesImpl.detectWithStream
  fullName: List<DetectedFace> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStream
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamAsync*
  name: detectWithStreamAsync
  nameWithType: FacesImpl.detectWithStreamAsync
  fullName: ServiceFuture<List<DetectedFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.detectWithStreamWithServiceResponseAsync*
  name: detectWithStreamWithServiceResponseAsync
  nameWithType: FacesImpl.detectWithStreamWithServiceResponseAsync
  fullName: Observable<ServiceResponse<List<DetectedFace>>> com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl.detectWithStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
- uid: 5a311a13
  spec.java:
  - name: FacesDetectWithStreamParameters
    fullName: FacesDetectWithStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: Faces
  nameWithType: Faces
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.Faces
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi._faces" data-throw-if-not-resolved="false">Faces</xref>. </p>
  syntax:
    content: public interface Faces
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._face_a_p_i_impl
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._face_a_p_i_impl.yml
  name: FaceAPIImpl
  nameWithType: FaceAPIImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FaceAPIImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._face_a_p_i_impl" data-throw-if-not-resolved="false">FaceAPIImpl</xref> class. </p>
  syntax:
    content: public class FaceAPIImpl implements FaceAPI
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation._faces_impl.yml
  name: FacesImpl
  nameWithType: FacesImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.implementation.FacesImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi._faces" data-throw-if-not-resolved="false">Faces</xref>. </p>
  syntax: *o1
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_face.yml
  name: SimilarFace
  nameWithType: SimilarFace
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.SimilarFace
  type: Class
  summary: <p>Response body for find similar face operation. </p>
  syntax:
    content: public class SimilarFace
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.findSimilar(UUID,FindSimilarOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: findSimilar(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  nameWithType: Faces.findSimilar(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  fullName: List<SimilarFace> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.findSimilar(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  type: Method
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public List<SimilarFace> findSimilar(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call. </p>
    - id: findSimilarOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facea08ddfce
      description: <p>the List&lt;SimilarFace&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter.yml
  name: FindSimilarOptionalParameter
  nameWithType: FindSimilarOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FindSimilarOptionalParameter
  type: Class
  summary: <p>The <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter" data-throw-if-not-resolved="false">FindSimilarOptionalParameter</xref> model. </p>
  syntax:
    content: public class FindSimilarOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.findSimilarAsync(UUID,FindSimilarOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  nameWithType: Faces.findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  fullName: Observable<List<SimilarFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
  type: Method
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public Observable<List<SimilarFace>> findSimilarAsync(UUID faceId, FindSimilarOptionalParameter findSimilarOptionalParameter)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call. </p>
    - id: findSimilarOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._similar_facee7daa122
      description: <p>the observable to the List&lt;SimilarFace&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_match_mode
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_match_mode.yml
  name: FindSimilarMatchMode
  nameWithType: FindSimilarMatchMode
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FindSimilarMatchMode
  type: Enum
  summary: <p>Defines values for <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.models._find_similar_match_mode" data-throw-if-not-resolved="false">FindSimilarMatchMode</xref>. </p>
  syntax:
    content: public enum FindSimilarMatchMode
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.findSimilar()
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: findSimilar()
  nameWithType: Faces.findSimilar()
  fullName: FacesFindSimilarDefinitionStages.WithFaceId com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.findSimilar()
  type: Method
  summary: >-
    <p>Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</p>

    <p></p>
  syntax:
    content: public FacesFindSimilarDefinitionStages.WithFaceId findSimilar()
    return:
      type: c54d5684
      description: <p>the first stage of the findSimilar call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result.yml
  name: GroupResult
  nameWithType: GroupResult
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.GroupResult
  type: Class
  summary: <p>An array of face groups based on face similarity. </p>
  syntax:
    content: public class GroupResult
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.group(List<UUID>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: group(List<UUID> faceIds)
  nameWithType: Faces.group(List<UUID> faceIds)
  fullName: GroupResult com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.group(List<UUID> faceIds)
  type: Method
  summary: >-
    <p>Divide candidate faces into groups based on face similarity.</p>

    <p></p>
  syntax:
    content: public GroupResult group(List<UUID> faceIds)
    parameters:
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of candidate faceId created by Face - Detect. The maximum is 1000 faces. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_result
      description: <p>the GroupResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.groupAsync(List<UUID>)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: groupAsync(List<UUID> faceIds)
  nameWithType: Faces.groupAsync(List<UUID> faceIds)
  fullName: Observable<GroupResult> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.groupAsync(List<UUID> faceIds)
  type: Method
  summary: >-
    <p>Divide candidate faces into groups based on face similarity.</p>

    <p></p>
  syntax:
    content: public Observable<GroupResult> groupAsync(List<UUID> faceIds)
    parameters:
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of candidate faceId created by Face - Detect. The maximum is 1000 faces. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.faceapi.models._group_resulta08ddfce
      description: <p>the observable to the GroupResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_result.yml
  name: IdentifyResult
  nameWithType: IdentifyResult
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyResult
  type: Class
  summary: <p>Response body for identify face operation. </p>
  syntax:
    content: public class IdentifyResult
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.identify(String,List<UUID>,IdentifyOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: identify(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  nameWithType: Faces.identify(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  fullName: List<IdentifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.identify(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  type: Method
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public List<IdentifyResult> identify(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
    parameters:
    - id: personGroupId
      type: "26831127"
      description: <p>PersonGroupId of the target person group, created by PersonGroups.Create. </p>
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </p>
    - id: identifyOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulta08ddfce
      description: <p>the List&lt;IdentifyResult&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter.yml
  name: IdentifyOptionalParameter
  nameWithType: IdentifyOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.IdentifyOptionalParameter
  type: Class
  summary: <p>The <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter" data-throw-if-not-resolved="false">IdentifyOptionalParameter</xref> model. </p>
  syntax:
    content: public class IdentifyOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.identifyAsync(String,List<UUID>,IdentifyOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  nameWithType: Faces.identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  fullName: Observable<List<IdentifyResult>> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
  type: Method
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public Observable<List<IdentifyResult>> identifyAsync(String personGroupId, List<UUID> faceIds, IdentifyOptionalParameter identifyOptionalParameter)
    parameters:
    - id: personGroupId
      type: "26831127"
      description: <p>PersonGroupId of the target person group, created by PersonGroups.Create. </p>
    - id: faceIds
      type: 2e038ed4
      description: <p>Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </p>
    - id: identifyOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._identify_resulte7daa122
      description: <p>the observable to the List&lt;IdentifyResult&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.identify()
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: identify()
  nameWithType: Faces.identify()
  fullName: FacesIdentifyDefinitionStages.WithPersonGroupId com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.identify()
  type: Method
  summary: >-
    <p>Identify unknown faces from a person group.</p>

    <p></p>
  syntax:
    content: public FacesIdentifyDefinitionStages.WithPersonGroupId identify()
    return:
      type: 2bec8f11
      description: <p>the first stage of the identify call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result.yml
  name: VerifyResult
  nameWithType: VerifyResult
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.VerifyResult
  type: Class
  summary: <p>Result of the verify operation. </p>
  syntax:
    content: public class VerifyResult
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.verifyFaceToFace(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: verifyFaceToFace(UUID faceId1, UUID faceId2)
  nameWithType: Faces.verifyFaceToFace(UUID faceId1, UUID faceId2)
  fullName: VerifyResult com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.verifyFaceToFace(UUID faceId1, UUID faceId2)
  type: Method
  summary: >-
    <p>Verify whether two faces belong to a same person or whether one face belongs to a person.</p>

    <p></p>
  syntax:
    content: public VerifyResult verifyFaceToFace(UUID faceId1, UUID faceId2)
    parameters:
    - id: faceId1
      type: add9545a
      description: <p>FaceId of the first face, comes from Face - Detect. </p>
    - id: faceId2
      type: add9545a
      description: <p>FaceId of the second face, comes from Face - Detect. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
      description: <p>the VerifyResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.verifyFaceToFaceAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: verifyFaceToFaceAsync(UUID faceId1, UUID faceId2)
  nameWithType: Faces.verifyFaceToFaceAsync(UUID faceId1, UUID faceId2)
  fullName: Observable<VerifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.verifyFaceToFaceAsync(UUID faceId1, UUID faceId2)
  type: Method
  summary: >-
    <p>Verify whether two faces belong to a same person or whether one face belongs to a person.</p>

    <p></p>
  syntax:
    content: public Observable<VerifyResult> verifyFaceToFaceAsync(UUID faceId1, UUID faceId2)
    parameters:
    - id: faceId1
      type: add9545a
      description: <p>FaceId of the first face, comes from Face - Detect. </p>
    - id: faceId2
      type: add9545a
      description: <p>FaceId of the second face, comes from Face - Detect. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
      description: <p>the observable to the VerifyResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_face.yml
  name: DetectedFace
  nameWithType: DetectedFace
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.DetectedFace
  type: Class
  summary: <p>Detected Face object. </p>
  syntax:
    content: public class DetectedFace
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithUrl(String,DetectWithUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: detectWithUrl(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  nameWithType: Faces.detectWithUrl(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  fullName: List<DetectedFace> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.detectWithUrl(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  type: Method
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public List<DetectedFace> detectWithUrl(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: detectWithUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facea08ddfce
      description: <p>the List&lt;DetectedFace&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter.yml
  name: DetectWithUrlOptionalParameter
  nameWithType: DetectWithUrlOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.DetectWithUrlOptionalParameter
  type: Class
  summary: <p>The <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter" data-throw-if-not-resolved="false">DetectWithUrlOptionalParameter</xref> model. </p>
  syntax:
    content: public class DetectWithUrlOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithUrlAsync(String,DetectWithUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  nameWithType: Faces.detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  fullName: Observable<List<DetectedFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
  type: Method
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public Observable<List<DetectedFace>> detectWithUrlAsync(String url, DetectWithUrlOptionalParameter detectWithUrlOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: detectWithUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_url_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
      description: <p>the observable to the List&lt;DetectedFace&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._face_attribute_type
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._face_attribute_type.yml
  name: FaceAttributeType
  nameWithType: FaceAttributeType
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceAttributeType
  type: Enum
  summary: <p>Defines values for <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.models._face_attribute_type" data-throw-if-not-resolved="false">FaceAttributeType</xref>. </p>
  syntax:
    content: public enum FaceAttributeType
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithUrl()
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: detectWithUrl()
  nameWithType: Faces.detectWithUrl()
  fullName: FacesDetectWithUrlDefinitionStages.WithUrl com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.detectWithUrl()
  type: Method
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public FacesDetectWithUrlDefinitionStages.WithUrl detectWithUrl()
    return:
      type: 6747f313
      description: <p>the first stage of the detectWithUrl call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.verifyFaceToPerson(UUID,String,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: verifyFaceToPerson(UUID faceId, String personGroupId, UUID personId)
  nameWithType: Faces.verifyFaceToPerson(UUID faceId, String personGroupId, UUID personId)
  fullName: VerifyResult com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.verifyFaceToPerson(UUID faceId, String personGroupId, UUID personId)
  type: Method
  summary: >-
    <p>Verify whether two faces belong to a same person. Compares a face Id with a Person Id.</p>

    <p></p>
  syntax:
    content: public VerifyResult verifyFaceToPerson(UUID faceId, String personGroupId, UUID personId)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId the face, comes from Face - Detect. </p>
    - id: personGroupId
      type: "26831127"
      description: <p>Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in Person Groups.Create. </p>
    - id: personId
      type: add9545a
      description: <p>Specify a certain person in a person group. personId is created in Persons.Create. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_result
      description: <p>the VerifyResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.verifyFaceToPersonAsync(UUID,String,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId)
  nameWithType: Faces.verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId)
  fullName: Observable<VerifyResult> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId)
  type: Method
  summary: >-
    <p>Verify whether two faces belong to a same person. Compares a face Id with a Person Id.</p>

    <p></p>
  syntax:
    content: public Observable<VerifyResult> verifyFaceToPersonAsync(UUID faceId, String personGroupId, UUID personId)
    parameters:
    - id: faceId
      type: add9545a
      description: <p>FaceId the face, comes from Face - Detect. </p>
    - id: personGroupId
      type: "26831127"
      description: <p>Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in Person Groups.Create. </p>
    - id: personId
      type: add9545a
      description: <p>Specify a certain person in a person group. personId is created in Persons.Create. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.faceapi.models._verify_resulta08ddfce
      description: <p>the observable to the VerifyResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithStream(byte [],DetectWithStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: detectWithStream(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  nameWithType: Faces.detectWithStream(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  fullName: List<DetectedFace> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.detectWithStream(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  type: Method
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public List<DetectedFace> detectWithStream(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: detectWithStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facea08ddfce
      description: <p>the List&lt;DetectedFace&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter.yml
  name: DetectWithStreamOptionalParameter
  nameWithType: DetectWithStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.DetectWithStreamOptionalParameter
  type: Class
  summary: <p>The <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter" data-throw-if-not-resolved="false">DetectWithStreamOptionalParameter</xref> model. </p>
  syntax:
    content: public class DetectWithStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithStreamAsync(byte [],DetectWithStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  nameWithType: Faces.detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  fullName: Observable<List<DetectedFace>> com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
  type: Method
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public Observable<List<DetectedFace>> detectWithStreamAsync(byte[] image, DetectWithStreamOptionalParameter detectWithStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: detectWithStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.faceapi.models._detect_with_stream_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.faceapi.models._detected_facee7daa122
      description: <p>the observable to the List&lt;DetectedFace&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.detectWithStream()
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi._faces
  href: com.microsoft.azure.cognitiveservices.vision.faceapi._faces.yml
  name: detectWithStream()
  nameWithType: Faces.detectWithStream()
  fullName: FacesDetectWithStreamDefinitionStages.WithImage com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.detectWithStream()
  type: Method
  summary: >-
    <p>Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</p>

    <p></p>
  syntax:
    content: public FacesDetectWithStreamDefinitionStages.WithImage detectWithStream()
    return:
      type: 876b87ee
      description: <p>the first stage of the detectWithStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models._a_p_i_error_exception
  parent: com.microsoft.azure.cognitiveservices.vision.faceapi.models
  href: com.microsoft.azure.cognitiveservices.vision.faceapi.models._a_p_i_error_exception.yml
  name: APIErrorException
  nameWithType: APIErrorException
  fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.APIErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref uid="com.microsoft.azure.cognitiveservices.vision.faceapi.models._a_p_i_error" data-throw-if-not-resolved="false">APIError</xref> information. </p>
  syntax:
    content: public class APIErrorException
