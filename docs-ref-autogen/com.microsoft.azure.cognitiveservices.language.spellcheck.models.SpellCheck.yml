### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck"
fullName: "com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck"
name: "SpellCheck"
nameWithType: "SpellCheck"
summary: "The Spell<wbr>Check model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.cognitiveservices.language.spellcheck.models.ResponseBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.cognitiveservices.language.spellcheck.models.Identifiable?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.cognitiveservices.language.spellcheck.models.Response?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.cognitiveservices.language.spellcheck.models.Answer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.cognitiveservices.language.spellcheck.models.Identifiable.id()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SpellCheck extends Answer"
constructors:
- uid: "com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck.SpellCheck()"
  fullName: "com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck.SpellCheck()"
  name: "SpellCheck()"
  nameWithType: "SpellCheck.SpellCheck()"
  syntax: "public SpellCheck()"
methods:
- uid: "com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck.flaggedTokens()"
  fullName: "com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck.flaggedTokens()"
  name: "flaggedTokens()"
  nameWithType: "SpellCheck.flaggedTokens()"
  summary: "Get the flagged<wbr>Tokens value."
  syntax: "public List<SpellingFlaggedToken> flaggedTokens()"
  desc: "Get the flaggedTokens value."
  returns:
    description: "the flaggedTokens value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellingFlaggedToken?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellingFlaggedToken&text=SpellingFlaggedToken\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck.withFlaggedTokens(java.util.List<com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellingFlaggedToken>)"
  fullName: "com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck.withFlaggedTokens(List<SpellingFlaggedToken> flaggedTokens)"
  name: "withFlaggedTokens(List<SpellingFlaggedToken> flaggedTokens)"
  nameWithType: "SpellCheck.withFlaggedTokens(List<SpellingFlaggedToken> flaggedTokens)"
  summary: "Set the flagged<wbr>Tokens value."
  parameters:
  - description: "the flaggedTokens value to set"
    name: "flaggedTokens"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellingFlaggedToken?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellingFlaggedToken&text=SpellingFlaggedToken\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SpellCheck withFlaggedTokens(List<SpellingFlaggedToken> flaggedTokens)"
  desc: "Set the flaggedTokens value."
  returns:
    description: "the SpellCheck object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheck&text=SpellCheck\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The SpellCheck model."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.language.spellcheck.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-spellcheck:1.0.2
