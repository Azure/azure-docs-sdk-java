### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder"
fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder"
name: "SchemaRegistryClientBuilder"
nameWithType: "SchemaRegistryClientBuilder"
summary: "Fluent builder for interacting with the Schema Registry service via <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> and <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SchemaRegistryClientBuilder implements ConfigurationTrait<SchemaRegistryClientBuilder>, HttpTrait<SchemaRegistryClientBuilder>, TokenCredentialTrait<SchemaRegistryClientBuilder>"
constructors:
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.SchemaRegistryClientBuilder()"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.SchemaRegistryClientBuilder()"
  name: "SchemaRegistryClientBuilder()"
  nameWithType: "SchemaRegistryClientBuilder.SchemaRegistryClientBuilder()"
  summary: "Constructor for Schema<wbr>Registry<wbr>Client<wbr>Builder."
  syntax: "public SchemaRegistryClientBuilder()"
  desc: "Constructor for SchemaRegistryClientBuilder. Supplies client defaults."
methods:
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  name: "addPolicy(HttpPipelinePolicy policy)"
  nameWithType: "SchemaRegistryClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  summary: "Adds a <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref> to apply on each request sent."
  parameters:
  - description: "A <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref>."
    name: "policy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder addPolicy(HttpPipelinePolicy policy)"
  desc: "Adds a <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref> to apply on each request sent.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "The updated <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.buildAsyncClient()"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "SchemaRegistryClientBuilder.buildAsyncClient()"
  summary: "Creates a <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> based on options set in the builder."
  syntax: "public SchemaRegistryAsyncClient buildAsyncClient()"
  desc: "Creates a <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> based on options set in the builder. Every time `buildClient()` is called a new instance of <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> is created. If <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline\"></xref> is set, then all HTTP pipeline related settings are ignored."
  returns:
    description: "A <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> with the options set from the builder."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient?alt=com.azure.data.schemaregistry.SchemaRegistryAsyncClient&text=SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.buildClient()"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "SchemaRegistryClientBuilder.buildClient()"
  summary: "Creates synchronous <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref> instance."
  syntax: "public SchemaRegistryClient buildClient()"
  desc: "Creates synchronous <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref> instance. See async builder method for options validation."
  returns:
    description: "<xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref> with the options set from the builder."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClient?alt=com.azure.data.schemaregistry.SchemaRegistryClient&text=SchemaRegistryClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.clientOptions(ClientOptions clientOptions)"
  name: "clientOptions(ClientOptions clientOptions)"
  nameWithType: "SchemaRegistryClientBuilder.clientOptions(ClientOptions clientOptions)"
  summary: "Allows for setting common properties such as application ID, headers, proxy configuration, etc."
  parameters:
  - description: "A configured instance of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClientOptions\"></xref>."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder clientOptions(ClientOptions clientOptions)"
  desc: "Allows for setting common properties such as application ID, headers, proxy configuration, etc. Note that it is recommended that this method be called with an instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClientOptions\"></xref> class (a subclass of the <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> base class). The HttpClientOptions subclass provides more configuration options suitable for HTTP clients, which is applicable for any class that implements this HttpTrait interface.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "The updated SchemaRegistryClientBuilder object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "SchemaRegistryClientBuilder.configuration(Configuration configuration)"
  summary: "Sets the configuration store that is used during construction of the service client."
  parameters:
  - description: "The configuration store used to"
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder configuration(Configuration configuration)"
  desc: "Sets the configuration store that is used during construction of the service client. The default configuration store is a clone of the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"global\n configuration store\"></xref>, use <xref uid=\"com.azure.core.util.Configuration.NONE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#NONE\"></xref> to bypass using configuration settings during construction."
  returns:
    description: "The updated SchemaRegistryClientBuilder object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.credential(TokenCredential credential)"
  name: "credential(TokenCredential credential)"
  nameWithType: "SchemaRegistryClientBuilder.credential(TokenCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder credential(TokenCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service. Refer to the Azure SDK for Java [identity and authentication][] documentation for more details on proper usage of the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> type.\n\n\n[identity and authentication]: https://aka.ms/azsdk/java/docs/identity"
  returns:
    description: "The updated <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.fullyQualifiedNamespace(java.lang.String)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.fullyQualifiedNamespace(String fullyQualifiedNamespace)"
  name: "fullyQualifiedNamespace(String fullyQualifiedNamespace)"
  nameWithType: "SchemaRegistryClientBuilder.fullyQualifiedNamespace(String fullyQualifiedNamespace)"
  summary: "Sets the fully qualified namespace for the Azure Schema Registry instance."
  parameters:
  - description: "The fully qualified namespace of the Azure Schema Registry instance."
    name: "fullyQualifiedNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder fullyQualifiedNamespace(String fullyQualifiedNamespace)"
  desc: "Sets the fully qualified namespace for the Azure Schema Registry instance. This is likely to be similar to **\"\\{your-namespace\\}.servicebus.windows.net\"**."
  returns:
    description: "The updated <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.httpClient(HttpClient httpClient)"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "SchemaRegistryClientBuilder.httpClient(HttpClient httpClient)"
  summary: "Sets the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for sending and receiving requests to and from the service."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for requests."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder httpClient(HttpClient httpClient)"
  desc: "Sets the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for sending and receiving requests to and from the service.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "The updated <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "SchemaRegistryClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to and from the service."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to\n and from the service."
    name: "logOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder httpLogOptions(HttpLogOptions logOptions)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to and from the service. If a `logLevel` is not provided, default value of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogDetailLevel#NONE\"></xref> is set.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "The updated <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.pipeline(HttpPipeline httpPipeline)"
  name: "pipeline(HttpPipeline httpPipeline)"
  nameWithType: "SchemaRegistryClientBuilder.pipeline(HttpPipeline httpPipeline)"
  summary: "Sets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for the service client."
  parameters:
  - description: "<xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for sending service requests and receiving responses."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder pipeline(HttpPipeline httpPipeline)"
  desc: "Sets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for the service client.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications.\n\nIf `pipeline` is set, all other HTTP settings are ignored to build <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.retryOptions(RetryOptions retryOptions)"
  name: "retryOptions(RetryOptions retryOptions)"
  nameWithType: "SchemaRegistryClientBuilder.retryOptions(RetryOptions retryOptions)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> for all the requests made through the client."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> to use for all the requests made through the client."
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.http.policy.RetryOptions?alt=com.azure.core.http.policy.RetryOptions&text=RetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder retryOptions(RetryOptions retryOptions)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> for all the requests made through the client.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications.\n\nSetting this is mutually exclusive with using <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retryPolicy(RetryPolicy)\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  name: "retryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "SchemaRegistryClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.RetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicy\"></xref> that is used when each request is sent."
  parameters:
  - description: "user's retry policy applied to each request."
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.http.policy.RetryPolicy?alt=com.azure.core.http.policy.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder retryPolicy(RetryPolicy retryPolicy)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.RetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicy\"></xref> that is used when each request is sent.\n\nThe default retry policy will be used if not provided to build <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> .\n\nSetting this is mutually exclusive with using <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retryOptions(RetryOptions)\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.serviceVersion(com.azure.core.util.ServiceVersion)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.serviceVersion(ServiceVersion serviceVersion)"
  name: "serviceVersion(ServiceVersion serviceVersion)"
  nameWithType: "SchemaRegistryClientBuilder.serviceVersion(ServiceVersion serviceVersion)"
  summary: "Sets the service version to use."
  parameters:
  - description: "Service version."
    name: "serviceVersion"
    type: "<xref href=\"com.azure.core.util.ServiceVersion?alt=com.azure.core.util.ServiceVersion&text=ServiceVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryClientBuilder serviceVersion(ServiceVersion serviceVersion)"
  desc: "Sets the service version to use."
  returns:
    description: "The updated instance."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Fluent builder for interacting with the Schema Registry service via <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> and <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref>. To build the client, the builder requires the service endpoint of the Schema Registry and an Azure AD credential.\n\n**Instantiating the client**\n\n```java\n// AAD credential to authorize with Schema Registry service.\n DefaultAzureCredential azureCredential = new DefaultAzureCredentialBuilder()\n     .build();\n SchemaRegistryClient client = new SchemaRegistryClientBuilder()\n     .fullyQualifiedNamespace(\"https://<your-schema-registry-endpoint>.servicebus.windows.net\")\n     .credential(azureCredential)\n     .buildClient();\n```\n\n**Instantiating the async client**\n\n```java\n// AAD credential to authorize with Schema Registry service.\n DefaultAzureCredential azureCredential = new DefaultAzureCredentialBuilder()\n     .build();\n SchemaRegistryAsyncClient client = new SchemaRegistryClientBuilder()\n     .fullyQualifiedNamespace(\"https://<your-schema-registry-endpoint>.servicebus.windows.net\")\n     .credential(azureCredential)\n     .buildAsyncClient();\n```\n\n**Instantiating with custom retry policy and HTTP log options**\n\n```java\nDefaultAzureCredential azureCredential = new DefaultAzureCredentialBuilder()\n     .build();\n\n HttpLogOptions httpLogOptions = new HttpLogOptions()\n     .setLogLevel(HttpLogDetailLevel.BODY)\n     .setPrettyPrintBody(true);\n\n RetryPolicy retryPolicy = new RetryPolicy(new FixedDelay(5, Duration.ofSeconds(30)));\n SchemaRegistryAsyncClient client = new SchemaRegistryClientBuilder()\n     .fullyQualifiedNamespace(\"https://<your-schema-registry-endpoint>.servicebus.windows.net\")\n     .httpLogOptions(httpLogOptions)\n     .retryPolicy(retryPolicy)\n     .credential(azureCredential)\n     .buildAsyncClient();\n```"
implements:
- "<xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.HttpTrait?alt=com.azure.core.client.traits.HttpTrait&text=HttpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder?alt=com.azure.data.schemaregistry.SchemaRegistryClientBuilder&text=SchemaRegistryClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.data.schemaregistry"
artifact: com.azure:azure-data-schemaregistry:1.2.3
