### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  id: _bing_images_impl
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  children:
  - com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.BingImagesImpl(Retrofit,BingVisualSearchAPIImpl)
  - com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearch()
  - com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearch(VisualSearchOptionalParameter)
  - com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchAsync(VisualSearchOptionalParameter)
  - com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchAsync(VisualSearchOptionalParameter,final ServiceCallback<ImageKnowledge>)
  - com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchWithServiceResponseAsync(String,String,String,String,String,String,String,byte [])
  - com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchWithServiceResponseAsync(VisualSearchOptionalParameter)
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  langs:
  - java
  name: BingImagesImpl
  nameWithType: BingImagesImpl
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl
  type: Class
  source:
    remote: &o0
      path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
    startLine: 35
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images" data-throw-if-not-resolved="false">BingImages</xref>. </p>
  syntax: &o1
    content: public class BingImagesImpl implements BingImages
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.BingImagesImpl(Retrofit,BingVisualSearchAPIImpl)
  id: BingImagesImpl(Retrofit,BingVisualSearchAPIImpl)
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  langs:
  - java
  name: BingImagesImpl(Retrofit retrofit, BingVisualSearchAPIImpl client)
  nameWithType: BingImagesImpl.BingImagesImpl(Retrofit retrofit, BingVisualSearchAPIImpl client)
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.BingImagesImpl(Retrofit retrofit, BingVisualSearchAPIImpl client)
  overload: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.BingImagesImpl*
  type: Constructor
  source:
    remote: *o0
    path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
    startLine: 47
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  summary: >-
    <p>Initializes an instance of <xref uid="com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl" data-throw-if-not-resolved="false">BingImagesImpl</xref>.</p>

    <p></p>
  syntax:
    content: public BingImagesImpl(Retrofit retrofit, BingVisualSearchAPIImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation_23ccc7c12c51d6607f5fccb7cea464e3
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearch()
  id: visualSearch()
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  langs:
  - java
  name: visualSearch()
  nameWithType: BingImagesImpl.visualSearch()
  fullName: BingImagesVisualSearchParameters com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearch()
  overload: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearch*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
    startLine: 167
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public BingImagesVisualSearchParameters visualSearch()
    return:
      type: f8e3d08a
      description: <p>the first stage of the visualSearch call </p>
  overridden: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.visualSearch()
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearch(VisualSearchOptionalParameter)
  id: visualSearch(VisualSearchOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  langs:
  - java
  name: visualSearch(VisualSearchOptionalParameter visualSearchOptionalParameter)
  nameWithType: BingImagesImpl.visualSearch(VisualSearchOptionalParameter visualSearchOptionalParameter)
  fullName: ImageKnowledge com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearch(VisualSearchOptionalParameter visualSearchOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearch*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
    startLine: 73
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public ImageKnowledge visualSearch(VisualSearchOptionalParameter visualSearchOptionalParameter)
    parameters:
    - id: visualSearchOptionalParameter
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge
      description: <p>the ImageKnowledge object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.visualSearch(VisualSearchOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchAsync(VisualSearchOptionalParameter)
  id: visualSearchAsync(VisualSearchOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  langs:
  - java
  name: visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  nameWithType: BingImagesImpl.visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  fullName: Observable<ImageKnowledge> com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
    startLine: 96
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public Observable<ImageKnowledge> visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
    parameters:
    - id: visualSearchOptionalParameter
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgea08ddfce
      description: <p>the observable to the ImageKnowledge object </p>
  overridden: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.visualSearchAsync(VisualSearchOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchAsync(VisualSearchOptionalParameter,final ServiceCallback<ImageKnowledge>)
  id: visualSearchAsync(VisualSearchOptionalParameter,final ServiceCallback<ImageKnowledge>)
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  langs:
  - java
  name: visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter, final ServiceCallback<ImageKnowledge> serviceCallback)
  nameWithType: BingImagesImpl.visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter, final ServiceCallback<ImageKnowledge> serviceCallback)
  fullName: ServiceFuture<ImageKnowledge> com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter, final ServiceCallback<ImageKnowledge> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
    startLine: 85
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ImageKnowledge> visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter, final ServiceCallback<ImageKnowledge> serviceCallback)
    parameters:
    - id: visualSearchOptionalParameter
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchWithServiceResponseAsync(String,String,String,String,String,String,String,byte [])
  id: visualSearchWithServiceResponseAsync(String,String,String,String,String,String,String,byte [])
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  langs:
  - java
  name: visualSearchWithServiceResponseAsync(String acceptLanguage, String contentType, String userAgent, String clientId, String clientIp, String location, String knowledgeRequest, byte[] image)
  nameWithType: BingImagesImpl.visualSearchWithServiceResponseAsync(String acceptLanguage, String contentType, String userAgent, String clientId, String clientIp, String location, String knowledgeRequest, byte[] image)
  fullName: Observable<ServiceResponse<ImageKnowledge>> com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearchWithServiceResponseAsync(String acceptLanguage, String contentType, String userAgent, String clientId, String clientIp, String location, String knowledgeRequest, byte[] image)
  overload: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
    startLine: 139
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<ImageKnowledge>> visualSearchWithServiceResponseAsync(String acceptLanguage, String contentType, String userAgent, String clientId, String clientIp, String location, String knowledgeRequest, byte[] image)
    parameters:
    - id: acceptLanguage
      type: "26831127"
      description: <p>A comma-delimited list of one or more languages to use for user interface strings. The list is in decreasing order of preference. For additional information, including expected format, see [RFC2616](<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a>). This header and the [setLang](<a href="https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang">https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang</a>) query parameter are mutually exclusive; do not specify both. If you set this header, you must also specify the [cc](<a href="https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#cc">https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#cc</a>) query parameter. To determine the market to return results for, Bing uses the first supported language it finds from the list and combines it with the cc parameter value. If the list does not include a supported language, Bing finds the closest language and market that supports the request or it uses an aggregated or default market for the results. To determine the market that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter only if you specify multiple languages. Otherwise, use the [mkt](<a href="https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#mkt">https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#mkt</a>) and [setLang](<a href="https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang">https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang</a>) query parameters. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Any links to Bing.com properties in the response objects apply the specified language. </p>
    - id: contentType
      type: "26831127"
      description: <p>Must be set to multipart/form-data and include a boundary parameter (for example, multipart/form-data; boundary=&lt;boundary string&gt;). For more details, see [Content form types]( <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/overview#content-form-types">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/overview#content-form-types</a>). </p>
    - id: userAgent
      type: "26831127"
      description: '<p>The user agent originating the request. Bing uses the user agent to provide mobile users with an optimized experience. Although optional, you are encouraged to always specify this header. The user-agent should be the same string that any commonly used browser sends. For information about user agents, see [RFC 2616](<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a>). The following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53. </p>'
    - id: clientId
      type: "26831127"
      description: "<p>Bing uses this header to provide users with consistent behavior across Bing API calls. Bing often flights new features and improvements, and it uses the client ID as a key for assigning traffic on different flights. If you do not use the same client ID for a user across multiple requests, then Bing may assign the user to multiple conflicting flights. Being assigned to multiple conflicting flights can lead to an inconsistent user experience. For example, if the second request has a different flight assignment than the first, the experience may be unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search history, providing a richer experience for the user. Bing also uses this header to help improve result rankings by analyzing the activity generated by a client ID. The relevance improvements help with better quality of results delivered by Bing APIs and in turn enables higher click-through rates for the API consumer. IMPORTANT: Although optional, you should consider this header required. Persisting the client ID across multiple requests for the same end user and device combination enables 1) the API consumer to receive a consistent user experience, and 2) higher click-through rates via better quality of results from the Bing APIs. Each user that uses your application on the device must have a unique, Bing generated client ID. If you do not include this header in the request, Bing generates an ID and returns it in the X-MSEdge-ClientID response header. The only time that you should NOT include this header in a request is the first time the user uses your app on that device. Use the client ID for each Bing API request that your app makes for this user on the device. Persist the client ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the device's persistent storage to persist the ID. The next time the user uses your app on that device, get the client ID that you persisted. Bing responses may or may not include this header. If the response includes this header, capture the client ID and use it for all subsequent Bing requests for the user on that device. ATTENTION: You must ensure that this Client ID is not linkable to any authenticatable user account information. If you include the X-MSEdge-ClientID, you must not include cookies in the request. </p>"
    - id: clientIp
      type: "26831127"
      description: <p>The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's location. Bing uses the location information to determine safe search behavior. Although optional, you are encouraged to always specify this header and the X-Search-Location header. Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the address results in the location not being anywhere near the device's actual location, which may result in Bing serving erroneous results. </p>
    - id: location
      type: "26831127"
      description: "<p>A semicolon-delimited list of key/value pairs that describe the client's geographical location. Bing uses the location information to determine safe search behavior and to return relevant local content. Specify the key/value pair as &lt;key&gt;:&lt;value&gt;. The following are the keys that you use to specify the user's location. lat (required): The latitude of the client's location, in degrees. The latitude must be greater than or equal to -90.0 and less than or equal to +90.0. Negative values indicate southern latitudes and positive values indicate northern latitudes. long (required): The longitude of the client's location, in degrees. The longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative values indicate western longitudes and positive values indicate eastern longitudes. re (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates. Pass the value returned by the device's location service. Typical values might be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp is the number of seconds since January 1, 1970.) head (optional): The client's relative heading or direction of travel. Specify the direction of travel as degrees from 0 through 360, counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp (optional): The horizontal velocity (speed), in meters per second, that the client device is traveling. alt (optional): The altitude of the client device, in meters. are (optional): The radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key only if you specify the alt key. Although many of the keys are optional, the more information that you provide, the more accurate the location results are. Although optional, you are encouraged to always specify the user's geographical location. Providing the location is especially important if the client's IP address does not accurately reflect the user's physical location (for example, if the client uses VPN). For optimal results, you should include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include this header. </p>"
    - id: knowledgeRequest
      type: "26831127"
      description: <p>The form data is a JSON object that identifies the image using an insights token or URL to the image. The object may also include an optional crop area that identifies an area of interest in the image. The insights token and URL are mutually exclusive – do not specify both. You may specify knowledgeRequest form data and image form data in the same request only if knowledgeRequest form data specifies the cropArea field only (it must not include an insights token or URL). </p>
    - id: image
      type: ccd9418d
      description: <p>The form data is an image binary. The Content-Disposition header's filename parameter must be set to "image". You must specify an image binary if you do not use knowledgeRequest form data to specify the image; you may not use both forms to specify an image. You may specify knowledgeRequest form data and image form data in the same request only if knowledgeRequest form data specifies the cropArea field only (it must not include an insights token or URL). </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgee7daa122
      description: <p>the observable to the ImageKnowledge object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchWithServiceResponseAsync(VisualSearchOptionalParameter)
  id: visualSearchWithServiceResponseAsync(VisualSearchOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  langs:
  - java
  name: visualSearchWithServiceResponseAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  nameWithType: BingImagesImpl.visualSearchWithServiceResponseAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  fullName: Observable<ServiceResponse<ImageKnowledge>> com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearchWithServiceResponseAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/search/bingvisualsearch/src/main/java/com/microsoft/azure/cognitiveservices/search/visualsearch/implementation/BingImagesImpl.java
    startLine: 112
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<ImageKnowledge>> visualSearchWithServiceResponseAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
    parameters:
    - id: visualSearchOptionalParameter
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgee7daa122
      description: <p>the observable to the ImageKnowledge object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.BingImagesImpl*
  name: BingImagesImpl
  nameWithType: BingImagesImpl.BingImagesImpl
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.BingImagesImpl
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 00ad4777
  spec.java:
  - name: ErrorResponseException
    fullName: ErrorResponseException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearch*
  name: visualSearch
  nameWithType: BingImagesImpl.visualSearch
  fullName: ImageKnowledge com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearch
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge
    name: ImageKnowledge
    fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.ImageKnowledge
    href: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge
    name: ImageKnowledge
    fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.ImageKnowledge
    href: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchAsync*
  name: visualSearchAsync
  nameWithType: BingImagesImpl.visualSearchAsync
  fullName: ServiceFuture<ImageKnowledge> com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearchAsync
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge
    name: ImageKnowledge
    fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.ImageKnowledge
    href: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge
    name: ImageKnowledge
    fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.ImageKnowledge
    href: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.visualSearchWithServiceResponseAsync*
  name: visualSearchWithServiceResponseAsync
  nameWithType: BingImagesImpl.visualSearchWithServiceResponseAsync
  fullName: Observable<ServiceResponse<ImageKnowledge>> com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl.visualSearchWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: f8e3d08a
  spec.java:
  - name: BingImagesVisualSearchParameters
    fullName: BingImagesVisualSearchParameters
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch
  href: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.yml
  name: BingImages
  nameWithType: BingImages
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.BingImages
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images" data-throw-if-not-resolved="false">BingImages</xref>. </p>
  syntax:
    content: public interface BingImages
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation_23ccc7c12c51d6607f5fccb7cea464e3
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation_23ccc7c12c51d6607f5fccb7cea464e3.yml
  name: BingVisualSearchAPIImpl
  nameWithType: BingVisualSearchAPIImpl
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingVisualSearchAPIImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref uid="com.microsoft.azure.cognitiveservices.search.visualsearch.implementation_23ccc7c12c51d6607f5fccb7cea464e3" data-throw-if-not-resolved="false">BingVisualSearchAPIImpl</xref> class. </p>
  syntax:
    content: public class BingVisualSearchAPIImpl
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation._bing_images_impl.yml
  name: BingImagesImpl
  nameWithType: BingImagesImpl
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.implementation.BingImagesImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images" data-throw-if-not-resolved="false">BingImages</xref>. </p>
  syntax: *o1
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.models
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge.yml
  name: ImageKnowledge
  nameWithType: ImageKnowledge
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.ImageKnowledge
  type: Class
  summary: <p>The <xref uid="com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge" data-throw-if-not-resolved="false">ImageKnowledge</xref> model. </p>
  syntax:
    content: public class ImageKnowledge
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.visualSearch(VisualSearchOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images
  href: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.yml
  name: visualSearch(VisualSearchOptionalParameter visualSearchOptionalParameter)
  nameWithType: BingImages.visualSearch(VisualSearchOptionalParameter visualSearchOptionalParameter)
  fullName: ImageKnowledge com.microsoft.azure.cognitiveservices.search.visualsearch.BingImages.visualSearch(VisualSearchOptionalParameter visualSearchOptionalParameter)
  type: Method
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public ImageKnowledge visualSearch(VisualSearchOptionalParameter visualSearchOptionalParameter)
    parameters:
    - id: visualSearchOptionalParameter
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledge
      description: <p>the ImageKnowledge object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.models
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter.yml
  name: VisualSearchOptionalParameter
  nameWithType: VisualSearchOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.VisualSearchOptionalParameter
  type: Class
  summary: <p>The <xref uid="com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter" data-throw-if-not-resolved="false">VisualSearchOptionalParameter</xref> model. </p>
  syntax:
    content: public class VisualSearchOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.visualSearchAsync(VisualSearchOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images
  href: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.yml
  name: visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  nameWithType: BingImages.visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  fullName: Observable<ImageKnowledge> com.microsoft.azure.cognitiveservices.search.visualsearch.BingImages.visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
  type: Method
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public Observable<ImageKnowledge> visualSearchAsync(VisualSearchOptionalParameter visualSearchOptionalParameter)
    parameters:
    - id: visualSearchOptionalParameter
      type: com.microsoft.azure.cognitiveservices.search.visualsearch.models._visual_search_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.search.visualsearch.models._image_knowledgea08ddfce
      description: <p>the observable to the ImageKnowledge object </p>
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.visualSearch()
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images
  href: com.microsoft.azure.cognitiveservices.search.visualsearch._bing_images.yml
  name: visualSearch()
  nameWithType: BingImages.visualSearch()
  fullName: BingImagesVisualSearchDefinitionStages.WithExecute com.microsoft.azure.cognitiveservices.search.visualsearch.BingImages.visualSearch()
  type: Method
  summary: >-
    <p>Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview">https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview</a>).</p>

    <p></p>
  syntax:
    content: public BingImagesVisualSearchDefinitionStages.WithExecute visualSearch()
    return:
      type: 5d4554e4
      description: <p>the first stage of the visualSearch call </p>
- uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models._error_response_exception
  parent: com.microsoft.azure.cognitiveservices.search.visualsearch.models
  href: com.microsoft.azure.cognitiveservices.search.visualsearch.models._error_response_exception.yml
  name: ErrorResponseException
  nameWithType: ErrorResponseException
  fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.ErrorResponseException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref uid="com.microsoft.azure.cognitiveservices.search.visualsearch.models._error_response" data-throw-if-not-resolved="false">ErrorResponse</xref> information. </p>
  syntax:
    content: public class ErrorResponseException
