### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluentcore.model.implementation.AcceptedImpl.newAccepted*"
fullName: "com.azure.resourcemanager.resources.fluentcore.model.implementation.AcceptedImpl<InnerT,T>.<T,InnerT>newAccepted"
name: "<T,InnerT>newAccepted"
nameWithType: "AcceptedImpl<InnerT,T>.<T,InnerT>newAccepted"
members:
- uid: "com.azure.resourcemanager.resources.fluentcore.model.implementation.AcceptedImpl.<T,InnerT>newAccepted(com.azure.core.util.logging.ClientLogger,com.azure.core.http.HttpPipeline,java.time.Duration,java.util.function.Supplier<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,java.util.function.Function<InnerT,T>,java.lang.reflect.Type,java.lang.Runnable)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.model.implementation.AcceptedImpl<InnerT,T>.<T,InnerT>newAccepted(ClientLogger logger, HttpPipeline httpPipeline, Duration pollInterval, Supplier<Response<Flux<ByteBuffer>>> activationOperation, Function<InnerT,T> convertOperation, Type innerType, Runnable preActivation)"
  name: "<T,InnerT>newAccepted(ClientLogger logger, HttpPipeline httpPipeline, Duration pollInterval, Supplier<Response<Flux<ByteBuffer>>> activationOperation, Function<InnerT,T> convertOperation, Type innerType, Runnable preActivation)"
  nameWithType: "AcceptedImpl<InnerT,T>.<T,InnerT>newAccepted(ClientLogger logger, HttpPipeline httpPipeline, Duration pollInterval, Supplier<Response<Flux<ByteBuffer>>> activationOperation, Function<InnerT,T> convertOperation, Type innerType, Runnable preActivation)"
  parameters:
  - name: "logger"
    type: "<xref href=\"com.azure.core.util.logging.ClientLogger?alt=com.azure.core.util.logging.ClientLogger&text=ClientLogger\" data-throw-if-not-resolved=\"False\" />"
  - name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - name: "activationOperation"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  - name: "convertOperation"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"InnerT?alt=InnerT&text=InnerT\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "innerType"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - name: "preActivation"
    type: "<xref href=\"java.lang.Runnable?alt=java.lang.Runnable&text=Runnable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Accepted<T> <T,InnerT>newAccepted(ClientLogger logger, HttpPipeline httpPipeline, Duration pollInterval, Supplier<Response<Flux<ByteBuffer>>> activationOperation, Function<InnerT,T> convertOperation, Type innerType, Runnable preActivation)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Accepted?alt=com.azure.resourcemanager.resources.fluentcore.model.Accepted&text=Accepted\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.model.implementation.AcceptedImpl.<T,InnerT>newAccepted(com.azure.core.util.logging.ClientLogger,com.azure.core.http.HttpPipeline,java.time.Duration,java.util.function.Supplier<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,java.util.function.Function<InnerT,T>,java.lang.reflect.Type,java.lang.Runnable,java.util.function.Consumer<InnerT>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.model.implementation.AcceptedImpl<InnerT,T>.<T,InnerT>newAccepted(ClientLogger logger, HttpPipeline httpPipeline, Duration pollInterval, Supplier<Response<Flux<ByteBuffer>>> activationOperation, Function<InnerT,T> convertOperation, Type innerType, Runnable preActivation, Consumer<InnerT> postActivation)"
  name: "<T,InnerT>newAccepted(ClientLogger logger, HttpPipeline httpPipeline, Duration pollInterval, Supplier<Response<Flux<ByteBuffer>>> activationOperation, Function<InnerT,T> convertOperation, Type innerType, Runnable preActivation, Consumer<InnerT> postActivation)"
  nameWithType: "AcceptedImpl<InnerT,T>.<T,InnerT>newAccepted(ClientLogger logger, HttpPipeline httpPipeline, Duration pollInterval, Supplier<Response<Flux<ByteBuffer>>> activationOperation, Function<InnerT,T> convertOperation, Type innerType, Runnable preActivation, Consumer<InnerT> postActivation)"
  parameters:
  - name: "logger"
    type: "<xref href=\"com.azure.core.util.logging.ClientLogger?alt=com.azure.core.util.logging.ClientLogger&text=ClientLogger\" data-throw-if-not-resolved=\"False\" />"
  - name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - name: "activationOperation"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  - name: "convertOperation"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"InnerT?alt=InnerT&text=InnerT\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "innerType"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - name: "preActivation"
    type: "<xref href=\"java.lang.Runnable?alt=java.lang.Runnable&text=Runnable\" data-throw-if-not-resolved=\"False\" />"
  - name: "postActivation"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"InnerT?alt=InnerT&text=InnerT\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Accepted<T> <T,InnerT>newAccepted(ClientLogger logger, HttpPipeline httpPipeline, Duration pollInterval, Supplier<Response<Flux<ByteBuffer>>> activationOperation, Function<InnerT,T> convertOperation, Type innerType, Runnable preActivation, Consumer<InnerT> postActivation)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Accepted?alt=com.azure.resourcemanager.resources.fluentcore.model.Accepted&text=Accepted\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.model.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
