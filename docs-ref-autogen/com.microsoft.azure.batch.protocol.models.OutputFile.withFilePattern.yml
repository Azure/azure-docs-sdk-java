### YamlMime:JavaMember
nameWithType: OutputFile.withFilePattern
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.OutputFile.withFilePattern(String filePattern)
  name: withFilePattern(String filePattern)
  nameWithType: OutputFile.withFilePattern(String filePattern)
  parameters:
  - description: <p>the filePattern value to set </p>
    name: filePattern
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OutputFile object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.OutputFile?alt=com.microsoft.azure.batch.protocol.models.OutputFile&text=OutputFile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set both relative and absolute paths are supported. Relative paths are relative to the task working directory. The following wildcards are supported: * matches 0 or more characters (for example pattern abc* would match abc or abcdef), ** matches any directory, ? matches any single character, [abc] matches one character in the brackets, and [a-c] matches one character in the range. Brackets can include a negation to match any character not specified (for example [!abc] matches any character but a, b, or c). If a file name starts with "." it is ignored by default but may be matched by specifying it explicitly (for example *.gif will not match .a.gif, but .*.gif will). A simple example: **\*.txt matches any file that does not start in '.' and ends with .txt in the task working directory or any subdirectory. If the filename contains a wildcard character it can be escaped using brackets (for example abc[*] would match a file named abc*). Note that both \ and / are treated as directory separators on Windows, but only / is on Linux. Environment variables (var% on Windows or $var on Linux) are expanded prior to the pattern being applied.</p>

    <p></p>
  syntax: public OutputFile withFilePattern(String filePattern)
  uid: com.microsoft.azure.batch.protocol.models.OutputFile.withFilePattern(String)
uid: com.microsoft.azure.batch.protocol.models.OutputFile.withFilePattern*
fullName: com.microsoft.azure.batch.protocol.models.OutputFile.withFilePattern(String filePattern)
name: withFilePattern(String filePattern)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
