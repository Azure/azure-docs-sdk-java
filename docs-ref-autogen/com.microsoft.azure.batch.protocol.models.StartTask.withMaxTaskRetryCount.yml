### YamlMime:JavaMember
nameWithType: StartTask.withMaxTaskRetryCount
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.StartTask.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  name: withMaxTaskRetryCount(Integer maxTaskRetryCount)
  nameWithType: StartTask.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  parameters:
  - description: <p>the maxTaskRetryCount value to set </p>
    name: maxTaskRetryCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the StartTask object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.StartTask?alt=com.microsoft.azure.batch.protocol.models.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.</p>

    <p></p>
  syntax: public StartTask withMaxTaskRetryCount(Integer maxTaskRetryCount)
  uid: com.microsoft.azure.batch.protocol.models.StartTask.withMaxTaskRetryCount(Integer)
uid: com.microsoft.azure.batch.protocol.models.StartTask.withMaxTaskRetryCount*
fullName: com.microsoft.azure.batch.protocol.models.StartTask.withMaxTaskRetryCount(Integer maxTaskRetryCount)
name: withMaxTaskRetryCount(Integer maxTaskRetryCount)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
