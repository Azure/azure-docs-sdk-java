### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule"
fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>"
name: "AuthorizationRule<RuleT>"
nameWithType: "AuthorizationRule<RuleT>"
summary: "Type representing authorization rule."
syntax: "public interface AuthorizationRule<RuleT> extends IndependentChildResource<ServiceBusManager,SBAuthorizationRuleInner>, Refreshable<RuleT>"
methods:
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.getKeys()"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.getKeys()"
  name: "getKeys()"
  nameWithType: "AuthorizationRule<RuleT>.getKeys()"
  modifiers:
  - "abstract"
  syntax: "public abstract AuthorizationKeys getKeys()"
  returns:
    description: "the primary, secondary keys and connection strings"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.AuthorizationKeys?alt=com.azure.resourcemanager.servicebus.models.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.getKeysAsync()"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.getKeysAsync()"
  name: "getKeysAsync()"
  nameWithType: "AuthorizationRule<RuleT>.getKeysAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<AuthorizationKeys> getKeysAsync()"
  returns:
    description: "a representation of the deferred computation of this call,\n returning the primary, secondary keys and the connection strings"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.servicebus.models.AuthorizationKeys?alt=com.azure.resourcemanager.servicebus.models.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.regenerateKey(com.azure.resourcemanager.servicebus.models.KeyType)"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.regenerateKey(KeyType keyType)"
  name: "regenerateKey(KeyType keyType)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKey(KeyType keyType)"
  summary: "Regenerates primary or secondary keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "the type for the key to regenerate"
    name: "keyType"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.KeyType?alt=com.azure.resourcemanager.servicebus.models.KeyType&text=KeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AuthorizationKeys regenerateKey(KeyType keyType)"
  desc: "Regenerates primary or secondary keys."
  returns:
    description: "primary, secondary keys and connection strings"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.AuthorizationKeys?alt=com.azure.resourcemanager.servicebus.models.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.regenerateKey(com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters)"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.regenerateKey(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  name: "regenerateKey(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKey(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  summary: "Regenerates primary or secondary keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "the parameters for the key to regenerate"
    name: "regenerateAccessKeyParameters"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters?alt=com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters&text=RegenerateAccessKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AuthorizationKeys regenerateKey(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  desc: "Regenerates primary or secondary keys."
  returns:
    description: "primary, secondary keys and connection strings"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.AuthorizationKeys?alt=com.azure.resourcemanager.servicebus.models.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.regenerateKeyAsync(com.azure.resourcemanager.servicebus.models.KeyType)"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.regenerateKeyAsync(KeyType keyType)"
  name: "regenerateKeyAsync(KeyType keyType)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKeyAsync(KeyType keyType)"
  summary: "Regenerates primary or secondary keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "the type for the key to regenerate"
    name: "keyType"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.KeyType?alt=com.azure.resourcemanager.servicebus.models.KeyType&text=KeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<AuthorizationKeys> regenerateKeyAsync(KeyType keyType)"
  desc: "Regenerates primary or secondary keys."
  returns:
    description: "a representation of the deferred computation of this call,\n returning the primary, secondary keys and the connection strings"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.servicebus.models.AuthorizationKeys?alt=com.azure.resourcemanager.servicebus.models.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.regenerateKeyAsync(com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters)"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.regenerateKeyAsync(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  name: "regenerateKeyAsync(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKeyAsync(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  summary: "Regenerates primary or secondary keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "the parameters for the key to regenerate"
    name: "regenerateAccessKeyParameters"
    type: "<xref href=\"com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters?alt=com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters&text=RegenerateAccessKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<AuthorizationKeys> regenerateKeyAsync(RegenerateAccessKeyParameters regenerateAccessKeyParameters)"
  desc: "Regenerates primary or secondary keys."
  returns:
    description: "a representation of the deferred computation of this call,\n returning the primary, secondary keys and the connection strings"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.servicebus.models.AuthorizationKeys?alt=com.azure.resourcemanager.servicebus.models.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicebus.models.AuthorizationRule.rights()"
  fullName: "com.azure.resourcemanager.servicebus.models.AuthorizationRule<RuleT>.rights()"
  name: "rights()"
  nameWithType: "AuthorizationRule<RuleT>.rights()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<AccessRights> rights()"
  returns:
    description: "rights associated with the rule"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.servicebus.models.AccessRights?alt=com.azure.resourcemanager.servicebus.models.AccessRights&text=AccessRights\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the specific rule type"
  name: "RuleT"
desc: "Type representing authorization rule."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.IndependentChildResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.IndependentChildResource&text=IndependentChildResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.servicebus.ServiceBusManager?alt=com.azure.resourcemanager.servicebus.ServiceBusManager&text=ServiceBusManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.servicebus.fluent.models.SBAuthorizationRuleInner?alt=com.azure.resourcemanager.servicebus.fluent.models.SBAuthorizationRuleInner&text=SBAuthorizationRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"RuleT?alt=RuleT&text=RuleT\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.servicebus.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicebus:2.19.0
