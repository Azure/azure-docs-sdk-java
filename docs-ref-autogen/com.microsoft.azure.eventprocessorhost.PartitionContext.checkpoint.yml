### YamlMime:JavaMember
nameWithType: PartitionContext.checkpoint
type: method
members:
- fullName: com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint()
  name: checkpoint()
  nameWithType: PartitionContext.checkpoint()
  returns:
    description: <p>CompletableFuture { -&gt;} null when the checkpoint has been persisted successfully, completes exceptionally on error. </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Writes the position of the last event in the current batch to the checkpoint store via the checkpoint manager. </p>

    <p>It is important to check the result in order to detect failures. </p>

    <p>If receiving started from a user-provided EventPosition and no events have been received yet, then this will fail. (This scenario is possible when invoke-after-receive-timeout has been set in EventProcessorOptions.)</p>

    <p></p>
  syntax: public CompletableFuture<Void> checkpoint()
  uid: com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint()
- fullName: com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint(Checkpoint checkpoint)
  name: checkpoint(Checkpoint checkpoint)
  nameWithType: PartitionContext.checkpoint(Checkpoint checkpoint)
  parameters:
  - description: <p>a checkpoint </p>
    name: checkpoint
    type: <xref href="com.microsoft.azure.eventprocessorhost.Checkpoint?alt=com.microsoft.azure.eventprocessorhost.Checkpoint&text=Checkpoint" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>CompletableFuture { -&gt;} null when the checkpoint has been persisted successfully, completes exceptionally on error. </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Writes the position of the provided Checkpoint instance to the checkpoint store via the checkpoint manager.</p>

    <p>It is important to check the result in order to detect failures.</p>

    <p></p>
  syntax: public CompletableFuture<Void> checkpoint(Checkpoint checkpoint)
  uid: com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint(Checkpoint)
- fullName: com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint(EventData event)
  name: checkpoint(EventData event)
  nameWithType: PartitionContext.checkpoint(EventData event)
  parameters:
  - description: <p>A received EventData </p>
    name: event
    type: <xref href="com.microsoft.azure.eventhubs.EventData?alt=com.microsoft.azure.eventhubs.EventData&text=EventData" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>CompletableFuture { -&gt;} null when the checkpoint has been persisted successfully, completes exceptionally on error. </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Writes the position of the provided EventData instance to the checkpoint store via the checkpoint manager. </p>

    <p>It is important to check the result in order to detect failures.</p>

    <p></p>
  syntax: public CompletableFuture<Void> checkpoint(EventData event)
  uid: com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint(EventData)
uid: com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint*
fullName: com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint()
name: checkpoint()
package: com.microsoft.azure.eventprocessorhost
metadata: {}
