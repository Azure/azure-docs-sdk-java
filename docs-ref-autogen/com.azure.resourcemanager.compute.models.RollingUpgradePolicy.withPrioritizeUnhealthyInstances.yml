### YamlMime:JavaMember
uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withPrioritizeUnhealthyInstances*"
fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withPrioritizeUnhealthyInstances"
name: "withPrioritizeUnhealthyInstances"
nameWithType: "RollingUpgradePolicy.withPrioritizeUnhealthyInstances"
members:
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withPrioritizeUnhealthyInstances(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withPrioritizeUnhealthyInstances(Boolean prioritizeUnhealthyInstances)"
  name: "withPrioritizeUnhealthyInstances(Boolean prioritizeUnhealthyInstances)"
  nameWithType: "RollingUpgradePolicy.withPrioritizeUnhealthyInstances(Boolean prioritizeUnhealthyInstances)"
  summary: "Set the prioritizeUnhealthyInstances property: Upgrade all unhealthy instances in a scale set before any healthy instances."
  parameters:
  - description: "the prioritizeUnhealthyInstances value to set."
    name: "prioritizeUnhealthyInstances"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RollingUpgradePolicy withPrioritizeUnhealthyInstances(Boolean prioritizeUnhealthyInstances)"
  returns:
    description: "the RollingUpgradePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RollingUpgradePolicy?alt=com.azure.resourcemanager.compute.models.RollingUpgradePolicy&text=RollingUpgradePolicy\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.4.0
