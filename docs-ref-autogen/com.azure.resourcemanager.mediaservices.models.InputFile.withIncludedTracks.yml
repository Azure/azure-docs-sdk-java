### YamlMime:JavaMember
uid: "com.azure.resourcemanager.mediaservices.models.InputFile.withIncludedTracks*"
fullName: "com.azure.resourcemanager.mediaservices.models.InputFile.withIncludedTracks"
name: "withIncludedTracks"
nameWithType: "InputFile.withIncludedTracks"
members:
- uid: "com.azure.resourcemanager.mediaservices.models.InputFile.withIncludedTracks(java.util.List<com.azure.resourcemanager.mediaservices.models.TrackDescriptor>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.InputFile.withIncludedTracks(List<TrackDescriptor> includedTracks)"
  name: "withIncludedTracks(List<TrackDescriptor> includedTracks)"
  nameWithType: "InputFile.withIncludedTracks(List<TrackDescriptor> includedTracks)"
  summary: "Set the includedTracks property: The list of TrackDescriptors which define the metadata and selection of tracks in the input."
  overridden: "com.azure.resourcemanager.mediaservices.models.InputDefinition.withIncludedTracks(java.util.List<com.azure.resourcemanager.mediaservices.models.TrackDescriptor>)"
  parameters:
  - name: "includedTracks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackDescriptor?alt=com.azure.resourcemanager.mediaservices.models.TrackDescriptor&text=TrackDescriptor\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public InputFile withIncludedTracks(List<TrackDescriptor> includedTracks)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InputFile?alt=com.azure.resourcemanager.mediaservices.models.InputFile&text=InputFile\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:1.0.0
