### YamlMime:JavaType
uid: "com.azure.resourcemanager.keyvault.models.VaultProperties"
fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties"
name: "VaultProperties"
nameWithType: "VaultProperties"
summary: "Properties of the vault."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VaultProperties"
constructors:
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.VaultProperties()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.VaultProperties()"
  name: "VaultProperties()"
  nameWithType: "VaultProperties.VaultProperties()"
  syntax: "public VaultProperties()"
methods:
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.accessPolicies()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.accessPolicies()"
  name: "accessPolicies()"
  nameWithType: "VaultProperties.accessPolicies()"
  summary: "Get the access<wbr>Policies property: An array of 0 to 1024 identities that have access to the key vault."
  syntax: "public List<AccessPolicyEntry> accessPolicies()"
  desc: "Get the accessPolicies property: An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When \\`createMode\\` is set to \\`recover\\`, access policies are not required. Otherwise, access policies are required."
  returns:
    description: "the accessPolicies value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicyEntry?alt=com.azure.resourcemanager.keyvault.models.AccessPolicyEntry&text=AccessPolicyEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.createMode()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.createMode()"
  name: "createMode()"
  nameWithType: "VaultProperties.createMode()"
  summary: "Get the create<wbr>Mode property: The vault's create mode to indicate whether the vault need to be recovered or not."
  syntax: "public CreateMode createMode()"
  desc: "Get the createMode property: The vault's create mode to indicate whether the vault need to be recovered or not."
  returns:
    description: "the createMode value."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.CreateMode?alt=com.azure.resourcemanager.keyvault.models.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.enablePurgeProtection()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.enablePurgeProtection()"
  name: "enablePurgeProtection()"
  nameWithType: "VaultProperties.enablePurgeProtection()"
  summary: "Get the enable<wbr>Purge<wbr>Protection property: Property specifying whether protection against purge is enabled for this vault."
  syntax: "public Boolean enablePurgeProtection()"
  desc: "Get the enablePurgeProtection property: Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."
  returns:
    description: "the enablePurgeProtection value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.enableRbacAuthorization()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.enableRbacAuthorization()"
  name: "enableRbacAuthorization()"
  nameWithType: "VaultProperties.enableRbacAuthorization()"
  summary: "Get the enable<wbr>Rbac<wbr>Authorization property: Property that controls how data actions are authorized."
  syntax: "public Boolean enableRbacAuthorization()"
  desc: "Get the enableRbacAuthorization property: Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC."
  returns:
    description: "the enableRbacAuthorization value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.enableSoftDelete()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.enableSoftDelete()"
  name: "enableSoftDelete()"
  nameWithType: "VaultProperties.enableSoftDelete()"
  summary: "Get the enable<wbr>Soft<wbr>Delete property: Property to specify whether the 'soft delete' functionality is enabled for this key vault."
  syntax: "public Boolean enableSoftDelete()"
  desc: "Get the enableSoftDelete property: Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false."
  returns:
    description: "the enableSoftDelete value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.enabledForDeployment()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.enabledForDeployment()"
  name: "enabledForDeployment()"
  nameWithType: "VaultProperties.enabledForDeployment()"
  summary: "Get the enabled<wbr>For<wbr>Deployment property: Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
  syntax: "public Boolean enabledForDeployment()"
  desc: "Get the enabledForDeployment property: Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
  returns:
    description: "the enabledForDeployment value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.enabledForDiskEncryption()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.enabledForDiskEncryption()"
  name: "enabledForDiskEncryption()"
  nameWithType: "VaultProperties.enabledForDiskEncryption()"
  summary: "Get the enabled<wbr>For<wbr>Disk<wbr>Encryption property: Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
  syntax: "public Boolean enabledForDiskEncryption()"
  desc: "Get the enabledForDiskEncryption property: Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
  returns:
    description: "the enabledForDiskEncryption value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.enabledForTemplateDeployment()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.enabledForTemplateDeployment()"
  name: "enabledForTemplateDeployment()"
  nameWithType: "VaultProperties.enabledForTemplateDeployment()"
  summary: "Get the enabled<wbr>For<wbr>Template<wbr>Deployment property: Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
  syntax: "public Boolean enabledForTemplateDeployment()"
  desc: "Get the enabledForTemplateDeployment property: Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
  returns:
    description: "the enabledForTemplateDeployment value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.hsmPoolResourceId()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.hsmPoolResourceId()"
  name: "hsmPoolResourceId()"
  nameWithType: "VaultProperties.hsmPoolResourceId()"
  summary: "Get the hsm<wbr>Pool<wbr>Resource<wbr>Id property: The resource id of HSM Pool."
  syntax: "public String hsmPoolResourceId()"
  desc: "Get the hsmPoolResourceId property: The resource id of HSM Pool."
  returns:
    description: "the hsmPoolResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.networkAcls()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.networkAcls()"
  name: "networkAcls()"
  nameWithType: "VaultProperties.networkAcls()"
  summary: "Get the network<wbr>Acls property: Rules governing the accessibility of the key vault from specific network locations."
  syntax: "public NetworkRuleSet networkAcls()"
  desc: "Get the networkAcls property: Rules governing the accessibility of the key vault from specific network locations."
  returns:
    description: "the networkAcls value."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.NetworkRuleSet?alt=com.azure.resourcemanager.keyvault.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "VaultProperties.privateEndpointConnections()"
  summary: "Get the private<wbr>Endpoint<wbr>Connections property: List of private endpoint connections associated with the key vault."
  syntax: "public List<PrivateEndpointConnectionItem> privateEndpointConnections()"
  desc: "Get the privateEndpointConnections property: List of private endpoint connections associated with the key vault."
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.PrivateEndpointConnectionItem?alt=com.azure.resourcemanager.keyvault.models.PrivateEndpointConnectionItem&text=PrivateEndpointConnectionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "VaultProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the vault."
  syntax: "public VaultProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the vault."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProvisioningState?alt=com.azure.resourcemanager.keyvault.models.VaultProvisioningState&text=VaultProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.sku()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.sku()"
  name: "sku()"
  nameWithType: "VaultProperties.sku()"
  summary: "Get the sku property: SKU details."
  syntax: "public Sku sku()"
  desc: "Get the sku property: SKU details."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.Sku?alt=com.azure.resourcemanager.keyvault.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.softDeleteRetentionInDays()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.softDeleteRetentionInDays()"
  name: "softDeleteRetentionInDays()"
  nameWithType: "VaultProperties.softDeleteRetentionInDays()"
  summary: "Get the soft<wbr>Delete<wbr>Retention<wbr>InDays property: soft<wbr>Delete data retention days."
  syntax: "public Integer softDeleteRetentionInDays()"
  desc: "Get the softDeleteRetentionInDays property: softDelete data retention days. It accepts >=7 and <=90."
  returns:
    description: "the softDeleteRetentionInDays value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.tenantId()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.tenantId()"
  name: "tenantId()"
  nameWithType: "VaultProperties.tenantId()"
  summary: "Get the tenant<wbr>Id property: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
  syntax: "public UUID tenantId()"
  desc: "Get the tenantId property: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
  returns:
    description: "the tenantId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.validate()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.validate()"
  name: "validate()"
  nameWithType: "VaultProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.vaultUri()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.vaultUri()"
  name: "vaultUri()"
  nameWithType: "VaultProperties.vaultUri()"
  summary: "Get the vault<wbr>Uri property: The URI of the vault for performing operations on keys and secrets."
  syntax: "public String vaultUri()"
  desc: "Get the vaultUri property: The URI of the vault for performing operations on keys and secrets. This property is readonly."
  returns:
    description: "the vaultUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withAccessPolicies(java.util.List<com.azure.resourcemanager.keyvault.models.AccessPolicyEntry>)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withAccessPolicies(List<AccessPolicyEntry> accessPolicies)"
  name: "withAccessPolicies(List<AccessPolicyEntry> accessPolicies)"
  nameWithType: "VaultProperties.withAccessPolicies(List<AccessPolicyEntry> accessPolicies)"
  summary: "Set the access<wbr>Policies property: An array of 0 to 1024 identities that have access to the key vault."
  parameters:
  - description: "the accessPolicies value to set."
    name: "accessPolicies"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicyEntry?alt=com.azure.resourcemanager.keyvault.models.AccessPolicyEntry&text=AccessPolicyEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VaultProperties withAccessPolicies(List<AccessPolicyEntry> accessPolicies)"
  desc: "Set the accessPolicies property: An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When \\`createMode\\` is set to \\`recover\\`, access policies are not required. Otherwise, access policies are required."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withCreateMode(com.azure.resourcemanager.keyvault.models.CreateMode)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withCreateMode(CreateMode createMode)"
  name: "withCreateMode(CreateMode createMode)"
  nameWithType: "VaultProperties.withCreateMode(CreateMode createMode)"
  summary: "Set the create<wbr>Mode property: The vault's create mode to indicate whether the vault need to be recovered or not."
  parameters:
  - description: "the createMode value to set."
    name: "createMode"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.CreateMode?alt=com.azure.resourcemanager.keyvault.models.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withCreateMode(CreateMode createMode)"
  desc: "Set the createMode property: The vault's create mode to indicate whether the vault need to be recovered or not."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnablePurgeProtection(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnablePurgeProtection(Boolean enablePurgeProtection)"
  name: "withEnablePurgeProtection(Boolean enablePurgeProtection)"
  nameWithType: "VaultProperties.withEnablePurgeProtection(Boolean enablePurgeProtection)"
  summary: "Set the enable<wbr>Purge<wbr>Protection property: Property specifying whether protection against purge is enabled for this vault."
  parameters:
  - description: "the enablePurgeProtection value to set."
    name: "enablePurgeProtection"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withEnablePurgeProtection(Boolean enablePurgeProtection)"
  desc: "Set the enablePurgeProtection property: Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnableRbacAuthorization(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnableRbacAuthorization(Boolean enableRbacAuthorization)"
  name: "withEnableRbacAuthorization(Boolean enableRbacAuthorization)"
  nameWithType: "VaultProperties.withEnableRbacAuthorization(Boolean enableRbacAuthorization)"
  summary: "Set the enable<wbr>Rbac<wbr>Authorization property: Property that controls how data actions are authorized."
  parameters:
  - description: "the enableRbacAuthorization value to set."
    name: "enableRbacAuthorization"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withEnableRbacAuthorization(Boolean enableRbacAuthorization)"
  desc: "Set the enableRbacAuthorization property: Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnableSoftDelete(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnableSoftDelete(Boolean enableSoftDelete)"
  name: "withEnableSoftDelete(Boolean enableSoftDelete)"
  nameWithType: "VaultProperties.withEnableSoftDelete(Boolean enableSoftDelete)"
  summary: "Set the enable<wbr>Soft<wbr>Delete property: Property to specify whether the 'soft delete' functionality is enabled for this key vault."
  parameters:
  - description: "the enableSoftDelete value to set."
    name: "enableSoftDelete"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withEnableSoftDelete(Boolean enableSoftDelete)"
  desc: "Set the enableSoftDelete property: Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnabledForDeployment(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnabledForDeployment(Boolean enabledForDeployment)"
  name: "withEnabledForDeployment(Boolean enabledForDeployment)"
  nameWithType: "VaultProperties.withEnabledForDeployment(Boolean enabledForDeployment)"
  summary: "Set the enabled<wbr>For<wbr>Deployment property: Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
  parameters:
  - description: "the enabledForDeployment value to set."
    name: "enabledForDeployment"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withEnabledForDeployment(Boolean enabledForDeployment)"
  desc: "Set the enabledForDeployment property: Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnabledForDiskEncryption(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnabledForDiskEncryption(Boolean enabledForDiskEncryption)"
  name: "withEnabledForDiskEncryption(Boolean enabledForDiskEncryption)"
  nameWithType: "VaultProperties.withEnabledForDiskEncryption(Boolean enabledForDiskEncryption)"
  summary: "Set the enabled<wbr>For<wbr>Disk<wbr>Encryption property: Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
  parameters:
  - description: "the enabledForDiskEncryption value to set."
    name: "enabledForDiskEncryption"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withEnabledForDiskEncryption(Boolean enabledForDiskEncryption)"
  desc: "Set the enabledForDiskEncryption property: Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnabledForTemplateDeployment(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withEnabledForTemplateDeployment(Boolean enabledForTemplateDeployment)"
  name: "withEnabledForTemplateDeployment(Boolean enabledForTemplateDeployment)"
  nameWithType: "VaultProperties.withEnabledForTemplateDeployment(Boolean enabledForTemplateDeployment)"
  summary: "Set the enabled<wbr>For<wbr>Template<wbr>Deployment property: Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
  parameters:
  - description: "the enabledForTemplateDeployment value to set."
    name: "enabledForTemplateDeployment"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withEnabledForTemplateDeployment(Boolean enabledForTemplateDeployment)"
  desc: "Set the enabledForTemplateDeployment property: Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withNetworkAcls(com.azure.resourcemanager.keyvault.models.NetworkRuleSet)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withNetworkAcls(NetworkRuleSet networkAcls)"
  name: "withNetworkAcls(NetworkRuleSet networkAcls)"
  nameWithType: "VaultProperties.withNetworkAcls(NetworkRuleSet networkAcls)"
  summary: "Set the network<wbr>Acls property: Rules governing the accessibility of the key vault from specific network locations."
  parameters:
  - description: "the networkAcls value to set."
    name: "networkAcls"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.NetworkRuleSet?alt=com.azure.resourcemanager.keyvault.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withNetworkAcls(NetworkRuleSet networkAcls)"
  desc: "Set the networkAcls property: Rules governing the accessibility of the key vault from specific network locations."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withProvisioningState(com.azure.resourcemanager.keyvault.models.VaultProvisioningState)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withProvisioningState(VaultProvisioningState provisioningState)"
  name: "withProvisioningState(VaultProvisioningState provisioningState)"
  nameWithType: "VaultProperties.withProvisioningState(VaultProvisioningState provisioningState)"
  summary: "Set the provisioning<wbr>State property: Provisioning state of the vault."
  parameters:
  - description: "the provisioningState value to set."
    name: "provisioningState"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProvisioningState?alt=com.azure.resourcemanager.keyvault.models.VaultProvisioningState&text=VaultProvisioningState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withProvisioningState(VaultProvisioningState provisioningState)"
  desc: "Set the provisioningState property: Provisioning state of the vault."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withSku(com.azure.resourcemanager.keyvault.models.Sku)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "VaultProperties.withSku(Sku sku)"
  summary: "Set the sku property: SKU details."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.Sku?alt=com.azure.resourcemanager.keyvault.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withSku(Sku sku)"
  desc: "Set the sku property: SKU details."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withSoftDeleteRetentionInDays(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays)"
  name: "withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays)"
  nameWithType: "VaultProperties.withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays)"
  summary: "Set the soft<wbr>Delete<wbr>Retention<wbr>InDays property: soft<wbr>Delete data retention days."
  parameters:
  - description: "the softDeleteRetentionInDays value to set."
    name: "softDeleteRetentionInDays"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays)"
  desc: "Set the softDeleteRetentionInDays property: softDelete data retention days. It accepts >=7 and <=90."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withTenantId(java.util.UUID)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withTenantId(UUID tenantId)"
  name: "withTenantId(UUID tenantId)"
  nameWithType: "VaultProperties.withTenantId(UUID tenantId)"
  summary: "Set the tenant<wbr>Id property: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
  parameters:
  - description: "the tenantId value to set."
    name: "tenantId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withTenantId(UUID tenantId)"
  desc: "Set the tenantId property: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultProperties.withVaultUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultProperties.withVaultUri(String vaultUri)"
  name: "withVaultUri(String vaultUri)"
  nameWithType: "VaultProperties.withVaultUri(String vaultUri)"
  summary: "Set the vault<wbr>Uri property: The URI of the vault for performing operations on keys and secrets."
  parameters:
  - description: "the vaultUri value to set."
    name: "vaultUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultProperties withVaultUri(String vaultUri)"
  desc: "Set the vaultUri property: The URI of the vault for performing operations on keys and secrets. This property is readonly."
  returns:
    description: "the VaultProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultProperties?alt=com.azure.resourcemanager.keyvault.models.VaultProperties&text=VaultProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of the vault."
metadata: {}
package: "com.azure.resourcemanager.keyvault.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.16.0
