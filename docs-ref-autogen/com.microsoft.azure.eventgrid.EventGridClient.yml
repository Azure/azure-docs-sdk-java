### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventgrid.EventGridClient
  id: EventGridClient
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid
  children:
  - com.microsoft.azure.eventgrid.EventGridClient.acceptLanguage()
  - com.microsoft.azure.eventgrid.EventGridClient.apiVersion()
  - com.microsoft.azure.eventgrid.EventGridClient.generateClientRequestId()
  - com.microsoft.azure.eventgrid.EventGridClient.getAzureClient()
  - com.microsoft.azure.eventgrid.EventGridClient.longRunningOperationRetryTimeout()
  - com.microsoft.azure.eventgrid.EventGridClient.publishEvents(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  - com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  - com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.eventgrid.EventGridClient.publishEventsWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  - com.microsoft.azure.eventgrid.EventGridClient.restClient()
  - com.microsoft.azure.eventgrid.EventGridClient.userAgent()
  - com.microsoft.azure.eventgrid.EventGridClient.withAcceptLanguage(java.lang.String)
  - com.microsoft.azure.eventgrid.EventGridClient.withGenerateClientRequestId(boolean)
  - com.microsoft.azure.eventgrid.EventGridClient.withLongRunningOperationRetryTimeout(int)
  langs:
  - java
  name: EventGridClient
  nameWithType: EventGridClient
  fullName: com.microsoft.azure.eventgrid.EventGridClient
  type: Interface
  package: com.microsoft.azure.eventgrid
  summary: The interface for EventGridClient class.
  syntax:
    content: public interface EventGridClient
- uid: com.microsoft.azure.eventgrid.EventGridClient.acceptLanguage()
  id: acceptLanguage()
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: acceptLanguage()
  nameWithType: EventGridClient.acceptLanguage()
  fullName: com.microsoft.azure.eventgrid.EventGridClient.acceptLanguage()
  overload: com.microsoft.azure.eventgrid.EventGridClient.acceptLanguage*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Gets Gets or sets the preferred language for the response..
  syntax:
    content: public abstract String acceptLanguage()
    return:
      type: java.lang.String
      description: the acceptLanguage value.
- uid: com.microsoft.azure.eventgrid.EventGridClient.apiVersion()
  id: apiVersion()
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: apiVersion()
  nameWithType: EventGridClient.apiVersion()
  fullName: com.microsoft.azure.eventgrid.EventGridClient.apiVersion()
  overload: com.microsoft.azure.eventgrid.EventGridClient.apiVersion*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Gets Version of the API to be used with the client request..
  syntax:
    content: public abstract String apiVersion()
    return:
      type: java.lang.String
      description: the apiVersion value.
- uid: com.microsoft.azure.eventgrid.EventGridClient.generateClientRequestId()
  id: generateClientRequestId()
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: generateClientRequestId()
  nameWithType: EventGridClient.generateClientRequestId()
  fullName: com.microsoft.azure.eventgrid.EventGridClient.generateClientRequestId()
  overload: com.microsoft.azure.eventgrid.EventGridClient.generateClientRequestId*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Gets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..
  syntax:
    content: public abstract boolean generateClientRequestId()
    return:
      type: boolean
      description: the generateClientRequestId value.
- uid: com.microsoft.azure.eventgrid.EventGridClient.getAzureClient()
  id: getAzureClient()
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: getAzureClient()
  nameWithType: EventGridClient.getAzureClient()
  fullName: com.microsoft.azure.eventgrid.EventGridClient.getAzureClient()
  overload: com.microsoft.azure.eventgrid.EventGridClient.getAzureClient*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Gets the <xref uid="com.microsoft.azure.AzureClient" data-throw-if-not-resolved="false">AzureClient</xref> used for long running operations.
  syntax:
    content: public abstract AzureClient getAzureClient()
    return:
      type: com.microsoft.azure.AzureClient
      description: the azure client;
- uid: com.microsoft.azure.eventgrid.EventGridClient.longRunningOperationRetryTimeout()
  id: longRunningOperationRetryTimeout()
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: longRunningOperationRetryTimeout()
  nameWithType: EventGridClient.longRunningOperationRetryTimeout()
  fullName: com.microsoft.azure.eventgrid.EventGridClient.longRunningOperationRetryTimeout()
  overload: com.microsoft.azure.eventgrid.EventGridClient.longRunningOperationRetryTimeout*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Gets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..
  syntax:
    content: public abstract int longRunningOperationRetryTimeout()
    return:
      type: int
      description: the longRunningOperationRetryTimeout value.
- uid: com.microsoft.azure.eventgrid.EventGridClient.publishEvents(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  id: publishEvents(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: publishEvents(String topicHostname, List<EventGridEvent> events)
  nameWithType: EventGridClient.publishEvents(String topicHostname, List<EventGridEvent> events)
  fullName: com.microsoft.azure.eventgrid.EventGridClient.publishEvents(String topicHostname, List<EventGridEvent> events)
  overload: com.microsoft.azure.eventgrid.EventGridClient.publishEvents*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Publishes a batch of events to an Azure Event Grid topic.
  syntax:
    content: public abstract void publishEvents(String topicHostname, List<EventGridEvent> events)
    parameters:
    - id: topicHostname
      type: java.lang.String
      description: The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net
    - id: events
      type: java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>
      description: An array of events to be published to Event Grid.
- uid: com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  id: publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: publishEventsAsync(String topicHostname, List<EventGridEvent> events)
  nameWithType: EventGridClient.publishEventsAsync(String topicHostname, List<EventGridEvent> events)
  fullName: com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync(String topicHostname, List<EventGridEvent> events)
  overload: com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Publishes a batch of events to an Azure Event Grid topic.
  syntax:
    content: public abstract Observable<Void> publishEventsAsync(String topicHostname, List<EventGridEvent> events)
    parameters:
    - id: topicHostname
      type: java.lang.String
      description: The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net
    - id: events
      type: java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>
      description: An array of events to be published to Event Grid.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: publishEventsAsync(String topicHostname, List<EventGridEvent> events, ServiceCallback<Void> serviceCallback)
  nameWithType: EventGridClient.publishEventsAsync(String topicHostname, List<EventGridEvent> events, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync(String topicHostname, List<EventGridEvent> events, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Publishes a batch of events to an Azure Event Grid topic.
  syntax:
    content: public abstract ServiceFuture<Void> publishEventsAsync(String topicHostname, List<EventGridEvent> events, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: topicHostname
      type: java.lang.String
      description: The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net
    - id: events
      type: java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>
      description: An array of events to be published to Event Grid.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.eventgrid.EventGridClient.publishEventsWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  id: publishEventsWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: publishEventsWithServiceResponseAsync(String topicHostname, List<EventGridEvent> events)
  nameWithType: EventGridClient.publishEventsWithServiceResponseAsync(String topicHostname, List<EventGridEvent> events)
  fullName: com.microsoft.azure.eventgrid.EventGridClient.publishEventsWithServiceResponseAsync(String topicHostname, List<EventGridEvent> events)
  overload: com.microsoft.azure.eventgrid.EventGridClient.publishEventsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Publishes a batch of events to an Azure Event Grid topic.
  syntax:
    content: public abstract Observable<ServiceResponse<Void>> publishEventsWithServiceResponseAsync(String topicHostname, List<EventGridEvent> events)
    parameters:
    - id: topicHostname
      type: java.lang.String
      description: The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net
    - id: events
      type: java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>
      description: An array of events to be published to Event Grid.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.eventgrid.EventGridClient.restClient()
  id: restClient()
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: restClient()
  nameWithType: EventGridClient.restClient()
  fullName: com.microsoft.azure.eventgrid.EventGridClient.restClient()
  overload: com.microsoft.azure.eventgrid.EventGridClient.restClient*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Gets the REST client.
  syntax:
    content: public abstract RestClient restClient()
    return:
      type: com.microsoft.rest.RestClient
      description: the <xref uid="com.microsoft.rest.RestClient" data-throw-if-not-resolved="false">RestClient</xref> object.
- uid: com.microsoft.azure.eventgrid.EventGridClient.userAgent()
  id: userAgent()
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: userAgent()
  nameWithType: EventGridClient.userAgent()
  fullName: com.microsoft.azure.eventgrid.EventGridClient.userAgent()
  overload: com.microsoft.azure.eventgrid.EventGridClient.userAgent*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Gets the User-Agent header for the client.
  syntax:
    content: public abstract String userAgent()
    return:
      type: java.lang.String
      description: the user agent string.
- uid: com.microsoft.azure.eventgrid.EventGridClient.withAcceptLanguage(java.lang.String)
  id: withAcceptLanguage(java.lang.String)
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: EventGridClient.withAcceptLanguage(String acceptLanguage)
  fullName: com.microsoft.azure.eventgrid.EventGridClient.withAcceptLanguage(String acceptLanguage)
  overload: com.microsoft.azure.eventgrid.EventGridClient.withAcceptLanguage*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Sets Gets or sets the preferred language for the response..
  syntax:
    content: public abstract EventGridClient withAcceptLanguage(String acceptLanguage)
    parameters:
    - id: acceptLanguage
      type: java.lang.String
      description: the acceptLanguage value.
    return:
      type: com.microsoft.azure.eventgrid.EventGridClient
      description: the service client itself
- uid: com.microsoft.azure.eventgrid.EventGridClient.withGenerateClientRequestId(boolean)
  id: withGenerateClientRequestId(boolean)
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: withGenerateClientRequestId(boolean generateClientRequestId)
  nameWithType: EventGridClient.withGenerateClientRequestId(boolean generateClientRequestId)
  fullName: com.microsoft.azure.eventgrid.EventGridClient.withGenerateClientRequestId(boolean generateClientRequestId)
  overload: com.microsoft.azure.eventgrid.EventGridClient.withGenerateClientRequestId*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Sets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..
  syntax:
    content: public abstract EventGridClient withGenerateClientRequestId(boolean generateClientRequestId)
    parameters:
    - id: generateClientRequestId
      type: boolean
      description: the generateClientRequestId value.
    return:
      type: com.microsoft.azure.eventgrid.EventGridClient
      description: the service client itself
- uid: com.microsoft.azure.eventgrid.EventGridClient.withLongRunningOperationRetryTimeout(int)
  id: withLongRunningOperationRetryTimeout(int)
  artifact: com.microsoft.azure:azure-eventgrid:1.3.0
  parent: com.microsoft.azure.eventgrid.EventGridClient
  langs:
  - java
  name: withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  nameWithType: EventGridClient.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  fullName: com.microsoft.azure.eventgrid.EventGridClient.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  overload: com.microsoft.azure.eventgrid.EventGridClient.withLongRunningOperationRetryTimeout*
  type: Method
  package: com.microsoft.azure.eventgrid
  summary: Sets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..
  syntax:
    content: public abstract EventGridClient withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
    parameters:
    - id: longRunningOperationRetryTimeout
      type: int
      description: the longRunningOperationRetryTimeout value.
    return:
      type: com.microsoft.azure.eventgrid.EventGridClient
      description: the service client itself
references:
- uid: com.microsoft.rest.RestClient
  spec.java:
  - uid: com.microsoft.rest.RestClient
    name: RestClient
    fullName: com.microsoft.rest.RestClient
- uid: com.microsoft.azure.eventgrid.EventGridClient.restClient*
  name: restClient
  nameWithType: EventGridClient.restClient
  fullName: com.microsoft.azure.eventgrid.EventGridClient.restClient
  package: com.microsoft.azure.eventgrid
- uid: com.microsoft.azure.AzureClient
  spec.java:
  - uid: com.microsoft.azure.AzureClient
    name: AzureClient
    fullName: com.microsoft.azure.AzureClient
- uid: com.microsoft.azure.eventgrid.EventGridClient.getAzureClient*
  name: getAzureClient
  nameWithType: EventGridClient.getAzureClient
  fullName: com.microsoft.azure.eventgrid.EventGridClient.getAzureClient
  package: com.microsoft.azure.eventgrid
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.eventgrid.EventGridClient.userAgent*
  name: userAgent
  nameWithType: EventGridClient.userAgent
  fullName: com.microsoft.azure.eventgrid.EventGridClient.userAgent
  package: com.microsoft.azure.eventgrid
- uid: com.microsoft.azure.eventgrid.EventGridClient.apiVersion*
  name: apiVersion
  nameWithType: EventGridClient.apiVersion
  fullName: com.microsoft.azure.eventgrid.EventGridClient.apiVersion
  package: com.microsoft.azure.eventgrid
- uid: com.microsoft.azure.eventgrid.EventGridClient.acceptLanguage*
  name: acceptLanguage
  nameWithType: EventGridClient.acceptLanguage
  fullName: com.microsoft.azure.eventgrid.EventGridClient.acceptLanguage
  package: com.microsoft.azure.eventgrid
- uid: com.microsoft.azure.eventgrid.EventGridClient.withAcceptLanguage*
  name: withAcceptLanguage
  nameWithType: EventGridClient.withAcceptLanguage
  fullName: com.microsoft.azure.eventgrid.EventGridClient.withAcceptLanguage
  package: com.microsoft.azure.eventgrid
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.eventgrid.EventGridClient.longRunningOperationRetryTimeout*
  name: longRunningOperationRetryTimeout
  nameWithType: EventGridClient.longRunningOperationRetryTimeout
  fullName: com.microsoft.azure.eventgrid.EventGridClient.longRunningOperationRetryTimeout
  package: com.microsoft.azure.eventgrid
- uid: com.microsoft.azure.eventgrid.EventGridClient.withLongRunningOperationRetryTimeout*
  name: withLongRunningOperationRetryTimeout
  nameWithType: EventGridClient.withLongRunningOperationRetryTimeout
  fullName: com.microsoft.azure.eventgrid.EventGridClient.withLongRunningOperationRetryTimeout
  package: com.microsoft.azure.eventgrid
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventgrid.EventGridClient.generateClientRequestId*
  name: generateClientRequestId
  nameWithType: EventGridClient.generateClientRequestId
  fullName: com.microsoft.azure.eventgrid.EventGridClient.generateClientRequestId
  package: com.microsoft.azure.eventgrid
- uid: com.microsoft.azure.eventgrid.EventGridClient.withGenerateClientRequestId*
  name: withGenerateClientRequestId
  nameWithType: EventGridClient.withGenerateClientRequestId
  fullName: com.microsoft.azure.eventgrid.EventGridClient.withGenerateClientRequestId
  package: com.microsoft.azure.eventgrid
- uid: java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.eventgrid.models.EventGridEvent
    name: EventGridEvent
    fullName: com.microsoft.azure.eventgrid.models.EventGridEvent
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventgrid.EventGridClient.publishEvents*
  name: publishEvents
  nameWithType: EventGridClient.publishEvents
  fullName: com.microsoft.azure.eventgrid.EventGridClient.publishEvents
  package: com.microsoft.azure.eventgrid
- uid: com.microsoft.rest.ServiceCallback<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync*
  name: publishEventsAsync
  nameWithType: EventGridClient.publishEventsAsync
  fullName: com.microsoft.azure.eventgrid.EventGridClient.publishEventsAsync
  package: com.microsoft.azure.eventgrid
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventgrid.EventGridClient.publishEventsWithServiceResponseAsync*
  name: publishEventsWithServiceResponseAsync
  nameWithType: EventGridClient.publishEventsWithServiceResponseAsync
  fullName: com.microsoft.azure.eventgrid.EventGridClient.publishEventsWithServiceResponseAsync
  package: com.microsoft.azure.eventgrid
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.eventgrid.models.EventGridEvent
  name: EventGridEvent
  nameWithType: EventGridEvent
  fullName: com.microsoft.azure.eventgrid.models.EventGridEvent
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.microsoft.rest.ServiceCallback
  name: ServiceCallback
  nameWithType: ServiceCallback
  fullName: com.microsoft.rest.ServiceCallback
- uid: com.microsoft.rest.ServiceFuture
  name: ServiceFuture
  nameWithType: ServiceFuture
  fullName: com.microsoft.rest.ServiceFuture
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: com.microsoft.rest.ServiceResponse
  name: ServiceResponse
  nameWithType: ServiceResponse
  fullName: com.microsoft.rest.ServiceResponse
