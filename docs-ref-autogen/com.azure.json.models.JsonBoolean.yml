### YamlMime:JavaType
uid: "com.azure.json.models.JsonBoolean"
fullName: "com.azure.json.models.JsonBoolean"
name: "JsonBoolean"
nameWithType: "JsonBoolean"
summary: "Model representing a JSON boolean value."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.json.models.JsonElement?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.json.models.JsonElement?alt=com.azure.json.models.JsonElement&text=JsonElement\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.json.models.JsonElement.asArray()?alt=com.azure.json.models.JsonElement.asArray&text=asArray\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.asBoolean()?alt=com.azure.json.models.JsonElement.asBoolean&text=asBoolean\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.asNull()?alt=com.azure.json.models.JsonElement.asNull&text=asNull\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.asNumber()?alt=com.azure.json.models.JsonElement.asNumber&text=asNumber\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.asObject()?alt=com.azure.json.models.JsonElement.asObject&text=asObject\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.asString()?alt=com.azure.json.models.JsonElement.asString&text=asString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.isArray()?alt=com.azure.json.models.JsonElement.isArray&text=isArray\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.isBoolean()?alt=com.azure.json.models.JsonElement.isBoolean&text=isBoolean\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.isNull()?alt=com.azure.json.models.JsonElement.isNull&text=isNull\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.isNumber()?alt=com.azure.json.models.JsonElement.isNumber&text=isNumber\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.isObject()?alt=com.azure.json.models.JsonElement.isObject&text=isObject\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.json.models.JsonElement.isString()?alt=com.azure.json.models.JsonElement.isString&text=isString\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **JsonBoolean**</br> extends <xref href=\"com.azure.json.models.JsonElement?alt=com.azure.json.models.JsonElement&text=JsonElement\" data-throw-if-not-resolved=\"False\" />"
methods:
- uid: "com.azure.json.models.JsonBoolean.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.json.models.JsonBoolean.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "JsonBoolean.fromJson(JsonReader jsonReader)"
  summary: "Deserializes a JSON boolean from a Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader to deserialize from."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonBoolean fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while deserializing the JSON boolean."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Deserializes a JSON boolean from a JsonReader.\n\nIf the JsonReader's current token is null, it is assumed the JsonReader hasn't begun reading and <xref uid=\"com.azure.json.JsonReader.nextToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonReader#nextToken()\"></xref> will be called to begin reading.\n\nAfter ensuring the JsonReader has begun reading, if the current token is not <xref uid=\"com.azure.json.JsonToken.BOOLEAN\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#BOOLEAN\"></xref>, an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalStateException\"></xref> will be thrown. Otherwise, <xref uid=\"com.azure.json.models.JsonBoolean.getInstance(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonBoolean#getInstance(boolean)\"></xref> will be called to return the deserialized JSON boolean."
  returns:
    description: "The deserialized JSON boolean."
    type: "<xref href=\"com.azure.json.models.JsonBoolean?alt=com.azure.json.models.JsonBoolean&text=JsonBoolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.json.models.JsonBoolean.getInstance(boolean)"
  fullName: "com.azure.json.models.JsonBoolean.getInstance(boolean value)"
  name: "getInstance(boolean value)"
  nameWithType: "JsonBoolean.getInstance(boolean value)"
  summary: "Gets the instance of Json<wbr>Boolean for the specified boolean value."
  modifiers:
  - "static"
  parameters:
  - description: "The boolean value for which to obtain the JsonBoolean instance."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonBoolean getInstance(boolean value)"
  desc: "Gets the instance of JsonBoolean for the specified boolean value."
  returns:
    description: "The instance of JsonBoolean representing the specified boolean value."
    type: "<xref href=\"com.azure.json.models.JsonBoolean?alt=com.azure.json.models.JsonBoolean&text=JsonBoolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.json.models.JsonBoolean.getValue()"
  fullName: "com.azure.json.models.JsonBoolean.getValue()"
  name: "getValue()"
  nameWithType: "JsonBoolean.getValue()"
  summary: "Returns boolean value from a Json<wbr>Boolean object."
  syntax: "public boolean getValue()"
  desc: "Returns boolean value from a JsonBoolean object."
  returns:
    description: "The boolean value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.json.models.JsonBoolean.isBoolean()"
  fullName: "com.azure.json.models.JsonBoolean.isBoolean()"
  name: "isBoolean()"
  nameWithType: "JsonBoolean.isBoolean()"
  summary: "Identifies if an object is of type Json<wbr>Boolean."
  overridden: "com.azure.json.models.JsonElement.isBoolean()"
  syntax: "public boolean isBoolean()"
  desc: "Identifies if an object is of type JsonBoolean."
  returns:
    description: "boolean of whether this JsonElement object is of type JsonBoolean."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.json.models.JsonBoolean.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.json.models.JsonBoolean.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "JsonBoolean.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.json.models.JsonBoolean.toJsonString()"
  fullName: "com.azure.json.models.JsonBoolean.toJsonString()"
  name: "toJsonString()"
  nameWithType: "JsonBoolean.toJsonString()"
  syntax: "public String toJsonString()"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "class"
desc: "Model representing a JSON boolean value."
metadata: {}
package: "com.azure.json.models"
artifact: com.azure:azure-json:1.4.0
