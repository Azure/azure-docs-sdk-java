### YamlMime:JavaType
constructors:
- com.microsoft.azure.cosmosdb.DocumentCollection.DocumentCollection()
- com.microsoft.azure.cosmosdb.DocumentCollection.DocumentCollection(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cosmosdb.JsonSerializable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cosmosdb.JsonSerializable.get(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String)
- com.microsoft.azure.cosmosdb.Resource.getETag()
- com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
- com.microsoft.azure.cosmosdb.Resource.getId()
- com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
- com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
- com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String>)
- com.microsoft.azure.cosmosdb.Resource.getResourceId()
- com.microsoft.azure.cosmosdb.Resource.getSelfLink()
- com.microsoft.azure.cosmosdb.JsonSerializable.getString(String)
- com.microsoft.azure.cosmosdb.Resource.getTimestamp()
- com.microsoft.azure.cosmosdb.JsonSerializable.has(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.remove(String)
- com.microsoft.azure.cosmosdb.Resource.Resource(Resource)
- com.microsoft.azure.cosmosdb.Resource.Resource()
- com.microsoft.azure.cosmosdb.Resource.Resource(String,ObjectMapper)
- com.microsoft.azure.cosmosdb.Resource.Resource(String)
- com.microsoft.azure.cosmosdb.Resource.setId(String)
- com.microsoft.azure.cosmosdb.Resource.setResourceId(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy)
- com.microsoft.azure.cosmosdb.JsonSerializable.toString()
methods:
- com.microsoft.azure.cosmosdb.DocumentCollection.equals(Object)
- com.microsoft.azure.cosmosdb.DocumentCollection.getConflictResolutionPolicy()
- com.microsoft.azure.cosmosdb.DocumentCollection.getConflictsLink()
- com.microsoft.azure.cosmosdb.DocumentCollection.getDefaultTimeToLive()
- com.microsoft.azure.cosmosdb.DocumentCollection.getDocumentsLink()
- com.microsoft.azure.cosmosdb.DocumentCollection.getIndexingPolicy()
- com.microsoft.azure.cosmosdb.DocumentCollection.getPartitionKey()
- com.microsoft.azure.cosmosdb.DocumentCollection.getStoredProceduresLink()
- com.microsoft.azure.cosmosdb.DocumentCollection.getTriggersLink()
- com.microsoft.azure.cosmosdb.DocumentCollection.getUniqueKeyPolicy()
- com.microsoft.azure.cosmosdb.DocumentCollection.getUserDefinedFunctionsLink()
- com.microsoft.azure.cosmosdb.DocumentCollection.hashCode()
- com.microsoft.azure.cosmosdb.DocumentCollection.setConflictResolutionPolicy(ConflictResolutionPolicy)
- com.microsoft.azure.cosmosdb.DocumentCollection.setDefaultTimeToLive(Integer)
- com.microsoft.azure.cosmosdb.DocumentCollection.setIndexingPolicy(IndexingPolicy)
- com.microsoft.azure.cosmosdb.DocumentCollection.setPartitionKey(PartitionKeyDefinition)
- com.microsoft.azure.cosmosdb.DocumentCollection.setUniqueKeyPolicy(UniqueKeyPolicy)
nameWithType: DocumentCollection
syntax: public class DocumentCollection extends Resource
type: class
uid: com.microsoft.azure.cosmosdb.DocumentCollection
fullName: com.microsoft.azure.cosmosdb.DocumentCollection
name: DocumentCollection
package: com.microsoft.azure.cosmosdb
summary: >-
  <p>Represents a document collection in the Azure Cosmos DB database service. A collection is a named logical container for documents. </p>

  <p>A database may contain zero or more named collections and each collection consists of zero or more JSON documents. Being schema-free, the documents in a collection do not need to share the same structure or fields. Since collections are application resources, they can be authorized using either the master key or resource keys. </p>
metadata: {}
