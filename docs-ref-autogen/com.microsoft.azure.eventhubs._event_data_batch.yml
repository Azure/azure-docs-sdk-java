### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs._event_data_batch
  id: _event_data_batch
  parent: com.microsoft.azure.eventhubs
  children:
  - com.microsoft.azure.eventhubs._event_data_batch.getSize()
  - com.microsoft.azure.eventhubs._event_data_batch.tryAdd(final EventData)
  href: com.microsoft.azure.eventhubs._event_data_batch.yml
  langs:
  - java
  name: EventDataBatch
  nameWithType: EventDataBatch
  fullName: com.microsoft.azure.eventhubs.EventDataBatch
  type: Interface
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventDataBatch.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventDataBatch.java
    startLine: 9
  package: com.microsoft.azure.eventhubs
  summary: "<p>Helper for creating a batch/collection of EventData objects to be used while Sending to EventHubs </p>"
  syntax: &o1
    content: public interface EventDataBatch
- uid: com.microsoft.azure.eventhubs._event_data_batch.getSize()
  id: getSize()
  parent: com.microsoft.azure.eventhubs._event_data_batch
  href: com.microsoft.azure.eventhubs._event_data_batch.yml
  langs:
  - java
  name: getSize()
  nameWithType: EventDataBatch.getSize()
  fullName: com.microsoft.azure.eventhubs.EventDataBatch.getSize()
  overload: com.microsoft.azure.eventhubs._event_data_batch.getSize*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventDataBatch.java
    startLine: 16
  package: com.microsoft.azure.eventhubs
  summary: "<p>Get the number of events present in this <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref></p>\r\n<p></p>"
  syntax:
    content: public int getSize()
    return:
      type: f75371fa
      description: <p>the EventDataBatch size </p>
- uid: com.microsoft.azure.eventhubs._event_data_batch.tryAdd(final EventData)
  id: tryAdd(final EventData)
  parent: com.microsoft.azure.eventhubs._event_data_batch
  href: com.microsoft.azure.eventhubs._event_data_batch.yml
  langs:
  - java
  name: tryAdd(final EventData eventData)
  nameWithType: EventDataBatch.tryAdd(final EventData eventData)
  fullName: com.microsoft.azure.eventhubs.EventDataBatch.tryAdd(final EventData eventData)
  overload: com.microsoft.azure.eventhubs._event_data_batch.tryAdd*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventDataBatch.java
    startLine: 26
  package: com.microsoft.azure.eventhubs
  summary: "<p>Add's <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref> to <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>, if permitted by the batch's size limit. This method is not thread-safe.</p>\r\n<p></p>"
  syntax:
    content: public boolean tryAdd(final EventData eventData)
    parameters:
    - id: eventData
      type: 93de0ef9com.microsoft.azure.eventhubs._event_data
      description: <p>The <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> to add. </p>
    return:
      type: 4fc6e284
      description: <p>A boolean value indicating if the <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> addition to this batch/collection was successful or not. </p>
  exceptions:
  - type: 22fa3d6f
    description: <p>when a single <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> instance exceeds maximum allowed size of the batch </p>
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.eventhubs._event_data_batch.getSize*
  name: getSize
  nameWithType: EventDataBatch.getSize
  fullName: com.microsoft.azure.eventhubs.EventDataBatch.getSize
  package: com.microsoft.azure.eventhubs
- uid: 22fa3d6f
  spec.java:
  - name: PayloadSizeExceededException
    fullName: PayloadSizeExceededException
- uid: 93de0ef9com.microsoft.azure.eventhubs._event_data
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs._event_data
    name: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    href: com.microsoft.azure.eventhubs._event_data.yml
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventhubs._event_data_batch.tryAdd*
  name: tryAdd
  nameWithType: EventDataBatch.tryAdd
  fullName: com.microsoft.azure.eventhubs.EventDataBatch.tryAdd
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs._event_data_batch
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data_batch.yml
  name: EventDataBatch
  nameWithType: EventDataBatch
  fullName: com.microsoft.azure.eventhubs.EventDataBatch
  type: Interface
  summary: <p>Helper for creating a batch/collection of EventData objects to be used while Sending to EventHubs </p>
  syntax: *o1
- uid: com.microsoft.azure.eventhubs._event_data
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Interface
  summary: >-
    <p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>

    <p>Serializing a received <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>

    <p>Here's how AMQP message sections map to <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Here's the reference used for AMQP 1.0 specification: <a href="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</a><pre>

    i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section

    ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section

    iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections

    </pre> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
  syntax:
    content: public interface EventData
- uid: com.microsoft.azure.eventhubs._payload_size_exceeded_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._payload_size_exceeded_exception.yml
  name: PayloadSizeExceededException
  nameWithType: PayloadSizeExceededException
  fullName: com.microsoft.azure.eventhubs.PayloadSizeExceededException
  type: Class
  summary: >-
    <p>this exception is thrown when user attempts to send a event data or brokered message that has exceeded the allowed payload size as defined by the service. Note that in a batch send scenario the limit can include possible batch overhead.</p>

    <p></p>
  syntax:
    content: public class PayloadSizeExceededException
