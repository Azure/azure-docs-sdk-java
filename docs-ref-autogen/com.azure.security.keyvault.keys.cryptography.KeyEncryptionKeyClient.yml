### YamlMime:JavaType
uid: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient"
fullName: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient"
name: "KeyEncryptionKeyClient"
nameWithType: "KeyEncryptionKeyClient"
summary: "A key client which is used to synchronously wrap or unwrap another key."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class KeyEncryptionKeyClient implements KeyEncryptionKey"
methods:
- uid: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient.getKeyId()"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient.getKeyId()"
  name: "getKeyId()"
  nameWithType: "KeyEncryptionKeyClient.getKeyId()"
  summary: "Get the identifier of the key to use for cryptography operations."
  syntax: "public String getKeyId()"
  desc: "Get the identifier of the key to use for cryptography operations."
  returns:
    description: "The key identifier."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient.unwrapKey(java.lang.String,byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient.unwrapKey(String algorithm, byte[] encryptedKey)"
  name: "unwrapKey(String algorithm, byte[] encryptedKey)"
  nameWithType: "KeyEncryptionKeyClient.unwrapKey(String algorithm, byte[] encryptedKey)"
  parameters:
  - name: "algorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "encryptedKey"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public byte[] unwrapKey(String algorithm, byte[] encryptedKey)"
  returns:
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient.wrapKey(java.lang.String,byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient.wrapKey(String algorithm, byte[] key)"
  name: "wrapKey(String algorithm, byte[] key)"
  nameWithType: "KeyEncryptionKeyClient.wrapKey(String algorithm, byte[] key)"
  parameters:
  - name: "algorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "key"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public byte[] wrapKey(String algorithm, byte[] key)"
  returns:
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
type: "class"
desc: "A key client which is used to synchronously wrap or unwrap another key."
implements:
- "<xref href=\"com.azure.core.cryptography.KeyEncryptionKey?alt=com.azure.core.cryptography.KeyEncryptionKey&text=KeyEncryptionKey\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.security.keyvault.keys.cryptography"
artifact: com.azure:azure-security-keyvault-keys:4.4.6
