### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties"
fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties"
name: "CosmosClientEncryptionKeyProperties"
nameWithType: "CosmosClientEncryptionKeyProperties"
summary: "Details of an encryption key for use with the Azure Cosmos DB service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosClientEncryptionKeyProperties"
constructors:
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.CosmosClientEncryptionKeyProperties(java.lang.String,java.lang.String,byte[],com.azure.cosmos.models.EncryptionKeyWrapMetadata)"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.CosmosClientEncryptionKeyProperties(String id, String encryptionAlgorithm, byte[] wrappedDataEncryptionKey, EncryptionKeyWrapMetadata encryptionKeyWrapMetadata)"
  name: "CosmosClientEncryptionKeyProperties(String id, String encryptionAlgorithm, byte[] wrappedDataEncryptionKey, EncryptionKeyWrapMetadata encryptionKeyWrapMetadata)"
  nameWithType: "CosmosClientEncryptionKeyProperties.CosmosClientEncryptionKeyProperties(String id, String encryptionAlgorithm, byte[] wrappedDataEncryptionKey, EncryptionKeyWrapMetadata encryptionKeyWrapMetadata)"
  summary: "Constructor."
  parameters:
  - description: "Unique identifier for the client encryption key."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
    name: "encryptionAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Wrapped (encrypted) form of the client encryption key."
    name: "wrappedDataEncryptionKey"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Metadata used by the configured key wrapping provider in order to unwrap the key."
    name: "encryptionKeyWrapMetadata"
    type: "<xref href=\"com.azure.cosmos.models.EncryptionKeyWrapMetadata?alt=com.azure.cosmos.models.EncryptionKeyWrapMetadata&text=EncryptionKeyWrapMetadata\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosClientEncryptionKeyProperties(String id, String encryptionAlgorithm, byte[] wrappedDataEncryptionKey, EncryptionKeyWrapMetadata encryptionKeyWrapMetadata)"
  desc: "Constructor."
methods:
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getETag()"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getETag()"
  name: "getETag()"
  nameWithType: "CosmosClientEncryptionKeyProperties.getETag()"
  summary: "Get the entity tag associated with the resource."
  syntax: "public String getETag()"
  desc: "Get the entity tag associated with the resource. This is only relevant when getting response from the server."
  returns:
    description: "the e tag."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getEncryptionAlgorithm()"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getEncryptionAlgorithm()"
  name: "getEncryptionAlgorithm()"
  nameWithType: "CosmosClientEncryptionKeyProperties.getEncryptionAlgorithm()"
  summary: "Gets the encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
  syntax: "public String getEncryptionAlgorithm()"
  desc: "Gets the encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
  returns:
    description: "encryptionAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getEncryptionKeyWrapMetadata()"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getEncryptionKeyWrapMetadata()"
  name: "getEncryptionKeyWrapMetadata()"
  nameWithType: "CosmosClientEncryptionKeyProperties.getEncryptionKeyWrapMetadata()"
  summary: "Gets the metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key."
  syntax: "public EncryptionKeyWrapMetadata getEncryptionKeyWrapMetadata()"
  desc: "Gets the metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key."
  returns:
    description: "encryptionKeyWrapMetadata"
    type: "<xref href=\"com.azure.cosmos.models.EncryptionKeyWrapMetadata?alt=com.azure.cosmos.models.EncryptionKeyWrapMetadata&text=EncryptionKeyWrapMetadata\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getId()"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getId()"
  name: "getId()"
  nameWithType: "CosmosClientEncryptionKeyProperties.getId()"
  summary: "Gets the name of the resource."
  syntax: "public String getId()"
  desc: "Gets the name of the resource."
  returns:
    description: "the name of the resource."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getTimestamp()"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getTimestamp()"
  name: "getTimestamp()"
  nameWithType: "CosmosClientEncryptionKeyProperties.getTimestamp()"
  summary: "Get the last modified timestamp associated with the resource."
  syntax: "public Instant getTimestamp()"
  desc: "Get the last modified timestamp associated with the resource. This is only relevant when getting response from the server."
  returns:
    description: "the timestamp."
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getWrappedDataEncryptionKey()"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.getWrappedDataEncryptionKey()"
  name: "getWrappedDataEncryptionKey()"
  nameWithType: "CosmosClientEncryptionKeyProperties.getWrappedDataEncryptionKey()"
  summary: "Gets the wrapped form of the client encryption key."
  syntax: "public byte[] getWrappedDataEncryptionKey()"
  desc: "Gets the wrapped form of the client encryption key."
  returns:
    description: "wrappedDataEncryptionKey"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.setEncryptionAlgorithm(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.setEncryptionAlgorithm(String encryptionAlgorithm)"
  name: "setEncryptionAlgorithm(String encryptionAlgorithm)"
  nameWithType: "CosmosClientEncryptionKeyProperties.setEncryptionAlgorithm(String encryptionAlgorithm)"
  summary: "Sets the encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
  parameters:
  - description: "the  encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
    name: "encryptionAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosClientEncryptionKeyProperties setEncryptionAlgorithm(String encryptionAlgorithm)"
  desc: "Sets the encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
  returns:
    description: "CosmosClientEncryptionKeyProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosClientEncryptionKeyProperties?alt=com.azure.cosmos.models.CosmosClientEncryptionKeyProperties&text=CosmosClientEncryptionKeyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.setEncryptionKeyWrapMetadata(com.azure.cosmos.models.EncryptionKeyWrapMetadata)"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.setEncryptionKeyWrapMetadata(EncryptionKeyWrapMetadata encryptionKeyWrapMetadata)"
  name: "setEncryptionKeyWrapMetadata(EncryptionKeyWrapMetadata encryptionKeyWrapMetadata)"
  nameWithType: "CosmosClientEncryptionKeyProperties.setEncryptionKeyWrapMetadata(EncryptionKeyWrapMetadata encryptionKeyWrapMetadata)"
  summary: "Sets the metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key."
  parameters:
  - description: "the  metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key."
    name: "encryptionKeyWrapMetadata"
    type: "<xref href=\"com.azure.cosmos.models.EncryptionKeyWrapMetadata?alt=com.azure.cosmos.models.EncryptionKeyWrapMetadata&text=EncryptionKeyWrapMetadata\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosClientEncryptionKeyProperties setEncryptionKeyWrapMetadata(EncryptionKeyWrapMetadata encryptionKeyWrapMetadata)"
  desc: "Sets the metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key."
  returns:
    description: "CosmosClientEncryptionKeyProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosClientEncryptionKeyProperties?alt=com.azure.cosmos.models.CosmosClientEncryptionKeyProperties&text=CosmosClientEncryptionKeyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.setId(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.setId(String id)"
  name: "setId(String id)"
  nameWithType: "CosmosClientEncryptionKeyProperties.setId(String id)"
  summary: "Sets the name of the resource."
  parameters:
  - description: "the name of the resource."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosClientEncryptionKeyProperties setId(String id)"
  desc: "Sets the name of the resource."
  returns:
    description: "the current instance of <xref uid=\"com.azure.cosmos.models.CosmosContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosContainerProperties\"></xref>."
    type: "<xref href=\"com.azure.cosmos.models.CosmosClientEncryptionKeyProperties?alt=com.azure.cosmos.models.CosmosClientEncryptionKeyProperties&text=CosmosClientEncryptionKeyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.setWrappedDataEncryptionKey(byte[])"
  fullName: "com.azure.cosmos.models.CosmosClientEncryptionKeyProperties.setWrappedDataEncryptionKey(byte[] wrappedDataEncryptionKey)"
  name: "setWrappedDataEncryptionKey(byte[] wrappedDataEncryptionKey)"
  nameWithType: "CosmosClientEncryptionKeyProperties.setWrappedDataEncryptionKey(byte[] wrappedDataEncryptionKey)"
  summary: "Sets the wrapped form of the client encryption key."
  parameters:
  - description: "the wrapped form of the client encryption key."
    name: "wrappedDataEncryptionKey"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CosmosClientEncryptionKeyProperties setWrappedDataEncryptionKey(byte[] wrappedDataEncryptionKey)"
  desc: "Sets the wrapped form of the client encryption key."
  returns:
    description: "CosmosClientEncryptionKeyProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosClientEncryptionKeyProperties?alt=com.azure.cosmos.models.CosmosClientEncryptionKeyProperties&text=CosmosClientEncryptionKeyProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Details of an encryption key for use with the Azure Cosmos DB service."
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.35.0
