### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  id: X509CertificateWithInfo
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo(com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getCertificate()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getInfo()
  langs:
  - java
  name: X509CertificateWithInfo
  nameWithType: X509CertificateWithInfo
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  type: Class
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    Representation of a single Device Provisioning Service X509 Certificate with its info.


    this class creates a representation of an X509 certificate that can contains the certificate, the info of the certificate or both.


    To create this class, users must provide the certificate as a `String`, from a **.pem** or **.cert** files.


    The following JSON is an example of the result of this class.


    ```java

    {
          "certificate": "-----BEGIN CERTIFICATE-----\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
                         "-----END CERTIFICATE-----\n";
      }
    ```


    After send an X509 certificate to the provisioning service, it will return the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo" data-throw-if-not-resolved="false">X509CertificateInfo</xref>. User can get this info from this class,


    The following JSON is an example what info the provisioning service will return for X509.


    ```java

    {
          "info": {
               "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
               "sha1Thumbprint": "0000000000000000000000000000000000",
               "sha256Thumbprint": "validEnrollmentGroupId",
               "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",
               "notBeforeUtc": "2017-11-14T12:34:18Z",
               "notAfterUtc": "2017-11-20T12:34:18Z",
               "serialNumber": "000000000000000000",
               "version": 3
          }
      }
    ```
  syntax:
    content: public class X509CertificateWithInfo
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo()
  id: X509CertificateWithInfo()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  langs:
  - java
  name: X509CertificateWithInfo()
  nameWithType: X509CertificateWithInfo.X509CertificateWithInfo()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    Empty constructor


    Used only by the tools that will deserialize this class.
  syntax:
    content: " X509CertificateWithInfo()"
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo(com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo)
  id: X509CertificateWithInfo(com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  langs:
  - java
  name: X509CertificateWithInfo(X509CertificateWithInfo x509CertificateWithInfo)
  nameWithType: X509CertificateWithInfo.X509CertificateWithInfo(X509CertificateWithInfo x509CertificateWithInfo)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo(X509CertificateWithInfo x509CertificateWithInfo)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    Constructor \[COPY\]


    Creates a new instance of the X509CertificateWithInfo copping the content of the provided one.
  syntax:
    content: public X509CertificateWithInfo(X509CertificateWithInfo x509CertificateWithInfo)
    parameters:
    - id: x509CertificateWithInfo
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
      description: the original <code>X509CertificateWithInfo</code> to copy.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo(java.lang.String)
  id: X509CertificateWithInfo(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  langs:
  - java
  name: X509CertificateWithInfo(String certificate)
  nameWithType: X509CertificateWithInfo.X509CertificateWithInfo(String certificate)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo(String certificate)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    CONSTRUCTOR


    Creates a new instance of the Certificate that can contains the certificate without the info.


    The certificate is a `String`, normally stored in a **.pem** or **.cert** file, and should looks like the following example:


    ```java

    "-----BEGIN CERTIFICATE-----\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
     "-----END CERTIFICATE-----\n";
    ```
  syntax:
    content: " X509CertificateWithInfo(String certificate)"
    parameters:
    - id: certificate
      type: java.lang.String
      description: the <code>String</code> with the certificate.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getCertificate()
  id: getCertificate()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  langs:
  - java
  name: getCertificate()
  nameWithType: X509CertificateWithInfo.getCertificate()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getCertificate()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getCertificate*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: Getter for the certificate.
  syntax:
    content: public String getCertificate()
    return:
      type: java.lang.String
      description: the <code>String</code> with the stored certificate. It can be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getInfo()
  id: getInfo()
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  langs:
  - java
  name: getInfo()
  nameWithType: X509CertificateWithInfo.getInfo()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getInfo()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getInfo*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: Getter for the info.
  syntax:
    content: public X509CertificateInfo getInfo()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
      description: the <code>String</code> with the stored info. It can be <code>null</code>.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo*
  name: X509CertificateWithInfo
  nameWithType: X509CertificateWithInfo.X509CertificateWithInfo
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.X509CertificateWithInfo
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getCertificate*
  name: getCertificate
  nameWithType: X509CertificateWithInfo.getCertificate
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getCertificate
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
  name: X509CertificateInfo
  nameWithType: X509CertificateInfo
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getInfo*
  name: getInfo
  nameWithType: X509CertificateWithInfo.getInfo
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.getInfo
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
