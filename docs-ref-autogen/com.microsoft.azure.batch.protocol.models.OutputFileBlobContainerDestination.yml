### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
  id: OutputFileBlobContainerDestination
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.OutputFileBlobContainerDestination()
  - com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.containerUrl()
  - com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.path()
  - com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withContainerUrl(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withPath(java.lang.String)
  langs:
  - java
  name: OutputFileBlobContainerDestination
  nameWithType: OutputFileBlobContainerDestination
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Specifies a file upload destination within an Azure blob storage container.
  syntax:
    content: public class OutputFileBlobContainerDestination
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.OutputFileBlobContainerDestination()
  id: OutputFileBlobContainerDestination()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
  langs:
  - java
  name: OutputFileBlobContainerDestination()
  nameWithType: OutputFileBlobContainerDestination.OutputFileBlobContainerDestination()
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.OutputFileBlobContainerDestination()
  overload: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.OutputFileBlobContainerDestination*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public OutputFileBlobContainerDestination()
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.containerUrl()
  id: containerUrl()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
  langs:
  - java
  name: containerUrl()
  nameWithType: OutputFileBlobContainerDestination.containerUrl()
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.containerUrl()
  overload: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.containerUrl*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the URL must include a Shared Access Signature (SAS) granting write permissions to the container.
  syntax:
    content: public String containerUrl()
    return:
      type: java.lang.String
      description: the containerUrl value
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.path()
  id: path()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
  langs:
  - java
  name: path()
  nameWithType: OutputFileBlobContainerDestination.path()
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.path()
  overload: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.path*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if filePattern refers to a specific file (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name matching their file name.
  syntax:
    content: public String path()
    return:
      type: java.lang.String
      description: the path value
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withContainerUrl(java.lang.String)
  id: withContainerUrl(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
  langs:
  - java
  name: withContainerUrl(String containerUrl)
  nameWithType: OutputFileBlobContainerDestination.withContainerUrl(String containerUrl)
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withContainerUrl(String containerUrl)
  overload: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withContainerUrl*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the URL must include a Shared Access Signature (SAS) granting write permissions to the container.
  syntax:
    content: public OutputFileBlobContainerDestination withContainerUrl(String containerUrl)
    parameters:
    - id: containerUrl
      type: java.lang.String
      description: the containerUrl value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
      description: the OutputFileBlobContainerDestination object itself.
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withPath(java.lang.String)
  id: withPath(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
  langs:
  - java
  name: withPath(String path)
  nameWithType: OutputFileBlobContainerDestination.withPath(String path)
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withPath(String path)
  overload: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withPath*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if filePattern refers to a specific file (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name matching their file name.
  syntax:
    content: public OutputFileBlobContainerDestination withPath(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: the path value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination
      description: the OutputFileBlobContainerDestination object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.OutputFileBlobContainerDestination*
  name: OutputFileBlobContainerDestination
  nameWithType: OutputFileBlobContainerDestination.OutputFileBlobContainerDestination
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.OutputFileBlobContainerDestination
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.path*
  name: path
  nameWithType: OutputFileBlobContainerDestination.path
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.path
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withPath*
  name: withPath
  nameWithType: OutputFileBlobContainerDestination.withPath
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withPath
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.containerUrl*
  name: containerUrl
  nameWithType: OutputFileBlobContainerDestination.containerUrl
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.containerUrl
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withContainerUrl*
  name: withContainerUrl
  nameWithType: OutputFileBlobContainerDestination.withContainerUrl
  fullName: com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withContainerUrl
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
