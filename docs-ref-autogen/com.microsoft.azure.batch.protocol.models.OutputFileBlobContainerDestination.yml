### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination"
fullName: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination"
name: "OutputFileBlobContainerDestination"
nameWithType: "OutputFileBlobContainerDestination"
summary: "Specifies a file upload destination within an Azure blob storage container."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class OutputFileBlobContainerDestination"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.OutputFileBlobContainerDestination()"
  fullName: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.OutputFileBlobContainerDestination()"
  name: "OutputFileBlobContainerDestination()"
  nameWithType: "OutputFileBlobContainerDestination.OutputFileBlobContainerDestination()"
  syntax: "public OutputFileBlobContainerDestination()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.containerUrl()"
  fullName: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.containerUrl()"
  name: "containerUrl()"
  nameWithType: "OutputFileBlobContainerDestination.containerUrl()"
  summary: "Get the URL must include a Shared Access Signature (SAS) granting write permissions to the container."
  syntax: "public String containerUrl()"
  desc: "Get the URL must include a Shared Access Signature (SAS) granting write permissions to the container."
  returns:
    description: "the containerUrl value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.path()"
  fullName: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.path()"
  name: "path()"
  nameWithType: "OutputFileBlobContainerDestination.path()"
  summary: "Get if file<wbr>Pattern refers to a specific file (i.<wbr>e."
  syntax: "public String path()"
  desc: "Get if filePattern refers to a specific file (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name matching their file name."
  returns:
    description: "the path value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withContainerUrl(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withContainerUrl(String containerUrl)"
  name: "withContainerUrl(String containerUrl)"
  nameWithType: "OutputFileBlobContainerDestination.withContainerUrl(String containerUrl)"
  summary: "Set the URL must include a Shared Access Signature (SAS) granting write permissions to the container."
  parameters:
  - description: "the containerUrl value to set"
    name: "containerUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OutputFileBlobContainerDestination withContainerUrl(String containerUrl)"
  desc: "Set the URL must include a Shared Access Signature (SAS) granting write permissions to the container."
  returns:
    description: "the OutputFileBlobContainerDestination object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination?alt=com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination&text=OutputFileBlobContainerDestination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withPath(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination.withPath(String path)"
  name: "withPath(String path)"
  nameWithType: "OutputFileBlobContainerDestination.withPath(String path)"
  summary: "Set if file<wbr>Pattern refers to a specific file (i.<wbr>e."
  parameters:
  - description: "the path value to set"
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OutputFileBlobContainerDestination withPath(String path)"
  desc: "Set if filePattern refers to a specific file (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name matching their file name."
  returns:
    description: "the OutputFileBlobContainerDestination object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination?alt=com.microsoft.azure.batch.protocol.models.OutputFileBlobContainerDestination&text=OutputFileBlobContainerDestination\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies a file upload destination within an Azure blob storage container."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
