### YamlMime:JavaMember
uid: "com.azure.digitaltwins.core.implementation.DigitalTwinsImpl.getRelationshipByIdWithResponseAsync*"
fullName: "com.azure.digitaltwins.core.implementation.DigitalTwinsImpl.getRelationshipByIdWithResponseAsync"
name: "getRelationshipByIdWithResponseAsync"
nameWithType: "DigitalTwinsImpl.getRelationshipByIdWithResponseAsync"
members:
- uid: "com.azure.digitaltwins.core.implementation.DigitalTwinsImpl.getRelationshipByIdWithResponseAsync(java.lang.String,java.lang.String,com.azure.digitaltwins.core.implementation.models.DigitalTwinsGetRelationshipByIdOptions,com.azure.core.util.Context)"
  fullName: "com.azure.digitaltwins.core.implementation.DigitalTwinsImpl.getRelationshipByIdWithResponseAsync(String id, String relationshipId, DigitalTwinsGetRelationshipByIdOptions digitalTwinsGetRelationshipByIdOptions, Context context)"
  name: "getRelationshipByIdWithResponseAsync(String id, String relationshipId, DigitalTwinsGetRelationshipByIdOptions digitalTwinsGetRelationshipByIdOptions, Context context)"
  nameWithType: "DigitalTwinsImpl.getRelationshipByIdWithResponseAsync(String id, String relationshipId, DigitalTwinsGetRelationshipByIdOptions digitalTwinsGetRelationshipByIdOptions, Context context)"
  summary: "Retrieves a relationship between two digital twins. Status codes: \\* 200 OK \\* 400 Bad Request \\* InvalidArgument - The digital twin id or relationship id is invalid. \\* 404 Not Found \\* DigitalTwinNotFound - The digital twin was not found. \\* RelationshipNotFound - The relationship was not found."
  parameters:
  - description: "The id of the digital twin. The id is unique within the service and case sensitive."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The id of the relationship. The id is unique within the digital twin and case sensitive."
    name: "relationshipId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter group."
    name: "digitalTwinsGetRelationshipByIdOptions"
    type: "<xref href=\"com.azure.digitaltwins.core.implementation.models.DigitalTwinsGetRelationshipByIdOptions?alt=com.azure.digitaltwins.core.implementation.models.DigitalTwinsGetRelationshipByIdOptions&text=DigitalTwinsGetRelationshipByIdOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DigitalTwinsGetRelationshipByIdResponse> getRelationshipByIdWithResponseAsync(String id, String relationshipId, DigitalTwinsGetRelationshipByIdOptions digitalTwinsGetRelationshipByIdOptions, Context context)"
  returns:
    description: "any object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.digitaltwins.core.implementation.models.DigitalTwinsGetRelationshipByIdResponse?alt=com.azure.digitaltwins.core.implementation.models.DigitalTwinsGetRelationshipByIdResponse&text=DigitalTwinsGetRelationshipByIdResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.digitaltwins.core.implementation"
artifact: com.azure:azure-digitaltwins-core:1.0.3
