### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.models.DeploymentProperties.withTemplate*"
fullName: "com.azure.resourcemanager.resources.models.DeploymentProperties.withTemplate"
name: "withTemplate"
nameWithType: "DeploymentProperties.withTemplate"
members:
- uid: "com.azure.resourcemanager.resources.models.DeploymentProperties.withTemplate(java.lang.Object)"
  fullName: "com.azure.resourcemanager.resources.models.DeploymentProperties.withTemplate(Object template)"
  name: "withTemplate(Object template)"
  nameWithType: "DeploymentProperties.withTemplate(Object template)"
  summary: "Set the template property: The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
  parameters:
  - description: "the template value to set."
    name: "template"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DeploymentProperties withTemplate(Object template)"
  returns:
    description: "the DeploymentProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentProperties?alt=com.azure.resourcemanager.resources.models.DeploymentProperties&text=DeploymentProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
