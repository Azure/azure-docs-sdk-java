items:
- uid: system.fabric._service_type_health_policy
  id: _service_type_health_policy
  parent: system.fabric
  children:
  - system.fabric._service_type_health_policy.getMaxPercentUnhealthyPartitionsPerService()
  - system.fabric._service_type_health_policy.getMaxPercentUnhealthyReplicasPerPartition()
  - system.fabric._service_type_health_policy.getMaxPercentUnhealthyServices()
  - system.fabric._service_type_health_policy.ServiceTypeHealthPolicy()
  - system.fabric._service_type_health_policy.setMaxPercentUnhealthyPartitionsPerService(byte)
  - system.fabric._service_type_health_policy.setMaxPercentUnhealthyReplicasPerPartition(byte)
  - system.fabric._service_type_health_policy.setMaxPercentUnhealthyServices(byte)
  href: system.fabric._service_type_health_policy.yml
  langs:
  - java
  name: ServiceTypeHealthPolicy
  nameWithType: ServiceTypeHealthPolicy
  fullName: system.fabric.ServiceTypeHealthPolicy
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
    startLine: 10
  package: system.fabric
  summary: <p>Represents the health policy used to evaluate the health of services belonging to a service type. </p>
  syntax: &o1
    content: public class ServiceTypeHealthPolicy
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - system.fabric._service_type_health_policy.toNative(PinCollection)
  - system.fabric._service_type_health_policy.ToNative(byte,byte,byte)
  - system.fabric._service_type_health_policy.toNativeMap(PinCollection,Map<String, ServiceTypeHealthPolicy>)
  - system.fabric._service_type_health_policy.ToNativeMap(long,int)
  - system.fabric._service_type_health_policy.ToNativeMapArray(long [])
  - system.fabric._service_type_health_policy.ToNativeMapItem(long,long)
- uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyPartitionsPerService()
  id: getMaxPercentUnhealthyPartitionsPerService()
  parent: system.fabric._service_type_health_policy
  href: system.fabric._service_type_health_policy.yml
  langs:
  - java
  name: getMaxPercentUnhealthyPartitionsPerService()
  nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyPartitionsPerService()
  fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyPartitionsPerService()
  overload: system.fabric._service_type_health_policy.getMaxPercentUnhealthyPartitionsPerService*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
    startLine: 145
  package: system.fabric
  summary: >-
    <p>Gets or sets the maximum allowed percentage of unhealthy partitions per service.</p>

    <p></p>
  syntax:
    content: public byte getMaxPercentUnhealthyPartitionsPerService()
    return:
      type: d357ea40
      description: '<p>Returns the maximum allowed percentage of unhealthy partitions per service. Allowed values are <ref refid="" kindref="compound">java.lang.Byte</ref> values from zero to 100 <bold>Remarks:</bold>The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error. If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service. The computation rounds up to tolerate one failure on small numbers of partitions. Default percentage: zero. </p>'
- uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyReplicasPerPartition()
  id: getMaxPercentUnhealthyReplicasPerPartition()
  parent: system.fabric._service_type_health_policy
  href: system.fabric._service_type_health_policy.yml
  langs:
  - java
  name: getMaxPercentUnhealthyReplicasPerPartition()
  nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyReplicasPerPartition()
  fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyReplicasPerPartition()
  overload: system.fabric._service_type_health_policy.getMaxPercentUnhealthyReplicasPerPartition*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
    startLine: 187
  package: system.fabric
  summary: >-
    <p>Gets or sets the maximum allowed percentage of unhealthy replicas per partition.</p>

    <p></p>
  syntax:
    content: public byte getMaxPercentUnhealthyReplicasPerPartition()
    return:
      type: d357ea40
      description: '<p>Returns the maximum allowed percentage of unhealthy replicas per partition. Allowed values are <ref refid="" kindref="compound">java.lang.Byte</ref> values from zero to 100. <bold>Remarks:</bold>The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error. If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition. The computation rounds up to tolerate one failure on small numbers of replicas. Default percentage: zero. </p>'
- uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyServices()
  id: getMaxPercentUnhealthyServices()
  parent: system.fabric._service_type_health_policy
  href: system.fabric._service_type_health_policy.yml
  langs:
  - java
  name: getMaxPercentUnhealthyServices()
  nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyServices()
  fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyServices()
  overload: system.fabric._service_type_health_policy.getMaxPercentUnhealthyServices*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
    startLine: 103
  package: system.fabric
  summary: >-
    <p>Gets the maximum allowed percentage of unhealthy services.</p>

    <p>

      <bold>Remarks:</bold>The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error. If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type. The computation rounds up to tolerate one failure on small numbers of services. Default percentage: zero. </p>
  syntax:
    content: public byte getMaxPercentUnhealthyServices()
    return:
      type: d357ea40
      description: <p>Returns the maximum allowed percentage of unhealthy services. Allowed values are <ref refid="" kindref="compound">java.lang.Byte</ref> values from zero to 100. </p>
- uid: system.fabric._service_type_health_policy.ServiceTypeHealthPolicy()
  id: ServiceTypeHealthPolicy()
  parent: system.fabric._service_type_health_policy
  href: system.fabric._service_type_health_policy.yml
  langs:
  - java
  name: ServiceTypeHealthPolicy()
  nameWithType: ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()
  fullName: system.fabric.ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()
  overload: system.fabric._service_type_health_policy.ServiceTypeHealthPolicy*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
    startLine: 33
  package: system.fabric
  summary: >-
    <p>Initializes a new instance of <ref refid="" kindref="compound">system.fabric.ServiceTypeHealthPolicy</ref> class. </p>

    <p>

      <bold>Remarks:</bold>By default, no errors or warnings are tolerated. </p>
  syntax:
    content: public ServiceTypeHealthPolicy()
- uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyPartitionsPerService(byte)
  id: setMaxPercentUnhealthyPartitionsPerService(byte)
  parent: system.fabric._service_type_health_policy
  href: system.fabric._service_type_health_policy.yml
  langs:
  - java
  name: setMaxPercentUnhealthyPartitionsPerService(byte maxPercentUnhealthyPartitionsPerService)
  nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyPartitionsPerService(byte maxPercentUnhealthyPartitionsPerService)
  fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyPartitionsPerService(byte maxPercentUnhealthyPartitionsPerService)
  overload: system.fabric._service_type_health_policy.setMaxPercentUnhealthyPartitionsPerService*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
    startLine: 164
  package: system.fabric
  summary: >-
    <p>Sets the maximum allowed percentage of unhealthy partitions per service.</p>

    <p></p>
  syntax:
    content: public void setMaxPercentUnhealthyPartitionsPerService(byte maxPercentUnhealthyPartitionsPerService)
    parameters:
    - id: maxPercentUnhealthyPartitionsPerService
      type: d357ea40
      description: <p>The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error. </p>
  exceptions:
  - type: 3c87bd19
    description: '<p>The specified value was outside the range of integer values from zero to 100. <bold>Remarks:</bold>The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error. If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service. The computation rounds up to tolerate one failure on small numbers of partitions. Default percentage: zero. </p>'
- uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyReplicasPerPartition(byte)
  id: setMaxPercentUnhealthyReplicasPerPartition(byte)
  parent: system.fabric._service_type_health_policy
  href: system.fabric._service_type_health_policy.yml
  langs:
  - java
  name: setMaxPercentUnhealthyReplicasPerPartition(byte maxPercentUnhealthyReplicasPerPartition)
  nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyReplicasPerPartition(byte maxPercentUnhealthyReplicasPerPartition)
  fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyReplicasPerPartition(byte maxPercentUnhealthyReplicasPerPartition)
  overload: system.fabric._service_type_health_policy.setMaxPercentUnhealthyReplicasPerPartition*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
    startLine: 207
  package: system.fabric
  summary: >-
    <p>Gets or sets the maximum allowed percentage of unhealthy replicas per partition.</p>

    <p>

      <bold>Remarks:</bold>The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error. If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition. The computation rounds up to tolerate one failure on small numbers of replicas. Default percentage: zero. </p>
  syntax:
    content: public void setMaxPercentUnhealthyReplicasPerPartition(byte maxPercentUnhealthyReplicasPerPartition)
    parameters:
    - id: maxPercentUnhealthyReplicasPerPartition
      type: d357ea40
      description: <p>The percentage represents the maximum tolerated percentage of replicas in a partition that can be unhealthy before the service is considered in error. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>The specified value was outside the range of integer values from zero to 100. </p>
- uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyServices(byte)
  id: setMaxPercentUnhealthyServices(byte)
  parent: system.fabric._service_type_health_policy
  href: system.fabric._service_type_health_policy.yml
  langs:
  - java
  name: setMaxPercentUnhealthyServices(byte maxPercentUnhealthyServices)
  nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyServices(byte maxPercentUnhealthyServices)
  fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyServices(byte maxPercentUnhealthyServices)
  overload: system.fabric._service_type_health_policy.setMaxPercentUnhealthyServices*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
    startLine: 123
  package: system.fabric
  summary: >-
    <p>Sets the maximum allowed percentage of unhealthy services.</p>

    <p></p>
  syntax:
    content: public void setMaxPercentUnhealthyServices(byte maxPercentUnhealthyServices)
    parameters:
    - id: maxPercentUnhealthyServices
      type: d357ea40
      description: <p>Maximum tolerated percentage of services that can be unhealthy. </p>
  exceptions:
  - type: 3c87bd19
    description: '<p>if input less than 0 or greater than 100. <bold>Remarks:</bold>The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error. The specified value was outside the range of integer values from zero to 100. If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type. The computation rounds up to tolerate one failure on small numbers of services. Default percentage: zero. </p>'
references:
- uid: system.fabric._service_type_health_policy.ServiceTypeHealthPolicy*
  name: ServiceTypeHealthPolicy
  nameWithType: ServiceTypeHealthPolicy.ServiceTypeHealthPolicy
  fullName: system.fabric.ServiceTypeHealthPolicy.ServiceTypeHealthPolicy
  package: system.fabric
- uid: d357ea40
  spec.java:
  - name: byte
    fullName: byte
- uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyServices*
  name: getMaxPercentUnhealthyServices
  nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyServices
  fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyServices
  package: system.fabric
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyServices*
  name: setMaxPercentUnhealthyServices
  nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyServices
  fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyServices
  package: system.fabric
- uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyPartitionsPerService*
  name: getMaxPercentUnhealthyPartitionsPerService
  nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyPartitionsPerService
  fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyPartitionsPerService
  package: system.fabric
- uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyPartitionsPerService*
  name: setMaxPercentUnhealthyPartitionsPerService
  nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyPartitionsPerService
  fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyPartitionsPerService
  package: system.fabric
- uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyReplicasPerPartition*
  name: getMaxPercentUnhealthyReplicasPerPartition
  nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyReplicasPerPartition
  fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyReplicasPerPartition
  package: system.fabric
- uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyReplicasPerPartition*
  name: setMaxPercentUnhealthyReplicasPerPartition
  nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyReplicasPerPartition
  fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyReplicasPerPartition
  package: system.fabric
- uid: system.fabric._service_type_health_policy.toNative(PinCollection)
- uid: system.fabric._service_type_health_policy.ToNative(byte,byte,byte)
- uid: system.fabric._service_type_health_policy.toNativeMap(PinCollection,Map<String, ServiceTypeHealthPolicy>)
- uid: system.fabric._service_type_health_policy.ToNativeMap(long,int)
- uid: system.fabric._service_type_health_policy.ToNativeMapArray(long [])
- uid: system.fabric._service_type_health_policy.ToNativeMapItem(long,long)
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  nameWithType: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
- uid: system.fabric._service_type_health_policy
  parent: system.fabric
  href: system.fabric._service_type_health_policy.yml
  name: ServiceTypeHealthPolicy
  nameWithType: ServiceTypeHealthPolicy
  fullName: system.fabric.ServiceTypeHealthPolicy
  type: Class
  summary: <p>Represents the health policy used to evaluate the health of services belonging to a service type. </p>
  syntax: *o1
