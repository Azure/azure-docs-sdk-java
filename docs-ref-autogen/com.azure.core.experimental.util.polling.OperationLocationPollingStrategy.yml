### YamlMime:JavaType
uid: "com.azure.core.experimental.util.polling.OperationLocationPollingStrategy"
fullName: "com.azure.core.experimental.util.polling.OperationLocationPollingStrategy<T,U>"
name: "OperationLocationPollingStrategy<T,U>"
nameWithType: "OperationLocationPollingStrategy<T,U>"
summary: "Implements an operation location polling strategy, from Operation-Location."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.polling.OperationResourcePollingStrategy?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.util.polling.OperationResourcePollingStrategy?alt=com.azure.core.util.polling.OperationResourcePollingStrategy&text=OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.util.polling.OperationResourcePollingStrategy.canPoll(com.azure.core.http.rest.Response<?>)?alt=com.azure.core.util.polling.OperationResourcePollingStrategy.canPoll&text=canPoll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.polling.OperationResourcePollingStrategy.getResult(com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<U>)?alt=com.azure.core.util.polling.OperationResourcePollingStrategy.getResult&text=getResult\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.polling.OperationResourcePollingStrategy.onInitialResponse(com.azure.core.http.rest.Response<?>,com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<T>)?alt=com.azure.core.util.polling.OperationResourcePollingStrategy.onInitialResponse&text=onInitialResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.polling.OperationResourcePollingStrategy.poll(com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<T>)?alt=com.azure.core.util.polling.OperationResourcePollingStrategy.poll&text=poll\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **OperationLocationPollingStrategy<T,U>**</br> extends <xref href=\"com.azure.core.util.polling.OperationResourcePollingStrategy?alt=com.azure.core.util.polling.OperationResourcePollingStrategy&text=OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.core.experimental.util.polling.OperationLocationPollingStrategy.OperationLocationPollingStrategy(com.azure.core.util.polling.PollingStrategyOptions)"
  fullName: "com.azure.core.experimental.util.polling.OperationLocationPollingStrategy<T,U>.OperationLocationPollingStrategy(PollingStrategyOptions pollingStrategyOptions)"
  name: "OperationLocationPollingStrategy(PollingStrategyOptions pollingStrategyOptions)"
  nameWithType: "OperationLocationPollingStrategy<T,U>.OperationLocationPollingStrategy(PollingStrategyOptions pollingStrategyOptions)"
  summary: "Creates an instance of the operation resource polling strategy."
  parameters:
  - description: "options to configure this polling strategy."
    name: "pollingStrategyOptions"
    type: "<xref href=\"com.azure.core.util.polling.PollingStrategyOptions?alt=com.azure.core.util.polling.PollingStrategyOptions&text=PollingStrategyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OperationLocationPollingStrategy(PollingStrategyOptions pollingStrategyOptions)"
  desc: "Creates an instance of the operation resource polling strategy."
methods:
- uid: "com.azure.core.experimental.util.polling.OperationLocationPollingStrategy.getResult(com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<U>)"
  fullName: "com.azure.core.experimental.util.polling.OperationLocationPollingStrategy<T,U>.getResult(PollingContext<T> pollingContext, TypeReference<U> resultType)"
  name: "getResult(PollingContext<T> pollingContext, TypeReference<U> resultType)"
  nameWithType: "OperationLocationPollingStrategy<T,U>.getResult(PollingContext<T> pollingContext, TypeReference<U> resultType)"
  overridden: "com.azure.core.util.polling.OperationResourcePollingStrategy.getResult(com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<U>)"
  parameters:
  - name: "pollingContext"
    type: "<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "resultType"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<U> getResult(PollingContext<T> pollingContext, TypeReference<U> resultType)"
  returns:
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.experimental.util.polling.OperationLocationPollingStrategy.onInitialResponse(com.azure.core.http.rest.Response<?>,com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.experimental.util.polling.OperationLocationPollingStrategy<T,U>.onInitialResponse(Response<?> response, PollingContext<T> pollingContext, TypeReference<T> pollResponseType)"
  name: "onInitialResponse(Response<?> response, PollingContext<T> pollingContext, TypeReference<T> pollResponseType)"
  nameWithType: "OperationLocationPollingStrategy<T,U>.onInitialResponse(Response<?> response, PollingContext<T> pollingContext, TypeReference<T> pollResponseType)"
  overridden: "com.azure.core.util.polling.OperationResourcePollingStrategy.onInitialResponse(com.azure.core.http.rest.Response<?>,com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<T>)"
  parameters:
  - name: "response"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "pollingContext"
    type: "<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "pollResponseType"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<PollResponse<T>> onInitialResponse(Response<?> response, PollingContext<T> pollingContext, TypeReference<T> pollResponseType)"
  returns:
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
typeParameters:
- description: "the type of the response type from a polling call, or BinaryData if raw response body should be kept"
  name: "T"
- description: "the type of the final result object to deserialize into, or BinaryData if raw response body should be\n           kept"
  name: "U"
desc: "Implements an operation location polling strategy, from Operation-Location."
metadata: {}
package: "com.azure.core.experimental.util.polling"
artifact: com.azure:azure-core-experimental:1.0.0-beta.46
