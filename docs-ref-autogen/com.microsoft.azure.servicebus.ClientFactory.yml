### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.ClientFactory
  id: ClientFactory
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String,String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String,String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String,String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String,String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory,String,String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory,String,String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String,String,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String,String,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI,String,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI,String,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory,String,String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory,String,String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(String,String,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(String,String,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(URI,String,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(URI,String,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory,String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory,String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(String,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(String,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(URI,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(URI,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory,String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory,String,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI,String,ClientSettings,ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString(String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync(String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(MessagingFactory,String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(String,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(URI,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(MessagingFactory,String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(String,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(URI,String,ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath(MessagingFactory,String,String)
  - com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync(MessagingFactory,String,String)
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: ClientFactory
  nameWithType: ClientFactory
  fullName: com.microsoft.azure.servicebus.ClientFactory
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 17
  package: com.microsoft.azure.servicebus
  summary: "<p>Utility class for creating message senders and receivers. </p>"
  syntax:
    content: public class ClientFactory
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String,String)
  id: acceptSessionFromConnectionString(String,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 484
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.</p>\r\n<p></p>"
  syntax:
    content: public static IMessageSession acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>connection string </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false" data-raw-source="IMessageSession"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String,String,ReceiveMode)
  id: acceptSessionFromConnectionString(String,String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 498
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.</p>\r\n<p></p>"
  syntax:
    content: public static IMessageSession acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>connection string </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false" data-raw-source="ReceiveMode"></xref> PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false" data-raw-source="IMessageSession"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String,String)
  id: acceptSessionFromConnectionStringAsync(String,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 621
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode asynchronously from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.</p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>the connection string </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String,String,ReceiveMode)
  id: acceptSessionFromConnectionStringAsync(String,String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 633
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> asynchronously from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.</p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>the connection string </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false" data-raw-source="ReceiveMode"></xref> PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String)
  id: acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 511
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode from service bus connection string builder with specified session id. Session Id can be null, if null, service will return the first available session.</p>\r\n<p></p>"
  syntax:
    content: public static IMessageSession acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>the connection string builder </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false" data-raw-source="IMessageSession"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String,ReceiveMode)
  id: acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 525
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> from service bus connection string builder with specified session id. Session Id can be null, if null, service will return the first available session.</p>\r\n<p></p>"
  syntax:
    content: public static IMessageSession acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>the connection string builder </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false" data-raw-source="ReceiveMode"></xref> PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false" data-raw-source="IMessageSession"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String)
  id: acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 645
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode asynchronously from service bus connection string builder with specified session id. Session Id can be null, if null, service will return the first available session.</p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>the connection string builder </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String,ReceiveMode)
  id: acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 657
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> asynchronously from service bus connection string builder with specified session id. Session Id can be null, if null, service will return the first available session.</p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>connection string builder </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false" data-raw-source="ReceiveMode"></xref> PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory,String,String)
  id: acceptSessionFromEntityPath(MessagingFactory,String,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 596
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which the session receiver needs to be created. </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <p>IMessageSession instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory,String,String,ReceiveMode)
  id: acceptSessionFromEntityPath(MessagingFactory,String,String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 610
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which the session receiver needs to be created. </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <p>IMessageSession instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String,String,String,ClientSettings)
  id: acceptSessionFromEntityPath(String,String,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 539
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> from service bus using the client settings with specified session id in PeekLock mode. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <p>IMessageSession instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String,String,String,ClientSettings,ReceiveMode)
  id: acceptSessionFromEntityPath(String,String,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 554
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <p>IMessageSession instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI,String,String,ClientSettings)
  id: acceptSessionFromEntityPath(URI,String,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 568
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> from service bus using the client settings with specified session id in PeekLock mode. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <p>IMessageSession instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI,String,String,ClientSettings,ReceiveMode)
  id: acceptSessionFromEntityPath(URI,String,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 583
  package: com.microsoft.azure.servicebus
  summary: "<p>Accept a <xref uid=\"com.microsoft.azure.servicebus.IMessageSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession\"></xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <p>IMessageSession instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the session cannot be accepted </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory,String,String)
  id: acceptSessionFromEntityPathAsync(MessagingFactory,String,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 723
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously accepts a session from service bus using the client settings. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which the session receiver needs to be created. </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory,String,String,ReceiveMode)
  id: acceptSessionFromEntityPathAsync(MessagingFactory,String,String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 735
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously accepts a session from service bus using the client settings. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which the session receiver needs to be created. </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(String,String,String,ClientSettings)
  id: acceptSessionFromEntityPathAsync(String,String,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 670
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously accepts a session in PeekLock mode from service bus using the client settings. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(String,String,String,ClientSettings,ReceiveMode)
  id: acceptSessionFromEntityPathAsync(String,String,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 683
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously accepts a session from service bus using the client settings. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(URI,String,String,ClientSettings)
  id: acceptSessionFromEntityPathAsync(URI,String,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 696
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously accepts a session in PeekLock mode from service bus using the client settings. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(URI,String,String,ClientSettings,ReceiveMode)
  id: acceptSessionFromEntityPathAsync(URI,String,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 709
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously accepts a session from service bus using the client settings. Session Id can be null, if null, service will return the first available session. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: sessionId
      type: "26831127"
      description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
      description: <p>a CompletableFuture representing the pending session accepting </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String)
  id: createMessageReceiverFromConnectionString(String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromConnectionString(String amqpConnectionString)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 223
  package: com.microsoft.azure.servicebus
  summary: "<p>Create <xref uid=\"com.microsoft.azure.servicebus.IMessageReceiver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageReceiver\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode from service bus connection string with <a href=\"https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas\">Shared Access Signatures</a></p>\r\n<p></p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromConnectionString(String amqpConnectionString)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>the connection string </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false" data-raw-source="IMessageReceiver"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String,ReceiveMode)
  id: createMessageReceiverFromConnectionString(String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 236
  package: com.microsoft.azure.servicebus
  summary: "<p>Create <xref uid=\"com.microsoft.azure.servicebus.IMessageReceiver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageReceiver\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode from service bus connection string with <a href=\"https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas\">Shared Access Signatures</a></p>\r\n<p></p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>the connection string </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false" data-raw-source="ReceiveMode"></xref> PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false" data-raw-source="IMessageReceiver"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String)
  id: createMessageReceiverFromConnectionStringAsync(String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 360
  package: com.microsoft.azure.servicebus
  summary: "<p>Create <xref uid=\"com.microsoft.azure.servicebus.IMessageReceiver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageReceiver\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode asynchronously from connection string with <a href=\"https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas\">Shared Access Signatures</a></p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>the connection string </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creating </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String,ReceiveMode)
  id: createMessageReceiverFromConnectionStringAsync(String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 371
  package: com.microsoft.azure.servicebus
  summary: "<p>Create <xref uid=\"com.microsoft.azure.servicebus.IMessageReceiver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageReceiver\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode asynchronously from connection string with <a href=\"https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas\">Shared Access Signatures</a></p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>the connection string </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false" data-raw-source="ReceiveMode"></xref> PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creating </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder)
  id: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 251
  package: com.microsoft.azure.servicebus
  summary: "<p>Create <xref uid=\"com.microsoft.azure.servicebus.IMessageReceiver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageReceiver\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode from ConnectionStringBuilder <pre>\r\n    IMessageReceiver messageReceiver = ClientFactory.createMessageReceiverFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName));\r\n</pre></p>\r\n<p></p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref>

        </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <p>The <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false" data-raw-source="IMessageReceiver"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder,ReceiveMode)
  id: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 267
  package: com.microsoft.azure.servicebus
  summary: "<p>Create <xref uid=\"com.microsoft.azure.servicebus.IMessageReceiver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageReceiver\"></xref> from ConnectionStringBuilder <pre>\r\n    IMessageReceiver messageReceiver = ClientFactory.createMessageReceiverFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName), ReceiveMode.PEEKLOCK);\r\n</pre></p>\r\n<p></p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref>

        </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false" data-raw-source="ReceiveMode"></xref> PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <p>The <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false" data-raw-source="IMessageReceiver"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder)
  id: createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 382
  package: com.microsoft.azure.servicebus
  summary: "<p>Create <xref uid=\"com.microsoft.azure.servicebus.IMessageReceiver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageReceiver\"></xref> in default <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode asynchronously from ConnectionStringBuilder</p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>the connection string builder </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creating </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder,ReceiveMode)
  id: createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 393
  package: com.microsoft.azure.servicebus
  summary: "<p>Create <xref uid=\"com.microsoft.azure.servicebus.IMessageReceiver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageReceiver\"></xref> asynchronously from ConnectionStringBuilder</p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>the connection string builder </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false" data-raw-source="ReceiveMode"></xref> PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creating </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory,String)
  id: createMessageReceiverFromEntityPath(MessagingFactory,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 333
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message receiver to the entity. </p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which receiver needs to be created </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of the entity </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <p>IMessageReceiver instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory,String,ReceiveMode)
  id: createMessageReceiverFromEntityPath(MessagingFactory,String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 346
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message receiver to the entity. </p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which receiver needs to be created </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of the entity </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <p>IMessageReceiver instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(String,String,ClientSettings)
  id: createMessageReceiverFromEntityPath(String,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 280
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message receiver to the entity using the client settings in PeekLock mode </p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of the entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <p>IMessageReceiver instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(String,String,ClientSettings,ReceiveMode)
  id: createMessageReceiverFromEntityPath(String,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 294
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message receiver to the entity using the client settings. </p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of the entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <p>IMessageReceiver instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(URI,String,ClientSettings)
  id: createMessageReceiverFromEntityPath(URI,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 307
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message receiver to the entity using the client settings in PeekLock mode </p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of the entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <p>IMessageReceiver instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(URI,String,ClientSettings,ReceiveMode)
  id: createMessageReceiverFromEntityPath(URI,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 321
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message receiver to the entity using the client settings. </p>"
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of the entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <p>IMessageReceiver instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the receiver cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory,String)
  id: createMessageReceiverFromEntityPathAsync(MessagingFactory,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 454
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously creates a new message receiver to the entity on the messagingFactory. </p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which receiver needs to be created. </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creation of message receiver </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory,String,ReceiveMode)
  id: createMessageReceiverFromEntityPathAsync(MessagingFactory,String,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 465
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously creates a new message receiver to the entity on the messagingFactory. </p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which receiver needs to be created. </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creation of message receiver </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String,String,ClientSettings)
  id: createMessageReceiverFromEntityPathAsync(String,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 405
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously creates a message receiver to the entity using the client settings in PeekLock mode </p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creation of message receiver </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String,String,ClientSettings,ReceiveMode)
  id: createMessageReceiverFromEntityPathAsync(String,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 417
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously creates a message receiver to the entity using the client settings </p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creation of message receiver </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI,String,ClientSettings)
  id: createMessageReceiverFromEntityPathAsync(URI,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 429
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously creates a message receiver to the entity using the client settings in PeekLock mode </p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creation of message receiver </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI,String,ClientSettings,ReceiveMode)
  id: createMessageReceiverFromEntityPathAsync(URI,String,ClientSettings,ReceiveMode)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 441
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously creates a message receiver to the entity using the client settings </p>"
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>PeekLock or ReceiveAndDelete </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
      description: <p>a CompletableFuture representing the pending creation of message receiver </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString(String)
  id: createMessageSenderFromConnectionString(String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromConnectionString(String amqpConnectionString)
  nameWithType: ClientFactory.createMessageSenderFromConnectionString(String amqpConnectionString)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString(String amqpConnectionString)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 32
  package: com.microsoft.azure.servicebus
  summary: "<p>Create message sender from service bus connection string with <a href=\"https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas\">Shared Access Signatures</a></p>\r\n<p></p>"
  syntax:
    content: public static IMessageSender createMessageSenderFromConnectionString(String amqpConnectionString)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>the connection string </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.IMessageSender" data-throw-if-not-resolved="false" data-raw-source="IMessageSender"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the sender cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync(String)
  id: createMessageSenderFromConnectionStringAsync(String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 126
  package: com.microsoft.azure.servicebus
  summary: "<p>Create message sender asynchronously from connection string with <a href=\"https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas\">Shared Access Signatures</a></p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
    parameters:
    - id: amqpConnectionString
      type: "26831127"
      description: <p>the connection string </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSendera08ddfce
      description: <p>a CompletableFuture representing the pending creating of <xref uid="com.microsoft.azure.servicebus.IMessageSender" data-throw-if-not-resolved="false" data-raw-source="IMessageSender"></xref> instance </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder)
  id: createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 47
  package: com.microsoft.azure.servicebus
  summary: "<p>Create message sender from ConnectionStringBuilder <pre>\r\n    IMessageSender messageSender = ClientFactory.createMessageSenderFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName));\r\n</pre></p>\r\n<p></p>"
  syntax:
    content: public static IMessageSender createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>the connection string builder </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.IMessageSender" data-throw-if-not-resolved="false" data-raw-source="IMessageSender"></xref> instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the sender cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder)
  id: createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 137
  package: com.microsoft.azure.servicebus
  summary: "<p>Create message sender asynchronously from ConnectionStringBuilder</p>\r\n<p></p>"
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>the connection string builder </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSendera08ddfce
      description: <p>a CompletableFuture representing the pending creating of <xref uid="com.microsoft.azure.servicebus.IMessageSender" data-throw-if-not-resolved="false" data-raw-source="IMessageSender"></xref> instance </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(MessagingFactory,String)
  id: createMessageSenderFromEntityPath(MessagingFactory,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 93
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message sender to the entity. </p>"
  syntax:
    content: public static IMessageSender createMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which sender needs to be created </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: <p>IMessageSender instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the sender cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(String,String,ClientSettings)
  id: createMessageSenderFromEntityPath(String,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageSenderFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 64
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message sender to the entity using the client settings. </p>"
  syntax:
    content: public static IMessageSender createMessageSenderFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: <p>IMessageSender instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the sender cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(URI,String,ClientSettings)
  id: createMessageSenderFromEntityPath(URI,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageSenderFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 77
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message sender to the entity using the client settings. </p>"
  syntax:
    content: public static IMessageSender createMessageSenderFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: <p>IMessageSender instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the sender cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(MessagingFactory,String)
  id: createMessageSenderFromEntityPathAsync(MessagingFactory,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 186
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message sender asynchronously to the entity using the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MessagingFactory\"></xref></p>"
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which sender needs to be created </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSendera08ddfce
      description: <p>a CompletableFuture representing the pending creating of IMessageSender instance </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(String,String,ClientSettings)
  id: createMessageSenderFromEntityPathAsync(String,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageSenderFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 154
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message sender asynchronously to the entity using the client settings. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: "26831127"
      description: <p>namespace name of entity </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSendera08ddfce
      description: <p>a CompletableFuture representing the pending creating of IMessageSender instance </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(URI,String,ClientSettings)
  id: createMessageSenderFromEntityPathAsync(URI,String,ClientSettings)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createMessageSenderFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageSenderFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 168
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a message sender asynchronously to the entity using the client settings. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>endpoint uri of entity namespace </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of entity </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>client settings </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSendera08ddfce
      description: <p>a CompletableFuture representing the pending creating of IMessageSender instance </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath(MessagingFactory,String,String)
  id: createTransferMessageSenderFromEntityPath(MessagingFactory,String,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createTransferMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  nameWithType: ClientFactory.createTransferMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 115
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a transfer message sender. This sender sends message to destination entity via another entity.</p>\r\n<p>This is mainly to be used when sending messages in a transaction. When messages need to be sent across entities in a single transaction, this can be used to ensure all the messages land initially in the same entity/partition for local transactions, and then let service bus handle transferring the message to the actual destination. </p>"
  syntax:
    content: public static IMessageSender createTransferMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which sender needs to be created. </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of the final destination of the message. </p>
    - id: viaEntityPath
      type: "26831127"
      description: <p>The initial destination of the message. </p>
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: <p>IMessageSender instance </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the sender cannot be created </p>
- uid: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync(MessagingFactory,String,String)
  id: createTransferMessageSenderFromEntityPathAsync(MessagingFactory,String,String)
  parent: com.microsoft.azure.servicebus.ClientFactory
  href: com.microsoft.azure.servicebus.ClientFactory.yml
  langs:
  - java
  name: createTransferMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  nameWithType: ClientFactory.createTransferMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
    startLine: 208
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a transfer message sender asynchronously. This sender sends message to destination entity via another entity.</p>\r\n<p>This is mainly to be used when sending messages in a transaction. When messages need to be sent across entities in a single transaction, this can be used to ensure all the messages land initially in the same entity/partition for local transactions, and then let service bus handle transferring the message to the actual destination. </p>"
  syntax:
    content: public static CompletableFuture<IMessageSender> createTransferMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: <p>messaging factory (which represents a connection) on which sender needs to be created. </p>
    - id: entityPath
      type: "26831127"
      description: <p>path of the final destination of the message. </p>
    - id: viaEntityPath
      type: "26831127"
      description: <p>The initial destination of the message. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.IMessageSendera08ddfce
      description: <p>a CompletableFuture representing the pending creating of IMessageSender instance. </p>
references:
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: 73fec9fb
  spec.java:
  - name: ServiceBusException
    fullName: ServiceBusException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString*
  name: createMessageSenderFromConnectionString
  nameWithType: ClientFactory.createMessageSenderFromConnectionString
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder*
  name: createMessageSenderFromConnectionStringBuilder
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath*
  name: createMessageSenderFromEntityPath
  nameWithType: ClientFactory.createMessageSenderFromEntityPath
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath
  package: com.microsoft.azure.servicebus
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath*
  name: createTransferMessageSenderFromEntityPath
  nameWithType: ClientFactory.createTransferMessageSenderFromEntityPath
  fullName: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath
  package: com.microsoft.azure.servicebus
- uid: 9cdf14d0com.microsoft.azure.servicebus.IMessageSendera08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.IMessageSender
    name: IMessageSender
    fullName: com.microsoft.azure.servicebus.IMessageSender
    href: com.microsoft.azure.servicebus.IMessageSender.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync*
  name: createMessageSenderFromConnectionStringAsync
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync*
  name: createMessageSenderFromConnectionStringBuilderAsync
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilderAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync*
  name: createMessageSenderFromEntityPathAsync
  nameWithType: ClientFactory.createMessageSenderFromEntityPathAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync*
  name: createTransferMessageSenderFromEntityPathAsync
  nameWithType: ClientFactory.createTransferMessageSenderFromEntityPathAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString*
  name: createMessageReceiverFromConnectionString
  nameWithType: ClientFactory.createMessageReceiverFromConnectionString
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder*
  name: createMessageReceiverFromConnectionStringBuilder
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  name: createMessageReceiverFromEntityPath
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath
  package: com.microsoft.azure.servicebus
- uid: 9cdf14d0com.microsoft.azure.servicebus.IMessageReceivera08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.IMessageReceiver
    name: IMessageReceiver
    fullName: com.microsoft.azure.servicebus.IMessageReceiver
    href: com.microsoft.azure.servicebus.IMessageReceiver.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync*
  name: createMessageReceiverFromConnectionStringAsync
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync*
  name: createMessageReceiverFromConnectionStringBuilderAsync
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  name: createMessageReceiverFromEntityPathAsync
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString*
  name: acceptSessionFromConnectionString
  nameWithType: ClientFactory.acceptSessionFromConnectionString
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder*
  name: acceptSessionFromConnectionStringBuilder
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  name: acceptSessionFromEntityPath
  nameWithType: ClientFactory.acceptSessionFromEntityPath
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath
  package: com.microsoft.azure.servicebus
- uid: 9cdf14d0com.microsoft.azure.servicebus.IMessageSessiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.IMessageSession
    name: IMessageSession
    fullName: com.microsoft.azure.servicebus.IMessageSession
    href: com.microsoft.azure.servicebus.IMessageSession.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync*
  name: acceptSessionFromConnectionStringAsync
  nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync*
  name: acceptSessionFromConnectionStringBuilderAsync
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilderAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  name: acceptSessionFromEntityPathAsync
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ReceiveMode
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.ReceiveMode.yml
  name: ReceiveMode
  nameWithType: ReceiveMode
  fullName: com.microsoft.azure.servicebus.ReceiveMode
  type: Enum
  summary: "<p>Enumeration to represent the two receive modes Azure Service Bus supports.</p>\r\n<p></p>"
  syntax:
    content: public enum ReceiveMode
- uid: com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK
  parent: com.microsoft.azure.servicebus.ReceiveMode
  href: com.microsoft.azure.servicebus.ReceiveMode.yml
  name: PEEKLOCK
  nameWithType: ReceiveMode.PEEKLOCK
  fullName: com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK
  type: Field
  summary: "<p>In this mode, received message is not deleted from the queue or subscription, instead it is temporarily locked to the receiver, making it invisible to other receivers. Then the service waits for one of the three events <ul><li><p>If the receiver processes the message successfully, it calls  and the message will be deleted. </p></li><li><p>If the receiver decides that it can't process the message successfully, it calls  and the message will be unlocked and made available to other receivers. </p></li><li><p>If the receiver wants to defer the processing of the message to a later point in time, it calls  and the message will be deferred. A deferred can only be received by its sequence number. </p></li><li><p>If the receiver wants to dead-letter the message, it calls  and the message will be moved to a special sub-queue called deadletter queue. </p></li><li><p>If the receiver calls neither of these methods within a configurable period of time (by default, 60 seconds), the service assumes the receiver has failed. In this case, it behaves as if the receiver had called , making the message available to other receivers </p></li></ul></p>"
  syntax:
    content: public PEEKLOCK
- uid: com.microsoft.azure.servicebus.IMessageSender
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.IMessageSender.yml
  name: IMessageSender
  nameWithType: IMessageSender
  fullName: com.microsoft.azure.servicebus.IMessageSender
  type: Interface
  summary: "<p>Represents a message sender that sends messages to Azure Service Bus.</p>\r\n<p></p>"
  syntax:
    content: public interface IMessageSender
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ServiceBusException.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
  type: Class
  summary: "<p>This is the base exception that service bus will generate for all error cases. </p>"
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  type: Class
  summary: "<p>This class can be used to construct a connection string which can establish communication with ServiceBus entities. It can also be used to perform basic validation on an existing connection string. </p>\r\n<p>Sample Code: <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(\r\n                                             \"ServiceBusNamespaceName\", \r\n                                             \"ServiceBusEntityName\", // QueueName or TopicName or SubscriptionPath\r\n                                             \"SharedAccessSignatureKeyName\", \r\n                                             \"SharedAccessSignatureKey\");\r\n     \r\n    String connectionString = connectionStringBuilder.toString();\r\n    </code></pre></p>\r\n<p>A connection string is basically a string consisted of key-value pair separated by \";\". Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <ul><li><p>Endpoint - URL that points to the servicebus namespace </p></li><li><p>EntityPath - Path to the service bus entity (queue/topic/subscription/). For queues and topics, it is just the entity name. For subscriptions, path is &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p></li><li><p>SharedAccessKeyName - Key name to the corresponding shared access policy rule for the namespace, or entity. </p></li><li><p>SharedAccessKey - Key value for the corresponding shared access policy rule of the namespace or entity. </p></li><li><p>SharedAccessSignatureToken - Instead of a key name and key value, clients can provide an already generated SAS Token. </p></li><li><p>OperationTimeout - Default timeout to be used for all senders, receiver and clients created from this connection string. </p></li><li><p>RetryPolicy - Name of the retry policy. </p></li></ul></p>"
  syntax:
    content: public class ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus.ClientSettings
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.ClientSettings.yml
  name: ClientSettings
  nameWithType: ClientSettings
  fullName: com.microsoft.azure.servicebus.ClientSettings
  type: Class
  summary: "<p>Class encapsulating common client level settings like TokenProvider, RetryPolicy, OperationTimeout. </p>"
  syntax:
    content: public class ClientSettings
- uid: com.microsoft.azure.servicebus.primitives.MessagingFactory
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessagingFactory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
  type: Class
  summary: "<p>Abstracts all AMQP related details and encapsulates an AMQP connection and manages its life cycle. Each instance of this class represent one AMQP connection to the namespace. If an application creates multiple senders, receivers or clients using the same MessagingFactory instance, all those senders, receivers or clients will share the same connection to the namespace. </p>"
  syntax:
    content: public class MessagingFactory
- uid: com.microsoft.azure.servicebus.IMessageReceiver
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.IMessageReceiver.yml
  name: IMessageReceiver
  nameWithType: IMessageReceiver
  fullName: com.microsoft.azure.servicebus.IMessageReceiver
  type: Interface
  summary: "<p>Defines message receiver interface. The MessageReceiver can be used to receive messages from Queues and Subscriptions and acknowledge them. </p>"
  syntax:
    content: public interface IMessageReceiver
- uid: com.microsoft.azure.servicebus.IMessageSession
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.IMessageSession.yml
  name: IMessageSession
  nameWithType: IMessageSession
  fullName: com.microsoft.azure.servicebus.IMessageSession
  type: Interface
  summary: "<p>Describes a Session object. IMessageSession can be used to perform operations on sessions. </p>\r\n<p>Service Bus Sessions, also called 'Groups' in the AMQP 1.0 protocol, are unbounded sequences of related messages. ServiceBus guarantees ordering of messages in a session. </p>\r\n<p>Any sender can create a session when submitting messages into a Topic or Queue by setting the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#sessionId\"></xref> property on Message to some application defined unique identifier. At the AMQP 1.0 protocol level, this value maps to the group-id property. </p>\r\n<p>Sessions come into existence when there is at least one message with the session's SessionId in the Queue or Topic subscription. Once a Session exists, there is no defined moment or gesture for when the session expires or disappears. </p>"
  syntax:
    content: public interface IMessageSession
- uid: com.microsoft.azure.servicebus.primitives.MessagingEntityType
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessagingEntityType.yml
  name: MessagingEntityType
  nameWithType: MessagingEntityType
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityType
  type: Enum
  syntax:
    content: public enum MessagingEntityType
