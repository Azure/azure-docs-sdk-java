### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.ClientFactory
  id: ClientFactory
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString(java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync(java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  langs:
  - java
  name: ClientFactory
  nameWithType: ClientFactory
  fullName: com.microsoft.azure.servicebus.ClientFactory
  type: Class
  package: com.microsoft.azure.servicebus
  summary: Utility class for creating message senders and receivers.
  syntax:
    content: public final class ClientFactory
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.ClientFactory.ClientFactory()
  id: ClientFactory()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: ClientFactory()
  nameWithType: ClientFactory.ClientFactory()
  fullName: com.microsoft.azure.servicebus.ClientFactory.ClientFactory()
  overload: com.microsoft.azure.servicebus.ClientFactory.ClientFactory*
  type: Constructor
  package: com.microsoft.azure.servicebus
  syntax:
    content: private ClientFactory()
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(java.lang.String,java.lang.String)
  id: acceptSessionFromConnectionString(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: connection string
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromConnectionString(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: connection string
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(java.lang.String,java.lang.String)
  id: acceptSessionFromConnectionStringAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode asynchronously from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: the connection string
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromConnectionStringAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> asynchronously from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: the connection string
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String)
  id: acceptSessionFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode from service bus connection string builder with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: the connection string builder
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus connection string builder with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: the connection string builder
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String)
  id: acceptSessionFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode asynchronously from service bus connection string builder with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: the connection string builder
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> asynchronously from service bus connection string builder with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: connection string builder
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  id: acceptSessionFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which the session receiver needs to be created.
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: IMessageSession instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which the session receiver needs to be created.
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: IMessageSession instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: acceptSessionFromEntityPath(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id in PeekLock mode. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: IMessageSession instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromEntityPath(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: IMessageSession instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: acceptSessionFromEntityPath(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id in PeekLock mode. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: IMessageSession instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromEntityPath(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> from service bus using the client settings with specified session id. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static IMessageSession acceptSessionFromEntityPath(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageSession
      description: IMessageSession instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  id: acceptSessionFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously accepts a session from service bus using the client settings. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which the session receiver needs to be created.
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously accepts a session from service bus using the client settings. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String sessionId, ReceiveMode receiveMode)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which the session receiver needs to be created.
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: acceptSessionFromEntityPathAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously accepts a session in PeekLock mode from service bus using the client settings. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromEntityPathAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously accepts a session from service bus using the client settings. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(String namespaceName, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: acceptSessionFromEntityPathAsync(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously accepts a session in PeekLock mode from service bus using the client settings. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: acceptSessionFromEntityPathAsync(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously accepts a session from service bus using the client settings. Session Id can be null, if null, service will return the first available session.
  syntax:
    content: public static CompletableFuture<IMessageSession> acceptSessionFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, String sessionId, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: sessionId
      type: java.lang.String
      description: session id, if null, service will return the first available session, otherwise, service will return specified session
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
      description: a CompletableFuture representing the pending session accepting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(java.lang.String)
  id: createMessageReceiverFromConnectionString(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromConnectionString(String amqpConnectionString)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode from service bus connection string with [Shared Access Signatures][]



    [Shared Access Signatures]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromConnectionString(String amqpConnectionString)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: the connection string
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromConnectionString(java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode from service bus connection string with [Shared Access Signatures][]



    [Shared Access Signatures]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: the connection string
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(java.lang.String)
  id: createMessageReceiverFromConnectionStringAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode asynchronously from connection string with [Shared Access Signatures][]



    [Shared Access Signatures]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: the connection string
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creating
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromConnectionStringAsync(java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode asynchronously from connection string with [Shared Access Signatures][]



    [Shared Access Signatures]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: the connection string
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creating
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  id: createMessageReceiverFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode from ConnectionStringBuilder


    ```java

    IMessageReceiver messageReceiver = ClientFactory.createMessageReceiverFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName));

    ```
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref>
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: The <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> from ConnectionStringBuilder


    ```java

    IMessageReceiver messageReceiver = ClientFactory.createMessageReceiverFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName), ReceiveMode.PEEKLOCK);

    ```
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref>
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: The <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  id: createMessageReceiverFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Create <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode asynchronously from ConnectionStringBuilder
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: the connection string builder
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creating
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Create <xref uid="com.microsoft.azure.servicebus.IMessageReceiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> asynchronously from ConnectionStringBuilder
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: the connection string builder
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creating
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  id: createMessageReceiverFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message receiver to the entity.
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which receiver needs to be created
    - id: entityPath
      type: java.lang.String
      description: path of the entity
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: IMessageReceiver instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message receiver to the entity.
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which receiver needs to be created
    - id: entityPath
      type: java.lang.String
      description: path of the entity
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: IMessageReceiver instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: createMessageReceiverFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message receiver to the entity using the client settings in PeekLock mode
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of the entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: IMessageReceiver instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message receiver to the entity using the client settings.
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of the entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: IMessageReceiver instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: createMessageReceiverFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message receiver to the entity using the client settings in PeekLock mode
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of the entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: IMessageReceiver instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message receiver to the entity using the client settings.
  syntax:
    content: public static IMessageReceiver createMessageReceiverFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of the entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: com.microsoft.azure.servicebus.IMessageReceiver
      description: IMessageReceiver instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  id: createMessageReceiverFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously creates a new message receiver to the entity on the messagingFactory.
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which receiver needs to be created.
    - id: entityPath
      type: java.lang.String
      description: path of entity
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creation of message receiver
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously creates a new message receiver to the entity on the messagingFactory.
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, ReceiveMode receiveMode)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which receiver needs to be created.
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creation of message receiver
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: createMessageReceiverFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously creates a message receiver to the entity using the client settings in PeekLock mode
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creation of message receiver
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously creates a message receiver to the entity using the client settings
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creation of message receiver
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: createMessageReceiverFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously creates a message receiver to the entity using the client settings in PeekLock mode
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creation of message receiver
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  id: createMessageReceiverFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously creates a message receiver to the entity using the client settings
  syntax:
    content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings, ReceiveMode receiveMode)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    - id: receiveMode
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: PeekLock or ReceiveAndDelete
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
      description: a CompletableFuture representing the pending creation of message receiver
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString(java.lang.String)
  id: createMessageSenderFromConnectionString(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromConnectionString(String amqpConnectionString)
  nameWithType: ClientFactory.createMessageSenderFromConnectionString(String amqpConnectionString)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString(String amqpConnectionString)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create message sender from service bus connection string with [Shared Access Signatures][]



    [Shared Access Signatures]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas
  syntax:
    content: public static IMessageSender createMessageSenderFromConnectionString(String amqpConnectionString)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: the connection string
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: <xref uid="com.microsoft.azure.servicebus.IMessageSender" data-throw-if-not-resolved="false">IMessageSender</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync(java.lang.String)
  id: createMessageSenderFromConnectionStringAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create message sender asynchronously from connection string with [Shared Access Signatures][]



    [Shared Access Signatures]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
    parameters:
    - id: amqpConnectionString
      type: java.lang.String
      description: the connection string
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSender>
      description: a CompletableFuture representing the pending creating of <xref uid="com.microsoft.azure.servicebus.IMessageSender" data-throw-if-not-resolved="false">IMessageSender</xref> instance
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  id: createMessageSenderFromConnectionStringBuilder(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: >-
    Create message sender from ConnectionStringBuilder


    ```java

    IMessageSender messageSender = ClientFactory.createMessageSenderFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName));

    ```
  syntax:
    content: public static IMessageSender createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: the connection string builder
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: <xref uid="com.microsoft.azure.servicebus.IMessageSender" data-throw-if-not-resolved="false">IMessageSender</xref> instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  id: createMessageSenderFromConnectionStringBuilderAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Create message sender asynchronously from ConnectionStringBuilder
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    parameters:
    - id: amqpConnectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: the connection string builder
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSender>
      description: a CompletableFuture representing the pending creating of <xref uid="com.microsoft.azure.servicebus.IMessageSender" data-throw-if-not-resolved="false">IMessageSender</xref> instance
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  id: createMessageSenderFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message sender to the entity.
  syntax:
    content: public static IMessageSender createMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which sender needs to be created
    - id: entityPath
      type: java.lang.String
      description: path of entity
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: IMessageSender instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: createMessageSenderFromEntityPath(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageSenderFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message sender to the entity using the client settings.
  syntax:
    content: public static IMessageSender createMessageSenderFromEntityPath(String namespaceName, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace of entity
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: IMessageSender instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: createMessageSenderFromEntityPath(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageSenderFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message sender to the entity using the client settings.
  syntax:
    content: public static IMessageSender createMessageSenderFromEntityPath(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: IMessageSender instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  id: createMessageSenderFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  nameWithType: ClientFactory.createMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message sender asynchronously to the entity using the <xref uid="com.microsoft.azure.servicebus.primitives.MessagingFactory" data-throw-if-not-resolved="false">MessagingFactory</xref>
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which sender needs to be created
    - id: entityPath
      type: java.lang.String
      description: path of entity
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSender>
      description: a CompletableFuture representing the pending creating of IMessageSender instance
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: createMessageSenderFromEntityPathAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageSenderFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message sender asynchronously to the entity using the client settings.
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromEntityPathAsync(String namespaceName, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceName
      type: java.lang.String
      description: namespace name of entity
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSender>
      description: a CompletableFuture representing the pending creating of IMessageSender instance
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  id: createMessageSenderFromEntityPathAsync(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createMessageSenderFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  nameWithType: ClientFactory.createMessageSenderFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message sender asynchronously to the entity using the client settings.
  syntax:
    content: public static CompletableFuture<IMessageSender> createMessageSenderFromEntityPathAsync(URI namespaceEndpointURI, String entityPath, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: endpoint uri of entity namespace
    - id: entityPath
      type: java.lang.String
      description: path of entity
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: client settings
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSender>
      description: a CompletableFuture representing the pending creating of IMessageSender instance
- uid: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  id: createTransferMessageSenderFromEntityPath(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createTransferMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  nameWithType: ClientFactory.createTransferMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a transfer message sender. This sender sends message to destination entity via another entity. This is mainly to be used when sending messages in a transaction. When messages need to be sent across entities in a single transaction, this can be used to ensure all the messages land initially in the same entity/partition for local transactions, and then let service bus handle transferring the message to the actual destination.
  syntax:
    content: public static IMessageSender createTransferMessageSenderFromEntityPath(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which sender needs to be created.
    - id: entityPath
      type: java.lang.String
      description: path of the final destination of the message.
    - id: viaEntityPath
      type: java.lang.String
      description: The initial destination of the message.
    return:
      type: com.microsoft.azure.servicebus.IMessageSender
      description: IMessageSender instance
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  id: createTransferMessageSenderFromEntityPathAsync(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ClientFactory
  langs:
  - java
  name: createTransferMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  nameWithType: ClientFactory.createTransferMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  fullName: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
  overload: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a transfer message sender asynchronously. This sender sends message to destination entity via another entity. This is mainly to be used when sending messages in a transaction. When messages need to be sent across entities in a single transaction, this can be used to ensure all the messages land initially in the same entity/partition for local transactions, and then let service bus handle transferring the message to the actual destination.
  syntax:
    content: public static CompletableFuture<IMessageSender> createTransferMessageSenderFromEntityPathAsync(MessagingFactory messagingFactory, String entityPath, String viaEntityPath)
    parameters:
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
      description: messaging factory (which represents a connection) on which sender needs to be created.
    - id: entityPath
      type: java.lang.String
      description: path of the final destination of the message.
    - id: viaEntityPath
      type: java.lang.String
      description: The initial destination of the message.
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSender>
      description: a CompletableFuture representing the pending creating of IMessageSender instance.
references:
- uid: com.microsoft.azure.servicebus.ClientFactory.ClientFactory*
  name: ClientFactory
  nameWithType: ClientFactory.ClientFactory
  fullName: com.microsoft.azure.servicebus.ClientFactory.ClientFactory
  package: com.microsoft.azure.servicebus
- uid: java.lang.InterruptedException
  spec.java:
  - uid: java.lang.InterruptedException
    name: InterruptedException
    fullName: java.lang.InterruptedException
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.servicebus.IMessageSender
  name: IMessageSender
  nameWithType: IMessageSender
  fullName: com.microsoft.azure.servicebus.IMessageSender
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString*
  name: createMessageSenderFromConnectionString
  nameWithType: ClientFactory.createMessageSenderFromConnectionString
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder*
  name: createMessageSenderFromConnectionStringBuilder
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientSettings
  name: ClientSettings
  nameWithType: ClientSettings
  fullName: com.microsoft.azure.servicebus.ClientSettings
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath*
  name: createMessageSenderFromEntityPath
  nameWithType: ClientFactory.createMessageSenderFromEntityPath
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPath
  package: com.microsoft.azure.servicebus
- uid: java.net.URI
  spec.java:
  - uid: java.net.URI
    name: URI
    fullName: java.net.URI
- uid: com.microsoft.azure.servicebus.primitives.MessagingFactory
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
- uid: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath*
  name: createTransferMessageSenderFromEntityPath
  nameWithType: ClientFactory.createTransferMessageSenderFromEntityPath
  fullName: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPath
  package: com.microsoft.azure.servicebus
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSender>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.IMessageSender
    name: IMessageSender
    fullName: com.microsoft.azure.servicebus.IMessageSender
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync*
  name: createMessageSenderFromConnectionStringAsync
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync*
  name: createMessageSenderFromConnectionStringBuilderAsync
  nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilderAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync*
  name: createMessageSenderFromEntityPathAsync
  nameWithType: ClientFactory.createMessageSenderFromEntityPathAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromEntityPathAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync*
  name: createTransferMessageSenderFromEntityPathAsync
  nameWithType: ClientFactory.createTransferMessageSenderFromEntityPathAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createTransferMessageSenderFromEntityPathAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessageReceiver
  name: IMessageReceiver
  nameWithType: IMessageReceiver
  fullName: com.microsoft.azure.servicebus.IMessageReceiver
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString*
  name: createMessageReceiverFromConnectionString
  nameWithType: ClientFactory.createMessageReceiverFromConnectionString
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ReceiveMode
  name: ReceiveMode
  nameWithType: ReceiveMode
  fullName: com.microsoft.azure.servicebus.ReceiveMode
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder*
  name: createMessageReceiverFromConnectionStringBuilder
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath*
  name: createMessageReceiverFromEntityPath
  nameWithType: ClientFactory.createMessageReceiverFromEntityPath
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPath
  package: com.microsoft.azure.servicebus
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageReceiver>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.IMessageReceiver
    name: IMessageReceiver
    fullName: com.microsoft.azure.servicebus.IMessageReceiver
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync*
  name: createMessageReceiverFromConnectionStringAsync
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync*
  name: createMessageReceiverFromConnectionStringBuilderAsync
  nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync*
  name: createMessageReceiverFromEntityPathAsync
  nameWithType: ClientFactory.createMessageReceiverFromEntityPathAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromEntityPathAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessageSession
  name: IMessageSession
  nameWithType: IMessageSession
  fullName: com.microsoft.azure.servicebus.IMessageSession
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString*
  name: acceptSessionFromConnectionString
  nameWithType: ClientFactory.acceptSessionFromConnectionString
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder*
  name: acceptSessionFromConnectionStringBuilder
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath*
  name: acceptSessionFromEntityPath
  nameWithType: ClientFactory.acceptSessionFromEntityPath
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPath
  package: com.microsoft.azure.servicebus
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessageSession>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.IMessageSession
    name: IMessageSession
    fullName: com.microsoft.azure.servicebus.IMessageSession
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync*
  name: acceptSessionFromConnectionStringAsync
  nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync*
  name: acceptSessionFromConnectionStringBuilderAsync
  nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilderAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync*
  name: acceptSessionFromEntityPathAsync
  nameWithType: ClientFactory.acceptSessionFromEntityPathAsync
  fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromEntityPathAsync
  package: com.microsoft.azure.servicebus
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
