### YamlMime:JavaPackage
uid: "com.azure.security.keyvault.keys.cryptography"
fullName: "com.azure.security.keyvault.keys.cryptography"
name: "com.azure.security.keyvault.keys.cryptography"
summary: "<p><a href=\"https://learn.microsoft.com/azure/key-vault/general/\">Azure Key Vault</a> is a cloud-based service\n provided by Microsoft Azure that allows users to securely store and manage cryptographic keys used for encrypting\n and decrypting data."
classes:
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient"
- "com.azure.security.keyvault.keys.cryptography.CryptographyClient"
- "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
- "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient"
- "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClient"
- "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyClientBuilder"
enums:
- "com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion"
desc: "<p><a href=\"https://learn.microsoft.com/azure/key-vault/general/\">Azure Key Vault</a> is a cloud-based service\n provided by Microsoft Azure that allows users to securely store and manage cryptographic keys used for encrypting\n and decrypting data. It is a part of Azure Key Vault, which is a cloud-based service for managing cryptographic keys,\n secrets, and certificates.</p>\n\n <p>The service supports various cryptographic algorithms and operations, including symmetric and asymmetric\n encryption, digital signatures, hashing, and random number generation. You can use the service to perform\n operations like encrypting sensitive data before storing it, decrypting data when needed, signing data to ensure\n its integrity, and verifying signatures to validate the authenticity of the data.</p>\n\n <p>By utilizing Azure Key Vault Cryptography service, you benefit from the strong security features provided\n by Azure Key Vault, such as hardware security modules (HSMs) for key storage and cryptographic operations,\n access control policies, and audit logging. It helps you protect your sensitive data and comply with industry\n standards and regulatory requirements.</p>\n\n <p>The Azure Key Vault Keys Cryptography client library allows developers to interact with the Azure Key Vault service\n from their applications. The library provides a set of APIs that enable developers to securely encrypt, decrypt,\n sign, and verify data using cryptographic keys securely stored in Key Vault.</p>\n\n <p><strong>Key Concepts:</strong></p>\n\n <p>What is a Cryptography Client?</p>\n <p>The cryptography client performs the cryptographic operations locally or calls the Azure Key Vault service\n depending on how much key information is available locally. It supports encrypting, decrypting, signing,\n verifying, key wrapping, key unwrapping, and retrieving the configured key.\n Asynchronous (`CryptographyAsyncClient`) and synchronous (`CryptographyClient`) clients exist in the SDK\n allowing for the selection of a client based on an application's use case.</p>\n\n <h2>Getting Started</h2>\n\n <p>In order to interact with the Azure Key Vault service, you will need to create an instance of the\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\"></xref> class, a vault url and a\n credential object.</p>\n\n <p>The examples shown in this document use a credential object named DefaultAzureCredential for authentication,\n which is appropriate for most scenarios, including local development and production environments. Additionally,\n we recommend using a\n <a href=\"https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/\">\n managed identity</a> for authentication in production environments.\n You can find more information on different ways of authenticating and their corresponding credential types in the\n <a href=\"https://learn.microsoft.com/java/api/overview/azure/identity-readme?view=azure-java-stable\">\n Azure Identity documentation\"</a>.</p>\n\n <p><strong>Sample: Construct Synchronous Cryptography Client</strong></p>\n\n <p>The following code sample demonstrates the creation of a\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\"></xref>,\n using the <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder\"></xref> to configure it.</p>\n\n <!-- src_embed com.azure.security.keyvault.keys.cryptography.CryptographyClient.instantiation -->\n <pre>\n CryptographyClient cryptographyClient = new CryptographyClientBuilder&#40;&#41;\n     .keyIdentifier&#40;&quot;&lt;your-key-id&gt;&quot;&#41;\n     .credential&#40;new DefaultAzureCredentialBuilder&#40;&#41;.build&#40;&#41;&#41;\n     .buildClient&#40;&#41;;\n </pre>\n <!-- end com.azure.security.keyvault.keys.cryptography.CryptographyClient.instantiation -->\n\n <p><strong>Sample: Construct Asynchronous Cryptography Client</strong></p>\n\n <p>The following code sample demonstrates the creation of a\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\"></xref>, using the\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder\"></xref> to configure it.</p>\n\n <!-- src_embed com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.instantiation -->\n <pre>\n CryptographyAsyncClient cryptographyAsyncClient = new CryptographyClientBuilder&#40;&#41;\n     .keyIdentifier&#40;&quot;&lt;your-key-id&gt;&quot;&#41;\n     .credential&#40;new DefaultAzureCredentialBuilder&#40;&#41;.build&#40;&#41;&#41;\n     .buildAsyncClient&#40;&#41;;\n </pre>\n <!-- end com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.instantiation -->\n\n <br>\n\n <hr>\n\n <h2>Encrypt Data</h2>\n The <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\"></xref> or\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\"></xref> can be used to encrypt data.\n\n <p><strong>Synchronous Code Sample:</strong></p>\n <p>The following code sample demonstrates how to synchronously encrypt data using the\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient#encrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm, byte[])\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient#encrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm, byte[])\"></xref> API.</p>\n\n <!-- src_embed com.azure.security.keyvault.keys.cryptography.CryptographyClient.encrypt#EncryptionAlgorithm-byte -->\n <pre>\n byte[] plaintext = new byte[100];\n new Random&#40;0x1234567L&#41;.nextBytes&#40;plaintext&#41;;\n\n EncryptResult encryptResult = cryptographyClient.encrypt&#40;EncryptionAlgorithm.RSA_OAEP, plaintext&#41;;\n\n System.out.printf&#40;&quot;Received encrypted content of length: %d, with algorithm: %s.%n&quot;,\n     encryptResult.getCipherText&#40;&#41;.length, encryptResult.getAlgorithm&#40;&#41;&#41;;\n </pre>\n <!-- end com.azure.security.keyvault.keys.cryptography.CryptographyClient.encrypt#EncryptionAlgorithm-byte -->\n\n <p><strong>Note:</strong> For the asynchronous sample, refer to\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\"></xref>.</p>\n\n <br>\n\n <hr>\n\n <h2>Decrypt Data</h2>\n The <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\"></xref> or\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\"></xref> can be used to decrypt data.\n\n <p><strong>Synchronous Code Sample:</strong></p>\n <p>The following code sample demonstrates how to synchronously decrypt data using the\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient#decrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm, byte[])\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient#decrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm, byte[])\"></xref> API.</p>\n\n <!-- src_embed com.azure.security.keyvault.keys.cryptography.CryptographyClient.decrypt#EncryptionAlgorithm-byte -->\n <pre>\n byte[] ciphertext = new byte[100];\n new Random&#40;0x1234567L&#41;.nextBytes&#40;ciphertext&#41;;\n\n DecryptResult decryptResult = cryptographyClient.decrypt&#40;EncryptionAlgorithm.RSA_OAEP, ciphertext&#41;;\n\n System.out.printf&#40;&quot;Received decrypted content of length: %d.%n&quot;, decryptResult.getPlainText&#40;&#41;.length&#41;;\n </pre>\n <!-- end com.azure.security.keyvault.keys.cryptography.CryptographyClient.decrypt#EncryptionAlgorithm-byte -->\n\n <p><strong>Note:</strong> For the asynchronous sample, refer to\n <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\"></xref>.</p>"
metadata: {}
package: "com.azure.security.keyvault.keys.cryptography"
artifact: com.azure:azure-security-keyvault-keys:4.8.3
