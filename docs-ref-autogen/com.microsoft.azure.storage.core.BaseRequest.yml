### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.core.BaseRequest.addMetadata(final HttpURLConnection request, final Map<String, String> metadata, final OperationContext opContext)
  name: addMetadata(final HttpURLConnection request, final Map<String, String> metadata, final OperationContext opContext)
  nameWithType: BaseRequest.addMetadata(final HttpURLConnection request, final Map<String, String> metadata, final OperationContext opContext)
  parameters:
  - description: <p>The request. </p>
    name: request
    type: <xref href="final+HttpURLConnection?alt=final+HttpURLConnection&text=final+HttpURLConnection" data-throw-if-not-resolved="False"/>
  - description: <p>The metadata. </p>
    name: metadata
    type: <xref href="final+Map%3CString%2C+String%3E?alt=final+Map%3CString%2C+String%3E&text=final+Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds the metadata.</p>

    <p></p>
  syntax: public static void addMetadata(final HttpURLConnection request, final Map<String, String> metadata, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.addMetadata(final HttpURLConnection,final Map<String, String>,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.addOptionalHeader(final HttpURLConnection request, final String name, final String value)
  name: addOptionalHeader(final HttpURLConnection request, final String name, final String value)
  nameWithType: BaseRequest.addOptionalHeader(final HttpURLConnection request, final String name, final String value)
  parameters:
  - description: <p>a HttpURLConnection for the operation. </p>
    name: request
    type: <xref href="final+HttpURLConnection?alt=final+HttpURLConnection&text=final+HttpURLConnection" data-throw-if-not-resolved="False"/>
  - description: <p>the metadata name. </p>
    name: name
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the metadata value. </p>
    name: value
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds the optional header.</p>

    <p></p>
  syntax: public static void addOptionalHeader(final HttpURLConnection request, final String name, final String value)
  uid: com.microsoft.azure.storage.core.BaseRequest.addOptionalHeader(final HttpURLConnection,final String,final String)
- fullName: com.microsoft.azure.storage.core.BaseRequest.batch(final URI uri, final RequestOptions options, final OperationContext opContext, final AccessCondition accessCondition)
  name: batch(final URI uri, final RequestOptions options, final OperationContext opContext, final AccessCondition accessCondition)
  nameWithType: BaseRequest.batch(final URI uri, final RequestOptions options, final OperationContext opContext, final AccessCondition accessCondition)
  parameters:
  - name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  - name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  syntax: public static HttpURLConnection batch(final URI uri, final RequestOptions options, final OperationContext opContext, final AccessCondition accessCondition)
  uid: com.microsoft.azure.storage.core.BaseRequest.batch(final URI,final RequestOptions,final OperationContext,final AccessCondition)
- fullName: com.microsoft.azure.storage.core.BaseRequest.buildBatchBody(final C client, final BatchOperation<C, P, R> batch, final OperationContext opContext)
  name: buildBatchBody(final C client, final BatchOperation<C, P, R> batch, final OperationContext opContext)
  nameWithType: BaseRequest.buildBatchBody(final C client, final BatchOperation<C, P, R> batch, final OperationContext opContext)
  parameters:
  - name: client
    type: <xref href="final+C?alt=final+C&text=final+C" data-throw-if-not-resolved="False"/>
  - name: batch
    type: final <xref href="com.microsoft.azure.storage.BatchOperation?alt=com.microsoft.azure.storage.BatchOperation&text=BatchOperation" data-throw-if-not-resolved="False"/>&lt;C, P, R&gt;
  - name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    type: static&lt;C extends <xref href="com.microsoft.azure.storage.ServiceClient?alt=com.microsoft.azure.storage.ServiceClient&text=ServiceClient" data-throw-if-not-resolved="False"/>, P, R&gt; byte []
  syntax: public static static<C extends ServiceClient, P, R> byte [] buildBatchBody(final C client, final BatchOperation<C, P, R> batch, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.buildBatchBody(final C,final BatchOperation<C, P, R>,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.create(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: create(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.create(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>the request Uri. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.RequestOptions" data-throw-if-not-resolved="false" data-raw-source="RequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the UriQueryBuilder for the request </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if there is an error opening the connection </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if there is an improperly formated URI </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a HttpURLConnection to perform the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the specified resource. Note request is set to setFixedLengthStreamingMode(0); Sign with 0 length.</p>

    <p></p>
  syntax: public static HttpURLConnection create(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.create(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.createURLConnection(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: createURLConnection(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.createURLConnection(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>the request Uri. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.RequestOptions" data-throw-if-not-resolved="false" data-raw-source="RequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. This parameter is unused. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the UriQueryBuilder for the request </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if there is an error opening the connection </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if there is an improperly formated URI </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a HttpURLConnection to perform the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the web request.</p>

    <p></p>
  syntax: public static HttpURLConnection createURLConnection(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.createURLConnection(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.delete(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: delete(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.delete(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>the request Uri. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the UriQueryBuilder for the request </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if there is an error opening the connection </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if there is an improperly formated URI </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a HttpURLConnection to perform the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified resource. Sign with no length specified.</p>

    <p></p>
  syntax: public static HttpURLConnection delete(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.delete(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.getAccountInfo(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: getAccountInfo(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.getAccountInfo(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  syntax: public static HttpURLConnection getAccountInfo(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.getAccountInfo(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.getListUriQueryBuilder(final ListingContext listingContext)
  name: getListUriQueryBuilder(final ListingContext listingContext)
  nameWithType: BaseRequest.getListUriQueryBuilder(final ListingContext listingContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.core.ListingContext" data-throw-if-not-resolved="false" data-raw-source="ListingContext"></xref> object that specifies parameters for the listing operation, if any. May be <code>null</code>.</p>
    name: listingContext
    type: final <xref href="com.microsoft.azure.storage.core.ListingContext?alt=com.microsoft.azure.storage.core.ListingContext&text=ListingContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a <xref uid="com.microsoft.azure.storage.core.UriQueryBuilder" data-throw-if-not-resolved="false" data-raw-source="UriQueryBuilder"></xref> for listing.</p>

    <p></p>
  syntax: public static UriQueryBuilder getListUriQueryBuilder(final ListingContext listingContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.getListUriQueryBuilder(final ListingContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.getProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: getProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.getProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>The Uri to query. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>The builder. </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a web request for performing the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the properties. Sign with no length specified.</p>

    <p></p>
  syntax: public static HttpURLConnection getProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.getProperties(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.getServiceProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: getServiceProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.getServiceProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>The service endpoint. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>The builder. </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a web request for performing the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a HttpURLConnection used to retrieve the Analytics service properties from the storage service.</p>

    <p></p>
  syntax: public static HttpURLConnection getServiceProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.getServiceProperties(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.getServiceStats(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: getServiceStats(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.getServiceStats(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>The service endpoint. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>The builder. </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a web request for performing the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a web request to get the stats of the service.</p>

    <p></p>
  syntax: public static HttpURLConnection getServiceStats(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.getServiceStats(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.getUserAgent()
  name: getUserAgent()
  nameWithType: BaseRequest.getUserAgent()
  returns:
    description: <p>the user agent to send over the wire to identify the client. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the user agent to send over the wire to identify the client.</p>

    <p></p>
  syntax: public static String getUserAgent()
  uid: com.microsoft.azure.storage.core.BaseRequest.getUserAgent()
- fullName: com.microsoft.azure.storage.core.BaseRequest.getUserDelegationKey(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: getUserDelegationKey(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.getUserDelegationKey(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>The service endpoint. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>The options for the http request. </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>The builder. </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>An object used to track the execution of the operation. </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a web request for performing the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a HttpURLConnection used to request a <xref uid="com.microsoft.azure.storage.UserDelegationKey" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.storage.UserDelegationKey"></xref> from the service. </p>
  syntax: public static HttpURLConnection getUserDelegationKey(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.getUserDelegationKey(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.setMetadata(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: setMetadata(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.setMetadata(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>The blob Uri. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>The builder. </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a web request for performing the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the metadata. Sign with 0 length.</p>

    <p></p>
  syntax: public static HttpURLConnection setMetadata(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.setMetadata(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.setServiceProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: setServiceProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.setServiceProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>The service endpoint. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>The builder. </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a web request for performing the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a HttpURLConnection used to set the Analytics service properties on the storage service.</p>

    <p></p>
  syntax: public static HttpURLConnection setServiceProperties(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.setServiceProperties(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
- fullName: com.microsoft.azure.storage.core.BaseRequest.undelete(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  name: undelete(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  nameWithType: BaseRequest.undelete(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  parameters:
  - description: <p>the request Uri. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the UriQueryBuilder for the request </p>
    name: builder
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if there is an error opening the connection </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if there is an improperly formated URI </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a HttpURLConnection to perform the operation. </p>
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Un-deletes the specified resource. Sign with no length specified.</p>

    <p></p>
  syntax: public static HttpURLConnection undelete(final URI uri, final RequestOptions options, UriQueryBuilder builder, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.BaseRequest.undelete(final URI,final RequestOptions,UriQueryBuilder,final OperationContext)
nameWithType: BaseRequest
syntax: public class BaseRequest
type: class
uid: com.microsoft.azure.storage.core.BaseRequest
fullName: com.microsoft.azure.storage.core.BaseRequest
name: BaseRequest
package: com.microsoft.azure.storage.core
summary: <p>RESERVED FOR INTERNAL USE. The Base Request class for the protocol layer. </p>
metadata: {}
