### YamlMime:JavaType
uid: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings"
fullName: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings"
name: "SignalRCorsSettings"
nameWithType: "SignalRCorsSettings"
summary: "Cross-Origin Resource Sharing (CORS) settings."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SignalRCorsSettings**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.models.SignalRCorsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRCorsSettings&text=SignalRCorsSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.SignalRCorsSettings()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.SignalRCorsSettings()"
  name: "SignalRCorsSettings()"
  nameWithType: "SignalRCorsSettings.SignalRCorsSettings()"
  summary: "Creates an instance of Signal<wbr>RCors<wbr>Settings class."
  syntax: "public SignalRCorsSettings()"
  desc: "Creates an instance of SignalRCorsSettings class."
methods:
- uid: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.allowedOrigins()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.allowedOrigins()"
  name: "allowedOrigins()"
  nameWithType: "SignalRCorsSettings.allowedOrigins()"
  summary: "Get the allowed<wbr>Origins property: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.<wbr>com:12345)."
  syntax: "public List<String> allowedOrigins()"
  desc: "Get the allowedOrigins property: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \"\\*\" to allow all. If omitted, allow all by default."
  returns:
    description: "the allowedOrigins value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "SignalRCorsSettings.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Signal<wbr>RCors<wbr>Settings from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SignalRCorsSettings fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the SignalRCorsSettings."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of SignalRCorsSettings from the JsonReader."
  returns:
    description: "An instance of SignalRCorsSettings if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRCorsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRCorsSettings&text=SignalRCorsSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "SignalRCorsSettings.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.validate()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.validate()"
  name: "validate()"
  nameWithType: "SignalRCorsSettings.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.withAllowedOrigins(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRCorsSettings.withAllowedOrigins(List<String> allowedOrigins)"
  name: "withAllowedOrigins(List<String> allowedOrigins)"
  nameWithType: "SignalRCorsSettings.withAllowedOrigins(List<String> allowedOrigins)"
  summary: "Set the allowed<wbr>Origins property: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.<wbr>com:12345)."
  parameters:
  - description: "the allowedOrigins value to set."
    name: "allowedOrigins"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public SignalRCorsSettings withAllowedOrigins(List<String> allowedOrigins)"
  desc: "Set the allowedOrigins property: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \"\\*\" to allow all. If omitted, allow all by default."
  returns:
    description: "the SignalRCorsSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRCorsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRCorsSettings&text=SignalRCorsSettings\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Cross-Origin Resource Sharing (CORS) settings."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.models.SignalRCorsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRCorsSettings&text=SignalRCorsSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.signalr.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-signalr:1.0.0
