### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  id: HttpConnection
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  children:
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,java.net.Proxy)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(java.io.InputStream)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis(int)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte[])
  langs:
  - java
  name: HttpConnection
  nameWithType: HttpConnection
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  type: Class
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: >-
    A wrapper for the Java SE class HttpsURLConnection. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection.


    The underlying HttpsURLConnection is transparently managed by Java. To reuse connections, for each time connect() is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable.
  syntax:
    content: public class HttpConnection
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
  id: HttpConnection()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: HttpConnection()
  nameWithType: HttpConnection.HttpConnection()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: protected HttpConnection()
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod)
  id: HttpConnection(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: HttpConnection(URL url, HttpMethod method)
  nameWithType: HttpConnection.HttpConnection(URL url, HttpMethod method)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL url, HttpMethod method)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Constructor. Opens a connection to the given URL.
  syntax:
    content: public HttpConnection(URL url, HttpMethod method)
    parameters:
    - id: url
      type: java.net.URL
      description: The URL for the HTTPS connection.
    - id: method
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
      description: The HTTPS method (i.e. GET).
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,java.net.Proxy)
  id: HttpConnection(java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,java.net.Proxy)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: HttpConnection(URL url, HttpMethod method, Proxy proxy)
  nameWithType: HttpConnection.HttpConnection(URL url, HttpMethod method, Proxy proxy)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL url, HttpMethod method, Proxy proxy)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Constructor. Opens a connection to the given URL.
  syntax:
    content: public HttpConnection(URL url, HttpMethod method, Proxy proxy)
    parameters:
    - id: url
      type: java.net.URL
      description: The URL for the HTTPS connection.
    - id: method
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
      description: The HTTPS method (i.e. GET).
    - id: proxy
      type: java.net.Proxy
      description: The proxy to send the connection through
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body
  id: body
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: body
  nameWithType: HttpConnection.body
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body
  type: Field
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: The body. HttpsURLConnection silently calls connect() when the output stream is written to. We buffer the body and defer writing to the output stream until connect() is called.
  syntax:
    content: protected byte[] body
    return:
      type: byte[]
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
  id: connect()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: connect()
  nameWithType: HttpConnection.connect()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Sends the request to the URL given in the constructor.
  syntax:
    content: public void connect()
  exceptions:
  - type: java.io.IOException
    description: >-
      This exception thrown if the connection could not be established,
       or the server responded with a bad status code.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
  id: connection
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: connection
  nameWithType: HttpConnection.connection
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
  type: Field
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: The underlying HTTPS connection.
  syntax:
    content: protected final HttpsURLConnection connection
    return:
      type: javax.net.ssl.HttpsURLConnection
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()
  id: getResponseHeaders()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: getResponseHeaders()
  nameWithType: HttpConnection.getResponseHeaders()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Returns the response headers as a Map, where the key is the header field name and the values are the values associated with the header field name.
  syntax:
    content: public Map<String,List<String>> getResponseHeaders()
    return:
      type: java.util.Map<java.lang.String,java.util.List<java.lang.String>>
      description: the response headers.
  exceptions:
  - type: java.io.IOException
    description: This exception thrown if no response was received.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
  id: getResponseStatus()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: getResponseStatus()
  nameWithType: HttpConnection.getResponseStatus()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Returns the response status code.
  syntax:
    content: public int getResponseStatus()
    return:
      type: int
      description: The response status code.
  exceptions:
  - type: java.io.IOException
    description: This exception thrown if no response was received.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()
  id: readError()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: readError()
  nameWithType: HttpConnection.readError()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Reads from the error stream and returns the error reason.
  syntax:
    content: public byte[] readError()
    return:
      type: byte[]
      description: The error reason.
  exceptions:
  - type: java.io.IOException
    description: >-
      This exception thrown if the input stream could not be
       accessed, for example if the server could not be reached.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()
  id: readInput()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: readInput()
  nameWithType: HttpConnection.readInput()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Reads from the input stream (response stream) and returns the response.
  syntax:
    content: public byte[] readInput()
    return:
      type: byte[]
      description: The response body.
  exceptions:
  - type: java.io.IOException
    description: >-
      This exception thrown if the input stream could not be
       accessed, for example if the server could not be reached.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(java.io.InputStream)
  id: readInputStream(java.io.InputStream)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: readInputStream(InputStream stream)
  nameWithType: HttpConnection.readInputStream(InputStream stream)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(InputStream stream)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Reads the input stream until the stream is empty.
  syntax:
    content: protected static byte[] readInputStream(InputStream stream)
    parameters:
    - id: stream
      type: java.io.InputStream
      description: The input stream.
    return:
      type: byte[]
      description: The content of the input stream.
  exceptions:
  - type: java.io.IOException
    description: This exception thrown if the input stream could not be read from.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis(int)
  id: setConnectTimeoutMillis(int)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: setConnectTimeoutMillis(int timeout)
  nameWithType: HttpConnection.setConnectTimeoutMillis(int timeout)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis(int timeout)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Sets the connect timeout in milliseconds. The connect timeout is the allowed amount of time for the http connection to be established.
  syntax:
    content: public void setConnectTimeoutMillis(int timeout)
    parameters:
    - id: timeout
      type: int
      description: The connect timeout.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int)
  id: setReadTimeoutMillis(int)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: setReadTimeoutMillis(int timeout)
  nameWithType: HttpConnection.setReadTimeoutMillis(int timeout)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int timeout)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Sets the read timeout in milliseconds. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.
  syntax:
    content: public void setReadTimeoutMillis(int timeout)
    parameters:
    - id: timeout
      type: int
      description: The read timeout.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(java.lang.String,java.lang.String)
  id: setRequestHeader(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: setRequestHeader(String field, String value)
  nameWithType: HttpConnection.setRequestHeader(String field, String value)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(String field, String value)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Sets the request header field to the given value.
  syntax:
    content: public void setRequestHeader(String field, String value)
    parameters:
    - id: field
      type: java.lang.String
      description: The header field name.
    - id: value
      type: java.lang.String
      description: The header field value.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod)
  id: setRequestMethod(com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: setRequestMethod(HttpMethod method)
  nameWithType: HttpConnection.setRequestMethod(HttpMethod method)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(HttpMethod method)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Sets the request method (i.e. POST).
  syntax:
    content: public void setRequestMethod(HttpMethod method)
    parameters:
    - id: method
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
      description: The request method.
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte[])
  id: writeOutput(byte[])
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  langs:
  - java
  name: writeOutput(byte[] body)
  nameWithType: HttpConnection.writeOutput(byte[] body)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte[] body)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: Saves the body to be sent with the request.
  syntax:
    content: public void writeOutput(byte[] body)
    parameters:
    - id: body
      type: byte[]
      description: The request body.
references:
- uid: java.net.URL
  spec.java:
  - uid: java.net.URL
    name: URL
    fullName: java.net.URL
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection*
  name: HttpConnection
  nameWithType: HttpConnection.HttpConnection
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: java.net.Proxy
  spec.java:
  - uid: java.net.Proxy
    name: Proxy
    fullName: java.net.Proxy
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect*
  name: connect
  nameWithType: HttpConnection.connect
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod*
  name: setRequestMethod
  nameWithType: HttpConnection.setRequestMethod
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader*
  name: setRequestHeader
  nameWithType: HttpConnection.setRequestHeader
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis*
  name: setReadTimeoutMillis
  nameWithType: HttpConnection.setReadTimeoutMillis
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis*
  name: setConnectTimeoutMillis
  nameWithType: HttpConnection.setConnectTimeoutMillis
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput*
  name: writeOutput
  nameWithType: HttpConnection.writeOutput
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput*
  name: readInput
  nameWithType: HttpConnection.readInput
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError*
  name: readError
  nameWithType: HttpConnection.readError
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus*
  name: getResponseStatus
  nameWithType: HttpConnection.getResponseStatus
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: java.util.Map<java.lang.String,java.util.List<java.lang.String>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders*
  name: getResponseHeaders
  nameWithType: HttpConnection.getResponseHeaders
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream*
  name: readInputStream
  nameWithType: HttpConnection.readInputStream
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: javax.net.ssl.HttpsURLConnection
  spec.java:
  - uid: javax.net.ssl.HttpsURLConnection
    name: HttpsURLConnection
    fullName: javax.net.ssl.HttpsURLConnection
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.util.List
  name: String,List
  nameWithType: String,List
  fullName: java.lang.String,java.util.List
