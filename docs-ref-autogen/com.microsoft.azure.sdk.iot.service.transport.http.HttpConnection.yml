### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  id: HttpConnection
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  children:
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL,HttpMethod)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL,HttpMethod,Proxy)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(InputStream)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis(int)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(String,String)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(HttpMethod)
  - com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte [])
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: HttpConnection
  nameWithType: HttpConnection
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 29
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>A wrapper for the Java SE class HttpsURLConnection. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection. </p>\r\n<p>The underlying HttpsURLConnection is transparently managed by Java. To reuse connections, for each time connect() is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable. </p>"
  syntax:
    content: public class HttpConnection
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body
  id: body
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: body
  nameWithType: HttpConnection.body
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body
  type: Field
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 39
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>The body. HttpsURLConnection silently calls connect() when the output stream is written to. We buffer the body and defer writing to the output stream until connect() is called. </p>"
  syntax:
    content: protected byte [] body
    return:
      type: ccd9418d
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
  id: connect()
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: connect()
  nameWithType: HttpConnection.connect()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 110
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Sends the request to the URL given in the constructor.</p>\r\n<p></p>"
  syntax:
    content: public void connect()
  exceptions:
  - type: cbf33bbe
    description: <p>This exception thrown if the connection could not be established, or the server responded with a bad status code. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
  id: connection
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: connection
  nameWithType: HttpConnection.connection
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
  type: Field
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 32
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>The underlying HTTPS connection. </p>"
  syntax:
    content: protected final HttpsURLConnection connection
    return:
      type: 9d854a40
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()
  id: getResponseHeaders()
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: getResponseHeaders()
  nameWithType: HttpConnection.getResponseHeaders()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 298
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Returns the response headers as a Map, where the key is the header field name and the values are the values associated with the header field name.</p>\r\n<p></p>"
  syntax:
    content: public Map<String, List<String>> getResponseHeaders()
    return:
      type: b2319095
      description: <p>the response headers.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception thrown if no response was received. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
  id: getResponseStatus()
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: getResponseStatus()
  nameWithType: HttpConnection.getResponseStatus()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 282
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Returns the response status code.</p>\r\n<p></p>"
  syntax:
    content: public int getResponseStatus()
    return:
      type: f75371fa
      description: <p>The response status code.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception thrown if no response was received. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
  id: HttpConnection()
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: HttpConnection()
  nameWithType: HttpConnection.HttpConnection()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 336
  package: com.microsoft.azure.sdk.iot.service.transport.http
  syntax:
    content: protected HttpConnection()
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL,HttpMethod)
  id: HttpConnection(URL,HttpMethod)
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: HttpConnection(URL url, HttpMethod method)
  nameWithType: HttpConnection.HttpConnection(URL url, HttpMethod method)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL url, HttpMethod method)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 49
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Constructor. Opens a connection to the given URL.</p>\r\n<p></p>"
  syntax:
    content: public HttpConnection(URL url, HttpMethod method)
    parameters:
    - id: url
      type: a891b3e6
      description: <p>The URL for the HTTPS connection. </p>
    - id: method
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
      description: <p>The HTTPS method (i.e. GET).</p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the connection was unable to be opened. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL,HttpMethod,Proxy)
  id: HttpConnection(URL,HttpMethod,Proxy)
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: HttpConnection(URL url, HttpMethod method, Proxy proxy)
  nameWithType: HttpConnection.HttpConnection(URL url, HttpMethod method, Proxy proxy)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL url, HttpMethod method, Proxy proxy)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 63
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Constructor. Opens a connection to the given URL.</p>\r\n<p></p>"
  syntax:
    content: public HttpConnection(URL url, HttpMethod method, Proxy proxy)
    parameters:
    - id: url
      type: a891b3e6
      description: <p>The URL for the HTTPS connection. </p>
    - id: method
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
      description: <p>The HTTPS method (i.e. GET). </p>
    - id: proxy
      type: abc26ef5
      description: <p>The proxy to send the connection through</p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the connection was unable to be opened. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()
  id: readError()
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: readError()
  nameWithType: HttpConnection.readError()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 255
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Reads from the error stream and returns the error reason.</p>\r\n<p></p>"
  syntax:
    content: public byte [] readError()
    return:
      type: ccd9418d
      description: <p>The error reason.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception thrown if the input stream could not be accessed, for example if the server could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()
  id: readInput()
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: readInput()
  nameWithType: HttpConnection.readInput()
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 232
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Reads from the input stream (response stream) and returns the response.</p>\r\n<p></p>"
  syntax:
    content: public byte [] readInput()
    return:
      type: ccd9418d
      description: <p>The response body.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception thrown if the input stream could not be accessed, for example if the server could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(InputStream)
  id: readInputStream(InputStream)
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: readInputStream(InputStream stream)
  nameWithType: HttpConnection.readInputStream(InputStream stream)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(InputStream stream)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 314
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Reads the input stream until the stream is empty.</p>\r\n<p></p>"
  syntax:
    content: protected static byte [] readInputStream(InputStream stream)
    parameters:
    - id: stream
      type: 76fcb9b7
      description: <p>The input stream.</p>
    return:
      type: ccd9418d
      description: <p>The content of the input stream.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception thrown if the input stream could not be read from. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis(int)
  id: setConnectTimeoutMillis(int)
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: setConnectTimeoutMillis(int timeout)
  nameWithType: HttpConnection.setConnectTimeoutMillis(int timeout)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis(int timeout)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 188
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Sets the connect timeout in milliseconds. The connect timeout is the allowed amount of time for the http connection to be established.</p>\r\n<p></p>"
  syntax:
    content: public void setConnectTimeoutMillis(int timeout)
    parameters:
    - id: timeout
      type: f75371fa
      description: <p>The connect timeout. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int)
  id: setReadTimeoutMillis(int)
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: setReadTimeoutMillis(int timeout)
  nameWithType: HttpConnection.setReadTimeoutMillis(int timeout)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int timeout)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 176
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Sets the read timeout in milliseconds. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.</p>\r\n<p></p>"
  syntax:
    content: public void setReadTimeoutMillis(int timeout)
    parameters:
    - id: timeout
      type: f75371fa
      description: <p>The read timeout. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(String,String)
  id: setRequestHeader(String,String)
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: setRequestHeader(String field, String value)
  nameWithType: HttpConnection.setRequestHeader(String field, String value)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(String field, String value)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 163
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Sets the request header field to the given value.</p>\r\n<p></p>"
  syntax:
    content: public void setRequestHeader(String field, String value)
    parameters:
    - id: field
      type: "26831127"
      description: <p>The header field name. </p>
    - id: value
      type: "26831127"
      description: <p>The header field value. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(HttpMethod)
  id: setRequestMethod(HttpMethod)
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: setRequestMethod(HttpMethod method)
  nameWithType: HttpConnection.setRequestMethod(HttpMethod method)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(HttpMethod method)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 133
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Sets the request method (i.e. POST).</p>\r\n<p></p>"
  syntax:
    content: public void setRequestMethod(HttpMethod method)
    parameters:
    - id: method
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
      description: <p>The request method.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception thrown if the request currently has a non-empty body and the new method is not a POST or a PUT. This is because Java's HttpsURLConnection silently converts the HTTPS method to POST or PUT if a body is written to the request. </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte [])
  id: writeOutput(byte [])
  parent: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.yml
  langs:
  - java
  name: writeOutput(byte[] body)
  nameWithType: HttpConnection.writeOutput(byte[] body)
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte[] body)
  overload: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
    startLine: 203
  package: com.microsoft.azure.sdk.iot.service.transport.http
  summary: "<p>Saves the body to be sent with the request.</p>\r\n<p></p>"
  syntax:
    content: public void writeOutput(byte[] body)
    parameters:
    - id: body
      type: ccd9418d
      description: <p>The request body.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>if the request does not currently use method POST or PUT and the body is non-empty. This is because Java's HttpsURLConnection silently converts the HTTPS method to POST or PUT if a body is written to the request. </p>
references:
- uid: 9d854a40
  spec.java:
  - name: final HttpsURLConnection
    fullName: final HttpsURLConnection
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: a891b3e6
  spec.java:
  - name: URL
    fullName: URL
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection*
  name: HttpConnection
  nameWithType: HttpConnection.HttpConnection
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: abc26ef5
  spec.java:
  - name: Proxy
    fullName: Proxy
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect*
  name: connect
  nameWithType: HttpConnection.connect
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod*
  name: setRequestMethod
  nameWithType: HttpConnection.setRequestMethod
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader*
  name: setRequestHeader
  nameWithType: HttpConnection.setRequestHeader
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis*
  name: setReadTimeoutMillis
  nameWithType: HttpConnection.setReadTimeoutMillis
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis*
  name: setConnectTimeoutMillis
  nameWithType: HttpConnection.setConnectTimeoutMillis
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setConnectTimeoutMillis
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput*
  name: writeOutput
  nameWithType: HttpConnection.writeOutput
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput*
  name: readInput
  nameWithType: HttpConnection.readInput
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError*
  name: readError
  nameWithType: HttpConnection.readError
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus*
  name: getResponseStatus
  nameWithType: HttpConnection.getResponseStatus
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: b2319095
  spec.java:
  - name: Map<String, List<String>>
    fullName: Map<String, List<String>>
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders*
  name: getResponseHeaders
  nameWithType: HttpConnection.getResponseHeaders
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream*
  name: readInputStream
  nameWithType: HttpConnection.readInputStream
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream
  package: com.microsoft.azure.sdk.iot.service.transport.http
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod.yml
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
  type: Enum
  summary: "<p>The HTTPS request method (i.e. GET). </p>"
  syntax:
    content: public enum HttpMethod
