### YamlMime:JavaType
constructors:
- com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(final StorageUri)
- com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(final StorageUri,final StorageCredentials)
- com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(final String,final CloudBlobClient)
- com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(final URI)
- com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(final URI,final StorageCredentials)
fields:
- com.microsoft.azure.storage.blob.CloudBlobContainer.metadata
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease()
- com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(final Integer,final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(final Integer,final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease(final Integer)
- com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease(final Integer,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease(final String,final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.create()
- com.microsoft.azure.storage.blob.CloudBlobContainer.create(BlobContainerPublicAccessType,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.create(BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists()
- com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists(BlobContainerPublicAccessType,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists(BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.delete()
- com.microsoft.azure.storage.blob.CloudBlobContainer.delete(AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists()
- com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists(AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo()
- com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo(BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInformationImpl(final RequestOptions)
- com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes()
- com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes(AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions()
- com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions(AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.exists()
- com.microsoft.azure.storage.blob.CloudBlobContainer.exists(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature(final SharedAccessBlobPolicy,final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature(final SharedAccessBlobPolicy,final String,final IPRange,final SharedAccessProtocols)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference(final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference(final String,final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer(final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer(final String,final String,AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference(final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference(final String,final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getDirectoryReference(String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getMetadata()
- com.microsoft.azure.storage.blob.CloudBlobContainer.getName()
- com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference(final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference(final String,final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.getProperties()
- com.microsoft.azure.storage.blob.CloudBlobContainer.getServiceClient()
- com.microsoft.azure.storage.blob.CloudBlobContainer.getStorageUri()
- com.microsoft.azure.storage.blob.CloudBlobContainer.getUri()
- com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs()
- com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(final String,final boolean)
- com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(final String,final boolean,final EnumSet<BlobListingDetails>,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented()
- com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented(final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented(final String,final boolean,final EnumSet<BlobListingDetails>,final Integer,final ResultContinuation,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers()
- com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers(final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers(final String,final ContainerListingDetails,final BlobRequestOptions,final OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented()
- com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented(final String)
- com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented(final String,final ContainerListingDetails,final Integer,final ResultContinuation,final BlobRequestOptions,final OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease(final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease(final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.setMetadata(final HashMap<String, String>)
- com.microsoft.azure.storage.blob.CloudBlobContainer.setProperties(final BlobContainerProperties)
- com.microsoft.azure.storage.blob.CloudBlobContainer.setStorageUri(final StorageUri)
- com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata()
- com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata(AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(final BlobContainerPermissions)
- com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(final BlobContainerPermissions,final AccessCondition,BlobRequestOptions,OperationContext)
nameWithType: CloudBlobContainer
syntax: public class CloudBlobContainer
type: class
uid: com.microsoft.azure.storage.blob.CloudBlobContainer
fullName: com.microsoft.azure.storage.blob.CloudBlobContainer
name: CloudBlobContainer
package: com.microsoft.azure.storage.blob
summary: >-
  <p>Represents a container in the Microsoft Azure Blob service. </p>

  <p>Containers hold directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.blob.CloudBlobDirectory" data-throw-if-not-resolved="false">CloudBlobDirectory</xref> objects, and directories hold block blobs and page blobs. Directories can also contain sub-directories. </p>
metadata: {}
