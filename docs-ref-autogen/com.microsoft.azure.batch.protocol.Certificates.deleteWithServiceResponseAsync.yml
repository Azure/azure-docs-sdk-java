### YamlMime:JavaMember
nameWithType: Certificates.deleteWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  nameWithType: Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  parameters:
  - description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    name: thumbprintAlgorithm
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The thumbprint of the certificate to be deleted. </p>
    name: thumbprint
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders&text=CertificateDeleteHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
  uid: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  nameWithType: Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  parameters:
  - description: <p>The algorithm used to derive the thumbprint parameter. This must be sha1. </p>
    name: thumbprintAlgorithm
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The thumbprint of the certificate to be deleted. </p>
    name: thumbprint
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: certificateDeleteOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteOptions&text=CertificateDeleteOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders?alt=com.microsoft.azure.batch.protocol.models.CertificateDeleteHeaders&text=CertificateDeleteHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a certificate from the specified account. You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that the certificate is not associated with any existing pools, the certificate is not installed on any compute nodes (even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart), and no running tasks depend on the certificate. If you try to delete a certificate that is in use, the deletion fails. The certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the certificate.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, CertificateDeleteHeaders>> deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint, CertificateDeleteOptions certificateDeleteOptions)
  uid: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String,String,CertificateDeleteOptions)
uid: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Certificates.deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
name: deleteWithServiceResponseAsync(String thumbprintAlgorithm, String thumbprint)
package: com.microsoft.azure.batch.protocol
metadata: {}
