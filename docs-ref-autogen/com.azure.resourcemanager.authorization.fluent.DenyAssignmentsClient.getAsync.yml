### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.DenyAssignmentsClient.getAsync*"
fullName: "com.azure.resourcemanager.authorization.fluent.DenyAssignmentsClient.getAsync"
name: "getAsync"
nameWithType: "DenyAssignmentsClient.getAsync"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.DenyAssignmentsClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DenyAssignmentsClient.getAsync(String scope, String denyAssignmentId)"
  name: "getAsync(String scope, String denyAssignmentId)"
  nameWithType: "DenyAssignmentsClient.getAsync(String scope, String denyAssignmentId)"
  summary: "Get the specified deny assignment."
  parameters:
  - description: "The scope of the deny assignment."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the deny assignment to get."
    name: "denyAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DenyAssignmentInner> getAsync(String scope, String denyAssignmentId)"
  returns:
    description: "the specified deny assignment."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DenyAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.DenyAssignmentInner&text=DenyAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.13.0
