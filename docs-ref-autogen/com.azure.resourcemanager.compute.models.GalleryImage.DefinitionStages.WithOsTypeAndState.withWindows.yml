### YamlMime:JavaMember
uid: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows*"
fullName: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows"
name: "withWindows"
nameWithType: "GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows"
members:
- uid: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows(com.azure.resourcemanager.compute.models.OperatingSystemStateTypes)"
  fullName: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows(OperatingSystemStateTypes osState)"
  name: "withWindows(OperatingSystemStateTypes osState)"
  nameWithType: "GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows(OperatingSystemStateTypes osState)"
  summary: "Specifies that image is a Windows image."
  parameters:
  - description: "operating system state"
    name: "osState"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.OperatingSystemStateTypes?alt=com.azure.resourcemanager.compute.models.OperatingSystemStateTypes&text=OperatingSystemStateTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract GalleryImage.DefinitionStages.WithCreate withWindows(OperatingSystemStateTypes osState)"
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
