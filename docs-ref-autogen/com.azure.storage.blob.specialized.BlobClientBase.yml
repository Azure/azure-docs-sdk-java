### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.specialized.BlobClientBase
  id: BlobClientBase
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized
  children:
  - com.azure.storage.blob.specialized.BlobClientBase.BlobClientBase(com.azure.storage.blob.specialized.BlobAsyncClientBase)
  - com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)
  - com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)
  - com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  - com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(com.azure.storage.blob.options.BlobCopyFromUrlOptions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
  - com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.delete()
  - com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.exists()
  - com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  - com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
  - com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
  - com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
  - com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
  - com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
  - com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
  - com.azure.storage.blob.specialized.BlobClientBase.getProperties()
  - com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
  - com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
  - com.azure.storage.blob.specialized.BlobClientBase.getTags()
  - com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse(com.azure.storage.blob.options.BlobGetTagsOptions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.getVersionClient(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.getVersionId()
  - com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
  - com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
  - com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream(java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse(com.azure.storage.blob.options.BlobQueryOptions)
  - com.azure.storage.blob.specialized.BlobClientBase.query(java.io.OutputStream,java.lang.String)
  - com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
  - com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  - com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.setTags(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse(com.azure.storage.blob.options.BlobSetTagsOptions,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.blob.specialized.BlobClientBase.undelete()
  - com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  langs:
  - java
  name: BlobClientBase
  nameWithType: BlobClientBase
  fullName: com.azure.storage.blob.specialized.BlobClientBase
  type: Class
  package: com.azure.storage.blob.specialized
  summary: >-
    This class provides a client that contains all operations that apply to any blob type.


    This client offers the ability to download blobs. Note that uploading data is specific to each type of blob. Please refer to the <xref uid="com.azure.storage.blob.specialized.BlockBlobClient" data-throw-if-not-resolved="false">BlockBlobClient</xref>, <xref uid="com.azure.storage.blob.specialized.PageBlobClient" data-throw-if-not-resolved="false">PageBlobClient</xref>, or <xref uid="com.azure.storage.blob.specialized.AppendBlobClient" data-throw-if-not-resolved="false">AppendBlobClient</xref> for upload options.
  syntax:
    content: public class BlobClientBase
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.BlobClientBase.BlobClientBase(com.azure.storage.blob.specialized.BlobAsyncClientBase)
  id: BlobClientBase(com.azure.storage.blob.specialized.BlobAsyncClientBase)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: BlobClientBase(BlobAsyncClientBase client)
  nameWithType: BlobClientBase.BlobClientBase(BlobAsyncClientBase client)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.BlobClientBase(BlobAsyncClientBase client)
  overload: com.azure.storage.blob.specialized.BlobClientBase.BlobClientBase*
  type: Constructor
  package: com.azure.storage.blob.specialized
  summary: Constructor used by <xref uid="com.azure.storage.blob.specialized.SpecializedBlobClientBuilder" data-throw-if-not-resolved="false">SpecializedBlobClientBuilder</xref>.
  syntax:
    content: protected BlobClientBase(BlobAsyncClientBase client)
    parameters:
    - id: client
      type: com.azure.storage.blob.specialized.BlobAsyncClientBase
      description: the async blob client
- uid: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)
  id: abortCopyFromUrl(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: abortCopyFromUrl(String copyId)
  nameWithType: BlobClientBase.abortCopyFromUrl(String copyId)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(String copyId)
  overload: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata.


    **Code Samples**


    ```java

    client.abortCopyFromUrl(copyId);
     System.out.println("Aborted copy completed.");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob
  syntax:
    content: public void abortCopyFromUrl(String copyId)
    parameters:
    - id: copyId
      type: java.lang.String
      description: The id of the copy operation to abort.
- uid: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: abortCopyFromUrlWithResponse(String copyId, String leaseId, Duration timeout, Context context)
  nameWithType: BlobClientBase.abortCopyFromUrlWithResponse(String copyId, String leaseId, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(String copyId, String leaseId, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata.


    **Code Samples**


    ```java

    System.out.printf("Aborted copy completed with status %d%n",
         client.abortCopyFromUrlWithResponse(copyId, leaseId, timeout,
             new Context(key2, value2)).getStatusCode());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob
  syntax:
    content: public Response<Void> abortCopyFromUrlWithResponse(String copyId, String leaseId, Duration timeout, Context context)
    parameters:
    - id: copyId
      type: java.lang.String
      description: The id of the copy operation to abort.
    - id: leaseId
      type: java.lang.String
      description: The lease ID the active lease on the blob must match.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)
  id: beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: beginCopy(BlobBeginCopyOptions options)
  nameWithType: BlobClientBase.beginCopy(BlobBeginCopyOptions options)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(BlobBeginCopyOptions options)
  overload: com.azure.storage.blob.specialized.BlobClientBase.beginCopy*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Copies the data at the source URL to a blob.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n BlobBeginCopySourceRequestConditions modifiedRequestConditions = new BlobBeginCopySourceRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n SyncPoller<BlobCopyInfo, Void> poller = client.beginCopy(new BlobBeginCopyOptions(url).setMetadata(metadata)\n     .setTags(tags).setTier(AccessTier.HOT).setRehydratePriority(RehydratePriority.STANDARD)\n     .setSourceRequestConditions(modifiedRequestConditions)\n     .setDestinationRequestConditions(blobRequestConditions).setPollInterval(Duration.ofSeconds(2)));\n \n PollResponse<BlobCopyInfo> response = poller.waitUntil(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED);\n System.out.printf(\"Copy identifier: %s%n\", response.getValue().getCopyId());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  syntax:
    content: public SyncPoller<BlobCopyInfo,Void> beginCopy(BlobBeginCopyOptions options)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobBeginCopyOptions
      description: <xref uid="com.azure.storage.blob.options.BlobBeginCopyOptions" data-throw-if-not-resolved="false">BlobBeginCopyOptions</xref>
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void>
      description: A <xref uid="com.azure.core.util.polling.SyncPoller" data-throw-if-not-resolved="false">SyncPoller</xref> to poll the progress of blob copy operation.
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)
  id: beginCopy(java.lang.String,java.time.Duration)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: beginCopy(String sourceUrl, Duration pollInterval)
  nameWithType: BlobClientBase.beginCopy(String sourceUrl, Duration pollInterval)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(String sourceUrl, Duration pollInterval)
  overload: com.azure.storage.blob.specialized.BlobClientBase.beginCopy*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Copies the data at the source URL to a blob.


    **Code Samples**


    ```java

    final SyncPoller<BlobCopyInfo, Void> poller = client.beginCopy(url, Duration.ofSeconds(2));
     PollResponse<BlobCopyInfo> pollResponse = poller.poll();
     System.out.printf("Copy identifier: %s%n", pollResponse.getValue().getCopyId());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob
  syntax:
    content: public SyncPoller<BlobCopyInfo,Void> beginCopy(String sourceUrl, Duration pollInterval)
    parameters:
    - id: sourceUrl
      type: java.lang.String
      description: The source URL to copy from. URLs outside of Azure may only be copied to block blobs.
    - id: pollInterval
      type: java.time.Duration
      description: >-
        Duration between each poll for the copy status. If none is specified, a default of one second
         is used.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void>
      description: A <xref uid="com.azure.core.util.polling.SyncPoller" data-throw-if-not-resolved="false">SyncPoller</xref> to poll the progress of blob copy operation.
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  id: beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)
  nameWithType: BlobClientBase.beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)
  overload: com.azure.storage.blob.specialized.BlobClientBase.beginCopy*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Copies the data at the source URL to a blob.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n SyncPoller<BlobCopyInfo, Void> poller = client.beginCopy(url, metadata, AccessTier.HOT,\n     RehydratePriority.STANDARD, modifiedRequestConditions, blobRequestConditions, Duration.ofSeconds(2));\n \n PollResponse<BlobCopyInfo> response = poller.waitUntil(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED);\n System.out.printf(\"Copy identifier: %s%n\", response.getValue().getCopyId());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  syntax:
    content: public SyncPoller<BlobCopyInfo,Void> beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)
    parameters:
    - id: sourceUrl
      type: java.lang.String
      description: The source URL to copy from. URLs outside of Azure may only be copied to block blobs.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the destination blob.
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: <xref uid="com.azure.storage.blob.models.AccessTier" data-throw-if-not-resolved="false">AccessTier</xref> for the destination blob.
    - id: priority
      type: com.azure.storage.blob.models.RehydratePriority
      description: <xref uid="com.azure.storage.blob.models.RehydratePriority" data-throw-if-not-resolved="false">RehydratePriority</xref> for rehydrating the blob.
    - id: sourceModifiedRequestConditions
      type: com.azure.core.http.RequestConditions
      description: >-
        <xref uid="com.azure.core.http.RequestConditions" data-throw-if-not-resolved="false">RequestConditions</xref> against the source. Standard HTTP Access
         conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions
         related to when the blob was changed relative to the given request. The request will fail if the specified
         condition is not satisfied.
    - id: destRequestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> against the destination.
    - id: pollInterval
      type: java.time.Duration
      description: >-
        Duration between each poll for the copy status. If none is specified, a default of one second
         is used.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void>
      description: A <xref uid="com.azure.core.util.polling.SyncPoller" data-throw-if-not-resolved="false">SyncPoller</xref> to poll the progress of blob copy operation.
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)
  id: copyFromUrl(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: copyFromUrl(String copySource)
  nameWithType: BlobClientBase.copyFromUrl(String copySource)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(String copySource)
  overload: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.


    **Code Samples**


    ```java

    System.out.printf("Copy identifier: %s%n", client.copyFromUrl(url));

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url
  syntax:
    content: public String copyFromUrl(String copySource)
    parameters:
    - id: copySource
      type: java.lang.String
      description: The source URL to copy from.
    return:
      type: java.lang.String
      description: The copy ID for the long running operation.
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(com.azure.storage.blob.options.BlobCopyFromUrlOptions,java.time.Duration,com.azure.core.util.Context)
  id: copyFromUrlWithResponse(com.azure.storage.blob.options.BlobCopyFromUrlOptions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: copyFromUrlWithResponse(BlobCopyFromUrlOptions options, Duration timeout, Context context)
  nameWithType: BlobClientBase.copyFromUrlWithResponse(BlobCopyFromUrlOptions options, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(BlobCopyFromUrlOptions options, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n System.out.printf(\"Copy identifier: %s%n\",\n     client.copyFromUrlWithResponse(new BlobCopyFromUrlOptions(url).setMetadata(metadata).setTags(tags)\n         .setTier(AccessTier.HOT).setSourceRequestConditions(modifiedRequestConditions)\n         .setDestinationRequestConditions(blobRequestConditions), timeout,\n         new Context(key1, value1)).getValue());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url"
  syntax:
    content: public Response<String> copyFromUrlWithResponse(BlobCopyFromUrlOptions options, Duration timeout, Context context)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobCopyFromUrlOptions
      description: <xref uid="com.azure.storage.blob.options.BlobCopyFromUrlOptions" data-throw-if-not-resolved="false">BlobCopyFromUrlOptions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.String>
      description: The copy ID for the long running operation.
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration timeout, Context context)
  nameWithType: BlobClientBase.copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n System.out.printf(\"Copy identifier: %s%n\",\n     client.copyFromUrlWithResponse(url, metadata, AccessTier.HOT, modifiedRequestConditions,\n         blobRequestConditions, timeout,\n         new Context(key1, value1)).getValue());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url"
  syntax:
    content: public Response<String> copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration timeout, Context context)
    parameters:
    - id: copySource
      type: java.lang.String
      description: The source URL to copy from. URLs outside of Azure may only be copied to block blobs.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the destination blob.
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: <xref uid="com.azure.storage.blob.models.AccessTier" data-throw-if-not-resolved="false">AccessTier</xref> for the destination blob.
    - id: sourceModifiedRequestConditions
      type: com.azure.core.http.RequestConditions
      description: >-
        <xref uid="com.azure.core.http.RequestConditions" data-throw-if-not-resolved="false">RequestConditions</xref> against the source. Standard HTTP Access
         conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions
         related to when the blob was changed relative to the given request. The request will fail if the specified
         condition is not satisfied.
    - id: destRequestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> against the destination.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.String>
      description: The copy ID for the long running operation.
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
  id: createSnapshot()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: createSnapshot()
  nameWithType: BlobClientBase.createSnapshot()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()
  overload: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Creates a read-only snapshot of the blob.


    **Code Samples**


    ```java

    System.out.printf("Identifier for the snapshot is %s%n", client.createSnapshot().getSnapshotId());

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob
  syntax:
    content: public BlobClientBase createSnapshot()
    return:
      type: com.azure.storage.blob.specialized.BlobClientBase
      description: >-
        A response containing a <xref uid="com.azure.storage.blob.specialized.BlobClientBase" data-throw-if-not-resolved="false">BlobClientBase</xref> which is used to interact with the created snapshot, use
         <xref uid="com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()" data-throw-if-not-resolved="false">BlobClientBase#getSnapshotId()</xref> to get the identifier for the snapshot.
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: BlobClientBase.createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Creates a read-only snapshot of the blob.\n\n**Code Samples**\n\n```java\nMap<String, String> snapshotMetadata = Collections.singletonMap(\"metadata\", \"value\");\n BlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n System.out.printf(\"Identifier for the snapshot is %s%n\",\n     client.createSnapshotWithResponse(snapshotMetadata, requestConditions, timeout,\n         new Context(key1, value1)).getValue());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob"
  syntax:
    content: public Response<BlobClientBase> createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the blob snapshot.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.specialized.BlobClientBase>
      description: >-
        A response containing a <xref uid="com.azure.storage.blob.specialized.BlobClientBase" data-throw-if-not-resolved="false">BlobClientBase</xref> which is used to interact with the created snapshot, use
         <xref uid="com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()" data-throw-if-not-resolved="false">BlobClientBase#getSnapshotId()</xref> to get the identifier for the snapshot.
- uid: com.azure.storage.blob.specialized.BlobClientBase.delete()
  id: delete()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: delete()
  nameWithType: BlobClientBase.delete()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.delete()
  overload: com.azure.storage.blob.specialized.BlobClientBase.delete*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Deletes the specified blob or snapshot. Note that deleting a blob also deletes all its snapshots.


    **Code Samples**


    ```java

    client.delete();
     System.out.println("Delete completed.");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob
  syntax:
    content: public void delete()
- uid: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Deletes the specified blob or snapshot. Note that deleting a blob also deletes all its snapshots.


    **Code Samples**


    ```java

    System.out.printf("Delete completed with status %d%n",
         client.deleteWithResponse(DeleteSnapshotsOptionType.INCLUDE, null, timeout,
             new Context(key1, value1)).getStatusCode());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob
  syntax:
    content: public Response<Void> deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: deleteBlobSnapshotOptions
      type: com.azure.storage.blob.models.DeleteSnapshotsOptionType
      description: >-
        Specifies the behavior for deleting the snapshots on this blob. <code>Include</code>
         will delete the base blob and all snapshots. <code>Only</code> will delete only the snapshots. If a snapshot is being
         deleted, you must pass null.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)
  id: download(java.io.OutputStream)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: download(OutputStream stream)
  nameWithType: BlobClientBase.download(OutputStream stream)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.download(OutputStream stream)
  overload: com.azure.storage.blob.specialized.BlobClientBase.download*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Downloads the entire blob into an output stream. Uploading data must be done from the <xref uid="com.azure.storage.blob.specialized.BlockBlobClient" data-throw-if-not-resolved="false">BlockBlobClient</xref>, <xref uid="com.azure.storage.blob.specialized.PageBlobClient" data-throw-if-not-resolved="false">PageBlobClient</xref>, or <xref uid="com.azure.storage.blob.specialized.AppendBlobClient" data-throw-if-not-resolved="false">AppendBlobClient</xref>.


    **Code Samples**


    ```java

    client.download(new ByteArrayOutputStream());
     System.out.println("Download completed.");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob
  syntax:
    content: public void download(OutputStream stream)
    parameters:
    - id: stream
      type: java.io.OutputStream
      description: A non-null <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> instance where the downloaded data will be written.
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)
  id: downloadToFile(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: downloadToFile(String filePath)
  nameWithType: BlobClientBase.downloadToFile(String filePath)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(String filePath)
  overload: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Downloads the entire blob into a file specified by the path.


    The file will be created and must not exist, if the file already exists a <xref uid="" data-throw-if-not-resolved="false">FileAlreadyExistsException</xref> will be thrown.


    **Code Samples**


    ```java

    client.downloadToFile(file);
     System.out.println("Completed download to file");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob
  syntax:
    content: public BlobProperties downloadToFile(String filePath)
    parameters:
    - id: filePath
      type: java.lang.String
      description: A <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> representing the filePath where the downloaded data will be written.
    return:
      type: com.azure.storage.blob.models.BlobProperties
      description: The blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)
  id: downloadToFile(java.lang.String,boolean)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: downloadToFile(String filePath, boolean overwrite)
  nameWithType: BlobClientBase.downloadToFile(String filePath, boolean overwrite)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(String filePath, boolean overwrite)
  overload: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Downloads the entire blob into a file specified by the path.


    If overwrite is set to false, the file will be created and must not exist, if the file already exists a <xref uid="" data-throw-if-not-resolved="false">FileAlreadyExistsException</xref> will be thrown.


    **Code Samples**


    ```java

    boolean overwrite = false; // Default value
     client.downloadToFile(file, overwrite);
     System.out.println("Completed download to file");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob
  syntax:
    content: public BlobProperties downloadToFile(String filePath, boolean overwrite)
    parameters:
    - id: filePath
      type: java.lang.String
      description: A <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> representing the filePath where the downloaded data will be written.
    - id: overwrite
      type: boolean
      description: Whether or not to overwrite the file, should the file exist.
    return:
      type: com.azure.storage.blob.models.BlobProperties
      description: The blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  id: downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Duration timeout, Context context)
  nameWithType: BlobClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Downloads the entire blob into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown.\n\n**Code Samples**\n\n```java\nBlobRange range = new BlobRange(1024, 2048L);\n DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n \n client.downloadToFileWithResponse(file, range, new ParallelTransferOptions().setBlockSizeLong(4L * Constants.MB),\n     options, null, false, timeout, new Context(key2, value2));\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  syntax:
    content: public Response<BlobProperties> downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Duration timeout, Context context)
    parameters:
    - id: filePath
      type: java.lang.String
      description: A <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> representing the filePath where the downloaded data will be written.
    - id: range
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: parallelTransferOptions
      type: com.azure.storage.blob.models.ParallelTransferOptions
      description: >-
        <xref uid="com.azure.storage.blob.models.ParallelTransferOptions" data-throw-if-not-resolved="false">ParallelTransferOptions</xref> to use to download to file. Number of parallel
                transfers parameter is ignored.
    - id: downloadRetryOptions
      type: com.azure.storage.blob.models.DownloadRetryOptions
      description: <xref uid="com.azure.storage.blob.models.DownloadRetryOptions" data-throw-if-not-resolved="false">DownloadRetryOptions</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: rangeGetContentMd5
      type: boolean
      description: Whether the contentMD5 for the specified blob range should be returned.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobProperties>
      description: A response containing the blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  id: downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions, Duration timeout, Context context)
  nameWithType: BlobClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Downloads the entire blob into a file specified by the path.\n\nBy default the file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown. To override this behavior, provide appropriate <xref uid=\"java.nio.file.OpenOption\" data-throw-if-not-resolved=\"false\">OpenOptions</xref>\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(1024, 2048L);\n DownloadRetryOptions downloadRetryOptions = new DownloadRetryOptions().setMaxRetryRequests(5);\n Set<OpenOption> openOptions = new HashSet<>(Arrays.asList(StandardOpenOption.CREATE_NEW,\n     StandardOpenOption.WRITE, StandardOpenOption.READ)); // Default options\n \n client.downloadToFileWithResponse(file, blobRange, new ParallelTransferOptions().setBlockSizeLong(4L * Constants.MB),\n     downloadRetryOptions, null, false, openOptions, timeout, new Context(key2, value2));\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  syntax:
    content: public Response<BlobProperties> downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions, Duration timeout, Context context)
    parameters:
    - id: filePath
      type: java.lang.String
      description: A <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> representing the filePath where the downloaded data will be written.
    - id: range
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: parallelTransferOptions
      type: com.azure.storage.blob.models.ParallelTransferOptions
      description: >-
        <xref uid="com.azure.storage.blob.models.ParallelTransferOptions" data-throw-if-not-resolved="false">ParallelTransferOptions</xref> to use to download to file. Number of parallel
                transfers parameter is ignored.
    - id: downloadRetryOptions
      type: com.azure.storage.blob.models.DownloadRetryOptions
      description: <xref uid="com.azure.storage.blob.models.DownloadRetryOptions" data-throw-if-not-resolved="false">DownloadRetryOptions</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: rangeGetContentMd5
      type: boolean
      description: Whether the contentMD5 for the specified blob range should be returned.
    - id: openOptions
      type: java.util.Set<java.nio.file.OpenOption>
      description: <xref uid="java.nio.file.OpenOption" data-throw-if-not-resolved="false">OpenOptions</xref> to use to configure how to open or create the file.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobProperties>
      description: A response containing the blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  id: downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: downloadWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)
  nameWithType: BlobClientBase.downloadWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Downloads a range of bytes from a blob into an output stream. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\">BlockBlobClient</xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\">PageBlobClient</xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\">AppendBlobClient</xref>.\n\n**Code Samples**\n\n```java\nBlobRange range = new BlobRange(1024, 2048L);\n DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n \n System.out.printf(\"Download completed with status %d%n\",\n     client.downloadWithResponse(new ByteArrayOutputStream(), range, options, null, false,\n         timeout, new Context(key2, value2)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  syntax:
    content: public BlobDownloadResponse downloadWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)
    parameters:
    - id: stream
      type: java.io.OutputStream
      description: A non-null <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> instance where the downloaded data will be written.
    - id: range
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: options
      type: com.azure.storage.blob.models.DownloadRetryOptions
      description: <xref uid="com.azure.storage.blob.models.DownloadRetryOptions" data-throw-if-not-resolved="false">DownloadRetryOptions</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: getRangeContentMd5
      type: boolean
      description: Whether the contentMD5 for the specified blob range should be returned.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.storage.blob.models.BlobDownloadResponse
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.exists()
  id: exists()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: exists()
  nameWithType: BlobClientBase.exists()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.exists()
  overload: com.azure.storage.blob.specialized.BlobClientBase.exists*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Gets if the blob this client represents exists in the cloud.


    **Code Samples**


    ```java

    System.out.printf("Exists? %b%n", client.exists());

    ```
  syntax:
    content: public Boolean exists()
    return:
      type: java.lang.Boolean
      description: true if the blob exists, false if it doesn't
- uid: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: existsWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: existsWithResponse(Duration timeout, Context context)
  nameWithType: BlobClientBase.existsWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Gets if the blob this client represents exists in the cloud.


    **Code Samples**


    ```java

    System.out.printf("Exists? %b%n", client.existsWithResponse(timeout, new Context(key2, value2)).getValue());

    ```
  syntax:
    content: public Response<Boolean> existsWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: true if the blob exists, false if it doesn't
- uid: com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  id: generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)
  nameWithType: BlobClientBase.generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)
  overload: com.azure.storage.blob.specialized.BlobClientBase.generateSas*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Generates a service SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">BlobServiceSasSignatureValues</xref> Note : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>\n\nSee <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">BlobServiceSasSignatureValues</xref> for more information on how to construct a service SAS.\n\n**Code Samples**\n\n```java\nOffsetDateTime expiryTime = OffsetDateTime.now().plusDays(1);\n BlobSasPermission permission = new BlobSasPermission().setReadPermission(true);\n \n BlobServiceSasSignatureValues values = new BlobServiceSasSignatureValues(expiryTime, permission)\n     .setStartTime(OffsetDateTime.now());\n \n client.generateSas(values); // Client must be authenticated via StorageSharedKeyCredential\n```"
  syntax:
    content: public String generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)
    parameters:
    - id: blobServiceSasSignatureValues
      type: com.azure.storage.blob.sas.BlobServiceSasSignatureValues
      description: <xref uid="com.azure.storage.blob.sas.BlobServiceSasSignatureValues" data-throw-if-not-resolved="false">BlobServiceSasSignatureValues</xref>
    return:
      type: java.lang.String
      description: A <code>String</code> representing all SAS query parameters.
- uid: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  id: generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)
  nameWithType: BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)
  overload: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Generates a user delegation SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">BlobServiceSasSignatureValues</xref>.\n\nSee <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">BlobServiceSasSignatureValues</xref> for more information on how to construct a user delegation SAS.\n\n**Code Samples**\n\n```java\nOffsetDateTime myExpiryTime = OffsetDateTime.now().plusDays(1);\n BlobSasPermission myPermission = new BlobSasPermission().setReadPermission(true);\n \n BlobServiceSasSignatureValues myValues = new BlobServiceSasSignatureValues(expiryTime, permission)\n     .setStartTime(OffsetDateTime.now());\n \n client.generateUserDelegationSas(values, userDelegationKey);\n```"
  syntax:
    content: public String generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)
    parameters:
    - id: blobServiceSasSignatureValues
      type: com.azure.storage.blob.sas.BlobServiceSasSignatureValues
      description: <xref uid="com.azure.storage.blob.sas.BlobServiceSasSignatureValues" data-throw-if-not-resolved="false">BlobServiceSasSignatureValues</xref>
    - id: userDelegationKey
      type: com.azure.storage.blob.models.UserDelegationKey
      description: A <xref uid="com.azure.storage.blob.models.UserDelegationKey" data-throw-if-not-resolved="false">UserDelegationKey</xref> object used to sign the SAS values.
    return:
      type: java.lang.String
      description: A <code>String</code> representing all SAS query parameters.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
  id: getAccountInfo()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getAccountInfo()
  nameWithType: BlobClientBase.getAccountInfo()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the sku name and account kind for the account.


    **Code Samples**


    ```java

    StorageAccountInfo accountInfo = client.getAccountInfo();
     System.out.printf("Account Kind: %s, SKU: %s%n", accountInfo.getAccountKind(), accountInfo.getSkuName());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information
  syntax:
    content: public StorageAccountInfo getAccountInfo()
    return:
      type: com.azure.storage.blob.models.StorageAccountInfo
      description: The sku name and account kind.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getAccountInfoWithResponse(Duration timeout, Context context)
  nameWithType: BlobClientBase.getAccountInfoWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the sku name and account kind for the account.


    **Code Samples**


    ```java

    StorageAccountInfo accountInfo = client.getAccountInfoWithResponse(timeout, new Context(key1, value1)).getValue();
     System.out.printf("Account Kind: %s, SKU: %s%n", accountInfo.getAccountKind(), accountInfo.getSkuName());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information
  syntax:
    content: public Response<StorageAccountInfo> getAccountInfoWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.StorageAccountInfo>
      description: The sku name and account kind.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getAccountName()
  nameWithType: BlobClientBase.getAccountName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountName()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getAccountName*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Get associated account name.
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: account name associated with this storage resource.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
  id: getBlobName()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getBlobName()
  nameWithType: BlobClientBase.getBlobName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getBlobName()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getBlobName*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Decodes and gets the blob name.


    **Code Samples**


    ```java

    String blobName = client.getBlobName();
     System.out.println("The name of the blob is " + blobName);
    ```
  syntax:
    content: public final String getBlobName()
    return:
      type: java.lang.String
      description: The decoded name of the blob.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
  id: getBlobUrl()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getBlobUrl()
  nameWithType: BlobClientBase.getBlobUrl()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the URL of the blob represented by this client.
  syntax:
    content: public String getBlobUrl()
    return:
      type: java.lang.String
      description: the URL.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
  id: getContainerName()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getContainerName()
  nameWithType: BlobClientBase.getContainerName()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getContainerName()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getContainerName*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Get the container name.


    **Code Samples**


    ```java

    String containerName = client.getContainerName();
     System.out.println("The name of the blob is " + containerName);
    ```
  syntax:
    content: public final String getContainerName()
    return:
      type: java.lang.String
      description: The name of the container.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
  id: getCustomerProvidedKey()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getCustomerProvidedKey()
  nameWithType: BlobClientBase.getCustomerProvidedKey()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the <xref uid="com.azure.storage.blob.models.CpkInfo" data-throw-if-not-resolved="false">CpkInfo</xref> used to encrypt this blob's content on the server.
  syntax:
    content: public CpkInfo getCustomerProvidedKey()
    return:
      type: com.azure.storage.blob.models.CpkInfo
      description: the customer provided key used for encryption.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: BlobClientBase.getHttpPipeline()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> powering this client.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: The pipeline.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getProperties()
  id: getProperties()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getProperties()
  nameWithType: BlobClientBase.getProperties()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getProperties()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getProperties*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the blob's metadata and properties.


    **Code Samples**


    ```java

    BlobProperties properties = client.getProperties();
     System.out.printf("Type: %s, Size: %d%n", properties.getBlobType(), properties.getBlobSize());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties
  syntax:
    content: public BlobProperties getProperties()
    return:
      type: com.azure.storage.blob.models.BlobProperties
      description: The blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getPropertiesWithResponse(BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: BlobClientBase.getPropertiesWithResponse(BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Returns the blob's metadata and properties.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n BlobProperties properties = client.getPropertiesWithResponse(requestConditions, timeout,\n     new Context(key2, value2)).getValue();\n System.out.printf(\"Type: %s, Size: %d%n\", properties.getBlobType(), properties.getBlobSize());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties"
  syntax:
    content: public Response<BlobProperties> getPropertiesWithResponse(BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobProperties>
      description: The blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
  id: getServiceVersion()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getServiceVersion()
  nameWithType: BlobClientBase.getServiceVersion()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the service version the client is using.
  syntax:
    content: public BlobServiceVersion getServiceVersion()
    return:
      type: com.azure.storage.blob.BlobServiceVersion
      description: the service version the client is using.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)
  id: getSnapshotClient(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getSnapshotClient(String snapshot)
  nameWithType: BlobClientBase.getSnapshotClient(String snapshot)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(String snapshot)
  overload: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Creates a new <xref uid="com.azure.storage.blob.specialized.BlobClientBase" data-throw-if-not-resolved="false">BlobClientBase</xref> linked to the `snapshot` of this blob resource.
  syntax:
    content: public BlobClientBase getSnapshotClient(String snapshot)
    parameters:
    - id: snapshot
      type: java.lang.String
      description: the identifier for a specific snapshot of this blob
    return:
      type: com.azure.storage.blob.specialized.BlobClientBase
      description: a <xref uid="com.azure.storage.blob.specialized.BlobClientBase" data-throw-if-not-resolved="false">BlobClientBase</xref> used to interact with the specific snapshot.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
  id: getSnapshotId()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getSnapshotId()
  nameWithType: BlobClientBase.getSnapshotId()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the snapshotId for a blob resource
  syntax:
    content: public String getSnapshotId()
    return:
      type: java.lang.String
      description: A string that represents the snapshotId of the snapshot blob
- uid: com.azure.storage.blob.specialized.BlobClientBase.getTags()
  id: getTags()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getTags()
  nameWithType: BlobClientBase.getTags()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getTags()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getTags*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the blob's tags.


    **Code Samples**


    ```java

    Map<String, String> tags = client.getTags();
     System.out.printf("Number of tags: %d%n", tags.size());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-tags
  syntax:
    content: public Map<String,String> getTags()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: The blob's tags.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse(com.azure.storage.blob.options.BlobGetTagsOptions,java.time.Duration,com.azure.core.util.Context)
  id: getTagsWithResponse(com.azure.storage.blob.options.BlobGetTagsOptions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getTagsWithResponse(BlobGetTagsOptions options, Duration timeout, Context context)
  nameWithType: BlobClientBase.getTagsWithResponse(BlobGetTagsOptions options, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse(BlobGetTagsOptions options, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the blob's tags.


    **Code Samples**


    ```java

    Map<String, String> tags = client.getTagsWithResponse(new BlobGetTagsOptions(), timeout,
         new Context(key1, value1)).getValue();
     System.out.printf("Number of tags: %d%n", tags.size());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-tags
  syntax:
    content: public Response<Map<String,String>> getTagsWithResponse(BlobGetTagsOptions options, Duration timeout, Context context)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobGetTagsOptions
      description: <xref uid="com.azure.storage.blob.options.BlobGetTagsOptions" data-throw-if-not-resolved="false">BlobGetTagsOptions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.util.Map<java.lang.String,java.lang.String>>
      description: The blob's tags.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getVersionClient(java.lang.String)
  id: getVersionClient(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getVersionClient(String versionId)
  nameWithType: BlobClientBase.getVersionClient(String versionId)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getVersionClient(String versionId)
  overload: com.azure.storage.blob.specialized.BlobClientBase.getVersionClient*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Creates a new <xref uid="com.azure.storage.blob.specialized.BlobClientBase" data-throw-if-not-resolved="false">BlobClientBase</xref> linked to the `version` of this blob resource.
  syntax:
    content: public BlobClientBase getVersionClient(String versionId)
    parameters:
    - id: versionId
      type: java.lang.String
      description: >-
        the identifier for a specific version of this blob,
         pass <code>null</code> to interact with the latest blob version.
    return:
      type: com.azure.storage.blob.specialized.BlobClientBase
      description: a <xref uid="com.azure.storage.blob.specialized.BlobClientBase" data-throw-if-not-resolved="false">BlobClientBase</xref> used to interact with the specific version.
- uid: com.azure.storage.blob.specialized.BlobClientBase.getVersionId()
  id: getVersionId()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: getVersionId()
  nameWithType: BlobClientBase.getVersionId()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getVersionId()
  overload: com.azure.storage.blob.specialized.BlobClientBase.getVersionId*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the versionId for a blob resource
  syntax:
    content: public String getVersionId()
    return:
      type: java.lang.String
      description: A string that represents the versionId of the snapshot blob
- uid: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
  id: isSnapshot()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: isSnapshot()
  nameWithType: BlobClientBase.isSnapshot()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()
  overload: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Determines if a blob is a snapshot
  syntax:
    content: public boolean isSnapshot()
    return:
      type: boolean
      description: A boolean that indicates if a blob is a snapshot
- uid: com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
  id: openInputStream()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: openInputStream()
  nameWithType: BlobClientBase.openInputStream()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openInputStream()
  overload: com.azure.storage.blob.specialized.BlobClientBase.openInputStream*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Opens a blob input stream to download the blob.
  syntax:
    content: public final BlobInputStream openInputStream()
    return:
      type: com.azure.storage.blob.specialized.BlobInputStream
      description: An <code>InputStream</code> object that represents the stream to use for reading from the blob.
- uid: com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
  id: openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: openInputStream(BlobRange range, BlobRequestConditions requestConditions)
  nameWithType: BlobClientBase.openInputStream(BlobRange range, BlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openInputStream(BlobRange range, BlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.specialized.BlobClientBase.openInputStream*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Opens a blob input stream to download the specified range of the blob.
  syntax:
    content: public final BlobInputStream openInputStream(BlobRange range, BlobRequestConditions requestConditions)
    parameters:
    - id: range
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: >-
        An <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> object that represents the access conditions for the
         blob.
    return:
      type: com.azure.storage.blob.specialized.BlobInputStream
      description: An <code>InputStream</code> object that represents the stream to use for reading from the blob.
- uid: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream(java.lang.String)
  id: openQueryInputStream(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: openQueryInputStream(String expression)
  nameWithType: BlobClientBase.openQueryInputStream(String expression)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream(String expression)
  overload: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Opens a blob input stream to query the blob.


    For more information, see the [Azure Docs][]


    **Code Samples**


    ```java

    String expression = "SELECT * from BlobStorage";
     InputStream inputStream = client.openQueryInputStream(expression);
     // Now you can read from the input stream like you would normally.
    ```



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents
  syntax:
    content: public InputStream openQueryInputStream(String expression)
    parameters:
    - id: expression
      type: java.lang.String
      description: The query expression.
    return:
      type: java.io.InputStream
      description: An <code>InputStream</code> object that represents the stream to use for reading the query response.
- uid: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse(com.azure.storage.blob.options.BlobQueryOptions)
  id: openQueryInputStreamWithResponse(com.azure.storage.blob.options.BlobQueryOptions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: openQueryInputStreamWithResponse(BlobQueryOptions queryOptions)
  nameWithType: BlobClientBase.openQueryInputStreamWithResponse(BlobQueryOptions queryOptions)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse(BlobQueryOptions queryOptions)
  overload: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Opens a blob input stream to query the blob.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nString expression = \"SELECT * from BlobStorage\";\n BlobQuerySerialization input = new BlobQueryDelimitedSerialization()\n     .setColumnSeparator(',')\n     .setEscapeChar('\\n')\n     .setRecordSeparator('\\n')\n     .setHeadersPresent(true)\n     .setFieldQuote('\"');\n BlobQuerySerialization output = new BlobQueryJsonSerialization()\n     .setRecordSeparator('\\n');\n BlobRequestConditions requestConditions = new BlobRequestConditions()\n     .setLeaseId(\"leaseId\");\n Consumer<BlobQueryError> errorConsumer = System.out::println;\n Consumer<BlobQueryProgress> progressConsumer = progress -> System.out.println(\"total blob bytes read: \"\n     + progress.getBytesScanned());\n BlobQueryOptions queryOptions = new BlobQueryOptions(expression)\n     .setInputSerialization(input)\n     .setOutputSerialization(output)\n     .setRequestConditions(requestConditions)\n     .setErrorConsumer(errorConsumer)\n     .setProgressConsumer(progressConsumer);\n \n InputStream inputStream = client.openQueryInputStreamWithResponse(queryOptions).getValue();\n // Now you can read from the input stream like you would normally.\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents"
  syntax:
    content: public Response<InputStream> openQueryInputStreamWithResponse(BlobQueryOptions queryOptions)
    parameters:
    - id: queryOptions
      type: com.azure.storage.blob.options.BlobQueryOptions
      description: <xref uid="com.azure.storage.blob.options.BlobQueryOptions" data-throw-if-not-resolved="false">The query options</xref>.
    return:
      type: com.azure.core.http.rest.Response<java.io.InputStream>
      description: >-
        A response containing status code and HTTP headers including an <code>InputStream</code> object
         that represents the stream to use for reading the query response.
- uid: com.azure.storage.blob.specialized.BlobClientBase.query(java.io.OutputStream,java.lang.String)
  id: query(java.io.OutputStream,java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: query(OutputStream stream, String expression)
  nameWithType: BlobClientBase.query(OutputStream stream, String expression)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.query(OutputStream stream, String expression)
  overload: com.azure.storage.blob.specialized.BlobClientBase.query*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Queries an entire blob into an output stream.


    For more information, see the [Azure Docs][]


    **Code Samples**


    ```java

    ByteArrayOutputStream queryData = new ByteArrayOutputStream();
     String expression = "SELECT * from BlobStorage";
     client.query(queryData, expression);
     System.out.println("Query completed.");
    ```



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents
  syntax:
    content: public void query(OutputStream stream, String expression)
    parameters:
    - id: stream
      type: java.io.OutputStream
      description: A non-null <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> instance where the downloaded data will be written.
    - id: expression
      type: java.lang.String
      description: The query expression.
- uid: com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions,java.time.Duration,com.azure.core.util.Context)
  id: queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)
  nameWithType: BlobClientBase.queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Queries an entire blob into an output stream.


    For more information, see the [Azure Docs][]


    **Code Samples**


    ```java

    ByteArrayOutputStream queryData = new ByteArrayOutputStream();
     String expression = "SELECT * from BlobStorage";
     BlobQueryJsonSerialization input = new BlobQueryJsonSerialization()
         .setRecordSeparator('\n');
     BlobQueryDelimitedSerialization output = new BlobQueryDelimitedSerialization()
         .setEscapeChar('\0')
         .setColumnSeparator(',')
         .setRecordSeparator('\n')
         .setFieldQuote('\'')
         .setHeadersPresent(true);
     BlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);
     Consumer<BlobQueryError> errorConsumer = System.out::println;
     Consumer<BlobQueryProgress> progressConsumer = progress -> System.out.println("total blob bytes read: "
         + progress.getBytesScanned());
     BlobQueryOptions queryOptions = new BlobQueryOptions(expression, queryData)
         .setInputSerialization(input)
         .setOutputSerialization(output)
         .setRequestConditions(requestConditions)
         .setErrorConsumer(errorConsumer)
         .setProgressConsumer(progressConsumer);
     System.out.printf("Query completed with status %d%n",
         client.queryWithResponse(queryOptions, timeout, new Context(key1, value1))
             .getStatusCode());
    ```



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents
  syntax:
    content: public BlobQueryResponse queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)
    parameters:
    - id: queryOptions
      type: com.azure.storage.blob.options.BlobQueryOptions
      description: <xref uid="com.azure.storage.blob.options.BlobQueryOptions" data-throw-if-not-resolved="false">The query options</xref>.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.storage.blob.models.BlobQueryResponse
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
  id: setAccessTier(com.azure.storage.blob.models.AccessTier)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setAccessTier(AccessTier tier)
  nameWithType: BlobClientBase.setAccessTier(AccessTier tier)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(AccessTier tier)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.


    **Code Samples**


    ```java

    client.setAccessTier(AccessTier.HOT);
     System.out.println("Set tier completed.");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier
  syntax:
    content: public void setAccessTier(AccessTier tier)
    parameters:
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: The new tier for the blob.
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId, Duration timeout, Context context)
  nameWithType: BlobClientBase.setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.


    **Code Samples**


    ```java

    System.out.printf("Set tier completed with status code %d%n",
         client.setAccessTierWithResponse(AccessTier.HOT, RehydratePriority.STANDARD, leaseId, timeout,
             new Context(key2, value2)).getStatusCode());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier
  syntax:
    content: public Response<Void> setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId, Duration timeout, Context context)
    parameters:
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: The new tier for the blob.
    - id: priority
      type: com.azure.storage.blob.models.RehydratePriority
      description: Optional priority to set for re-hydrating blobs.
    - id: leaseId
      type: java.lang.String
      description: The lease ID the active lease on the blob must match.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions,java.time.Duration,com.azure.core.util.Context)
  id: setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setAccessTierWithResponse(BlobSetAccessTierOptions options, Duration timeout, Context context)
  nameWithType: BlobClientBase.setAccessTierWithResponse(BlobSetAccessTierOptions options, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(BlobSetAccessTierOptions options, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.


    **Code Samples**


    ```java

    System.out.printf("Set tier completed with status code %d%n",
         client.setAccessTierWithResponse(new BlobSetAccessTierOptions(AccessTier.HOT)
             .setPriority(RehydratePriority.STANDARD)
             .setLeaseId(leaseId)
             .setTagsConditions(tags),
             timeout, new Context(key2, value2)).getStatusCode());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier
  syntax:
    content: public Response<Void> setAccessTierWithResponse(BlobSetAccessTierOptions options, Duration timeout, Context context)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobSetAccessTierOptions
      description: <xref uid="com.azure.storage.blob.options.BlobSetAccessTierOptions" data-throw-if-not-resolved="false">BlobSetAccessTierOptions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  id: setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setHttpHeaders(BlobHttpHeaders headers)
  nameWithType: BlobClientBase.setHttpHeaders(BlobHttpHeaders headers)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(BlobHttpHeaders headers)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Changes a blob's HTTP header properties. if only one HTTP header is updated, the others will all be erased. In order to preserve existing values, they must be passed alongside the header being changed.


    **Code Samples**


    ```java

    client.setHttpHeaders(new BlobHttpHeaders()
         .setContentLanguage("en-US")
         .setContentType("binary"));
     System.out.println("Set HTTP headers completed");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties
  syntax:
    content: public void setHttpHeaders(BlobHttpHeaders headers)
    parameters:
    - id: headers
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
- uid: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Changes a blob's HTTP header properties. if only one HTTP header is updated, the others will all be erased. In order to preserve existing values, they must be passed alongside the header being changed.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n System.out.printf(\"Set HTTP headers completed with status %d%n\",\n     client.setHttpHeadersWithResponse(new BlobHttpHeaders()\n         .setContentLanguage(\"en-US\")\n         .setContentType(\"binary\"), requestConditions, timeout, new Context(key1, value1))\n         .getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties"
  syntax:
    content: public Response<Void> setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: headers
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  id: setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setMetadata(Map<String,String> metadata)
  nameWithType: BlobClientBase.setMetadata(Map<String,String> metadata)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadata(Map<String,String> metadata)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setMetadata*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Changes a blob's metadata. The specified metadata in this method will replace existing metadata. If old values must be preserved, they must be downloaded and included in the call to this method.


    **Code Samples**


    ```java

    client.setMetadata(Collections.singletonMap("metadata", "value"));
     System.out.println("Set metadata completed");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata
  syntax:
    content: public void setMetadata(Map<String,String> metadata)
    parameters:
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the blob.
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  id: setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: BlobClientBase.setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Changes a blob's metadata. The specified metadata in this method will replace existing metadata. If old values must be preserved, they must be downloaded and included in the call to this method.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n System.out.printf(\"Set metadata completed with status %d%n\",\n     client.setMetadataWithResponse(Collections.singletonMap(\"metadata\", \"value\"), requestConditions, timeout,\n         new Context(key1, value1)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata"
  syntax:
    content: public Response<Void> setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)
    parameters:
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the blob.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.setTags(java.util.Map<java.lang.String,java.lang.String>)
  id: setTags(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setTags(Map<String,String> tags)
  nameWithType: BlobClientBase.setTags(Map<String,String> tags)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setTags(Map<String,String> tags)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setTags*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets user defined tags. The specified tags in this method will replace existing tags. If old values must be preserved, they must be downloaded and included in the call to this method.


    **Code Samples**


    ```java

    client.setTags(Collections.singletonMap("tag", "value"));
     System.out.println("Set tag completed");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tags
  syntax:
    content: public void setTags(Map<String,String> tags)
    parameters:
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Tags to associate with the blob.
- uid: com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse(com.azure.storage.blob.options.BlobSetTagsOptions,java.time.Duration,com.azure.core.util.Context)
  id: setTagsWithResponse(com.azure.storage.blob.options.BlobSetTagsOptions,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: setTagsWithResponse(BlobSetTagsOptions options, Duration timeout, Context context)
  nameWithType: BlobClientBase.setTagsWithResponse(BlobSetTagsOptions options, Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse(BlobSetTagsOptions options, Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets user defined tags. The specified tags in this method will replace existing tags. If old values must be preserved, they must be downloaded and included in the call to this method.


    **Code Samples**


    ```java

    System.out.printf("Set metadata completed with status %d%n",
         client.setTagsWithResponse(new BlobSetTagsOptions(Collections.singletonMap("tag", "value")), timeout,
             new Context(key1, value1))
             .getStatusCode());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tags
  syntax:
    content: public Response<Void> setTagsWithResponse(BlobSetTagsOptions options, Duration timeout, Context context)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobSetTagsOptions
      description: <xref uid="com.azure.storage.blob.options.BlobSetTagsOptions" data-throw-if-not-resolved="false">BlobSetTagsOptions</xref>
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.blob.specialized.BlobClientBase.undelete()
  id: undelete()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: undelete()
  nameWithType: BlobClientBase.undelete()
  fullName: com.azure.storage.blob.specialized.BlobClientBase.undelete()
  overload: com.azure.storage.blob.specialized.BlobClientBase.undelete*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots.


    **Code Samples**


    ```java

    client.undelete();
     System.out.println("Undelete completed");
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob
  syntax:
    content: public void undelete()
- uid: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobClientBase
  langs:
  - java
  name: undeleteWithResponse(Duration timeout, Context context)
  nameWithType: BlobClientBase.undeleteWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots.


    **Code Samples**


    ```java

    System.out.printf("Undelete completed with status %d%n", client.undeleteWithResponse(timeout,
         new Context(key1, value1)).getStatusCode());
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob
  syntax:
    content: public Response<Void> undeleteWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
references:
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase
  name: BlobAsyncClientBase
  nameWithType: BlobAsyncClientBase
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase
- uid: com.azure.storage.blob.specialized.BlobClientBase.BlobClientBase*
  name: BlobClientBase
  nameWithType: BlobClientBase.BlobClientBase
  fullName: com.azure.storage.blob.specialized.BlobClientBase.BlobClientBase
  package: com.azure.storage.blob.specialized
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient*
  name: getSnapshotClient
  nameWithType: BlobClientBase.getSnapshotClient
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getVersionClient*
  name: getVersionClient
  nameWithType: BlobClientBase.getVersionClient
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getVersionClient
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl*
  name: getBlobUrl
  nameWithType: BlobClientBase.getBlobUrl
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountName*
  name: getAccountName
  nameWithType: BlobClientBase.getAccountName
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountName
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getContainerName*
  name: getContainerName
  nameWithType: BlobClientBase.getContainerName
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getContainerName
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getBlobName*
  name: getBlobName
  nameWithType: BlobClientBase.getBlobName
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getBlobName
  package: com.azure.storage.blob.specialized
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: BlobClientBase.getHttpPipeline
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.CpkInfo
  name: CpkInfo
  nameWithType: CpkInfo
  fullName: com.azure.storage.blob.models.CpkInfo
- uid: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey*
  name: getCustomerProvidedKey
  nameWithType: BlobClientBase.getCustomerProvidedKey
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.BlobServiceVersion
  name: BlobServiceVersion
  nameWithType: BlobServiceVersion
  fullName: com.azure.storage.blob.BlobServiceVersion
- uid: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion*
  name: getServiceVersion
  nameWithType: BlobClientBase.getServiceVersion
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId*
  name: getSnapshotId
  nameWithType: BlobClientBase.getSnapshotId
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getVersionId*
  name: getVersionId
  nameWithType: BlobClientBase.getVersionId
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getVersionId
  package: com.azure.storage.blob.specialized
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot*
  name: isSnapshot
  nameWithType: BlobClientBase.isSnapshot
  fullName: com.azure.storage.blob.specialized.BlobClientBase.isSnapshot
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobInputStream
  name: BlobInputStream
  nameWithType: BlobInputStream
  fullName: com.azure.storage.blob.specialized.BlobInputStream
- uid: com.azure.storage.blob.specialized.BlobClientBase.openInputStream*
  name: openInputStream
  nameWithType: BlobClientBase.openInputStream
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openInputStream
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobRange
  name: BlobRange
  nameWithType: BlobRange
  fullName: com.azure.storage.blob.models.BlobRange
- uid: com.azure.storage.blob.models.BlobRequestConditions
  name: BlobRequestConditions
  nameWithType: BlobRequestConditions
  fullName: com.azure.storage.blob.models.BlobRequestConditions
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.storage.blob.specialized.BlobClientBase.exists*
  name: exists
  nameWithType: BlobClientBase.exists
  fullName: com.azure.storage.blob.specialized.BlobClientBase.exists
  package: com.azure.storage.blob.specialized
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<java.lang.Boolean>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse*
  name: existsWithResponse
  nameWithType: BlobClientBase.existsWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.core.util.polling.SyncPoller<com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobCopyInfo
    name: BlobCopyInfo
    fullName: com.azure.storage.blob.models.BlobCopyInfo
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.beginCopy*
  name: beginCopy
  nameWithType: BlobClientBase.beginCopy
  fullName: com.azure.storage.blob.specialized.BlobClientBase.beginCopy
  package: com.azure.storage.blob.specialized
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.models.AccessTier
  name: AccessTier
  nameWithType: AccessTier
  fullName: com.azure.storage.blob.models.AccessTier
- uid: com.azure.storage.blob.models.RehydratePriority
  name: RehydratePriority
  nameWithType: RehydratePriority
  fullName: com.azure.storage.blob.models.RehydratePriority
- uid: com.azure.core.http.RequestConditions
  spec.java:
  - uid: com.azure.core.http.RequestConditions
    name: RequestConditions
    fullName: com.azure.core.http.RequestConditions
- uid: com.azure.storage.blob.options.BlobBeginCopyOptions
  name: BlobBeginCopyOptions
  nameWithType: BlobBeginCopyOptions
  fullName: com.azure.storage.blob.options.BlobBeginCopyOptions
- uid: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl*
  name: abortCopyFromUrl
  nameWithType: BlobClientBase.abortCopyFromUrl
  fullName: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl
  package: com.azure.storage.blob.specialized
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse*
  name: abortCopyFromUrlWithResponse
  nameWithType: BlobClientBase.abortCopyFromUrlWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl*
  name: copyFromUrl
  nameWithType: BlobClientBase.copyFromUrl
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl
  package: com.azure.storage.blob.specialized
- uid: com.azure.core.http.rest.Response<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse*
  name: copyFromUrlWithResponse
  nameWithType: BlobClientBase.copyFromUrlWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobCopyFromUrlOptions
  name: BlobCopyFromUrlOptions
  nameWithType: BlobCopyFromUrlOptions
  fullName: com.azure.storage.blob.options.BlobCopyFromUrlOptions
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.azure.storage.blob.specialized.BlobClientBase.download*
  name: download
  nameWithType: BlobClientBase.download
  fullName: com.azure.storage.blob.specialized.BlobClientBase.download
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.DownloadRetryOptions
  name: DownloadRetryOptions
  nameWithType: DownloadRetryOptions
  fullName: com.azure.storage.blob.models.DownloadRetryOptions
- uid: com.azure.storage.blob.models.BlobDownloadResponse
  name: BlobDownloadResponse
  nameWithType: BlobDownloadResponse
  fullName: com.azure.storage.blob.models.BlobDownloadResponse
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse*
  name: downloadWithResponse
  nameWithType: BlobClientBase.downloadWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobProperties
  name: BlobProperties
  nameWithType: BlobProperties
  fullName: com.azure.storage.blob.models.BlobProperties
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile*
  name: downloadToFile
  nameWithType: BlobClientBase.downloadToFile
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFile
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.ParallelTransferOptions
  name: ParallelTransferOptions
  nameWithType: ParallelTransferOptions
  fullName: com.azure.storage.blob.models.ParallelTransferOptions
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobProperties
    name: BlobProperties
    fullName: com.azure.storage.blob.models.BlobProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse*
  name: downloadToFileWithResponse
  nameWithType: BlobClientBase.downloadToFileWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse
  package: com.azure.storage.blob.specialized
- uid: java.util.Set<java.nio.file.OpenOption>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.nio.file.OpenOption
    name: OpenOption
    fullName: java.nio.file.OpenOption
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.delete*
  name: delete
  nameWithType: BlobClientBase.delete
  fullName: com.azure.storage.blob.specialized.BlobClientBase.delete
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.DeleteSnapshotsOptionType
  name: DeleteSnapshotsOptionType
  nameWithType: DeleteSnapshotsOptionType
  fullName: com.azure.storage.blob.models.DeleteSnapshotsOptionType
- uid: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: BlobClientBase.deleteWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getProperties*
  name: getProperties
  nameWithType: BlobClientBase.getProperties
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getProperties
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse*
  name: getPropertiesWithResponse
  nameWithType: BlobClientBase.getPropertiesWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobHttpHeaders
  name: BlobHttpHeaders
  nameWithType: BlobHttpHeaders
  fullName: com.azure.storage.blob.models.BlobHttpHeaders
- uid: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders*
  name: setHttpHeaders
  nameWithType: BlobClientBase.setHttpHeaders
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse*
  name: setHttpHeadersWithResponse
  nameWithType: BlobClientBase.setHttpHeadersWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadata*
  name: setMetadata
  nameWithType: BlobClientBase.setMetadata
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadata
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse*
  name: setMetadataWithResponse
  nameWithType: BlobClientBase.setMetadataWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.getTags*
  name: getTags
  nameWithType: BlobClientBase.getTags
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getTags
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobGetTagsOptions
  name: BlobGetTagsOptions
  nameWithType: BlobGetTagsOptions
  fullName: com.azure.storage.blob.options.BlobGetTagsOptions
- uid: com.azure.core.http.rest.Response<java.util.Map<java.lang.String,java.lang.String>>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse*
  name: getTagsWithResponse
  nameWithType: BlobClientBase.getTagsWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.setTags*
  name: setTags
  nameWithType: BlobClientBase.setTags
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setTags
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobSetTagsOptions
  name: BlobSetTagsOptions
  nameWithType: BlobSetTagsOptions
  fullName: com.azure.storage.blob.options.BlobSetTagsOptions
- uid: com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse*
  name: setTagsWithResponse
  nameWithType: BlobClientBase.setTagsWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot*
  name: createSnapshot
  nameWithType: BlobClientBase.createSnapshot
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshot
  package: com.azure.storage.blob.specialized
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.specialized.BlobClientBase>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.specialized.BlobClientBase
    name: BlobClientBase
    fullName: com.azure.storage.blob.specialized.BlobClientBase
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse*
  name: createSnapshotWithResponse
  nameWithType: BlobClientBase.createSnapshotWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier*
  name: setAccessTier
  nameWithType: BlobClientBase.setAccessTier
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTier
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse*
  name: setAccessTierWithResponse
  nameWithType: BlobClientBase.setAccessTierWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobSetAccessTierOptions
  name: BlobSetAccessTierOptions
  nameWithType: BlobSetAccessTierOptions
  fullName: com.azure.storage.blob.options.BlobSetAccessTierOptions
- uid: com.azure.storage.blob.specialized.BlobClientBase.undelete*
  name: undelete
  nameWithType: BlobClientBase.undelete
  fullName: com.azure.storage.blob.specialized.BlobClientBase.undelete
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse*
  name: undeleteWithResponse
  nameWithType: BlobClientBase.undeleteWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.StorageAccountInfo
  name: StorageAccountInfo
  nameWithType: StorageAccountInfo
  fullName: com.azure.storage.blob.models.StorageAccountInfo
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo*
  name: getAccountInfo
  nameWithType: BlobClientBase.getAccountInfo
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo
  package: com.azure.storage.blob.specialized
- uid: com.azure.core.http.rest.Response<com.azure.storage.blob.models.StorageAccountInfo>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.StorageAccountInfo
    name: StorageAccountInfo
    fullName: com.azure.storage.blob.models.StorageAccountInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse*
  name: getAccountInfoWithResponse
  nameWithType: BlobClientBase.getAccountInfoWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.sas.BlobServiceSasSignatureValues
  name: BlobServiceSasSignatureValues
  nameWithType: BlobServiceSasSignatureValues
  fullName: com.azure.storage.blob.sas.BlobServiceSasSignatureValues
- uid: com.azure.storage.blob.models.UserDelegationKey
  name: UserDelegationKey
  nameWithType: UserDelegationKey
  fullName: com.azure.storage.blob.models.UserDelegationKey
- uid: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas*
  name: generateUserDelegationSas
  nameWithType: BlobClientBase.generateUserDelegationSas
  fullName: com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.generateSas*
  name: generateSas
  nameWithType: BlobClientBase.generateSas
  fullName: com.azure.storage.blob.specialized.BlobClientBase.generateSas
  package: com.azure.storage.blob.specialized
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream*
  name: openQueryInputStream
  nameWithType: BlobClientBase.openQueryInputStream
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobQueryOptions
  name: BlobQueryOptions
  nameWithType: BlobQueryOptions
  fullName: com.azure.storage.blob.options.BlobQueryOptions
- uid: com.azure.core.http.rest.Response<java.io.InputStream>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse*
  name: openQueryInputStreamWithResponse
  nameWithType: BlobClientBase.openQueryInputStreamWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobClientBase.query*
  name: query
  nameWithType: BlobClientBase.query
  fullName: com.azure.storage.blob.specialized.BlobClientBase.query
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobQueryResponse
  name: BlobQueryResponse
  nameWithType: BlobQueryResponse
  fullName: com.azure.storage.blob.models.BlobQueryResponse
- uid: com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse*
  name: queryWithResponse
  nameWithType: BlobClientBase.queryWithResponse
  fullName: com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse
  package: com.azure.storage.blob.specialized
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void
  name: BlobCopyInfo,Void
  nameWithType: BlobCopyInfo,Void
  fullName: com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.nio.file.OpenOption
  name: OpenOption
  nameWithType: OpenOption
  fullName: java.nio.file.OpenOption
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
