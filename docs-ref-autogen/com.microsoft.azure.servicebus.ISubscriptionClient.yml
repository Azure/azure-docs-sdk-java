### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.ISubscriptionClient
  id: ISubscriptionClient
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.ISubscriptionClient.addRule(com.microsoft.azure.servicebus.rules.RuleDescription)
  - com.microsoft.azure.servicebus.ISubscriptionClient.addRule(java.lang.String,com.microsoft.azure.servicebus.rules.Filter)
  - com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(com.microsoft.azure.servicebus.rules.RuleDescription)
  - com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(java.lang.String,com.microsoft.azure.servicebus.rules.Filter)
  - com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
  - com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  - com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
  - com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
  - com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
  - com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(java.lang.String)
  - com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(java.lang.String)
  langs:
  - java
  name: ISubscriptionClient
  nameWithType: ISubscriptionClient
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient
  type: Interface
  package: com.microsoft.azure.servicebus
  summary: SubscriptionClient can be used for all basic interactions with a Service Bus Subscription.
  syntax:
    content: public interface ISubscriptionClient extends IMessageEntityClient, IMessageAndSessionPump
  implements:
  - com.microsoft.azure.servicebus.IMessageEntityClient
  - com.microsoft.azure.servicebus.IMessageAndSessionPump
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(com.microsoft.azure.servicebus.rules.RuleDescription)
  id: addRule(com.microsoft.azure.servicebus.rules.RuleDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: addRule(RuleDescription ruleDescription)
  nameWithType: ISubscriptionClient.addRule(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.addRule*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Adds a rule to the current subscription to filter the messages reaching from topic to the subscription.
  syntax:
    content: public abstract void addRule(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: The rule description that provides the rule to add.
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(java.lang.String,com.microsoft.azure.servicebus.rules.Filter)
  id: addRule(java.lang.String,com.microsoft.azure.servicebus.rules.Filter)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: addRule(String ruleName, Filter filter)
  nameWithType: ISubscriptionClient.addRule(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(String ruleName, Filter filter)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.addRule*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Adds a rule with specified name and <xref uid="com.microsoft.azure.servicebus.rules.Filter" data-throw-if-not-resolved="false">Filter</xref> to the current subscription to filter the messages reaching from topic to the subscription.
  syntax:
    content: public abstract void addRule(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: java.lang.String
      description: The rule name
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: The <xref uid="com.microsoft.azure.servicebus.rules.Filter" data-throw-if-not-resolved="false">Filter</xref> to add.
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(com.microsoft.azure.servicebus.rules.RuleDescription)
  id: addRuleAsync(com.microsoft.azure.servicebus.rules.RuleDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: addRuleAsync(RuleDescription ruleDescription)
  nameWithType: ISubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously adds a rule to the current subscription to filter the messages reaching from topic to the subscription.
  syntax:
    content: public abstract CompletableFuture<Void> addRuleAsync(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: The rule description that provides the rule to add.
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: a CompletableFuture representing the pending rule add operation.
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(java.lang.String,com.microsoft.azure.servicebus.rules.Filter)
  id: addRuleAsync(java.lang.String,com.microsoft.azure.servicebus.rules.Filter)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: addRuleAsync(String ruleName, Filter filter)
  nameWithType: ISubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously adds a rule with specified name and <xref uid="com.microsoft.azure.servicebus.rules.Filter" data-throw-if-not-resolved="false">Filter</xref> to the current subscription to filter the messages reaching from topic to the subscription.
  syntax:
    content: public abstract CompletableFuture<Void> addRuleAsync(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: java.lang.String
      description: The rule name
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: The <xref uid="com.microsoft.azure.servicebus.rules.Filter" data-throw-if-not-resolved="false">Filter</xref> to add.
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: a CompletableFuture representing the pending rule add operation.
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
  id: getReceiveMode()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: getReceiveMode()
  nameWithType: ISubscriptionClient.getReceiveMode()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Gets the <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> of the current receiver
  syntax:
    content: public abstract ReceiveMode getReceiveMode()
    return:
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: The receive mode.
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  id: getRules()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: getRules()
  nameWithType: ISubscriptionClient.getRules()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getRules*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Get all rules associated with the subscription.
  syntax:
    content: public abstract Collection<RuleDescription> getRules()
    return:
      type: java.util.Collection<com.microsoft.azure.servicebus.rules.RuleDescription>
      description: The collection fo the rules.
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
  id: getRulesAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: getRulesAsync()
  nameWithType: ISubscriptionClient.getRulesAsync()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Get all rules associated with the subscription.
  syntax:
    content: public abstract CompletableFuture<Collection<RuleDescription>> getRulesAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.rules.RuleDescription>>
      description: a CompletableFuture representing the pending get rules operation.
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
  id: getSubscriptionName()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: getSubscriptionName()
  nameWithType: ISubscriptionClient.getSubscriptionName()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Gets the subscription name.
  syntax:
    content: public abstract String getSubscriptionName()
    return:
      type: java.lang.String
      description: The subscription name.
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
  id: getTopicName()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: getTopicName()
  nameWithType: ISubscriptionClient.getTopicName()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Gets the name of the topic, for this subscription.
  syntax:
    content: public abstract String getTopicName()
    return:
      type: java.lang.String
      description: the name of the topic
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(java.lang.String)
  id: removeRule(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: removeRule(String ruleName)
  nameWithType: ISubscriptionClient.removeRule(String ruleName)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(String ruleName)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Removes the rule on the subscription identified by ruleName
  syntax:
    content: public abstract void removeRule(String ruleName)
    parameters:
    - id: ruleName
      type: java.lang.String
      description: The name of rule.
  exceptions:
  - type: java.lang.InterruptedException
    description: if the current thread was interrupted while waiting
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if the current thread was interrupted while waiting
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(java.lang.String)
  id: removeRuleAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  langs:
  - java
  name: removeRuleAsync(String ruleName)
  nameWithType: ISubscriptionClient.removeRuleAsync(String ruleName)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(String ruleName)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously removes the rule on the subscription identified by ruleName
  syntax:
    content: public abstract CompletableFuture<Void> removeRuleAsync(String ruleName)
    parameters:
    - id: ruleName
      type: java.lang.String
      description: he name of rule.
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: a CompletableFuture representing the pending rule remove operation.
references:
- uid: com.microsoft.azure.servicebus.ReceiveMode
  name: ReceiveMode
  nameWithType: ReceiveMode
  fullName: com.microsoft.azure.servicebus.ReceiveMode
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode*
  name: getReceiveMode
  nameWithType: ISubscriptionClient.getReceiveMode
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode
  package: com.microsoft.azure.servicebus
- uid: java.lang.InterruptedException
  spec.java:
  - uid: java.lang.InterruptedException
    name: InterruptedException
    fullName: java.lang.InterruptedException
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: com.microsoft.azure.servicebus.rules.RuleDescription
  name: RuleDescription
  nameWithType: RuleDescription
  fullName: com.microsoft.azure.servicebus.rules.RuleDescription
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRule*
  name: addRule
  nameWithType: ISubscriptionClient.addRule
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRule
  package: com.microsoft.azure.servicebus
- uid: java.util.concurrent.CompletableFuture<java.lang.Void>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync*
  name: addRuleAsync
  nameWithType: ISubscriptionClient.addRuleAsync
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync
  package: com.microsoft.azure.servicebus
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.servicebus.rules.Filter
  name: Filter
  nameWithType: Filter
  fullName: com.microsoft.azure.servicebus.rules.Filter
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync*
  name: removeRuleAsync
  nameWithType: ISubscriptionClient.removeRuleAsync
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule*
  name: removeRule
  nameWithType: ISubscriptionClient.removeRule
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule
  package: com.microsoft.azure.servicebus
- uid: java.util.Collection<com.microsoft.azure.servicebus.rules.RuleDescription>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRules*
  name: getRules
  nameWithType: ISubscriptionClient.getRules
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRules
  package: com.microsoft.azure.servicebus
- uid: java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.rules.RuleDescription>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync*
  name: getRulesAsync
  nameWithType: ISubscriptionClient.getRulesAsync
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName*
  name: getTopicName
  nameWithType: ISubscriptionClient.getTopicName
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName*
  name: getSubscriptionName
  nameWithType: ISubscriptionClient.getSubscriptionName
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessageEntityClient
  name: IMessageEntityClient
  nameWithType: IMessageEntityClient
  fullName: com.microsoft.azure.servicebus.IMessageEntityClient
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump
  name: IMessageAndSessionPump
  nameWithType: IMessageAndSessionPump
  fullName: com.microsoft.azure.servicebus.IMessageAndSessionPump
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
