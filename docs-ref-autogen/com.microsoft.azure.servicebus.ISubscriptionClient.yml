### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.ISubscriptionClient"
fullName: "com.microsoft.azure.servicebus.ISubscriptionClient"
name: "ISubscriptionClient"
nameWithType: "ISubscriptionClient"
summary: "Subscription<wbr>Client can be used for all basic interactions with a Service Bus Subscription."
syntax: "public interface ISubscriptionClient extends IMessageEntityClient, IMessageAndSessionPump"
methods:
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.addRule(com.microsoft.azure.servicebus.rules.RuleDescription)"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.addRule(RuleDescription ruleDescription)"
  name: "addRule(RuleDescription ruleDescription)"
  nameWithType: "ISubscriptionClient.addRule(RuleDescription ruleDescription)"
  summary: "Adds a rule to the current subscription to filter the messages reaching from topic to the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The rule description that provides the rule to add."
    name: "ruleDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void addRule(RuleDescription ruleDescription)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Adds a rule to the current subscription to filter the messages reaching from topic to the subscription."
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.addRule(java.lang.String,com.microsoft.azure.servicebus.rules.Filter)"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.addRule(String ruleName, Filter filter)"
  name: "addRule(String ruleName, Filter filter)"
  nameWithType: "ISubscriptionClient.addRule(String ruleName, Filter filter)"
  summary: "Adds a rule with specified name and <xref uid=\"com.microsoft.azure.servicebus.rules.Filter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The rule name"
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.rules.Filter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to add."
    name: "filter"
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.Filter?alt=com.microsoft.azure.servicebus.rules.Filter&text=Filter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void addRule(String ruleName, Filter filter)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Adds a rule with specified name and <xref uid=\"com.microsoft.azure.servicebus.rules.Filter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription."
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(com.microsoft.azure.servicebus.rules.RuleDescription)"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(RuleDescription ruleDescription)"
  name: "addRuleAsync(RuleDescription ruleDescription)"
  nameWithType: "ISubscriptionClient.addRuleAsync(RuleDescription ruleDescription)"
  summary: "Asynchronously adds a rule to the current subscription to filter the messages reaching from topic to the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The rule description that provides the rule to add."
    name: "ruleDescription"
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> addRuleAsync(RuleDescription ruleDescription)"
  desc: "Asynchronously adds a rule to the current subscription to filter the messages reaching from topic to the subscription."
  returns:
    description: "a CompletableFuture representing the pending rule add operation."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(java.lang.String,com.microsoft.azure.servicebus.rules.Filter)"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(String ruleName, Filter filter)"
  name: "addRuleAsync(String ruleName, Filter filter)"
  nameWithType: "ISubscriptionClient.addRuleAsync(String ruleName, Filter filter)"
  summary: "Asynchronously adds a rule with specified name and <xref uid=\"com.microsoft.azure.servicebus.rules.Filter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The rule name"
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.rules.Filter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to add."
    name: "filter"
    type: "<xref href=\"com.microsoft.azure.servicebus.rules.Filter?alt=com.microsoft.azure.servicebus.rules.Filter&text=Filter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> addRuleAsync(String ruleName, Filter filter)"
  desc: "Asynchronously adds a rule with specified name and <xref uid=\"com.microsoft.azure.servicebus.rules.Filter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription."
  returns:
    description: "a CompletableFuture representing the pending rule add operation."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()"
  name: "getReceiveMode()"
  nameWithType: "ISubscriptionClient.getReceiveMode()"
  summary: "Gets the <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode\"></xref> of the current receiver"
  modifiers:
  - "abstract"
  syntax: "public abstract ReceiveMode getReceiveMode()"
  desc: "Gets the <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode\"></xref> of the current receiver"
  returns:
    description: "The receive mode."
    type: "<xref href=\"com.microsoft.azure.servicebus.ReceiveMode?alt=com.microsoft.azure.servicebus.ReceiveMode&text=ReceiveMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.getRules()"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.getRules()"
  name: "getRules()"
  nameWithType: "ISubscriptionClient.getRules()"
  summary: "Get all rules associated with the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract Collection<RuleDescription> getRules()"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get all rules associated with the subscription."
  returns:
    description: "The collection fo the rules."
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()"
  name: "getRulesAsync()"
  nameWithType: "ISubscriptionClient.getRulesAsync()"
  summary: "Get all rules associated with the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract CompletableFuture<Collection<RuleDescription>> getRulesAsync()"
  desc: "Get all rules associated with the subscription."
  returns:
    description: "a CompletableFuture representing the pending get rules operation."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()"
  name: "getSubscriptionName()"
  nameWithType: "ISubscriptionClient.getSubscriptionName()"
  summary: "Gets the subscription name."
  modifiers:
  - "abstract"
  syntax: "public abstract String getSubscriptionName()"
  desc: "Gets the subscription name."
  returns:
    description: "The subscription name."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()"
  name: "getTopicName()"
  nameWithType: "ISubscriptionClient.getTopicName()"
  summary: "Gets the name of the topic, for this subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract String getTopicName()"
  desc: "Gets the name of the topic, for this subscription."
  returns:
    description: "the name of the topic"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(String ruleName)"
  name: "removeRule(String ruleName)"
  nameWithType: "ISubscriptionClient.removeRule(String ruleName)"
  summary: "Removes the rule on the subscription identified by rule<wbr>Name"
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of rule."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void removeRule(String ruleName)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Removes the rule on the subscription identified by ruleName"
- uid: "com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(String ruleName)"
  name: "removeRuleAsync(String ruleName)"
  nameWithType: "ISubscriptionClient.removeRuleAsync(String ruleName)"
  summary: "Asynchronously removes the rule on the subscription identified by rule<wbr>Name"
  modifiers:
  - "abstract"
  parameters:
  - description: "he name of rule."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Void> removeRuleAsync(String ruleName)"
  desc: "Asynchronously removes the rule on the subscription identified by ruleName"
  returns:
    description: "a CompletableFuture representing the pending rule remove operation."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "SubscriptionClient can be used for all basic interactions with a Service Bus Subscription."
implements:
- "<xref href=\"com.microsoft.azure.servicebus.IMessageAndSessionPump?alt=com.microsoft.azure.servicebus.IMessageAndSessionPump&text=IMessageAndSessionPump\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.IMessageEntityClient?alt=com.microsoft.azure.servicebus.IMessageEntityClient&text=IMessageEntityClient\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
