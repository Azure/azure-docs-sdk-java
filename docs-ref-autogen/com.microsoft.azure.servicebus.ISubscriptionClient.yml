### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.ISubscriptionClient
  id: ISubscriptionClient
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.ISubscriptionClient.addRule(RuleDescription)
  - com.microsoft.azure.servicebus.ISubscriptionClient.addRule(String,Filter)
  - com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(RuleDescription)
  - com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(String,Filter)
  - com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
  - com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  - com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
  - com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
  - com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
  - com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(String)
  - com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(String)
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: ISubscriptionClient
  nameWithType: ISubscriptionClient
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient
  type: Interface
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 15
  package: com.microsoft.azure.servicebus
  summary: "<p>SubscriptionClient can be used for all basic interactions with a Service Bus Subscription. </p>"
  syntax:
    content: public interface ISubscriptionClient extends IMessageEntityClient
  inheritedMembers:
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,Map<String, Object>)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,Map<String, Object>)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.ICloseable.close()
  - com.microsoft.azure.servicebus.ICloseable.closeAsync()
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(UUID)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(UUID)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,Map<String, Object>)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,Map<String, Object>)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,Map<String, Object>)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,Map<String, Object>)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,Map<String, Object>,TransactionContext)
  - com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.getPrefetchCount()
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,ExecutorService)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,MessageHandlerOptions)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,MessageHandlerOptions,ExecutorService)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,ExecutorService)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,SessionHandlerOptions)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,SessionHandlerOptions,ExecutorService)
  - com.microsoft.azure.servicebus.IMessageAndSessionPump.setPrefetchCount(int)
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(RuleDescription)
  id: addRule(RuleDescription)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: addRule(RuleDescription ruleDescription)
  nameWithType: ISubscriptionClient.addRule(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.addRule*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 31
  package: com.microsoft.azure.servicebus
  summary: "<p>Adds a rule to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public void addRule(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>The rule description that provides the rule to add. </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if add rule failed </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(String,Filter)
  id: addRule(String,Filter)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: addRule(String ruleName, Filter filter)
  nameWithType: ISubscriptionClient.addRule(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRule(String ruleName, Filter filter)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.addRule*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 49
  package: com.microsoft.azure.servicebus
  summary: "<p>Adds a rule with specified name and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public void addRule(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The rule name </p>
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Filter"></xref> to add. </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if add rule failed </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(RuleDescription)
  id: addRuleAsync(RuleDescription)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: addRuleAsync(RuleDescription ruleDescription)
  nameWithType: ISubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 39
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously adds a rule to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> addRuleAsync(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>The rule description that provides the rule to add. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule add operation. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(String,Filter)
  id: addRuleAsync(String,Filter)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: addRuleAsync(String ruleName, Filter filter)
  nameWithType: ISubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 58
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously adds a rule with specified name and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> addRuleAsync(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The rule name </p>
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Filter"></xref> to add. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule add operation. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
  id: getReceiveMode()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: getReceiveMode()
  nameWithType: ISubscriptionClient.getReceiveMode()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 22
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode\"></xref> of the current receiver</p>\r\n<p></p>"
  syntax:
    content: public ReceiveMode getReceiveMode()
    return:
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>The receive mode. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  id: getRules()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: getRules()
  nameWithType: ISubscriptionClient.getRules()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRules()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getRules*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 84
  package: com.microsoft.azure.servicebus
  summary: "<p>Get all rules associated with the subscription.</p>\r\n<p></p>"
  syntax:
    content: public Collection<RuleDescription> getRules()
    return:
      type: 12ebb11acom.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
      description: <p>The collection fo the rules. </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if get rules failed </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
  id: getRulesAsync()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: getRulesAsync()
  nameWithType: ISubscriptionClient.getRulesAsync()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 91
  package: com.microsoft.azure.servicebus
  summary: "<p>Get all rules associated with the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Collection<RuleDescription>> getRulesAsync()
    return:
      type: 9161dfdccom.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
      description: <p>a CompletableFuture representing the pending get rules operation. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
  id: getSubscriptionName()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: getSubscriptionName()
  nameWithType: ISubscriptionClient.getSubscriptionName()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 104
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the subscription name. </p>"
  syntax:
    content: public String getSubscriptionName()
    return:
      type: "26831127"
      description: <p>The subscription name. </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
  id: getTopicName()
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: getTopicName()
  nameWithType: ISubscriptionClient.getTopicName()
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName()
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 98
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the name of the topic, for this subscription.</p>\r\n<p></p>"
  syntax:
    content: public String getTopicName()
    return:
      type: "26831127"
      description: <p>the name of the topic </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(String)
  id: removeRule(String)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: removeRule(String ruleName)
  nameWithType: ISubscriptionClient.removeRule(String ruleName)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule(String ruleName)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 75
  package: com.microsoft.azure.servicebus
  summary: "<p>Removes the rule on the subscription identified by ruleName</p>\r\n<p></p>"
  syntax:
    content: public void removeRule(String ruleName)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The name of rule. </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if remove rule failed </p>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(String)
  id: removeRuleAsync(String)
  parent: com.microsoft.azure.servicebus.ISubscriptionClient
  href: com.microsoft.azure.servicebus.ISubscriptionClient.yml
  langs:
  - java
  name: removeRuleAsync(String ruleName)
  nameWithType: ISubscriptionClient.removeRuleAsync(String ruleName)
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync(String ruleName)
  overload: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ISubscriptionClient.java
    startLine: 66
  package: com.microsoft.azure.servicebus
  summary: "<p>Asynchronously removes the rule on the subscription identified by ruleName</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> removeRuleAsync(String ruleName)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>he name of rule. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule remove operation. </p>
references:
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode*
  name: getReceiveMode
  nameWithType: ISubscriptionClient.getReceiveMode
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getReceiveMode
  package: com.microsoft.azure.servicebus
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: 73fec9fb
  spec.java:
  - name: ServiceBusException
    fullName: ServiceBusException
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRule*
  name: addRule
  nameWithType: ISubscriptionClient.addRule
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRule
  package: com.microsoft.azure.servicebus
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync*
  name: addRuleAsync
  nameWithType: ISubscriptionClient.addRuleAsync
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.addRuleAsync
  package: com.microsoft.azure.servicebus
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync*
  name: removeRuleAsync
  nameWithType: ISubscriptionClient.removeRuleAsync
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRuleAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule*
  name: removeRule
  nameWithType: ISubscriptionClient.removeRule
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.removeRule
  package: com.microsoft.azure.servicebus
- uid: 12ebb11acom.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
  spec.java:
  - name: Collection<
    fullName: Collection<
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
    href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRules*
  name: getRules
  nameWithType: ISubscriptionClient.getRules
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRules
  package: com.microsoft.azure.servicebus
- uid: 9161dfdccom.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
  spec.java:
  - name: CompletableFuture<Collection<
    fullName: CompletableFuture<Collection<
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
    href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync*
  name: getRulesAsync
  nameWithType: ISubscriptionClient.getRulesAsync
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getRulesAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName*
  name: getTopicName
  nameWithType: ISubscriptionClient.getTopicName
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getTopicName
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName*
  name: getSubscriptionName
  nameWithType: ISubscriptionClient.getSubscriptionName
  fullName: com.microsoft.azure.servicebus.ISubscriptionClient.getSubscriptionName
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,Map<String, Object>)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,Map<String, Object>,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,Map<String, Object>)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,Map<String, Object>,TransactionContext)
- uid: com.microsoft.azure.servicebus.ICloseable.close()
  parent: com.microsoft.azure.servicebus.ICloseable
  href: com.microsoft.azure.servicebus.ICloseable.yml
  name: close()
  nameWithType: ICloseable.close()
  fullName: com.microsoft.azure.servicebus.ICloseable.close()
  type: Method
  summary: "<p>Synchronously closes and disposes any resources associated with this object. Calling this method is equivalent of calling . This method blocks until this object is closed. </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.azure.servicebus.ICloseable.closeAsync()
  parent: com.microsoft.azure.servicebus.ICloseable
  href: com.microsoft.azure.servicebus.ICloseable.yml
  name: closeAsync()
  nameWithType: ICloseable.closeAsync()
  fullName: com.microsoft.azure.servicebus.ICloseable.closeAsync()
  type: Method
  summary: "<p>Closes and disposes any resources associated with this object. An object cannot be used after it is closed. This is an asynchronous method that returns a CompletableFuture immediately. This object is completely closed when the returned CompletableFuture is completed. </p>"
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the closing of this object. </p>
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(UUID)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(UUID,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(UUID)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(UUID,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,Map<String, Object>)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,Map<String, Object>,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,Map<String, Object>)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,Map<String, Object>,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,Map<String, Object>)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,Map<String, Object>,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,Map<String, Object>)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,Map<String, Object>,TransactionContext)
- uid: com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
  parent: com.microsoft.azure.servicebus.IMessageEntityClient
  href: com.microsoft.azure.servicebus.IMessageEntityClient.yml
  name: getEntityPath()
  nameWithType: IMessageEntityClient.getEntityPath()
  fullName: com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
  type: Method
  summary: "<p>Gets the path of the entity this client is sending messages to or receiving messages from.</p>\r\n<p></p>"
  syntax:
    content: public String getEntityPath()
    return:
      type: "26831127"
      description: <p>path of the entity this client is connecting to </p>
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.getPrefetchCount()
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,ExecutorService)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,MessageHandlerOptions)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,MessageHandlerOptions,ExecutorService)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,ExecutorService)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,SessionHandlerOptions)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,SessionHandlerOptions,ExecutorService)
- uid: com.microsoft.azure.servicebus.IMessageAndSessionPump.setPrefetchCount(int)
- uid: com.microsoft.azure.servicebus.IMessageEntityClient
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.IMessageEntityClient.yml
  name: IMessageEntityClient
  nameWithType: IMessageEntityClient
  fullName: com.microsoft.azure.servicebus.IMessageEntityClient
  type: Interface
  summary: "<p>Represents a messaging client to an Azure Service Bus entity.</p>\r\n<p></p>"
  syntax:
    content: public interface IMessageEntityClient extends ICloseable
- uid: com.microsoft.azure.servicebus.SubscriptionClient
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: SubscriptionClient
  nameWithType: SubscriptionClient
  fullName: com.microsoft.azure.servicebus.SubscriptionClient
  type: Class
  syntax:
    content: public class SubscriptionClient
- uid: com.microsoft.azure.servicebus.ReceiveMode
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.ReceiveMode.yml
  name: ReceiveMode
  nameWithType: ReceiveMode
  fullName: com.microsoft.azure.servicebus.ReceiveMode
  type: Enum
  summary: "<p>Enumeration to represent the two receive modes Azure Service Bus supports.</p>\r\n<p></p>"
  syntax:
    content: public enum ReceiveMode
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getReceiveMode()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: getReceiveMode()
  nameWithType: SubscriptionClient.getReceiveMode()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getReceiveMode()
  type: Method
  summary: "<p>Gets the <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode\"></xref> of the current receiver</p>\r\n<p></p>"
  syntax:
    content: public ReceiveMode getReceiveMode()
    return:
      type: com.microsoft.azure.servicebus.ReceiveMode
      description: <p>The receive mode. </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRule(RuleDescription)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: addRule(RuleDescription ruleDescription)
  nameWithType: SubscriptionClient.addRule(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRule(RuleDescription ruleDescription)
  type: Method
  summary: "<p>Adds a rule to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public void addRule(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>The rule description that provides the rule to add. </p>
- uid: com.microsoft.azure.servicebus.rules.RuleDescription
  parent: com.microsoft.azure.servicebus.rules
  href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  name: RuleDescription
  nameWithType: RuleDescription
  fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  type: Class
  summary: "<p>Representation of a rule defined on service bus topics.</p>\r\n<p></p>"
  syntax:
    content: public class RuleDescription
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ServiceBusException.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
  type: Class
  summary: "<p>This is the base exception that service bus will generate for all error cases. </p>"
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(RuleDescription)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: addRuleAsync(RuleDescription ruleDescription)
  nameWithType: SubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(RuleDescription ruleDescription)
  type: Method
  summary: "<p>Asynchronously adds a rule to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> addRuleAsync(RuleDescription ruleDescription)
    parameters:
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>The rule description that provides the rule to add. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule add operation. </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRule(String,Filter)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: addRule(String ruleName, Filter filter)
  nameWithType: SubscriptionClient.addRule(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRule(String ruleName, Filter filter)
  type: Method
  summary: "<p>Adds a rule with specified name and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public void addRule(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The rule name </p>
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Filter"></xref> to add. </p>
- uid: com.microsoft.azure.servicebus.rules.Filter
  parent: com.microsoft.azure.servicebus.rules
  href: com.microsoft.azure.servicebus.rules.Filter.yml
  name: Filter
  nameWithType: Filter
  fullName: com.microsoft.azure.servicebus.rules.Filter
  type: Class
  summary: "<p>Represents a filter expression that is evaluated against a message on a topic. This client library provides support for creating only limited types of filters. This is an empty interface to serve as root interface for all supported filter types.</p>\r\n<p></p>"
  syntax:
    content: public class Filter
- uid: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(String,Filter)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: addRuleAsync(String ruleName, Filter filter)
  nameWithType: SubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.addRuleAsync(String ruleName, Filter filter)
  type: Method
  summary: "<p>Asynchronously adds a rule with specified name and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Filter\"></xref> to the current subscription to filter the messages reaching from topic to the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> addRuleAsync(String ruleName, Filter filter)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The rule name </p>
    - id: filter
      type: com.microsoft.azure.servicebus.rules.Filter
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Filter"></xref> to add. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule add operation. </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.removeRuleAsync(String)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: removeRuleAsync(String ruleName)
  nameWithType: SubscriptionClient.removeRuleAsync(String ruleName)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.removeRuleAsync(String ruleName)
  type: Method
  summary: "<p>Asynchronously removes the rule on the subscription identified by ruleName</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> removeRuleAsync(String ruleName)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>he name of rule. </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending rule remove operation. </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.removeRule(String)
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: removeRule(String ruleName)
  nameWithType: SubscriptionClient.removeRule(String ruleName)
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.removeRule(String ruleName)
  type: Method
  summary: "<p>Removes the rule on the subscription identified by ruleName</p>\r\n<p></p>"
  syntax:
    content: public void removeRule(String ruleName)
    parameters:
    - id: ruleName
      type: "26831127"
      description: <p>The name of rule. </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getRules()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: getRules()
  nameWithType: SubscriptionClient.getRules()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getRules()
  type: Method
  summary: "<p>Get all rules associated with the subscription.</p>\r\n<p></p>"
  syntax:
    content: public Collection<RuleDescription> getRules()
    return:
      type: 12ebb11acom.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
      description: <p>The collection fo the rules. </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getRulesAsync()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: getRulesAsync()
  nameWithType: SubscriptionClient.getRulesAsync()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getRulesAsync()
  type: Method
  summary: "<p>Get all rules associated with the subscription.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Collection<RuleDescription>> getRulesAsync()
    return:
      type: 9161dfdccom.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
      description: <p>a CompletableFuture representing the pending get rules operation. </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getTopicName()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: getTopicName()
  nameWithType: SubscriptionClient.getTopicName()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getTopicName()
  type: Method
  summary: "<p>Gets the name of the topic, for this subscription.</p>\r\n<p></p>"
  syntax:
    content: public String getTopicName()
    return:
      type: "26831127"
      description: <p>the name of the topic </p>
- uid: com.microsoft.azure.servicebus.SubscriptionClient.getSubscriptionName()
  parent: com.microsoft.azure.servicebus.SubscriptionClient
  href: com.microsoft.azure.servicebus.SubscriptionClient.yml
  name: getSubscriptionName()
  nameWithType: SubscriptionClient.getSubscriptionName()
  fullName: com.microsoft.azure.servicebus.SubscriptionClient.getSubscriptionName()
  type: Method
  summary: "<p>Gets the subscription name. </p>"
  syntax:
    content: public String getSubscriptionName()
    return:
      type: "26831127"
      description: <p>The subscription name. </p>
