### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule"
fullName: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule<RuleT>"
name: "AuthorizationRule<RuleT>"
nameWithType: "AuthorizationRule<RuleT>"
summary: "The base type representing authorization rule of event hub namespace and event hub."
syntax: "public interface AuthorizationRule<RuleT> extends NestedResource, HasInnerModel<AuthorizationRuleInner>, HasManager<EventHubsManager>, Refreshable<RuleT>"
methods:
- uid: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule.getKeys()"
  fullName: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule<RuleT>.getKeys()"
  name: "getKeys()"
  nameWithType: "AuthorizationRule<RuleT>.getKeys()"
  modifiers:
  - "abstract"
  syntax: "public abstract EventHubAuthorizationKey getKeys()"
  returns:
    description: "the access keys (primary, secondary) and the connection strings"
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationKey?alt=com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationKey&text=EventHubAuthorizationKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule.getKeysAsync()"
  fullName: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule<RuleT>.getKeysAsync()"
  name: "getKeysAsync()"
  nameWithType: "AuthorizationRule<RuleT>.getKeysAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<EventHubAuthorizationKey> getKeysAsync()"
  returns:
    description: "a representation of the deferred computation of this call,\n returning access keys (primary, secondary) and the connection strings"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationKey?alt=com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationKey&text=EventHubAuthorizationKey\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule.regenerateKey(com.azure.resourcemanager.eventhubs.models.KeyType)"
  fullName: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule<RuleT>.regenerateKey(KeyType keyType)"
  name: "regenerateKey(KeyType keyType)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKey(KeyType keyType)"
  summary: "Regenerates primary or secondary keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "the key to regenerate"
    name: "keyType"
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.KeyType?alt=com.azure.resourcemanager.eventhubs.models.KeyType&text=KeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EventHubAuthorizationKey regenerateKey(KeyType keyType)"
  desc: "Regenerates primary or secondary keys."
  returns:
    description: "the access keys (primary, secondary) and the connection strings"
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationKey?alt=com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationKey&text=EventHubAuthorizationKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule.regenerateKeyAsync(com.azure.resourcemanager.eventhubs.models.KeyType)"
  fullName: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule<RuleT>.regenerateKeyAsync(KeyType keyType)"
  name: "regenerateKeyAsync(KeyType keyType)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKeyAsync(KeyType keyType)"
  summary: "Regenerates primary or secondary access keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "the key to regenerate"
    name: "keyType"
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.KeyType?alt=com.azure.resourcemanager.eventhubs.models.KeyType&text=KeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<EventHubAuthorizationKey> regenerateKeyAsync(KeyType keyType)"
  desc: "Regenerates primary or secondary access keys."
  returns:
    description: "a representation of the deferred computation of this call,\n returning access keys (primary, secondary) and the connection strings"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationKey?alt=com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationKey&text=EventHubAuthorizationKey\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule.rights()"
  fullName: "com.azure.resourcemanager.eventhubs.models.AuthorizationRule<RuleT>.rights()"
  name: "rights()"
  nameWithType: "AuthorizationRule<RuleT>.rights()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<AccessRights> rights()"
  returns:
    description: "rights associated with the authorization rule"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.AccessRights?alt=com.azure.resourcemanager.eventhubs.models.AccessRights&text=AccessRights\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the specific authorization rule type"
  name: "RuleT"
desc: "The base type representing authorization rule of event hub namespace and event hub."
implements:
- "<xref href=\"com.azure.resourcemanager.eventhubs.models.NestedResource?alt=com.azure.resourcemanager.eventhubs.models.NestedResource&text=NestedResource\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.EventHubsManager?alt=com.azure.resourcemanager.eventhubs.EventHubsManager&text=EventHubsManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.fluent.models.AuthorizationRuleInner?alt=com.azure.resourcemanager.eventhubs.fluent.models.AuthorizationRuleInner&text=AuthorizationRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"RuleT?alt=RuleT&text=RuleT\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.eventhubs.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventhubs:2.19.0
