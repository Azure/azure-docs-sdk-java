### YamlMime:JavaType
uid: "com.azure.core.test.http.TestProxyPlaybackClient"
fullName: "com.azure.core.test.http.TestProxyPlaybackClient"
name: "TestProxyPlaybackClient"
nameWithType: "TestProxyPlaybackClient"
summary: "A <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> that plays back test recordings from the external test proxy."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **TestProxyPlaybackClient**</br> implements <xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.core.test.http.TestProxyPlaybackClient.TestProxyPlaybackClient(com.azure.core.http.HttpClient,boolean)"
  fullName: "com.azure.core.test.http.TestProxyPlaybackClient.TestProxyPlaybackClient(HttpClient httpClient, boolean skipRecordingRequestBody)"
  name: "TestProxyPlaybackClient(HttpClient httpClient, boolean skipRecordingRequestBody)"
  nameWithType: "TestProxyPlaybackClient.TestProxyPlaybackClient(HttpClient httpClient, boolean skipRecordingRequestBody)"
  summary: "Create an instance of <xref uid=\"com.azure.core.test.http.TestProxyPlaybackClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestProxyPlaybackClient\"></xref> with a list of custom sanitizers."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use. If none is passed <xref uid=\"com.azure.core.test.utils.HttpURLConnectionHttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpURLConnectionHttpClient\"></xref> is the default."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating to skip recording request bodies, so to set a custom matcher to skip comparing bodies when run in playback."
    name: "skipRecordingRequestBody"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TestProxyPlaybackClient(HttpClient httpClient, boolean skipRecordingRequestBody)"
  desc: "Create an instance of <xref uid=\"com.azure.core.test.http.TestProxyPlaybackClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestProxyPlaybackClient\"></xref> with a list of custom sanitizers."
methods:
- uid: "com.azure.core.test.http.TestProxyPlaybackClient.addMatcherRequests(java.util.List<com.azure.core.test.models.TestProxyRequestMatcher>)"
  fullName: "com.azure.core.test.http.TestProxyPlaybackClient.addMatcherRequests(List<TestProxyRequestMatcher> matchers)"
  name: "addMatcherRequests(List<TestProxyRequestMatcher> matchers)"
  nameWithType: "TestProxyPlaybackClient.addMatcherRequests(List<TestProxyRequestMatcher> matchers)"
  summary: "Add a list of <xref uid=\"com.azure.core.test.models.TestProxyRequestMatcher\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestProxyRequestMatcher\"></xref> to the current playback session."
  parameters:
  - description: "The matchers to add."
    name: "matchers"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.core.test.models.TestProxyRequestMatcher?alt=com.azure.core.test.models.TestProxyRequestMatcher&text=TestProxyRequestMatcher\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void addMatcherRequests(List<TestProxyRequestMatcher> matchers)"
  desc: "Add a list of <xref uid=\"com.azure.core.test.models.TestProxyRequestMatcher\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestProxyRequestMatcher\"></xref> to the current playback session."
- uid: "com.azure.core.test.http.TestProxyPlaybackClient.addProxySanitization(java.util.List<com.azure.core.test.models.TestProxySanitizer>)"
  fullName: "com.azure.core.test.http.TestProxyPlaybackClient.addProxySanitization(List<TestProxySanitizer> sanitizers)"
  name: "addProxySanitization(List<TestProxySanitizer> sanitizers)"
  nameWithType: "TestProxyPlaybackClient.addProxySanitization(List<TestProxySanitizer> sanitizers)"
  summary: "Add a list of <xref uid=\"com.azure.core.test.models.TestProxySanitizer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestProxySanitizer\"></xref> to the current playback session."
  parameters:
  - description: "The sanitizers to add."
    name: "sanitizers"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.core.test.models.TestProxySanitizer?alt=com.azure.core.test.models.TestProxySanitizer&text=TestProxySanitizer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void addProxySanitization(List<TestProxySanitizer> sanitizers)"
  desc: "Add a list of <xref uid=\"com.azure.core.test.models.TestProxySanitizer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TestProxySanitizer\"></xref> to the current playback session."
- uid: "com.azure.core.test.http.TestProxyPlaybackClient.getRecordingFileLocation()"
  fullName: "com.azure.core.test.http.TestProxyPlaybackClient.getRecordingFileLocation()"
  name: "getRecordingFileLocation()"
  nameWithType: "TestProxyPlaybackClient.getRecordingFileLocation()"
  summary: "Get the recording file location in assets repo."
  syntax: "public String getRecordingFileLocation()"
  desc: "Get the recording file location in assets repo."
  returns:
    description: "the assets repo location of the recording file."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.test.http.TestProxyPlaybackClient.send(com.azure.core.http.HttpRequest)"
  fullName: "com.azure.core.test.http.TestProxyPlaybackClient.send(HttpRequest request)"
  name: "send(HttpRequest request)"
  nameWithType: "TestProxyPlaybackClient.send(HttpRequest request)"
  summary: "Redirects the request to the test-proxy to retrieve the playback response."
  parameters:
  - description: "The HTTP request to send."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> send(HttpRequest request)"
  desc: "Redirects the request to the test-proxy to retrieve the playback response."
  returns:
    description: "The HTTP response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.test.http.TestProxyPlaybackClient.sendSync(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
  fullName: "com.azure.core.test.http.TestProxyPlaybackClient.sendSync(HttpRequest request, Context context)"
  name: "sendSync(HttpRequest request, Context context)"
  nameWithType: "TestProxyPlaybackClient.sendSync(HttpRequest request, Context context)"
  summary: "Redirects the request to the test-proxy to retrieve the playback response synchronously."
  parameters:
  - description: "The HTTP request to send."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  - name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpResponse sendSync(HttpRequest request, Context context)"
  desc: "Redirects the request to the test-proxy to retrieve the playback response synchronously."
  returns:
    description: "The HTTP response."
    type: "<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.TestProxyPlaybackClient.startPlayback(java.io.File,java.nio.file.Path)"
  fullName: "com.azure.core.test.http.TestProxyPlaybackClient.startPlayback(File recordFile, Path testClassPath)"
  name: "startPlayback(File recordFile, Path testClassPath)"
  nameWithType: "TestProxyPlaybackClient.startPlayback(File recordFile, Path testClassPath)"
  summary: "Starts playback of a test recording."
  parameters:
  - description: "The name of the file to read."
    name: "recordFile"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/File.html\">File</a>"
  - description: "the test class path"
    name: "testClassPath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html\">Path</a>"
  syntax: "public Queue<String> startPlayback(File recordFile, Path testClassPath)"
  desc: "Starts playback of a test recording."
  returns:
    description: "A <xref uid=\"java.util.Queue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Queue\"></xref> representing the variables in the recording."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Queue.html\">Queue</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.core.test.http.TestProxyPlaybackClient.stopPlayback()"
  fullName: "com.azure.core.test.http.TestProxyPlaybackClient.stopPlayback()"
  name: "stopPlayback()"
  nameWithType: "TestProxyPlaybackClient.stopPlayback()"
  summary: "Stops playback of a test recording."
  syntax: "public void stopPlayback()"
  desc: "Stops playback of a test recording."
type: "class"
desc: "A <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> that plays back test recordings from the external test proxy."
implements:
- "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.test.http"
artifact: com.azure:azure-core-test:1.22.1
