### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.models.ImageDisk
  id: ImageDisk
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models
  children:
  - com.azure.resourcemanager.compute.models.ImageDisk.ImageDisk()
  - com.azure.resourcemanager.compute.models.ImageDisk.blobUri()
  - com.azure.resourcemanager.compute.models.ImageDisk.caching()
  - com.azure.resourcemanager.compute.models.ImageDisk.diskEncryptionSet()
  - com.azure.resourcemanager.compute.models.ImageDisk.diskSizeGB()
  - com.azure.resourcemanager.compute.models.ImageDisk.managedDisk()
  - com.azure.resourcemanager.compute.models.ImageDisk.snapshot()
  - com.azure.resourcemanager.compute.models.ImageDisk.storageAccountType()
  - com.azure.resourcemanager.compute.models.ImageDisk.validate()
  - com.azure.resourcemanager.compute.models.ImageDisk.withBlobUri(java.lang.String)
  - com.azure.resourcemanager.compute.models.ImageDisk.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  - com.azure.resourcemanager.compute.models.ImageDisk.withDiskEncryptionSet(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.compute.models.ImageDisk.withDiskSizeGB(java.lang.Integer)
  - com.azure.resourcemanager.compute.models.ImageDisk.withManagedDisk(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.compute.models.ImageDisk.withSnapshot(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.compute.models.ImageDisk.withStorageAccountType(com.azure.resourcemanager.compute.models.StorageAccountTypes)
  langs:
  - java
  name: ImageDisk
  nameWithType: ImageDisk
  fullName: com.azure.resourcemanager.compute.models.ImageDisk
  type: Class
  package: com.azure.resourcemanager.compute.models
  summary: Describes a image disk.
  syntax:
    content: public class ImageDisk
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.compute.models.ImageDisk.ImageDisk()
  id: ImageDisk()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: ImageDisk()
  nameWithType: ImageDisk.ImageDisk()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.ImageDisk()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.ImageDisk*
  type: Constructor
  package: com.azure.resourcemanager.compute.models
  syntax:
    content: public ImageDisk()
- uid: com.azure.resourcemanager.compute.models.ImageDisk.blobUri()
  id: blobUri()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: blobUri()
  nameWithType: ImageDisk.blobUri()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.blobUri()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.blobUri*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the blobUri property: The Virtual Hard Disk.'
  syntax:
    content: public String blobUri()
    return:
      type: java.lang.String
      description: the blobUri value.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.caching()
  id: caching()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: caching()
  nameWithType: ImageDisk.caching()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.caching()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.caching*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \*\*None\*\* <br><br> \*\*ReadOnly\*\* <br><br> \*\*ReadWrite\*\* <br><br> Default: \*\*None for Standard storage. ReadOnly for Premium storage\*\*.'
  syntax:
    content: public CachingTypes caching()
    return:
      type: com.azure.resourcemanager.compute.models.CachingTypes
      description: the caching value.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.diskEncryptionSet()
  id: diskEncryptionSet()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: diskEncryptionSet()
  nameWithType: ImageDisk.diskEncryptionSet()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.diskEncryptionSet()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.diskEncryptionSet*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the diskEncryptionSet property: Specifies the customer managed disk encryption set resource id for the managed image disk.'
  syntax:
    content: public SubResource diskEncryptionSet()
    return:
      type: com.azure.core.management.SubResource
      description: the diskEncryptionSet value.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.diskSizeGB()
  id: diskSizeGB()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: diskSizeGB()
  nameWithType: ImageDisk.diskSizeGB()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.diskSizeGB()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.diskSizeGB*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the diskSizeGB property: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB.'
  syntax:
    content: public Integer diskSizeGB()
    return:
      type: java.lang.Integer
      description: the diskSizeGB value.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.managedDisk()
  id: managedDisk()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: managedDisk()
  nameWithType: ImageDisk.managedDisk()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.managedDisk()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.managedDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the managedDisk property: The managedDisk.'
  syntax:
    content: public SubResource managedDisk()
    return:
      type: com.azure.core.management.SubResource
      description: the managedDisk value.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.snapshot()
  id: snapshot()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: snapshot()
  nameWithType: ImageDisk.snapshot()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.snapshot()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.snapshot*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the snapshot property: The snapshot.'
  syntax:
    content: public SubResource snapshot()
    return:
      type: com.azure.core.management.SubResource
      description: the snapshot value.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.storageAccountType()
  id: storageAccountType()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: storageAccountType()
  nameWithType: ImageDisk.storageAccountType()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.storageAccountType()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.storageAccountType*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the storageAccountType property: Specifies the storage account type for the managed disk. NOTE: UltraSSD\_LRS can only be used with data disks, it cannot be used with OS Disk.'
  syntax:
    content: public StorageAccountTypes storageAccountType()
    return:
      type: com.azure.resourcemanager.compute.models.StorageAccountTypes
      description: the storageAccountType value.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: validate()
  nameWithType: ImageDisk.validate()
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.validate()
  overload: com.azure.resourcemanager.compute.models.ImageDisk.validate*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withBlobUri(java.lang.String)
  id: withBlobUri(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: withBlobUri(String blobUri)
  nameWithType: ImageDisk.withBlobUri(String blobUri)
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withBlobUri(String blobUri)
  overload: com.azure.resourcemanager.compute.models.ImageDisk.withBlobUri*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the blobUri property: The Virtual Hard Disk.'
  syntax:
    content: public ImageDisk withBlobUri(String blobUri)
    parameters:
    - id: blobUri
      type: java.lang.String
      description: the blobUri value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDisk
      description: the ImageDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  id: withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: withCaching(CachingTypes caching)
  nameWithType: ImageDisk.withCaching(CachingTypes caching)
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withCaching(CachingTypes caching)
  overload: com.azure.resourcemanager.compute.models.ImageDisk.withCaching*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \*\*None\*\* <br><br> \*\*ReadOnly\*\* <br><br> \*\*ReadWrite\*\* <br><br> Default: \*\*None for Standard storage. ReadOnly for Premium storage\*\*.'
  syntax:
    content: public ImageDisk withCaching(CachingTypes caching)
    parameters:
    - id: caching
      type: com.azure.resourcemanager.compute.models.CachingTypes
      description: the caching value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDisk
      description: the ImageDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withDiskEncryptionSet(com.azure.core.management.SubResource)
  id: withDiskEncryptionSet(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: withDiskEncryptionSet(SubResource diskEncryptionSet)
  nameWithType: ImageDisk.withDiskEncryptionSet(SubResource diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withDiskEncryptionSet(SubResource diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.models.ImageDisk.withDiskEncryptionSet*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the diskEncryptionSet property: Specifies the customer managed disk encryption set resource id for the managed image disk.'
  syntax:
    content: public ImageDisk withDiskEncryptionSet(SubResource diskEncryptionSet)
    parameters:
    - id: diskEncryptionSet
      type: com.azure.core.management.SubResource
      description: the diskEncryptionSet value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDisk
      description: the ImageDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withDiskSizeGB(java.lang.Integer)
  id: withDiskSizeGB(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: withDiskSizeGB(Integer diskSizeGB)
  nameWithType: ImageDisk.withDiskSizeGB(Integer diskSizeGB)
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withDiskSizeGB(Integer diskSizeGB)
  overload: com.azure.resourcemanager.compute.models.ImageDisk.withDiskSizeGB*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the diskSizeGB property: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB.'
  syntax:
    content: public ImageDisk withDiskSizeGB(Integer diskSizeGB)
    parameters:
    - id: diskSizeGB
      type: java.lang.Integer
      description: the diskSizeGB value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDisk
      description: the ImageDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withManagedDisk(com.azure.core.management.SubResource)
  id: withManagedDisk(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: withManagedDisk(SubResource managedDisk)
  nameWithType: ImageDisk.withManagedDisk(SubResource managedDisk)
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withManagedDisk(SubResource managedDisk)
  overload: com.azure.resourcemanager.compute.models.ImageDisk.withManagedDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the managedDisk property: The managedDisk.'
  syntax:
    content: public ImageDisk withManagedDisk(SubResource managedDisk)
    parameters:
    - id: managedDisk
      type: com.azure.core.management.SubResource
      description: the managedDisk value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDisk
      description: the ImageDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withSnapshot(com.azure.core.management.SubResource)
  id: withSnapshot(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: withSnapshot(SubResource snapshot)
  nameWithType: ImageDisk.withSnapshot(SubResource snapshot)
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withSnapshot(SubResource snapshot)
  overload: com.azure.resourcemanager.compute.models.ImageDisk.withSnapshot*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the snapshot property: The snapshot.'
  syntax:
    content: public ImageDisk withSnapshot(SubResource snapshot)
    parameters:
    - id: snapshot
      type: com.azure.core.management.SubResource
      description: the snapshot value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDisk
      description: the ImageDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withStorageAccountType(com.azure.resourcemanager.compute.models.StorageAccountTypes)
  id: withStorageAccountType(com.azure.resourcemanager.compute.models.StorageAccountTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.models.ImageDisk
  langs:
  - java
  name: withStorageAccountType(StorageAccountTypes storageAccountType)
  nameWithType: ImageDisk.withStorageAccountType(StorageAccountTypes storageAccountType)
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withStorageAccountType(StorageAccountTypes storageAccountType)
  overload: com.azure.resourcemanager.compute.models.ImageDisk.withStorageAccountType*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the storageAccountType property: Specifies the storage account type for the managed disk. NOTE: UltraSSD\_LRS can only be used with data disks, it cannot be used with OS Disk.'
  syntax:
    content: public ImageDisk withStorageAccountType(StorageAccountTypes storageAccountType)
    parameters:
    - id: storageAccountType
      type: com.azure.resourcemanager.compute.models.StorageAccountTypes
      description: the storageAccountType value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDisk
      description: the ImageDisk object itself.
references:
- uid: com.azure.resourcemanager.compute.models.ImageDisk.ImageDisk*
  name: ImageDisk
  nameWithType: ImageDisk.ImageDisk
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.ImageDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.core.management.SubResource
  spec.java:
  - uid: com.azure.core.management.SubResource
    name: SubResource
    fullName: com.azure.core.management.SubResource
- uid: com.azure.resourcemanager.compute.models.ImageDisk.snapshot*
  name: snapshot
  nameWithType: ImageDisk.snapshot
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.snapshot
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withSnapshot*
  name: withSnapshot
  nameWithType: ImageDisk.withSnapshot
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withSnapshot
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.managedDisk*
  name: managedDisk
  nameWithType: ImageDisk.managedDisk
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.managedDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withManagedDisk*
  name: withManagedDisk
  nameWithType: ImageDisk.withManagedDisk
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withManagedDisk
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.models.ImageDisk.blobUri*
  name: blobUri
  nameWithType: ImageDisk.blobUri
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.blobUri
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withBlobUri*
  name: withBlobUri
  nameWithType: ImageDisk.withBlobUri
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withBlobUri
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.CachingTypes
  name: CachingTypes
  nameWithType: CachingTypes
  fullName: com.azure.resourcemanager.compute.models.CachingTypes
- uid: com.azure.resourcemanager.compute.models.ImageDisk.caching*
  name: caching
  nameWithType: ImageDisk.caching
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.caching
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withCaching*
  name: withCaching
  nameWithType: ImageDisk.withCaching
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withCaching
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.compute.models.ImageDisk.diskSizeGB*
  name: diskSizeGB
  nameWithType: ImageDisk.diskSizeGB
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.diskSizeGB
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withDiskSizeGB*
  name: withDiskSizeGB
  nameWithType: ImageDisk.withDiskSizeGB
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withDiskSizeGB
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.StorageAccountTypes
  name: StorageAccountTypes
  nameWithType: StorageAccountTypes
  fullName: com.azure.resourcemanager.compute.models.StorageAccountTypes
- uid: com.azure.resourcemanager.compute.models.ImageDisk.storageAccountType*
  name: storageAccountType
  nameWithType: ImageDisk.storageAccountType
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.storageAccountType
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withStorageAccountType*
  name: withStorageAccountType
  nameWithType: ImageDisk.withStorageAccountType
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withStorageAccountType
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.diskEncryptionSet*
  name: diskEncryptionSet
  nameWithType: ImageDisk.diskEncryptionSet
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.diskEncryptionSet
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.withDiskEncryptionSet*
  name: withDiskEncryptionSet
  nameWithType: ImageDisk.withDiskEncryptionSet
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.withDiskEncryptionSet
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDisk.validate*
  name: validate
  nameWithType: ImageDisk.validate
  fullName: com.azure.resourcemanager.compute.models.ImageDisk.validate
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
