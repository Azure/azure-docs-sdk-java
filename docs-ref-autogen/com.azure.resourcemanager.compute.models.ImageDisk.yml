### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.models.ImageDisk"
fullName: "com.azure.resourcemanager.compute.models.ImageDisk"
name: "ImageDisk"
nameWithType: "ImageDisk"
summary: "Describes a image disk."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class ImageDisk"
constructors:
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.ImageDisk()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.ImageDisk()"
  name: "ImageDisk()"
  nameWithType: "ImageDisk.ImageDisk()"
  syntax: "public ImageDisk()"
methods:
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.blobUri()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.blobUri()"
  name: "blobUri()"
  nameWithType: "ImageDisk.blobUri()"
  summary: "Get the blob<wbr>Uri property: The Virtual Hard Disk."
  syntax: "public String blobUri()"
  desc: "Get the blobUri property: The Virtual Hard Disk."
  returns:
    description: "the blobUri value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.caching()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.caching()"
  name: "caching()"
  nameWithType: "ImageDisk.caching()"
  summary: "Get the caching property: Specifies the caching requirements."
  syntax: "public CachingTypes caching()"
  desc: "Get the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \\*\\*None\\*\\* <br><br> \\*\\*ReadOnly\\*\\* <br><br> \\*\\*ReadWrite\\*\\* <br><br> Default: \\*\\*None for Standard storage. ReadOnly for Premium storage\\*\\*."
  returns:
    description: "the caching value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CachingTypes?alt=com.azure.resourcemanager.compute.models.CachingTypes&text=CachingTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.diskEncryptionSet()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.diskEncryptionSet()"
  name: "diskEncryptionSet()"
  nameWithType: "ImageDisk.diskEncryptionSet()"
  summary: "Get the disk<wbr>Encryption<wbr>Set property: Specifies the customer managed disk encryption set resource id for the managed image disk."
  syntax: "public DiskEncryptionSetParameters diskEncryptionSet()"
  desc: "Get the diskEncryptionSet property: Specifies the customer managed disk encryption set resource id for the managed image disk."
  returns:
    description: "the diskEncryptionSet value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters?alt=com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters&text=DiskEncryptionSetParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.diskSizeGB()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.diskSizeGB()"
  name: "diskSizeGB()"
  nameWithType: "ImageDisk.diskSizeGB()"
  summary: "Get the disk<wbr>SizeGB property: Specifies the size of empty data disks in gigabytes."
  syntax: "public Integer diskSizeGB()"
  desc: "Get the diskSizeGB property: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB."
  returns:
    description: "the diskSizeGB value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.managedDisk()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.managedDisk()"
  name: "managedDisk()"
  nameWithType: "ImageDisk.managedDisk()"
  summary: "Get the managed<wbr>Disk property: The managed<wbr>Disk."
  syntax: "public SubResource managedDisk()"
  desc: "Get the managedDisk property: The managedDisk."
  returns:
    description: "the managedDisk value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.snapshot()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.snapshot()"
  name: "snapshot()"
  nameWithType: "ImageDisk.snapshot()"
  summary: "Get the snapshot property: The snapshot."
  syntax: "public SubResource snapshot()"
  desc: "Get the snapshot property: The snapshot."
  returns:
    description: "the snapshot value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.storageAccountType()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.storageAccountType()"
  name: "storageAccountType()"
  nameWithType: "ImageDisk.storageAccountType()"
  summary: "Get the storage<wbr>Account<wbr>Type property: Specifies the storage account type for the managed disk."
  syntax: "public StorageAccountTypes storageAccountType()"
  desc: "Get the storageAccountType property: Specifies the storage account type for the managed disk. NOTE: UltraSSD\\_LRS can only be used with data disks, it cannot be used with OS Disk."
  returns:
    description: "the storageAccountType value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.StorageAccountTypes?alt=com.azure.resourcemanager.compute.models.StorageAccountTypes&text=StorageAccountTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.validate()"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.validate()"
  name: "validate()"
  nameWithType: "ImageDisk.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.withBlobUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.withBlobUri(String blobUri)"
  name: "withBlobUri(String blobUri)"
  nameWithType: "ImageDisk.withBlobUri(String blobUri)"
  summary: "Set the blob<wbr>Uri property: The Virtual Hard Disk."
  parameters:
  - description: "the blobUri value to set."
    name: "blobUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ImageDisk withBlobUri(String blobUri)"
  desc: "Set the blobUri property: The Virtual Hard Disk."
  returns:
    description: "the ImageDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDisk?alt=com.azure.resourcemanager.compute.models.ImageDisk&text=ImageDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.withCaching(CachingTypes caching)"
  name: "withCaching(CachingTypes caching)"
  nameWithType: "ImageDisk.withCaching(CachingTypes caching)"
  summary: "Set the caching property: Specifies the caching requirements."
  parameters:
  - description: "the caching value to set."
    name: "caching"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CachingTypes?alt=com.azure.resourcemanager.compute.models.CachingTypes&text=CachingTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageDisk withCaching(CachingTypes caching)"
  desc: "Set the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \\*\\*None\\*\\* <br><br> \\*\\*ReadOnly\\*\\* <br><br> \\*\\*ReadWrite\\*\\* <br><br> Default: \\*\\*None for Standard storage. ReadOnly for Premium storage\\*\\*."
  returns:
    description: "the ImageDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDisk?alt=com.azure.resourcemanager.compute.models.ImageDisk&text=ImageDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.withDiskEncryptionSet(com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters)"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.withDiskEncryptionSet(DiskEncryptionSetParameters diskEncryptionSet)"
  name: "withDiskEncryptionSet(DiskEncryptionSetParameters diskEncryptionSet)"
  nameWithType: "ImageDisk.withDiskEncryptionSet(DiskEncryptionSetParameters diskEncryptionSet)"
  summary: "Set the disk<wbr>Encryption<wbr>Set property: Specifies the customer managed disk encryption set resource id for the managed image disk."
  parameters:
  - description: "the diskEncryptionSet value to set."
    name: "diskEncryptionSet"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters?alt=com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters&text=DiskEncryptionSetParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageDisk withDiskEncryptionSet(DiskEncryptionSetParameters diskEncryptionSet)"
  desc: "Set the diskEncryptionSet property: Specifies the customer managed disk encryption set resource id for the managed image disk."
  returns:
    description: "the ImageDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDisk?alt=com.azure.resourcemanager.compute.models.ImageDisk&text=ImageDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.withDiskSizeGB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.withDiskSizeGB(Integer diskSizeGB)"
  name: "withDiskSizeGB(Integer diskSizeGB)"
  nameWithType: "ImageDisk.withDiskSizeGB(Integer diskSizeGB)"
  summary: "Set the disk<wbr>SizeGB property: Specifies the size of empty data disks in gigabytes."
  parameters:
  - description: "the diskSizeGB value to set."
    name: "diskSizeGB"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public ImageDisk withDiskSizeGB(Integer diskSizeGB)"
  desc: "Set the diskSizeGB property: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB."
  returns:
    description: "the ImageDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDisk?alt=com.azure.resourcemanager.compute.models.ImageDisk&text=ImageDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.withManagedDisk(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.withManagedDisk(SubResource managedDisk)"
  name: "withManagedDisk(SubResource managedDisk)"
  nameWithType: "ImageDisk.withManagedDisk(SubResource managedDisk)"
  summary: "Set the managed<wbr>Disk property: The managed<wbr>Disk."
  parameters:
  - description: "the managedDisk value to set."
    name: "managedDisk"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageDisk withManagedDisk(SubResource managedDisk)"
  desc: "Set the managedDisk property: The managedDisk."
  returns:
    description: "the ImageDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDisk?alt=com.azure.resourcemanager.compute.models.ImageDisk&text=ImageDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.withSnapshot(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.withSnapshot(SubResource snapshot)"
  name: "withSnapshot(SubResource snapshot)"
  nameWithType: "ImageDisk.withSnapshot(SubResource snapshot)"
  summary: "Set the snapshot property: The snapshot."
  parameters:
  - description: "the snapshot value to set."
    name: "snapshot"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageDisk withSnapshot(SubResource snapshot)"
  desc: "Set the snapshot property: The snapshot."
  returns:
    description: "the ImageDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDisk?alt=com.azure.resourcemanager.compute.models.ImageDisk&text=ImageDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.ImageDisk.withStorageAccountType(com.azure.resourcemanager.compute.models.StorageAccountTypes)"
  fullName: "com.azure.resourcemanager.compute.models.ImageDisk.withStorageAccountType(StorageAccountTypes storageAccountType)"
  name: "withStorageAccountType(StorageAccountTypes storageAccountType)"
  nameWithType: "ImageDisk.withStorageAccountType(StorageAccountTypes storageAccountType)"
  summary: "Set the storage<wbr>Account<wbr>Type property: Specifies the storage account type for the managed disk."
  parameters:
  - description: "the storageAccountType value to set."
    name: "storageAccountType"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.StorageAccountTypes?alt=com.azure.resourcemanager.compute.models.StorageAccountTypes&text=StorageAccountTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageDisk withStorageAccountType(StorageAccountTypes storageAccountType)"
  desc: "Set the storageAccountType property: Specifies the storage account type for the managed disk. NOTE: UltraSSD\\_LRS can only be used with data disks, it cannot be used with OS Disk."
  returns:
    description: "the ImageDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDisk?alt=com.azure.resourcemanager.compute.models.ImageDisk&text=ImageDisk\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes a image disk."
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.19.0
