### YamlMime:JavaMember
nameWithType: ReliableStateManager.removeAsync
type: method
members:
- fullName: microsoft.servicefabric.data.ReliableStateManager.removeAsync(String name)
  name: removeAsync(String name)
  nameWithType: ReliableStateManager.removeAsync(String name)
  parameters:
  - description: <p>The name of the reliable HashMap table to be removed </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>returns Completable future with a boolean value indicating whether remove succeeded or not. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Removes the Reliable collection associated with the given name. </p>
  syntax: public CompletableFuture<?> removeAsync(String name)
  uid: microsoft.servicefabric.data.ReliableStateManager.removeAsync(String)
- fullName: microsoft.servicefabric.data.ReliableStateManager.removeAsync(String name, Duration timeout)
  name: removeAsync(String name, Duration timeout)
  nameWithType: ReliableStateManager.removeAsync(String name, Duration timeout)
  parameters:
  - description: <p>The name of the reliable HashMap table to be removed </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the timeout in seconds to complete the operation. </p>
    name: timeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>returns Completable future with a boolean value indicating whether remove succeeded or not. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Removes the Reliable collection associated with the given name. </p>
  syntax: public CompletableFuture<?> removeAsync(String name, Duration timeout)
  uid: microsoft.servicefabric.data.ReliableStateManager.removeAsync(String,Duration)
- fullName: microsoft.servicefabric.data.ReliableStateManager.removeAsync(Transaction tx, String name)
  name: removeAsync(Transaction tx, String name)
  nameWithType: ReliableStateManager.removeAsync(Transaction tx, String name)
  parameters:
  - description: <p>The transaction id associated with this operation. </p>
    name: tx
    type: <xref href="microsoft.servicefabric.data.Transaction?alt=microsoft.servicefabric.data.Transaction&text=Transaction" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the reliable HashMap table to be remove. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>returns Completable future with a boolean value indicating whether remove succeeded or not. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Removes the Reliable collection associated with the given name. </p>
  syntax: public CompletableFuture<?> removeAsync(Transaction tx, String name)
  uid: microsoft.servicefabric.data.ReliableStateManager.removeAsync(Transaction,String)
- fullName: microsoft.servicefabric.data.ReliableStateManager.removeAsync(Transaction tx, String name, Duration timeout)
  name: removeAsync(Transaction tx, String name, Duration timeout)
  nameWithType: ReliableStateManager.removeAsync(Transaction tx, String name, Duration timeout)
  parameters:
  - description: <p>The transaction id associated with this operation. </p>
    name: tx
    type: <xref href="microsoft.servicefabric.data.Transaction?alt=microsoft.servicefabric.data.Transaction&text=Transaction" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the reliable HashMap table to be removed </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the timeout in seconds to complete the operation. </p>
    name: timeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>returns Completable future with a boolean value indicating whether remove succeeded or not. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Removes the Reliable collection associated with the given name. </p>
  syntax: public CompletableFuture<?> removeAsync(Transaction tx, String name, Duration timeout)
  uid: microsoft.servicefabric.data.ReliableStateManager.removeAsync(Transaction,String,Duration)
uid: microsoft.servicefabric.data.ReliableStateManager.removeAsync*
fullName: microsoft.servicefabric.data.ReliableStateManager.removeAsync(String name)
name: removeAsync(String name)
package: microsoft.servicefabric.data
metadata: {}
