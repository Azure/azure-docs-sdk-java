### YamlMime:JavaType
uid: "com.azure.health.insights.radiologyinsights.models.FindingOptions"
fullName: "com.azure.health.insights.radiologyinsights.models.FindingOptions"
name: "FindingOptions"
nameWithType: "FindingOptions"
summary: "Finding options."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **FindingOptions**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.FindingOptions?alt=com.azure.health.insights.radiologyinsights.models.FindingOptions&text=FindingOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.health.insights.radiologyinsights.models.FindingOptions.FindingOptions()"
  fullName: "com.azure.health.insights.radiologyinsights.models.FindingOptions.FindingOptions()"
  name: "FindingOptions()"
  nameWithType: "FindingOptions.FindingOptions()"
  summary: "Creates an instance of Finding<wbr>Options class."
  syntax: "public FindingOptions()"
  desc: "Creates an instance of FindingOptions class."
methods:
- uid: "com.azure.health.insights.radiologyinsights.models.FindingOptions.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.health.insights.radiologyinsights.models.FindingOptions.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "FindingOptions.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Finding<wbr>Options from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static FindingOptions fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the FindingOptions."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of FindingOptions from the JsonReader."
  returns:
    description: "An instance of FindingOptions if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.FindingOptions?alt=com.azure.health.insights.radiologyinsights.models.FindingOptions&text=FindingOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.FindingOptions.isProvideFocusedSentenceEvidence()"
  fullName: "com.azure.health.insights.radiologyinsights.models.FindingOptions.isProvideFocusedSentenceEvidence()"
  name: "isProvideFocusedSentenceEvidence()"
  nameWithType: "FindingOptions.isProvideFocusedSentenceEvidence()"
  summary: "Get the provide<wbr>Focused<wbr>Sentence<wbr>Evidence property: If this is true, provide the sentence that contains the first token of the finding's clinical indicator (i.<wbr>e."
  syntax: "public Boolean isProvideFocusedSentenceEvidence()"
  desc: "Get the provideFocusedSentenceEvidence property: If this is true, provide the sentence that contains the first token of the finding's clinical indicator (i.e. the medical problem), if there is one. This sentence is provided as an extension with url 'ci\\_sentence', next to the token evidence. Default is false."
  returns:
    description: "the provideFocusedSentenceEvidence value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.health.insights.radiologyinsights.models.FindingOptions.setProvideFocusedSentenceEvidence(java.lang.Boolean)"
  fullName: "com.azure.health.insights.radiologyinsights.models.FindingOptions.setProvideFocusedSentenceEvidence(Boolean provideFocusedSentenceEvidence)"
  name: "setProvideFocusedSentenceEvidence(Boolean provideFocusedSentenceEvidence)"
  nameWithType: "FindingOptions.setProvideFocusedSentenceEvidence(Boolean provideFocusedSentenceEvidence)"
  summary: "Set the provide<wbr>Focused<wbr>Sentence<wbr>Evidence property: If this is true, provide the sentence that contains the first token of the finding's clinical indicator (i.<wbr>e."
  parameters:
  - description: "the provideFocusedSentenceEvidence value to set."
    name: "provideFocusedSentenceEvidence"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public FindingOptions setProvideFocusedSentenceEvidence(Boolean provideFocusedSentenceEvidence)"
  desc: "Set the provideFocusedSentenceEvidence property: If this is true, provide the sentence that contains the first token of the finding's clinical indicator (i.e. the medical problem), if there is one. This sentence is provided as an extension with url 'ci\\_sentence', next to the token evidence. Default is false."
  returns:
    description: "the FindingOptions object itself."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.FindingOptions?alt=com.azure.health.insights.radiologyinsights.models.FindingOptions&text=FindingOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.FindingOptions.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.health.insights.radiologyinsights.models.FindingOptions.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "FindingOptions.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Finding options."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.FindingOptions?alt=com.azure.health.insights.radiologyinsights.models.FindingOptions&text=FindingOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.health.insights.radiologyinsights.models"
artifact: com.azure:azure-health-insights-radiologyinsights:1.0.0
