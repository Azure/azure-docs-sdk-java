### YamlMime:JavaEnum
uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy"
fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy"
name: "TaskGroupTerminateOnErrorStrategy"
nameWithType: "TaskGroupTerminateOnErrorStrategy"
summary: "Defines task group termination strategies to be used once a task error-ed."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Enum?alt=java.lang.Enum&text=Enum\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)?alt=java.lang.Enum.<T>valueOf&text=<T>valueOf\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.clone()?alt=java.lang.Enum.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.compareTo(E)?alt=java.lang.Enum.compareTo&text=compareTo\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.equals(java.lang.Object)?alt=java.lang.Enum.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.finalize()?alt=java.lang.Enum.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.getDeclaringClass()?alt=java.lang.Enum.getDeclaringClass&text=getDeclaringClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.hashCode()?alt=java.lang.Enum.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.name()?alt=java.lang.Enum.name&text=name\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.ordinal()?alt=java.lang.Enum.ordinal&text=ordinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.toString()?alt=java.lang.Enum.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public enum **TaskGroupTerminateOnErrorStrategy**</br> extends <xref href=\"java.lang.Enum?alt=java.lang.Enum&text=Enum\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy?alt=com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy&text=TaskGroupTerminateOnErrorStrategy\" data-throw-if-not-resolved=\"False\" />&gt;"
fields:
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy.TERMINATE_ON_HITTING_LCA_TASK"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy.TERMINATE_ON_HITTING_LCA_TASK"
  name: "TERMINATE_ON_HITTING_LCA_TASK"
  nameWithType: "TaskGroupTerminateOnErrorStrategy.TERMINATE_ON_HITTING_LCA_TASK"
  summary: "Indicate that on task error, allows any other tasks those are not directly or indirectly depends on the error-ed task to execute, once a LCA (lowest common ancestor) task is hit (at that point any progress cannot be made) emit on<wbr>Error terminal event with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rx.exceptions.CompositeException\"></xref>."
  desc: "Indicate that on task error, allows any other tasks those are not directly or indirectly depends on the error-ed task to execute, once a LCA (lowest common ancestor) task is hit (at that point any progress cannot be made) emit onError terminal event with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rx.exceptions.CompositeException\"></xref>. Acronym: HLT"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy.TERMINATE_ON_IN_PROGRESS_TASKS_COMPLETION"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy.TERMINATE_ON_IN_PROGRESS_TASKS_COMPLETION"
  name: "TERMINATE_ON_IN_PROGRESS_TASKS_COMPLETION"
  nameWithType: "TaskGroupTerminateOnErrorStrategy.TERMINATE_ON_IN_PROGRESS_TASKS_COMPLETION"
  summary: "Indicate that on task error, allows for any currently executing tasks to finish and emit on<wbr>Error terminal event with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rx.exceptions.CompositeException\"></xref>."
  desc: "Indicate that on task error, allows for any currently executing tasks to finish and emit onError terminal event with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rx.exceptions.CompositeException\"></xref>. Acronym: IPTC"
methods:
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy.valueOf(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "TaskGroupTerminateOnErrorStrategy.valueOf(String name)"
  modifiers:
  - "static"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TaskGroupTerminateOnErrorStrategy valueOf(String name)"
  returns:
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy?alt=com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy&text=TaskGroupTerminateOnErrorStrategy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy.values()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy.values()"
  name: "values()"
  nameWithType: "TaskGroupTerminateOnErrorStrategy.values()"
  modifiers:
  - "static"
  syntax: "public static TaskGroupTerminateOnErrorStrategy[] values()"
  returns:
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy?alt=com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy&text=TaskGroupTerminateOnErrorStrategy\" data-throw-if-not-resolved=\"False\" />[]"
desc: "Defines task group termination strategies to be used once a task error-ed."
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.dag"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
