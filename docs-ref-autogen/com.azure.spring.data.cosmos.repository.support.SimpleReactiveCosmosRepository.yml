### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository"
fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>"
name: "SimpleReactiveCosmosRepository<T,K>"
nameWithType: "SimpleReactiveCosmosRepository<T,K>"
summary: "Repository class for simple reactive Cosmos operation"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SimpleReactiveCosmosRepository<T,K> implements ReactiveCosmosRepository<T,K>"
constructors:
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.SimpleReactiveCosmosRepository(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,K>,com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)"
methods:
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.<S>save(S)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.<S>saveAll(java.lang.Iterable<S>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.<S>saveAll(org.reactivestreams.Publisher<S>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.count()"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.delete(T)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteAll()"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteAll(java.lang.Iterable<? extends T>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteAll(org.reactivestreams.Publisher<? extends T>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteById(K)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteById(K,com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteById(org.reactivestreams.Publisher<K>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.existsById(K)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.existsById(org.reactivestreams.Publisher<K>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAll()"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAll(com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAll(org.springframework.data.domain.Sort)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAllById(java.lang.Iterable<K>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findAllById(org.reactivestreams.Publisher<K>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findById(K)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findById(K,com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.findById(org.reactivestreams.Publisher<K>)"
type: "class"
typeParameters:
- name: "T"
- name: "K"
implements:
- "<xref href=\"com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository?alt=com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository&text=ReactiveCosmosRepository\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
