### YamlMime:JavaMember
nameWithType: TableQuery<T>.generateFilterCondition
type: method
members:
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final boolean value)
  name: generateFilterCondition(String propertyName, String operation, final boolean value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final boolean value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>boolean</code> which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+boolean?alt=final boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for a  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a boolean, as in the following example: </p>

    <p></p>

    <p>This statement sets  to the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final boolean value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final boolean)
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final byte[] value)
  name: generateFilterCondition(String propertyName, String operation, final byte[] value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final byte[] value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>byte</code> array which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+byte+%5B%5D?alt=final byte []&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for a  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a binary value, as in the following example: </p>

    <p></p>

    <p>This statement sets  to the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final byte[] value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final byte [])
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final Byte[] value)
  name: generateFilterCondition(String propertyName, String operation, final Byte[] value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final Byte[] value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>Byte</code> array which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+Byte+%5B%5D?alt=final Byte []&text=final+Byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for a  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a binary value, as in the following example: </p>

    <p></p>

    <p>This statement sets  to the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final Byte[] value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final Byte [])
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final Date value)
  name: generateFilterCondition(String propertyName, String operation, final Date value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final Date value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.util.Date</code> which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+Date?alt=final Date&text=final+Date" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for a  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a datetime value, as in the following example: </p>

    <p></p>

    <p>This statement sets  to something like the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final Date value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final Date)
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final double value)
  name: generateFilterCondition(String propertyName, String operation, final double value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final double value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>double</code> which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+double?alt=final double&text=final+double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for a  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a double value, as in the following example: </p>

    <p></p>

    <p>This statement sets  to the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final double value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final double)
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final int value)
  name: generateFilterCondition(String propertyName, String operation, final int value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final int value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+int?alt=final int&text=final+int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for an  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a numeric value, as in the following example: </p>

    <p></p>

    <p>This statement sets  to the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final int value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final int)
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final long value)
  name: generateFilterCondition(String propertyName, String operation, final long value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final long value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for a  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a numeric value, as in the following example: </p>

    <p></p>

    <p>This statement sets  to the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final long value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final long)
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final String value)
  name: generateFilterCondition(String propertyName, String operation, final String value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final String value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for a  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a string value, as in the following example: </p>

    <p></p>

    <p>This statement sets  to the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final String value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final String)
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final UUID value)
  name: generateFilterCondition(String propertyName, String operation, final UUID value)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, final UUID value)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>UUID</code> which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="final+UUID?alt=final UUID&text=final+UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string for a  value. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as a UUID value, as in the following example: </p>

    <p></p>

    <p>This statement sets  to the following value: </p>

    <p></p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, final UUID value)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final UUID)
- fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, String value, EdmType edmType)
  name: generateFilterCondition(String propertyName, String operation, String value, EdmType edmType)
  nameWithType: TableQuery<T>.generateFilterCondition(String propertyName, String operation, String value, EdmType edmType)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the property to compare. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the comparison operator to use. </p>
    name: operation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the value to compare with the property. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="com.microsoft.azure.storage.table.EdmType" data-throw-if-not-resolved="false">EdmType</xref> to format the value as. </p>
    name: edmType
    type: <xref href="com.microsoft.azure.storage.table.EdmType?alt=com.microsoft.azure.storage.table.EdmType&text=EdmType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted filter condition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a property filter condition string. Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value, formatted as the specified <xref uid="com.microsoft.azure.storage.table.EdmType" data-throw-if-not-resolved="false">EdmType</xref>.</p>

    <p></p>
  syntax: public static String generateFilterCondition(String propertyName, String operation, String value, EdmType edmType)
  uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,String,EdmType)
uid: com.microsoft.azure.storage.table.TableQuery.generateFilterCondition*
fullName: com.microsoft.azure.storage.table.TableQuery<T extends TableEntity>.generateFilterCondition(String propertyName, String operation, final boolean value)
name: generateFilterCondition(String propertyName, String operation, final boolean value)
package: com.microsoft.azure.storage.table
metadata: {}
