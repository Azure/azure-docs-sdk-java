### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.ExpressRouteCircuit"
fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit"
name: "ExpressRouteCircuit"
nameWithType: "ExpressRouteCircuit"
summary: "Entry point for Express Route Circuit management API in Azure."
syntax: "public interface ExpressRouteCircuit extends GroupableResource<NetworkManager,ExpressRouteCircuitInner>, Refreshable<ExpressRouteCircuit>, Updatable<ExpressRouteCircuit.Update>, UpdatableWithTags<ExpressRouteCircuit>"
methods:
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.circuitProvisioningState()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.circuitProvisioningState()"
  name: "circuitProvisioningState()"
  nameWithType: "ExpressRouteCircuit.circuitProvisioningState()"
  modifiers:
  - "abstract"
  syntax: "public abstract String circuitProvisioningState()"
  returns:
    description: "the CircuitProvisioningState state of the resource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.isAllowClassicOperations()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.isAllowClassicOperations()"
  name: "isAllowClassicOperations()"
  nameWithType: "ExpressRouteCircuit.isAllowClassicOperations()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isAllowClassicOperations()"
  returns:
    description: "the flag indicating if classic operations allowed"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.peerings()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.peerings()"
  name: "peerings()"
  nameWithType: "ExpressRouteCircuit.peerings()"
  modifiers:
  - "abstract"
  syntax: "public abstract ExpressRouteCircuitPeerings peerings()"
  returns:
    description: "entry point to manage express route peerings associated with express route circuit"
    type: "<xref href=\"com.microsoft.azure.management.network.ExpressRouteCircuitPeerings?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeerings&text=ExpressRouteCircuitPeerings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.peeringsMap()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.peeringsMap()"
  name: "peeringsMap()"
  nameWithType: "ExpressRouteCircuit.peeringsMap()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,ExpressRouteCircuitPeering> peeringsMap()"
  returns:
    description: "the peerings associated with this express route circuit, indexed by name"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.ExpressRouteCircuitPeering?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeering&text=ExpressRouteCircuitPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.provisioningState()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ExpressRouteCircuit.provisioningState()"
  summary: "Gets the provisioning state of the express route circuit resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioning state of the express route circuit resource."
  returns:
    description: "provisioningState"
    type: "<xref href=\"com.microsoft.azure.management.network.ProvisioningState?alt=com.microsoft.azure.management.network.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.serviceKey()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.serviceKey()"
  name: "serviceKey()"
  nameWithType: "ExpressRouteCircuit.serviceKey()"
  modifiers:
  - "abstract"
  syntax: "public abstract String serviceKey()"
  returns:
    description: "the ServiceKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.serviceProviderNotes()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.serviceProviderNotes()"
  name: "serviceProviderNotes()"
  nameWithType: "ExpressRouteCircuit.serviceProviderNotes()"
  modifiers:
  - "abstract"
  syntax: "public abstract String serviceProviderNotes()"
  returns:
    description: "the ServiceProviderNotes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.serviceProviderProperties()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.serviceProviderProperties()"
  name: "serviceProviderProperties()"
  nameWithType: "ExpressRouteCircuit.serviceProviderProperties()"
  modifiers:
  - "abstract"
  syntax: "public abstract ExpressRouteCircuitServiceProviderProperties serviceProviderProperties()"
  returns:
    description: "the ServiceProviderProperties"
    type: "<xref href=\"com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties?alt=com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties&text=ExpressRouteCircuitServiceProviderProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.serviceProviderProvisioningState()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.serviceProviderProvisioningState()"
  name: "serviceProviderProvisioningState()"
  nameWithType: "ExpressRouteCircuit.serviceProviderProvisioningState()"
  summary: "The Service<wbr>Provider<wbr>Provisioning<wbr>State state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ServiceProviderProvisioningState serviceProviderProvisioningState()"
  desc: "The ServiceProviderProvisioningState state of the resource."
  returns:
    description: "serviceProviderProvisioningState"
    type: "<xref href=\"com.microsoft.azure.management.network.ServiceProviderProvisioningState?alt=com.microsoft.azure.management.network.ServiceProviderProvisioningState&text=ServiceProviderProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCircuit.sku()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCircuit.sku()"
  name: "sku()"
  nameWithType: "ExpressRouteCircuit.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract ExpressRouteCircuitSkuType sku()"
  returns:
    description: "the SKU type"
    type: "<xref href=\"com.microsoft.azure.management.network.ExpressRouteCircuitSkuType?alt=com.microsoft.azure.management.network.ExpressRouteCircuitSkuType&text=ExpressRouteCircuitSkuType\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Entry point for Express Route Circuit management API in Azure."
implements:
- "<xref href=\"com.microsoft.azure.management.network.model.UpdatableWithTags?alt=com.microsoft.azure.management.network.model.UpdatableWithTags&text=UpdatableWithTags\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ExpressRouteCircuit?alt=com.microsoft.azure.management.network.ExpressRouteCircuit&text=ExpressRouteCircuit\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.NetworkManager?alt=com.microsoft.azure.management.network.implementation.NetworkManager&text=NetworkManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.implementation.ExpressRouteCircuitInner?alt=com.microsoft.azure.management.network.implementation.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Refreshable?alt=com.microsoft.azure.management.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ExpressRouteCircuit?alt=com.microsoft.azure.management.network.ExpressRouteCircuit&text=ExpressRouteCircuit\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Updatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ExpressRouteCircuit.Update?alt=com.microsoft.azure.management.network.ExpressRouteCircuit.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
