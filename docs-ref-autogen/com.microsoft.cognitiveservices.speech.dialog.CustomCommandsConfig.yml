### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig?alt=com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig&text=DialogServiceConfig" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.close()
- com.microsoft.cognitiveservices.speech.SpeechConfig.enableAudioLogging()
- com.microsoft.cognitiveservices.speech.SpeechConfig.enableDictation()
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromAuthorizationToken(String,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromSubscription(String,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.getAuthorizationToken()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getEndpointId()
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getLanguage()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getOutputFormat()
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getProperty(String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getProperty(PropertyId)
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechRecognitionLanguage()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisLanguage()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisVoiceName()
- com.microsoft.cognitiveservices.speech.SpeechConfig.requestWordLevelTimestamps()
- com.microsoft.cognitiveservices.speech.SpeechConfig.setAuthorizationToken(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setEndpointId(String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setLanguage(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setOutputFormat(OutputFormat)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setProfanity(ProfanityOption)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProperty(String,String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProperty(PropertyId,String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProxy(String,int,String,String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setServiceProperty(String,String,ServicePropertyChannel)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechRecognitionLanguage(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisLanguage(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisVoiceName(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigClass
methods:
- fullName: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig.fromAuthorizationToken(String appId, String authorizationToken, String region)
  name: fromAuthorizationToken(String appId, String authorizationToken, String region)
  nameWithType: CustomCommandsConfig.fromAuthorizationToken(String appId, String authorizationToken, String region)
  parameters:
  - description: <p>Custom Commands Application Id. </p>
    name: appId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The authorization token. </p>
    name: authorizationToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>). </p>
    name: region
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig?alt=com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig&text=CustomCommandsConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of Custom Commands config with the specified Custom Commands application id, authorization token and service region. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created. For recognizers that have been created before, you need to set authorization token of the corresponding recognizer to refresh the token. Otherwise, the recognizers will encounter errors during recognition. </p>'
  syntax: public static CustomCommandsConfig fromAuthorizationToken(String appId, String authorizationToken, String region)
  uid: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig.fromAuthorizationToken(String,String,String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig.fromSubscription(String appId, String subscription, String region)
  name: fromSubscription(String appId, String subscription, String region)
  nameWithType: CustomCommandsConfig.fromSubscription(String appId, String subscription, String region)
  parameters:
  - description: <p>Custom Commands Application Id. </p>
    name: appId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Service subscription key. </p>
    name: subscription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Service region key. </p>
    name: region
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The created config. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig?alt=com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig&text=CustomCommandsConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Creates an instance of Custom Commands config with the specified Custom Commands application id, subscription and region. </p>
  syntax: public static CustomCommandsConfig fromSubscription(String appId, String subscription, String region)
  uid: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig.fromSubscription(String,String,String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig.getApplicationId()
  name: getApplicationId()
  nameWithType: CustomCommandsConfig.getApplicationId()
  returns:
    description: <p>Identifier used to connect to the backend service. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the application id. </p>
  syntax: public String getApplicationId()
  uid: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig.getApplicationId()
- fullName: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig.setApplicationId(String value)
  name: setApplicationId(String value)
  nameWithType: CustomCommandsConfig.setApplicationId(String value)
  parameters:
  - description: <p>Identifier used to connect to the backend service. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the application id. </p>
  syntax: public void setApplicationId(String value)
  uid: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig.setApplicationId(String)
nameWithType: CustomCommandsConfig
syntax: public class CustomCommandsConfig extends DialogServiceConfig
type: class
uid: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig
fullName: com.microsoft.cognitiveservices.speech.dialog.CustomCommandsConfig
name: CustomCommandsConfig
package: com.microsoft.cognitiveservices.speech.dialog
summary: <p>Class that defines configurations for the dialog service connector object for using a CustomCommands backend. </p>
metadata: {}
