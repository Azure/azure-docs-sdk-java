### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin*"
fullName: "com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin"
name: "scheduleUpdateTwin"
nameWithType: "JobClient.scheduleUpdateTwin"
members:
- uid: "com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice,java.util.Date,long)"
  fullName: "com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)"
  name: "scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)"
  nameWithType: "JobClient.scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)"
  summary: "Creates a new Job to update twin tags and desired properties on one or multiple devices"
  parameters:
  - description: "Unique Job Id for this job"
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Query condition to evaluate which devices to run the job on. It can be <code>null</code> or empty"
    name: "queryCondition"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Twin object to use for the update"
    name: "updateTwin"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice?alt=com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice&text=DeviceTwinDevice\" data-throw-if-not-resolved=\"False\" />"
  - description: "Date time in Utc to start the job"
    name: "startTimeUtc"
    type: "<xref href=\"java.util.Date?alt=java.util.Date&text=Date\" data-throw-if-not-resolved=\"False\" />"
  - description: "Max execution time in seconds, i.e., ttl duration the job can run"
    name: "maxExecutionTimeInSeconds"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public synchronized JobResult scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)"
  exceptions:
  - description: "if one of the provided parameters is invalid"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if one of the provided parameters is invalid"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if one of the provided parameters is invalid"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "a jobResult object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.jobs.JobResult?alt=com.microsoft.azure.sdk.iot.service.jobs.JobResult&text=JobResult\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.jobs"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.26.0
