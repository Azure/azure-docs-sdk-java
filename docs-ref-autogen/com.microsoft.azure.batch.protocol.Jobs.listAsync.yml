### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync*"
fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync"
name: "listAsync"
nameWithType: "Jobs.listAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync()"
  name: "listAsync()"
  nameWithType: "Jobs.listAsync()"
  summary: "Lists all of the Jobs in the specified Account."
  syntax: "public abstract Observable<Page<CloudJob>> listAsync()"
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync(ListOperationCallback<CloudJob> serviceCallback)"
  name: "listAsync(ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listAsync(ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists all of the Jobs in the specified Account."
  parameters:
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listAsync(ListOperationCallback<CloudJob> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync(JobListOptions jobListOptions)"
  name: "listAsync(JobListOptions jobListOptions)"
  nameWithType: "Jobs.listAsync(JobListOptions jobListOptions)"
  summary: "Lists all of the Jobs in the specified Account."
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListOptions?alt=com.microsoft.azure.batch.protocol.models.JobListOptions&text=JobListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudJob>> listAsync(JobListOptions jobListOptions)"
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)"
  name: "listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists all of the Jobs in the specified Account."
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListOptions?alt=com.microsoft.azure.batch.protocol.models.JobListOptions&text=JobListOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:8.0.0
