### YamlMime:JavaMember
nameWithType: FileServersInner.beginCreateAsync
type: method
members:
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  nameWithType: FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the FileServerInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public Observable<FileServerInner> beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String,String,String,FileServerCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  nameWithType: FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public ServiceFuture<FileServerInner> beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String,String,String,FileServerCreateParameters,final ServiceCallback<FileServerInner>)
uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync*
fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
name: beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
package: com.microsoft.azure.management.batchai.implementation
metadata: {}
