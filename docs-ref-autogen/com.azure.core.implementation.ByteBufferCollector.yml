### YamlMime:JavaType
uid: "com.azure.core.implementation.ByteBufferCollector"
fullName: "com.azure.core.implementation.ByteBufferCollector"
name: "ByteBufferCollector"
nameWithType: "ByteBufferCollector"
summary: "This class offers functionality similar to <xref uid=\"java.io.ByteArrayOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteArrayOutputStream\"></xref> but instead of consuming byte arrays it consumes ByteBuffers. This class is optimized to reduce the number of memory copies by directly writing a passed ByteBuffers data directly into its backing byte array, this differs from handling for <xref uid=\"java.io.ByteArrayOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteArrayOutputStream\"></xref> where ByteBuffer data may need to be first copied into a temporary buffer resulting in an extra memory copy."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ByteBufferCollector"
constructors:
- "com.azure.core.implementation.ByteBufferCollector.ByteBufferCollector()"
- "com.azure.core.implementation.ByteBufferCollector.ByteBufferCollector(int)"
methods:
- "com.azure.core.implementation.ByteBufferCollector.toByteArray()"
- "com.azure.core.implementation.ByteBufferCollector.write(java.nio.ByteBuffer)"
type: "class"
metadata: {}
package: "com.azure.core.implementation"
artifact: com.azure:azure-core:1.15.0
