### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withMinWidth*"
fullName: "com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withMinWidth"
name: "withMinWidth"
nameWithType: "BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withMinWidth"
members:
- uid: "com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withMinWidth(java.lang.Long)"
  fullName: "com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withMinWidth(Long minWidth)"
  name: "withMinWidth(Long minWidth)"
  nameWithType: "BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withMinWidth(Long minWidth)"
  summary: "Filter images that have a width that is greater than or equal to the specified width. Specify the width in pixels. You may specify this filter and maxWidth to filter images within a range of widths. This filter and the width filter are mutually exclusive."
  parameters:
  - name: "minWidth"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BingImages.BingImagesSearchDefinitionStages.WithExecute withMinWidth(Long minWidth)"
  returns:
    description: "next definition stage"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.search.imagesearch"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-imagesearch:1.0.2
