### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.models.JobPreparationTask.waitForSuccess*"
fullName: "com.microsoft.azure.batch.protocol.models.JobPreparationTask.waitForSuccess"
name: "waitForSuccess"
nameWithType: "JobPreparationTask.waitForSuccess"
members:
- uid: "com.microsoft.azure.batch.protocol.models.JobPreparationTask.waitForSuccess()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobPreparationTask.waitForSuccess()"
  name: "waitForSuccess()"
  nameWithType: "JobPreparationTask.waitForSuccess()"
  summary: "Get if true and the Job Preparation Task fails on a Node, the Batch service retries the Job Preparation Task up to its maximum retry count (as specified in the constraints element). If the Task has still not completed successfully after all retries, then the Batch service will not schedule Tasks of the Job to the Node. The Node remains active and eligible to run Tasks of other Jobs. If false, the Batch service will not wait for the Job Preparation Task to complete. In this case, other Tasks of the Job can start executing on the Compute Node while the Job Preparation Task is still running; and even if the Job Preparation Task fails, new Tasks will continue to be scheduled on the Compute Node. The default value is true."
  syntax: "public Boolean waitForSuccess()"
  returns:
    description: "the waitForSuccess value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
