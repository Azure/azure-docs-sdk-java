### YamlMime:JavaType
uid: "com.azure.spring.cloud.context.core.impl.DefaultEnvironmentProvider"
fullName: "com.azure.spring.cloud.context.core.impl.DefaultEnvironmentProvider"
name: "DefaultEnvironmentProvider"
nameWithType: "DefaultEnvironmentProvider"
summary: "A <xref uid=\"com.azure.spring.cloud.context.core.api.EnvironmentProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnvironmentProvider\"></xref> implementation that based on <xref uid=\"com.azure.spring.cloud.context.core.config.AzureProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureProperties\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DefaultEnvironmentProvider implements EnvironmentProvider"
constructors:
- "com.azure.spring.cloud.context.core.impl.DefaultEnvironmentProvider.DefaultEnvironmentProvider()"
methods:
- "com.azure.spring.cloud.context.core.impl.DefaultEnvironmentProvider.getEnvironment()"
- "com.azure.spring.cloud.context.core.impl.DefaultEnvironmentProvider.setEnvironment(com.azure.core.management.AzureEnvironment)"
type: "class"
implements:
- "<xref href=\"com.azure.spring.cloud.context.core.api.EnvironmentProvider?alt=com.azure.spring.cloud.context.core.api.EnvironmentProvider&text=EnvironmentProvider\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.spring.cloud.context.core.impl"
artifact: com.azure.spring:azure-spring-cloud-context:2.0.0
