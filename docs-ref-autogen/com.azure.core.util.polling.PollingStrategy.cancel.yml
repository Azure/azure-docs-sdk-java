### YamlMime:JavaMember
uid: "com.azure.core.util.polling.PollingStrategy.cancel*"
fullName: "com.azure.core.util.polling.PollingStrategy<T,U>.cancel"
name: "cancel"
nameWithType: "PollingStrategy<T,U>.cancel"
members:
- uid: "com.azure.core.util.polling.PollingStrategy.cancel(com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>)"
  fullName: "com.azure.core.util.polling.PollingStrategy<T,U>.cancel(PollingContext<T> pollingContext, PollResponse<T> initialResponse)"
  name: "cancel(PollingContext<T> pollingContext, PollResponse<T> initialResponse)"
  nameWithType: "PollingStrategy<T,U>.cancel(PollingContext<T> pollingContext, PollResponse<T> initialResponse)"
  summary: "Cancels the long-running operation if service supports cancellation. If service does not support cancellation then the implementer should return Mono.error with an error message indicating absence of cancellation. Implementing this method is optional - by default, cancellation will not be supported unless overridden."
  parameters:
  - description: "the <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref> for the current polling operation, or null if the polling has\n                       started in a <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref>"
    name: "pollingContext"
    type: "<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the response from the initial operation"
    name: "initialResponse"
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public default Mono<T> cancel(PollingContext<T> pollingContext, PollResponse<T> initialResponse)"
  returns:
    description: "a publisher emitting the cancellation response content"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.util.polling"
artifact: com.azure:azure-core:1.23.0
