### YamlMime:JavaMember
nameWithType: Jobs.disable
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks)
  name: disable(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disable(String jobId, DisableJobOption disableTasks)
  parameters:
  - description: <p>The ID of the job to disable. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    name: disableTasks
    type: <xref href="com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax: public void disable(String jobId, DisableJobOption disableTasks)
  uid: com.microsoft.azure.batch.protocol.Jobs.disable(String,DisableJobOption)
- fullName: com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  name: disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  parameters:
  - description: <p>The ID of the job to disable. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    name: disableTasks
    type: <xref href="com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobDisableOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobDisableOptions?alt=com.microsoft.azure.batch.protocol.models.JobDisableOptions&text=JobDisableOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>

    <p></p>
  syntax: public void disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  uid: com.microsoft.azure.batch.protocol.Jobs.disable(String,DisableJobOption,JobDisableOptions)
uid: com.microsoft.azure.batch.protocol.Jobs.disable*
fullName: com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks)
name: disable(String jobId, DisableJobOption disableTasks)
package: com.microsoft.azure.batch.protocol
metadata: {}
