### YamlMime:JavaMember
uid: "com.microsoft.azure.management.sql.ImportRequest.withEdition*"
fullName: "com.microsoft.azure.management.sql.ImportRequest.withEdition"
name: "withEdition"
nameWithType: "ImportRequest.withEdition"
members:
- uid: "com.microsoft.azure.management.sql.ImportRequest.withEdition(com.microsoft.azure.management.sql.DatabaseEdition)"
  fullName: "com.microsoft.azure.management.sql.ImportRequest.withEdition(DatabaseEdition edition)"
  name: "withEdition(DatabaseEdition edition)"
  nameWithType: "ImportRequest.withEdition(DatabaseEdition edition)"
  summary: "Set the edition for the database being created. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical', 'Hyperscale'."
  parameters:
  - description: "the edition value to set"
    name: "edition"
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseEdition?alt=com.microsoft.azure.management.sql.DatabaseEdition&text=DatabaseEdition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportRequest withEdition(DatabaseEdition edition)"
  returns:
    description: "the ImportRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportRequest?alt=com.microsoft.azure.management.sql.ImportRequest&text=ImportRequest\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.sql"
artifact: com.microsoft.azure:azure-mgmt-sql:1.38.1
