### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.UserAccount
  id: UserAccount
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.UserAccount.UserAccount()
  - com.microsoft.azure.batch.protocol.models.UserAccount.elevationLevel()
  - com.microsoft.azure.batch.protocol.models.UserAccount.linuxUserConfiguration()
  - com.microsoft.azure.batch.protocol.models.UserAccount.name()
  - com.microsoft.azure.batch.protocol.models.UserAccount.password()
  - com.microsoft.azure.batch.protocol.models.UserAccount.windowsUserConfiguration()
  - com.microsoft.azure.batch.protocol.models.UserAccount.withElevationLevel(com.microsoft.azure.batch.protocol.models.ElevationLevel)
  - com.microsoft.azure.batch.protocol.models.UserAccount.withLinuxUserConfiguration(com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration)
  - com.microsoft.azure.batch.protocol.models.UserAccount.withName(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.UserAccount.withPassword(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.UserAccount.withWindowsUserConfiguration(com.microsoft.azure.batch.protocol.models.WindowsUserConfiguration)
  langs:
  - java
  name: UserAccount
  nameWithType: UserAccount
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Properties used to create a user used to execute Tasks on an Azure Batch Compute Node.
  syntax:
    content: public class UserAccount
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.UserAccount()
  id: UserAccount()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: UserAccount()
  nameWithType: UserAccount.UserAccount()
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.UserAccount()
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.UserAccount*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public UserAccount()
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.elevationLevel()
  id: elevationLevel()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: elevationLevel()
  nameWithType: UserAccount.elevationLevel()
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.elevationLevel()
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.elevationLevel*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get the default value is nonAdmin. Possible values include: 'nonAdmin', 'admin'."
  syntax:
    content: public ElevationLevel elevationLevel()
    return:
      type: com.microsoft.azure.batch.protocol.models.ElevationLevel
      description: the elevationLevel value
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.linuxUserConfiguration()
  id: linuxUserConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: linuxUserConfiguration()
  nameWithType: UserAccount.linuxUserConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.linuxUserConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.linuxUserConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is ignored if specified on a Windows Pool. If not specified, the user is created with the default options.
  syntax:
    content: public LinuxUserConfiguration linuxUserConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
      description: the linuxUserConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.name()
  id: name()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: name()
  nameWithType: UserAccount.name()
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.name()
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.name*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the name value.
  syntax:
    content: public String name()
    return:
      type: java.lang.String
      description: the name value
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.password()
  id: password()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: password()
  nameWithType: UserAccount.password()
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.password()
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.password*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the password value.
  syntax:
    content: public String password()
    return:
      type: java.lang.String
      description: the password value
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.windowsUserConfiguration()
  id: windowsUserConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: windowsUserConfiguration()
  nameWithType: UserAccount.windowsUserConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.windowsUserConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.windowsUserConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property can only be specified if the user is on a Windows Pool. If not specified and on a Windows Pool, the user is created with the default options.
  syntax:
    content: public WindowsUserConfiguration windowsUserConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.WindowsUserConfiguration
      description: the windowsUserConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withElevationLevel(com.microsoft.azure.batch.protocol.models.ElevationLevel)
  id: withElevationLevel(com.microsoft.azure.batch.protocol.models.ElevationLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: withElevationLevel(ElevationLevel elevationLevel)
  nameWithType: UserAccount.withElevationLevel(ElevationLevel elevationLevel)
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withElevationLevel(ElevationLevel elevationLevel)
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.withElevationLevel*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set the default value is nonAdmin. Possible values include: 'nonAdmin', 'admin'."
  syntax:
    content: public UserAccount withElevationLevel(ElevationLevel elevationLevel)
    parameters:
    - id: elevationLevel
      type: com.microsoft.azure.batch.protocol.models.ElevationLevel
      description: the elevationLevel value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.UserAccount
      description: the UserAccount object itself.
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withLinuxUserConfiguration(com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration)
  id: withLinuxUserConfiguration(com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: withLinuxUserConfiguration(LinuxUserConfiguration linuxUserConfiguration)
  nameWithType: UserAccount.withLinuxUserConfiguration(LinuxUserConfiguration linuxUserConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withLinuxUserConfiguration(LinuxUserConfiguration linuxUserConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.withLinuxUserConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is ignored if specified on a Windows Pool. If not specified, the user is created with the default options.
  syntax:
    content: public UserAccount withLinuxUserConfiguration(LinuxUserConfiguration linuxUserConfiguration)
    parameters:
    - id: linuxUserConfiguration
      type: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
      description: the linuxUserConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.UserAccount
      description: the UserAccount object itself.
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withName(java.lang.String)
  id: withName(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: withName(String name)
  nameWithType: UserAccount.withName(String name)
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withName(String name)
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.withName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the name value.
  syntax:
    content: public UserAccount withName(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.UserAccount
      description: the UserAccount object itself.
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withPassword(java.lang.String)
  id: withPassword(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: withPassword(String password)
  nameWithType: UserAccount.withPassword(String password)
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withPassword(String password)
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.withPassword*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the password value.
  syntax:
    content: public UserAccount withPassword(String password)
    parameters:
    - id: password
      type: java.lang.String
      description: the password value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.UserAccount
      description: the UserAccount object itself.
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withWindowsUserConfiguration(com.microsoft.azure.batch.protocol.models.WindowsUserConfiguration)
  id: withWindowsUserConfiguration(com.microsoft.azure.batch.protocol.models.WindowsUserConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.UserAccount
  langs:
  - java
  name: withWindowsUserConfiguration(WindowsUserConfiguration windowsUserConfiguration)
  nameWithType: UserAccount.withWindowsUserConfiguration(WindowsUserConfiguration windowsUserConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withWindowsUserConfiguration(WindowsUserConfiguration windowsUserConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.UserAccount.withWindowsUserConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property can only be specified if the user is on a Windows Pool. If not specified and on a Windows Pool, the user is created with the default options.
  syntax:
    content: public UserAccount withWindowsUserConfiguration(WindowsUserConfiguration windowsUserConfiguration)
    parameters:
    - id: windowsUserConfiguration
      type: com.microsoft.azure.batch.protocol.models.WindowsUserConfiguration
      description: the windowsUserConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.UserAccount
      description: the UserAccount object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.UserAccount*
  name: UserAccount
  nameWithType: UserAccount.UserAccount
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.UserAccount
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.name*
  name: name
  nameWithType: UserAccount.name
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.name
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withName*
  name: withName
  nameWithType: UserAccount.withName
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.password*
  name: password
  nameWithType: UserAccount.password
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.password
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withPassword*
  name: withPassword
  nameWithType: UserAccount.withPassword
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withPassword
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ElevationLevel
  name: ElevationLevel
  nameWithType: ElevationLevel
  fullName: com.microsoft.azure.batch.protocol.models.ElevationLevel
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.elevationLevel*
  name: elevationLevel
  nameWithType: UserAccount.elevationLevel
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.elevationLevel
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withElevationLevel*
  name: withElevationLevel
  nameWithType: UserAccount.withElevationLevel
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withElevationLevel
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
  name: LinuxUserConfiguration
  nameWithType: LinuxUserConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.linuxUserConfiguration*
  name: linuxUserConfiguration
  nameWithType: UserAccount.linuxUserConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.linuxUserConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withLinuxUserConfiguration*
  name: withLinuxUserConfiguration
  nameWithType: UserAccount.withLinuxUserConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withLinuxUserConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.WindowsUserConfiguration
  name: WindowsUserConfiguration
  nameWithType: WindowsUserConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.WindowsUserConfiguration
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.windowsUserConfiguration*
  name: windowsUserConfiguration
  nameWithType: UserAccount.windowsUserConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.windowsUserConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.UserAccount.withWindowsUserConfiguration*
  name: withWindowsUserConfiguration
  nameWithType: UserAccount.withWindowsUserConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount.withWindowsUserConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
