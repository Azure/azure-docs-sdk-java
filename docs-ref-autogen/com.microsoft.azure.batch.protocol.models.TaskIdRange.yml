### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.TaskIdRange"
fullName: "com.microsoft.azure.batch.protocol.models.TaskIdRange"
name: "TaskIdRange"
nameWithType: "TaskIdRange"
summary: "A range of Task IDs that a Task can depend on. All Tasks with IDs in the range must complete successfully before the dependent Task can be scheduled. The start and end of the range are inclusive. For example, if a range has start 9 and end 12, then it represents Tasks '9', '10', '11' and '12'."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TaskIdRange"
constructors:
- "com.microsoft.azure.batch.protocol.models.TaskIdRange.TaskIdRange()"
methods:
- "com.microsoft.azure.batch.protocol.models.TaskIdRange.end()"
- "com.microsoft.azure.batch.protocol.models.TaskIdRange.start()"
- "com.microsoft.azure.batch.protocol.models.TaskIdRange.withEnd(int)"
- "com.microsoft.azure.batch.protocol.models.TaskIdRange.withStart(int)"
type: "class"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
