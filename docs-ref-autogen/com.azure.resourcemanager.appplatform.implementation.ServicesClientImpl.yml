### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  id: ServicesClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation
  children:
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDeleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailability(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityAsync(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpoint(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpoint(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list()
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listAsync()
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeys(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKey(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  - com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  langs:
  - java
  name: ServicesClientImpl
  nameWithType: ServicesClientImpl
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  type: Class
  package: com.azure.resourcemanager.appplatform.implementation
  summary: An instance of this class provides access to all the operations defined in ServicesClient.
  syntax:
    content: public final class ServicesClientImpl implements InnerSupportsGet<ServiceResourceInner>, InnerSupportsListing<ServiceResourceInner>, InnerSupportsDelete<Void>, ServicesClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  - com.azure.resourcemanager.appplatform.fluent.ServicesClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.ServicesClientImpl(com.azure.resourcemanager.appplatform.implementation.AppPlatformManagementClientImpl)
  id: ServicesClientImpl(com.azure.resourcemanager.appplatform.implementation.AppPlatformManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: ServicesClientImpl(AppPlatformManagementClientImpl client)
  nameWithType: ServicesClientImpl.ServicesClientImpl(AppPlatformManagementClientImpl client)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.ServicesClientImpl(AppPlatformManagementClientImpl client)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.ServicesClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Initializes an instance of ServicesClientImpl.
  syntax:
    content: " ServicesClientImpl(AppPlatformManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.appplatform.implementation.AppPlatformManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Create a new Service or update an exiting Service.
  syntax:
    content: public SyncPoller<PollResult<ServiceResourceInner>,ServiceResourceInner> beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  nameWithType: ServicesClientImpl.beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Create a new Service or update an exiting Service.
  syntax:
    content: public SyncPoller<PollResult<ServiceResourceInner>,ServiceResourceInner> beginCreateOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Create a new Service or update an exiting Service.
  syntax:
    content: public PollerFlux<PollResult<ServiceResourceInner>,ServiceResourceInner> beginCreateOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.beginDelete(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to delete a Service.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String serviceName, Context context)
  nameWithType: ServicesClientImpl.beginDelete(String resourceGroupName, String serviceName, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete(String resourceGroupName, String serviceName, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to delete a Service.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serviceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDeleteAsync(java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.beginDeleteAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDeleteAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to delete a Service.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to update an exiting Service.
  syntax:
    content: public SyncPoller<PollResult<ServiceResourceInner>,ServiceResourceInner> beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  nameWithType: ServicesClientImpl.beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to update an exiting Service.
  syntax:
    content: public SyncPoller<PollResult<ServiceResourceInner>,ServiceResourceInner> beginUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.beginUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to update an exiting Service.
  syntax:
    content: public PollerFlux<PollResult<ServiceResourceInner>,ServiceResourceInner> beginUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailability(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  id: checkNameAvailability(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: checkNameAvailability(String location, NameAvailabilityParameters availabilityParameters)
  nameWithType: ServicesClientImpl.checkNameAvailability(String location, NameAvailabilityParameters availabilityParameters)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailability(String location, NameAvailabilityParameters availabilityParameters)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Checks that the resource name is valid and is not already in use.
  syntax:
    content: public NameAvailability checkNameAvailability(String location, NameAvailabilityParameters availabilityParameters)
    parameters:
    - id: location
      type: java.lang.String
      description: the region.
    - id: availabilityParameters
      type: com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters
      description: Name availability parameters payload.
    return:
      type: com.azure.resourcemanager.appplatform.models.NameAvailability
      description: name availability result payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityAsync(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  id: checkNameAvailabilityAsync(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)
  nameWithType: ServicesClientImpl.checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Checks that the resource name is valid and is not already in use.
  syntax:
    content: public Mono<NameAvailability> checkNameAvailabilityAsync(String location, NameAvailabilityParameters availabilityParameters)
    parameters:
    - id: location
      type: java.lang.String
      description: the region.
    - id: availabilityParameters
      type: com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters
      description: Name availability parameters payload.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.models.NameAvailability>
      description: name availability result payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters,com.azure.core.util.Context)
  id: checkNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters availabilityParameters, Context context)
  nameWithType: ServicesClientImpl.checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters availabilityParameters, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters availabilityParameters, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponse*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Checks that the resource name is valid and is not already in use.
  syntax:
    content: public Response<NameAvailability> checkNameAvailabilityWithResponse(String location, NameAvailabilityParameters availabilityParameters, Context context)
    parameters:
    - id: location
      type: java.lang.String
      description: the region.
    - id: availabilityParameters
      type: com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters
      description: Name availability parameters payload.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.NameAvailability>
      description: name availability result payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  id: checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(String location, NameAvailabilityParameters availabilityParameters)
  nameWithType: ServicesClientImpl.checkNameAvailabilityWithResponseAsync(String location, NameAvailabilityParameters availabilityParameters)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponseAsync(String location, NameAvailabilityParameters availabilityParameters)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Checks that the resource name is valid and is not already in use.
  syntax:
    content: public Mono<Response<NameAvailability>> checkNameAvailabilityWithResponseAsync(String location, NameAvailabilityParameters availabilityParameters)
    parameters:
    - id: location
      type: java.lang.String
      description: the region.
    - id: availabilityParameters
      type: com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters
      description: Name availability parameters payload.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.NameAvailability>>
      description: name availability result payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Create a new Service or update an exiting Service.
  syntax:
    content: public ServiceResourceInner createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  nameWithType: ServicesClientImpl.createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Create a new Service or update an exiting Service.
  syntax:
    content: public ServiceResourceInner createOrUpdate(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Create a new Service or update an exiting Service.
  syntax:
    content: public Mono<ServiceResourceInner> createOrUpdateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Create a new Service or update an exiting Service.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.delete(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to delete a Service.
  syntax:
    content: public void delete(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String serviceName, Context context)
  nameWithType: ServicesClientImpl.delete(String resourceGroupName, String serviceName, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete(String resourceGroupName, String serviceName, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to delete a Service.
  syntax:
    content: public void delete(String resourceGroupName, String serviceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.deleteAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to delete a Service.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.deleteWithResponseAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteWithResponseAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to delete a Service.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpoint(java.lang.String,java.lang.String)
  id: disableTestEndpoint(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: disableTestEndpoint(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.disableTestEndpoint(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpoint(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpoint*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Disable test endpoint functionality for a Service.
  syntax:
    content: public void disableTestEndpoint(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointAsync(java.lang.String,java.lang.String)
  id: disableTestEndpointAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: disableTestEndpointAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.disableTestEndpointAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Disable test endpoint functionality for a Service.
  syntax:
    content: public Mono<Void> disableTestEndpointAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: disableTestEndpointWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: disableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)
  nameWithType: ServicesClientImpl.disableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponse*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Disable test endpoint functionality for a Service.
  syntax:
    content: public Response<Void> disableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponseAsync(java.lang.String,java.lang.String)
  id: disableTestEndpointWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: disableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.disableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Disable test endpoint functionality for a Service.
  syntax:
    content: public Mono<Response<Void>> disableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpoint(java.lang.String,java.lang.String)
  id: enableTestEndpoint(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: enableTestEndpoint(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.enableTestEndpoint(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpoint(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpoint*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Enable test endpoint functionality for a Service.
  syntax:
    content: public TestKeys enableTestEndpoint(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: com.azure.resourcemanager.appplatform.models.TestKeys
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointAsync(java.lang.String,java.lang.String)
  id: enableTestEndpointAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: enableTestEndpointAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.enableTestEndpointAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Enable test endpoint functionality for a Service.
  syntax:
    content: public Mono<TestKeys> enableTestEndpointAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.models.TestKeys>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: enableTestEndpointWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: enableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)
  nameWithType: ServicesClientImpl.enableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponse*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Enable test endpoint functionality for a Service.
  syntax:
    content: public Response<TestKeys> enableTestEndpointWithResponse(String resourceGroupName, String serviceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.TestKeys>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponseAsync(java.lang.String,java.lang.String)
  id: enableTestEndpointWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: enableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.enableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Enable test endpoint functionality for a Service.
  syntax:
    content: public Mono<Response<TestKeys>> enableTestEndpointWithResponseAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.TestKeys>>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.getByResourceGroup(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroup(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Get a Service and its properties.
  syntax:
    content: public ServiceResourceInner getByResourceGroup(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: a Service and its properties.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.getByResourceGroupAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Get a Service and its properties.
  syntax:
    content: public Mono<ServiceResourceInner> getByResourceGroupAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: a Service and its properties.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String serviceName, Context context)
  nameWithType: ServicesClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String serviceName, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String serviceName, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Get a Service and its properties.
  syntax:
    content: public Response<ServiceResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String serviceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: a Service and its properties.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Get a Service and its properties.
  syntax:
    content: public Mono<Response<ServiceResourceInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>>
      description: a Service and its properties.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: list()
  nameWithType: ServicesClientImpl.list()
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list()
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Handles requests to list all resources in a subscription.
  syntax:
    content: public PagedIterable<ServiceResourceInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: object that includes an array of Service resources and a possible link for next set.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: list(Context context)
  nameWithType: ServicesClientImpl.list(Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list(Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Handles requests to list all resources in a subscription.
  syntax:
    content: public PagedIterable<ServiceResourceInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: object that includes an array of Service resources and a possible link for next set.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: listAsync()
  nameWithType: ServicesClientImpl.listAsync()
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listAsync()
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Handles requests to list all resources in a subscription.
  syntax:
    content: public PagedFlux<ServiceResourceInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: object that includes an array of Service resources and a possible link for next set.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: ServicesClientImpl.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Handles requests to list all resources in a resource group.
  syntax:
    content: public PagedIterable<ServiceResourceInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: object that includes an array of Service resources and a possible link for next set.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: ServicesClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Handles requests to list all resources in a resource group.
  syntax:
    content: public PagedIterable<ServiceResourceInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: object that includes an array of Service resources and a possible link for next set.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ServicesClientImpl.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Handles requests to list all resources in a resource group.
  syntax:
    content: public PagedFlux<ServiceResourceInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: object that includes an array of Service resources and a possible link for next set.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeys(java.lang.String,java.lang.String)
  id: listTestKeys(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: listTestKeys(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.listTestKeys(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeys(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeys*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: List test keys for a Service.
  syntax:
    content: public TestKeys listTestKeys(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: com.azure.resourcemanager.appplatform.models.TestKeys
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysAsync(java.lang.String,java.lang.String)
  id: listTestKeysAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: listTestKeysAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.listTestKeysAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: List test keys for a Service.
  syntax:
    content: public Mono<TestKeys> listTestKeysAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.models.TestKeys>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listTestKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: listTestKeysWithResponse(String resourceGroupName, String serviceName, Context context)
  nameWithType: ServicesClientImpl.listTestKeysWithResponse(String resourceGroupName, String serviceName, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponse(String resourceGroupName, String serviceName, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponse*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: List test keys for a Service.
  syntax:
    content: public Response<TestKeys> listTestKeysWithResponse(String resourceGroupName, String serviceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.TestKeys>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponseAsync(java.lang.String,java.lang.String)
  id: listTestKeysWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: listTestKeysWithResponseAsync(String resourceGroupName, String serviceName)
  nameWithType: ServicesClientImpl.listTestKeysWithResponseAsync(String resourceGroupName, String serviceName)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponseAsync(String resourceGroupName, String serviceName)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: List test keys for a Service.
  syntax:
    content: public Mono<Response<TestKeys>> listTestKeysWithResponseAsync(String resourceGroupName, String serviceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.TestKeys>>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKey(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  id: regenerateTestKey(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: regenerateTestKey(String resourceGroupName, String serviceName, TestKeyType keyType)
  nameWithType: ServicesClientImpl.regenerateTestKey(String resourceGroupName, String serviceName, TestKeyType keyType)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKey(String resourceGroupName, String serviceName, TestKeyType keyType)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKey*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Regenerate a test key for a Service.
  syntax:
    content: public TestKeys regenerateTestKey(String resourceGroupName, String serviceName, TestKeyType keyType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: keyType
      type: com.azure.resourcemanager.appplatform.models.TestKeyType
      description: Type of the test key.
    return:
      type: com.azure.resourcemanager.appplatform.models.TestKeys
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  id: regenerateTestKeyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: regenerateTestKeyAsync(String resourceGroupName, String serviceName, TestKeyType keyType)
  nameWithType: ServicesClientImpl.regenerateTestKeyAsync(String resourceGroupName, String serviceName, TestKeyType keyType)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyAsync(String resourceGroupName, String serviceName, TestKeyType keyType)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Regenerate a test key for a Service.
  syntax:
    content: public Mono<TestKeys> regenerateTestKeyAsync(String resourceGroupName, String serviceName, TestKeyType keyType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: keyType
      type: com.azure.resourcemanager.appplatform.models.TestKeyType
      description: Type of the test key.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.models.TestKeys>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType,com.azure.core.util.Context)
  id: regenerateTestKeyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: regenerateTestKeyWithResponse(String resourceGroupName, String serviceName, TestKeyType keyType, Context context)
  nameWithType: ServicesClientImpl.regenerateTestKeyWithResponse(String resourceGroupName, String serviceName, TestKeyType keyType, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponse(String resourceGroupName, String serviceName, TestKeyType keyType, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponse*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Regenerate a test key for a Service.
  syntax:
    content: public Response<TestKeys> regenerateTestKeyWithResponse(String resourceGroupName, String serviceName, TestKeyType keyType, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: keyType
      type: com.azure.resourcemanager.appplatform.models.TestKeyType
      description: Type of the test key.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.TestKeys>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  id: regenerateTestKeyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.models.TestKeyType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: regenerateTestKeyWithResponseAsync(String resourceGroupName, String serviceName, TestKeyType keyType)
  nameWithType: ServicesClientImpl.regenerateTestKeyWithResponseAsync(String resourceGroupName, String serviceName, TestKeyType keyType)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponseAsync(String resourceGroupName, String serviceName, TestKeyType keyType)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Regenerate a test key for a Service.
  syntax:
    content: public Mono<Response<TestKeys>> regenerateTestKeyWithResponseAsync(String resourceGroupName, String serviceName, TestKeyType keyType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: keyType
      type: com.azure.resourcemanager.appplatform.models.TestKeyType
      description: Type of the test key.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.TestKeys>>
      description: test keys payload.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.update(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to update an exiting Service.
  syntax:
    content: public ServiceResourceInner update(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  nameWithType: ServicesClientImpl.update(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to update an exiting Service.
  syntax:
    content: public ServiceResourceInner update(String resourceGroupName, String serviceName, ServiceResourceInner resource, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to update an exiting Service.
  syntax:
    content: public Mono<ServiceResourceInner> updateAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
      description: service resource.
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
  parent: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  nameWithType: ServicesClientImpl.updateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
  overload: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appplatform.implementation
  summary: Operation to update an exiting Service.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String serviceName, ServiceResourceInner resource)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serviceName
      type: java.lang.String
      description: The name of the Service resource.
    - id: resource
      type: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
      description: Service resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: service resource.
references:
- uid: com.azure.resourcemanager.appplatform.implementation.AppPlatformManagementClientImpl
  name: AppPlatformManagementClientImpl
  nameWithType: AppPlatformManagementClientImpl
  fullName: com.azure.resourcemanager.appplatform.implementation.AppPlatformManagementClientImpl
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.ServicesClientImpl*
  name: ServicesClientImpl
  nameWithType: ServicesClientImpl.ServicesClientImpl
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.ServicesClientImpl
  package: com.azure.resourcemanager.appplatform.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: ServicesClientImpl.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: ServicesClientImpl.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  name: ServiceResourceInner
  nameWithType: ServiceResourceInner
  fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: ServicesClientImpl.getByResourceGroup
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroup
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: ServicesClientImpl.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.appplatform.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ServicesClientImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: ServicesClientImpl.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: ServicesClientImpl.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginCreateOrUpdate
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ServicesClientImpl.createOrUpdateAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdateAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate*
  name: createOrUpdate
  nameWithType: ServicesClientImpl.createOrUpdate
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.createOrUpdate
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ServicesClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: ServicesClientImpl.beginDeleteAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDeleteAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete*
  name: beginDelete
  nameWithType: ServicesClientImpl.beginDelete
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginDelete
  package: com.azure.resourcemanager.appplatform.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: ServicesClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.deleteAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete*
  name: delete
  nameWithType: ServicesClientImpl.delete
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.delete
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: ServicesClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: ServicesClientImpl.beginUpdateAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdateAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate*
  name: beginUpdate
  nameWithType: ServicesClientImpl.beginUpdate
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.beginUpdate
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateAsync*
  name: updateAsync
  nameWithType: ServicesClientImpl.updateAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.updateAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update*
  name: update
  nameWithType: ServicesClientImpl.update
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.update
  package: com.azure.resourcemanager.appplatform.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.TestKeys>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.models.TestKeys
    name: TestKeys
    fullName: com.azure.resourcemanager.appplatform.models.TestKeys
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponseAsync*
  name: listTestKeysWithResponseAsync
  nameWithType: ServicesClientImpl.listTestKeysWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.models.TestKeys>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.models.TestKeys
    name: TestKeys
    fullName: com.azure.resourcemanager.appplatform.models.TestKeys
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysAsync*
  name: listTestKeysAsync
  nameWithType: ServicesClientImpl.listTestKeysAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.models.TestKeys
  name: TestKeys
  nameWithType: TestKeys
  fullName: com.azure.resourcemanager.appplatform.models.TestKeys
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeys*
  name: listTestKeys
  nameWithType: ServicesClientImpl.listTestKeys
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeys
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.TestKeys>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.models.TestKeys
    name: TestKeys
    fullName: com.azure.resourcemanager.appplatform.models.TestKeys
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponse*
  name: listTestKeysWithResponse
  nameWithType: ServicesClientImpl.listTestKeysWithResponse
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listTestKeysWithResponse
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.models.TestKeyType
  name: TestKeyType
  nameWithType: TestKeyType
  fullName: com.azure.resourcemanager.appplatform.models.TestKeyType
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponseAsync*
  name: regenerateTestKeyWithResponseAsync
  nameWithType: ServicesClientImpl.regenerateTestKeyWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyAsync*
  name: regenerateTestKeyAsync
  nameWithType: ServicesClientImpl.regenerateTestKeyAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKey*
  name: regenerateTestKey
  nameWithType: ServicesClientImpl.regenerateTestKey
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKey
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponse*
  name: regenerateTestKeyWithResponse
  nameWithType: ServicesClientImpl.regenerateTestKeyWithResponse
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.regenerateTestKeyWithResponse
  package: com.azure.resourcemanager.appplatform.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponseAsync*
  name: disableTestEndpointWithResponseAsync
  nameWithType: ServicesClientImpl.disableTestEndpointWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointAsync*
  name: disableTestEndpointAsync
  nameWithType: ServicesClientImpl.disableTestEndpointAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpoint*
  name: disableTestEndpoint
  nameWithType: ServicesClientImpl.disableTestEndpoint
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpoint
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponse*
  name: disableTestEndpointWithResponse
  nameWithType: ServicesClientImpl.disableTestEndpointWithResponse
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.disableTestEndpointWithResponse
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponseAsync*
  name: enableTestEndpointWithResponseAsync
  nameWithType: ServicesClientImpl.enableTestEndpointWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointAsync*
  name: enableTestEndpointAsync
  nameWithType: ServicesClientImpl.enableTestEndpointAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpoint*
  name: enableTestEndpoint
  nameWithType: ServicesClientImpl.enableTestEndpoint
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpoint
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponse*
  name: enableTestEndpointWithResponse
  nameWithType: ServicesClientImpl.enableTestEndpointWithResponse
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.enableTestEndpointWithResponse
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters
  name: NameAvailabilityParameters
  nameWithType: NameAvailabilityParameters
  fullName: com.azure.resourcemanager.appplatform.models.NameAvailabilityParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.NameAvailability>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.models.NameAvailability
    name: NameAvailability
    fullName: com.azure.resourcemanager.appplatform.models.NameAvailability
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponseAsync*
  name: checkNameAvailabilityWithResponseAsync
  nameWithType: ServicesClientImpl.checkNameAvailabilityWithResponseAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponseAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appplatform.models.NameAvailability>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.models.NameAvailability
    name: NameAvailability
    fullName: com.azure.resourcemanager.appplatform.models.NameAvailability
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityAsync*
  name: checkNameAvailabilityAsync
  nameWithType: ServicesClientImpl.checkNameAvailabilityAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.models.NameAvailability
  name: NameAvailability
  nameWithType: NameAvailability
  fullName: com.azure.resourcemanager.appplatform.models.NameAvailability
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailability*
  name: checkNameAvailability
  nameWithType: ServicesClientImpl.checkNameAvailability
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailability
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appplatform.models.NameAvailability>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.models.NameAvailability
    name: NameAvailability
    fullName: com.azure.resourcemanager.appplatform.models.NameAvailability
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponse*
  name: checkNameAvailabilityWithResponse
  nameWithType: ServicesClientImpl.checkNameAvailabilityWithResponse
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.checkNameAvailabilityWithResponse
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listAsync*
  name: listAsync
  nameWithType: ServicesClientImpl.listAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
    name: ServiceResourceInner
    fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list*
  name: list
  nameWithType: ServicesClientImpl.list
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.list
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: ServicesClientImpl.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroupAsync
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: ServicesClientImpl.listByResourceGroup
  fullName: com.azure.resourcemanager.appplatform.implementation.ServicesClientImpl.listByResourceGroup
  package: com.azure.resourcemanager.appplatform.implementation
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  name: InnerSupportsGet<ServiceResourceInner>
  nameWithType: InnerSupportsGet<ServiceResourceInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
- uid: com.azure.resourcemanager.appplatform.fluent.ServicesClient
  name: ServicesClient
  nameWithType: ServicesClient
  fullName: com.azure.resourcemanager.appplatform.fluent.ServicesClient
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
  name: InnerSupportsListing<ServiceResourceInner>
  nameWithType: InnerSupportsListing<ServiceResourceInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
  name: ServiceResourceInner>,ServiceResourceInner
  nameWithType: ServiceResourceInner>,ServiceResourceInner
  fullName: com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner>,com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
