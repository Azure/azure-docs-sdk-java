### YamlMime:JavaType
uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions"
fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>"
name: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>"
nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>"
summary: "The access policy definition stage allowing permissions to be added."
syntax: "public static interface AccessPolicy.DefinitionStages.WithPermissions<ParentT>"
methods:
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowCertificateAllPermissions()"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowCertificateAllPermissions()"
  name: "allowCertificateAllPermissions()"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowCertificateAllPermissions()"
  summary: "Allow all permissions for the AD identity to access certificates."
  modifiers:
  - "abstract"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowCertificateAllPermissions()"
  desc: "Allow all permissions for the AD identity to access certificates."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowCertificatePermissions(com.microsoft.azure.management.keyvault.CertificatePermissions...)"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions(CertificatePermissions[] permissions)"
  name: "allowCertificatePermissions(CertificatePermissions[] permissions)"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions(CertificatePermissions[] permissions)"
  summary: "Allow a list of permissions for the AD identity to access certificates."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.CertificatePermissions?alt=com.microsoft.azure.management.keyvault.CertificatePermissions&text=CertificatePermissions\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowCertificatePermissions(CertificatePermissions[] permissions)"
  desc: "Allow a list of permissions for the AD identity to access certificates."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowCertificatePermissions(java.util.List<com.microsoft.azure.management.keyvault.CertificatePermissions>)"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions(List<CertificatePermissions> permissions)"
  name: "allowCertificatePermissions(List<CertificatePermissions> permissions)"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions(List<CertificatePermissions> permissions)"
  summary: "Allow a list of permissions for the AD identity to access certificates."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.CertificatePermissions?alt=com.microsoft.azure.management.keyvault.CertificatePermissions&text=CertificatePermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowCertificatePermissions(List<CertificatePermissions> permissions)"
  desc: "Allow a list of permissions for the AD identity to access certificates."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowKeyAllPermissions()"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowKeyAllPermissions()"
  name: "allowKeyAllPermissions()"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowKeyAllPermissions()"
  summary: "Allow all permissions for the AD identity to access keys."
  modifiers:
  - "abstract"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowKeyAllPermissions()"
  desc: "Allow all permissions for the AD identity to access keys."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowKeyPermissions(com.microsoft.azure.management.keyvault.KeyPermissions...)"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowKeyPermissions(KeyPermissions[] permissions)"
  name: "allowKeyPermissions(KeyPermissions[] permissions)"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowKeyPermissions(KeyPermissions[] permissions)"
  summary: "Allow a list of permissions for the AD identity to access keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.KeyPermissions?alt=com.microsoft.azure.management.keyvault.KeyPermissions&text=KeyPermissions\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowKeyPermissions(KeyPermissions[] permissions)"
  desc: "Allow a list of permissions for the AD identity to access keys."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowKeyPermissions(java.util.List<com.microsoft.azure.management.keyvault.KeyPermissions>)"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowKeyPermissions(List<KeyPermissions> permissions)"
  name: "allowKeyPermissions(List<KeyPermissions> permissions)"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowKeyPermissions(List<KeyPermissions> permissions)"
  summary: "Allow a list of permissions for the AD identity to access keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.KeyPermissions?alt=com.microsoft.azure.management.keyvault.KeyPermissions&text=KeyPermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowKeyPermissions(List<KeyPermissions> permissions)"
  desc: "Allow a list of permissions for the AD identity to access keys."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowSecretAllPermissions()"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretAllPermissions()"
  name: "allowSecretAllPermissions()"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretAllPermissions()"
  summary: "Allow all permissions for the AD identity to access secrets."
  modifiers:
  - "abstract"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowSecretAllPermissions()"
  desc: "Allow all permissions for the AD identity to access secrets."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowSecretPermissions(com.microsoft.azure.management.keyvault.SecretPermissions...)"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(SecretPermissions[] permissions)"
  name: "allowSecretPermissions(SecretPermissions[] permissions)"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(SecretPermissions[] permissions)"
  summary: "Allow a list of permissions for the AD identity to access secrets."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.SecretPermissions?alt=com.microsoft.azure.management.keyvault.SecretPermissions&text=SecretPermissions\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowSecretPermissions(SecretPermissions[] permissions)"
  desc: "Allow a list of permissions for the AD identity to access secrets."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowSecretPermissions(java.util.List<com.microsoft.azure.management.keyvault.SecretPermissions>)"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(List<SecretPermissions> permissions)"
  name: "allowSecretPermissions(List<SecretPermissions> permissions)"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowSecretPermissions(List<SecretPermissions> permissions)"
  summary: "Allow a list of permissions for the AD identity to access secrets."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.SecretPermissions?alt=com.microsoft.azure.management.keyvault.SecretPermissions&text=SecretPermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowSecretPermissions(List<SecretPermissions> permissions)"
  desc: "Allow a list of permissions for the AD identity to access secrets."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowStorageAllPermissions()"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowStorageAllPermissions()"
  name: "allowStorageAllPermissions()"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowStorageAllPermissions()"
  summary: "Allow all permissions for the Ad identity to access storage."
  modifiers:
  - "abstract"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowStorageAllPermissions()"
  desc: "Allow all permissions for the Ad identity to access storage."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowStoragePermissions(com.microsoft.azure.management.keyvault.StoragePermissions...)"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowStoragePermissions(StoragePermissions[] permissions)"
  name: "allowStoragePermissions(StoragePermissions[] permissions)"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowStoragePermissions(StoragePermissions[] permissions)"
  summary: "Allow a list of permissions for the AD identity to access storage."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.StoragePermissions?alt=com.microsoft.azure.management.keyvault.StoragePermissions&text=StoragePermissions\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowStoragePermissions(StoragePermissions[] permissions)"
  desc: "Allow a list of permissions for the AD identity to access storage."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions.allowStoragePermissions(java.util.List<com.microsoft.azure.management.keyvault.StoragePermissions>)"
  fullName: "com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowStoragePermissions(List<StoragePermissions> permissions)"
  name: "allowStoragePermissions(List<StoragePermissions> permissions)"
  nameWithType: "AccessPolicy.DefinitionStages.WithPermissions<ParentT>.allowStoragePermissions(List<StoragePermissions> permissions)"
  summary: "Allow a list of permissions for the AD identity to access storage."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.StoragePermissions?alt=com.microsoft.azure.management.keyvault.StoragePermissions&text=StoragePermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract AccessPolicy.DefinitionStages.WithAttach<ParentT> allowStoragePermissions(List<StoragePermissions> permissions)"
  desc: "Allow a list of permissions for the AD identity to access storage."
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach?alt=com.microsoft.azure.management.keyvault.AccessPolicy.DefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the stage of the parent definition to return to after attaching this definition"
  name: "ParentT"
desc: "The access policy definition stage allowing permissions to be added."
metadata: {}
package: "com.microsoft.azure.management.keyvault"
artifact: com.microsoft.azure:azure-mgmt-keyvault:1.41.4
