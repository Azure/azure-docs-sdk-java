### YamlMime:JavaMember
nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the InputStream object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;InputStream, <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders&text=ComputeNodeGetRemoteDesktopHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with a cloud service configuration. For pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  parameters:
  - description: <p>The ID of the pool that contains the compute node. </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    name: nodeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: computeNodeGetRemoteDesktopOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions&text=ComputeNodeGetRemoteDesktopOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the InputStream object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;InputStream, <xref href="com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders&text=ComputeNodeGetRemoteDesktopHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with a cloud service configuration. For pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
package: com.microsoft.azure.batch.protocol
metadata: {}
