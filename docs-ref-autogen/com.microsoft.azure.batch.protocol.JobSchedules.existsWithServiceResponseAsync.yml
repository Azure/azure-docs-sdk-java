### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync*"
fullName: "com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync"
name: "existsWithServiceResponseAsync"
nameWithType: "JobSchedules.existsWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(String jobScheduleId)"
  name: "existsWithServiceResponseAsync(String jobScheduleId)"
  nameWithType: "JobSchedules.existsWithServiceResponseAsync(String jobScheduleId)"
  summary: "Checks the specified Job Schedule exists."
  parameters:
  - description: "The ID of the Job Schedule which you want to check."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Boolean,JobScheduleExistsHeaders>> existsWithServiceResponseAsync(String jobScheduleId)"
  returns:
    description: "the observable to the boolean object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders&text=JobScheduleExistsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.JobSchedules.existsWithServiceResponseAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)"
  name: "existsWithServiceResponseAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)"
  nameWithType: "JobSchedules.existsWithServiceResponseAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)"
  summary: "Checks the specified Job Schedule exists."
  parameters:
  - description: "The ID of the Job Schedule which you want to check."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobScheduleExistsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExistsOptions&text=JobScheduleExistsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Boolean,JobScheduleExistsHeaders>> existsWithServiceResponseAsync(String jobScheduleId, JobScheduleExistsOptions jobScheduleExistsOptions)"
  returns:
    description: "the observable to the boolean object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders?alt=com.microsoft.azure.batch.protocol.models.JobScheduleExistsHeaders&text=JobScheduleExistsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:8.0.0
