### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.updateCertificatePropertiesWithResponse*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.updateCertificatePropertiesWithResponse"
name: "updateCertificatePropertiesWithResponse"
nameWithType: "CertificateAsyncClient.updateCertificatePropertiesWithResponse"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.updateCertificatePropertiesWithResponse(com.azure.security.keyvault.certificates.models.CertificateProperties)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.updateCertificatePropertiesWithResponse(CertificateProperties properties)"
  name: "updateCertificatePropertiesWithResponse(CertificateProperties properties)"
  nameWithType: "CertificateAsyncClient.updateCertificatePropertiesWithResponse(CertificateProperties properties)"
  summary: "Updates the specified attributes associated with the specified certificate. The update operation changes specified attributes of an existing stored certificate and attributes that are not specified in the request are left unchanged. This operation requires the certificates/update permission.\n\n**Code Samples**\n\nGets latest version of the certificate, changes its enabled status and then updates it in the Azure Key Vault. Prints out the returned certificate details when a response has been received.\n\n```java\ncertificateAsyncClient.getCertificate(\"certificateName\")\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(certificateResponseValue -> {\n         KeyVaultCertificate certificate = certificateResponseValue;\n         //Update the enabled status of the certificate.\n         certificate.getProperties().setEnabled(false);\n         certificateAsyncClient.updateCertificatePropertiesWithResponse(certificate.getProperties())\n             .subscribe(certificateResponse ->\n                 System.out.printf(\"Certificate's enabled status %s %n\",\n                     certificateResponse.getValue().getProperties().isEnabled().toString()));\n     });\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateProperties\"></xref> object with updated properties."
    name: "properties"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateProperties?alt=com.azure.security.keyvault.certificates.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultCertificate>> updateCertificatePropertiesWithResponse(CertificateProperties properties)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"updated certificate\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificate&text=KeyVaultCertificate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.1.4
