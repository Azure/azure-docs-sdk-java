### YamlMime:JavaMember
uid: "com.azure.cosmos.CosmosAsyncContainer.processBulkOperations*"
fullName: "com.azure.cosmos.CosmosAsyncContainer.<TContext>processBulkOperations"
name: "<TContext>processBulkOperations"
nameWithType: "CosmosAsyncContainer.<TContext>processBulkOperations"
members:
- uid: "com.azure.cosmos.CosmosAsyncContainer.<TContext>processBulkOperations(reactor.core.publisher.Flux<com.azure.cosmos.CosmosItemOperation>)"
  fullName: "com.azure.cosmos.CosmosAsyncContainer.<TContext>processBulkOperations(Flux<CosmosItemOperation> operations)"
  name: "<TContext>processBulkOperations(Flux<CosmosItemOperation> operations)"
  nameWithType: "CosmosAsyncContainer.<TContext>processBulkOperations(Flux<CosmosItemOperation> operations)"
  summary: "Executes flux of operations in Bulk."
  parameters:
  - description: "Flux of operation which will be executed by this container."
    name: "operations"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.CosmosItemOperation?alt=com.azure.cosmos.CosmosItemOperation&text=CosmosItemOperation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Flux<CosmosBulkOperationResponse<TContext>> <TContext>processBulkOperations(Flux<CosmosItemOperation> operations)"
  returns:
    description: "A Flux of <xref uid=\"com.azure.cosmos.CosmosBulkOperationResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse\"></xref> which contains operation and it's response or exception.\n <p>\n     To create a operation which can be executed here, use <xref uid=\"com.azure.cosmos.BulkOperations\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkOperations\"></xref>. For eg.\n     for a upsert operation use <xref uid=\"com.azure.cosmos.BulkOperations.getUpsertItemOperation*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkOperations#getUpsertItemOperation(Object, PartitionKey)\"></xref>\n </p>\n <p>\n     We can get the corresponding operation using <xref uid=\"com.azure.cosmos.CosmosBulkOperationResponse.getOperation()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getOperation()\"></xref> and\n     it's response using <xref uid=\"com.azure.cosmos.CosmosBulkOperationResponse.getResponse()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getResponse()\"></xref>. If the operation was executed\n     successfully, the value returned by <xref uid=\"com.azure.cosmos.CosmosBulkItemResponse.isSuccessStatusCode()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkItemResponse#isSuccessStatusCode()\"></xref> will be true. To get\n     actual status use <xref uid=\"com.azure.cosmos.CosmosBulkItemResponse.getStatusCode()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkItemResponse#getStatusCode()\"></xref>.\n </p>\n To check if the operation had any exception, use <xref uid=\"com.azure.cosmos.CosmosBulkOperationResponse.getException()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getException()\"></xref> to\n get the exception."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.CosmosBulkOperationResponse?alt=com.azure.cosmos.CosmosBulkOperationResponse&text=CosmosBulkOperationResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TContext?alt=TContext&text=TContext\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.cosmos.CosmosAsyncContainer.<TContext>processBulkOperations(reactor.core.publisher.Flux<com.azure.cosmos.CosmosItemOperation>,com.azure.cosmos.BulkProcessingOptions<TContext>)"
  fullName: "com.azure.cosmos.CosmosAsyncContainer.<TContext>processBulkOperations(Flux<CosmosItemOperation> operations, BulkProcessingOptions<TContext> bulkOptions)"
  name: "<TContext>processBulkOperations(Flux<CosmosItemOperation> operations, BulkProcessingOptions<TContext> bulkOptions)"
  nameWithType: "CosmosAsyncContainer.<TContext>processBulkOperations(Flux<CosmosItemOperation> operations, BulkProcessingOptions<TContext> bulkOptions)"
  summary: "Executes flux of operations in Bulk."
  parameters:
  - description: "Flux of operation which will be executed by this container."
    name: "operations"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.CosmosItemOperation?alt=com.azure.cosmos.CosmosItemOperation&text=CosmosItemOperation\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Options that apply for this Bulk request which specifies options regarding execution like\n                    concurrency, batching size, interval and context."
    name: "bulkOptions"
    type: "<xref href=\"com.azure.cosmos.BulkProcessingOptions?alt=com.azure.cosmos.BulkProcessingOptions&text=BulkProcessingOptions\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TContext?alt=TContext&text=TContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Flux<CosmosBulkOperationResponse<TContext>> <TContext>processBulkOperations(Flux<CosmosItemOperation> operations, BulkProcessingOptions<TContext> bulkOptions)"
  returns:
    description: "A Flux of <xref uid=\"com.azure.cosmos.CosmosBulkOperationResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse\"></xref> which contains operation and it's response or exception.\n <p>\n     To create a operation which can be executed here, use <xref uid=\"com.azure.cosmos.BulkOperations\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkOperations\"></xref>. For eg.\n     for a upsert operation use <xref uid=\"com.azure.cosmos.BulkOperations.getUpsertItemOperation*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkOperations#getUpsertItemOperation(Object, PartitionKey)\"></xref>\n </p>\n <p>\n     We can get the corresponding operation using <xref uid=\"com.azure.cosmos.CosmosBulkOperationResponse.getOperation()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getOperation()\"></xref> and\n     it's response using <xref uid=\"com.azure.cosmos.CosmosBulkOperationResponse.getResponse()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getResponse()\"></xref>. If the operation was executed\n     successfully, the value returned by <xref uid=\"com.azure.cosmos.CosmosBulkItemResponse.isSuccessStatusCode()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkItemResponse#isSuccessStatusCode()\"></xref> will be true. To get\n     actual status use <xref uid=\"com.azure.cosmos.CosmosBulkItemResponse.getStatusCode()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkItemResponse#getStatusCode()\"></xref>.\n </p>\n To check if the operation had any exception, use <xref uid=\"com.azure.cosmos.CosmosBulkOperationResponse.getException()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getException()\"></xref> to\n get the exception."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.CosmosBulkOperationResponse?alt=com.azure.cosmos.CosmosBulkOperationResponse&text=CosmosBulkOperationResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TContext?alt=TContext&text=TContext\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.11.0
