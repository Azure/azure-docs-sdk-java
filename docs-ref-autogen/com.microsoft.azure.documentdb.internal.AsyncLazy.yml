### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy"
  id: "AsyncLazy"
  parent: "com.microsoft.azure.documentdb.internal"
  children:
  - "com.microsoft.azure.documentdb.internal.AsyncLazy.AsyncLazy(java.util.concurrent.Callable<T>,java.util.concurrent.ExecutorService)"
  - "com.microsoft.azure.documentdb.internal.AsyncLazy.getValue()"
  - "com.microsoft.azure.documentdb.internal.AsyncLazy.isCancelled()"
  - "com.microsoft.azure.documentdb.internal.AsyncLazy.isDone()"
  langs:
  - "java"
  name: "AsyncLazy<T>"
  nameWithType: "AsyncLazy<T>"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>"
  type: "Class"
  package: "com.microsoft.azure.documentdb.internal"
  summary: "Used internally in the AsyncCache for async operations in the Azure Cosmos DB database service Java SDK."
  syntax:
    content: "public final class AsyncLazy<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy.AsyncLazy(java.util.concurrent.Callable<T>,java.util.concurrent.ExecutorService)"
  id: "AsyncLazy(java.util.concurrent.Callable<T>,java.util.concurrent.ExecutorService)"
  parent: "com.microsoft.azure.documentdb.internal.AsyncLazy"
  langs:
  - "java"
  name: "AsyncLazy(Callable<T> callable, ExecutorService executorService)"
  nameWithType: "AsyncLazy<T>.AsyncLazy(Callable<T> callable, ExecutorService executorService)"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>.AsyncLazy(Callable<T> callable, ExecutorService executorService)"
  overload: "com.microsoft.azure.documentdb.internal.AsyncLazy.AsyncLazy*"
  type: "Constructor"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public AsyncLazy(Callable<T> callable, ExecutorService executorService)"
    parameters:
    - id: "callable"
      type: "java.util.concurrent.Callable<T>"
    - id: "executorService"
      type: "java.util.concurrent.ExecutorService"
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy.getValue()"
  id: "getValue()"
  parent: "com.microsoft.azure.documentdb.internal.AsyncLazy"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "AsyncLazy<T>.getValue()"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>.getValue()"
  overload: "com.microsoft.azure.documentdb.internal.AsyncLazy.getValue*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public synchronized Future<T> getValue()"
    return:
      type: "java.util.concurrent.Future<T>"
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy.isCancelled()"
  id: "isCancelled()"
  parent: "com.microsoft.azure.documentdb.internal.AsyncLazy"
  langs:
  - "java"
  name: "isCancelled()"
  nameWithType: "AsyncLazy<T>.isCancelled()"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>.isCancelled()"
  overload: "com.microsoft.azure.documentdb.internal.AsyncLazy.isCancelled*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public boolean isCancelled()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy.isDone()"
  id: "isDone()"
  parent: "com.microsoft.azure.documentdb.internal.AsyncLazy"
  langs:
  - "java"
  name: "isDone()"
  nameWithType: "AsyncLazy<T>.isDone()"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>.isDone()"
  overload: "com.microsoft.azure.documentdb.internal.AsyncLazy.isDone*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public boolean isDone()"
    return:
      type: "boolean"
references:
- uid: "java.util.concurrent.Callable<T>"
  spec.java:
  - uid: "java.util.concurrent.Callable"
    name: "Callable"
    fullName: "java.util.concurrent.Callable"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.util.concurrent.ExecutorService"
  spec.java:
  - uid: "java.util.concurrent.ExecutorService"
    name: "ExecutorService"
    fullName: "java.util.concurrent.ExecutorService"
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy.AsyncLazy*"
  name: "AsyncLazy"
  nameWithType: "AsyncLazy<T>.AsyncLazy"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>.AsyncLazy"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "java.util.concurrent.Future<T>"
  spec.java:
  - uid: "java.util.concurrent.Future"
    name: "Future"
    fullName: "java.util.concurrent.Future"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy.getValue*"
  name: "getValue"
  nameWithType: "AsyncLazy<T>.getValue"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>.getValue"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy.isDone*"
  name: "isDone"
  nameWithType: "AsyncLazy<T>.isDone"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>.isDone"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.internal.AsyncLazy.isCancelled*"
  name: "isCancelled"
  nameWithType: "AsyncLazy<T>.isCancelled"
  fullName: "com.microsoft.azure.documentdb.internal.AsyncLazy<T>.isCancelled"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.concurrent.Callable"
  name: "Callable"
  nameWithType: "Callable"
  fullName: "java.util.concurrent.Callable"
- uid: "java.util.concurrent.Future"
  name: "Future"
  nameWithType: "Future"
  fullName: "java.util.concurrent.Future"
