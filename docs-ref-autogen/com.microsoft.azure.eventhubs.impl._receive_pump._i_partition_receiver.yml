### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver
  id: _i_partition_receiver
  parent: com.microsoft.azure.eventhubs.impl
  children:
  - com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.getPartitionId()
  - com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.receive(final int)
  href: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.yml
  langs:
  - java
  name: ReceivePump.IPartitionReceiver
  nameWithType: ReceivePump.IPartitionReceiver
  fullName: com.microsoft.azure.eventhubs.impl.ReceivePump.IPartitionReceiver
  type: Interface
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/ReceivePump.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/ReceivePump.java
    startLine: 87
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public interface IPartitionReceiver
- uid: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.getPartitionId()
  id: getPartitionId()
  parent: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver
  href: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.yml
  langs:
  - java
  name: getPartitionId()
  nameWithType: ReceivePump.IPartitionReceiver.getPartitionId()
  fullName: String com.microsoft.azure.eventhubs.impl.ReceivePump.IPartitionReceiver.getPartitionId()
  overload: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.getPartitionId*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/ReceivePump.java
    startLine: 88
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public String getPartitionId()
    return:
      type: "26831127"
- uid: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.receive(final int)
  id: receive(final int)
  parent: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver
  href: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.yml
  langs:
  - java
  name: receive(final int maxBatchSize)
  nameWithType: ReceivePump.IPartitionReceiver.receive(final int maxBatchSize)
  fullName: Iterable<EventData> com.microsoft.azure.eventhubs.impl.ReceivePump.IPartitionReceiver.receive(final int maxBatchSize)
  overload: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.receive*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/ReceivePump.java
    startLine: 90
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public Iterable<EventData> receive(final int maxBatchSize)
    parameters:
    - id: maxBatchSize
      type: cd225469
    return:
      type: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.getPartitionId*
  name: getPartitionId
  nameWithType: ReceivePump.IPartitionReceiver.getPartitionId
  fullName: String com.microsoft.azure.eventhubs.impl.ReceivePump.IPartitionReceiver.getPartitionId
  package: com.microsoft.azure.eventhubs.impl
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
  spec.java:
  - name: Iterable<
    fullName: Iterable<
  - uid: com.microsoft.azure.eventhubs._event_data
    name: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    href: com.microsoft.azure.eventhubs._event_data.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventhubs.impl._receive_pump._i_partition_receiver.receive*
  name: receive
  nameWithType: ReceivePump.IPartitionReceiver.receive
  fullName: Iterable<EventData> com.microsoft.azure.eventhubs.impl.ReceivePump.IPartitionReceiver.receive
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs._event_data
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Interface
  summary: >-
    <p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>

    <p>Serializing a received <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>

    <p>Here's how AMQP message sections map to <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Here's the reference used for AMQP 1.0 specification: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>

    i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section

    ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section

    iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections

    </pre> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
  syntax:
    content: public interface EventData
- uid: com.microsoft.azure.eventhubs._event_hub_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_exception.yml
  name: EventHubException
  nameWithType: EventHubException
  fullName: com.microsoft.azure.eventhubs.EventHubException
  type: Class
  summary: <p>This is the base exception that service bus will produce for all error cases. </p>
  syntax:
    content: public class EventHubException
