### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.MediaService"
fullName: "com.azure.resourcemanager.mediaservices.models.MediaService"
name: "MediaService"
nameWithType: "MediaService"
summary: "An immutable client-side representation of Media<wbr>Service."
syntax: "public interface MediaService"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.encryption()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.encryption()"
  name: "encryption()"
  nameWithType: "MediaService.encryption()"
  summary: "Gets the encryption property: The account encryption properties."
  modifiers:
  - "abstract"
  syntax: "public abstract AccountEncryption encryption()"
  desc: "Gets the encryption property: The account encryption properties."
  returns:
    description: "the encryption value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.AccountEncryption?alt=com.azure.resourcemanager.mediaservices.models.AccountEncryption&text=AccountEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.id()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.id()"
  name: "id()"
  nameWithType: "MediaService.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.identity()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.identity()"
  name: "identity()"
  nameWithType: "MediaService.identity()"
  summary: "Gets the identity property: The Managed Identity for the Media Services account."
  modifiers:
  - "abstract"
  syntax: "public abstract MediaServiceIdentity identity()"
  desc: "Gets the identity property: The Managed Identity for the Media Services account."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaServiceIdentity?alt=com.azure.resourcemanager.mediaservices.models.MediaServiceIdentity&text=MediaServiceIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.innerModel()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.innerModel()"
  name: "innerModel()"
  nameWithType: "MediaService.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>mediaservices.<wbr>fluent.<wbr>models.<wbr>Media<wbr>Service<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract MediaServiceInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceInner&text=MediaServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.keyDelivery()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.keyDelivery()"
  name: "keyDelivery()"
  nameWithType: "MediaService.keyDelivery()"
  summary: "Gets the key<wbr>Delivery property: The Key Delivery properties for Media Services account."
  modifiers:
  - "abstract"
  syntax: "public abstract KeyDelivery keyDelivery()"
  desc: "Gets the keyDelivery property: The Key Delivery properties for Media Services account."
  returns:
    description: "the keyDelivery value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.KeyDelivery?alt=com.azure.resourcemanager.mediaservices.models.KeyDelivery&text=KeyDelivery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.listEdgePolicies(com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput)"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.listEdgePolicies(ListEdgePoliciesInput parameters)"
  name: "listEdgePolicies(ListEdgePoliciesInput parameters)"
  nameWithType: "MediaService.listEdgePolicies(ListEdgePoliciesInput parameters)"
  summary: "List all the media edge policies associated with the Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput?alt=com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput&text=ListEdgePoliciesInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EdgePolicies listEdgePolicies(ListEdgePoliciesInput parameters)"
  desc: "List all the media edge policies associated with the Media Services account."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EdgePolicies?alt=com.azure.resourcemanager.mediaservices.models.EdgePolicies&text=EdgePolicies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.listEdgePoliciesWithResponse(com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.listEdgePoliciesWithResponse(ListEdgePoliciesInput parameters, Context context)"
  name: "listEdgePoliciesWithResponse(ListEdgePoliciesInput parameters, Context context)"
  nameWithType: "MediaService.listEdgePoliciesWithResponse(ListEdgePoliciesInput parameters, Context context)"
  summary: "List all the media edge policies associated with the Media Services account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput?alt=com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput&text=ListEdgePoliciesInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<EdgePolicies> listEdgePoliciesWithResponse(ListEdgePoliciesInput parameters, Context context)"
  desc: "List all the media edge policies associated with the Media Services account."
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.EdgePolicies?alt=com.azure.resourcemanager.mediaservices.models.EdgePolicies&text=EdgePolicies\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.location()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.location()"
  name: "location()"
  nameWithType: "MediaService.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.mediaServiceId()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.mediaServiceId()"
  name: "mediaServiceId()"
  nameWithType: "MediaService.mediaServiceId()"
  summary: "Gets the media<wbr>Service<wbr>Id property: The Media Services account ID."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID mediaServiceId()"
  desc: "Gets the mediaServiceId property: The Media Services account ID."
  returns:
    description: "the mediaServiceId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.name()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.name()"
  name: "name()"
  nameWithType: "MediaService.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "MediaService.privateEndpointConnections()"
  summary: "Gets the private<wbr>Endpoint<wbr>Connections property: The Private Endpoint Connections created for the Media Service account."
  modifiers:
  - "abstract"
  syntax: "public abstract List<PrivateEndpointConnection> privateEndpointConnections()"
  desc: "Gets the privateEndpointConnections property: The Private Endpoint Connections created for the Media Service account."
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.PrivateEndpointConnection?alt=com.azure.resourcemanager.mediaservices.models.PrivateEndpointConnection&text=PrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.provisioningState()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.provisioningState()"
  name: "provisioningState()"
  nameWithType: "MediaService.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Provisioning state of the Media Services account."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: Provisioning state of the Media Services account."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ProvisioningState?alt=com.azure.resourcemanager.mediaservices.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "MediaService.publicNetworkAccess()"
  summary: "Gets the public<wbr>Network<wbr>Access property: Whether or not public network access is allowed for resources under the Media Services account."
  modifiers:
  - "abstract"
  syntax: "public abstract PublicNetworkAccess publicNetworkAccess()"
  desc: "Gets the publicNetworkAccess property: Whether or not public network access is allowed for resources under the Media Services account."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PublicNetworkAccess?alt=com.azure.resourcemanager.mediaservices.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.refresh()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.refresh()"
  name: "refresh()"
  nameWithType: "MediaService.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract MediaService refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "MediaService.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaService refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.region()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.region()"
  name: "region()"
  nameWithType: "MediaService.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.regionName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.regionName()"
  name: "regionName()"
  nameWithType: "MediaService.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.resourceGroupName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "MediaService.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.storageAccounts()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.storageAccounts()"
  name: "storageAccounts()"
  nameWithType: "MediaService.storageAccounts()"
  summary: "Gets the storage<wbr>Accounts property: The storage accounts for this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract List<StorageAccount> storageAccounts()"
  desc: "Gets the storageAccounts property: The storage accounts for this resource."
  returns:
    description: "the storageAccounts value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAccount?alt=com.azure.resourcemanager.mediaservices.models.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.storageAuthentication()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.storageAuthentication()"
  name: "storageAuthentication()"
  nameWithType: "MediaService.storageAuthentication()"
  summary: "Gets the storage<wbr>Authentication property: The storage<wbr>Authentication property."
  modifiers:
  - "abstract"
  syntax: "public abstract StorageAuthentication storageAuthentication()"
  desc: "Gets the storageAuthentication property: The storageAuthentication property."
  returns:
    description: "the storageAuthentication value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAuthentication?alt=com.azure.resourcemanager.mediaservices.models.StorageAuthentication&text=StorageAuthentication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.syncStorageKeys(com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput)"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.syncStorageKeys(SyncStorageKeysInput parameters)"
  name: "syncStorageKeys(SyncStorageKeysInput parameters)"
  nameWithType: "MediaService.syncStorageKeys(SyncStorageKeysInput parameters)"
  summary: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput?alt=com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput&text=SyncStorageKeysInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void syncStorageKeys(SyncStorageKeysInput parameters)"
  desc: "Synchronizes storage account keys for a storage account associated with the Media Service account."
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.syncStorageKeysWithResponse(com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.syncStorageKeysWithResponse(SyncStorageKeysInput parameters, Context context)"
  name: "syncStorageKeysWithResponse(SyncStorageKeysInput parameters, Context context)"
  nameWithType: "MediaService.syncStorageKeysWithResponse(SyncStorageKeysInput parameters, Context context)"
  summary: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput?alt=com.azure.resourcemanager.mediaservices.models.SyncStorageKeysInput&text=SyncStorageKeysInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> syncStorageKeysWithResponse(SyncStorageKeysInput parameters, Context context)"
  desc: "Synchronizes storage account keys for a storage account associated with the Media Service account."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.systemData()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.systemData()"
  name: "systemData()"
  nameWithType: "MediaService.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.tags()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.tags()"
  name: "tags()"
  nameWithType: "MediaService.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.type()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.type()"
  name: "type()"
  nameWithType: "MediaService.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.update()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.update()"
  name: "update()"
  nameWithType: "MediaService.update()"
  summary: "Begins update for the Media<wbr>Service resource."
  modifiers:
  - "abstract"
  syntax: "public abstract MediaService.Update update()"
  desc: "Begins update for the MediaService resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.Update?alt=com.azure.resourcemanager.mediaservices.models.MediaService.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of MediaService."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
