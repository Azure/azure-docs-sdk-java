### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.models.RoleAssignment.DefinitionStages.WithScope.withResourceGroupScope*"
fullName: "com.azure.resourcemanager.authorization.models.RoleAssignment.DefinitionStages.WithScope.withResourceGroupScope"
name: "withResourceGroupScope"
nameWithType: "RoleAssignment.DefinitionStages.WithScope.withResourceGroupScope"
members:
- uid: "com.azure.resourcemanager.authorization.models.RoleAssignment.DefinitionStages.WithScope.withResourceGroupScope(com.azure.resourcemanager.resources.models.ResourceGroup)"
  fullName: "com.azure.resourcemanager.authorization.models.RoleAssignment.DefinitionStages.WithScope.withResourceGroupScope(ResourceGroup resourceGroup)"
  name: "withResourceGroupScope(ResourceGroup resourceGroup)"
  nameWithType: "RoleAssignment.DefinitionStages.WithScope.withResourceGroupScope(ResourceGroup resourceGroup)"
  summary: "Specifies the scope of the role assignment to be a resource group."
  parameters:
  - description: "the resource group the assignee is assigned to access"
    name: "resourceGroup"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ResourceGroup?alt=com.azure.resourcemanager.resources.models.ResourceGroup&text=ResourceGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RoleAssignment.DefinitionStages.WithCreate withResourceGroupScope(ResourceGroup resourceGroup)"
  returns:
    description: "the next stage in role assignment definition"
    type: "<xref href=\"com.azure.resourcemanager.authorization.models.RoleAssignment.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.authorization.models.RoleAssignment.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
