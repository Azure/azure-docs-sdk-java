### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  id: ComputerVisionImpl
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  children:
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(java.lang.String,byte[],java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[],java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[],java.lang.Integer,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjects(java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStream(byte[])
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync(byte[])
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync(byte[],com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[])
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int,int,byte[],java.lang.Boolean)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int,int,java.lang.String,java.lang.Boolean)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterest(java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStream(byte[])
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync(byte[])
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync(byte[],com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamWithServiceResponseAsync(byte[])
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResult(java.util.UUID)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync(java.util.UUID)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync(java.util.UUID,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultWithServiceResponseAsync(java.util.UUID)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[],java.lang.String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(java.lang.String,java.lang.String)
  langs:
  - java
  name: ComputerVisionImpl
  nameWithType: ComputerVisionImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  type: Class
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: An instance of this class provides access to all the operations defined in ComputerVision.
  syntax:
    content: public class ComputerVisionImpl implements ComputerVision
  inheritance:
  - java.lang.Object
  implements:
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl)
  id: ComputerVisionImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: ComputerVisionImpl(Retrofit retrofit, ComputerVisionClientImpl client)
  nameWithType: ComputerVisionImpl.ComputerVisionImpl(Retrofit retrofit, ComputerVisionClientImpl client)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl(Retrofit retrofit, ComputerVisionClientImpl client)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl*
  type: Constructor
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Initializes an instance of ComputerVisionImpl.
  syntax:
    content: public ComputerVisionImpl(Retrofit retrofit, ComputerVisionClientImpl client)
    parameters:
    - id: retrofit
      type: retrofit2.Retrofit
      description: the Retrofit instance built from a Retrofit Builder.
    - id: client
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage()
  id: analyzeImage()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImage()
  nameWithType: ComputerVisionImpl.analyzeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionAnalyzeImageParameters analyzeImage()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  id: analyzeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ImageAnalysis analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      description: the ImageAnalysis object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  id: analyzeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
      description: the observable to the ImageAnalysis object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>)
  id: analyzeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter, ServiceCallback<ImageAnalysis> serviceCallback)
  nameWithType: ComputerVisionImpl.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter, ServiceCallback<ImageAnalysis> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter, ServiceCallback<ImageAnalysis> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ServiceFuture<ImageAnalysis> analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter, ServiceCallback<ImageAnalysis> serviceCallback)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain()
  id: analyzeImageByDomain()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomain()
  nameWithType: ComputerVisionImpl.analyzeImageByDomain()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainParameters analyzeImageByDomain()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomain(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public DomainModelResults analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
      description: the DomainModelResults object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomainAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
      description: the observable to the DomainModelResults object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>)
  id: analyzeImageByDomainAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public ServiceFuture<DomainModelResults> analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream()
  id: analyzeImageByDomainInStream()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainInStream()
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainInStreamParameters analyzeImageByDomainInStream()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStream(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public DomainModelResults analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: image
      type: byte[]
      description: An image stream.
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
      description: the DomainModelResults object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: image
      type: byte[]
      description: An image stream.
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
      description: the observable to the DomainModelResults object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>)
  id: analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public ServiceFuture<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: image
      type: byte[]
      description: An image stream.
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStreamWithServiceResponseAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public Observable<ServiceResponse<DomainModelResults>> analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: image
      type: byte[]
      description: An image stream.
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>>
      description: the observable to the DomainModelResults object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(java.lang.String,byte[],java.lang.String)
  id: analyzeImageByDomainInStreamWithServiceResponseAsync(java.lang.String,byte[],java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, String language)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public Observable<ServiceResponse<DomainModelResults>> analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, String language)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: image
      type: byte[]
      description: An image stream.
    - id: language
      type: java.lang.String
      description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>>
      description: the observable to the DomainModelResults object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomainWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainWithServiceResponseAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public Observable<ServiceResponse<DomainModelResults>> analyzeImageByDomainWithServiceResponseAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>>
      description: the observable to the DomainModelResults object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: analyzeImageByDomainWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageByDomainWithServiceResponseAsync(String model, String url, String language)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String model, String url, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String model, String url, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public Observable<ServiceResponse<DomainModelResults>> analyzeImageByDomainWithServiceResponseAsync(String model, String url, String language)
    parameters:
    - id: model
      type: java.lang.String
      description: The domain-specific content to recognize.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: language
      type: java.lang.String
      description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>>
      description: the observable to the DomainModelResults object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream()
  id: analyzeImageInStream()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageInStream()
  nameWithType: ComputerVisionImpl.analyzeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionAnalyzeImageInStreamParameters analyzeImageInStream()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ImageAnalysis analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      description: the ImageAnalysis object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
      description: the observable to the ImageAnalysis object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>)
  id: analyzeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter, ServiceCallback<ImageAnalysis> serviceCallback)
  nameWithType: ComputerVisionImpl.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter, ServiceCallback<ImageAnalysis> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter, ServiceCallback<ImageAnalysis> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ServiceFuture<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter, ServiceCallback<ImageAnalysis> serviceCallback)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageInStreamWithServiceResponseAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<ImageAnalysis>> analyzeImageInStreamWithServiceResponseAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>>
      description: the observable to the ImageAnalysis object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[],java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  id: analyzeImageInStreamWithServiceResponseAsync(byte[],java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageInStreamWithServiceResponseAsync(byte[] image, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude)
  nameWithType: ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[] image, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[] image, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<ImageAnalysis>> analyzeImageInStreamWithServiceResponseAsync(byte[] image, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: visualFeatures
      type: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>
      description: 'A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Categories - categorizes image content according to a taxonomy defined in documentation. Tags - tags the image with a detailed list of words related to the image content. Description - describes the image content with a complete English sentence. Faces - detects if faces are present. If present, generate coordinates, gender and age. ImageType - detects if image is clipart or a line drawing. Color - determines the accent color, dominant color, and whether an image is black&amp;white. Adult - detects if the image is pornographic in nature (depicts nudity or a sex act), or is gory (depicts extreme violence or blood). Sexually suggestive content (aka racy content) is also detected. Objects - detects various objects within an image, including the approximate location. The Objects argument is only available in English. Brands - detects various brands within an image, including the approximate location. The Brands argument is only available in English.'
    - id: details
      type: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>
      description: 'A string indicating which domain-specific details to return. Multiple values should be comma-separated. Valid visual feature types include: Celebrities - identifies celebrities if detected in the image, Landmarks - identifies notable landmarks in the image.'
    - id: language
      type: java.lang.String
      description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    - id: descriptionExclude
      type: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>
      description: Turn off specified domain models when generating the description.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>>
      description: the observable to the ImageAnalysis object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  id: analyzeImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<ImageAnalysis>> analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>>
      description: the observable to the ImageAnalysis object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  id: analyzeImageWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude)
  nameWithType: ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<ImageAnalysis>> analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language, List<DescriptionExclude> descriptionExclude)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: visualFeatures
      type: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>
      description: 'A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Categories - categorizes image content according to a taxonomy defined in documentation. Tags - tags the image with a detailed list of words related to the image content. Description - describes the image content with a complete English sentence. Faces - detects if faces are present. If present, generate coordinates, gender and age. ImageType - detects if image is clipart or a line drawing. Color - determines the accent color, dominant color, and whether an image is black&amp;white. Adult - detects if the image is pornographic in nature (depicts nudity or a sex act), or is gory (depicts extreme violence or blood). Sexually suggestive content (aka racy content) is also detected. Objects - detects various objects within an image, including the approximate location. The Objects argument is only available in English. Brands - detects various brands within an image, including the approximate location. The Brands argument is only available in English.'
    - id: details
      type: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>
      description: 'A string indicating which domain-specific details to return. Multiple values should be comma-separated. Valid visual feature types include: Celebrities - identifies celebrities if detected in the image, Landmarks - identifies notable landmarks in the image.'
    - id: language
      type: java.lang.String
      description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    - id: descriptionExclude
      type: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>
      description: Turn off specified domain models when generating the description.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>>
      description: the observable to the ImageAnalysis object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage()
  id: describeImage()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImage()
  nameWithType: ComputerVisionImpl.describeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionDescribeImageParameters describeImage()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionDescribeImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  id: describeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ImageDescription describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
      description: the ImageDescription object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  id: describeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ImageDescription> describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
      description: the observable to the ImageDescription object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>)
  id: describeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter, ServiceCallback<ImageDescription> serviceCallback)
  nameWithType: ComputerVisionImpl.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter, ServiceCallback<ImageDescription> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter, ServiceCallback<ImageDescription> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ServiceFuture<ImageDescription> describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter, ServiceCallback<ImageDescription> serviceCallback)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream()
  id: describeImageInStream()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageInStream()
  nameWithType: ComputerVisionImpl.describeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionDescribeImageInStreamParameters describeImageInStream()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionDescribeImageInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  id: describeImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ImageDescription describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
      description: the ImageDescription object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  id: describeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ImageDescription> describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
      description: the observable to the ImageDescription object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>)
  id: describeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter, ServiceCallback<ImageDescription> serviceCallback)
  nameWithType: ComputerVisionImpl.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter, ServiceCallback<ImageDescription> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter, ServiceCallback<ImageDescription> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ServiceFuture<ImageDescription> describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter, ServiceCallback<ImageDescription> serviceCallback)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  id: describeImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageInStreamWithServiceResponseAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<ImageDescription>> describeImageInStreamWithServiceResponseAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>>
      description: the observable to the ImageDescription object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[],java.lang.Integer,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  id: describeImageInStreamWithServiceResponseAsync(byte[],java.lang.Integer,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageInStreamWithServiceResponseAsync(byte[] image, Integer maxCandidates, String language, List<DescriptionExclude> descriptionExclude)
  nameWithType: ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[] image, Integer maxCandidates, String language, List<DescriptionExclude> descriptionExclude)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[] image, Integer maxCandidates, String language, List<DescriptionExclude> descriptionExclude)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<ImageDescription>> describeImageInStreamWithServiceResponseAsync(byte[] image, Integer maxCandidates, String language, List<DescriptionExclude> descriptionExclude)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: maxCandidates
      type: java.lang.Integer
      description: Maximum number of candidate descriptions to be returned.  The default is 1.
    - id: language
      type: java.lang.String
      description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    - id: descriptionExclude
      type: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>
      description: Turn off specified domain models when generating the description.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>>
      description: the observable to the ImageDescription object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  id: describeImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageWithServiceResponseAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageWithServiceResponseAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<ImageDescription>> describeImageWithServiceResponseAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>>
      description: the observable to the ImageDescription object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  id: describeImageWithServiceResponseAsync(java.lang.String,java.lang.Integer,java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: describeImageWithServiceResponseAsync(String url, Integer maxCandidates, String language, List<DescriptionExclude> descriptionExclude)
  nameWithType: ComputerVisionImpl.describeImageWithServiceResponseAsync(String url, Integer maxCandidates, String language, List<DescriptionExclude> descriptionExclude)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(String url, Integer maxCandidates, String language, List<DescriptionExclude> descriptionExclude)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<ImageDescription>> describeImageWithServiceResponseAsync(String url, Integer maxCandidates, String language, List<DescriptionExclude> descriptionExclude)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: maxCandidates
      type: java.lang.Integer
      description: Maximum number of candidate descriptions to be returned.  The default is 1.
    - id: language
      type: java.lang.String
      description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    - id: descriptionExclude
      type: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>
      description: Turn off specified domain models when generating the description.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>>
      description: the observable to the ImageDescription object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjects(java.lang.String)
  id: detectObjects(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: detectObjects(String url)
  nameWithType: ComputerVisionImpl.detectObjects(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjects(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjects*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public DetectResult detectObjects(String url)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
      description: the DetectResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync(java.lang.String)
  id: detectObjectsAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: detectObjectsAsync(String url)
  nameWithType: ComputerVisionImpl.detectObjectsAsync(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<DetectResult> detectObjectsAsync(String url)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
      description: the observable to the DetectResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>)
  id: detectObjectsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: detectObjectsAsync(String url, ServiceCallback<DetectResult> serviceCallback)
  nameWithType: ComputerVisionImpl.detectObjectsAsync(String url, ServiceCallback<DetectResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync(String url, ServiceCallback<DetectResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ServiceFuture<DetectResult> detectObjectsAsync(String url, ServiceCallback<DetectResult> serviceCallback)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStream(byte[])
  id: detectObjectsInStream(byte[])
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: detectObjectsInStream(byte[] image)
  nameWithType: ComputerVisionImpl.detectObjectsInStream(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStream(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public DetectResult detectObjectsInStream(byte[] image)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
      description: the DetectResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync(byte[])
  id: detectObjectsInStreamAsync(byte[])
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: detectObjectsInStreamAsync(byte[] image)
  nameWithType: ComputerVisionImpl.detectObjectsInStreamAsync(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<DetectResult> detectObjectsInStreamAsync(byte[] image)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
      description: the observable to the DetectResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync(byte[],com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>)
  id: detectObjectsInStreamAsync(byte[],com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: detectObjectsInStreamAsync(byte[] image, ServiceCallback<DetectResult> serviceCallback)
  nameWithType: ComputerVisionImpl.detectObjectsInStreamAsync(byte[] image, ServiceCallback<DetectResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync(byte[] image, ServiceCallback<DetectResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ServiceFuture<DetectResult> detectObjectsInStreamAsync(byte[] image, ServiceCallback<DetectResult> serviceCallback)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[])
  id: detectObjectsInStreamWithServiceResponseAsync(byte[])
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: detectObjectsInStreamWithServiceResponseAsync(byte[] image)
  nameWithType: ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<DetectResult>> detectObjectsInStreamWithServiceResponseAsync(byte[] image)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>>
      description: the observable to the DetectResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsWithServiceResponseAsync(java.lang.String)
  id: detectObjectsWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: detectObjectsWithServiceResponseAsync(String url)
  nameWithType: ComputerVisionImpl.detectObjectsWithServiceResponseAsync(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsWithServiceResponseAsync(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<DetectResult>> detectObjectsWithServiceResponseAsync(String url)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>>
      description: the observable to the DetectResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail()
  id: generateThumbnail()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnail()
  nameWithType: ComputerVisionImpl.generateThumbnail()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionGenerateThumbnailParameters generateThumbnail()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionGenerateThumbnailParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  id: generateThumbnail(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public InputStream generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: java.io.InputStream
      description: the InputStream object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  id: generateThumbnailAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<InputStream> generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<java.io.InputStream>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  id: generateThumbnailAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter, ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputerVisionImpl.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter, ServiceCallback<InputStream> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter, ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public ServiceFuture<InputStream> generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter, ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.io.InputStream>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.io.InputStream>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream()
  id: generateThumbnailInStream()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailInStream()
  nameWithType: ComputerVisionImpl.generateThumbnailInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionGenerateThumbnailInStreamParameters generateThumbnailInStream()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionGenerateThumbnailInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStream(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public InputStream generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: image
      type: byte[]
      description: An image stream.
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: java.io.InputStream
      description: the InputStream object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStreamAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<InputStream> generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: image
      type: byte[]
      description: An image stream.
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<java.io.InputStream>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  id: generateThumbnailInStreamAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter, ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter, ServiceCallback<InputStream> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter, ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public ServiceFuture<InputStream> generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter, ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: image
      type: byte[]
      description: An image stream.
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.io.InputStream>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.io.InputStream>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStreamWithServiceResponseAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<InputStream>> generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: image
      type: byte[]
      description: An image stream.
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.io.InputStream>>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int,int,byte[],java.lang.Boolean)
  id: generateThumbnailInStreamWithServiceResponseAsync(int,int,byte[],java.lang.Boolean)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, Boolean smartCropping)
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, Boolean smartCropping)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, Boolean smartCropping)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<InputStream>> generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, Boolean smartCropping)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: image
      type: byte[]
      description: An image stream.
    - id: smartCropping
      type: java.lang.Boolean
      description: Boolean flag for enabling smart cropping.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.io.InputStream>>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  id: generateThumbnailWithServiceResponseAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailWithServiceResponseAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<InputStream>> generateThumbnailWithServiceResponseAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.io.InputStream>>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int,int,java.lang.String,java.lang.Boolean)
  id: generateThumbnailWithServiceResponseAsync(int,int,java.lang.String,java.lang.Boolean)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: generateThumbnailWithServiceResponseAsync(int width, int height, String url, Boolean smartCropping)
  nameWithType: ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int width, int height, String url, Boolean smartCropping)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int width, int height, String url, Boolean smartCropping)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<InputStream>> generateThumbnailWithServiceResponseAsync(int width, int height, String url, Boolean smartCropping)
    parameters:
    - id: width
      type: int
      description: Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: height
      type: int
      description: Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: smartCropping
      type: java.lang.Boolean
      description: Boolean flag for enabling smart cropping.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.io.InputStream>>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterest(java.lang.String)
  id: getAreaOfInterest(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getAreaOfInterest(String url)
  nameWithType: ComputerVisionImpl.getAreaOfInterest(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterest(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterest*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public AreaOfInterestResult getAreaOfInterest(String url)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
      description: the AreaOfInterestResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync(java.lang.String)
  id: getAreaOfInterestAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getAreaOfInterestAsync(String url)
  nameWithType: ComputerVisionImpl.getAreaOfInterestAsync(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<AreaOfInterestResult> getAreaOfInterestAsync(String url)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
      description: the observable to the AreaOfInterestResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>)
  id: getAreaOfInterestAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getAreaOfInterestAsync(String url, ServiceCallback<AreaOfInterestResult> serviceCallback)
  nameWithType: ComputerVisionImpl.getAreaOfInterestAsync(String url, ServiceCallback<AreaOfInterestResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync(String url, ServiceCallback<AreaOfInterestResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public ServiceFuture<AreaOfInterestResult> getAreaOfInterestAsync(String url, ServiceCallback<AreaOfInterestResult> serviceCallback)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStream(byte[])
  id: getAreaOfInterestInStream(byte[])
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getAreaOfInterestInStream(byte[] image)
  nameWithType: ComputerVisionImpl.getAreaOfInterestInStream(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStream(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public AreaOfInterestResult getAreaOfInterestInStream(byte[] image)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
      description: the AreaOfInterestResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync(byte[])
  id: getAreaOfInterestInStreamAsync(byte[])
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getAreaOfInterestInStreamAsync(byte[] image)
  nameWithType: ComputerVisionImpl.getAreaOfInterestInStreamAsync(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<AreaOfInterestResult> getAreaOfInterestInStreamAsync(byte[] image)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
      description: the observable to the AreaOfInterestResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync(byte[],com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>)
  id: getAreaOfInterestInStreamAsync(byte[],com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getAreaOfInterestInStreamAsync(byte[] image, ServiceCallback<AreaOfInterestResult> serviceCallback)
  nameWithType: ComputerVisionImpl.getAreaOfInterestInStreamAsync(byte[] image, ServiceCallback<AreaOfInterestResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync(byte[] image, ServiceCallback<AreaOfInterestResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public ServiceFuture<AreaOfInterestResult> getAreaOfInterestInStreamAsync(byte[] image, ServiceCallback<AreaOfInterestResult> serviceCallback)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamWithServiceResponseAsync(byte[])
  id: getAreaOfInterestInStreamWithServiceResponseAsync(byte[])
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getAreaOfInterestInStreamWithServiceResponseAsync(byte[] image)
  nameWithType: ComputerVisionImpl.getAreaOfInterestInStreamWithServiceResponseAsync(byte[] image)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamWithServiceResponseAsync(byte[] image)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<AreaOfInterestResult>> getAreaOfInterestInStreamWithServiceResponseAsync(byte[] image)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>>
      description: the observable to the AreaOfInterestResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestWithServiceResponseAsync(java.lang.String)
  id: getAreaOfInterestWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getAreaOfInterestWithServiceResponseAsync(String url)
  nameWithType: ComputerVisionImpl.getAreaOfInterestWithServiceResponseAsync(String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestWithServiceResponseAsync(String url)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<AreaOfInterestResult>> getAreaOfInterestWithServiceResponseAsync(String url)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>>
      description: the observable to the AreaOfInterestResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResult(java.util.UUID)
  id: getReadResult(java.util.UUID)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getReadResult(UUID operationId)
  nameWithType: ComputerVisionImpl.getReadResult(UUID operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResult(UUID operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResult*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from 'Operation-Location' field returned from Read interface.
  syntax:
    content: public ReadOperationResult getReadResult(UUID operationId)
    parameters:
    - id: operationId
      type: java.util.UUID
      description: Id of read operation returned in the response of the 'Read' interface.
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
      description: the ReadOperationResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync(java.util.UUID)
  id: getReadResultAsync(java.util.UUID)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getReadResultAsync(UUID operationId)
  nameWithType: ComputerVisionImpl.getReadResultAsync(UUID operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync(UUID operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from 'Operation-Location' field returned from Read interface.
  syntax:
    content: public Observable<ReadOperationResult> getReadResultAsync(UUID operationId)
    parameters:
    - id: operationId
      type: java.util.UUID
      description: Id of read operation returned in the response of the 'Read' interface.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>
      description: the observable to the ReadOperationResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync(java.util.UUID,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>)
  id: getReadResultAsync(java.util.UUID,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getReadResultAsync(UUID operationId, ServiceCallback<ReadOperationResult> serviceCallback)
  nameWithType: ComputerVisionImpl.getReadResultAsync(UUID operationId, ServiceCallback<ReadOperationResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync(UUID operationId, ServiceCallback<ReadOperationResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from 'Operation-Location' field returned from Read interface.
  syntax:
    content: public ServiceFuture<ReadOperationResult> getReadResultAsync(UUID operationId, ServiceCallback<ReadOperationResult> serviceCallback)
    parameters:
    - id: operationId
      type: java.util.UUID
      description: Id of read operation returned in the response of the 'Read' interface.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultWithServiceResponseAsync(java.util.UUID)
  id: getReadResultWithServiceResponseAsync(java.util.UUID)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: getReadResultWithServiceResponseAsync(UUID operationId)
  nameWithType: ComputerVisionImpl.getReadResultWithServiceResponseAsync(UUID operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultWithServiceResponseAsync(UUID operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from 'Operation-Location' field returned from Read interface.
  syntax:
    content: public Observable<ServiceResponse<ReadOperationResult>> getReadResultWithServiceResponseAsync(UUID operationId)
    parameters:
    - id: operationId
      type: java.util.UUID
      description: Id of read operation returned in the response of the 'Read' interface.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>>
      description: the observable to the ReadOperationResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels()
  id: listModels()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: listModels()
  nameWithType: ComputerVisionImpl.listModels()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public ListModelsResult listModels()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
      description: the ListModelsResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync()
  id: listModelsAsync()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: listModelsAsync()
  nameWithType: ComputerVisionImpl.listModelsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public Observable<ListModelsResult> listModelsAsync()
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>
      description: the observable to the ListModelsResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>)
  id: listModelsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: listModelsAsync(ServiceCallback<ListModelsResult> serviceCallback)
  nameWithType: ComputerVisionImpl.listModelsAsync(ServiceCallback<ListModelsResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync(ServiceCallback<ListModelsResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public ServiceFuture<ListModelsResult> listModelsAsync(ServiceCallback<ListModelsResult> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync()
  id: listModelsWithServiceResponseAsync()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: listModelsWithServiceResponseAsync()
  nameWithType: ComputerVisionImpl.listModelsWithServiceResponseAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: 'This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.'
  syntax:
    content: public Observable<ServiceResponse<ListModelsResult>> listModelsWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>>
      description: the observable to the ListModelsResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read()
  id: read()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: read()
  nameWithType: ComputerVisionImpl.read()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionReadParameters read()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionReadParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  id: read(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: read(String url, ReadOptionalParameter readOptionalParameter)
  nameWithType: ComputerVisionImpl.read(String url, ReadOptionalParameter readOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read(String url, ReadOptionalParameter readOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public void read(String url, ReadOptionalParameter readOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: readOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  id: readAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readAsync(String url, ReadOptionalParameter readOptionalParameter)
  nameWithType: ComputerVisionImpl.readAsync(String url, ReadOptionalParameter readOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync(String url, ReadOptionalParameter readOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public Observable<Void> readAsync(String url, ReadOptionalParameter readOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: readOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: readAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readAsync(String url, ReadOptionalParameter readOptionalParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputerVisionImpl.readAsync(String url, ReadOptionalParameter readOptionalParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync(String url, ReadOptionalParameter readOptionalParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public ServiceFuture<Void> readAsync(String url, ReadOptionalParameter readOptionalParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: readOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream()
  id: readInStream()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readInStream()
  nameWithType: ComputerVisionImpl.readInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionReadInStreamParameters readInStream()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionReadInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  id: readInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public void readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: readInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  id: readInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public Observable<Void> readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: readInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: readInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputerVisionImpl.readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public ServiceFuture<Void> readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: readInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage)
  id: readInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readInStreamWithServiceResponseAsync(byte[] image, OcrDetectionLanguage language)
  nameWithType: ComputerVisionImpl.readInStreamWithServiceResponseAsync(byte[] image, OcrDetectionLanguage language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync(byte[] image, OcrDetectionLanguage language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void,ReadInStreamHeaders>> readInStreamWithServiceResponseAsync(byte[] image, OcrDetectionLanguage language)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: language
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage
      description: "The BCP-47 language code of the text to be detected in the image. In future versions, when language parameter is not passed, language detection will be used to determine the language. However, in the current version, missing language parameter will cause English to be used. To ensure that your document is always parsed in English without the use of language detection in the future, pass \\u201cen\\u201d in the language parameter. Possible values include: 'en', 'es', 'fr', 'de', 'it', 'nl', 'pt'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  id: readInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readInStreamWithServiceResponseAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.readInStreamWithServiceResponseAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void,ReadInStreamHeaders>> readInStreamWithServiceResponseAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: readInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage)
  id: readWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readWithServiceResponseAsync(String url, OcrDetectionLanguage language)
  nameWithType: ComputerVisionImpl.readWithServiceResponseAsync(String url, OcrDetectionLanguage language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync(String url, OcrDetectionLanguage language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void,ReadHeaders>> readWithServiceResponseAsync(String url, OcrDetectionLanguage language)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: language
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage
      description: "The BCP-47 language code of the text to be detected in the image. In future versions, when language parameter is not passed, language detection will be used to determine the language. However, in the current version, missing language parameter will cause English to be used. To ensure that your document is always parsed in English without the use of language detection in the future, pass \\u201cen\\u201d in the language parameter. Possible values include: 'en', 'es', 'fr', 'de', 'it', 'nl', 'pt'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  id: readWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: readWithServiceResponseAsync(String url, ReadOptionalParameter readOptionalParameter)
  nameWithType: ComputerVisionImpl.readWithServiceResponseAsync(String url, ReadOptionalParameter readOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync(String url, ReadOptionalParameter readOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\u200b.
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void,ReadHeaders>> readWithServiceResponseAsync(String url, ReadOptionalParameter readOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: readOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText()
  id: recognizePrintedText()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedText()
  nameWithType: ComputerVisionImpl.recognizePrintedText()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionRecognizePrintedTextParameters recognizePrintedText()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionRecognizePrintedTextParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  id: recognizePrintedText(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public OcrResult recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
      description: the OcrResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  id: recognizePrintedTextAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
      description: the observable to the OcrResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>)
  id: recognizePrintedTextAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter, ServiceCallback<OcrResult> serviceCallback)
  nameWithType: ComputerVisionImpl.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter, ServiceCallback<OcrResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter, ServiceCallback<OcrResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public ServiceFuture<OcrResult> recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter, ServiceCallback<OcrResult> serviceCallback)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream()
  id: recognizePrintedTextInStream()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextInStream()
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionRecognizePrintedTextInStreamParameters recognizePrintedTextInStream()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionRecognizePrintedTextInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStream(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public OcrResult recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: image
      type: byte[]
      description: An image stream.
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
      description: the OcrResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStreamAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: image
      type: byte[]
      description: An image stream.
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
      description: the observable to the OcrResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>)
  id: recognizePrintedTextInStreamAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter, ServiceCallback<OcrResult> serviceCallback)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter, ServiceCallback<OcrResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter, ServiceCallback<OcrResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public ServiceFuture<OcrResult> recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter, ServiceCallback<OcrResult> serviceCallback)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: image
      type: byte[]
      description: An image stream.
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages)
  id: recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, OcrLanguages language)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, OcrLanguages language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, OcrLanguages language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<OcrResult>> recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, OcrLanguages language)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: image
      type: byte[]
      description: An image stream.
    - id: language
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages
      description: "The BCP-47 language code of the text to be detected in the image. The default value is 'unk'. Possible values include: 'unk', 'zh-Hans', 'zh-Hant', 'cs', 'da', 'nl', 'en', 'fi', 'fr', 'de', 'el', 'hu', 'it', 'ja', 'ko', 'nb', 'pl', 'pt', 'ru', 'es', 'sv', 'tr', 'ar', 'ro', 'sr-Cyrl', 'sr-Latn', 'sk'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>>
      description: the observable to the OcrResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<OcrResult>> recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: image
      type: byte[]
      description: An image stream.
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>>
      description: the observable to the OcrResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages)
  id: recognizePrintedTextWithServiceResponseAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, OcrLanguages language)
  nameWithType: ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, OcrLanguages language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, OcrLanguages language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<OcrResult>> recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, OcrLanguages language)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: language
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages
      description: "The BCP-47 language code of the text to be detected in the image. The default value is 'unk'. Possible values include: 'unk', 'zh-Hans', 'zh-Hant', 'cs', 'da', 'nl', 'en', 'fi', 'fr', 'de', 'el', 'hu', 'it', 'ja', 'ko', 'nb', 'pl', 'pt', 'ru', 'es', 'sv', 'tr', 'ar', 'ro', 'sr-Cyrl', 'sr-Latn', 'sk'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>>
      description: the observable to the OcrResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  id: recognizePrintedTextWithServiceResponseAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.
  syntax:
    content: public Observable<ServiceResponse<OcrResult>> recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: boolean
      description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>>
      description: the observable to the OcrResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage()
  id: tagImage()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImage()
  nameWithType: ComputerVisionImpl.tagImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionTagImageParameters tagImage()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionTagImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  id: tagImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public TagResult tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
      description: the TagResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  id: tagImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<TagResult> tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
      description: the observable to the TagResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>)
  id: tagImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter, ServiceCallback<TagResult> serviceCallback)
  nameWithType: ComputerVisionImpl.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter, ServiceCallback<TagResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter, ServiceCallback<TagResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ServiceFuture<TagResult> tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter, ServiceCallback<TagResult> serviceCallback)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream()
  id: tagImageInStream()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageInStream()
  nameWithType: ComputerVisionImpl.tagImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  syntax:
    content: public ComputerVisionImpl.ComputerVisionTagImageInStreamParameters tagImageInStream()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionTagImageInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  id: tagImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public TagResult tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
      description: the TagResult object if successful.
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  id: tagImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<TagResult> tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
      description: the observable to the TagResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>)
  id: tagImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter, ServiceCallback<TagResult> serviceCallback)
  nameWithType: ComputerVisionImpl.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter, ServiceCallback<TagResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter, ServiceCallback<TagResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public ServiceFuture<TagResult> tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter, ServiceCallback<TagResult> serviceCallback)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  id: tagImageInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageInStreamWithServiceResponseAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<TagResult>> tagImageInStreamWithServiceResponseAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>>
      description: the observable to the TagResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[],java.lang.String)
  id: tagImageInStreamWithServiceResponseAsync(byte[],java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageInStreamWithServiceResponseAsync(byte[] image, String language)
  nameWithType: ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[] image, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[] image, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<TagResult>> tagImageInStreamWithServiceResponseAsync(byte[] image, String language)
    parameters:
    - id: image
      type: byte[]
      description: An image stream.
    - id: language
      type: java.lang.String
      description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>>
      description: the observable to the TagResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  id: tagImageWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<TagResult>> tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>>
      description: the observable to the TagResult object
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: tagImageWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.4-beta
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  langs:
  - java
  name: tagImageWithServiceResponseAsync(String url, String language)
  nameWithType: ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag "ascomycete" may be accompanied by the hint "fungus". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.
  syntax:
    content: public Observable<ServiceResponse<TagResult>> tagImageWithServiceResponseAsync(String url, String language)
    parameters:
    - id: url
      type: java.lang.String
      description: Publicly reachable URL of an image.
    - id: language
      type: java.lang.String
      description: "The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>>
      description: the observable to the TagResult object
references:
- uid: retrofit2.Retrofit
  spec.java:
  - uid: retrofit2.Retrofit
    name: Retrofit
    fullName: retrofit2.Retrofit
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl
  name: ComputerVisionClientImpl
  nameWithType: ComputerVisionClientImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl*
  name: ComputerVisionImpl
  nameWithType: ComputerVisionImpl.ComputerVisionImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
  name: ReadInStreamOptionalParameter
  nameWithType: ReadInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream*
  name: readInStream
  nameWithType: ComputerVisionImpl.readInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync*
  name: readInStreamAsync
  nameWithType: ComputerVisionImpl.readInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamHeaders
    name: ReadInStreamHeaders
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync*
  name: readInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.readInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage
  name: OcrDetectionLanguage
  nameWithType: OcrDetectionLanguage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrDetectionLanguage
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionReadInStreamParameters
  name: ComputerVisionImpl.ComputerVisionReadInStreamParameters
  nameWithType: ComputerVisionImpl.ComputerVisionReadInStreamParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionReadInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
  name: TagImageInStreamOptionalParameter
  nameWithType: TagImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  name: TagResult
  nameWithType: TagResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream*
  name: tagImageInStream
  nameWithType: ComputerVisionImpl.tagImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync*
  name: tagImageInStreamAsync
  nameWithType: ComputerVisionImpl.tagImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync*
  name: tagImageInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionTagImageInStreamParameters
  name: ComputerVisionImpl.ComputerVisionTagImageInStreamParameters
  nameWithType: ComputerVisionImpl.ComputerVisionTagImageInStreamParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionTagImageInStreamParameters
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
  name: RecognizePrintedTextInStreamOptionalParameter
  nameWithType: RecognizePrintedTextInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  name: OcrResult
  nameWithType: OcrResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream*
  name: recognizePrintedTextInStream
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync*
  name: recognizePrintedTextInStreamAsync
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync*
  name: recognizePrintedTextInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages
  name: OcrLanguages
  nameWithType: OcrLanguages
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionRecognizePrintedTextInStreamParameters
  name: ComputerVisionImpl.ComputerVisionRecognizePrintedTextInStreamParameters
  nameWithType: ComputerVisionImpl.ComputerVisionRecognizePrintedTextInStreamParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionRecognizePrintedTextInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
  name: AnalyzeImageByDomainInStreamOptionalParameter
  nameWithType: AnalyzeImageByDomainInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  name: DomainModelResults
  nameWithType: DomainModelResults
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream*
  name: analyzeImageByDomainInStream
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync*
  name: analyzeImageByDomainInStreamAsync
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync*
  name: analyzeImageByDomainInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainInStreamParameters
  name: ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainInStreamParameters
  nameWithType: ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainInStreamParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainInStreamParameters
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
  name: GenerateThumbnailInStreamOptionalParameter
  nameWithType: GenerateThumbnailInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream*
  name: generateThumbnailInStream
  nameWithType: ComputerVisionImpl.generateThumbnailInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<java.io.InputStream>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.io.InputStream>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync*
  name: generateThumbnailInStreamAsync
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<java.io.InputStream>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<java.io.InputStream>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync*
  name: generateThumbnailInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionGenerateThumbnailInStreamParameters
  name: ComputerVisionImpl.ComputerVisionGenerateThumbnailInStreamParameters
  nameWithType: ComputerVisionImpl.ComputerVisionGenerateThumbnailInStreamParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionGenerateThumbnailInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
  name: DetectResult
  nameWithType: DetectResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStream*
  name: detectObjectsInStream
  nameWithType: ComputerVisionImpl.detectObjectsInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
    name: DetectResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
    name: DetectResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync*
  name: detectObjectsInStreamAsync
  nameWithType: ComputerVisionImpl.detectObjectsInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
    name: DetectResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
    name: DetectResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync*
  name: detectObjectsInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
  name: DescribeImageInStreamOptionalParameter
  nameWithType: DescribeImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  name: ImageDescription
  nameWithType: ImageDescription
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream*
  name: describeImageInStream
  nameWithType: ComputerVisionImpl.describeImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync*
  name: describeImageInStreamAsync
  nameWithType: ComputerVisionImpl.describeImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync*
  name: describeImageInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude
    name: DescriptionExclude
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionDescribeImageInStreamParameters
  name: ComputerVisionImpl.ComputerVisionDescribeImageInStreamParameters
  nameWithType: ComputerVisionImpl.ComputerVisionDescribeImageInStreamParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionDescribeImageInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
  name: AreaOfInterestResult
  nameWithType: AreaOfInterestResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStream*
  name: getAreaOfInterestInStream
  nameWithType: ComputerVisionImpl.getAreaOfInterestInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
    name: AreaOfInterestResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
    name: AreaOfInterestResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync*
  name: getAreaOfInterestInStreamAsync
  nameWithType: ComputerVisionImpl.getAreaOfInterestInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
    name: AreaOfInterestResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
    name: AreaOfInterestResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamWithServiceResponseAsync*
  name: getAreaOfInterestInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.getAreaOfInterestInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
  name: AnalyzeImageInStreamOptionalParameter
  nameWithType: AnalyzeImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  name: ImageAnalysis
  nameWithType: ImageAnalysis
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream*
  name: analyzeImageInStream
  nameWithType: ComputerVisionImpl.analyzeImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync*
  name: analyzeImageInStreamAsync
  nameWithType: ComputerVisionImpl.analyzeImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync*
  name: analyzeImageInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
    name: VisualFeatureTypes
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
  - name: '>'
    fullName: '>'
- uid: java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Details>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details
    name: Details
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageInStreamParameters
  name: ComputerVisionImpl.ComputerVisionAnalyzeImageInStreamParameters
  nameWithType: ComputerVisionImpl.ComputerVisionAnalyzeImageInStreamParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageInStreamParameters
- uid: java.util.UUID
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
  name: ReadOperationResult
  nameWithType: ReadOperationResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResult*
  name: getReadResult
  nameWithType: ComputerVisionImpl.getReadResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResult
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
    name: ReadOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
    name: ReadOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync*
  name: getReadResultAsync
  nameWithType: ComputerVisionImpl.getReadResultAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
    name: ReadOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
    name: ReadOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultWithServiceResponseAsync*
  name: getReadResultWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.getReadResultWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getReadResultWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
  name: ReadOptionalParameter
  nameWithType: ReadOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read*
  name: read
  nameWithType: ComputerVisionImpl.read
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.read
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync*
  name: readAsync
  nameWithType: ComputerVisionImpl.readAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadHeaders
    name: ReadHeaders
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync*
  name: readWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.readWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.readWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionReadParameters
  name: ComputerVisionImpl.ComputerVisionReadParameters
  nameWithType: ComputerVisionImpl.ComputerVisionReadParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionReadParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterest*
  name: getAreaOfInterest
  nameWithType: ComputerVisionImpl.getAreaOfInterest
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterest
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync*
  name: getAreaOfInterestAsync
  nameWithType: ComputerVisionImpl.getAreaOfInterestAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestWithServiceResponseAsync*
  name: getAreaOfInterestWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.getAreaOfInterestWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getAreaOfInterestWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
  name: GenerateThumbnailOptionalParameter
  nameWithType: GenerateThumbnailOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail*
  name: generateThumbnail
  nameWithType: ComputerVisionImpl.generateThumbnail
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync*
  name: generateThumbnailAsync
  nameWithType: ComputerVisionImpl.generateThumbnailAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync*
  name: generateThumbnailWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.generateThumbnailWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionGenerateThumbnailParameters
  name: ComputerVisionImpl.ComputerVisionGenerateThumbnailParameters
  nameWithType: ComputerVisionImpl.ComputerVisionGenerateThumbnailParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionGenerateThumbnailParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
  name: TagImageOptionalParameter
  nameWithType: TagImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage*
  name: tagImage
  nameWithType: ComputerVisionImpl.tagImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync*
  name: tagImageAsync
  nameWithType: ComputerVisionImpl.tagImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync*
  name: tagImageWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.tagImageWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionTagImageParameters
  name: ComputerVisionImpl.ComputerVisionTagImageParameters
  nameWithType: ComputerVisionImpl.ComputerVisionTagImageParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionTagImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
  name: RecognizePrintedTextOptionalParameter
  nameWithType: RecognizePrintedTextOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText*
  name: recognizePrintedText
  nameWithType: ComputerVisionImpl.recognizePrintedText
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync*
  name: recognizePrintedTextAsync
  nameWithType: ComputerVisionImpl.recognizePrintedTextAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync*
  name: recognizePrintedTextWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionRecognizePrintedTextParameters
  name: ComputerVisionImpl.ComputerVisionRecognizePrintedTextParameters
  nameWithType: ComputerVisionImpl.ComputerVisionRecognizePrintedTextParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionRecognizePrintedTextParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
  name: AnalyzeImageByDomainOptionalParameter
  nameWithType: AnalyzeImageByDomainOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain*
  name: analyzeImageByDomain
  nameWithType: ComputerVisionImpl.analyzeImageByDomain
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync*
  name: analyzeImageByDomainAsync
  nameWithType: ComputerVisionImpl.analyzeImageByDomainAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync*
  name: analyzeImageByDomainWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainParameters
  name: ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainParameters
  nameWithType: ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageByDomainParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  name: ListModelsResult
  nameWithType: ListModelsResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels*
  name: listModels
  nameWithType: ComputerVisionImpl.listModels
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync*
  name: listModelsAsync
  nameWithType: ComputerVisionImpl.listModelsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync*
  name: listModelsWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.listModelsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjects*
  name: detectObjects
  nameWithType: ComputerVisionImpl.detectObjects
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjects
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync*
  name: detectObjectsAsync
  nameWithType: ComputerVisionImpl.detectObjectsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsWithServiceResponseAsync*
  name: detectObjectsWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.detectObjectsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
  name: DescribeImageOptionalParameter
  nameWithType: DescribeImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage*
  name: describeImage
  nameWithType: ComputerVisionImpl.describeImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync*
  name: describeImageAsync
  nameWithType: ComputerVisionImpl.describeImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync*
  name: describeImageWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.describeImageWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionDescribeImageParameters
  name: ComputerVisionImpl.ComputerVisionDescribeImageParameters
  nameWithType: ComputerVisionImpl.ComputerVisionDescribeImageParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionDescribeImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
  name: AnalyzeImageOptionalParameter
  nameWithType: AnalyzeImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage*
  name: analyzeImage
  nameWithType: ComputerVisionImpl.analyzeImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync*
  name: analyzeImageAsync
  nameWithType: ComputerVisionImpl.analyzeImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync*
  name: analyzeImageWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.analyzeImageWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageParameters
  name: ComputerVisionImpl.ComputerVisionAnalyzeImageParameters
  nameWithType: ComputerVisionImpl.ComputerVisionAnalyzeImageParameters
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  name: ComputerVision
  nameWithType: ComputerVision
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionService
  name: ComputerVisionImpl.ComputerVisionService
  nameWithType: ComputerVisionImpl.ComputerVisionService
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionService
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.microsoft.rest.ServiceCallback
  name: ServiceCallback
  nameWithType: ServiceCallback
  fullName: com.microsoft.rest.ServiceCallback
- uid: com.microsoft.rest.ServiceFuture
  name: ServiceFuture
  nameWithType: ServiceFuture
  fullName: com.microsoft.rest.ServiceFuture
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: com.microsoft.rest.ServiceResponseWithHeaders
  name: ServiceResponseWithHeaders
  nameWithType: ServiceResponseWithHeaders
  fullName: com.microsoft.rest.ServiceResponseWithHeaders
- uid: java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamHeaders
  name: Void,ReadInStreamHeaders
  nameWithType: Void,ReadInStreamHeaders
  fullName: java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamHeaders
- uid: com.microsoft.rest.ServiceResponse
  name: ServiceResponse
  nameWithType: ServiceResponse
  fullName: com.microsoft.rest.ServiceResponse
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude
  name: DescriptionExclude
  nameWithType: DescriptionExclude
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescriptionExclude
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
  name: VisualFeatureTypes
  nameWithType: VisualFeatureTypes
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details
  name: Details
  nameWithType: Details
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details
- uid: java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadHeaders
  name: Void,ReadHeaders
  nameWithType: Void,ReadHeaders
  fullName: java.lang.Void,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadHeaders
