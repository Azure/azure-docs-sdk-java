### YamlMime:JavaMember
nameWithType: DataDisks.withStorageAccountType
type: method
members:
- fullName: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType(StorageAccountType storageAccountType)
  name: withStorageAccountType(StorageAccountType storageAccountType)
  nameWithType: DataDisks.withStorageAccountType(StorageAccountType storageAccountType)
  parameters:
  - description: <p>the storageAccountType value to set </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.batchai.StorageAccountType?alt=com.microsoft.azure.management.batchai.StorageAccountType&text=StorageAccountType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisks object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.DataDisks?alt=com.microsoft.azure.management.batchai.DataDisks&text=DataDisks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set type of storage account to be used on the disk. Possible values are: Standard_LRS or Premium_LRS. Premium storage account type can only be used with VM sizes supporting premium storage. Possible values include: 'Standard_LRS', 'Premium_LRS'.</p>

    <p></p>
  syntax: public DataDisks withStorageAccountType(StorageAccountType storageAccountType)
  uid: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType(StorageAccountType)
uid: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType*
fullName: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType(StorageAccountType storageAccountType)
name: withStorageAccountType(StorageAccountType storageAccountType)
package: com.microsoft.azure.management.batchai
metadata: {}
