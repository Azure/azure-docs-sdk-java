### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties"
name: "AmazonRdsForSqlServerLinkedServiceTypeProperties"
nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties"
summary: "Amazon Rds for SQL Server linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties&text=SqlServerBaseLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.applicationIntent()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.applicationIntent&text=applicationIntent\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.commandTimeout()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.commandTimeout&text=commandTimeout\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.connectRetryCount()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.connectRetryCount&text=connectRetryCount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.connectRetryInterval()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.connectRetryInterval&text=connectRetryInterval\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.connectTimeout()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.connectTimeout&text=connectTimeout\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.database()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.database&text=database\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.encrypt()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.encrypt&text=encrypt\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.failoverPartner()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.failoverPartner&text=failoverPartner\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.hostnameInCertificate()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.hostnameInCertificate&text=hostnameInCertificate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.integratedSecurity()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.integratedSecurity&text=integratedSecurity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.loadBalanceTimeout()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.loadBalanceTimeout&text=loadBalanceTimeout\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.maxPoolSize()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.maxPoolSize&text=maxPoolSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.minPoolSize()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.minPoolSize&text=minPoolSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.multiSubnetFailover()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.multiSubnetFailover&text=multiSubnetFailover\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.multipleActiveResultSets()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.multipleActiveResultSets&text=multipleActiveResultSets\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.packetSize()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.packetSize&text=packetSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.pooling()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.pooling&text=pooling\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.server()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.server&text=server\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.trustServerCertificate()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.trustServerCertificate&text=trustServerCertificate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.validate()?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withApplicationIntent(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withApplicationIntent&text=withApplicationIntent\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withCommandTimeout(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withCommandTimeout&text=withCommandTimeout\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectRetryCount(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectRetryCount&text=withConnectRetryCount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectRetryInterval(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectRetryInterval&text=withConnectRetryInterval\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectTimeout(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectTimeout&text=withConnectTimeout\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withDatabase(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withDatabase&text=withDatabase\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withEncrypt(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withEncrypt&text=withEncrypt\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withFailoverPartner(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withFailoverPartner&text=withFailoverPartner\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withHostnameInCertificate(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withHostnameInCertificate&text=withHostnameInCertificate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withIntegratedSecurity(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withIntegratedSecurity&text=withIntegratedSecurity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withLoadBalanceTimeout(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withLoadBalanceTimeout&text=withLoadBalanceTimeout\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMaxPoolSize(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMaxPoolSize&text=withMaxPoolSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMinPoolSize(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMinPoolSize&text=withMinPoolSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMultiSubnetFailover(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMultiSubnetFailover&text=withMultiSubnetFailover\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMultipleActiveResultSets(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMultipleActiveResultSets&text=withMultipleActiveResultSets\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withPacketSize(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withPacketSize&text=withPacketSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withPooling(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withPooling&text=withPooling\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withServer(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withServer&text=withServer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withTrustServerCertificate(java.lang.Object)?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withTrustServerCertificate&text=withTrustServerCertificate\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **AmazonRdsForSqlServerLinkedServiceTypeProperties**</br> extends <xref href=\"com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties&text=SqlServerBaseLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.AmazonRdsForSqlServerLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.AmazonRdsForSqlServerLinkedServiceTypeProperties()"
  name: "AmazonRdsForSqlServerLinkedServiceTypeProperties()"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.AmazonRdsForSqlServerLinkedServiceTypeProperties()"
  summary: "Creates an instance of Amazon<wbr>Rds<wbr>For<wbr>Sql<wbr>Server<wbr>Linked<wbr>Service<wbr>Type<wbr>Properties class."
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties()"
  desc: "Creates an instance of AmazonRdsForSqlServerLinkedServiceTypeProperties class."
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.alwaysEncryptedSettings()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.alwaysEncryptedSettings()"
  name: "alwaysEncryptedSettings()"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.alwaysEncryptedSettings()"
  summary: "Get the always<wbr>Encrypted<wbr>Settings property: Sql always encrypted properties."
  syntax: "public SqlAlwaysEncryptedProperties alwaysEncryptedSettings()"
  desc: "Get the alwaysEncryptedSettings property: Sql always encrypted properties."
  returns:
    description: "the alwaysEncryptedSettings value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlAlwaysEncryptedProperties?alt=com.azure.resourcemanager.datafactory.models.SqlAlwaysEncryptedProperties&text=SqlAlwaysEncryptedProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authentication<wbr>Type property: The type used for authentication."
  syntax: "public AmazonRdsForSqlAuthenticationType authenticationType()"
  desc: "Get the authenticationType property: The type used for authentication. Type: string."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonRdsForSqlAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.AmazonRdsForSqlAuthenticationType&text=AmazonRdsForSqlAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.connectionString()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.connectionString()"
  name: "connectionString()"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.connectionString()"
  summary: "Get the connection<wbr>String property: The connection string."
  syntax: "public Object connectionString()"
  desc: "Get the connectionString property: The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the connectionString value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public String encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string."
  returns:
    description: "the encryptedCredential value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Amazon<wbr>Rds<wbr>For<wbr>Sql<wbr>Server<wbr>Linked<wbr>Service<wbr>Type<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AmazonRdsForSqlServerLinkedServiceTypeProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the AmazonRdsForSqlServerLinkedServiceTypeProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of AmazonRdsForSqlServerLinkedServiceTypeProperties from the JsonReader."
  returns:
    description: "An instance of AmazonRdsForSqlServerLinkedServiceTypeProperties if the JsonReader was pointing to an\n instance of it, or null if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The on-premises Windows authentication password."
  syntax: "public SecretBase password()"
  desc: "Get the password property: The on-premises Windows authentication password."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The on-premises Windows authentication user name."
  syntax: "public Object username()"
  desc: "Get the username property: The on-premises Windows authentication user name. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withAlwaysEncryptedSettings(com.azure.resourcemanager.datafactory.models.SqlAlwaysEncryptedProperties)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withAlwaysEncryptedSettings(SqlAlwaysEncryptedProperties alwaysEncryptedSettings)"
  name: "withAlwaysEncryptedSettings(SqlAlwaysEncryptedProperties alwaysEncryptedSettings)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withAlwaysEncryptedSettings(SqlAlwaysEncryptedProperties alwaysEncryptedSettings)"
  summary: "Set the always<wbr>Encrypted<wbr>Settings property: Sql always encrypted properties."
  parameters:
  - description: "the alwaysEncryptedSettings value to set."
    name: "alwaysEncryptedSettings"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlAlwaysEncryptedProperties?alt=com.azure.resourcemanager.datafactory.models.SqlAlwaysEncryptedProperties&text=SqlAlwaysEncryptedProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withAlwaysEncryptedSettings(SqlAlwaysEncryptedProperties alwaysEncryptedSettings)"
  desc: "Set the alwaysEncryptedSettings property: Sql always encrypted properties."
  returns:
    description: "the AmazonRdsForSqlServerLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withApplicationIntent(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withApplicationIntent(Object applicationIntent)"
  name: "withApplicationIntent(Object applicationIntent)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withApplicationIntent(Object applicationIntent)"
  summary: "Set the application<wbr>Intent property: The application workload type when connecting to a server, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withApplicationIntent(java.lang.Object)"
  parameters:
  - name: "applicationIntent"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withApplicationIntent(Object applicationIntent)"
  desc: "Set the applicationIntent property: The application workload type when connecting to a server, used by recommended version. Possible values are ReadOnly and ReadWrite. Type: string (or Expression with resultType string)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.AmazonRdsForSqlAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withAuthenticationType(AmazonRdsForSqlAuthenticationType authenticationType)"
  name: "withAuthenticationType(AmazonRdsForSqlAuthenticationType authenticationType)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withAuthenticationType(AmazonRdsForSqlAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: The type used for authentication."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonRdsForSqlAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.AmazonRdsForSqlAuthenticationType&text=AmazonRdsForSqlAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withAuthenticationType(AmazonRdsForSqlAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: The type used for authentication. Type: string."
  returns:
    description: "the AmazonRdsForSqlServerLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withCommandTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withCommandTimeout(Object commandTimeout)"
  name: "withCommandTimeout(Object commandTimeout)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withCommandTimeout(Object commandTimeout)"
  summary: "Set the command<wbr>Timeout property: The default wait time (in seconds) before terminating the attempt to execute a command and generating an error, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withCommandTimeout(java.lang.Object)"
  parameters:
  - name: "commandTimeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withCommandTimeout(Object commandTimeout)"
  desc: "Set the commandTimeout property: The default wait time (in seconds) before terminating the attempt to execute a command and generating an error, used by recommended version. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectionString(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectionString(Object connectionString)"
  name: "withConnectionString(Object connectionString)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectionString(Object connectionString)"
  summary: "Set the connection<wbr>String property: The connection string."
  parameters:
  - description: "the connectionString value to set."
    name: "connectionString"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withConnectionString(Object connectionString)"
  desc: "Set the connectionString property: The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the AmazonRdsForSqlServerLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectRetryCount(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectRetryCount(Object connectRetryCount)"
  name: "withConnectRetryCount(Object connectRetryCount)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectRetryCount(Object connectRetryCount)"
  summary: "Set the connect<wbr>Retry<wbr>Count property: The number of re-connections attempted after identifying that there was an idle connection failure, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectRetryCount(java.lang.Object)"
  parameters:
  - name: "connectRetryCount"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withConnectRetryCount(Object connectRetryCount)"
  desc: "Set the connectRetryCount property: The number of re-connections attempted after identifying that there was an idle connection failure, used by recommended version. This must be an integer between 0 and 255. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectRetryInterval(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectRetryInterval(Object connectRetryInterval)"
  name: "withConnectRetryInterval(Object connectRetryInterval)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectRetryInterval(Object connectRetryInterval)"
  summary: "Set the connect<wbr>Retry<wbr>Interval property: The amount of time (in seconds) between each re-connection attempt after identifying that there was an idle connection failure, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectRetryInterval(java.lang.Object)"
  parameters:
  - name: "connectRetryInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withConnectRetryInterval(Object connectRetryInterval)"
  desc: "Set the connectRetryInterval property: The amount of time (in seconds) between each re-connection attempt after identifying that there was an idle connection failure, used by recommended version. This must be an integer between 1 and 60. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectTimeout(Object connectTimeout)"
  name: "withConnectTimeout(Object connectTimeout)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withConnectTimeout(Object connectTimeout)"
  summary: "Set the connect<wbr>Timeout property: The length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withConnectTimeout(java.lang.Object)"
  parameters:
  - name: "connectTimeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withConnectTimeout(Object connectTimeout)"
  desc: "Set the connectTimeout property: The length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error, used by recommended version. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withDatabase(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withDatabase(Object database)"
  name: "withDatabase(Object database)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withDatabase(Object database)"
  summary: "Set the database property: The name of the database, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withDatabase(java.lang.Object)"
  parameters:
  - name: "database"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withDatabase(Object database)"
  desc: "Set the database property: The name of the database, used by recommended version. Type: string (or Expression with resultType string)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withEncrypt(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withEncrypt(Object encrypt)"
  name: "withEncrypt(Object encrypt)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withEncrypt(Object encrypt)"
  summary: "Set the encrypt property: Indicate whether TLS encryption is required for all data sent between the client and server, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withEncrypt(java.lang.Object)"
  parameters:
  - name: "encrypt"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withEncrypt(Object encrypt)"
  desc: "Set the encrypt property: Indicate whether TLS encryption is required for all data sent between the client and server, used by recommended version. Possible values are true/yes/mandatory, false/no/optional and strict. Type: string (or Expression with resultType string)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withEncryptedCredential(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withEncryptedCredential(String encryptedCredential)"
  name: "withEncryptedCredential(String encryptedCredential)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withEncryptedCredential(String encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withEncryptedCredential(String encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string."
  returns:
    description: "the AmazonRdsForSqlServerLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withFailoverPartner(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withFailoverPartner(Object failoverPartner)"
  name: "withFailoverPartner(Object failoverPartner)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withFailoverPartner(Object failoverPartner)"
  summary: "Set the failover<wbr>Partner property: The name or address of the partner server to connect to if the primary server is down, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withFailoverPartner(java.lang.Object)"
  parameters:
  - name: "failoverPartner"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withFailoverPartner(Object failoverPartner)"
  desc: "Set the failoverPartner property: The name or address of the partner server to connect to if the primary server is down, used by recommended version. Type: string (or Expression with resultType string)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withHostnameInCertificate(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withHostnameInCertificate(Object hostnameInCertificate)"
  name: "withHostnameInCertificate(Object hostnameInCertificate)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withHostnameInCertificate(Object hostnameInCertificate)"
  summary: "Set the hostname<wbr>InCertificate property: The host name to use when validating the server certificate for the connection."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withHostnameInCertificate(java.lang.Object)"
  parameters:
  - name: "hostnameInCertificate"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withHostnameInCertificate(Object hostnameInCertificate)"
  desc: "Set the hostnameInCertificate property: The host name to use when validating the server certificate for the connection. When not specified, the server name from the Data Source is used for certificate validation, used by recommended version. Type: string (or Expression with resultType string)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withIntegratedSecurity(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withIntegratedSecurity(Object integratedSecurity)"
  name: "withIntegratedSecurity(Object integratedSecurity)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withIntegratedSecurity(Object integratedSecurity)"
  summary: "Set the integrated<wbr>Security property: Indicate whether User ID and Password are specified in the connection (when false) or whether the current Windows account credentials are used for authentication (when true), used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withIntegratedSecurity(java.lang.Object)"
  parameters:
  - name: "integratedSecurity"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withIntegratedSecurity(Object integratedSecurity)"
  desc: "Set the integratedSecurity property: Indicate whether User ID and Password are specified in the connection (when false) or whether the current Windows account credentials are used for authentication (when true), used by recommended version. Type: Boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withLoadBalanceTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withLoadBalanceTimeout(Object loadBalanceTimeout)"
  name: "withLoadBalanceTimeout(Object loadBalanceTimeout)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withLoadBalanceTimeout(Object loadBalanceTimeout)"
  summary: "Set the load<wbr>Balance<wbr>Timeout property: The minimum time, in seconds, for the connection to live in the connection pool before being destroyed, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withLoadBalanceTimeout(java.lang.Object)"
  parameters:
  - name: "loadBalanceTimeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withLoadBalanceTimeout(Object loadBalanceTimeout)"
  desc: "Set the loadBalanceTimeout property: The minimum time, in seconds, for the connection to live in the connection pool before being destroyed, used by recommended version. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withMaxPoolSize(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withMaxPoolSize(Object maxPoolSize)"
  name: "withMaxPoolSize(Object maxPoolSize)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withMaxPoolSize(Object maxPoolSize)"
  summary: "Set the max<wbr>Pool<wbr>Size property: The maximum number of connections allowed in the connection pool for this specific connection string, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMaxPoolSize(java.lang.Object)"
  parameters:
  - name: "maxPoolSize"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withMaxPoolSize(Object maxPoolSize)"
  desc: "Set the maxPoolSize property: The maximum number of connections allowed in the connection pool for this specific connection string, used by recommended version. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withMinPoolSize(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withMinPoolSize(Object minPoolSize)"
  name: "withMinPoolSize(Object minPoolSize)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withMinPoolSize(Object minPoolSize)"
  summary: "Set the min<wbr>Pool<wbr>Size property: The minimum number of connections allowed in the connection pool for this specific connection string, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMinPoolSize(java.lang.Object)"
  parameters:
  - name: "minPoolSize"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withMinPoolSize(Object minPoolSize)"
  desc: "Set the minPoolSize property: The minimum number of connections allowed in the connection pool for this specific connection string, used by recommended version. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withMultipleActiveResultSets(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withMultipleActiveResultSets(Object multipleActiveResultSets)"
  name: "withMultipleActiveResultSets(Object multipleActiveResultSets)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withMultipleActiveResultSets(Object multipleActiveResultSets)"
  summary: "Set the multiple<wbr>Active<wbr>Result<wbr>Sets property: When true, an application can maintain multiple active result sets (MARS)."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMultipleActiveResultSets(java.lang.Object)"
  parameters:
  - name: "multipleActiveResultSets"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withMultipleActiveResultSets(Object multipleActiveResultSets)"
  desc: "Set the multipleActiveResultSets property: When true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection, used by recommended version. Type: Boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withMultiSubnetFailover(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withMultiSubnetFailover(Object multiSubnetFailover)"
  name: "withMultiSubnetFailover(Object multiSubnetFailover)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withMultiSubnetFailover(Object multiSubnetFailover)"
  summary: "Set the multi<wbr>Subnet<wbr>Failover property: If your application is connecting to an Always<wbr>On availability group (AG) on different subnets, setting Multi<wbr>Subnet<wbr>Failover=true provides faster detection of and connection to the (currently) active server, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withMultiSubnetFailover(java.lang.Object)"
  parameters:
  - name: "multiSubnetFailover"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withMultiSubnetFailover(Object multiSubnetFailover)"
  desc: "Set the multiSubnetFailover property: If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server, used by recommended version. Type: Boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withPacketSize(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withPacketSize(Object packetSize)"
  name: "withPacketSize(Object packetSize)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withPacketSize(Object packetSize)"
  summary: "Set the packet<wbr>Size property: The size in bytes of the network packets used to communicate with an instance of server, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withPacketSize(java.lang.Object)"
  parameters:
  - name: "packetSize"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withPacketSize(Object packetSize)"
  desc: "Set the packetSize property: The size in bytes of the network packets used to communicate with an instance of server, used by recommended version. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The on-premises Windows authentication password."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withPassword(SecretBase password)"
  desc: "Set the password property: The on-premises Windows authentication password."
  returns:
    description: "the AmazonRdsForSqlServerLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withPooling(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withPooling(Object pooling)"
  name: "withPooling(Object pooling)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withPooling(Object pooling)"
  summary: "Set the pooling property: Indicate whether the connection will be pooled or explicitly opened every time that the connection is requested, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withPooling(java.lang.Object)"
  parameters:
  - name: "pooling"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withPooling(Object pooling)"
  desc: "Set the pooling property: Indicate whether the connection will be pooled or explicitly opened every time that the connection is requested, used by recommended version. Type: Boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withServer(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withServer(Object server)"
  name: "withServer(Object server)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withServer(Object server)"
  summary: "Set the server property: The name or network address of the instance of SQL Server to which to connect, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withServer(java.lang.Object)"
  parameters:
  - name: "server"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withServer(Object server)"
  desc: "Set the server property: The name or network address of the instance of SQL Server to which to connect, used by recommended version. Type: string (or Expression with resultType string)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withTrustServerCertificate(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withTrustServerCertificate(Object trustServerCertificate)"
  name: "withTrustServerCertificate(Object trustServerCertificate)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withTrustServerCertificate(Object trustServerCertificate)"
  summary: "Set the trust<wbr>Server<wbr>Certificate property: Indicate whether the channel will be encrypted while bypassing walking the certificate chain to validate trust, used by recommended version."
  overridden: "com.azure.resourcemanager.datafactory.models.SqlServerBaseLinkedServiceTypeProperties.withTrustServerCertificate(java.lang.Object)"
  parameters:
  - name: "trustServerCertificate"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withTrustServerCertificate(Object trustServerCertificate)"
  desc: "Set the trustServerCertificate property: Indicate whether the channel will be encrypted while bypassing walking the certificate chain to validate trust, used by recommended version. Type: Boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "AmazonRdsForSqlServerLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The on-premises Windows authentication user name."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public AmazonRdsForSqlServerLinkedServiceTypeProperties withUsername(Object username)"
  desc: "Set the username property: The on-premises Windows authentication user name. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonRdsForSqlServerLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRdsForSqlServerLinkedServiceTypeProperties&text=AmazonRdsForSqlServerLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Amazon Rds for SQL Server linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.1.0
