### YamlMime:JavaMember
nameWithType: MessagingClient.send
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String deviceId, Message message)
  name: send(String deviceId, Message message)
  nameWithType: MessagingClient.send(String deviceId, Message message)
  parameters:
  - description: <p>the Id of the device to send the cloud to device message to. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the message to send to the device. </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.Message?alt=com.microsoft.azure.sdk.iot.service.messaging.Message&text=Message" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any IoT Hub level exception is thrown. For instance, if the provided message exceeds the IoT Hub message size limit, <xref uid="com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException"></xref> will be thrown. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>If this function is interrupted while waiting for the cloud to device message to be acknowledged by the service. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the sent message isn't acknowledged by the service within the default timeout. </p>
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if the client has not been opened yet, or is closed for any other reason such as connectivity loss. </p>
  summary: >-
    <p>Send a cloud to device message to the device with the provided device id.</p>

    <p>This method is a blocking call that will wait for the sent message to be acknowledged by the service before returning. This is provided for simplicity and for applications that aren't concerned with throughput. For applications that need to provided higher throughput of sent cloud to device messages, users should use <xref uid="" data-throw-if-not-resolved="false" data-raw-source="sendAsync(String, Message, Consumer, Object)"></xref> as demonstrated in the messaging client performance sample in this repo. </p>

    <p></p>
  syntax: public void send(String deviceId, Message message)
  uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String,Message)
- fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String deviceId, Message message, int timeoutMilliseconds)
  name: send(String deviceId, Message message, int timeoutMilliseconds)
  nameWithType: MessagingClient.send(String deviceId, Message message, int timeoutMilliseconds)
  parameters:
  - description: <p>the Id of the device to send the cloud to device message to. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the message to send to the device. </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.Message?alt=com.microsoft.azure.sdk.iot.service.messaging.Message&text=Message" data-throw-if-not-resolved="False"/>
  - description: <p>the maximum number of milliseconds to wait for the message to be sent before timing out and throwing an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IotHubException"></xref>. </p>
    name: timeoutMilliseconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any IoT Hub level exception is thrown. For instance, if the provided message exceeds the IoT Hub message size limit, <xref uid="com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException"></xref> will be thrown. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>If this function is interrupted while waiting for the cloud to device message to be acknowledged by the service. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the sent message isn't acknowledged by the service within the provided timeout. </p>
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if the client has not been opened yet, or is closed for any other reason such as connectivity loss. </p>
  summary: >-
    <p>Send a cloud to device message to the device with the provided device id.</p>

    <p>This method is a blocking call that will wait for the sent message to be acknowledged by the service before returning. This is provided for simplicity and for applications that aren't concerned with throughput. For applications that need to provided higher throughput of sent cloud to device messages, users should use <xref uid="" data-throw-if-not-resolved="false" data-raw-source="sendAsync(String, Message, Consumer, Object)"></xref> as demonstrated in the messaging client performance sample in this repo. </p>

    <p></p>
  syntax: public void send(String deviceId, Message message, int timeoutMilliseconds)
  uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String,Message,int)
- fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String deviceId, String moduleId, Message message)
  name: send(String deviceId, String moduleId, Message message)
  nameWithType: MessagingClient.send(String deviceId, String moduleId, Message message)
  parameters:
  - description: <p>the Id of the device that contains the module that the message is being sent to. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Id of the module to send the cloud to device message to. </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the message to send to the device. </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.Message?alt=com.microsoft.azure.sdk.iot.service.messaging.Message&text=Message" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any IoT Hub level exception is thrown. For instance, if the provided message exceeds the IoT Hub message size limit, <xref uid="com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException"></xref> will be thrown. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>If this function is interrupted while waiting for the cloud to device message to be acknowledged by the service. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the sent message isn't acknowledged by the service within the default timeout. </p>
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if the client has not been opened yet, or is closed for any other reason such as connectivity loss. </p>
  summary: >-
    <p>Send a cloud to device message to the module with the provided module id on the device with the provided device Id.</p>

    <p>This method is a blocking call that will wait for the sent message to be acknowledged by the service before returning. This is provided for simplicity and for applications that aren't concerned with throughput. For applications that need to provided higher throughput of sent cloud to device messages, users should use <xref uid="" data-throw-if-not-resolved="false" data-raw-source="sendAsync(String, String, Message, Consumer, Object)"></xref> as demonstrated in the messaging client performance sample in this repo. </p>

    <p></p>
  syntax: public void send(String deviceId, String moduleId, Message message)
  uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String,String,Message)
- fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String deviceId, String moduleId, Message message, int timeoutMilliseconds)
  name: send(String deviceId, String moduleId, Message message, int timeoutMilliseconds)
  nameWithType: MessagingClient.send(String deviceId, String moduleId, Message message, int timeoutMilliseconds)
  parameters:
  - description: <p>the Id of the device that contains the module that the message is being sent to. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Id of the module to send the cloud to device message to. </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the message to send to the device. </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.Message?alt=com.microsoft.azure.sdk.iot.service.messaging.Message&text=Message" data-throw-if-not-resolved="False"/>
  - description: <p>the maximum number of milliseconds to wait for the message to be sent before timing out and throwing an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IotHubException"></xref>. </p>
    name: timeoutMilliseconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any IoT Hub level exception is thrown. For instance, if the provided message exceeds the IoT Hub message size limit, <xref uid="com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException"></xref> will be thrown. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>If this function is interrupted while waiting for the cloud to device message to be acknowledged by the service. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the sent message isn't acknowledged by the service within the provided timeout. </p>
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if the client has not been opened yet, or is closed for any other reason such as connectivity loss. </p>
  summary: >-
    <p>Send a cloud to device message to the module with the provided module id on the device with the provided device Id.</p>

    <p>This method is a blocking call that will wait for the sent message to be acknowledged by the service before returning. This is provided for simplicity and for applications that aren't concerned with throughput. For applications that need to provided higher throughput of sent cloud to device messages, users should use <xref uid="" data-throw-if-not-resolved="false" data-raw-source="sendAsync(String, String, Message, Consumer, Object)"></xref> as demonstrated in the messaging client performance sample in this repo. </p>

    <p></p>
  syntax: public void send(String deviceId, String moduleId, Message message, int timeoutMilliseconds)
  uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send(String,String,Message,int)
uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send*
fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.send
name: send(String deviceId, Message message)
package: com.microsoft.azure.sdk.iot.service.messaging
metadata: {}
