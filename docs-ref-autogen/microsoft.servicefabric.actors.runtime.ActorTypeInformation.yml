### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.ActorTypeInformation()
  name: ActorTypeInformation()
  nameWithType: ActorTypeInformation.ActorTypeInformation()
  summary: <p>Initializes a new instance of the ActorTypeInformation class. </p>
  syntax: public ActorTypeInformation()
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.ActorTypeInformation()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.get(Class<?> actorClass)
  name: get(Class<?> actorClass)
  nameWithType: ActorTypeInformation.get(Class<?> actorClass)
  parameters:
  - description: <p>Type of class implementing the actor to create ActorTypeInforamtion for. </p>
    name: actorClass
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <xref uid="microsoft.servicefabric.actors.runtime.ActorTypeInformation" data-throw-if-not-resolved="false" data-raw-source="ActorTypeInformation"></xref> created from actorType. </p>
    type: <xref href="microsoft.servicefabric.actors.runtime.ActorTypeInformation?alt=microsoft.servicefabric.actors.runtime.ActorTypeInformation&text=ActorTypeInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates <xref uid="microsoft.servicefabric.actors.runtime.ActorTypeInformation" data-throw-if-not-resolved="false" data-raw-source="ActorTypeInformation"></xref> from actorType.</p>

    <p>

    When base type for actorType is not of type <xref uid="microsoft.servicefabric.actors.runtime.ActorBase" data-throw-if-not-resolved="false" data-raw-source="ActorBase"></xref>. </p>

    <p>When actorType does not implement an interface deriving from <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="Actor"></xref> and is not marked as abstract. </p>

    <p>When actorType implements more than one interface which derives from <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="Actor"></xref> but doesn't have <xref uid="microsoft.servicefabric.actors.runtime.ActorServiceAttribute" data-throw-if-not-resolved="false" data-raw-source="ActorServiceAttribute"></xref>. </p>
  syntax: public static ActorTypeInformation get(Class<?> actorClass)
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.get(Class<?>)
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getEventInterfaceTypes()
  name: getEventInterfaceTypes()
  nameWithType: ActorTypeInformation.getEventInterfaceTypes()
  returns:
    description: <p>An enumerator hat can be used to iterate through the actor event interface which the actor class implements. </p>
    type: <xref href="List%3CClass%3C%3F%3E%3E?alt=List%3CClass%3C%3F%3E%3E&text=List%3CClass%3C%3F%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets actor event interface which the actor class implements.</p>

    <p></p>
  syntax: public List<Class<?>> getEventInterfaceTypes()
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getEventInterfaceTypes()
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getImplementationType()
  name: getImplementationType()
  nameWithType: ActorTypeInformation.getImplementationType()
  returns:
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.lang.Class"></xref> type of the class implementing the actor. </p>
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets type of the class implementing the actor.</p>

    <p></p>
  syntax: public Class<?> getImplementationType()
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getImplementationType()
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getInterfaceTypes()
  name: getInterfaceTypes()
  nameWithType: ActorTypeInformation.getInterfaceTypes()
  returns:
    description: <p>An enumerator that can be used to iterate through the actor interface type. </p>
    type: <xref href="List%3CClass%3C%3F%3E%3E?alt=List%3CClass%3C%3F%3E%3E&text=List%3CClass%3C%3F%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the actor interface types which derive from <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="Actor"></xref> and implemented by actor class.</p>

    <p></p>
  syntax: public List<Class<?>> getInterfaceTypes()
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getInterfaceTypes()
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getServiceName()
  name: getServiceName()
  nameWithType: ActorTypeInformation.getServiceName()
  returns:
    description: <p>Service name if specified using <xref uid="microsoft.servicefabric.actors.runtime.ActorServiceAttribute" data-throw-if-not-resolved="false" data-raw-source="ActorServiceAttribute"></xref> for actor class, null if attribute is not used. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets service name if specified using <xref uid="microsoft.servicefabric.actors.runtime.ActorServiceAttribute" data-throw-if-not-resolved="false" data-raw-source="ActorServiceAttribute"></xref> for actor class.</p>

    <p></p>
  syntax: public String getServiceName()
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getServiceName()
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getStatePersistence()
  name: getStatePersistence()
  nameWithType: ActorTypeInformation.getStatePersistence()
  returns:
    description: <p>The <xref uid="microsoft.servicefabric.actors.runtime.StatePersistence" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.runtime.StatePersistence"></xref> representing type of state persistence for the actor. </p>
    type: <xref href="microsoft.servicefabric.actors.runtime.StatePersistence?alt=microsoft.servicefabric.actors.runtime.StatePersistence&text=StatePersistence" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the <xref uid="microsoft.servicefabric.actors.runtime.StatePersistence" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.runtime.StatePersistence"></xref> enum representing type of state persistence for the actor. </p>
  syntax: public StatePersistence getStatePersistence()
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getStatePersistence()
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.isAbstract()
  name: isAbstract()
  nameWithType: ActorTypeInformation.isAbstract()
  returns:
    description: <p>true if class implementing actor is abstract, otherwise false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets if class implementing actor is abstract.</p>

    <p></p>
  syntax: public boolean isAbstract()
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.isAbstract()
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.isRemindable()
  name: isRemindable()
  nameWithType: ActorTypeInformation.isRemindable()
  returns:
    description: <p>true if the actor class implements <xref uid="microsoft.servicefabric.actors.runtime.Remindable" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.runtime.Remindable"></xref>; otherwise false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets a value whether the actor class implements <xref uid="microsoft.servicefabric.actors.runtime.Remindable" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.runtime.Remindable"></xref></p>
  syntax: public boolean isRemindable()
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.isRemindable()
nameWithType: ActorTypeInformation
syntax: public class ActorTypeInformation
type: class
uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation
fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation
name: ActorTypeInformation
package: microsoft.servicefabric.actors.runtime
summary: <p>Contains information about the type implementing an actor. </p>
metadata: {}
