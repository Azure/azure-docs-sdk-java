### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.dag.Graph"
fullName: "com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT,NodeT>"
name: "Graph<DataT,NodeT>"
nameWithType: "Graph<DataT,NodeT>"
summary: "Type representing a directed graph data structure.\n\nEach node in a graph is represented by <xref uid=\"com.microsoft.azure.management.resources.fluentcore.dag.Node\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Node\"></xref>"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Graph<DataT,NodeT>"
constructors:
- "com.microsoft.azure.management.resources.fluentcore.dag.Graph.Graph()"
fields:
- "com.microsoft.azure.management.resources.fluentcore.dag.Graph.nodeTable"
methods:
- "com.microsoft.azure.management.resources.fluentcore.dag.Graph.addNode(NodeT)"
- "com.microsoft.azure.management.resources.fluentcore.dag.Graph.findPath(java.lang.String,java.lang.String)"
- "com.microsoft.azure.management.resources.fluentcore.dag.Graph.getNodes()"
- "com.microsoft.azure.management.resources.fluentcore.dag.Graph.visit(com.microsoft.azure.management.resources.fluentcore.dag.Graph.Visitor)"
type: "class"
typeParameters:
- name: "DataT"
- name: "NodeT"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.dag"
artifact: com.microsoft.azure:azure-mgmt-resources:1.38.1
