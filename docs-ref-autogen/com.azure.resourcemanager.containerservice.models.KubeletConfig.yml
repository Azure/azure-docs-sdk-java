### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig"
fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig"
name: "KubeletConfig"
nameWithType: "KubeletConfig"
summary: "Kubelet configurations of agent nodes. See \\[AKS custom node configuration\\](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class KubeletConfig"
constructors:
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.KubeletConfig()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.KubeletConfig()"
  name: "KubeletConfig()"
  nameWithType: "KubeletConfig.KubeletConfig()"
  syntax: "public KubeletConfig()"
methods:
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.allowedUnsafeSysctls()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.allowedUnsafeSysctls()"
  name: "allowedUnsafeSysctls()"
  nameWithType: "KubeletConfig.allowedUnsafeSysctls()"
  summary: "Get the allowedUnsafeSysctls property: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in \\`\\*\\`)."
  syntax: "public List<String> allowedUnsafeSysctls()"
  returns:
    description: "the allowedUnsafeSysctls value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.containerLogMaxFiles()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.containerLogMaxFiles()"
  name: "containerLogMaxFiles()"
  nameWithType: "KubeletConfig.containerLogMaxFiles()"
  summary: "Get the containerLogMaxFiles property: The maximum number of container log files that can be present for a container. The number must be \\\\u2265 2."
  syntax: "public Integer containerLogMaxFiles()"
  returns:
    description: "the containerLogMaxFiles value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.containerLogMaxSizeMB()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.containerLogMaxSizeMB()"
  name: "containerLogMaxSizeMB()"
  nameWithType: "KubeletConfig.containerLogMaxSizeMB()"
  summary: "Get the containerLogMaxSizeMB property: The maximum size (e.g. 10Mi) of container log file before it is rotated."
  syntax: "public Integer containerLogMaxSizeMB()"
  returns:
    description: "the containerLogMaxSizeMB value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.cpuCfsQuota()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.cpuCfsQuota()"
  name: "cpuCfsQuota()"
  nameWithType: "KubeletConfig.cpuCfsQuota()"
  summary: "Get the cpuCfsQuota property: If CPU CFS quota enforcement is enabled for containers that specify CPU limits. The default is true."
  syntax: "public Boolean cpuCfsQuota()"
  returns:
    description: "the cpuCfsQuota value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.cpuCfsQuotaPeriod()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.cpuCfsQuotaPeriod()"
  name: "cpuCfsQuotaPeriod()"
  nameWithType: "KubeletConfig.cpuCfsQuotaPeriod()"
  summary: "Get the cpuCfsQuotaPeriod property: The CPU CFS quota period value. The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'."
  syntax: "public String cpuCfsQuotaPeriod()"
  returns:
    description: "the cpuCfsQuotaPeriod value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.cpuManagerPolicy()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.cpuManagerPolicy()"
  name: "cpuManagerPolicy()"
  nameWithType: "KubeletConfig.cpuManagerPolicy()"
  summary: "Get the cpuManagerPolicy property: The CPU Manager policy to use. The default is 'none'. See \\[Kubernetes CPU management policies\\](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/\\#cpu-management-policies) for more information. Allowed values are 'none' and 'static'."
  syntax: "public String cpuManagerPolicy()"
  returns:
    description: "the cpuManagerPolicy value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.failSwapOn()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.failSwapOn()"
  name: "failSwapOn()"
  nameWithType: "KubeletConfig.failSwapOn()"
  summary: "Get the failSwapOn property: If set to true it will make the Kubelet fail to start if swap is enabled on the node."
  syntax: "public Boolean failSwapOn()"
  returns:
    description: "the failSwapOn value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.imageGcHighThreshold()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.imageGcHighThreshold()"
  name: "imageGcHighThreshold()"
  nameWithType: "KubeletConfig.imageGcHighThreshold()"
  summary: "Get the imageGcHighThreshold property: The percent of disk usage after which image garbage collection is always run. To disable image garbage collection, set to 100. The default is 85%."
  syntax: "public Integer imageGcHighThreshold()"
  returns:
    description: "the imageGcHighThreshold value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.imageGcLowThreshold()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.imageGcLowThreshold()"
  name: "imageGcLowThreshold()"
  nameWithType: "KubeletConfig.imageGcLowThreshold()"
  summary: "Get the imageGcLowThreshold property: The percent of disk usage before which image garbage collection is never run. This cannot be set higher than imageGcHighThreshold. The default is 80%."
  syntax: "public Integer imageGcLowThreshold()"
  returns:
    description: "the imageGcLowThreshold value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.podMaxPids()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.podMaxPids()"
  name: "podMaxPids()"
  nameWithType: "KubeletConfig.podMaxPids()"
  summary: "Get the podMaxPids property: The maximum number of processes per pod."
  syntax: "public Integer podMaxPids()"
  returns:
    description: "the podMaxPids value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.topologyManagerPolicy()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.topologyManagerPolicy()"
  name: "topologyManagerPolicy()"
  nameWithType: "KubeletConfig.topologyManagerPolicy()"
  summary: "Get the topologyManagerPolicy property: The Topology Manager policy to use. For more information see \\[Kubernetes Topology Manager\\](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'."
  syntax: "public String topologyManagerPolicy()"
  returns:
    description: "the topologyManagerPolicy value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.validate()"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.validate()"
  name: "validate()"
  nameWithType: "KubeletConfig.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withAllowedUnsafeSysctls(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withAllowedUnsafeSysctls(List<String> allowedUnsafeSysctls)"
  name: "withAllowedUnsafeSysctls(List<String> allowedUnsafeSysctls)"
  nameWithType: "KubeletConfig.withAllowedUnsafeSysctls(List<String> allowedUnsafeSysctls)"
  summary: "Set the allowedUnsafeSysctls property: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in \\`\\*\\`)."
  parameters:
  - description: "the allowedUnsafeSysctls value to set."
    name: "allowedUnsafeSysctls"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public KubeletConfig withAllowedUnsafeSysctls(List<String> allowedUnsafeSysctls)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withContainerLogMaxFiles(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withContainerLogMaxFiles(Integer containerLogMaxFiles)"
  name: "withContainerLogMaxFiles(Integer containerLogMaxFiles)"
  nameWithType: "KubeletConfig.withContainerLogMaxFiles(Integer containerLogMaxFiles)"
  summary: "Set the containerLogMaxFiles property: The maximum number of container log files that can be present for a container. The number must be \\\\u2265 2."
  parameters:
  - description: "the containerLogMaxFiles value to set."
    name: "containerLogMaxFiles"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withContainerLogMaxFiles(Integer containerLogMaxFiles)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withContainerLogMaxSizeMB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withContainerLogMaxSizeMB(Integer containerLogMaxSizeMB)"
  name: "withContainerLogMaxSizeMB(Integer containerLogMaxSizeMB)"
  nameWithType: "KubeletConfig.withContainerLogMaxSizeMB(Integer containerLogMaxSizeMB)"
  summary: "Set the containerLogMaxSizeMB property: The maximum size (e.g. 10Mi) of container log file before it is rotated."
  parameters:
  - description: "the containerLogMaxSizeMB value to set."
    name: "containerLogMaxSizeMB"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withContainerLogMaxSizeMB(Integer containerLogMaxSizeMB)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withCpuCfsQuota(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withCpuCfsQuota(Boolean cpuCfsQuota)"
  name: "withCpuCfsQuota(Boolean cpuCfsQuota)"
  nameWithType: "KubeletConfig.withCpuCfsQuota(Boolean cpuCfsQuota)"
  summary: "Set the cpuCfsQuota property: If CPU CFS quota enforcement is enabled for containers that specify CPU limits. The default is true."
  parameters:
  - description: "the cpuCfsQuota value to set."
    name: "cpuCfsQuota"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withCpuCfsQuota(Boolean cpuCfsQuota)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withCpuCfsQuotaPeriod(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withCpuCfsQuotaPeriod(String cpuCfsQuotaPeriod)"
  name: "withCpuCfsQuotaPeriod(String cpuCfsQuotaPeriod)"
  nameWithType: "KubeletConfig.withCpuCfsQuotaPeriod(String cpuCfsQuotaPeriod)"
  summary: "Set the cpuCfsQuotaPeriod property: The CPU CFS quota period value. The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'."
  parameters:
  - description: "the cpuCfsQuotaPeriod value to set."
    name: "cpuCfsQuotaPeriod"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withCpuCfsQuotaPeriod(String cpuCfsQuotaPeriod)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withCpuManagerPolicy(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withCpuManagerPolicy(String cpuManagerPolicy)"
  name: "withCpuManagerPolicy(String cpuManagerPolicy)"
  nameWithType: "KubeletConfig.withCpuManagerPolicy(String cpuManagerPolicy)"
  summary: "Set the cpuManagerPolicy property: The CPU Manager policy to use. The default is 'none'. See \\[Kubernetes CPU management policies\\](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/\\#cpu-management-policies) for more information. Allowed values are 'none' and 'static'."
  parameters:
  - description: "the cpuManagerPolicy value to set."
    name: "cpuManagerPolicy"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withCpuManagerPolicy(String cpuManagerPolicy)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withFailSwapOn(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withFailSwapOn(Boolean failSwapOn)"
  name: "withFailSwapOn(Boolean failSwapOn)"
  nameWithType: "KubeletConfig.withFailSwapOn(Boolean failSwapOn)"
  summary: "Set the failSwapOn property: If set to true it will make the Kubelet fail to start if swap is enabled on the node."
  parameters:
  - description: "the failSwapOn value to set."
    name: "failSwapOn"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withFailSwapOn(Boolean failSwapOn)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withImageGcHighThreshold(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withImageGcHighThreshold(Integer imageGcHighThreshold)"
  name: "withImageGcHighThreshold(Integer imageGcHighThreshold)"
  nameWithType: "KubeletConfig.withImageGcHighThreshold(Integer imageGcHighThreshold)"
  summary: "Set the imageGcHighThreshold property: The percent of disk usage after which image garbage collection is always run. To disable image garbage collection, set to 100. The default is 85%."
  parameters:
  - description: "the imageGcHighThreshold value to set."
    name: "imageGcHighThreshold"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withImageGcHighThreshold(Integer imageGcHighThreshold)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withImageGcLowThreshold(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withImageGcLowThreshold(Integer imageGcLowThreshold)"
  name: "withImageGcLowThreshold(Integer imageGcLowThreshold)"
  nameWithType: "KubeletConfig.withImageGcLowThreshold(Integer imageGcLowThreshold)"
  summary: "Set the imageGcLowThreshold property: The percent of disk usage before which image garbage collection is never run. This cannot be set higher than imageGcHighThreshold. The default is 80%."
  parameters:
  - description: "the imageGcLowThreshold value to set."
    name: "imageGcLowThreshold"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withImageGcLowThreshold(Integer imageGcLowThreshold)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withPodMaxPids(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withPodMaxPids(Integer podMaxPids)"
  name: "withPodMaxPids(Integer podMaxPids)"
  nameWithType: "KubeletConfig.withPodMaxPids(Integer podMaxPids)"
  summary: "Set the podMaxPids property: The maximum number of processes per pod."
  parameters:
  - description: "the podMaxPids value to set."
    name: "podMaxPids"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withPodMaxPids(Integer podMaxPids)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withTopologyManagerPolicy(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubeletConfig.withTopologyManagerPolicy(String topologyManagerPolicy)"
  name: "withTopologyManagerPolicy(String topologyManagerPolicy)"
  nameWithType: "KubeletConfig.withTopologyManagerPolicy(String topologyManagerPolicy)"
  summary: "Set the topologyManagerPolicy property: The Topology Manager policy to use. For more information see \\[Kubernetes Topology Manager\\](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'."
  parameters:
  - description: "the topologyManagerPolicy value to set."
    name: "topologyManagerPolicy"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KubeletConfig withTopologyManagerPolicy(String topologyManagerPolicy)"
  returns:
    description: "the KubeletConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.14.0
