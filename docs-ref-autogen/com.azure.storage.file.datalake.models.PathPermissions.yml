### YamlMime:ManagedReference
items:
- uid: com.azure.storage.file.datalake.models.PathPermissions
  id: PathPermissions
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models
  children:
  - com.azure.storage.file.datalake.models.PathPermissions.PathPermissions()
  - com.azure.storage.file.datalake.models.PathPermissions.equals(java.lang.Object)
  - com.azure.storage.file.datalake.models.PathPermissions.getGroup()
  - com.azure.storage.file.datalake.models.PathPermissions.getOther()
  - com.azure.storage.file.datalake.models.PathPermissions.getOwner()
  - com.azure.storage.file.datalake.models.PathPermissions.hashCode()
  - com.azure.storage.file.datalake.models.PathPermissions.isExtendedInfoInAcl()
  - com.azure.storage.file.datalake.models.PathPermissions.isStickyBitSet()
  - com.azure.storage.file.datalake.models.PathPermissions.parseOctal(java.lang.String)
  - com.azure.storage.file.datalake.models.PathPermissions.parseSymbolic(java.lang.String)
  - com.azure.storage.file.datalake.models.PathPermissions.setGroup(com.azure.storage.file.datalake.models.RolePermissions)
  - com.azure.storage.file.datalake.models.PathPermissions.setOther(com.azure.storage.file.datalake.models.RolePermissions)
  - com.azure.storage.file.datalake.models.PathPermissions.setOwner(com.azure.storage.file.datalake.models.RolePermissions)
  - com.azure.storage.file.datalake.models.PathPermissions.setStickyBit(boolean)
  - com.azure.storage.file.datalake.models.PathPermissions.toString()
  langs:
  - java
  name: PathPermissions
  nameWithType: PathPermissions
  fullName: com.azure.storage.file.datalake.models.PathPermissions
  type: Class
  package: com.azure.storage.file.datalake.models
  summary: Represents POSIX-style permissions on a given resource. Each resource specifies permissions for the owner, the owning group, and everyone else. Permissions for users or groups not included here can be set using an Access Control List. Manipulating resource permissions is only supported when ADLS interop and Hierarchical Namespace are enabled.
  syntax:
    content: public class PathPermissions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.file.datalake.models.PathPermissions.PathPermissions()
  id: PathPermissions()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: PathPermissions()
  nameWithType: PathPermissions.PathPermissions()
  fullName: com.azure.storage.file.datalake.models.PathPermissions.PathPermissions()
  overload: com.azure.storage.file.datalake.models.PathPermissions.PathPermissions*
  type: Constructor
  package: com.azure.storage.file.datalake.models
  summary: Initializes a new instance of `PathPermissions` by setting each member to a new instance of <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref>.
  syntax:
    content: public PathPermissions()
- uid: com.azure.storage.file.datalake.models.PathPermissions.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: equals(Object o)
  nameWithType: PathPermissions.equals(Object o)
  fullName: com.azure.storage.file.datalake.models.PathPermissions.equals(Object o)
  overload: com.azure.storage.file.datalake.models.PathPermissions.equals*
  type: Method
  package: com.azure.storage.file.datalake.models
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.storage.file.datalake.models.PathPermissions.getGroup()
  id: getGroup()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: getGroup()
  nameWithType: PathPermissions.getGroup()
  fullName: com.azure.storage.file.datalake.models.PathPermissions.getGroup()
  overload: com.azure.storage.file.datalake.models.PathPermissions.getGroup*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Returns the <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> for the owning group of the resource.
  syntax:
    content: public RolePermissions getGroup()
    return:
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: the <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> for the owning group of the resource.
- uid: com.azure.storage.file.datalake.models.PathPermissions.getOther()
  id: getOther()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: getOther()
  nameWithType: PathPermissions.getOther()
  fullName: com.azure.storage.file.datalake.models.PathPermissions.getOther()
  overload: com.azure.storage.file.datalake.models.PathPermissions.getOther*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Returns the <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> for the other users.
  syntax:
    content: public RolePermissions getOther()
    return:
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: the <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> for the other users.
- uid: com.azure.storage.file.datalake.models.PathPermissions.getOwner()
  id: getOwner()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: getOwner()
  nameWithType: PathPermissions.getOwner()
  fullName: com.azure.storage.file.datalake.models.PathPermissions.getOwner()
  overload: com.azure.storage.file.datalake.models.PathPermissions.getOwner*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Returns the <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> for the owner of the resource.
  syntax:
    content: public RolePermissions getOwner()
    return:
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: the <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> for the owner of the resource.
- uid: com.azure.storage.file.datalake.models.PathPermissions.hashCode()
  id: hashCode()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: hashCode()
  nameWithType: PathPermissions.hashCode()
  fullName: com.azure.storage.file.datalake.models.PathPermissions.hashCode()
  overload: com.azure.storage.file.datalake.models.PathPermissions.hashCode*
  type: Method
  package: com.azure.storage.file.datalake.models
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.storage.file.datalake.models.PathPermissions.isExtendedInfoInAcl()
  id: isExtendedInfoInAcl()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: isExtendedInfoInAcl()
  nameWithType: PathPermissions.isExtendedInfoInAcl()
  fullName: com.azure.storage.file.datalake.models.PathPermissions.isExtendedInfoInAcl()
  overload: com.azure.storage.file.datalake.models.PathPermissions.isExtendedInfoInAcl*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Returns whether or not there is more permissions information in the ACLs. The permissions string only returns information on the owner, owning group, and other, but the ACLs may contain more permissions for specific users or groups.
  syntax:
    content: public boolean isExtendedInfoInAcl()
    return:
      type: boolean
      description: <code>true</code> if there is more information in the ACL. <code>false</code> otherwise.
- uid: com.azure.storage.file.datalake.models.PathPermissions.isStickyBitSet()
  id: isStickyBitSet()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: isStickyBitSet()
  nameWithType: PathPermissions.isStickyBitSet()
  fullName: com.azure.storage.file.datalake.models.PathPermissions.isStickyBitSet()
  overload: com.azure.storage.file.datalake.models.PathPermissions.isStickyBitSet*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Returns whether or not the sticky bit has been set. The sticky bit may be set on directories, the files in that directory may only be renamed or deleted by the file's owner, the directory's owner, or the root user.
  syntax:
    content: public boolean isStickyBitSet()
    return:
      type: boolean
      description: <code>true</code> if the sticky bit is set and <code>false</code> otherwise.
- uid: com.azure.storage.file.datalake.models.PathPermissions.parseOctal(java.lang.String)
  id: parseOctal(java.lang.String)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: parseOctal(String octal)
  nameWithType: PathPermissions.parseOctal(String octal)
  fullName: com.azure.storage.file.datalake.models.PathPermissions.parseOctal(String octal)
  overload: com.azure.storage.file.datalake.models.PathPermissions.parseOctal*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Converts an octal string into a `PathPermissions` object. e.g. 1752 0/1 in the first digit indicates sticky bit. Each subsequent octal character can be expanded into three bits. In order of MSB to LSB, the bits represent read, write, execute.
  syntax:
    content: public static PathPermissions parseOctal(String octal)
    parameters:
    - id: octal
      type: java.lang.String
      description: The octal representation of the permissions.
    return:
      type: com.azure.storage.file.datalake.models.PathPermissions
      description: The permissions parsed out into a <code>PathPermissions</code> instance.
- uid: com.azure.storage.file.datalake.models.PathPermissions.parseSymbolic(java.lang.String)
  id: parseSymbolic(java.lang.String)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: parseSymbolic(String str)
  nameWithType: PathPermissions.parseSymbolic(String str)
  fullName: com.azure.storage.file.datalake.models.PathPermissions.parseSymbolic(String str)
  overload: com.azure.storage.file.datalake.models.PathPermissions.parseSymbolic*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Converts a symbolic representation of the permissions into a `PathPermissions` object. e.g. rwxr-x-wT Each set of three characters correspondes to owner, owning group, and other respectively. 'r', 'w', and 'x' respectively refer to read, write, and execute. A '-' indicates the permission is not given. The sticky bit, if set, takes the place of the last execute bit; a 't' takes the place of 'x' and a 'T' takes the place of '-'.
  syntax:
    content: public static PathPermissions parseSymbolic(String str)
    parameters:
    - id: str
      type: java.lang.String
      description: The symbolic representation of the permissions.
    return:
      type: com.azure.storage.file.datalake.models.PathPermissions
      description: The permissions parsed out into a <code>PathPermissions</code> instance.
- uid: com.azure.storage.file.datalake.models.PathPermissions.setGroup(com.azure.storage.file.datalake.models.RolePermissions)
  id: setGroup(com.azure.storage.file.datalake.models.RolePermissions)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: setGroup(RolePermissions group)
  nameWithType: PathPermissions.setGroup(RolePermissions group)
  fullName: com.azure.storage.file.datalake.models.PathPermissions.setGroup(RolePermissions group)
  overload: com.azure.storage.file.datalake.models.PathPermissions.setGroup*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Sets the permissions for the owning group of the resource.
  syntax:
    content: public PathPermissions setGroup(RolePermissions group)
    parameters:
    - id: group
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: The <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> that specify what permissions the owning group should have.
    return:
      type: com.azure.storage.file.datalake.models.PathPermissions
      description: The updated PathPermissions object.
- uid: com.azure.storage.file.datalake.models.PathPermissions.setOther(com.azure.storage.file.datalake.models.RolePermissions)
  id: setOther(com.azure.storage.file.datalake.models.RolePermissions)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: setOther(RolePermissions other)
  nameWithType: PathPermissions.setOther(RolePermissions other)
  fullName: com.azure.storage.file.datalake.models.PathPermissions.setOther(RolePermissions other)
  overload: com.azure.storage.file.datalake.models.PathPermissions.setOther*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Sets the permissions for the other users of the resource.
  syntax:
    content: public PathPermissions setOther(RolePermissions other)
    parameters:
    - id: other
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: The <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> that specify what permissions other users should have.
    return:
      type: com.azure.storage.file.datalake.models.PathPermissions
      description: The updated PathPermissions object.
- uid: com.azure.storage.file.datalake.models.PathPermissions.setOwner(com.azure.storage.file.datalake.models.RolePermissions)
  id: setOwner(com.azure.storage.file.datalake.models.RolePermissions)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: setOwner(RolePermissions owner)
  nameWithType: PathPermissions.setOwner(RolePermissions owner)
  fullName: com.azure.storage.file.datalake.models.PathPermissions.setOwner(RolePermissions owner)
  overload: com.azure.storage.file.datalake.models.PathPermissions.setOwner*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Sets the permissions for the owner of the resource.
  syntax:
    content: public PathPermissions setOwner(RolePermissions owner)
    parameters:
    - id: owner
      type: com.azure.storage.file.datalake.models.RolePermissions
      description: The <xref uid="com.azure.storage.file.datalake.models.RolePermissions" data-throw-if-not-resolved="false">RolePermissions</xref> that specify what permissions the owner should have.
    return:
      type: com.azure.storage.file.datalake.models.PathPermissions
      description: The updated PathPermissions object.
- uid: com.azure.storage.file.datalake.models.PathPermissions.setStickyBit(boolean)
  id: setStickyBit(boolean)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: setStickyBit(boolean hasStickyBit)
  nameWithType: PathPermissions.setStickyBit(boolean hasStickyBit)
  fullName: com.azure.storage.file.datalake.models.PathPermissions.setStickyBit(boolean hasStickyBit)
  overload: com.azure.storage.file.datalake.models.PathPermissions.setStickyBit*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Sets the value of the sticky bit. The sticky bit may be set on directories, the files in that directory may only be renamed or deleted by the file's owner, the directory's owner, or the root user.
  syntax:
    content: public PathPermissions setStickyBit(boolean hasStickyBit)
    parameters:
    - id: hasStickyBit
      type: boolean
      description: <code>True</code> to set the sticky bit and <code>false</code> to clear it.
    return:
      type: com.azure.storage.file.datalake.models.PathPermissions
      description: The updated PathPermissions object.
- uid: com.azure.storage.file.datalake.models.PathPermissions.toString()
  id: toString()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.models.PathPermissions
  langs:
  - java
  name: toString()
  nameWithType: PathPermissions.toString()
  fullName: com.azure.storage.file.datalake.models.PathPermissions.toString()
  overload: com.azure.storage.file.datalake.models.PathPermissions.toString*
  type: Method
  package: com.azure.storage.file.datalake.models
  summary: Converts this object into its octal representation.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
      description: A <code>String</code> that represents the permissions in octal.
references:
- uid: com.azure.storage.file.datalake.models.PathPermissions.PathPermissions*
  name: PathPermissions
  nameWithType: PathPermissions.PathPermissions
  fullName: com.azure.storage.file.datalake.models.PathPermissions.PathPermissions
  package: com.azure.storage.file.datalake.models
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.storage.file.datalake.models.PathPermissions.equals*
  name: equals
  nameWithType: PathPermissions.equals
  fullName: com.azure.storage.file.datalake.models.PathPermissions.equals
  package: com.azure.storage.file.datalake.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.storage.file.datalake.models.PathPermissions.hashCode*
  name: hashCode
  nameWithType: PathPermissions.hashCode
  fullName: com.azure.storage.file.datalake.models.PathPermissions.hashCode
  package: com.azure.storage.file.datalake.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.file.datalake.models.PathPermissions.parseOctal*
  name: parseOctal
  nameWithType: PathPermissions.parseOctal
  fullName: com.azure.storage.file.datalake.models.PathPermissions.parseOctal
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.parseSymbolic*
  name: parseSymbolic
  nameWithType: PathPermissions.parseSymbolic
  fullName: com.azure.storage.file.datalake.models.PathPermissions.parseSymbolic
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.toString*
  name: toString
  nameWithType: PathPermissions.toString
  fullName: com.azure.storage.file.datalake.models.PathPermissions.toString
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.RolePermissions
  name: RolePermissions
  nameWithType: RolePermissions
  fullName: com.azure.storage.file.datalake.models.RolePermissions
- uid: com.azure.storage.file.datalake.models.PathPermissions.getOwner*
  name: getOwner
  nameWithType: PathPermissions.getOwner
  fullName: com.azure.storage.file.datalake.models.PathPermissions.getOwner
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.getGroup*
  name: getGroup
  nameWithType: PathPermissions.getGroup
  fullName: com.azure.storage.file.datalake.models.PathPermissions.getGroup
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.getOther*
  name: getOther
  nameWithType: PathPermissions.getOther
  fullName: com.azure.storage.file.datalake.models.PathPermissions.getOther
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.setOwner*
  name: setOwner
  nameWithType: PathPermissions.setOwner
  fullName: com.azure.storage.file.datalake.models.PathPermissions.setOwner
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.setGroup*
  name: setGroup
  nameWithType: PathPermissions.setGroup
  fullName: com.azure.storage.file.datalake.models.PathPermissions.setGroup
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.setOther*
  name: setOther
  nameWithType: PathPermissions.setOther
  fullName: com.azure.storage.file.datalake.models.PathPermissions.setOther
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.isStickyBitSet*
  name: isStickyBitSet
  nameWithType: PathPermissions.isStickyBitSet
  fullName: com.azure.storage.file.datalake.models.PathPermissions.isStickyBitSet
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.setStickyBit*
  name: setStickyBit
  nameWithType: PathPermissions.setStickyBit
  fullName: com.azure.storage.file.datalake.models.PathPermissions.setStickyBit
  package: com.azure.storage.file.datalake.models
- uid: com.azure.storage.file.datalake.models.PathPermissions.isExtendedInfoInAcl*
  name: isExtendedInfoInAcl
  nameWithType: PathPermissions.isExtendedInfoInAcl
  fullName: com.azure.storage.file.datalake.models.PathPermissions.isExtendedInfoInAcl
  package: com.azure.storage.file.datalake.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
