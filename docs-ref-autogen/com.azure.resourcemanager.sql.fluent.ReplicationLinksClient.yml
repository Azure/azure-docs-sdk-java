### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  id: ReplicationLinksClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent
  children:
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  langs:
  - java
  name: ReplicationLinksClient
  nameWithType: ReplicationLinksClient
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  type: Interface
  package: com.azure.resourcemanager.sql.fluent
  summary: An instance of this class provides access to all the operations defined in ReplicationLinksClient.
  syntax:
    content: public interface ReplicationLinksClient
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginFailoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginFailoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginUnlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.beginUnlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginUnlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: delete(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.delete(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public abstract void delete(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.deleteWithResponse(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponse(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public abstract Response<Void> deleteWithResponse(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public abstract Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failover(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failover(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public abstract void failover(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.failover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public abstract void failover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public abstract void failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public abstract void failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public abstract Mono<Void> failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public abstract Mono<Void> failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: get(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.get(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public abstract ReplicationLinkInner get(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.getAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public abstract Mono<ReplicationLinkInner> getAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.getWithResponse(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponse(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public abstract Response<ReplicationLinkInner> getWithResponse(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public abstract Mono<Response<ReplicationLinkInner>> getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>>
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabase(String resourceGroupName, String serverName, String databaseName)
  nameWithType: ReplicationLinksClient.listByDatabase(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public abstract PagedIterable<ReplicationLinkInner> listByDatabase(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabase(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: ReplicationLinksClient.listByDatabase(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public abstract PagedIterable<ReplicationLinkInner> listByDatabase(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: ReplicationLinksClient.listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public abstract PagedFlux<ReplicationLinkInner> listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlink(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract void unlink(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract void unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract void unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract Mono<Void> unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract Mono<Void> unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ReplicationLinksClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync*
  name: deleteAsync
  nameWithType: ReplicationLinksClient.deleteAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete*
  name: delete
  nameWithType: ReplicationLinksClient.delete
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: ReplicationLinksClient.deleteWithResponse
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponse
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ReplicationLinksClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync*
  name: getAsync
  nameWithType: ReplicationLinksClient.getAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
  name: ReplicationLinkInner
  nameWithType: ReplicationLinkInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get*
  name: get
  nameWithType: ReplicationLinksClient.get
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponse*
  name: getWithResponse
  nameWithType: ReplicationLinksClient.getWithResponse
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponse
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync*
  name: failoverWithResponseAsync
  nameWithType: ReplicationLinksClient.failoverWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAsync*
  name: beginFailoverAsync
  nameWithType: ReplicationLinksClient.beginFailoverAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover*
  name: beginFailover
  nameWithType: ReplicationLinksClient.beginFailover
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync*
  name: failoverAsync
  nameWithType: ReplicationLinksClient.failoverAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover*
  name: failover
  nameWithType: ReplicationLinksClient.failover
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync*
  name: failoverAllowDataLossWithResponseAsync
  nameWithType: ReplicationLinksClient.failoverAllowDataLossWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossAsync*
  name: beginFailoverAllowDataLossAsync
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss*
  name: beginFailoverAllowDataLoss
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLoss
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync*
  name: failoverAllowDataLossAsync
  nameWithType: ReplicationLinksClient.failoverAllowDataLossAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss*
  name: failoverAllowDataLoss
  nameWithType: ReplicationLinksClient.failoverAllowDataLoss
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync*
  name: unlinkWithResponseAsync
  nameWithType: ReplicationLinksClient.unlinkWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkAsync*
  name: beginUnlinkAsync
  nameWithType: ReplicationLinksClient.beginUnlinkAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink*
  name: beginUnlink
  nameWithType: ReplicationLinksClient.beginUnlink
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync*
  name: unlinkAsync
  nameWithType: ReplicationLinksClient.unlinkAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink*
  name: unlink
  nameWithType: ReplicationLinksClient.unlink
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync*
  name: listByDatabaseAsync
  nameWithType: ReplicationLinksClient.listByDatabaseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ReplicationLinkInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase*
  name: listByDatabase
  nameWithType: ReplicationLinksClient.listByDatabase
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
