### YamlMime:JavaType
uid: "com.azure.storage.internal.avro.implementation.schema.primitive.AvroLongSchema"
fullName: "com.azure.storage.internal.avro.implementation.schema.primitive.AvroLongSchema"
name: "AvroLongSchema"
nameWithType: "AvroLongSchema"
summary: "long values are written using variable-length zig-zag coding. The equivalent while loop version of the code would look like this. byte b = this.state.consume() & 0xFF; long n = b & 0x7F; long shift = 7; while ((b & 0x80) != 0) \\{ b = this.state.consume() & 0xFF; next |= (b & 0x7F) << shift; shift += 7; \\} long value = next; return (n >> 1) ^ -(n & 1);"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.storage.internal.avro.implementation.schema.AvroSchema\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.storage.internal.avro.implementation.schema.AvroSimpleSchema\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.checkType(java.lang.String,java.lang.Object,java.lang.Class<?>)"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.getBytes(java.util.List<?>)"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.getSchema(com.azure.storage.internal.avro.implementation.schema.AvroType,com.azure.storage.internal.avro.implementation.AvroParserState,java.util.function.Consumer<java.lang.Object>)"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.isDone()"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.publishResult()"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.pushToStack()"
- "com.azure.storage.internal.avro.implementation.schema.AvroSimpleSchema.canProgress()"
- "com.azure.storage.internal.avro.implementation.schema.AvroSimpleSchema.progress()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AvroLongSchema extends AvroSimpleSchema"
constructors:
- "com.azure.storage.internal.avro.implementation.schema.primitive.AvroLongSchema.AvroLongSchema(com.azure.storage.internal.avro.implementation.AvroParserState,java.util.function.Consumer<java.lang.Object>)"
methods:
- "com.azure.storage.internal.avro.implementation.schema.primitive.AvroLongSchema.canProgress()"
- "com.azure.storage.internal.avro.implementation.schema.primitive.AvroLongSchema.progress()"
- "com.azure.storage.internal.avro.implementation.schema.primitive.AvroLongSchema.pushToStack()"
type: "class"
metadata: {}
package: "com.azure.storage.internal.avro.implementation.schema.primitive"
artifact: com.azure:azure-storage-internal-avro:12.0.2
