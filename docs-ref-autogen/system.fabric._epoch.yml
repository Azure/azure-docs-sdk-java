### YamlMime:ManagedReference
items:
- uid: system.fabric._epoch
  id: _epoch
  parent: system.fabric
  children:
  - system.fabric._epoch.compareTo(Epoch)
  - system.fabric._epoch.Epoch(long,long)
  - system.fabric._epoch.equals(Object)
  - system.fabric._epoch.getConfigurationNumber()
  - system.fabric._epoch.getDataLossNumber()
  - system.fabric._epoch.hashCode()
  - system.fabric._epoch.setConfigurationNumber(long)
  - system.fabric._epoch.setDataLossNumber(long)
  href: system.fabric._epoch.yml
  langs:
  - java
  name: Epoch
  nameWithType: Epoch
  fullName: system.fabric.Epoch
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 22
  package: system.fabric
  summary: "<p>Represents the current version of the partition in Service Fabric. </p>\r\n<p>\r\n  <b>Remarks:</b>An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica. The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica. To track that the Primary replica has changed has to be communicated to the Secondary replica. This communication occurs via the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> method. Most services can ignore the details of the inner fields of the Epoch as it is usually sufficient to know that the Epoch has changed and to compare Epochs to determine relative ordering of operations and events in the system. Comparison operations are provided for this purpose. </p>"
  syntax: &o1
    content: public class Epoch
  inheritance:
  - java.lang.Object
  - Serializable
- uid: system.fabric._epoch.compareTo(Epoch)
  id: compareTo(Epoch)
  parent: system.fabric._epoch
  href: system.fabric._epoch.yml
  langs:
  - java
  name: compareTo(Epoch other)
  nameWithType: Epoch.compareTo(Epoch other)
  fullName: system.fabric.Epoch.compareTo(Epoch other)
  overload: system.fabric._epoch.compareTo*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 161
  package: system.fabric
  summary: "<p>Compares two <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref> objects. </p>"
  syntax:
    content: public int compareTo(Epoch other)
    parameters:
    - id: other
      type: system.fabric._epoch
      description: <p>another <xref uid="" data-throw-if-not-resolved="false">system.fabric.Epoch</xref> object. </p>
    return:
      type: f75371fa
      description: <p>0, if they are equal, -1 if first is less than other. 1 if fist is greater that passed <xref uid="" data-throw-if-not-resolved="false">system.fabric.Epoch</xref> object. </p>
- uid: system.fabric._epoch.Epoch(long,long)
  id: Epoch(long,long)
  parent: system.fabric._epoch
  href: system.fabric._epoch.yml
  langs:
  - java
  name: Epoch(long dataLossNumber, long configurationNumber)
  nameWithType: Epoch.Epoch(long dataLossNumber, long configurationNumber)
  fullName: system.fabric.Epoch.Epoch(long dataLossNumber, long configurationNumber)
  overload: system.fabric._epoch.Epoch*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 44
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref> class with the specified data loss number and configuration number.</p>\r\n<p></p>"
  syntax:
    content: public Epoch(long dataLossNumber, long configurationNumber)
    parameters:
    - id: dataLossNumber
      type: 0364520f
      description: <p>A long representing an increasing value which is updated whenever data loss is suspected. </p>
    - id: configurationNumber
      type: 0364520f
      description: <p>A long representing an increasing value that is updated whenever the configuration of this replica set changes. </p>
- uid: system.fabric._epoch.equals(Object)
  id: equals(Object)
  parent: system.fabric._epoch
  href: system.fabric._epoch.yml
  langs:
  - java
  name: equals(Object obj)
  nameWithType: Epoch.equals(Object obj)
  fullName: system.fabric.Epoch.equals(Object obj)
  overload: system.fabric._epoch.equals*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 134
  package: system.fabric
  summary: "<p>Compares the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref> object with the passed <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref> object. </p>"
  syntax:
    content: public boolean equals(Object obj)
    parameters:
    - id: obj
      type: "79317049"
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">system.fabric.Epoch</xref> object. </p>
    return:
      type: 4fc6e284
      description: '<p>boolean value: true, if they are equal. false otherwise. </p>'
- uid: system.fabric._epoch.getConfigurationNumber()
  id: getConfigurationNumber()
  parent: system.fabric._epoch
  href: system.fabric._epoch.yml
  langs:
  - java
  name: getConfigurationNumber()
  nameWithType: Epoch.getConfigurationNumber()
  fullName: system.fabric.Epoch.getConfigurationNumber()
  overload: system.fabric._epoch.getConfigurationNumber*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 91
  package: system.fabric
  summary: "<p>Gets the current configuration number property in this <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref>.</p>\r\n<p>\r\n  <b>Remarks:</b>The configuration number is an increasing value that is updated whenever the configuration of this replica set changes. The services are informed of the current configuration number only when <xref uid=\"system.fabric._replicator.updateEpochAsync(Epoch,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator#updateEpochAsync(system.fabric.Epoch, system.fabric.CancellationToken)</xref> method is called as a result of an attempt to change the Primary replica of the replica set. </p>"
  syntax:
    content: public long getConfigurationNumber()
    return:
      type: 0364520f
      description: <p>A long representing the configuration number. </p>
- uid: system.fabric._epoch.getDataLossNumber()
  id: getDataLossNumber()
  parent: system.fabric._epoch
  href: system.fabric._epoch.yml
  langs:
  - java
  name: getDataLossNumber()
  nameWithType: Epoch.getDataLossNumber()
  fullName: system.fabric.Epoch.getDataLossNumber()
  overload: system.fabric._epoch.getDataLossNumber*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 59
  package: system.fabric
  summary: "<p>Gets the current data loss number in this <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref>.</p>\r\n<p>\r\n  <b>Remarks:</b>The data loss number property is an increasing value which is updated whenever data loss is suspected, as when loss of a quorum of replicas in the replica set that includes the Primary replica. </p>"
  syntax:
    content: public long getDataLossNumber()
    return:
      type: 0364520f
      description: <p>A long representing the current data loss number. </p>
- uid: system.fabric._epoch.hashCode()
  id: hashCode()
  parent: system.fabric._epoch
  href: system.fabric._epoch.yml
  langs:
  - java
  name: hashCode()
  nameWithType: Epoch.hashCode()
  fullName: system.fabric.Epoch.hashCode()
  overload: system.fabric._epoch.hashCode*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 119
  package: system.fabric
  summary: "<p>Gets the hashCode of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref> object. </p>"
  syntax:
    content: public int hashCode()
    return:
      type: f75371fa
      description: <p>integer value representing hashCode of the <xref uid="" data-throw-if-not-resolved="false">system.fabric.Epoch</xref> object. </p>
- uid: system.fabric._epoch.setConfigurationNumber(long)
  id: setConfigurationNumber(long)
  parent: system.fabric._epoch
  href: system.fabric._epoch.yml
  langs:
  - java
  name: setConfigurationNumber(long configurationNumber)
  nameWithType: Epoch.setConfigurationNumber(long configurationNumber)
  fullName: system.fabric.Epoch.setConfigurationNumber(long configurationNumber)
  overload: system.fabric._epoch.setConfigurationNumber*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 109
  package: system.fabric
  summary: "<p>Sets the current configuration number property in this <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref>.</p>\r\n<p>\r\n  <b>Remarks:</b>The configuration number is an increasing value that is updated whenever the configuration of this replica set changes. The services are informed of the current configuration number only when <xref uid=\"system.fabric._replicator.updateEpochAsync(Epoch,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator#updateEpochAsync(system.fabric.Epoch, system.fabric.CancellationToken)</xref> method is called as a result of an attempt to change the Primary replica of the replica set. </p>"
  syntax:
    content: public void setConfigurationNumber(long configurationNumber)
    parameters:
    - id: configurationNumber
      type: 0364520f
      description: <p>A long representing the configuration number. </p>
- uid: system.fabric._epoch.setDataLossNumber(long)
  id: setDataLossNumber(long)
  parent: system.fabric._epoch
  href: system.fabric._epoch.yml
  langs:
  - java
  name: setDataLossNumber(long dataLossNumber)
  nameWithType: Epoch.setDataLossNumber(long dataLossNumber)
  fullName: system.fabric.Epoch.setDataLossNumber(long dataLossNumber)
  overload: system.fabric._epoch.setDataLossNumber*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
    startLine: 74
  package: system.fabric
  summary: "<p>Sets the current data loss number in this <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref>.</p>\r\n<p>\r\n  <b>Remarks:</b>The data loss number property is a monotonically increasing value which is updated whenever data loss is suspected, as when loss of a quorum of replicas in the replica set that includes the Primary replica. </p>"
  syntax:
    content: public void setDataLossNumber(long dataLossNumber)
    parameters:
    - id: dataLossNumber
      type: 0364520f
      description: <p>A long representing the current data loss number. </p>
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._epoch.Epoch*
  name: Epoch
  nameWithType: Epoch.Epoch
  fullName: system.fabric.Epoch.Epoch
  package: system.fabric
- uid: system.fabric._epoch.getDataLossNumber*
  name: getDataLossNumber
  nameWithType: Epoch.getDataLossNumber
  fullName: system.fabric.Epoch.getDataLossNumber
  package: system.fabric
- uid: system.fabric._epoch.setDataLossNumber*
  name: setDataLossNumber
  nameWithType: Epoch.setDataLossNumber
  fullName: system.fabric.Epoch.setDataLossNumber
  package: system.fabric
- uid: system.fabric._epoch.getConfigurationNumber*
  name: getConfigurationNumber
  nameWithType: Epoch.getConfigurationNumber
  fullName: system.fabric.Epoch.getConfigurationNumber
  package: system.fabric
- uid: system.fabric._epoch.setConfigurationNumber*
  name: setConfigurationNumber
  nameWithType: Epoch.setConfigurationNumber
  fullName: system.fabric.Epoch.setConfigurationNumber
  package: system.fabric
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: system.fabric._epoch.hashCode*
  name: hashCode
  nameWithType: Epoch.hashCode
  fullName: system.fabric.Epoch.hashCode
  package: system.fabric
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: system.fabric._epoch.equals*
  name: equals
  nameWithType: Epoch.equals
  fullName: system.fabric.Epoch.equals
  package: system.fabric
- uid: system.fabric._epoch.compareTo*
  name: compareTo
  nameWithType: Epoch.compareTo
  fullName: system.fabric.Epoch.compareTo
  package: system.fabric
- uid: system.fabric._replicator.updateEpochAsync(Epoch,CancellationToken)
  parent: system.fabric._replicator
  href: system.fabric._replicator.yml
  name: updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)
  nameWithType: Replicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)
  fullName: system.fabric.Replicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)
  type: Method
  summary: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public CompletableFuture updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)
    parameters:
    - id: epoch
      type: system.fabric._epoch
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: <p>The <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object that the operation is observing. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation might still be completed even if it is canceled. </p>
    return:
      type: 5f2aaa64
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. The future completes exceptionally with <xref uid="" data-throw-if-not-resolved="false">FabricException</xref> for fabric related failures. </p>
- uid: system.fabric._epoch
  parent: system.fabric
  href: system.fabric._epoch.yml
  name: Epoch
  nameWithType: Epoch
  fullName: system.fabric.Epoch
  type: Class
  summary: >-
    <p>Represents the current version of the partition in Service Fabric. </p>

    <p>

      <b>Remarks:</b>An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica. The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica. To track that the Primary replica has changed has to be communicated to the Secondary replica. This communication occurs via the <xref uid="system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StateProvider#updateEpochAsync(system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> method. Most services can ignore the details of the inner fields of the Epoch as it is usually sufficient to know that the Epoch has changed and to compare Epochs to determine relative ordering of operations and events in the system. Comparison operations are provided for this purpose. </p>
  syntax: *o1
- uid: system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)
  parent: system.fabric._state_provider
  href: system.fabric._state_provider.yml
  name: updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)
  nameWithType: StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)
  fullName: system.fabric.StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Indicates to a replica that the configuration of a replica set has changed due to a change or attempted change to the Primary replica. The change occurs due to failure or load balancing of the previous Primary replica. Epoch changes act as a barrier by segmenting operations into the exact configuration periods in which they were sent by a specific Primary replica.</p>

    <p>

      <b>Remarks:</b>The information in the <xref uid="system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StateProvider#updateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref> method enables the service to maintain a progress vector, which is a list of each epoch that the replica has received, and the maximum LSN that they contained. The progress vector data along with the current applied maximum LSN is useful for a Secondary replica to send during the copy operation to describe the state of the replica. Comparing progress vectors that are received from Secondary replicas during the copy operation enables Primary replicas to determine whether the Secondary replica is up-to-date, what state must be sent to the Secondary replica, and whether the Secondary replica has made false progress. False progress means that a secondary replica reports an LSN in a previous epoch was greater than the LSN that the Primary replica has in its progress vector. </p>
  syntax:
    content: public CompletableFuture<?> updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)
    parameters:
    - id: epoch
      type: system.fabric._epoch
      description: <p>The new <xref uid="system.fabric._epoch" data-throw-if-not-resolved="false">system.fabric.Epoch</xref>. </p>
    - id: previousEpochLastSequenceNumber
      type: system.fabric._sequence_number
      description: <p>The maximum sequence number (LSN) in the previous epoch. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>. </p>
