### YamlMime:JavaMember
nameWithType: MultiShardConnection.createCommand
type: method
members:
- fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection.createCommand()
  name: createCommand()
  nameWithType: MultiShardConnection.createCommand()
  returns:
    description: <p>the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement" data-throw-if-not-resolved="false">MultiShardStatement</xref> with CommandText set to null. </p>
    type: <xref href="com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement?alt=com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement&text=MultiShardStatement" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates and returns a <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement" data-throw-if-not-resolved="false">MultiShardStatement</xref> object. The <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement" data-throw-if-not-resolved="false">MultiShardStatement</xref> object can then be used to execute a command against all shards specified in the connection.</p>

    <p></p>
  syntax: public MultiShardStatement createCommand()
  uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection.createCommand()
uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection.createCommand*
fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection.createCommand()
name: createCommand()
package: com.microsoft.azure.elasticdb.query.multishard
metadata: {}
