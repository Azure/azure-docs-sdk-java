### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver
  id: PropertyResolver
  parent: com.microsoft.azure.storage.table
  children:
  - com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.propertyResolver(String,String,String,String)
  href: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.yml
  langs:
  - java
  name: TableRequestOptions.PropertyResolver
  nameWithType: TableRequestOptions.PropertyResolver
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver
  type: Interface
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 32
  package: com.microsoft.azure.storage.table
  summary: "<p>The interface whose function is used to get the <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType\"></xref> for an entity property given the partition key, row, key, and the property name, if the interface is implemented </p>"
  syntax:
    content: public interface PropertyResolver
- uid: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.propertyResolver(String,String,String,String)
  id: propertyResolver(String,String,String,String)
  parent: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver
  href: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.yml
  langs:
  - java
  name: propertyResolver(String pk, String rk, String key, String value)
  nameWithType: TableRequestOptions.PropertyResolver.propertyResolver(String pk, String rk, String key, String value)
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.propertyResolver(String pk, String rk, String key, String value)
  overload: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.propertyResolver*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 48
  package: com.microsoft.azure.storage.table
  summary: "<p>Given the partition key, row, key, and the property name, produces the EdmType</p>\r\n<p></p>"
  syntax:
    content: public EdmType propertyResolver(String pk, String rk, String key, String value)
    parameters:
    - id: pk
      type: "26831127"
      description: <p>A <code>String</code> which represents the partition key. </p>
    - id: rk
      type: "26831127"
      description: <p>A <code>String</code> which represents the row key. </p>
    - id: key
      type: "26831127"
      description: <p>A <code>String</code> which represents the property name. </p>
    - id: value
      type: "26831127"
      description: <p>A <code>String</code> which represents the property value. </p>
    return:
      type: com.microsoft.azure.storage.table.EdmType
      description: <p>The <xref uid="com.microsoft.azure.storage.table.EdmType" data-throw-if-not-resolved="false" data-raw-source="EdmType"></xref> of the property. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.propertyResolver*
  name: propertyResolver
  nameWithType: TableRequestOptions.PropertyResolver.propertyResolver
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.propertyResolver
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.EdmType
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.EdmType.yml
  name: EdmType
  nameWithType: EdmType
  fullName: com.microsoft.azure.storage.table.EdmType
  type: Enum
  summary: "<p>A enumeration used to represent the primitive types of the Entity Data Model (EDM) in the Open Data Protocol (OData). The EDM is the underlying abstract data model used by OData services. The <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType\"></xref> enumeration includes a <xref uid=\"com.microsoft.azure.storage.table.EdmType.parse(final String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"parse(String)\"></xref> method to convert EDM data type names to the enumeration type, and overrides the <xref uid=\"com.microsoft.azure.storage.table.EdmType.toString()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"toString()\"></xref> method to produce an EDM data type name. </p>\r\n<p>For more information about OData, see the <a href=\"http://www.odata.org/\">Open Data Protocol</a> website. </p>\r\n<p>For an overview of the available EDM primitive data types and names, see the <a href=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">Primitive Data Types</a> section of the <a href=\"http://www.odata.org/developers/protocols/overview\">OData Protocol Overview</a>. </p>\r\n<p>The Abstract Type System used to define the primitive types supported by OData is defined in detail in <a href=\"http://msdn.microsoft.com/en-us/library/dd541474.aspx\">[MC-CSDL] (section 2.2.1)</a>. </p>"
  syntax:
    content: public enum EdmType
