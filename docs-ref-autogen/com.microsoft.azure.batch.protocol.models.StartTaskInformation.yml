### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  id: StartTaskInformation
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.StartTaskInformation()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.containerInfo()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.endTime()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.exitCode()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.failureInfo()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.lastRetryTime()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.result()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.retryCount()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.startTime()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.state()
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withEndTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withExitCode(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withLastRetryTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withRetryCount(int)
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withStartTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.StartTaskInformation.withState(com.microsoft.azure.batch.protocol.models.StartTaskState)
  langs:
  - java
  name: StartTaskInformation
  nameWithType: StartTaskInformation
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Information about a StartTask running on a Compute Node.
  syntax:
    content: public class StartTaskInformation
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.StartTaskInformation()
  id: StartTaskInformation()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: StartTaskInformation()
  nameWithType: StartTaskInformation.StartTaskInformation()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.StartTaskInformation()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.StartTaskInformation*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public StartTaskInformation()
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.containerInfo()
  id: containerInfo()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: containerInfo()
  nameWithType: StartTaskInformation.containerInfo()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.containerInfo()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.containerInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the Task runs in a container context.
  syntax:
    content: public TaskContainerExecutionInformation containerInfo()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
      description: the containerInfo value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.endTime()
  id: endTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: endTime()
  nameWithType: StartTaskInformation.endTime()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.endTime()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.endTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this is the end time of the most recent run of the StartTask, if that run has completed (even if that run failed and a retry is pending). This element is not present if the StartTask is currently running.
  syntax:
    content: public DateTime endTime()
    return:
      type: org.joda.time.DateTime
      description: the endTime value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.exitCode()
  id: exitCode()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: exitCode()
  nameWithType: StartTaskInformation.exitCode()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.exitCode()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.exitCode*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the StartTask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the StartTask (due to timeout, or user termination via the API) you may see an operating system-defined exit code.
  syntax:
    content: public Integer exitCode()
    return:
      type: java.lang.Integer
      description: the exitCode value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.failureInfo()
  id: failureInfo()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: failureInfo()
  nameWithType: StartTaskInformation.failureInfo()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.failureInfo()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.failureInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the Task is in the completed state and encountered a failure.
  syntax:
    content: public TaskFailureInformation failureInfo()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskFailureInformation
      description: the failureInfo value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.lastRetryTime()
  id: lastRetryTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: lastRetryTime()
  nameWithType: StartTaskInformation.lastRetryTime()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.lastRetryTime()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.lastRetryTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not.
  syntax:
    content: public DateTime lastRetryTime()
    return:
      type: org.joda.time.DateTime
      description: the lastRetryTime value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.result()
  id: result()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: result()
  nameWithType: StartTaskInformation.result()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.result()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.result*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  syntax:
    content: public TaskExecutionResult result()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskExecutionResult
      description: the result value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.retryCount()
  id: retryCount()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: retryCount()
  nameWithType: StartTaskInformation.retryCount()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.retryCount()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.retryCount*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints.
  syntax:
    content: public int retryCount()
    return:
      type: int
      description: the retryCount value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.startTime()
  id: startTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: startTime()
  nameWithType: StartTaskInformation.startTime()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.startTime()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.startTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this value is reset every time the Task is restarted or retried (that is, this is the most recent time at which the StartTask started running).
  syntax:
    content: public DateTime startTime()
    return:
      type: org.joda.time.DateTime
      description: the startTime value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.state()
  id: state()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: state()
  nameWithType: StartTaskInformation.state()
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.state()
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.state*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get possible values include: 'running', 'completed'."
  syntax:
    content: public StartTaskState state()
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskState
      description: the state value
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)
  id: withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withContainerInfo(TaskContainerExecutionInformation containerInfo)
  nameWithType: StartTaskInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withContainerInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the Task runs in a container context.
  syntax:
    content: public StartTaskInformation withContainerInfo(TaskContainerExecutionInformation containerInfo)
    parameters:
    - id: containerInfo
      type: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
      description: the containerInfo value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withEndTime(org.joda.time.DateTime)
  id: withEndTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withEndTime(DateTime endTime)
  nameWithType: StartTaskInformation.withEndTime(DateTime endTime)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withEndTime(DateTime endTime)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withEndTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this is the end time of the most recent run of the StartTask, if that run has completed (even if that run failed and a retry is pending). This element is not present if the StartTask is currently running.
  syntax:
    content: public StartTaskInformation withEndTime(DateTime endTime)
    parameters:
    - id: endTime
      type: org.joda.time.DateTime
      description: the endTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withExitCode(java.lang.Integer)
  id: withExitCode(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withExitCode(Integer exitCode)
  nameWithType: StartTaskInformation.withExitCode(Integer exitCode)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withExitCode(Integer exitCode)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withExitCode*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the StartTask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the StartTask (due to timeout, or user termination via the API) you may see an operating system-defined exit code.
  syntax:
    content: public StartTaskInformation withExitCode(Integer exitCode)
    parameters:
    - id: exitCode
      type: java.lang.Integer
      description: the exitCode value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)
  id: withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withFailureInfo(TaskFailureInformation failureInfo)
  nameWithType: StartTaskInformation.withFailureInfo(TaskFailureInformation failureInfo)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withFailureInfo(TaskFailureInformation failureInfo)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withFailureInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the Task is in the completed state and encountered a failure.
  syntax:
    content: public StartTaskInformation withFailureInfo(TaskFailureInformation failureInfo)
    parameters:
    - id: failureInfo
      type: com.microsoft.azure.batch.protocol.models.TaskFailureInformation
      description: the failureInfo value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withLastRetryTime(org.joda.time.DateTime)
  id: withLastRetryTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withLastRetryTime(DateTime lastRetryTime)
  nameWithType: StartTaskInformation.withLastRetryTime(DateTime lastRetryTime)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withLastRetryTime(DateTime lastRetryTime)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withLastRetryTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not.
  syntax:
    content: public StartTaskInformation withLastRetryTime(DateTime lastRetryTime)
    parameters:
    - id: lastRetryTime
      type: org.joda.time.DateTime
      description: the lastRetryTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)
  id: withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withResult(TaskExecutionResult result)
  nameWithType: StartTaskInformation.withResult(TaskExecutionResult result)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withResult(TaskExecutionResult result)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withResult*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  syntax:
    content: public StartTaskInformation withResult(TaskExecutionResult result)
    parameters:
    - id: result
      type: com.microsoft.azure.batch.protocol.models.TaskExecutionResult
      description: the result value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withRetryCount(int)
  id: withRetryCount(int)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withRetryCount(int retryCount)
  nameWithType: StartTaskInformation.withRetryCount(int retryCount)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withRetryCount(int retryCount)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withRetryCount*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints.
  syntax:
    content: public StartTaskInformation withRetryCount(int retryCount)
    parameters:
    - id: retryCount
      type: int
      description: the retryCount value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withStartTime(org.joda.time.DateTime)
  id: withStartTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withStartTime(DateTime startTime)
  nameWithType: StartTaskInformation.withStartTime(DateTime startTime)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withStartTime(DateTime startTime)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withStartTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this value is reset every time the Task is restarted or retried (that is, this is the most recent time at which the StartTask started running).
  syntax:
    content: public StartTaskInformation withStartTime(DateTime startTime)
    parameters:
    - id: startTime
      type: org.joda.time.DateTime
      description: the startTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withState(com.microsoft.azure.batch.protocol.models.StartTaskState)
  id: withState(com.microsoft.azure.batch.protocol.models.StartTaskState)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.StartTaskInformation
  langs:
  - java
  name: withState(StartTaskState state)
  nameWithType: StartTaskInformation.withState(StartTaskState state)
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withState(StartTaskState state)
  overload: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withState*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set possible values include: 'running', 'completed'."
  syntax:
    content: public StartTaskInformation withState(StartTaskState state)
    parameters:
    - id: state
      type: com.microsoft.azure.batch.protocol.models.StartTaskState
      description: the state value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTaskInformation
      description: the StartTaskInformation object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.StartTaskInformation*
  name: StartTaskInformation
  nameWithType: StartTaskInformation.StartTaskInformation
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.StartTaskInformation
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskState
  name: StartTaskState
  nameWithType: StartTaskState
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskState
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.state*
  name: state
  nameWithType: StartTaskInformation.state
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.state
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withState*
  name: withState
  nameWithType: StartTaskInformation.withState
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withState
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.DateTime
  spec.java:
  - uid: org.joda.time.DateTime
    name: DateTime
    fullName: org.joda.time.DateTime
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.startTime*
  name: startTime
  nameWithType: StartTaskInformation.startTime
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.startTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withStartTime*
  name: withStartTime
  nameWithType: StartTaskInformation.withStartTime
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withStartTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.endTime*
  name: endTime
  nameWithType: StartTaskInformation.endTime
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.endTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withEndTime*
  name: withEndTime
  nameWithType: StartTaskInformation.withEndTime
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withEndTime
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.exitCode*
  name: exitCode
  nameWithType: StartTaskInformation.exitCode
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.exitCode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withExitCode*
  name: withExitCode
  nameWithType: StartTaskInformation.withExitCode
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withExitCode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
  name: TaskContainerExecutionInformation
  nameWithType: TaskContainerExecutionInformation
  fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.containerInfo*
  name: containerInfo
  nameWithType: StartTaskInformation.containerInfo
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.containerInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withContainerInfo*
  name: withContainerInfo
  nameWithType: StartTaskInformation.withContainerInfo
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withContainerInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskFailureInformation
  name: TaskFailureInformation
  nameWithType: TaskFailureInformation
  fullName: com.microsoft.azure.batch.protocol.models.TaskFailureInformation
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.failureInfo*
  name: failureInfo
  nameWithType: StartTaskInformation.failureInfo
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.failureInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withFailureInfo*
  name: withFailureInfo
  nameWithType: StartTaskInformation.withFailureInfo
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withFailureInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.retryCount*
  name: retryCount
  nameWithType: StartTaskInformation.retryCount
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.retryCount
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withRetryCount*
  name: withRetryCount
  nameWithType: StartTaskInformation.withRetryCount
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withRetryCount
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.lastRetryTime*
  name: lastRetryTime
  nameWithType: StartTaskInformation.lastRetryTime
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.lastRetryTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withLastRetryTime*
  name: withLastRetryTime
  nameWithType: StartTaskInformation.withLastRetryTime
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withLastRetryTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskExecutionResult
  name: TaskExecutionResult
  nameWithType: TaskExecutionResult
  fullName: com.microsoft.azure.batch.protocol.models.TaskExecutionResult
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.result*
  name: result
  nameWithType: StartTaskInformation.result
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.result
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withResult*
  name: withResult
  nameWithType: StartTaskInformation.withResult
  fullName: com.microsoft.azure.batch.protocol.models.StartTaskInformation.withResult
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
