### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation"
fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation"
name: "StartTaskInformation"
nameWithType: "StartTaskInformation"
summary: "Information about a Start<wbr>Task running on a Compute Node."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class StartTaskInformation"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.StartTaskInformation()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.StartTaskInformation()"
  name: "StartTaskInformation()"
  nameWithType: "StartTaskInformation.StartTaskInformation()"
  syntax: "public StartTaskInformation()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.containerInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.containerInfo()"
  name: "containerInfo()"
  nameWithType: "StartTaskInformation.containerInfo()"
  summary: "Get this property is set only if the Task runs in a container context."
  syntax: "public TaskContainerExecutionInformation containerInfo()"
  desc: "Get this property is set only if the Task runs in a container context."
  returns:
    description: "the containerInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.endTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.endTime()"
  name: "endTime()"
  nameWithType: "StartTaskInformation.endTime()"
  summary: "Get this is the end time of the most recent run of the Start<wbr>Task, if that run has completed (even if that run failed and a retry is pending)."
  syntax: "public DateTime endTime()"
  desc: "Get this is the end time of the most recent run of the StartTask, if that run has completed (even if that run failed and a retry is pending). This element is not present if the StartTask is currently running."
  returns:
    description: "the endTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.exitCode()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.exitCode()"
  name: "exitCode()"
  nameWithType: "StartTaskInformation.exitCode()"
  summary: "Get this property is set only if the Start<wbr>Task is in the completed state."
  syntax: "public Integer exitCode()"
  desc: "Get this property is set only if the StartTask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the StartTask (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
  returns:
    description: "the exitCode value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.failureInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.failureInfo()"
  name: "failureInfo()"
  nameWithType: "StartTaskInformation.failureInfo()"
  summary: "Get this property is set only if the Task is in the completed state and encountered a failure."
  syntax: "public TaskFailureInformation failureInfo()"
  desc: "Get this property is set only if the Task is in the completed state and encountered a failure."
  returns:
    description: "the failureInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.lastRetryTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.lastRetryTime()"
  name: "lastRetryTime()"
  nameWithType: "StartTaskInformation.lastRetryTime()"
  summary: "Get this element is present only if the Task was retried (i.<wbr>e."
  syntax: "public DateTime lastRetryTime()"
  desc: "Get this element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
  returns:
    description: "the lastRetryTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.result()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.result()"
  name: "result()"
  nameWithType: "StartTaskInformation.result()"
  summary: "Get if the value is 'failed', then the details of the failure can be found in the failure<wbr>Info property."
  syntax: "public TaskExecutionResult result()"
  desc: "Get if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  returns:
    description: "the result value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.retryCount()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.retryCount()"
  name: "retryCount()"
  nameWithType: "StartTaskInformation.retryCount()"
  summary: "Get task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried."
  syntax: "public int retryCount()"
  desc: "Get task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints."
  returns:
    description: "the retryCount value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.startTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.startTime()"
  name: "startTime()"
  nameWithType: "StartTaskInformation.startTime()"
  summary: "Get this value is reset every time the Task is restarted or retried (that is, this is the most recent time at which the Start<wbr>Task started running)."
  syntax: "public DateTime startTime()"
  desc: "Get this value is reset every time the Task is restarted or retried (that is, this is the most recent time at which the StartTask started running)."
  returns:
    description: "the startTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.state()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.state()"
  name: "state()"
  nameWithType: "StartTaskInformation.state()"
  summary: "Get possible values include: 'running', 'completed'."
  syntax: "public StartTaskState state()"
  desc: "Get possible values include: 'running', 'completed'."
  returns:
    description: "the state value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskState?alt=com.microsoft.azure.batch.protocol.models.StartTaskState&text=StartTaskState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  name: "withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  nameWithType: "StartTaskInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  summary: "Set this property is set only if the Task runs in a container context."
  parameters:
  - description: "the containerInfo value to set"
    name: "containerInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  desc: "Set this property is set only if the Task runs in a container context."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withEndTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withEndTime(DateTime endTime)"
  name: "withEndTime(DateTime endTime)"
  nameWithType: "StartTaskInformation.withEndTime(DateTime endTime)"
  summary: "Set this is the end time of the most recent run of the Start<wbr>Task, if that run has completed (even if that run failed and a retry is pending)."
  parameters:
  - description: "the endTime value to set"
    name: "endTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withEndTime(DateTime endTime)"
  desc: "Set this is the end time of the most recent run of the StartTask, if that run has completed (even if that run failed and a retry is pending). This element is not present if the StartTask is currently running."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withExitCode(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withExitCode(Integer exitCode)"
  name: "withExitCode(Integer exitCode)"
  nameWithType: "StartTaskInformation.withExitCode(Integer exitCode)"
  summary: "Set this property is set only if the Start<wbr>Task is in the completed state."
  parameters:
  - description: "the exitCode value to set"
    name: "exitCode"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withExitCode(Integer exitCode)"
  desc: "Set this property is set only if the StartTask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the StartTask (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withFailureInfo(TaskFailureInformation failureInfo)"
  name: "withFailureInfo(TaskFailureInformation failureInfo)"
  nameWithType: "StartTaskInformation.withFailureInfo(TaskFailureInformation failureInfo)"
  summary: "Set this property is set only if the Task is in the completed state and encountered a failure."
  parameters:
  - description: "the failureInfo value to set"
    name: "failureInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withFailureInfo(TaskFailureInformation failureInfo)"
  desc: "Set this property is set only if the Task is in the completed state and encountered a failure."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withLastRetryTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withLastRetryTime(DateTime lastRetryTime)"
  name: "withLastRetryTime(DateTime lastRetryTime)"
  nameWithType: "StartTaskInformation.withLastRetryTime(DateTime lastRetryTime)"
  summary: "Set this element is present only if the Task was retried (i.<wbr>e."
  parameters:
  - description: "the lastRetryTime value to set"
    name: "lastRetryTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withLastRetryTime(DateTime lastRetryTime)"
  desc: "Set this element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withResult(TaskExecutionResult result)"
  name: "withResult(TaskExecutionResult result)"
  nameWithType: "StartTaskInformation.withResult(TaskExecutionResult result)"
  summary: "Set if the value is 'failed', then the details of the failure can be found in the failure<wbr>Info property."
  parameters:
  - description: "the result value to set"
    name: "result"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withResult(TaskExecutionResult result)"
  desc: "Set if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withRetryCount(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withRetryCount(int retryCount)"
  name: "withRetryCount(int retryCount)"
  nameWithType: "StartTaskInformation.withRetryCount(int retryCount)"
  summary: "Set task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried."
  parameters:
  - description: "the retryCount value to set"
    name: "retryCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withRetryCount(int retryCount)"
  desc: "Set task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withStartTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withStartTime(DateTime startTime)"
  name: "withStartTime(DateTime startTime)"
  nameWithType: "StartTaskInformation.withStartTime(DateTime startTime)"
  summary: "Set this value is reset every time the Task is restarted or retried (that is, this is the most recent time at which the Start<wbr>Task started running)."
  parameters:
  - description: "the startTime value to set"
    name: "startTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withStartTime(DateTime startTime)"
  desc: "Set this value is reset every time the Task is restarted or retried (that is, this is the most recent time at which the StartTask started running)."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withState(com.microsoft.azure.batch.protocol.models.StartTaskState)"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTaskInformation.withState(StartTaskState state)"
  name: "withState(StartTaskState state)"
  nameWithType: "StartTaskInformation.withState(StartTaskState state)"
  summary: "Set possible values include: 'running', 'completed'."
  parameters:
  - description: "the state value to set"
    name: "state"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskState?alt=com.microsoft.azure.batch.protocol.models.StartTaskState&text=StartTaskState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StartTaskInformation withState(StartTaskState state)"
  desc: "Set possible values include: 'running', 'completed'."
  returns:
    description: "the StartTaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTaskInformation?alt=com.microsoft.azure.batch.protocol.models.StartTaskInformation&text=StartTaskInformation\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Information about a StartTask running on a Compute Node."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
