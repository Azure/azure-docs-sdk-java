### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.TransactionContext
  id: TransactionContext
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.TransactionContext.NULL_TXN
  - com.microsoft.azure.servicebus.TransactionContext.TransactionContext(java.nio.ByteBuffer,com.microsoft.azure.servicebus.primitives.MessagingFactory)
  - com.microsoft.azure.servicebus.TransactionContext.commit()
  - com.microsoft.azure.servicebus.TransactionContext.commitAsync()
  - com.microsoft.azure.servicebus.TransactionContext.getTransactionId()
  - com.microsoft.azure.servicebus.TransactionContext.notifyTransactionCompletion(boolean)
  - com.microsoft.azure.servicebus.TransactionContext.rollback()
  - com.microsoft.azure.servicebus.TransactionContext.rollbackAsync()
  - com.microsoft.azure.servicebus.TransactionContext.toString()
  langs:
  - java
  name: TransactionContext
  nameWithType: TransactionContext
  fullName: com.microsoft.azure.servicebus.TransactionContext
  type: Class
  package: com.microsoft.azure.servicebus
  summary: Represents an active servicebus transaction. A transaction is initiated by calling <xref uid="com.microsoft.azure.servicebus.primitives.MessagingFactory.startTransactionAsync()" data-throw-if-not-resolved="false">MessagingFactory#startTransactionAsync()</xref>. A transaction can result in commit or rollback. To commit, call <xref uid="com.microsoft.azure.servicebus.primitives.MessagingFactory.endTransactionAsync(com.microsoft.azure.servicebus.TransactionContext,boolean)" data-throw-if-not-resolved="false">MessagingFactory#endTransactionAsync(TransactionContext, boolean)</xref> with `commit = true` To rollback, call <xref uid="com.microsoft.azure.servicebus.primitives.MessagingFactory.endTransactionAsync(com.microsoft.azure.servicebus.TransactionContext,boolean)" data-throw-if-not-resolved="false">MessagingFactory#endTransactionAsync(TransactionContext, boolean)</xref> with `commit = false`
  syntax:
    content: public class TransactionContext
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.TransactionContext.NULL_TXN
  id: NULL_TXN
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: NULL_TXN
  nameWithType: TransactionContext.NULL_TXN
  fullName: com.microsoft.azure.servicebus.TransactionContext.NULL_TXN
  type: Field
  package: com.microsoft.azure.servicebus
  syntax:
    content: public static TransactionContext NULL_TXN
    return:
      type: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.TransactionContext.TransactionContext(java.nio.ByteBuffer,com.microsoft.azure.servicebus.primitives.MessagingFactory)
  id: TransactionContext(java.nio.ByteBuffer,com.microsoft.azure.servicebus.primitives.MessagingFactory)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: TransactionContext(ByteBuffer txnId, MessagingFactory messagingFactory)
  nameWithType: TransactionContext.TransactionContext(ByteBuffer txnId, MessagingFactory messagingFactory)
  fullName: com.microsoft.azure.servicebus.TransactionContext.TransactionContext(ByteBuffer txnId, MessagingFactory messagingFactory)
  overload: com.microsoft.azure.servicebus.TransactionContext.TransactionContext*
  type: Constructor
  package: com.microsoft.azure.servicebus
  syntax:
    content: public TransactionContext(ByteBuffer txnId, MessagingFactory messagingFactory)
    parameters:
    - id: txnId
      type: java.nio.ByteBuffer
    - id: messagingFactory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
- uid: com.microsoft.azure.servicebus.TransactionContext.commit()
  id: commit()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: commit()
  nameWithType: TransactionContext.commit()
  fullName: com.microsoft.azure.servicebus.TransactionContext.commit()
  overload: com.microsoft.azure.servicebus.TransactionContext.commit*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Commits the transaction
  syntax:
    content: public void commit()
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if Commit failed
  - type: java.lang.InterruptedException
    description: if Commit failed
- uid: com.microsoft.azure.servicebus.TransactionContext.commitAsync()
  id: commitAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: commitAsync()
  nameWithType: TransactionContext.commitAsync()
  fullName: com.microsoft.azure.servicebus.TransactionContext.commitAsync()
  overload: com.microsoft.azure.servicebus.TransactionContext.commitAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously commits the transaction
  syntax:
    content: public CompletableFuture<Void> commitAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: a CompletableFuture for the commit operation
- uid: com.microsoft.azure.servicebus.TransactionContext.getTransactionId()
  id: getTransactionId()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: getTransactionId()
  nameWithType: TransactionContext.getTransactionId()
  fullName: com.microsoft.azure.servicebus.TransactionContext.getTransactionId()
  overload: com.microsoft.azure.servicebus.TransactionContext.getTransactionId*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Represents the service-side transactionID
  syntax:
    content: public ByteBuffer getTransactionId()
    return:
      type: java.nio.ByteBuffer
      description: transaction ID
- uid: com.microsoft.azure.servicebus.TransactionContext.notifyTransactionCompletion(boolean)
  id: notifyTransactionCompletion(boolean)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: notifyTransactionCompletion(boolean commit)
  nameWithType: TransactionContext.notifyTransactionCompletion(boolean commit)
  fullName: com.microsoft.azure.servicebus.TransactionContext.notifyTransactionCompletion(boolean commit)
  overload: com.microsoft.azure.servicebus.TransactionContext.notifyTransactionCompletion*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: This is not to be called by the user.
  syntax:
    content: public void notifyTransactionCompletion(boolean commit)
    parameters:
    - id: commit
      type: boolean
      description: true indicates success and false for rollback
- uid: com.microsoft.azure.servicebus.TransactionContext.rollback()
  id: rollback()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: rollback()
  nameWithType: TransactionContext.rollback()
  fullName: com.microsoft.azure.servicebus.TransactionContext.rollback()
  overload: com.microsoft.azure.servicebus.TransactionContext.rollback*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Rollback the transaction
  syntax:
    content: public void rollback()
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
    description: if rollback failed
  - type: java.lang.InterruptedException
    description: if rollback failed
- uid: com.microsoft.azure.servicebus.TransactionContext.rollbackAsync()
  id: rollbackAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: rollbackAsync()
  nameWithType: TransactionContext.rollbackAsync()
  fullName: com.microsoft.azure.servicebus.TransactionContext.rollbackAsync()
  overload: com.microsoft.azure.servicebus.TransactionContext.rollbackAsync*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Asynchronously rollback the transaction.
  syntax:
    content: public CompletableFuture<Void> rollbackAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: a CompletableFuture for the rollback operation
- uid: com.microsoft.azure.servicebus.TransactionContext.toString()
  id: toString()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.TransactionContext
  langs:
  - java
  name: toString()
  nameWithType: TransactionContext.toString()
  fullName: com.microsoft.azure.servicebus.TransactionContext.toString()
  overload: com.microsoft.azure.servicebus.TransactionContext.toString*
  type: Method
  package: com.microsoft.azure.servicebus
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: java.nio.ByteBuffer
  spec.java:
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
- uid: com.microsoft.azure.servicebus.primitives.MessagingFactory
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
- uid: com.microsoft.azure.servicebus.TransactionContext.TransactionContext*
  name: TransactionContext
  nameWithType: TransactionContext.TransactionContext
  fullName: com.microsoft.azure.servicebus.TransactionContext.TransactionContext
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.TransactionContext.getTransactionId*
  name: getTransactionId
  nameWithType: TransactionContext.getTransactionId
  fullName: com.microsoft.azure.servicebus.TransactionContext.getTransactionId
  package: com.microsoft.azure.servicebus
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.servicebus.TransactionContext.toString*
  name: toString
  nameWithType: TransactionContext.toString
  fullName: com.microsoft.azure.servicebus.TransactionContext.toString
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: java.lang.InterruptedException
  spec.java:
  - uid: java.lang.InterruptedException
    name: InterruptedException
    fullName: java.lang.InterruptedException
- uid: com.microsoft.azure.servicebus.TransactionContext.commit*
  name: commit
  nameWithType: TransactionContext.commit
  fullName: com.microsoft.azure.servicebus.TransactionContext.commit
  package: com.microsoft.azure.servicebus
- uid: java.util.concurrent.CompletableFuture<java.lang.Void>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.TransactionContext.commitAsync*
  name: commitAsync
  nameWithType: TransactionContext.commitAsync
  fullName: com.microsoft.azure.servicebus.TransactionContext.commitAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.TransactionContext.rollback*
  name: rollback
  nameWithType: TransactionContext.rollback
  fullName: com.microsoft.azure.servicebus.TransactionContext.rollback
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.TransactionContext.rollbackAsync*
  name: rollbackAsync
  nameWithType: TransactionContext.rollbackAsync
  fullName: com.microsoft.azure.servicebus.TransactionContext.rollbackAsync
  package: com.microsoft.azure.servicebus
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.servicebus.TransactionContext.notifyTransactionCompletion*
  name: notifyTransactionCompletion
  nameWithType: TransactionContext.notifyTransactionCompletion
  fullName: com.microsoft.azure.servicebus.TransactionContext.notifyTransactionCompletion
  package: com.microsoft.azure.servicebus
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
