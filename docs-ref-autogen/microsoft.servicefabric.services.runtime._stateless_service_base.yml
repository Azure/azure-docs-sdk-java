### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.runtime._stateless_service_base
  id: _stateless_service_base
  parent: microsoft.servicefabric.services.runtime
  children:
  - microsoft.servicefabric.services.runtime._stateless_service_base.createServiceInstanceListeners()
  - microsoft.servicefabric.services.runtime._stateless_service_base.getAddresses()
  - microsoft.servicefabric.services.runtime._stateless_service_base.getPartition()
  - microsoft.servicefabric.services.runtime._stateless_service_base.getServiceContext()
  - microsoft.servicefabric.services.runtime._stateless_service_base.onAbort()
  - microsoft.servicefabric.services.runtime._stateless_service_base.onCloseAsync(CancellationToken)
  - microsoft.servicefabric.services.runtime._stateless_service_base.onOpenAsync(CancellationToken)
  - microsoft.servicefabric.services.runtime._stateless_service_base.runAsync(CancellationToken)
  - microsoft.servicefabric.services.runtime._stateless_service_base.setAddresses(Map<String, String>)
  - microsoft.servicefabric.services.runtime._stateless_service_base.StatelessServiceBase()
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: StatelessServiceBase
  nameWithType: StatelessServiceBase
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 19
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Represents base class for Microsoft Service Fabric based stateless reliable service. </p>"
  syntax:
    content: public class StatelessServiceBase
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.createServiceInstanceListeners()
  id: createServiceInstanceListeners()
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: createServiceInstanceListeners()
  nameWithType: StatelessServiceBase.createServiceInstanceListeners()
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.createServiceInstanceListeners()
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.createServiceInstanceListeners*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 91
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Override this method to supply the communication listeners for the service instance. The endpoints returned by the communication listener's are stored as a JSON string of ListenerName, Endpoint string pairs like {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}</p>\r\n<p></p>"
  syntax:
    content: protected List<ServiceInstanceListener> createServiceInstanceListeners()
    return:
      type: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_instance_listenera08ddfce
      description: <p>List of ServiceInstanceListeners </p>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.getAddresses()
  id: getAddresses()
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: getAddresses()
  nameWithType: StatelessServiceBase.getAddresses()
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.getAddresses()
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.getAddresses*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 36
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Gets list of all the addresses for this service instances as (ListenerName, Endpoint) key-value pair.</p>\r\n<p></p>"
  syntax:
    content: protected Map<String, String> getAddresses()
    return:
      type: 689c8cb5
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">Map</xref> containing list of addresses as (ListenerName, Endpoint) key-value pair. </p>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.getPartition()
  id: getPartition()
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: getPartition()
  nameWithType: StatelessServiceBase.getPartition()
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.getPartition()
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.getPartition*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 68
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Gets the service partition to which current service instance belongs.</p>\r\n<p></p>"
  syntax:
    content: protected StatelessServicePartition getPartition()
    return:
      type: system.fabric._stateless_service_partition
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">StatelessServicePartition</xref> that represents the partition to which this service replica belongs. </p>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.getServiceContext()
  id: getServiceContext()
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: getServiceContext()
  nameWithType: StatelessServiceBase.getServiceContext()
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.getServiceContext()
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.getServiceContext*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 58
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Gets the service context that this stateless service is operating under. It provides information like InstanceId, PartitionId, ServiceName etc.</p>\r\n<p></p>"
  syntax:
    content: public StatelessServiceContext getServiceContext()
    return:
      type: microsoft.servicefabric.services.runtime._stateless_service_context
      description: <p>A <xref uid="microsoft.servicefabric.services.runtime._stateless_service_context" data-throw-if-not-resolved="false">StatelessServiceContext</xref> that describes the service context. </p>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.onAbort()
  id: onAbort()
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: onAbort()
  nameWithType: StatelessServiceBase.onAbort()
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.onAbort()
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.onAbort*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 144
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Notification that the service is being aborted. RunAsync MAY be running concurrently with the execution of this method, as cancellation is not awaited on the abort path. </p>"
  syntax:
    content: protected void onAbort()
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.onCloseAsync(CancellationToken)
  id: onCloseAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: onCloseAsync(CancellationToken cancellationToken)
  nameWithType: StatelessServiceBase.onCloseAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.onCloseAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.onCloseAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 134
  package: microsoft.servicefabric.services.runtime
  summary: "<p>This method is called as the final step of closing the service. Override this method to be notified that Close has completed for this instance's internal components.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> onCloseAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.onOpenAsync(CancellationToken)
  id: onOpenAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: onOpenAsync(CancellationToken cancellationToken)
  nameWithType: StatelessServiceBase.onOpenAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.onOpenAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.onOpenAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 104
  package: microsoft.servicefabric.services.runtime
  summary: "<p>This method is called as the final step of opening the service. Override this method to be notified that Open has completed for this instance's internal components.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> onOpenAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.runAsync(CancellationToken)
  id: runAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: runAsync(CancellationToken cancellationToken)
  nameWithType: StatelessServiceBase.runAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.runAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.runAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 119
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Services that want to implement a background task which runs when it is opened, just override this method with their logic.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.setAddresses(Map<String, String>)
  id: setAddresses(Map<String, String>)
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: setAddresses(Map<String, String> addresses)
  nameWithType: StatelessServiceBase.setAddresses(Map<String, String> addresses)
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.setAddresses(Map<String, String> addresses)
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.setAddresses*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 48
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Sets list of all the addresses for this service instance as (ListenerName, Endpoint) key-value pair.</p>\r\n<p></p>"
  syntax:
    content: protected void setAddresses(Map<String, String> addresses)
    parameters:
    - id: addresses
      type: 689c8cb5
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">Map</xref> containing list of addresses as (ListenerName, Endpoint) key-value pair. </p>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.StatelessServiceBase()
  id: StatelessServiceBase()
  parent: microsoft.servicefabric.services.runtime._stateless_service_base
  href: microsoft.servicefabric.services.runtime._stateless_service_base.yml
  langs:
  - java
  name: StatelessServiceBase()
  nameWithType: StatelessServiceBase.StatelessServiceBase()
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.StatelessServiceBase()
  overload: microsoft.servicefabric.services.runtime._stateless_service_base.StatelessServiceBase*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatelessServiceBase.java
    startLine: 24
  package: microsoft.servicefabric.services.runtime
  syntax:
    content: protected StatelessServiceBase()
references:
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.StatelessServiceBase*
  name: StatelessServiceBase
  nameWithType: StatelessServiceBase.StatelessServiceBase
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.StatelessServiceBase
  package: microsoft.servicefabric.services.runtime
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.getAddresses*
  name: getAddresses
  nameWithType: StatelessServiceBase.getAddresses
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.getAddresses
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.setAddresses*
  name: setAddresses
  nameWithType: StatelessServiceBase.setAddresses
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.setAddresses
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.getPartition*
  name: getPartition
  nameWithType: StatelessServiceBase.getPartition
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.getPartition
  package: microsoft.servicefabric.services.runtime
- uid: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_instance_listenera08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: microsoft.servicefabric.services.communication.runtime._service_instance_listener
    name: ServiceInstanceListener
    fullName: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener
    href: microsoft.servicefabric.services.communication.runtime._service_instance_listener.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.createServiceInstanceListeners*
  name: createServiceInstanceListeners
  nameWithType: StatelessServiceBase.createServiceInstanceListeners
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.createServiceInstanceListeners
  package: microsoft.servicefabric.services.runtime
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.onOpenAsync*
  name: onOpenAsync
  nameWithType: StatelessServiceBase.onOpenAsync
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.onOpenAsync
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.runAsync*
  name: runAsync
  nameWithType: StatelessServiceBase.runAsync
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.runAsync
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.onCloseAsync*
  name: onCloseAsync
  nameWithType: StatelessServiceBase.onCloseAsync
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.onCloseAsync
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.onAbort*
  name: onAbort
  nameWithType: StatelessServiceBase.onAbort
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.onAbort
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateless_service_base.getServiceContext*
  name: getServiceContext
  nameWithType: StatelessServiceBase.getServiceContext
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceBase.getServiceContext
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateless_service
  parent: microsoft.servicefabric.services.runtime
  href: microsoft.servicefabric.services.runtime._stateless_service.yml
  name: StatelessService
  nameWithType: StatelessService
  fullName: microsoft.servicefabric.services.runtime.StatelessService
  type: Class
  summary: <p>Represents Microsoft Service Fabric based stateless reliable service base class. Derive from this class to implement a Microsoft Service Fabric based stateless reliable service. </p>
  syntax:
    content: public class StatelessService extends StatelessServiceBase
- uid: microsoft.servicefabric.services.runtime._stateless_service_context
  parent: microsoft.servicefabric.services.runtime
  href: microsoft.servicefabric.services.runtime._stateless_service_context.yml
  name: StatelessServiceContext
  nameWithType: StatelessServiceContext
  fullName: microsoft.servicefabric.services.runtime.StatelessServiceContext
  type: Class
  summary: <p>Represents the service context that the stateless service is operating under. </p>
  syntax:
    content: public class StatelessServiceContext
- uid: system.fabric._stateless_service_partition
  parent: system.fabric
  href: system.fabric._stateless_service_partition.yml
  name: StatelessServicePartition
  nameWithType: StatelessServicePartition
  fullName: system.fabric.StatelessServicePartition
  type: Interface
  summary: >-
    <p>Represents a partition that is associated with a stateless service instance. </p>

    <p>

      <b>Remarks:</b>Provided to a stateless service as a parameter to the <xref uid="system.fabric._service_partition" data-throw-if-not-resolved="false">system.fabric.ServicePartition</xref>. </p>
  syntax:
    content: public interface StatelessServicePartition
- uid: microsoft.servicefabric.services.communication.runtime._service_instance_listener
  parent: microsoft.servicefabric.services.communication.runtime
  href: microsoft.servicefabric.services.communication.runtime._service_instance_listener.yml
  name: ServiceInstanceListener
  nameWithType: ServiceInstanceListener
  fullName: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener
  type: Class
  summary: <p>Represents the communication listener and its properties for a Stateless Service Instance. Endpoints given out by the communication listener are associated with name of the communication listener. </p>
  syntax:
    content: public class ServiceInstanceListener
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A CancellationToken is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
