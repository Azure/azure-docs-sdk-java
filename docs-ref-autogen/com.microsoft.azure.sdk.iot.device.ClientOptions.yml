### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.ClientOptions
  id: ClientOptions
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device
  children:
  - com.microsoft.azure.sdk.iot.device.ClientOptions.ClientOptions()
  - com.microsoft.azure.sdk.iot.device.ClientOptions.ModelId
  - com.microsoft.azure.sdk.iot.device.ClientOptions.sslContext
  langs:
  - java
  name: ClientOptions
  nameWithType: ClientOptions
  fullName: com.microsoft.azure.sdk.iot.device.ClientOptions
  type: Class
  package: com.microsoft.azure.sdk.iot.device
  summary: Options that allow configuration of the device client instance during initialization.
  syntax:
    content: public final class ClientOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.device.ClientOptions.ClientOptions()
  id: ClientOptions()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.ClientOptions
  langs:
  - java
  name: ClientOptions()
  nameWithType: ClientOptions.ClientOptions()
  fullName: com.microsoft.azure.sdk.iot.device.ClientOptions.ClientOptions()
  overload: com.microsoft.azure.sdk.iot.device.ClientOptions.ClientOptions*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public ClientOptions()
- uid: com.microsoft.azure.sdk.iot.device.ClientOptions.ModelId
  id: ModelId
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.ClientOptions
  langs:
  - java
  name: ModelId
  nameWithType: ClientOptions.ModelId
  fullName: com.microsoft.azure.sdk.iot.device.ClientOptions.ModelId
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  summary: The Digital Twin Model Id associated with the device and module identity. Non plug and play users should not set this value This feature is currently supported only over MQTT
  syntax:
    content: public String ModelId
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.ClientOptions.sslContext
  id: sslContext
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.ClientOptions
  langs:
  - java
  name: sslContext
  nameWithType: ClientOptions.sslContext
  fullName: com.microsoft.azure.sdk.iot.device.ClientOptions.sslContext
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  summary: The ssl context that will be used during authentication. If the provided connection string does not contain SAS based credentials, then the sslContext will be used for x509 authentication. If the provided connection string does contain SAS based credentials, the sslContext will still be used during SSL negotiation. By default, this SDK will create an SSLContext instance for you that trusts the IoT Hub public certificates.
  syntax:
    content: public SSLContext sslContext
    return:
      type: javax.net.ssl.SSLContext
references:
- uid: com.microsoft.azure.sdk.iot.device.ClientOptions.ClientOptions*
  name: ClientOptions
  nameWithType: ClientOptions.ClientOptions
  fullName: com.microsoft.azure.sdk.iot.device.ClientOptions.ClientOptions
  package: com.microsoft.azure.sdk.iot.device
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: javax.net.ssl.SSLContext
  spec.java:
  - uid: javax.net.ssl.SSLContext
    name: SSLContext
    fullName: javax.net.ssl.SSLContext
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
