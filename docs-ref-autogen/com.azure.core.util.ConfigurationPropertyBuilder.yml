### YamlMime:JavaType
uid: "com.azure.core.util.ConfigurationPropertyBuilder"
fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>"
name: "ConfigurationPropertyBuilder<T>"
nameWithType: "ConfigurationPropertyBuilder<T>"
summary: "Builds configuration property."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ConfigurationPropertyBuilder<T>"
constructors:
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.ConfigurationPropertyBuilder(java.lang.String,java.util.function.Function<java.lang.String,T>)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.ConfigurationPropertyBuilder(String name, Function<String,T> converter)"
  name: "ConfigurationPropertyBuilder(String name, Function<String,T> converter)"
  nameWithType: "ConfigurationPropertyBuilder<T>.ConfigurationPropertyBuilder(String name, Function<String,T> converter)"
  summary: "Constructs `ConfigurationPropertyBuilder` instance."
  parameters:
  - description: "name of the property."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Converter used to map the configuration to <code>T</code>."
    name: "converter"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ConfigurationPropertyBuilder(String name, Function<String,T> converter)"
  desc: "Constructs `ConfigurationPropertyBuilder` instance.\n\n```java\nConfigurationProperty<SampleEnumProperty> modeProperty =\n     new ConfigurationPropertyBuilder<>(\"mode\", SampleEnumProperty::fromString)\n         .logValue(true)\n         .defaultValue(SampleEnumProperty.MODE_1)\n         .build();\n System.out.println(configuration.get(modeProperty));\n```"
methods:
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.aliases(java.lang.String...)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.aliases(String[] aliases)"
  name: "aliases(String[] aliases)"
  nameWithType: "ConfigurationPropertyBuilder<T>.aliases(String[] aliases)"
  summary: "Sets one or more alias for property."
  parameters:
  - description: "one or more alias for the property name."
    name: "aliases"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public ConfigurationPropertyBuilder<T> aliases(String[] aliases)"
  desc: "Sets one or more alias for property. <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> attempts to retrieve property by name first and only then tries to retrieve properties by alias in the order aliases are provided."
  returns:
    description: "the updated ConfigurationPropertyBuilder object."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.build()"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.build()"
  name: "build()"
  nameWithType: "ConfigurationPropertyBuilder<T>.build()"
  summary: "Builds configuration property instance."
  syntax: "public ConfigurationProperty<T> build()"
  desc: "Builds configuration property instance."
  returns:
    description: "<xref uid=\"com.azure.core.util.ConfigurationProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationProperty\"></xref> instance."
    type: "<xref href=\"com.azure.core.util.ConfigurationProperty?alt=com.azure.core.util.ConfigurationProperty&text=ConfigurationProperty\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.defaultValue(T)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.defaultValue(T defaultValue)"
  name: "defaultValue(T defaultValue)"
  nameWithType: "ConfigurationPropertyBuilder<T>.defaultValue(T defaultValue)"
  summary: "Sets default property value."
  parameters:
  - description: "value to be returned by <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> if the property isn't found."
    name: "defaultValue"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationPropertyBuilder<T> defaultValue(T defaultValue)"
  desc: "Sets default property value. `null` by default."
  returns:
    description: "the updated ConfigurationPropertyBuilder object."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.environmentVariableName(java.lang.String)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.environmentVariableName(String environmentVariableName)"
  name: "environmentVariableName(String environmentVariableName)"
  nameWithType: "ConfigurationPropertyBuilder<T>.environmentVariableName(String environmentVariableName)"
  summary: "Sets environment variable name that can represent this property if explicit configuration is not set."
  parameters:
  - description: "environment variable name."
    name: "environmentVariableName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationPropertyBuilder<T> environmentVariableName(String environmentVariableName)"
  desc: "Sets environment variable name that can represent this property if explicit configuration is not set.\n\nWhen property value is not found by `name` or `alias`, <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> falls back to system properties and environment variables. When environment variable (or system property) is not set, <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> does not attempt to read environment configuration."
  returns:
    description: "the updated ConfigurationPropertyBuilder object."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.logValue(boolean)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.logValue(boolean logValue)"
  name: "logValue(boolean logValue)"
  nameWithType: "ConfigurationPropertyBuilder<T>.logValue(boolean logValue)"
  summary: "Sets flag indicating if property value can be logged."
  parameters:
  - description: "If set to <code>true</code>, <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> will log property value,\n                    Otherwise, value is redacted."
    name: "logValue"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationPropertyBuilder<T> logValue(boolean logValue)"
  desc: "Sets flag indicating if property value can be logged. Default is `false`, indicating that property value should not be logged. When and if retrieving of corresponding configuration property is logged, <xref uid=\"com.azure.core.util.Configuration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration\"></xref> will use \"redacted\" string instead of property value. If flag is set to `true`, value is populated on the logs as is."
  returns:
    description: "the updated ConfigurationPropertyBuilder object."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.ofBoolean(java.lang.String)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.ofBoolean(String name)"
  name: "ofBoolean(String name)"
  nameWithType: "ConfigurationPropertyBuilder<T>.ofBoolean(String name)"
  summary: "Creates <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref> configured to log property value and parse value using <xref uid=\"java.lang.Boolean.parseBoolean*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Boolean#parseBoolean(String)\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "property name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConfigurationPropertyBuilder<Boolean> ofBoolean(String name)"
  desc: "Creates <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref> configured to log property value and parse value using <xref uid=\"java.lang.Boolean.parseBoolean*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Boolean#parseBoolean(String)\"></xref>.\n\n```java\nConfigurationProperty<Boolean> booleanProperty = ConfigurationPropertyBuilder.ofBoolean(\"is-enabled\")\n     .build();\n System.out.println(configuration.get(booleanProperty));\n```"
  returns:
    description: "instance of <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref>."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.ofDuration(java.lang.String)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.ofDuration(String name)"
  name: "ofDuration(String name)"
  nameWithType: "ConfigurationPropertyBuilder<T>.ofDuration(String name)"
  summary: "Creates <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref> configured to log property value and parses value as long number of milliseconds, proxying <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumberFormatException\"></xref> exception."
  modifiers:
  - "static"
  parameters:
  - description: "property name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConfigurationPropertyBuilder<Duration> ofDuration(String name)"
  desc: "Creates <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref> configured to log property value and parses value as long number of milliseconds, proxying <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumberFormatException\"></xref> exception.\n\n```java\nConfigurationProperty<Duration> timeoutProperty = ConfigurationPropertyBuilder.ofDuration(\"timeout\")\n     .build();\n System.out.println(configuration.get(timeoutProperty));\n```"
  returns:
    description: "instance of <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref>."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.ofInteger(java.lang.String)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.ofInteger(String name)"
  name: "ofInteger(String name)"
  nameWithType: "ConfigurationPropertyBuilder<T>.ofInteger(String name)"
  summary: "Creates <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref> configured to log property value and parse value using <xref uid=\"java.lang.Integer.valueOf*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#valueOf(String)\"></xref>, proxying <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumberFormatException\"></xref> exception."
  modifiers:
  - "static"
  parameters:
  - description: "property name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConfigurationPropertyBuilder<Integer> ofInteger(String name)"
  desc: "Creates <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref> configured to log property value and parse value using <xref uid=\"java.lang.Integer.valueOf*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer#valueOf(String)\"></xref>, proxying <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumberFormatException\"></xref> exception.\n\n```java\nConfigurationProperty<Integer> integerProperty = ConfigurationPropertyBuilder.ofInteger(\"retry-count\")\n     .build();\n System.out.println(configuration.get(integerProperty));\n```"
  returns:
    description: "instance of <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref>."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.ofString(java.lang.String)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.ofString(String name)"
  name: "ofString(String name)"
  nameWithType: "ConfigurationPropertyBuilder<T>.ofString(String name)"
  summary: "Creates default <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "property name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConfigurationPropertyBuilder<String> ofString(String name)"
  desc: "Creates default <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref>. String property values are redacted in logs by default. If property value does not contain sensitive information, use <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder.logValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder#logValue\"></xref> to enable logging.\n\n```java\nConfigurationProperty<String> property = ConfigurationPropertyBuilder.ofString(\"http.proxy.hostname\")\n     .shared(true)\n     .logValue(true)\n     .systemPropertyName(\"http.proxyHost\")\n     .build();\n\n // attempts to get local `azure.sdk.<client-name>.http.proxy.host` property and falls back to\n // shared azure.sdk.http.proxy.port\n System.out.println(configuration.get(property));\n```"
  returns:
    description: "instance of <xref uid=\"com.azure.core.util.ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationPropertyBuilder\"></xref>."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.required(boolean)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.required(boolean required)"
  name: "required(boolean required)"
  nameWithType: "ConfigurationPropertyBuilder<T>.required(boolean required)"
  summary: "Sets flag indicating if property is required."
  parameters:
  - description: "If set to <code>true</code>, <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> will throw when property is not found."
    name: "required"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationPropertyBuilder<T> required(boolean required)"
  desc: "Sets flag indicating if property is required. Default is `false`, indicating that property is optional."
  returns:
    description: "the updated ConfigurationPropertyBuilder object."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.shared(boolean)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.shared(boolean shared)"
  name: "shared(boolean shared)"
  nameWithType: "ConfigurationPropertyBuilder<T>.shared(boolean shared)"
  summary: "Sets flag indicating that property can be provided in the shared configuration section in addition to client-specific configuration section."
  parameters:
  - description: "If set to <code>true</code>, <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> will attempt to retrieve property from\n               local configuration and fall back to shared section, when local property is missing.\n               Otherwise, only local configuration will be checked."
    name: "shared"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationPropertyBuilder<T> shared(boolean shared)"
  desc: "Sets flag indicating that property can be provided in the shared configuration section in addition to client-specific configuration section. Default is `false`, indicating that property can only be provided in local configuration."
  returns:
    description: "the updated ConfigurationPropertyBuilder object."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.ConfigurationPropertyBuilder.systemPropertyName(java.lang.String)"
  fullName: "com.azure.core.util.ConfigurationPropertyBuilder<T>.systemPropertyName(String systemPropertyName)"
  name: "systemPropertyName(String systemPropertyName)"
  nameWithType: "ConfigurationPropertyBuilder<T>.systemPropertyName(String systemPropertyName)"
  summary: "Sets system property name that can represent this property if explicit configuration is not set."
  parameters:
  - description: "one or more environment variable (or system property)."
    name: "systemPropertyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationPropertyBuilder<T> systemPropertyName(String systemPropertyName)"
  desc: "Sets system property name that can represent this property if explicit configuration is not set.\n\nWhen property value is not found by `name` or `alias`, <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> falls back to system properties and environment variables. When environment variable (or system property) is not set, <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> does not attempt to read environment configuration."
  returns:
    description: "the updated ConfigurationPropertyBuilder object."
    type: "<xref href=\"com.azure.core.util.ConfigurationPropertyBuilder?alt=com.azure.core.util.ConfigurationPropertyBuilder&text=ConfigurationPropertyBuilder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
typeParameters:
- description: "The property value type."
  name: "T"
desc: "Builds configuration property."
metadata: {}
package: "com.azure.core.util"
artifact: com.azure:azure-core:1.31.0
