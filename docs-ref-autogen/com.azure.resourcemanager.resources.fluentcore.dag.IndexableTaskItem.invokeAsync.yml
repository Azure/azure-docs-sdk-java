### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem.invokeAsync*"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem.invokeAsync"
name: "invokeAsync"
nameWithType: "IndexableTaskItem.invokeAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem.invokeAsync(TaskGroup.InvocationContext context)"
  name: "invokeAsync(TaskGroup.InvocationContext context)"
  nameWithType: "IndexableTaskItem.invokeAsync(TaskGroup.InvocationContext context)"
  summary: "The method that gets called to perform the unit of work asynchronously."
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext&text=InvocationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Indexable> invokeAsync(TaskGroup.InvocationContext context)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
