### YamlMime:JavaType
uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters"
fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters"
name: "RedisRebootParameters"
nameWithType: "RedisRebootParameters"
summary: "Specifies which Redis node(s) to reboot."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RedisRebootParameters"
constructors:
- uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters.RedisRebootParameters()"
  fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters.RedisRebootParameters()"
  name: "RedisRebootParameters()"
  nameWithType: "RedisRebootParameters.RedisRebootParameters()"
  syntax: "public RedisRebootParameters()"
methods:
- uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters.ports()"
  fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters.ports()"
  name: "ports()"
  nameWithType: "RedisRebootParameters.ports()"
  summary: "Get the ports property: A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports."
  syntax: "public List<Integer> ports()"
  desc: "Get the ports property: A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports."
  returns:
    description: "the ports value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters.rebootType()"
  fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters.rebootType()"
  name: "rebootType()"
  nameWithType: "RedisRebootParameters.rebootType()"
  summary: "Get the reboot<wbr>Type property: Which Redis node(s) to reboot."
  syntax: "public RebootType rebootType()"
  desc: "Get the rebootType property: Which Redis node(s) to reboot. Depending on this value data loss is possible."
  returns:
    description: "the rebootType value."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RebootType?alt=com.azure.resourcemanager.redis.models.RebootType&text=RebootType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters.shardId()"
  fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters.shardId()"
  name: "shardId()"
  nameWithType: "RedisRebootParameters.shardId()"
  summary: "Get the shard<wbr>Id property: If clustering is enabled, the ID of the shard to be rebooted."
  syntax: "public Integer shardId()"
  desc: "Get the shardId property: If clustering is enabled, the ID of the shard to be rebooted."
  returns:
    description: "the shardId value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters.validate()"
  fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters.validate()"
  name: "validate()"
  nameWithType: "RedisRebootParameters.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters.withPorts(java.util.List<java.lang.Integer>)"
  fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters.withPorts(List<Integer> ports)"
  name: "withPorts(List<Integer> ports)"
  nameWithType: "RedisRebootParameters.withPorts(List<Integer> ports)"
  summary: "Set the ports property: A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports."
  parameters:
  - description: "the ports value to set."
    name: "ports"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RedisRebootParameters withPorts(List<Integer> ports)"
  desc: "Set the ports property: A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports."
  returns:
    description: "the RedisRebootParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisRebootParameters?alt=com.azure.resourcemanager.redis.models.RedisRebootParameters&text=RedisRebootParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters.withRebootType(com.azure.resourcemanager.redis.models.RebootType)"
  fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters.withRebootType(RebootType rebootType)"
  name: "withRebootType(RebootType rebootType)"
  nameWithType: "RedisRebootParameters.withRebootType(RebootType rebootType)"
  summary: "Set the reboot<wbr>Type property: Which Redis node(s) to reboot."
  parameters:
  - description: "the rebootType value to set."
    name: "rebootType"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RebootType?alt=com.azure.resourcemanager.redis.models.RebootType&text=RebootType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisRebootParameters withRebootType(RebootType rebootType)"
  desc: "Set the rebootType property: Which Redis node(s) to reboot. Depending on this value data loss is possible."
  returns:
    description: "the RedisRebootParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisRebootParameters?alt=com.azure.resourcemanager.redis.models.RedisRebootParameters&text=RedisRebootParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisRebootParameters.withShardId(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.redis.models.RedisRebootParameters.withShardId(Integer shardId)"
  name: "withShardId(Integer shardId)"
  nameWithType: "RedisRebootParameters.withShardId(Integer shardId)"
  summary: "Set the shard<wbr>Id property: If clustering is enabled, the ID of the shard to be rebooted."
  parameters:
  - description: "the shardId value to set."
    name: "shardId"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisRebootParameters withShardId(Integer shardId)"
  desc: "Set the shardId property: If clustering is enabled, the ID of the shard to be rebooted."
  returns:
    description: "the RedisRebootParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisRebootParameters?alt=com.azure.resourcemanager.redis.models.RedisRebootParameters&text=RedisRebootParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies which Redis node(s) to reboot."
metadata: {}
package: "com.azure.resourcemanager.redis.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.16.0
