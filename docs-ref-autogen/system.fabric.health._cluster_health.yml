items:
- uid: system.fabric.health._cluster_health
  id: _cluster_health
  parent: system.fabric.health
  children:
  - system.fabric.health._cluster_health.getApplicationHealthStates()
  - system.fabric.health._cluster_health.getNodeHealthStates()
  href: system.fabric.health._cluster_health.yml
  langs:
  - java
  name: ClusterHealth
  nameWithType: ClusterHealth
  fullName: system.fabric.health.ClusterHealth
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealth.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealth.java
    startLine: 11
  package: system.fabric.health
  summary: <p>Represents the health of the cluster, as returned by <xref href="system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)" data-throw-if-not-resolved="false"></xref> . Contains the cluster aggregated health state and the cluster application and node health states. </p>
  syntax:
    content: public class ClusterHealth extends EntityHealth
  inheritance:
  - java.lang.Object
  - system.fabric.health._entity_health
  inheritedMembers:
  - system.fabric.health._cluster_health.ClusterHealth(NodeHealthState [],ApplicationHealthState [],int,HealthEvent [],HealthEvaluation [])
  - system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  - system.fabric.health._entity_health.getAggregatedHealthState()
  - system.fabric.health._entity_health.getHealthEvents()
  - system.fabric.health._entity_health.getUnhealthyEvaluations()
- uid: system.fabric.health._cluster_health.getApplicationHealthStates()
  id: getApplicationHealthStates()
  parent: system.fabric.health._cluster_health
  href: system.fabric.health._cluster_health.yml
  langs:
  - java
  name: getApplicationHealthStates()
  nameWithType: ClusterHealth.getApplicationHealthStates()
  fullName: List<ApplicationHealthState> system.fabric.health.ClusterHealth.getApplicationHealthStates()
  overload: system.fabric.health._cluster_health.getApplicationHealthStates*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealth.java
    startLine: 57
  package: system.fabric.health
  summary: >-
    <p>Gets the cluster application health states as found in the health store.</p>

    <p></p>
  syntax:
    content: public List<ApplicationHealthState> getApplicationHealthStates()
    return:
      type: 5618da2dsystem.fabric.health._application_health_statea08ddfce
      description: <p>The cluster applications as found in the health store. Only applications that respect the <xref href="system.fabric._cluster_health_query_description.getApplicationHealthStatesFilter()" data-throw-if-not-resolved="false"></xref> (if specified) are returned. If the input filter is not specified, all applications are returned. All applications are evaluated to determine the cluster aggregated health. </p>
- uid: system.fabric.health._cluster_health.getNodeHealthStates()
  id: getNodeHealthStates()
  parent: system.fabric.health._cluster_health
  href: system.fabric.health._cluster_health.yml
  langs:
  - java
  name: getNodeHealthStates()
  nameWithType: ClusterHealth.getNodeHealthStates()
  fullName: List<NodeHealthState> system.fabric.health.ClusterHealth.getNodeHealthStates()
  overload: system.fabric.health._cluster_health.getNodeHealthStates*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealth.java
    startLine: 43
  package: system.fabric.health
  summary: >-
    <p>Gets the cluster node health states as found in the health store.</p>

    <p>

    All nodes are evaluated to determine the cluster aggregated health. </p>
  syntax:
    content: public List<NodeHealthState> getNodeHealthStates()
    return:
      type: 5618da2dsystem.fabric.health._node_health_statea08ddfce
      description: <p>The cluster nodes as found in the health store. Only nodes that respect the <xref href="system.fabric._cluster_health_query_description.getNodeHealthStatesFilter()" data-throw-if-not-resolved="false"></xref> (if specified) are returned. If the input filter is not specified, all nodes are returned. </p>
references:
- uid: 5618da2dsystem.fabric.health._node_health_statea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: system.fabric.health._node_health_state
    name: NodeHealthState
    fullName: system.fabric.health.NodeHealthState
    href: system.fabric.health._node_health_state.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric.health._cluster_health.getNodeHealthStates*
  name: getNodeHealthStates
  nameWithType: ClusterHealth.getNodeHealthStates
  fullName: List<NodeHealthState> system.fabric.health.ClusterHealth.getNodeHealthStates
  package: system.fabric.health
- uid: 5618da2dsystem.fabric.health._application_health_statea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: system.fabric.health._application_health_state
    name: ApplicationHealthState
    fullName: system.fabric.health.ApplicationHealthState
    href: system.fabric.health._application_health_state.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric.health._cluster_health.getApplicationHealthStates*
  name: getApplicationHealthStates
  nameWithType: ClusterHealth.getApplicationHealthStates
  fullName: List<ApplicationHealthState> system.fabric.health.ClusterHealth.getApplicationHealthStates
  package: system.fabric.health
- uid: system.fabric.health._cluster_health.ClusterHealth(NodeHealthState [],ApplicationHealthState [],int,HealthEvent [],HealthEvaluation [])
- uid: system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  nameWithType: EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  fullName: system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  type: Constructor
  syntax:
    content: protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
    parameters:
    - id: aggregatedHealthState
      type: f75371fa
    - id: healthEvents
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
    - id: unhealthyEvaluations
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
- uid: system.fabric.health._entity_health.getAggregatedHealthState()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getAggregatedHealthState()
  nameWithType: EntityHealth.getAggregatedHealthState()
  fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
  type: Method
  summary: >-
    <p>Gets the entity aggregated health state.</p>

    <p></p>
  syntax:
    content: public HealthState getAggregatedHealthState()
    return:
      type: system.fabric.health._health_state
      description: >-
        <p>

          <xref href="system.fabric.health._health_state" data-throw-if-not-resolved="false"></xref> representing the aggregated health state computed by Health Manager based on reported events on entity and its children (if any) and desired health policy. </p>
- uid: system.fabric.health._entity_health.getHealthEvents()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getHealthEvents()
  nameWithType: EntityHealth.getHealthEvents()
  fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
  type: Method
  summary: >-
    <p>Gets the health events reported on the entity.</p>

    <p>

      <bold>Remarks:</bold>The health events are created based on health reports sent to health store. They contain additional metadata added by health store. </p>
  syntax:
    content: public List<HealthEvent> getHealthEvents()
    return:
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
      description: <p>The health events reported on the entity. </p>
- uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getUnhealthyEvaluations()
  nameWithType: EntityHealth.getUnhealthyEvaluations()
  fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
  type: Method
  summary: >-
    <p>Gets the unhealthy evaluations that show why the current aggregated health state was returned by Health Manager.</p>

    <p></p>
  syntax:
    content: public List<HealthEvaluation> getUnhealthyEvaluations()
    return:
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
      description: <p>The unhealthy evaluations that describe why the current aggregated health state was returned by Health Manager. </p>
- uid: system.fabric.health._entity_health
  parent: system.fabric.health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: system.fabric.health.EntityHealth
  type: Class
  summary: <p>Represents the base class for all entity health related classes. </p>
  syntax:
    content: public class EntityHealth
- uid: system.fabric.health._node_health_state
  parent: system.fabric.health
  href: system.fabric.health._node_health_state.yml
  name: NodeHealthState
  nameWithType: NodeHealthState
  fullName: system.fabric.health.NodeHealthState
  type: Class
  summary: <p>Represents the health state of a node, which contains the node identifier and its aggregated health state. </p>
  syntax:
    content: public class NodeHealthState
- uid: system.fabric.health._application_health_state
  parent: system.fabric.health
  href: system.fabric.health._application_health_state.yml
  name: ApplicationHealthState
  nameWithType: ApplicationHealthState
  fullName: system.fabric.health.ApplicationHealthState
  type: Class
  summary: <p>Represents the health state of an application, which contains the application identifier and the aggregated health state. </p>
  syntax:
    content: public class ApplicationHealthState extends EntityHealthState
- uid: system.fabric.health._health_event
  parent: system.fabric.health
  href: system.fabric.health._health_event.yml
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: system.fabric.health.HealthEvent
  type: Class
  summary: <p>A <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API </p>
  syntax:
    content: public class HealthEvent
- uid: system.fabric.health._health_evaluation
  parent: system.fabric.health
  href: system.fabric.health._health_evaluation.yml
  name: HealthEvaluation
  nameWithType: HealthEvaluation
  fullName: system.fabric.health.HealthEvaluation
  type: Class
  summary: <p>Represents a health evaluation which describes the data and the algorithm used by health store to evaluate the health of an entity. </p>
  syntax:
    content: public class HealthEvaluation
- uid: system.fabric._cluster_health_query_description.getNodeHealthStatesFilter()
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  name: getNodeHealthStatesFilter()
  nameWithType: ClusterHealthQueryDescription.getNodeHealthStatesFilter()
  fullName: NodeHealthStatesFilter system.fabric.ClusterHealthQueryDescription.getNodeHealthStatesFilter()
  type: Method
  summary: >-
    <p>Gets the filter for <xref href="system.fabric.health._node_health_state" data-throw-if-not-resolved="false"></xref> children. Only children that match the filter will be returned.</p>

    <p>

      <bold>Remarks:</bold>Only nodes that match the filter will be returned. All nodes will be used to evaluate the cluster aggregated health state. If the filter is not specified, all cluster nodes are returned. </p>
  syntax:
    content: public NodeHealthStatesFilter getNodeHealthStatesFilter()
    return:
      type: system.fabric._node_health_states_filter
      description: <p>The filter for <xref href="system.fabric.health._node_health_state" data-throw-if-not-resolved="false"></xref> children. </p>
- uid: system.fabric._cluster_health_query_description.getApplicationHealthStatesFilter()
  parent: system.fabric._cluster_health_query_description
  href: system.fabric._cluster_health_query_description.yml
  name: getApplicationHealthStatesFilter()
  nameWithType: ClusterHealthQueryDescription.getApplicationHealthStatesFilter()
  fullName: ApplicationHealthStatesFilter system.fabric.ClusterHealthQueryDescription.getApplicationHealthStatesFilter()
  type: Method
  summary: >-
    <p>Gets the filter for <xref href="system.fabric.health._application_health_state" data-throw-if-not-resolved="false"></xref> children. Only children that match the filter will be returned.</p>

    <p>

      <bold>Remarks:</bold>Only applications that match the filter will be returned. All applications will be used to evaluate the cluster aggregated health state. If the filter is not specified, all cluster applications are returned. </p>
  syntax:
    content: public ApplicationHealthStatesFilter getApplicationHealthStatesFilter()
    return:
      type: system.fabric._application_health_states_filter
      description: <p>The filter for <xref href="system.fabric.health._application_health_state" data-throw-if-not-resolved="false"></xref> children. </p>
- uid: system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)
  parent: system.fabric._health_client
  href: system.fabric._health_client.yml
  name: getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
  nameWithType: HealthClient.getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
  fullName: CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
  type: Method
  summary: >-
    <p>Asynchronously gets the health of a Service Fabric cluster by using a query description.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ClusterHealth> getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
    parameters:
    - id: queryDescription
      type: system.fabric._cluster_health_query_description
      description: <p>The query description that defined query parameters like health policies, filters etc. </p>
    return:
      type: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
      description: <p>The health of a Service Fabric cluster. </p>
