### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder"
fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder"
name: "EventProcessorClientBuilder"
nameWithType: "EventProcessorClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>. Calling <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#buildEventProcessorClient()\"></xref> constructs a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>.\n\nTo create an instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>, the **following fields are required**:\n\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Consumer group name\"></xref>.\n *  <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref> \\- An implementation of CheckpointStore that stores checkpoint and partition ownership information to enable load balancing and checkpointing processed events.\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer&lt;com.azure.messaging.eventhubs.models.EventContext&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"processEvent\"></xref> or <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer&lt;com.azure.messaging.eventhubs.models.EventBatchContext&gt;,int,java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"processEventBatch\"></xref> \\- A callback that processes events received from the Event Hub.\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(java.util.function.Consumer&lt;com.azure.messaging.eventhubs.models.ErrorContext&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"processError\"></xref> \\- A callback that handles errors that may occur while running the EventProcessorClient.\n *  Credentials to perform operations against Azure Event Hubs. They can be set by using one of the following methods:\n    \n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connectionString(String)\"></xref> with a connection string to a specific Event Hub.\n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connectionString(String, String)\"></xref> with an Event Hub *namespace* connection string and the Event Hub name.\n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"credential(String, String, TokenCredential)\"></xref> with the fully qualified namespace, Event Hub name, and a set of credentials authorized to use the Event Hub.\n\n**Creating an <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>**\n\n```java\npublic EventProcessorClient createEventProcessor() {\n     String connectionString = \"Endpoint={endpoint};SharedAccessKeyName={sharedAccessKeyName};\"\n         + \"SharedAccessKey={sharedAccessKey};EntityPath={eventHubName}\";\n \n     EventProcessorClient eventProcessorClient = new EventProcessorClientBuilder()\n         .consumerGroup(\"consumer-group\")\n         .checkpointStore(new SampleCheckpointStore())\n         .processEvent(eventContext -> {\n             System.out.printf(\"Partition id = %s and sequence number of event = %s%n\",\n                 eventContext.getPartitionContext().getPartitionId(),\n                 eventContext.getEventData().getSequenceNumber());\n         })\n         .processError(errorContext -> {\n             System.out.printf(\"Error occurred in partition processor for partition %s, %s%n\",\n                 errorContext.getPartitionContext().getPartitionId(),\n                 errorContext.getThrowable());\n         })\n         .connectionString(connectionString)\n         .buildEventProcessorClient();\n     return eventProcessorClient;\n }\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EventProcessorClientBuilder"
constructors:
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder()"
fields:
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.DEFAULT_LOAD_BALANCING_UPDATE_INTERVAL"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.DEFAULT_OWNERSHIP_EXPIRATION_FACTOR"
methods:
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore(com.azure.messaging.eventhubs.CheckpointStore)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String,java.lang.String)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(java.lang.String)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition(java.util.Map<java.lang.String,com.azure.messaging.eventhubs.models.EventPosition>)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.loadBalancingStrategy(com.azure.messaging.eventhubs.LoadBalancingStrategy)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.loadBalancingUpdateInterval(java.time.Duration)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.partitionOwnershipExpirationInterval(java.time.Duration)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>,java.time.Duration)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int,java.time.Duration)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose(java.util.function.Consumer<com.azure.messaging.eventhubs.models.CloseContext>)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization(java.util.function.Consumer<com.azure.messaging.eventhubs.models.InitializationContext>)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions(com.azure.core.amqp.ProxyOptions)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry(com.azure.core.amqp.AmqpRetryOptions)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)"
- "com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType(com.azure.core.amqp.AmqpTransportType)"
type: "class"
metadata: {}
package: "com.azure.messaging.eventhubs"
artifact: com.azure:azure-messaging-eventhubs:5.4.0
