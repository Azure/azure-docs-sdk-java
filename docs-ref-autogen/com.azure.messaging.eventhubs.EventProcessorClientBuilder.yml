### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  id: EventProcessorClientBuilder
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs
  children:
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder()
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore(com.azure.messaging.eventhubs.CheckpointStore)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration(com.azure.core.util.Configuration)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String,java.lang.String)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(java.lang.String)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition(java.util.Map<java.lang.String,com.azure.messaging.eventhubs.models.EventPosition>)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>,java.time.Duration)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int,java.time.Duration)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose(java.util.function.Consumer<com.azure.messaging.eventhubs.models.CloseContext>)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization(java.util.function.Consumer<com.azure.messaging.eventhubs.models.InitializationContext>)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions(com.azure.core.amqp.ProxyOptions)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry(com.azure.core.amqp.AmqpRetryOptions)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)
  - com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType(com.azure.core.amqp.AmqpTransportType)
  langs:
  - java
  name: EventProcessorClientBuilder
  nameWithType: EventProcessorClientBuilder
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  type: Class
  package: com.azure.messaging.eventhubs
  summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref>. Calling <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()\" data-throw-if-not-resolved=\"false\">#buildEventProcessorClient()</xref> constructs a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref>.\n\nTo create an instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref>, the **following fields are required**:\n\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(java.lang.String)\" data-throw-if-not-resolved=\"false\">Consumer group name</xref>.\n *  <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\">CheckpointStore</xref> \\- An implementation of CheckpointStore that stores checkpoint and partition ownership information to enable load balancing and checkpointing processed events.\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer&lt;com.azure.messaging.eventhubs.models.EventContext&gt;)\" data-throw-if-not-resolved=\"false\">processEvent</xref> or <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer&lt;com.azure.messaging.eventhubs.models.EventBatchContext&gt;,int,java.time.Duration)\" data-throw-if-not-resolved=\"false\">processEventBatch</xref> \\- A callback that processes events received from the Event Hub.\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(java.util.function.Consumer&lt;com.azure.messaging.eventhubs.models.ErrorContext&gt;)\" data-throw-if-not-resolved=\"false\">processError</xref> \\- A callback that handles errors that may occur while running the EventProcessorClient.\n *  Credentials - **Credentials are required** to perform operations against Azure Event Hubs. They can be set by using one of the following methods:\n    \n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\">#connectionString(String)</xref> with a connection string to a specific Event Hub.\n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\">#connectionString(String, String)</xref> with an Event Hub *namespace* connection string and the Event Hub name.\n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\">#credential(String, String, TokenCredential)</xref> with the fully qualified namespace, Event Hub name, and a set of credentials authorized to use the Event Hub.\n\n**Creating an <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\">EventProcessorClient</xref>**\n\n```java\npublic EventProcessorClient createEventProcessor() {\n     String connectionString = \"Endpoint={endpoint};SharedAccessKeyName={sharedAccessKeyName};\"\n         + \"SharedAccessKey={sharedAccessKey};EntityPath={eventHubName}\";\n \n     EventProcessorClient eventProcessorClient = new EventProcessorClientBuilder()\n         .consumerGroup(\"consumer-group\")\n         .checkpointStore(new SampleCheckpointStore())\n         .processEvent(eventContext -> {\n             System.out.println(\"Partition id = \" + eventContext.getPartitionContext().getPartitionId()\n                 + \"and sequence number of event = \" + eventContext.getEventData().getSequenceNumber());\n         })\n         .processError(errorContext -> {\n             System.out.printf(\"Error occurred in partition processor for partition {}, {}\",\n                 errorContext.getPartitionContext().getPartitionId(),\n                 errorContext.getThrowable());\n         })\n         .connectionString(connectionString)\n         .buildEventProcessorClient();\n     return eventProcessorClient;\n }\n```"
  syntax:
    content: public class EventProcessorClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder()
  id: EventProcessorClientBuilder()
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: EventProcessorClientBuilder()
  nameWithType: EventProcessorClientBuilder.EventProcessorClientBuilder()
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder()
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder*
  type: Constructor
  package: com.azure.messaging.eventhubs
  summary: Creates a new instance of <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref>.
  syntax:
    content: public EventProcessorClientBuilder()
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()
  id: buildEventProcessorClient()
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: buildEventProcessorClient()
  nameWithType: EventProcessorClientBuilder.buildEventProcessorClient()
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: >-
    This will create a new <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> configured with the options set in this builder. Each call to this method will return a new instance of <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>.


    All partitions processed by this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> will start processing from <xref uid="com.azure.messaging.eventhubs.models.EventPosition.earliest()" data-throw-if-not-resolved="false">earliest</xref> available event in the respective partitions.
  syntax:
    content: public EventProcessorClient buildEventProcessorClient()
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClient
      description: A new instance of <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore(com.azure.messaging.eventhubs.CheckpointStore)
  id: checkpointStore(com.azure.messaging.eventhubs.CheckpointStore)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: checkpointStore(CheckpointStore checkpointStore)
  nameWithType: EventProcessorClientBuilder.checkpointStore(CheckpointStore checkpointStore)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore(CheckpointStore checkpointStore)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: >-
    Sets the <xref uid="com.azure.messaging.eventhubs.CheckpointStore" data-throw-if-not-resolved="false">CheckpointStore</xref> the <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> will use for storing partition ownership and checkpoint information.


    Users can, optionally, provide their own implementation of <xref uid="com.azure.messaging.eventhubs.CheckpointStore" data-throw-if-not-resolved="false">CheckpointStore</xref> which will store ownership and checkpoint information.
  syntax:
    content: public EventProcessorClientBuilder checkpointStore(CheckpointStore checkpointStore)
    parameters:
    - id: checkpointStore
      type: com.azure.messaging.eventhubs.CheckpointStore
      description: Implementation of <xref uid="com.azure.messaging.eventhubs.CheckpointStore" data-throw-if-not-resolved="false">CheckpointStore</xref>.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration(com.azure.core.util.Configuration)
  id: configuration(com.azure.core.util.Configuration)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: EventProcessorClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration(Configuration configuration)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Sets the configuration store that is used during construction of the service client. If not specified, the default configuration store is used to configure the <xref uid="" data-throw-if-not-resolved="false">EventHubAsyncClient</xref>. Use <xref uid="com.azure.core.util.Configuration.NONE" data-throw-if-not-resolved="false">Configuration#NONE</xref> to bypass using configuration settings during construction.
  syntax:
    content: public EventProcessorClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.Configuration
      description: The configuration store used to configure the <xref uid="" data-throw-if-not-resolved="false">EventHubAsyncClient</xref>.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> object.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String)
  id: connectionString(java.lang.String)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: connectionString(String connectionString)
  nameWithType: EventProcessorClientBuilder.connectionString(String connectionString)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(String connectionString)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: >-
    Sets the credential information given a connection string to the Event Hub instance.


    If the connection string is copied from the Event Hubs namespace, it will likely not contain the name to the desired Event Hub, which is needed. In this case, the name can be added manually by adding "EntityPath=EVENT\_HUB\_NAME" to the end of the connection string. For example, "EntityPath=telemetry-hub".


    If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name.
  syntax:
    content: public EventProcessorClientBuilder connectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: >-
        The connection string to use for connecting to the Event Hub instance. It is expected
         that the Event Hub name and the shared access key properties are contained in this connection string.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> object.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String,java.lang.String)
  id: connectionString(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: connectionString(String connectionString, String eventHubName)
  nameWithType: EventProcessorClientBuilder.connectionString(String connectionString, String eventHubName)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(String connectionString, String eventHubName)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Sets the credential information given a connection string to the Event Hubs namespace and name to a specific Event Hub instance.
  syntax:
    content: public EventProcessorClientBuilder connectionString(String connectionString, String eventHubName)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: >-
        The connection string to use for connecting to the Event Hubs namespace; it is expected
         that the shared access key properties are contained in this connection string, but not the Event Hub name.
    - id: eventHubName
      type: java.lang.String
      description: The name of the Event Hub to connect the client to.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> object.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(java.lang.String)
  id: consumerGroup(java.lang.String)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: consumerGroup(String consumerGroup)
  nameWithType: EventProcessorClientBuilder.consumerGroup(String consumerGroup)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(String consumerGroup)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Sets the consumer group name from which the <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> should consume events.
  syntax:
    content: public EventProcessorClientBuilder consumerGroup(String consumerGroup)
    parameters:
    - id: consumerGroup
      type: java.lang.String
      description: The consumer group name this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> should consume events.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)
  id: credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)
  nameWithType: EventProcessorClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Sets the credential information for which Event Hub instance to connect to, and how to authorize against it.
  syntax:
    content: public EventProcessorClientBuilder credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)
    parameters:
    - id: fullyQualifiedNamespace
      type: java.lang.String
      description: >-
        The fully qualified name for the Event Hubs namespace. This is likely to be
         similar to <strong>"{your-namespace}.servicebus.windows.net"</strong>.
    - id: eventHubName
      type: java.lang.String
      description: The name of the Event Hub to connect the client to.
    - id: credential
      type: com.azure.core.credential.TokenCredential
      description: >-
        The token credential to use for authorization. Access controls may be specified by the Event
         Hubs namespace or the requested Event Hub, depending on Azure configuration.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> object.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition(java.util.Map<java.lang.String,com.azure.messaging.eventhubs.models.EventPosition>)
  id: initialPartitionEventPosition(java.util.Map<java.lang.String,com.azure.messaging.eventhubs.models.EventPosition>)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: initialPartitionEventPosition(Map<String,EventPosition> initialPartitionEventPosition)
  nameWithType: EventProcessorClientBuilder.initialPartitionEventPosition(Map<String,EventPosition> initialPartitionEventPosition)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition(Map<String,EventPosition> initialPartitionEventPosition)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Sets the map containing the event position to use for each partition if a checkpoint for the partition does not exist in <xref uid="com.azure.messaging.eventhubs.CheckpointStore" data-throw-if-not-resolved="false">CheckpointStore</xref>. This map is keyed off of the partition id. If there is no checkpoint in <xref uid="com.azure.messaging.eventhubs.CheckpointStore" data-throw-if-not-resolved="false">CheckpointStore</xref> and there is no entry in this map, the processing of the partition will start from <xref uid="com.azure.messaging.eventhubs.models.EventPosition.latest()" data-throw-if-not-resolved="false">latest</xref> position.
  syntax:
    content: public EventProcessorClientBuilder initialPartitionEventPosition(Map<String,EventPosition> initialPartitionEventPosition)
    parameters:
    - id: initialPartitionEventPosition
      type: java.util.Map<java.lang.String,com.azure.messaging.eventhubs.models.EventPosition>
      description: Map of initial event positions for partition ids.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)
  id: processError(java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: processError(Consumer<ErrorContext> processError)
  nameWithType: EventProcessorClientBuilder.processError(Consumer<ErrorContext> processError)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(Consumer<ErrorContext> processError)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: The function that is called when an error occurs while processing events. The input contains the partition information where the error happened.
  syntax:
    content: public EventProcessorClientBuilder processError(Consumer<ErrorContext> processError)
    parameters:
    - id: processError
      type: java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>
      description: The callback that's called when an error occurs while processing events.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>)
  id: processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: processEvent(Consumer<EventContext> processEvent)
  nameWithType: EventProcessorClientBuilder.processEvent(Consumer<EventContext> processEvent)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(Consumer<EventContext> processEvent)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: The function that is called for each event received by this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>. The input contains the partition context and the event data.
  syntax:
    content: public EventProcessorClientBuilder processEvent(Consumer<EventContext> processEvent)
    parameters:
    - id: processEvent
      type: java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>
      description: The callback that's called when an event is received by this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>,java.time.Duration)
  id: processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>,java.time.Duration)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: processEvent(Consumer<EventContext> processEvent, Duration maxWaitTime)
  nameWithType: EventProcessorClientBuilder.processEvent(Consumer<EventContext> processEvent, Duration maxWaitTime)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(Consumer<EventContext> processEvent, Duration maxWaitTime)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: The function that is called for each event received by this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>. The input contains the partition context and the event data. If the max wait time is set, the receive will wait for that duration to receive an event and if is no event received, the consumer will be invoked with a null event data.
  syntax:
    content: public EventProcessorClientBuilder processEvent(Consumer<EventContext> processEvent, Duration maxWaitTime)
    parameters:
    - id: processEvent
      type: java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>
      description: >-
        The callback that's called when an event is received by this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> or
         when the max wait duration has expired.
    - id: maxWaitTime
      type: java.time.Duration
      description: The max time duration to wait to receive an event before invoking this handler.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int)
  id: processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)
  nameWithType: EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: The function that is called for each event received by this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>. The input contains the partition context and the event data. If the max wait time is set, the receive will wait for that duration to receive an event and if is no event received, the consumer will be invoked with a null event data.
  syntax:
    content: public EventProcessorClientBuilder processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)
    parameters:
    - id: processEventBatch
      type: java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>
      description: The callback that's called when an event is received by this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> or when the max wait duration has expired.
    - id: maxBatchSize
      type: int
      description: The maximum number of events that will be in the list when this callback is invoked.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int,java.time.Duration)
  id: processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int,java.time.Duration)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)
  nameWithType: EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: >-
    The function that is called for each event received by this <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>. The input contains the partition context and the event data. If the max wait time is set, the receive will wait for that duration to receive an event and if is no event received, the consumer will be invoked with a null event data.


    ```java

    EventProcessorClient eventProcessorClient = new EventProcessorClientBuilder()
         .consumerGroup("consumer-group")
         .checkpointStore(new SampleCheckpointStore())
         .processEventBatch(eventBatchContext -> {
             eventBatchContext.getEvents().forEach(eventData -> {
                 System.out.println("Partition id = " + eventBatchContext.getPartitionContext().getPartitionId()
                     + "and sequence number of event = " + eventData.getSequenceNumber());
             });
         }, 50, Duration.ofSeconds(30))
         .processError(errorContext -> {
             System.out.printf("Error occurred in partition processor for partition {}, {}",
                 errorContext.getPartitionContext().getPartitionId(),
                 errorContext.getThrowable());
         })
         .connectionString(connectionString)
         .buildEventProcessorClient();
    ```
  syntax:
    content: public EventProcessorClientBuilder processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)
    parameters:
    - id: processEventBatch
      type: java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>
      description: >-
        The callback that's called when an event is received  or when the max wait duration has
         expired.
    - id: maxBatchSize
      type: int
      description: The maximum number of events that will be in the list when this callback is invoked.
    - id: maxWaitTime
      type: java.time.Duration
      description: >-
        The max time duration to wait to receive a batch of events upto the max batch size before
         invoking this callback.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose(java.util.function.Consumer<com.azure.messaging.eventhubs.models.CloseContext>)
  id: processPartitionClose(java.util.function.Consumer<com.azure.messaging.eventhubs.models.CloseContext>)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: processPartitionClose(Consumer<CloseContext> closePartition)
  nameWithType: EventProcessorClientBuilder.processPartitionClose(Consumer<CloseContext> closePartition)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose(Consumer<CloseContext> closePartition)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: The function that is called when a processing for a partition stops. The input contains the partition information along with the reason for stopping the event processing for this partition.
  syntax:
    content: public EventProcessorClientBuilder processPartitionClose(Consumer<CloseContext> closePartition)
    parameters:
    - id: closePartition
      type: java.util.function.Consumer<com.azure.messaging.eventhubs.models.CloseContext>
      description: The callback that's called after processing for a partition stops.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization(java.util.function.Consumer<com.azure.messaging.eventhubs.models.InitializationContext>)
  id: processPartitionInitialization(java.util.function.Consumer<com.azure.messaging.eventhubs.models.InitializationContext>)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: processPartitionInitialization(Consumer<InitializationContext> initializePartition)
  nameWithType: EventProcessorClientBuilder.processPartitionInitialization(Consumer<InitializationContext> initializePartition)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization(Consumer<InitializationContext> initializePartition)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: The function that is called before processing starts for a partition. The input contains the partition information along with a default starting position for processing events that will be used in the case of a checkpoint unavailable in <xref uid="com.azure.messaging.eventhubs.CheckpointStore" data-throw-if-not-resolved="false">CheckpointStore</xref>. Users can update this position if a different starting position is preferred.
  syntax:
    content: public EventProcessorClientBuilder processPartitionInitialization(Consumer<InitializationContext> initializePartition)
    parameters:
    - id: initializePartition
      type: java.util.function.Consumer<com.azure.messaging.eventhubs.models.InitializationContext>
      description: The callback that's called before processing starts for a partition
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions(com.azure.core.amqp.ProxyOptions)
  id: proxyOptions(com.azure.core.amqp.ProxyOptions)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: proxyOptions(ProxyOptions proxyOptions)
  nameWithType: EventProcessorClientBuilder.proxyOptions(ProxyOptions proxyOptions)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions(ProxyOptions proxyOptions)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Sets the proxy configuration to use for <xref uid="" data-throw-if-not-resolved="false">EventHubAsyncClient</xref>. When a proxy is configured, <xref uid="com.azure.core.amqp.AmqpTransportType.AMQP_WEB_SOCKETS" data-throw-if-not-resolved="false">AmqpTransportType#AMQP_WEB_SOCKETS</xref> must be used for the transport type.
  syntax:
    content: public EventProcessorClientBuilder proxyOptions(ProxyOptions proxyOptions)
    parameters:
    - id: proxyOptions
      type: com.azure.core.amqp.ProxyOptions
      description: The proxy options to use.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> object.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry(com.azure.core.amqp.AmqpRetryOptions)
  id: retry(com.azure.core.amqp.AmqpRetryOptions)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: retry(AmqpRetryOptions retryOptions)
  nameWithType: EventProcessorClientBuilder.retry(AmqpRetryOptions retryOptions)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry(AmqpRetryOptions retryOptions)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Sets the retry policy for <xref uid="" data-throw-if-not-resolved="false">EventHubAsyncClient</xref>. If not specified, the default retry options are used.
  syntax:
    content: public EventProcessorClientBuilder retry(AmqpRetryOptions retryOptions)
    parameters:
    - id: retryOptions
      type: com.azure.core.amqp.AmqpRetryOptions
      description: The retry policy to use.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> object.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)
  id: trackLastEnqueuedEventProperties(boolean)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: trackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)
  nameWithType: EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: >-
    Sets whether or not the event processor should request information on the last enqueued event on its associated partition, and track that information as events are received.


    When information about the partition's last enqueued event is being tracked, each event received from the Event Hubs service will carry metadata about the partition that it otherwise would not. This results in a small amount of additional network bandwidth consumption that is generally a favorable trade-off when considered against periodically making requests for partition properties using the Event Hub client.
  syntax:
    content: public EventProcessorClientBuilder trackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)
    parameters:
    - id: trackLastEnqueuedEventProperties
      type: boolean
      description: >-
        <code>true</code> if the resulting events will keep track of the last enqueued
         information for that partition; <code>false</code> otherwise.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> instance.
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType(com.azure.core.amqp.AmqpTransportType)
  id: transportType(com.azure.core.amqp.AmqpTransportType)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0
  parent: com.azure.messaging.eventhubs.EventProcessorClientBuilder
  langs:
  - java
  name: transportType(AmqpTransportType transport)
  nameWithType: EventProcessorClientBuilder.transportType(AmqpTransportType transport)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType(AmqpTransportType transport)
  overload: com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Sets the transport type by which all the communication with Azure Event Hubs occurs. Default value is <xref uid="com.azure.core.amqp.AmqpTransportType.AMQP" data-throw-if-not-resolved="false">AmqpTransportType#AMQP</xref>.
  syntax:
    content: public EventProcessorClientBuilder transportType(AmqpTransportType transport)
    parameters:
    - id: transport
      type: com.azure.core.amqp.AmqpTransportType
      description: The transport type to use.
    return:
      type: com.azure.messaging.eventhubs.EventProcessorClientBuilder
      description: The updated <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder" data-throw-if-not-resolved="false">EventProcessorClientBuilder</xref> object.
references:
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder*
  name: EventProcessorClientBuilder
  nameWithType: EventProcessorClientBuilder.EventProcessorClientBuilder
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder
  package: com.azure.messaging.eventhubs
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString*
  name: connectionString
  nameWithType: EventProcessorClientBuilder.connectionString
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString
  package: com.azure.messaging.eventhubs
- uid: com.azure.core.util.Configuration
  spec.java:
  - uid: com.azure.core.util.Configuration
    name: Configuration
    fullName: com.azure.core.util.Configuration
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration*
  name: configuration
  nameWithType: EventProcessorClientBuilder.configuration
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration
  package: com.azure.messaging.eventhubs
- uid: com.azure.core.credential.TokenCredential
  spec.java:
  - uid: com.azure.core.credential.TokenCredential
    name: TokenCredential
    fullName: com.azure.core.credential.TokenCredential
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential*
  name: credential
  nameWithType: EventProcessorClientBuilder.credential
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential
  package: com.azure.messaging.eventhubs
- uid: com.azure.core.amqp.ProxyOptions
  spec.java:
  - uid: com.azure.core.amqp.ProxyOptions
    name: ProxyOptions
    fullName: com.azure.core.amqp.ProxyOptions
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions*
  name: proxyOptions
  nameWithType: EventProcessorClientBuilder.proxyOptions
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions
  package: com.azure.messaging.eventhubs
- uid: com.azure.core.amqp.AmqpTransportType
  spec.java:
  - uid: com.azure.core.amqp.AmqpTransportType
    name: AmqpTransportType
    fullName: com.azure.core.amqp.AmqpTransportType
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType*
  name: transportType
  nameWithType: EventProcessorClientBuilder.transportType
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType
  package: com.azure.messaging.eventhubs
- uid: com.azure.core.amqp.AmqpRetryOptions
  spec.java:
  - uid: com.azure.core.amqp.AmqpRetryOptions
    name: AmqpRetryOptions
    fullName: com.azure.core.amqp.AmqpRetryOptions
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry*
  name: retry
  nameWithType: EventProcessorClientBuilder.retry
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup*
  name: consumerGroup
  nameWithType: EventProcessorClientBuilder.consumerGroup
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.CheckpointStore
  name: CheckpointStore
  nameWithType: CheckpointStore
  fullName: com.azure.messaging.eventhubs.CheckpointStore
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore*
  name: checkpointStore
  nameWithType: EventProcessorClientBuilder.checkpointStore
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore
  package: com.azure.messaging.eventhubs
- uid: java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>
  spec.java:
  - uid: java.util.function.Consumer
    name: Consumer
    fullName: java.util.function.Consumer
  - name: <
    fullName: <
  - uid: com.azure.messaging.eventhubs.models.EventContext
    name: EventContext
    fullName: com.azure.messaging.eventhubs.models.EventContext
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent*
  name: processEvent
  nameWithType: EventProcessorClientBuilder.processEvent
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent
  package: com.azure.messaging.eventhubs
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>
  spec.java:
  - uid: java.util.function.Consumer
    name: Consumer
    fullName: java.util.function.Consumer
  - name: <
    fullName: <
  - uid: com.azure.messaging.eventhubs.models.EventBatchContext
    name: EventBatchContext
    fullName: com.azure.messaging.eventhubs.models.EventBatchContext
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch*
  name: processEventBatch
  nameWithType: EventProcessorClientBuilder.processEventBatch
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch
  package: com.azure.messaging.eventhubs
- uid: java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>
  spec.java:
  - uid: java.util.function.Consumer
    name: Consumer
    fullName: java.util.function.Consumer
  - name: <
    fullName: <
  - uid: com.azure.messaging.eventhubs.models.ErrorContext
    name: ErrorContext
    fullName: com.azure.messaging.eventhubs.models.ErrorContext
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError*
  name: processError
  nameWithType: EventProcessorClientBuilder.processError
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError
  package: com.azure.messaging.eventhubs
- uid: java.util.function.Consumer<com.azure.messaging.eventhubs.models.InitializationContext>
  spec.java:
  - uid: java.util.function.Consumer
    name: Consumer
    fullName: java.util.function.Consumer
  - name: <
    fullName: <
  - uid: com.azure.messaging.eventhubs.models.InitializationContext
    name: InitializationContext
    fullName: com.azure.messaging.eventhubs.models.InitializationContext
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization*
  name: processPartitionInitialization
  nameWithType: EventProcessorClientBuilder.processPartitionInitialization
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization
  package: com.azure.messaging.eventhubs
- uid: java.util.function.Consumer<com.azure.messaging.eventhubs.models.CloseContext>
  spec.java:
  - uid: java.util.function.Consumer
    name: Consumer
    fullName: java.util.function.Consumer
  - name: <
    fullName: <
  - uid: com.azure.messaging.eventhubs.models.CloseContext
    name: CloseContext
    fullName: com.azure.messaging.eventhubs.models.CloseContext
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose*
  name: processPartitionClose
  nameWithType: EventProcessorClientBuilder.processPartitionClose
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose
  package: com.azure.messaging.eventhubs
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties*
  name: trackLastEnqueuedEventProperties
  nameWithType: EventProcessorClientBuilder.trackLastEnqueuedEventProperties
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties
  package: com.azure.messaging.eventhubs
- uid: java.util.Map<java.lang.String,com.azure.messaging.eventhubs.models.EventPosition>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.azure.messaging.eventhubs.models.EventPosition
    name: EventPosition
    fullName: com.azure.messaging.eventhubs.models.EventPosition
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition*
  name: initialPartitionEventPosition
  nameWithType: EventProcessorClientBuilder.initialPartitionEventPosition
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventProcessorClient
  name: EventProcessorClient
  nameWithType: EventProcessorClient
  fullName: com.azure.messaging.eventhubs.EventProcessorClient
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient*
  name: buildEventProcessorClient
  nameWithType: EventProcessorClientBuilder.buildEventProcessorClient
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient
  package: com.azure.messaging.eventhubs
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.function.Consumer
  name: Consumer
  nameWithType: Consumer
  fullName: java.util.function.Consumer
- uid: com.azure.messaging.eventhubs.models.EventContext
  name: EventContext
  nameWithType: EventContext
  fullName: com.azure.messaging.eventhubs.models.EventContext
- uid: com.azure.messaging.eventhubs.models.EventBatchContext
  name: EventBatchContext
  nameWithType: EventBatchContext
  fullName: com.azure.messaging.eventhubs.models.EventBatchContext
- uid: com.azure.messaging.eventhubs.models.ErrorContext
  name: ErrorContext
  nameWithType: ErrorContext
  fullName: com.azure.messaging.eventhubs.models.ErrorContext
- uid: com.azure.messaging.eventhubs.models.InitializationContext
  name: InitializationContext
  nameWithType: InitializationContext
  fullName: com.azure.messaging.eventhubs.models.InitializationContext
- uid: com.azure.messaging.eventhubs.models.CloseContext
  name: CloseContext
  nameWithType: CloseContext
  fullName: com.azure.messaging.eventhubs.models.CloseContext
- uid: java.lang.String,com.azure.messaging.eventhubs.models.EventPosition
  name: String,EventPosition
  nameWithType: String,EventPosition
  fullName: java.lang.String,com.azure.messaging.eventhubs.models.EventPosition
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
