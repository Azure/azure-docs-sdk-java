### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  id: VaultsClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation
  children:
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeletedAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailability(java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeleted(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list()
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list(java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync()
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync(java.lang.Integer)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync(java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription()
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription(java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync()
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync(java.lang.Integer)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted()
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted(com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeletedAsync()
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  langs:
  - java
  name: VaultsClientImpl
  nameWithType: VaultsClientImpl
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  type: Class
  package: com.azure.resourcemanager.keyvault.implementation
  summary: An instance of this class provides access to all the operations defined in VaultsClient.
  syntax:
    content: public final class VaultsClientImpl implements InnerSupportsGet<VaultInner>, InnerSupportsDelete<Void>, VaultsClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  - com.azure.resourcemanager.keyvault.fluent.VaultsClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.VaultsClientImpl(com.azure.resourcemanager.keyvault.implementation.KeyVaultManagementClientImpl)
  id: VaultsClientImpl(com.azure.resourcemanager.keyvault.implementation.KeyVaultManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: VaultsClientImpl(KeyVaultManagementClientImpl client)
  nameWithType: VaultsClientImpl.VaultsClientImpl(KeyVaultManagementClientImpl client)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.VaultsClientImpl(KeyVaultManagementClientImpl client)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.VaultsClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Initializes an instance of VaultsClientImpl.
  syntax:
    content: " VaultsClientImpl(KeyVaultManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.keyvault.implementation.KeyVaultManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClientImpl.beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public SyncPoller<PollResult<VaultInner>,VaultInner> beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>,com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClientImpl.beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public SyncPoller<PollResult<VaultInner>,VaultInner> beginCreateOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>,com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public PollerFlux<PollResult<VaultInner>,VaultInner> beginCreateOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>,com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted(java.lang.String,java.lang.String)
  id: beginPurgeDeleted(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: beginPurgeDeleted(String vaultName, String location)
  nameWithType: VaultsClientImpl.beginPurgeDeleted(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginPurgeDeleted(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginPurgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: beginPurgeDeleted(String vaultName, String location, Context context)
  nameWithType: VaultsClientImpl.beginPurgeDeleted(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginPurgeDeleted(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeletedAsync(java.lang.String,java.lang.String)
  id: beginPurgeDeletedAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: beginPurgeDeletedAsync(String vaultName, String location)
  nameWithType: VaultsClientImpl.beginPurgeDeletedAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeletedAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginPurgeDeletedAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailability(java.lang.String)
  id: checkNameAvailability(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: checkNameAvailability(String name)
  nameWithType: VaultsClientImpl.checkNameAvailability(String name)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailability(String name)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public CheckNameAvailabilityResultInner checkNameAvailability(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityAsync(java.lang.String)
  id: checkNameAvailabilityAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: checkNameAvailabilityAsync(String name)
  nameWithType: VaultsClientImpl.checkNameAvailabilityAsync(String name)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityAsync(String name)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public Mono<CheckNameAvailabilityResultInner> checkNameAvailabilityAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponse(String name, Context context)
  nameWithType: VaultsClientImpl.checkNameAvailabilityWithResponse(String name, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponse(String name, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponse*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public Response<CheckNameAvailabilityResultInner> checkNameAvailabilityWithResponse(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponseAsync(java.lang.String)
  id: checkNameAvailabilityWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(String name)
  nameWithType: VaultsClientImpl.checkNameAvailabilityWithResponseAsync(String name)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponseAsync(String name)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: public Mono<Response<CheckNameAvailabilityResultInner>> checkNameAvailabilityWithResponseAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The vault name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner>>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClientImpl.createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public VaultInner createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  nameWithType: VaultsClientImpl.createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public VaultInner createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClientImpl.createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultInner> createOrUpdateAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  nameWithType: VaultsClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String vaultName)
  nameWithType: VaultsClientImpl.delete(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.delete(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public void delete(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String vaultName)
  nameWithType: VaultsClientImpl.deleteAsync(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteAsync(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String vaultName, Context context)
  nameWithType: VaultsClientImpl.deleteWithResponse(String resourceGroupName, String vaultName, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponse(String resourceGroupName, String vaultName, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public Response<Void> deleteWithResponse(String resourceGroupName, String vaultName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String vaultName)
  nameWithType: VaultsClientImpl.deleteWithResponseAsync(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponseAsync(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Deletes the specified Azure key vault.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String vaultName)
  nameWithType: VaultsClientImpl.getByResourceGroup(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroup(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets the specified Azure key vault.
  syntax:
    content: public VaultInner getByResourceGroup(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String vaultName)
  nameWithType: VaultsClientImpl.getByResourceGroupAsync(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupAsync(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets the specified Azure key vault.
  syntax:
    content: public Mono<VaultInner> getByResourceGroupAsync(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context)
  nameWithType: VaultsClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets the specified Azure key vault.
  syntax:
    content: public Response<VaultInner> getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName)
  nameWithType: VaultsClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets the specified Azure key vault.
  syntax:
    content: public Mono<Response<VaultInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String vaultName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>>
      description: the specified Azure key vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeleted(java.lang.String,java.lang.String)
  id: getDeleted(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: getDeleted(String vaultName, String location)
  nameWithType: VaultsClientImpl.getDeleted(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeleted(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public DeletedVaultInner getDeleted(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedAsync(java.lang.String,java.lang.String)
  id: getDeletedAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: getDeletedAsync(String vaultName, String location)
  nameWithType: VaultsClientImpl.getDeletedAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public Mono<DeletedVaultInner> getDeletedAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getDeletedWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: getDeletedWithResponse(String vaultName, String location, Context context)
  nameWithType: VaultsClientImpl.getDeletedWithResponse(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponse(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponse*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public Response<DeletedVaultInner> getDeletedWithResponse(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponseAsync(java.lang.String,java.lang.String)
  id: getDeletedWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: getDeletedWithResponseAsync(String vaultName, String location)
  nameWithType: VaultsClientImpl.getDeletedWithResponseAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponseAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets the deleted Azure key vault.
  syntax:
    content: public Mono<Response<DeletedVaultInner>> getDeletedWithResponseAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the vault.
    - id: location
      type: java.lang.String
      description: The location of the deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>>
      description: the deleted Azure key vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: list()
  nameWithType: VaultsClientImpl.list()
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list()
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<Resource> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list(java.lang.Integer,com.azure.core.util.Context)
  id: list(java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: list(Integer top, Context context)
  nameWithType: VaultsClientImpl.list(Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list(Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<Resource> list(Integer top, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listAsync()
  nameWithType: VaultsClientImpl.listAsync()
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync()
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<Resource> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync(java.lang.Integer)
  id: listAsync(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listAsync(Integer top)
  nameWithType: VaultsClientImpl.listAsync(Integer top)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync(Integer top)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<Resource> listAsync(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.core.management.Resource>
      description: list of vault resources.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: VaultsClientImpl.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedIterable<VaultInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Integer top, Context context)
  nameWithType: VaultsClientImpl.listByResourceGroup(String resourceGroupName, Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup(String resourceGroupName, Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedIterable<VaultInner> listByResourceGroup(String resourceGroupName, Integer top, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: VaultsClientImpl.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedFlux<VaultInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync(java.lang.String,java.lang.Integer)
  id: listByResourceGroupAsync(java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, Integer top)
  nameWithType: VaultsClientImpl.listByResourceGroupAsync(String resourceGroupName, Integer top)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync(String resourceGroupName, Integer top)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription and within the specified resource group.
  syntax:
    content: public PagedFlux<VaultInner> listByResourceGroupAsync(String resourceGroupName, Integer top)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription()
  id: listBySubscription()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listBySubscription()
  nameWithType: VaultsClientImpl.listBySubscription()
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription()
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<VaultInner> listBySubscription()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription(java.lang.Integer,com.azure.core.util.Context)
  id: listBySubscription(java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listBySubscription(Integer top, Context context)
  nameWithType: VaultsClientImpl.listBySubscription(Integer top, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription(Integer top, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedIterable<VaultInner> listBySubscription(Integer top, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync()
  id: listBySubscriptionAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listBySubscriptionAsync()
  nameWithType: VaultsClientImpl.listBySubscriptionAsync()
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync()
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<VaultInner> listBySubscriptionAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync(java.lang.Integer)
  id: listBySubscriptionAsync(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listBySubscriptionAsync(Integer top)
  nameWithType: VaultsClientImpl.listBySubscriptionAsync(Integer top)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync(Integer top)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: The List operation gets information about the vaults associated with the subscription.
  syntax:
    content: public PagedFlux<VaultInner> listBySubscriptionAsync(Integer top)
    parameters:
    - id: top
      type: java.lang.Integer
      description: Maximum number of results to return.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: list of vaults.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted()
  id: listDeleted()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listDeleted()
  nameWithType: VaultsClientImpl.listDeleted()
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted()
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public PagedIterable<DeletedVaultInner> listDeleted()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted(com.azure.core.util.Context)
  id: listDeleted(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listDeleted(Context context)
  nameWithType: VaultsClientImpl.listDeleted(Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted(Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public PagedIterable<DeletedVaultInner> listDeleted(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeletedAsync()
  id: listDeletedAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: listDeletedAsync()
  nameWithType: VaultsClientImpl.listDeletedAsync()
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeletedAsync()
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: public PagedFlux<DeletedVaultInner> listDeletedAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
      description: information about the deleted vaults in a subscription.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted(java.lang.String,java.lang.String)
  id: purgeDeleted(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: purgeDeleted(String vaultName, String location)
  nameWithType: VaultsClientImpl.purgeDeleted(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public void purgeDeleted(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: purgeDeleted(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: purgeDeleted(String vaultName, String location, Context context)
  nameWithType: VaultsClientImpl.purgeDeleted(String vaultName, String location, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted(String vaultName, String location, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public void purgeDeleted(String vaultName, String location, Context context)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedAsync(java.lang.String,java.lang.String)
  id: purgeDeletedAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: purgeDeletedAsync(String vaultName, String location)
  nameWithType: VaultsClientImpl.purgeDeletedAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Void> purgeDeletedAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedWithResponseAsync(java.lang.String,java.lang.String)
  id: purgeDeletedWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: purgeDeletedWithResponseAsync(String vaultName, String location)
  nameWithType: VaultsClientImpl.purgeDeletedWithResponseAsync(String vaultName, String location)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedWithResponseAsync(String vaultName, String location)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key vault.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> purgeDeletedWithResponseAsync(String vaultName, String location)
    parameters:
    - id: vaultName
      type: java.lang.String
      description: The name of the soft-deleted vault.
    - id: location
      type: java.lang.String
      description: The location of the soft-deleted vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  nameWithType: VaultsClientImpl.update(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.update(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public VaultInner update(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  id: updateAccessPolicy(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  nameWithType: VaultsClientImpl.updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicy*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public VaultAccessPolicyParametersInner updateAccessPolicy(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    return:
      type: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  id: updateAccessPolicyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  nameWithType: VaultsClientImpl.updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultAccessPolicyParametersInner> updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner>
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  id: updateAccessPolicyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: updateAccessPolicyWithResponse(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  nameWithType: VaultsClientImpl.updateAccessPolicyWithResponse(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponse(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponse*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public Response<VaultAccessPolicyParametersInner> updateAccessPolicyWithResponse(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner>
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  id: updateAccessPolicyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind,com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  nameWithType: VaultsClientImpl.updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<VaultAccessPolicyParametersInner>> updateAccessPolicyWithResponseAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the vault belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: operationKind
      type: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
      description: Name of the operation.
    - id: properties
      type: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
      description: Properties of the vault access policy.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner>>
      description: parameters for updating the access policy in a vault.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  nameWithType: VaultsClientImpl.updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public Mono<VaultInner> updateAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  id: updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: updateWithResponse(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  nameWithType: VaultsClientImpl.updateWithResponse(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponse(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponse*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public Response<VaultInner> updateWithResponse(String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
      description: resource information with extended details.
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.keyvault.models.VaultPatchParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0
  parent: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  nameWithType: VaultsClientImpl.updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
  overload: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.keyvault.implementation
  summary: Update a key vault in the specified subscription.
  syntax:
    content: public Mono<Response<VaultInner>> updateWithResponseAsync(String resourceGroupName, String vaultName, VaultPatchParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the Resource Group to which the server belongs.
    - id: vaultName
      type: java.lang.String
      description: Name of the vault.
    - id: parameters
      type: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
      description: Parameters for creating or updating a vault.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>>
      description: resource information with extended details.
references:
- uid: com.azure.resourcemanager.keyvault.implementation.KeyVaultManagementClientImpl
  name: KeyVaultManagementClientImpl
  nameWithType: KeyVaultManagementClientImpl
  fullName: com.azure.resourcemanager.keyvault.implementation.KeyVaultManagementClientImpl
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.VaultsClientImpl*
  name: VaultsClientImpl
  nameWithType: VaultsClientImpl.VaultsClientImpl
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.VaultsClientImpl
  package: com.azure.resourcemanager.keyvault.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
  name: VaultCreateOrUpdateParameters
  nameWithType: VaultCreateOrUpdateParameters
  fullName: com.azure.resourcemanager.keyvault.models.VaultCreateOrUpdateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: VaultsClientImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>,com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: VaultsClientImpl.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>,com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: VaultsClientImpl.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginCreateOrUpdate
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: VaultsClientImpl.createOrUpdateAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdateAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  name: VaultInner
  nameWithType: VaultInner
  fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate*
  name: createOrUpdate
  nameWithType: VaultsClientImpl.createOrUpdate
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.createOrUpdate
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
  name: VaultPatchParameters
  nameWithType: VaultPatchParameters
  fullName: com.azure.resourcemanager.keyvault.models.VaultPatchParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: VaultsClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAsync*
  name: updateAsync
  nameWithType: VaultsClientImpl.updateAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.update*
  name: update
  nameWithType: VaultsClientImpl.update
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.update
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponse*
  name: updateWithResponse
  nameWithType: VaultsClientImpl.updateWithResponse
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateWithResponse
  package: com.azure.resourcemanager.keyvault.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: VaultsClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: VaultsClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.delete*
  name: delete
  nameWithType: VaultsClientImpl.delete
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.delete
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: VaultsClientImpl.deleteWithResponse
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.deleteWithResponse
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: VaultsClientImpl.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: VaultsClientImpl.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: VaultsClientImpl.getByResourceGroup
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroup
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: VaultsClientImpl.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
  name: AccessPolicyUpdateKind
  nameWithType: AccessPolicyUpdateKind
  fullName: com.azure.resourcemanager.keyvault.models.AccessPolicyUpdateKind
- uid: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
  name: VaultAccessPolicyProperties
  nameWithType: VaultAccessPolicyProperties
  fullName: com.azure.resourcemanager.keyvault.models.VaultAccessPolicyProperties
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
    name: VaultAccessPolicyParametersInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponseAsync*
  name: updateAccessPolicyWithResponseAsync
  nameWithType: VaultsClientImpl.updateAccessPolicyWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponseAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
    name: VaultAccessPolicyParametersInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyAsync*
  name: updateAccessPolicyAsync
  nameWithType: VaultsClientImpl.updateAccessPolicyAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
  name: VaultAccessPolicyParametersInner
  nameWithType: VaultAccessPolicyParametersInner
  fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicy*
  name: updateAccessPolicy
  nameWithType: VaultsClientImpl.updateAccessPolicy
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicy
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
    name: VaultAccessPolicyParametersInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultAccessPolicyParametersInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponse*
  name: updateAccessPolicyWithResponse
  nameWithType: VaultsClientImpl.updateAccessPolicyWithResponse
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.updateAccessPolicyWithResponse
  package: com.azure.resourcemanager.keyvault.implementation
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: VaultsClientImpl.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroupAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
    name: VaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: VaultsClientImpl.listByResourceGroup
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listByResourceGroup
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync*
  name: listBySubscriptionAsync
  nameWithType: VaultsClientImpl.listBySubscriptionAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscriptionAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription*
  name: listBySubscription
  nameWithType: VaultsClientImpl.listBySubscription
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listBySubscription
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeletedAsync*
  name: listDeletedAsync
  nameWithType: VaultsClientImpl.listDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeletedAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted*
  name: listDeleted
  nameWithType: VaultsClientImpl.listDeleted
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listDeleted
  package: com.azure.resourcemanager.keyvault.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponseAsync*
  name: getDeletedWithResponseAsync
  nameWithType: VaultsClientImpl.getDeletedWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponseAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedAsync*
  name: getDeletedAsync
  nameWithType: VaultsClientImpl.getDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
  name: DeletedVaultInner
  nameWithType: DeletedVaultInner
  fullName: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeleted*
  name: getDeleted
  nameWithType: VaultsClientImpl.getDeleted
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeleted
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
    name: DeletedVaultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.DeletedVaultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponse*
  name: getDeletedWithResponse
  nameWithType: VaultsClientImpl.getDeletedWithResponse
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.getDeletedWithResponse
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedWithResponseAsync*
  name: purgeDeletedWithResponseAsync
  nameWithType: VaultsClientImpl.purgeDeletedWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedWithResponseAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeletedAsync*
  name: beginPurgeDeletedAsync
  nameWithType: VaultsClientImpl.beginPurgeDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeletedAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted*
  name: beginPurgeDeleted
  nameWithType: VaultsClientImpl.beginPurgeDeleted
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.beginPurgeDeleted
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedAsync*
  name: purgeDeletedAsync
  nameWithType: VaultsClientImpl.purgeDeletedAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeletedAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted*
  name: purgeDeleted
  nameWithType: VaultsClientImpl.purgeDeleted
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.purgeDeleted
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.core.management.Resource>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.Resource
    name: Resource
    fullName: com.azure.core.management.Resource
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync*
  name: listAsync
  nameWithType: VaultsClientImpl.listAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.listAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.core.management.Resource>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.core.management.Resource
    name: Resource
    fullName: com.azure.core.management.Resource
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list*
  name: list
  nameWithType: VaultsClientImpl.list
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.list
  package: com.azure.resourcemanager.keyvault.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
    name: CheckNameAvailabilityResultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponseAsync*
  name: checkNameAvailabilityWithResponseAsync
  nameWithType: VaultsClientImpl.checkNameAvailabilityWithResponseAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponseAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
    name: CheckNameAvailabilityResultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityAsync*
  name: checkNameAvailabilityAsync
  nameWithType: VaultsClientImpl.checkNameAvailabilityAsync
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityAsync
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
  name: CheckNameAvailabilityResultInner
  nameWithType: CheckNameAvailabilityResultInner
  fullName: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailability*
  name: checkNameAvailability
  nameWithType: VaultsClientImpl.checkNameAvailability
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailability
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
    name: CheckNameAvailabilityResultInner
    fullName: com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponse*
  name: checkNameAvailabilityWithResponse
  nameWithType: VaultsClientImpl.checkNameAvailabilityWithResponse
  fullName: com.azure.resourcemanager.keyvault.implementation.VaultsClientImpl.checkNameAvailabilityWithResponse
  package: com.azure.resourcemanager.keyvault.implementation
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
  name: InnerSupportsGet<VaultInner>
  nameWithType: InnerSupportsGet<VaultInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.keyvault.fluent.models.VaultInner>
- uid: com.azure.resourcemanager.keyvault.fluent.VaultsClient
  name: VaultsClient
  nameWithType: VaultsClient
  fullName: com.azure.resourcemanager.keyvault.fluent.VaultsClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.keyvault.fluent.models.VaultInner>,com.azure.resourcemanager.keyvault.fluent.models.VaultInner
  name: VaultInner>,VaultInner
  nameWithType: VaultInner>,VaultInner
  fullName: com.azure.resourcemanager.keyvault.fluent.models.VaultInner>,com.azure.resourcemanager.keyvault.fluent.models.VaultInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.Resource
  name: Resource
  nameWithType: Resource
  fullName: com.azure.core.management.Resource
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
