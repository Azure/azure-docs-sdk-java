### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync*"
fullName: "com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync"
name: "listAsync"
nameWithType: "RoleDefinitionsClientImpl.listAsync"
members:
- uid: "com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(String scope)"
  name: "listAsync(String scope)"
  nameWithType: "RoleDefinitionsClientImpl.listAsync(String scope)"
  summary: "Get all role definitions that are applicable at scope and above."
  parameters:
  - description: "The scope of the role definition."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<RoleDefinitionInner> listAsync(String scope)"
  returns:
    description: "all role definitions that are applicable at scope and above."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner&text=RoleDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.implementation.RoleDefinitionsClientImpl.listAsync(String scope, String filter)"
  name: "listAsync(String scope, String filter)"
  nameWithType: "RoleDefinitionsClientImpl.listAsync(String scope, String filter)"
  summary: "Get all role definitions that are applicable at scope and above."
  parameters:
  - description: "The scope of the role definition."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as\n     well."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<RoleDefinitionInner> listAsync(String scope, String filter)"
  returns:
    description: "all role definitions that are applicable at scope and above."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner&text=RoleDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
