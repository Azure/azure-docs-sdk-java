### YamlMime:ManagedReference
items:
- uid: com.microsoft.aad.adal.Logger
  id: Logger
  parent: com.microsoft.aad.adal
  children:
  - com.microsoft.aad.adal.Logger.d(String,String)
  - com.microsoft.aad.adal.Logger.e(String,String)
  - com.microsoft.aad.adal.Logger.e(String,String,String,ADALError)
  - com.microsoft.aad.adal.Logger.e(String,String,String,ADALError,Throwable)
  - com.microsoft.aad.adal.Logger.e(String,String,Throwable)
  - com.microsoft.aad.adal.Logger.getCorrelationId()
  - com.microsoft.aad.adal.Logger.getInstance()
  - com.microsoft.aad.adal.Logger.i(String,String,String)
  - com.microsoft.aad.adal.Logger.i(String,String,String,ADALError)
  - com.microsoft.aad.adal.Logger.setAndroidLogEnabled(final boolean)
  - com.microsoft.aad.adal.Logger.setCorrelationId(UUID)
  - com.microsoft.aad.adal.Logger.setEnablePII(final boolean)
  - com.microsoft.aad.adal.Logger.setExternalLogger(ILogger)
  - com.microsoft.aad.adal.Logger.setLogLevel(final LogLevel)
  - com.microsoft.aad.adal.Logger.v(String,String)
  - com.microsoft.aad.adal.Logger.v(String,String,String,ADALError)
  - com.microsoft.aad.adal.Logger.w(String,String)
  - com.microsoft.aad.adal.Logger.w(String,String,String,ADALError)
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.aad.adal.Logger
  type: Class
  source:
    remote: &o0
      path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-android
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 38
  package: com.microsoft.aad.adal
  summary: "<p>Android log output can. If externalLogger is set, it will use that as well. Usage: Logger.v(tag, message, additionalMessage, errorCode) to log. Set custom logger: Logger.setExternalLogger(..); </p>"
  syntax: &o1
    content: public class Logger
  inheritance:
  - java.lang.Object
- uid: com.microsoft.aad.adal.Logger.d(String,String)
  id: d(String,String)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: d(String tag, String message)
  nameWithType: Logger.d(String tag, String message)
  fullName: com.microsoft.aad.adal.Logger.d(String tag, String message)
  overload: com.microsoft.aad.adal.Logger.d*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 277
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000006\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#info(String, String, String)\"></xref> instead. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs debug message. </p>"
  syntax:
    content: public static void d(String tag, String message)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>tag for the log message </p>
    - id: message
      type: "26831127"
      description: <p>body of the log message </p>
- uid: com.microsoft.aad.adal.Logger.e(String,String)
  id: e(String,String)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: e(String tag, String message)
  nameWithType: Logger.e(String tag, String message)
  fullName: com.microsoft.aad.adal.Logger.e(String tag, String message)
  overload: com.microsoft.aad.adal.Logger.e*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 440
  package: com.microsoft.aad.adal
  summary: "<p>Logs error message.</p>\r\n<p></p>"
  syntax:
    content: public static void e(String tag, String message)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>Tag for the log </p>
    - id: message
      type: "26831127"
      description: <p>Message to add to the log </p>
- uid: com.microsoft.aad.adal.Logger.e(String,String,String,ADALError)
  id: e(String,String,String,ADALError)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: e(String tag, String message, String additionalMessage, ADALError errorCode)
  nameWithType: Logger.e(String tag, String message, String additionalMessage, ADALError errorCode)
  fullName: com.microsoft.aad.adal.Logger.e(String tag, String message, String additionalMessage, ADALError errorCode)
  overload: com.microsoft.aad.adal.Logger.e*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 395
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000013\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#error(String, String, String, Throwable)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#errorPII(String, String, String, Throwable)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs error message. </p>"
  syntax:
    content: public static void e(String tag, String message, String additionalMessage, ADALError errorCode)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>tag for the log message </p>
    - id: message
      type: "26831127"
      description: <p>body of the log message </p>
    - id: additionalMessage
      type: "26831127"
      description: <p>additional parameters </p>
    - id: errorCode
      type: com.microsoft.aad.adal.ADALError
      description: <p>ADAL error code being logged </p>
- uid: com.microsoft.aad.adal.Logger.e(String,String,String,ADALError,Throwable)
  id: e(String,String,String,ADALError,Throwable)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: e(String tag, String message, String additionalMessage, ADALError errorCode, Throwable throwable)
  nameWithType: Logger.e(String tag, String message, String additionalMessage, ADALError errorCode, Throwable throwable)
  fullName: com.microsoft.aad.adal.Logger.e(String tag, String message, String additionalMessage, ADALError errorCode, Throwable throwable)
  overload: com.microsoft.aad.adal.Logger.e*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 413
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000014\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#error(String, String, String, Throwable)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#errorPII(String, String, String, Throwable)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs error message. </p>"
  syntax:
    content: public static void e(String tag, String message, String additionalMessage, ADALError errorCode, Throwable throwable)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>Tag for the log </p>
    - id: message
      type: "26831127"
      description: <p>Message to add to the log </p>
    - id: additionalMessage
      type: "26831127"
      description: <p>any additional parameters </p>
    - id: errorCode
      type: com.microsoft.aad.adal.ADALError
      description: <p>ADAL error code </p>
    - id: throwable
      type: a04fafd7
      description: <p>Throwable </p>
- uid: com.microsoft.aad.adal.Logger.e(String,String,Throwable)
  id: e(String,String,Throwable)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: e(String tag, String message, Throwable throwable)
  nameWithType: Logger.e(String tag, String message, Throwable throwable)
  fullName: com.microsoft.aad.adal.Logger.e(String tag, String message, Throwable throwable)
  overload: com.microsoft.aad.adal.Logger.e*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 430
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000015\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#error(String, String, String, Throwable)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#errorPII(String, String, String, Throwable)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs error message. </p>"
  syntax:
    content: public static void e(String tag, String message, Throwable throwable)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>Tag for the log </p>
    - id: message
      type: "26831127"
      description: <p>Message to add to the log </p>
    - id: throwable
      type: a04fafd7
      description: <p>Throwable </p>
- uid: com.microsoft.aad.adal.Logger.getCorrelationId()
  id: getCorrelationId()
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: getCorrelationId()
  nameWithType: Logger.getCorrelationId()
  fullName: com.microsoft.aad.adal.Logger.getCorrelationId()
  overload: com.microsoft.aad.adal.Logger.getCorrelationId*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 467
  package: com.microsoft.aad.adal
  syntax:
    content: public String getCorrelationId()
    return:
      type: "26831127"
      description: <p>the correlation id for the logger. </p>
- uid: com.microsoft.aad.adal.Logger.getInstance()
  id: getInstance()
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: getInstance()
  nameWithType: Logger.getInstance()
  fullName: com.microsoft.aad.adal.Logger.getInstance()
  overload: com.microsoft.aad.adal.Logger.getInstance*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 48
  package: com.microsoft.aad.adal
  syntax:
    content: public static Logger getInstance()
    return:
      type: com.microsoft.aad.adal.Logger
      description: <p>The single instance of <xref uid="com.microsoft.aad.adal.Logger" data-throw-if-not-resolved="false" data-raw-source="Logger"></xref>. </p>
- uid: com.microsoft.aad.adal.Logger.i(String,String,String)
  id: i(String,String,String)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: i(String tag, String message, String additionalMessage)
  nameWithType: Logger.i(String tag, String message, String additionalMessage)
  fullName: com.microsoft.aad.adal.Logger.i(String tag, String message, String additionalMessage)
  overload: com.microsoft.aad.adal.Logger.i*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 297
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000007\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#info(String, String, String)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#infoPII(String, String, String)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs informational message. </p>"
  syntax:
    content: public static void i(String tag, String message, String additionalMessage)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>tag for the log message </p>
    - id: message
      type: "26831127"
      description: <p>body of the log message </p>
    - id: additionalMessage
      type: "26831127"
      description: <p>additional parameters </p>
- uid: com.microsoft.aad.adal.Logger.i(String,String,String,ADALError)
  id: i(String,String,String,ADALError)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: i(String tag, String message, String additionalMessage, ADALError errorCode)
  nameWithType: Logger.i(String tag, String message, String additionalMessage, ADALError errorCode)
  fullName: com.microsoft.aad.adal.Logger.i(String tag, String message, String additionalMessage, ADALError errorCode)
  overload: com.microsoft.aad.adal.Logger.i*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 314
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000008\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#info(String, String, String)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#infoPII(String, String, String)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs informational messages with error codes. </p>"
  syntax:
    content: public static void i(String tag, String message, String additionalMessage, ADALError errorCode)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>tag for the log message </p>
    - id: message
      type: "26831127"
      description: <p>body of the log message </p>
    - id: additionalMessage
      type: "26831127"
      description: <p>additional parameters </p>
    - id: errorCode
      type: com.microsoft.aad.adal.ADALError
      description: <p>ADAL error code being logged </p>
- uid: com.microsoft.aad.adal.Logger.setAndroidLogEnabled(final boolean)
  id: setAndroidLogEnabled(final boolean)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: setAndroidLogEnabled(final boolean androidLogEnabled)
  nameWithType: Logger.setAndroidLogEnabled(final boolean androidLogEnabled)
  fullName: com.microsoft.aad.adal.Logger.setAndroidLogEnabled(final boolean androidLogEnabled)
  overload: com.microsoft.aad.adal.Logger.setAndroidLogEnabled*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 145
  package: com.microsoft.aad.adal
  summary: "<p>Enable/Disable the Android logcat logging. By default, the sdk disables it.</p>\r\n<p></p>"
  syntax:
    content: public void setAndroidLogEnabled(final boolean androidLogEnabled)
    parameters:
    - id: androidLogEnabled
      type: 4dda0764
      description: <p>True if enabling the logcat logging, false otherwise. </p>
- uid: com.microsoft.aad.adal.Logger.setCorrelationId(UUID)
  id: setCorrelationId(UUID)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: setCorrelationId(UUID correlation)
  nameWithType: Logger.setCorrelationId(UUID correlation)
  fullName: com.microsoft.aad.adal.Logger.setCorrelationId(UUID correlation)
  overload: com.microsoft.aad.adal.Logger.setCorrelationId*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 449
  package: com.microsoft.aad.adal
  summary: "<p>Sets the correlation id for the logger.</p>\r\n<p></p>"
  syntax:
    content: public static void setCorrelationId(UUID correlation)
    parameters:
    - id: correlation
      type: add9545a
      description: <p>Correlation ID to be used </p>
- uid: com.microsoft.aad.adal.Logger.setEnablePII(final boolean)
  id: setEnablePII(final boolean)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: setEnablePII(final boolean enablePII)
  nameWithType: Logger.setEnablePII(final boolean enablePII)
  fullName: com.microsoft.aad.adal.Logger.setEnablePII(final boolean enablePII)
  overload: com.microsoft.aad.adal.Logger.setEnablePII*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 157
  package: com.microsoft.aad.adal
  summary: "<p>ADAL provides logging callbacks that assist in diagnostics. The callback has two parameters, message and additionalMessage. All user information is put into additionalMessage. ADAL will clear this data unless the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#mAllowPii\"></xref> is called with true. By default the library will not return any messages with user information in them.</p>\r\n<p></p>"
  syntax:
    content: public void setEnablePII(final boolean enablePII)
    parameters:
    - id: enablePII
      type: 4dda0764
      description: <p>True if enabling PII info to be logged, false otherwise. </p>
- uid: com.microsoft.aad.adal.Logger.setExternalLogger(ILogger)
  id: setExternalLogger(ILogger)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: setExternalLogger(ILogger externalLogger)
  nameWithType: Logger.setExternalLogger(ILogger externalLogger)
  fullName: com.microsoft.aad.adal.Logger.setExternalLogger(ILogger externalLogger)
  overload: com.microsoft.aad.adal.Logger.setExternalLogger*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 92
  package: com.microsoft.aad.adal
  summary: "<p>Set the custom logger. Configures external logging to configure a callback that the sdk will use to pass each log message. Overriding the logger callback is not allowed.</p>\r\n<p></p>"
  syntax:
    content: public synchronized void setExternalLogger(ILogger externalLogger)
    parameters:
    - id: externalLogger
      type: com.microsoft.aad.adal.Logger.ILogger
      description: <p>The reference to the <xref uid="com.microsoft.aad.adal.Logger.ILogger" data-throw-if-not-resolved="false" data-raw-source="ILogger"></xref> that can output the logs to the designated places. </p>
    return:
      type: 5c0b90ca
- uid: com.microsoft.aad.adal.Logger.setLogLevel(final LogLevel)
  id: setLogLevel(final LogLevel)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: setLogLevel(final LogLevel logLevel)
  nameWithType: Logger.setLogLevel(final LogLevel logLevel)
  fullName: com.microsoft.aad.adal.Logger.setLogLevel(final LogLevel logLevel)
  overload: com.microsoft.aad.adal.Logger.setLogLevel*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 57
  package: com.microsoft.aad.adal
  summary: "<p>Set the log level for diagnostic purpose. By default, the sdk enables the verbose level logging.</p>\r\n<p></p>"
  syntax:
    content: public void setLogLevel(final LogLevel logLevel)
    parameters:
    - id: logLevel
      type: 93de0ef9com.microsoft.aad.adal.Logger.LogLevel
      description: <p>The <xref uid="com.microsoft.aad.adal.Logger.LogLevel" data-throw-if-not-resolved="false" data-raw-source="LogLevel"></xref> to be enabled for the diagnostic logging. </p>
- uid: com.microsoft.aad.adal.Logger.v(String,String)
  id: v(String,String)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: v(String tag, String message)
  nameWithType: Logger.v(String tag, String message)
  fullName: com.microsoft.aad.adal.Logger.v(String tag, String message)
  overload: com.microsoft.aad.adal.Logger.v*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 329
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000009\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#verbose(String, String, String)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#verbosePII(String, String, String)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs verbose message. </p>"
  syntax:
    content: public static void v(String tag, String message)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>tag for the log message </p>
    - id: message
      type: "26831127"
      description: <p>body of the log message </p>
- uid: com.microsoft.aad.adal.Logger.v(String,String,String,ADALError)
  id: v(String,String,String,ADALError)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: v(String tag, String message, String additionalMessage, ADALError errorCode)
  nameWithType: Logger.v(String tag, String message, String additionalMessage, ADALError errorCode)
  fullName: com.microsoft.aad.adal.Logger.v(String tag, String message, String additionalMessage, ADALError errorCode)
  overload: com.microsoft.aad.adal.Logger.v*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 346
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000010\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#verbose(String, String, String)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#verbosePII(String, String, String)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs verbose message with error code. </p>"
  syntax:
    content: public static void v(String tag, String message, String additionalMessage, ADALError errorCode)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>tag for the log message </p>
    - id: message
      type: "26831127"
      description: <p>body of the log message </p>
    - id: additionalMessage
      type: "26831127"
      description: <p>additional parameters </p>
    - id: errorCode
      type: com.microsoft.aad.adal.ADALError
      description: <p>ADAL error code being logged </p>
- uid: com.microsoft.aad.adal.Logger.w(String,String)
  id: w(String,String)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: w(String tag, String message)
  nameWithType: Logger.w(String tag, String message)
  fullName: com.microsoft.aad.adal.Logger.w(String tag, String message)
  overload: com.microsoft.aad.adal.Logger.w*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 378
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000012\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#warn(String, String, String)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#warnPII(String, String, String)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs warning message. </p>"
  syntax:
    content: public static void w(String tag, String message)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>tag for the log message </p>
    - id: message
      type: "26831127"
      description: <p>body of the log message </p>
- uid: com.microsoft.aad.adal.Logger.w(String,String,String,ADALError)
  id: w(String,String,String,ADALError)
  parent: com.microsoft.aad.adal.Logger
  href: com.microsoft.aad.adal.Logger.yml
  langs:
  - java
  name: w(String tag, String message, String additionalMessage, ADALError errorCode)
  nameWithType: Logger.w(String tag, String message, String additionalMessage, ADALError errorCode)
  fullName: com.microsoft.aad.adal.Logger.w(String tag, String message, String additionalMessage, ADALError errorCode)
  overload: com.microsoft.aad.adal.Logger.w*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 363
  package: com.microsoft.aad.adal
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000011\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#warn(String, String, String)\"></xref> if the log message does not contain any PII information. use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.identity.common.internal.logging.Logger#warnPII(String, String, String)\"></xref> if the log message contains any PII information. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p>Logs warning message. </p>"
  syntax:
    content: public static void w(String tag, String message, String additionalMessage, ADALError errorCode)
    parameters:
    - id: tag
      type: "26831127"
      description: <p>tag for the log message </p>
    - id: message
      type: "26831127"
      description: <p>body of the log message </p>
    - id: additionalMessage
      type: "26831127"
      description: <p>additional parameters </p>
    - id: errorCode
      type: com.microsoft.aad.adal.ADALError
      description: <p>ADAL error code being logged </p>
references:
- uid: com.microsoft.aad.adal.Logger.getInstance*
  name: getInstance
  nameWithType: Logger.getInstance
  fullName: com.microsoft.aad.adal.Logger.getInstance
  package: com.microsoft.aad.adal
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.aad.adal.Logger.d*
  name: d
  nameWithType: Logger.d
  fullName: com.microsoft.aad.adal.Logger.d
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.Logger.i*
  name: i
  nameWithType: Logger.i
  fullName: com.microsoft.aad.adal.Logger.i
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.Logger.v*
  name: v
  nameWithType: Logger.v
  fullName: com.microsoft.aad.adal.Logger.v
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.Logger.w*
  name: w
  nameWithType: Logger.w
  fullName: com.microsoft.aad.adal.Logger.w
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.Logger.e*
  name: e
  nameWithType: Logger.e
  fullName: com.microsoft.aad.adal.Logger.e
  package: com.microsoft.aad.adal
- uid: a04fafd7
  spec.java:
  - name: Throwable
    fullName: Throwable
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: com.microsoft.aad.adal.Logger.setCorrelationId*
  name: setCorrelationId
  nameWithType: Logger.setCorrelationId
  fullName: com.microsoft.aad.adal.Logger.setCorrelationId
  package: com.microsoft.aad.adal
- uid: 93de0ef9com.microsoft.aad.adal.Logger.LogLevel
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.aad.adal.Logger.LogLevel
    name: Logger.LogLevel
    fullName: com.microsoft.aad.adal.Logger.LogLevel
    href: com.microsoft.aad.adal.Logger.LogLevel.yml
- uid: com.microsoft.aad.adal.Logger.setLogLevel*
  name: setLogLevel
  nameWithType: Logger.setLogLevel
  fullName: com.microsoft.aad.adal.Logger.setLogLevel
  package: com.microsoft.aad.adal
- uid: 5c0b90ca
  spec.java:
  - name: synchronized void
    fullName: synchronized void
- uid: com.microsoft.aad.adal.Logger.setExternalLogger*
  name: setExternalLogger
  nameWithType: Logger.setExternalLogger
  fullName: com.microsoft.aad.adal.Logger.setExternalLogger
  package: com.microsoft.aad.adal
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.aad.adal.Logger.setAndroidLogEnabled*
  name: setAndroidLogEnabled
  nameWithType: Logger.setAndroidLogEnabled
  fullName: com.microsoft.aad.adal.Logger.setAndroidLogEnabled
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.Logger.setEnablePII*
  name: setEnablePII
  nameWithType: Logger.setEnablePII
  fullName: com.microsoft.aad.adal.Logger.setEnablePII
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.Logger.getCorrelationId*
  name: getCorrelationId
  nameWithType: Logger.getCorrelationId
  fullName: com.microsoft.aad.adal.Logger.getCorrelationId
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.Logger
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.Logger.yml
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.aad.adal.Logger
  type: Class
  summary: "<p>Android log output can. If externalLogger is set, it will use that as well. Usage: Logger.v(tag, message, additionalMessage, errorCode) to log. Set custom logger: Logger.setExternalLogger(..); </p>"
  syntax: *o1
- uid: com.microsoft.aad.adal.Logger.ILogger
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.Logger.ILogger.yml
  name: Logger.ILogger
  nameWithType: Logger.ILogger
  fullName: com.microsoft.aad.adal.Logger.ILogger
  type: Interface
  summary: "<p>Interface for apps to configure the external logging. </p>"
  syntax:
    content: public interface ILogger
- uid: com.microsoft.aad.adal.ADALError
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.ADALError.yml
  name: ADALError
  nameWithType: ADALError
  fullName: com.microsoft.aad.adal.ADALError
  type: Enum
  summary: "<p>ADAL Error codes. </p>"
  syntax:
    content: public enum ADALError
- uid: com.microsoft.aad.adal.Logger.LogLevel
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.Logger.LogLevel.yml
  name: Logger.LogLevel
  nameWithType: Logger.LogLevel
  fullName: com.microsoft.aad.adal.Logger.LogLevel
  type: Enum
  summary: "<p>Enum class for LogLevel that the sdk recognizes. </p>"
  syntax:
    content: public enum LogLevel
