### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.specialized.cryptography.WrappedKey
  id: WrappedKey
  artifact: com.azure:azure-storage-blob-cryptography:12.6.1
  parent: com.azure.storage.blob.specialized.cryptography
  langs:
  - java
  name: WrappedKey
  nameWithType: WrappedKey
  fullName: com.azure.storage.blob.specialized.cryptography.WrappedKey
  type: Class
  package: com.azure.storage.blob.specialized.cryptography
  summary: Represents the envelope key details stored on the service.
  syntax:
    content: final class WrappedKey
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.cryptography.WrappedKey.WrappedKey()
  id: WrappedKey()
  artifact: com.azure:azure-storage-blob-cryptography:12.6.1
  parent: com.azure.storage.blob.specialized.cryptography.WrappedKey
  langs:
  - java
  name: WrappedKey()
  nameWithType: WrappedKey.WrappedKey()
  fullName: com.azure.storage.blob.specialized.cryptography.WrappedKey.WrappedKey()
  overload: com.azure.storage.blob.specialized.cryptography.WrappedKey.WrappedKey*
  type: Constructor
  package: com.azure.storage.blob.specialized.cryptography
  summary: Initializes a new instance of the <xref uid="com.azure.storage.blob.specialized.cryptography.WrappedKey" data-throw-if-not-resolved="false">WrappedKey</xref> class.
  syntax:
    content: " WrappedKey()"
- uid: com.azure.storage.blob.specialized.cryptography.WrappedKey.WrappedKey(java.lang.String,byte[],java.lang.String)
  id: WrappedKey(java.lang.String,byte[],java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.6.1
  parent: com.azure.storage.blob.specialized.cryptography.WrappedKey
  langs:
  - java
  name: WrappedKey(String keyId, byte[] encryptedKey, String algorithm)
  nameWithType: WrappedKey.WrappedKey(String keyId, byte[] encryptedKey, String algorithm)
  fullName: com.azure.storage.blob.specialized.cryptography.WrappedKey.WrappedKey(String keyId, byte[] encryptedKey, String algorithm)
  overload: com.azure.storage.blob.specialized.cryptography.WrappedKey.WrappedKey*
  type: Constructor
  package: com.azure.storage.blob.specialized.cryptography
  summary: Initializes a new instance of the <xref uid="com.azure.storage.blob.specialized.cryptography.WrappedKey" data-throw-if-not-resolved="false">WrappedKey</xref> class using the specified key id, encrypted key and the algorithm.
  syntax:
    content: " WrappedKey(String keyId, byte[] encryptedKey, String algorithm)"
    parameters:
    - id: keyId
      type: java.lang.String
      description: The key identifier string.
    - id: encryptedKey
      type: byte[]
      description: The encrypted content encryption key.
    - id: algorithm
      type: java.lang.String
      description: The algorithm used for wrapping.
references:
- uid: com.azure.storage.blob.specialized.cryptography.WrappedKey.WrappedKey*
  name: WrappedKey
  nameWithType: WrappedKey.WrappedKey
  fullName: com.azure.storage.blob.specialized.cryptography.WrappedKey.WrappedKey
  package: com.azure.storage.blob.specialized.cryptography
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
