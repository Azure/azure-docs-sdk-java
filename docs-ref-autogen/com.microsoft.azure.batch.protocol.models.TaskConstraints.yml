### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints.maxTaskRetryCount()
  name: maxTaskRetryCount()
  nameWithType: TaskConstraints.maxTaskRetryCount()
  returns:
    description: <p>the maxTaskRetryCount value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get note that this value specifically controls the number of retries for the task executable due to a nonzero exit code. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task after the first attempt. If the maximum retry count is -1, the Batch service retries the task without limit.</p>

    <p></p>
  syntax: public Integer maxTaskRetryCount()
  uid: com.microsoft.azure.batch.protocol.models.TaskConstraints.maxTaskRetryCount()
- fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints.maxWallClockTime()
  name: maxWallClockTime()
  nameWithType: TaskConstraints.maxWallClockTime()
  returns:
    description: <p>the maxWallClockTime value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if this is not specified, there is no time limit on how long the task may run.</p>

    <p></p>
  syntax: public Period maxWallClockTime()
  uid: com.microsoft.azure.batch.protocol.models.TaskConstraints.maxWallClockTime()
- fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints.retentionTime()
  name: retentionTime()
  nameWithType: TaskConstraints.retentionTime()
  returns:
    description: <p>the retentionTime value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the default is 7 days, i.e. the task directory will be retained for 7 days unless the compute node is removed or the job is deleted.</p>

    <p></p>
  syntax: public Period retentionTime()
  uid: com.microsoft.azure.batch.protocol.models.TaskConstraints.retentionTime()
- fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  name: withMaxTaskRetryCount(Integer maxTaskRetryCount)
  nameWithType: TaskConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  parameters:
  - description: <p>the maxTaskRetryCount value to set </p>
    name: maxTaskRetryCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskConstraints object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set note that this value specifically controls the number of retries for the task executable due to a nonzero exit code. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task after the first attempt. If the maximum retry count is -1, the Batch service retries the task without limit.</p>

    <p></p>
  syntax: public TaskConstraints withMaxTaskRetryCount(Integer maxTaskRetryCount)
  uid: com.microsoft.azure.batch.protocol.models.TaskConstraints.withMaxTaskRetryCount(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints.withMaxWallClockTime(Period maxWallClockTime)
  name: withMaxWallClockTime(Period maxWallClockTime)
  nameWithType: TaskConstraints.withMaxWallClockTime(Period maxWallClockTime)
  parameters:
  - description: <p>the maxWallClockTime value to set </p>
    name: maxWallClockTime
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskConstraints object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if this is not specified, there is no time limit on how long the task may run.</p>

    <p></p>
  syntax: public TaskConstraints withMaxWallClockTime(Period maxWallClockTime)
  uid: com.microsoft.azure.batch.protocol.models.TaskConstraints.withMaxWallClockTime(Period)
- fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints.withRetentionTime(Period retentionTime)
  name: withRetentionTime(Period retentionTime)
  nameWithType: TaskConstraints.withRetentionTime(Period retentionTime)
  parameters:
  - description: <p>the retentionTime value to set </p>
    name: retentionTime
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskConstraints object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the default is 7 days, i.e. the task directory will be retained for 7 days unless the compute node is removed or the job is deleted.</p>

    <p></p>
  syntax: public TaskConstraints withRetentionTime(Period retentionTime)
  uid: com.microsoft.azure.batch.protocol.models.TaskConstraints.withRetentionTime(Period)
nameWithType: TaskConstraints
syntax: public class TaskConstraints
type: class
uid: com.microsoft.azure.batch.protocol.models.TaskConstraints
fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints
name: TaskConstraints
package: com.microsoft.azure.batch.protocol.models
summary: <p>Execution constraints to apply to a task. </p>
metadata: {}
