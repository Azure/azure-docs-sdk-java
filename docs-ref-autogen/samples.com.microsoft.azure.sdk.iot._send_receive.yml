items:
- uid: samples.com.microsoft.azure.sdk.iot._send_receive
  id: _send_receive
  parent: samples.com.microsoft.azure.sdk.iot
  children:
  - samples.com.microsoft.azure.sdk.iot._send_receive.main(String [])
  href: samples.com.microsoft.azure.sdk.iot._send_receive.yml
  langs:
  - java
  name: SendReceive
  nameWithType: SendReceive
  fullName: samples.com.microsoft.azure.sdk.iot.SendReceive
  type: Class
  source:
    remote: &o0
      path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
    startLine: 15
  package: samples.com.microsoft.azure.sdk.iot
  summary: <p>Handles messages from an IoT Hub. Default protocol is to use MQTT transport. </p>
  syntax:
    content: public class SendReceive
  inheritance:
  - java.lang.Object
- uid: samples.com.microsoft.azure.sdk.iot._send_receive.main(String [])
  id: main(String [])
  parent: samples.com.microsoft.azure.sdk.iot._send_receive
  href: samples.com.microsoft.azure.sdk.iot._send_receive.yml
  langs:
  - java
  name: main(String[] args)
  nameWithType: SendReceive.main(String[] args)
  fullName: static void samples.com.microsoft.azure.sdk.iot.SendReceive.main(String[] args)
  overload: samples.com.microsoft.azure.sdk.iot._send_receive.main*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
    startLine: 120
  package: samples.com.microsoft.azure.sdk.iot
  summary: >-
    <p>Receives requests from an IoT Hub. Default protocol is to use use MQTT transport.</p>

    <p></p>
  syntax:
    content: public static void main(String[] args)
    parameters:
    - id: args
      type: 1bb63ab0
      description: <p>args[0] = IoT Hub connection string args[1] = number of requests to send args[2] = protocol (optional, one of 'mqtt' or 'amqps' or 'https' or 'amqps_ws') args[3] = path to certificate to enable one-way authentication over ssl for amqps (optional, default shall be used if unspecified). </p>
references:
- uid: 1bb63ab0
  spec.java:
  - name: String []
    fullName: String []
- uid: samples.com.microsoft.azure.sdk.iot._send_receive.main*
  name: main
  nameWithType: SendReceive.main
  fullName: static void samples.com.microsoft.azure.sdk.iot.SendReceive.main
  package: samples.com.microsoft.azure.sdk.iot
