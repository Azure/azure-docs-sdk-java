items:
- uid: com.microsoft.azure.storage.file._cloud_file
  id: _cloud_file
  parent: com.microsoft.azure.storage.file
  children:
  - com.microsoft.azure.storage.file._cloud_file.abortCopy(final String)
  - com.microsoft.azure.storage.file._cloud_file.abortCopy(final String,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.clearRange(final long,final long)
  - com.microsoft.azure.storage.file._cloud_file.clearRange(final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.CloudFile(final CloudFile)
  - com.microsoft.azure.storage.file._cloud_file.CloudFile(final StorageUri)
  - com.microsoft.azure.storage.file._cloud_file.CloudFile(final StorageUri,final StorageCredentials)
  - com.microsoft.azure.storage.file._cloud_file.CloudFile(final StorageUri,final String,final CloudFileShare)
  - com.microsoft.azure.storage.file._cloud_file.CloudFile(final URI)
  - com.microsoft.azure.storage.file._cloud_file.CloudFile(final URI,final StorageCredentials)
  - com.microsoft.azure.storage.file._cloud_file.create(final long)
  - com.microsoft.azure.storage.file._cloud_file.create(final long,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.delete()
  - com.microsoft.azure.storage.file._cloud_file.delete(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.deleteIfExists()
  - com.microsoft.azure.storage.file._cloud_file.deleteIfExists(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.download(final OutputStream)
  - com.microsoft.azure.storage.file._cloud_file.download(final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.downloadAttributes()
  - com.microsoft.azure.storage.file._cloud_file.downloadAttributes(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.downloadFileRanges()
  - com.microsoft.azure.storage.file._cloud_file.downloadFileRanges(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.downloadRange(final long,final Long,final OutputStream)
  - com.microsoft.azure.storage.file._cloud_file.downloadRange(final long,final Long,final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.downloadRangeToByteArray(final long,final Long,final byte [],final int)
  - com.microsoft.azure.storage.file._cloud_file.downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.downloadText()
  - com.microsoft.azure.storage.file._cloud_file.downloadText(final String,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.downloadToByteArray(final byte [],final int)
  - com.microsoft.azure.storage.file._cloud_file.downloadToByteArray(final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.downloadToFile(final String)
  - com.microsoft.azure.storage.file._cloud_file.downloadToFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.exists()
  - com.microsoft.azure.storage.file._cloud_file.exists(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.fileServiceClient()
  - com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String)
  - com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String,final IPRange,final SharedAccessProtocols)
  - com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  - com.microsoft.azure.storage.file._cloud_file.getCopyState()
  - com.microsoft.azure.storage.file._cloud_file.getMetadata()
  - com.microsoft.azure.storage.file._cloud_file.getName()
  - com.microsoft.azure.storage.file._cloud_file.getParent()
  - com.microsoft.azure.storage.file._cloud_file.getParentNameFromURI(final StorageUri,final CloudFileShare)
  - com.microsoft.azure.storage.file._cloud_file.getProperties()
  - com.microsoft.azure.storage.file._cloud_file.getServiceClient()
  - com.microsoft.azure.storage.file._cloud_file.getShare()
  - com.microsoft.azure.storage.file._cloud_file.getStorageUri()
  - com.microsoft.azure.storage.file._cloud_file.getStreamMinimumReadSizeInBytes()
  - com.microsoft.azure.storage.file._cloud_file.getStreamWriteSizeInBytes()
  - com.microsoft.azure.storage.file._cloud_file.getTransformedAddress(final OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.getUri()
  - com.microsoft.azure.storage.file._cloud_file.openRead()
  - com.microsoft.azure.storage.file._cloud_file.openRead(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.openWriteExisting()
  - com.microsoft.azure.storage.file._cloud_file.openWriteExisting(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.openWriteNew(final long)
  - com.microsoft.azure.storage.file._cloud_file.openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.parent()
  - com.microsoft.azure.storage.file._cloud_file.resize(long)
  - com.microsoft.azure.storage.file._cloud_file.resize(long,AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.setMetadata(final HashMap<String, String>)
  - com.microsoft.azure.storage.file._cloud_file.setProperties(final FileProperties)
  - com.microsoft.azure.storage.file._cloud_file.setShare(final CloudFileShare)
  - com.microsoft.azure.storage.file._cloud_file.setStorageUri(final StorageUri)
  - com.microsoft.azure.storage.file._cloud_file.setStreamMinimumReadSizeInBytes(final int)
  - com.microsoft.azure.storage.file._cloud_file.setStreamWriteSizeInBytes(final int)
  - com.microsoft.azure.storage.file._cloud_file.startCopy(final CloudBlob)
  - com.microsoft.azure.storage.file._cloud_file.startCopy(final CloudBlob,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.startCopy(final CloudFile)
  - com.microsoft.azure.storage.file._cloud_file.startCopy(final CloudFile,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.startCopy(final URI)
  - com.microsoft.azure.storage.file._cloud_file.startCopy(final URI,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.streamMinimumReadSizeInBytes()
  - com.microsoft.azure.storage.file._cloud_file.streamWriteSizeInBytes()
  - com.microsoft.azure.storage.file._cloud_file.updateEtagAndLastModifiedFromResponse(HttpURLConnection)
  - com.microsoft.azure.storage.file._cloud_file.updateLengthFromResponse(HttpURLConnection)
  - com.microsoft.azure.storage.file._cloud_file.upload(final InputStream,final long)
  - com.microsoft.azure.storage.file._cloud_file.upload(final InputStream,final long,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.uploadFromByteArray(final byte [],final int,final int)
  - com.microsoft.azure.storage.file._cloud_file.uploadFromByteArray(final byte [],final int,final int,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.uploadFromFile(final String)
  - com.microsoft.azure.storage.file._cloud_file.uploadFromFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.uploadMetadata()
  - com.microsoft.azure.storage.file._cloud_file.uploadMetadata(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.uploadProperties()
  - com.microsoft.azure.storage.file._cloud_file.uploadProperties(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.uploadRange(final InputStream,final long,final long)
  - com.microsoft.azure.storage.file._cloud_file.uploadRange(final InputStream,final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file.uploadText(final String)
  - com.microsoft.azure.storage.file._cloud_file.uploadText(final String,final String,final AccessCondition,FileRequestOptions,OperationContext)
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: CloudFile
  nameWithType: CloudFile
  fullName: com.microsoft.azure.storage.file.CloudFile
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 69
  package: com.microsoft.azure.storage.file
  summary: <p>Represents a Microsoft Azure File. </p>
  syntax: &o1
    content: public class CloudFile implements ListFileItem
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage.file._list_file_item
  inheritedMembers:
  - com.microsoft.azure.storage.file._cloud_file.getCanonicalName()
- uid: com.microsoft.azure.storage.file._cloud_file.abortCopy(final String)
  id: abortCopy(final String)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: abortCopy(final String copyId)
  nameWithType: CloudFile.abortCopy(final String copyId)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.abortCopy(final String copyId)
  overload: com.microsoft.azure.storage.file._cloud_file.abortCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 233
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Aborts an ongoing Azure File copy operation.</p>

    <p></p>
  syntax:
    content: public final void abortCopy(final String copyId)
    parameters:
    - id: copyId
      type: 3d93591e
      description: <p>A <code>String</code> object that identifies the copy operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.abortCopy(final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: abortCopy(final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: abortCopy(final String copyId, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.abortCopy(final String copyId, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.abortCopy(final String copyId, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.abortCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 257
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Aborts an ongoing Azure File copy operation.</p>

    <p></p>
  syntax:
    content: public final void abortCopy(final String copyId, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: copyId
      type: 3d93591e
      description: <p>A <code>String</code> object that identifies the copy operation. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the Azure File. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.clearRange(final long,final long)
  id: clearRange(final long,final long)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: clearRange(final long offset, final long length)
  nameWithType: CloudFile.clearRange(final long offset, final long length)
  fullName: void com.microsoft.azure.storage.file.CloudFile.clearRange(final long offset, final long length)
  overload: com.microsoft.azure.storage.file._cloud_file.clearRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 538
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Clears a range from a file. </p>

    <p>Calling  releases the storage space used by the specified range. Ranges that have been cleared are no longer tracked as part of the file.</p>

    <p></p>
  syntax:
    content: public void clearRange(final long offset, final long length)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>The offset, in bytes, at which to begin clearing. </p>
    - id: length
      type: 4c60ae65
      description: <p>The length, in bytes, of the data range to be cleared.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.clearRange(final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  id: clearRange(final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: clearRange(final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.clearRange(final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.clearRange(final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.clearRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 567
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Clears a range from a file using the specified lease ID, request options, and operation context. </p>

    <p>Calling  releases the storage space used by the specified range. Ranges that have been cleared are no longer tracked as part of the file.</p>

    <p></p>
  syntax:
    content: public void clearRange(final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in bytes, at which to begin clearing. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the data range to be cleared. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.CloudFile(final CloudFile)
  id: CloudFile(final CloudFile)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: CloudFile(final CloudFile otherFile)
  nameWithType: CloudFile.CloudFile(final CloudFile otherFile)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final CloudFile otherFile)
  overload: com.microsoft.azure.storage.file._cloud_file.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 183
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class by copying values from another cloud file.</p>

    <p></p>
  syntax:
    content: public CloudFile(final CloudFile otherFile)
    parameters:
    - id: otherFile
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file
      description: <p>A <code><xref href="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false"></xref></code> object that represents the file to copy. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.CloudFile(final StorageUri)
  id: CloudFile(final StorageUri)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: CloudFile(final StorageUri fileAbsoluteUri)
  nameWithType: CloudFile.CloudFile(final StorageUri fileAbsoluteUri)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri fileAbsoluteUri)
  overload: com.microsoft.azure.storage.file._cloud_file.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 141
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified absolute <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public CloudFile(final StorageUri fileAbsoluteUri)
    parameters:
    - id: fileAbsoluteUri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref> object that represents the absolute URI to the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.CloudFile(final StorageUri,final StorageCredentials)
  id: CloudFile(final StorageUri,final StorageCredentials)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: CloudFile(final StorageUri fileAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudFile.CloudFile(final StorageUri fileAbsoluteUri, final StorageCredentials credentials)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri fileAbsoluteUri, final StorageCredentials credentials)
  overload: com.microsoft.azure.storage.file._cloud_file.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 173
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified absolute <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref> and credentials.</p>

    <p></p>
  syntax:
    content: public CloudFile(final StorageUri fileAbsoluteUri, final StorageCredentials credentials)
    parameters:
    - id: fileAbsoluteUri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref> object that represents the absolute URI to the file. </p>
    - id: credentials
      type: 93de0ef9com.microsoft.azure.storage._storage_credentials
      description: <p>A <xref href="com.microsoft.azure.storage._storage_credentials" data-throw-if-not-resolved="false"></xref> object used to authenticate access.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.CloudFile(final StorageUri,final String,final CloudFileShare)
  id: CloudFile(final StorageUri,final String,final CloudFileShare)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: CloudFile(final StorageUri uri, final String fileName, final CloudFileShare share)
  nameWithType: CloudFile.CloudFile(final StorageUri uri, final String fileName, final CloudFileShare share)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final StorageUri uri, final String fileName, final CloudFileShare share)
  overload: com.microsoft.azure.storage.file._cloud_file.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 212
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified address, share, and client.</p>

    <p></p>
  syntax:
    content: protected CloudFile(final StorageUri uri, final String fileName, final CloudFileShare share)
    parameters:
    - id: uri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref> that represents the file directory's address. </p>
    - id: fileName
      type: 3d93591e
      description: <p>A <code>String</code> that represents the name of the file. </p>
    - id: share
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref href="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false"></xref> object that represents the associated file share. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.CloudFile(final URI)
  id: CloudFile(final URI)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: CloudFile(final URI fileAbsoluteUri)
  nameWithType: CloudFile.CloudFile(final URI fileAbsoluteUri)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final URI fileAbsoluteUri)
  overload: com.microsoft.azure.storage.file._cloud_file.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 126
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI.</p>

    <p></p>
  syntax:
    content: public CloudFile(final URI fileAbsoluteUri)
    parameters:
    - id: fileAbsoluteUri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.CloudFile(final URI,final StorageCredentials)
  id: CloudFile(final URI,final StorageCredentials)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: CloudFile(final URI fileAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudFile.CloudFile(final URI fileAbsoluteUri, final StorageCredentials credentials)
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile(final URI fileAbsoluteUri, final StorageCredentials credentials)
  overload: com.microsoft.azure.storage.file._cloud_file.CloudFile*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 157
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI and credentials.</p>

    <p></p>
  syntax:
    content: public CloudFile(final URI fileAbsoluteUri, final StorageCredentials credentials)
    parameters:
    - id: fileAbsoluteUri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the file. </p>
    - id: credentials
      type: 93de0ef9com.microsoft.azure.storage._storage_credentials
      description: <p>A <xref href="com.microsoft.azure.storage._storage_credentials" data-throw-if-not-resolved="false"></xref> object used to authenticate access.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.create(final long)
  id: create(final long)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: create(final long size)
  nameWithType: CloudFile.create(final long size)
  fullName: void com.microsoft.azure.storage.file.CloudFile.create(final long size)
  overload: com.microsoft.azure.storage.file._cloud_file.create*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 591
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates a file. If the file already exists, this will replace it.</p>

    <p></p>
  syntax:
    content: public void create(final long size)
    parameters:
    - id: size
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the size, in bytes, of the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.create(final long,final AccessCondition,FileRequestOptions,OperationContext)
  id: create(final long,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: create(final long size, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.create(final long size, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.create(final long size, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.create*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 616
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates a file using the specified access condition, request options and operation context. If the file already exists, this will replace it.</p>

    <p></p>
  syntax:
    content: public void create(final long size, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: size
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the size, in bytes, of the file. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.delete()
  id: delete()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: delete()
  nameWithType: CloudFile.delete()
  fullName: final void com.microsoft.azure.storage.file.CloudFile.delete()
  overload: com.microsoft.azure.storage.file._cloud_file.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 676
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the file.</p>

    <p></p>
  syntax:
    content: public final void delete()
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.delete(final AccessCondition,FileRequestOptions,OperationContext)
  id: delete(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: delete(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.delete(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.delete(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 698
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the file using the specified access condition, request options, and operation context.</p>

    <p></p>
  syntax:
    content: public final void delete(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.deleteIfExists()
  id: deleteIfExists()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: deleteIfExists()
  nameWithType: CloudFile.deleteIfExists()
  fullName: final boolean com.microsoft.azure.storage.file.CloudFile.deleteIfExists()
  overload: com.microsoft.azure.storage.file._cloud_file.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 721
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the file if it exists.</p>

    <p></p>
  syntax:
    content: public final boolean deleteIfExists()
    return:
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> if the file was deleted; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.deleteIfExists(final AccessCondition,FileRequestOptions,OperationContext)
  id: deleteIfExists(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: deleteIfExists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.deleteIfExists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final boolean com.microsoft.azure.storage.file.CloudFile.deleteIfExists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 745
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the file if it exists, using the specified access condition, request options, and operation context.</p>

    <p></p>
  syntax:
    content: public final boolean deleteIfExists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> if the file existed and was deleted; otherwise, <code>false</code></p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.download(final OutputStream)
  id: download(final OutputStream)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: download(final OutputStream outStream)
  nameWithType: CloudFile.download(final OutputStream outStream)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.download(final OutputStream outStream)
  overload: com.microsoft.azure.storage.file._cloud_file.download*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 813
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the contents of a file to a stream.</p>

    <p></p>
  syntax:
    content: public final void download(final OutputStream outStream)
    parameters:
    - id: outStream
      type: 688beaca
      description: <p>An <code><ref refid="" kindref="compound">OutputStream</ref></code> object that represents the target stream. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.download(final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  id: download(final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: download(final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.download(final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.download(final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.download*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 836
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the contents of a file to a stream using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public final void download(final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: outStream
      type: 688beaca
      description: <p>An <code>OutputStream</code> object that represents the target stream. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadAttributes()
  id: downloadAttributes()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadAttributes()
  nameWithType: CloudFile.downloadAttributes()
  fullName: final void com.microsoft.azure.storage.file.CloudFile.downloadAttributes()
  overload: com.microsoft.azure.storage.file._cloud_file.downloadAttributes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1455
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Populates a file's properties and metadata. </p>

    <p>This method populates the file's system properties and user-defined metadata. Before reading or modifying a file's properties or metadata, call this method or its overload to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: &o4
    content: public final void downloadAttributes()
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadAttributes(final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadAttributes(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadAttributes(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadAttributes(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.downloadAttributes(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadAttributes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1481
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Populates a file's properties and metadata using the specified request options and operation context. </p>

    <p>This method populates the file's system properties and user-defined metadata. Before reading or modifying a file's properties or metadata, call this method or its overload to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax:
    content: public final void downloadAttributes(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadFileRanges()
  id: downloadFileRanges()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadFileRanges()
  nameWithType: CloudFile.downloadFileRanges()
  fullName: ArrayList<FileRange> com.microsoft.azure.storage.file.CloudFile.downloadFileRanges()
  overload: com.microsoft.azure.storage.file._cloud_file.downloadFileRanges*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1214
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a collection of file ranges and their starting and ending byte offsets. </p>

    <p>The start and end byte offsets for each file range are inclusive.</p>

    <p></p>
  syntax:
    content: public ArrayList<FileRange> downloadFileRanges()
    return:
      type: 573b1e0bcom.microsoft.azure.storage.file._file_rangea08ddfce
      description: <p>An <code>ArrayList</code> object which represents the set of file ranges and their starting and ending byte offsets.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadFileRanges(final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadFileRanges(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadFileRanges(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadFileRanges(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: ArrayList<FileRange> com.microsoft.azure.storage.file.CloudFile.downloadFileRanges(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadFileRanges*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1240
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a collection of file ranges and their starting and ending byte offsets using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public ArrayList<FileRange> downloadFileRanges(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 573b1e0bcom.microsoft.azure.storage.file._file_rangea08ddfce
      description: <p>An <code>ArrayList</code> object which represents the set of file ranges and their starting and ending byte offsets.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadRange(final long,final Long,final OutputStream)
  id: downloadRange(final long,final Long,final OutputStream)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadRange(final long offset, final Long length, final OutputStream outStream)
  nameWithType: CloudFile.downloadRange(final long offset, final Long length, final OutputStream outStream)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.downloadRange(final long offset, final Long length, final OutputStream outStream)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 863
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the contents of a file to a stream.</p>

    <p></p>
  syntax:
    content: public final void downloadRange(final long offset, final Long length, final OutputStream outStream)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    - id: outStream
      type: 688beaca
      description: <p>An <code><ref refid="" kindref="compound">OutputStream</ref></code> object that represents the target stream. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadRange(final long,final Long,final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadRange(final long,final Long,final OutputStream,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 891
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the contents of a file to a stream using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public final void downloadRange(final long offset, final Long length, final OutputStream outStream, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    - id: outStream
      type: 688beaca
      description: <p>An <code><ref refid="" kindref="compound">OutputStream</ref></code> object that represents the target stream. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadRangeInternal(final long fileOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadRangeInternal(final long fileOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final int com.microsoft.azure.storage.file.CloudFile.downloadRangeInternal(final long fileOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadRangeInternal*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 931
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a range of bytes from the file to the given byte buffer.</p>

    <p></p>
  syntax:
    content: protected final int downloadRangeInternal(final long fileOffset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: fileOffset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset within the file to begin downloading. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read. </p>
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to write to. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>An <code>int</code> which represents the offset in the byte buffer to begin writing. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object used to track the execution of the operation. </p>
    return:
      type: cd225469
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>an exception representing any error which occurred during the operation. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadRangeToByteArray(final long,final Long,final byte [],final int)
  id: downloadRangeToByteArray(final long,final Long,final byte [],final int)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  nameWithType: CloudFile.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  fullName: final int com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadRangeToByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 967
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a range of bytes from the file to the given byte buffer.</p>

    <p></p>
  syntax:
    content: public final int downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the source. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read or null. </p>
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to which the file bytes are downloaded. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target.</p>
    return:
      type: cd225469
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
- uid: com.microsoft.azure.storage.file._cloud_file.downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final int com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadRangeToByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1000
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a range of bytes from the file to the given byte buffer, using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public final int downloadRangeToByteArray(final long offset, final Long length, final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the source. </p>
    - id: length
      type: 6c34dcee
      description: <p>A <code>Long</code> which represents the number of bytes to read or <code>null</code>. </p>
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to which the file bytes are downloaded. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: cd225469
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadText()
  id: downloadText()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadText()
  nameWithType: CloudFile.downloadText()
  fullName: String com.microsoft.azure.storage.file.CloudFile.downloadText()
  overload: com.microsoft.azure.storage.file._cloud_file.downloadText*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1166
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a file to a string using the platform's default encoding.</p>

    <p></p>
  syntax:
    content: public String downloadText()
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the file's contents.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.downloadText(final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadText(final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadText(final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadText(final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: String com.microsoft.azure.storage.file.CloudFile.downloadText(final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadText*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1194
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a file to a string using the specified encoding.</p>

    <p></p>
  syntax:
    content: public String downloadText(final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: charsetName
      type: 3d93591e
      description: <p>A <code>String</code> which represents the name of the charset to use to encode the content. If null, the platform's default encoding is used. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the file's contents.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.downloadToByteArray(final byte [],final int)
  id: downloadToByteArray(final byte [],final int)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadToByteArray(final byte[] buffer, final int bufferOffset)
  nameWithType: CloudFile.downloadToByteArray(final byte[] buffer, final int bufferOffset)
  fullName: final int com.microsoft.azure.storage.file.CloudFile.downloadToByteArray(final byte[] buffer, final int bufferOffset)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadToByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1033
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a range of bytes from the file to the given byte buffer.</p>

    <p></p>
  syntax:
    content: public final int downloadToByteArray(final byte[] buffer, final int bufferOffset)
    parameters:
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to which the file bytes are downloaded. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>An <code>int</code> which represents the byte offset to use as the starting point for the target.</p>
    return:
      type: cd225469
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadToByteArray(final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadToByteArray(final byte [],final int,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final int com.microsoft.azure.storage.file.CloudFile.downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadToByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1061
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a range of bytes from the file to the given byte buffer, using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public final int downloadToByteArray(final byte[] buffer, final int bufferOffset, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the buffer to which the file bytes are downloaded. </p>
    - id: bufferOffset
      type: cd225469
      description: <p>A <code>long</code> which represents the byte offset to use as the starting point for the target. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: cd225469
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadToFile(final String)
  id: downloadToFile(final String)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadToFile(final String path)
  nameWithType: CloudFile.downloadToFile(final String path)
  fullName: void com.microsoft.azure.storage.file.CloudFile.downloadToFile(final String path)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadToFile*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1098
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a file.</p>

    <p></p>
  syntax:
    content: public void downloadToFile(final String path)
    parameters:
    - id: path
      type: 3d93591e
      description: <p>A <code>String</code> which represents the path to the file that will be created.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.downloadToFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: downloadToFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: downloadToFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.downloadToFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.downloadToFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.downloadToFile*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1122
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads a file.</p>

    <p></p>
  syntax:
    content: public void downloadToFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: path
      type: 3d93591e
      description: <p>A <code>String</code> which represents the path to the file that will be created. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.exists()
  id: exists()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: exists()
  nameWithType: CloudFile.exists()
  fullName: final boolean com.microsoft.azure.storage.file.CloudFile.exists()
  overload: com.microsoft.azure.storage.file._cloud_file.exists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1547
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Checks to see if the file exists.</p>

    <p></p>
  syntax:
    content: public final boolean exists()
    return:
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> if the file exists, otherwise <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.exists(final AccessCondition,FileRequestOptions,OperationContext)
  id: exists(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final boolean com.microsoft.azure.storage.file.CloudFile.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.exists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1571
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Checks to see if the file exists, using the specified access condition, request options and operation context.</p>

    <p></p>
  syntax:
    content: public final boolean exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> if the file exists, otherwise <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.fileServiceClient()
  id: fileServiceClient()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: fileServiceClient
  nameWithType: CloudFile.fileServiceClient
  fullName: CloudFileClient com.microsoft.azure.storage.file.CloudFile.fileServiceClient
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 98
  package: com.microsoft.azure.storage.file
  summary: <p>Represents the file service client. </p>
  syntax:
    content: protected CloudFileClient fileServiceClient
    return:
      type: com.microsoft.azure.storage.file._cloud_file_client
- uid: com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String)
  id: generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier)
  nameWithType: CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier)
  fullName: String com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier)
  overload: com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1683
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a shared access signature for the file using the specified group policy identifier and shared access file headers. Note this does not contain the leading "?".</p>

    <p></p>
  syntax:
    content: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier)
    parameters:
    - id: policy
      type: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_policy
      description: <p>A <code><xref href="com.microsoft.azure.storage.file._shared_access_file_policy" data-throw-if-not-resolved="false"></xref></code> object that represents the access policy for the shared access signature. </p>
    - id: headers
      type: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_headers
      description: <p>A <code><xref href="com.microsoft.azure.storage.file._shared_access_file_headers" data-throw-if-not-resolved="false"></xref></code> object that represents the optional header values to set for a file accessed with this shared access signature. </p>
    - id: groupPolicyIdentifier
      type: 3d93591e
      description: <p>A <code>String</code> that represents the share-level access policy.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> that represents the shared access signature.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>If the credentials are invalid. </p>
  - type: e333ca4f
    description: <p>If the credentials are invalid. </p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String,final IPRange,final SharedAccessProtocols)
  id: generateSharedAccessSignature(final SharedAccessFilePolicy,final SharedAccessFileHeaders,final String,final IPRange,final SharedAccessProtocols)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  nameWithType: CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  fullName: String com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
  overload: com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1717
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a shared access signature for the file using the specified group policy identifier and shared access file headers. Note this does not contain the leading "?".</p>

    <p></p>
  syntax:
    content: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final SharedAccessFileHeaders headers, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols)
    parameters:
    - id: policy
      type: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_policy
      description: <p>A <code><xref href="com.microsoft.azure.storage.file._shared_access_file_policy" data-throw-if-not-resolved="false"></xref></code> object that represents the access policy for the shared access signature. </p>
    - id: headers
      type: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_headers
      description: <p>A <code><xref href="com.microsoft.azure.storage.file._shared_access_file_headers" data-throw-if-not-resolved="false"></xref></code> object that represents the optional header values to set for a file accessed with this shared access signature. </p>
    - id: groupPolicyIdentifier
      type: 3d93591e
      description: <p>A <code>String</code> that represents the share-level access policy. </p>
    - id: ipRange
      type: 93de0ef9com.microsoft.azure.storage._i_p_range
      description: <p>A <xref href="com.microsoft.azure.storage._i_p_range" data-throw-if-not-resolved="false"></xref> object containing the range of allowed IP addresses. </p>
    - id: protocols
      type: 93de0ef9com.microsoft.azure.storage._shared_access_protocols
      description: <p>A <xref href="com.microsoft.azure.storage._shared_access_protocols" data-throw-if-not-resolved="false"></xref> representing the allowed Internet protocols.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> that represents the shared access signature.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>If the credentials are invalid. </p>
  - type: e333ca4f
    description: <p>If the credentials are invalid. </p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  id: generateSharedAccessSignature(final SharedAccessFilePolicy,final String)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  nameWithType: CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  fullName: String com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
  overload: com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1656
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a shared access signature for the file using the specified group policy identifier and shared access file headers. Note this does not contain the leading "?".</p>

    <p></p>
  syntax:
    content: public String generateSharedAccessSignature(final SharedAccessFilePolicy policy, final String groupPolicyIdentifier)
    parameters:
    - id: policy
      type: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_policy
      description: <p>A <code><xref href="com.microsoft.azure.storage.file._shared_access_file_policy" data-throw-if-not-resolved="false"></xref></code> object that represents the access policy for the shared access signature. </p>
    - id: groupPolicyIdentifier
      type: 3d93591e
      description: <p>A <code>String</code> that represents the share-level access policy.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> that represents the shared access signature.</p>
  exceptions:
  - type: e333ca4f
    description: <p>If the credentials are invalid. </p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getCopyState()
  id: getCopyState()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getCopyState()
  nameWithType: CloudFile.getCopyState()
  fullName: CopyState com.microsoft.azure.storage.file.CloudFile.getCopyState()
  overload: com.microsoft.azure.storage.file._cloud_file.getCopyState*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1766
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the Azure File's copy state.</p>

    <p></p>
  syntax:
    content: public CopyState getCopyState()
    return:
      type: com.microsoft.azure.storage.file._copy_state
      description: <p>A <xref href="com.microsoft.azure.storage.file._copy_state" data-throw-if-not-resolved="false"></xref> object that represents the copy state of the file. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getMetadata()
  id: getMetadata()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getMetadata()
  nameWithType: CloudFile.getMetadata()
  fullName: final HashMap<String, String> com.microsoft.azure.storage.file.CloudFile.getMetadata()
  overload: com.microsoft.azure.storage.file._cloud_file.getMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2746
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the metadata for the file.</p>

    <p></p>
  syntax:
    content: public final HashMap<String, String> getMetadata()
    return:
      type: 496ce5ae
      description: <p>A <code>java.util.HashMap</code> object that represents the metadata for the file. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getName()
  id: getName()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getName()
  nameWithType: CloudFile.getName()
  fullName: final String com.microsoft.azure.storage.file.CloudFile.getName()
  overload: com.microsoft.azure.storage.file._cloud_file.getName*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2755
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the name of the file.</p>

    <p></p>
  syntax:
    content: public final String getName()
    return:
      type: 3d93591e
      description: <p>A <code>String</code> that represents the name of the file. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getParent()
  id: getParent()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getParent()
  nameWithType: CloudFile.getParent()
  fullName: final CloudFileDirectory com.microsoft.azure.storage.file.CloudFile.getParent()
  overload: com.microsoft.azure.storage.file._cloud_file.getParent*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2770
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the file item's parent.</p>

    <p></p>
  syntax:
    content: public final CloudFileDirectory getParent()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_directory
      description: <p>A <xref href="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false"></xref> object that represents the parent directory for the file.</p>
  overridden: com.microsoft.azure.storage.file._list_file_item.getParent()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getParentNameFromURI(final StorageUri,final CloudFileShare)
  id: getParentNameFromURI(final StorageUri,final CloudFileShare)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getParentNameFromURI(final StorageUri resourceAddress, final CloudFileShare share)
  nameWithType: CloudFile.getParentNameFromURI(final StorageUri resourceAddress, final CloudFileShare share)
  fullName: static String com.microsoft.azure.storage.file.CloudFile.getParentNameFromURI(final StorageUri resourceAddress, final CloudFileShare share)
  overload: com.microsoft.azure.storage.file._cloud_file.getParentNameFromURI*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2620
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Retrieves the parent name for a file URI.</p>

    <p></p>
  syntax:
    content: protected static String getParentNameFromURI(final StorageUri resourceAddress, final CloudFileShare share)
    parameters:
    - id: resourceAddress
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref> object which represents the resource URI. </p>
    - id: share
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref href="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false"></xref> object which represents the file share.</p>
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the parent address for a file URI.</p>
  exceptions:
  - type: "44102508"
- uid: com.microsoft.azure.storage.file._cloud_file.getProperties()
  id: getProperties()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getProperties()
  nameWithType: CloudFile.getProperties()
  fullName: final FileProperties com.microsoft.azure.storage.file.CloudFile.getProperties()
  overload: com.microsoft.azure.storage.file._cloud_file.getProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2787
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the file's properties.</p>

    <p></p>
  syntax:
    content: public final FileProperties getProperties()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file._file_properties
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_properties" data-throw-if-not-resolved="false"></xref> object that represents the properties of the file. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getServiceClient()
  id: getServiceClient()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getServiceClient()
  nameWithType: CloudFile.getServiceClient()
  fullName: final CloudFileClient com.microsoft.azure.storage.file.CloudFile.getServiceClient()
  overload: com.microsoft.azure.storage.file._cloud_file.getServiceClient*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2796
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the file service client associated with the file.</p>

    <p></p>
  syntax:
    content: public final CloudFileClient getServiceClient()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_client
      description: <p>A <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref> object that represents the client. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getShare()
  id: getShare()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getShare()
  nameWithType: CloudFile.getShare()
  fullName: final CloudFileShare com.microsoft.azure.storage.file.CloudFile.getShare()
  overload: com.microsoft.azure.storage.file._cloud_file.getShare*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2731
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the file's share.</p>

    <p></p>
  syntax:
    content: public final CloudFileShare getShare()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref href="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false"></xref> object that represents the share of the file. </p>
  overridden: com.microsoft.azure.storage.file._list_file_item.getShare()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getStorageUri()
  id: getStorageUri()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getStorageUri()
  nameWithType: CloudFile.getStorageUri()
  fullName: final StorageUri com.microsoft.azure.storage.file.CloudFile.getStorageUri()
  overload: com.microsoft.azure.storage.file._cloud_file.getStorageUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2826
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the list of URIs for all locations.</p>

    <p></p>
  syntax:
    content: public final StorageUri getStorageUri()
    return:
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref> that represents the list of URIs for all locations. </p>
  overridden: com.microsoft.azure.storage.file._list_file_item.getStorageUri()
- uid: com.microsoft.azure.storage.file._cloud_file.getStreamMinimumReadSizeInBytes()
  id: getStreamMinimumReadSizeInBytes()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getStreamMinimumReadSizeInBytes()
  nameWithType: CloudFile.getStreamMinimumReadSizeInBytes()
  fullName: final int com.microsoft.azure.storage.file.CloudFile.getStreamMinimumReadSizeInBytes()
  overload: com.microsoft.azure.storage.file._cloud_file.getStreamMinimumReadSizeInBytes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2816
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the minimum read size when using a <xref href="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final int getStreamMinimumReadSizeInBytes()
    return:
      type: cd225469
      description: <p>A <code>int</code> which represents the minimum read size, in bytes, when using a <xref href="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getStreamWriteSizeInBytes()
  id: getStreamWriteSizeInBytes()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getStreamWriteSizeInBytes()
  nameWithType: CloudFile.getStreamWriteSizeInBytes()
  fullName: final int com.microsoft.azure.storage.file.CloudFile.getStreamWriteSizeInBytes()
  overload: com.microsoft.azure.storage.file._cloud_file.getStreamWriteSizeInBytes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2806
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Gets the number of bytes to buffer when writing to a <xref href="com.microsoft.azure.storage.file._file_output_stream" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final int getStreamWriteSizeInBytes()
    return:
      type: cd225469
      description: <p>A <code>int</code> which represents the number of bytes to buffer. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getTransformedAddress(final OperationContext)
  id: getTransformedAddress(final OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getTransformedAddress(final OperationContext opContext)
  nameWithType: CloudFile.getTransformedAddress(final OperationContext opContext)
  fullName: final StorageUri com.microsoft.azure.storage.file.CloudFile.getTransformedAddress(final OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.getTransformedAddress*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2930
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the transformed URI for the resource if the given credentials require transformation.</p>

    <p></p>
  syntax:
    content: protected final StorageUri getTransformedAddress(final OperationContext opContext)
    parameters:
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref> object that represents the transformed URI.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.getUri()
  id: getUri()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: getUri()
  nameWithType: CloudFile.getUri()
  fullName: final URI com.microsoft.azure.storage.file.CloudFile.getUri()
  overload: com.microsoft.azure.storage.file._cloud_file.getUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2836
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the URI for this file.</p>

    <p></p>
  syntax:
    content: public final URI getUri()
    return:
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the URI for the file. </p>
  overridden: com.microsoft.azure.storage.file._list_file_item.getUri()
- uid: com.microsoft.azure.storage.file._cloud_file.openRead()
  id: openRead()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: openRead()
  nameWithType: CloudFile.openRead()
  fullName: final FileInputStream com.microsoft.azure.storage.file.CloudFile.openRead()
  overload: com.microsoft.azure.storage.file._cloud_file.openRead*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1781
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Opens a file input stream to download the file. </p>

    <p>Use <xref href="com.microsoft.azure.storage.file._cloud_file.setStreamMinimumReadSizeInBytes(final int)" data-throw-if-not-resolved="false"></xref> to configure the read size.</p>

    <p></p>
  syntax:
    content: public final FileInputStream openRead()
    return:
      type: 93de0ef9com.microsoft.azure.storage.file._file_input_stream
      description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.openRead(final AccessCondition,FileRequestOptions,OperationContext)
  id: openRead(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: openRead(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.openRead(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final FileInputStream com.microsoft.azure.storage.file.CloudFile.openRead(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.openRead*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1808
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Opens a file input stream to download the file using the specified request options and operation context. </p>

    <p>Use <xref href="com.microsoft.azure.storage.file._cloud_file.setStreamMinimumReadSizeInBytes(final int)" data-throw-if-not-resolved="false"></xref> to configure the read size.</p>

    <p></p>
  syntax:
    content: public final FileInputStream openRead(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 93de0ef9com.microsoft.azure.storage.file._file_input_stream
      description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.openWriteExisting()
  id: openWriteExisting()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: openWriteExisting()
  nameWithType: CloudFile.openWriteExisting()
  fullName: FileOutputStream com.microsoft.azure.storage.file.CloudFile.openWriteExisting()
  overload: com.microsoft.azure.storage.file._cloud_file.openWriteExisting*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1829
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Opens an output stream object to write data to the file. The file must already exist and any existing data may be overwritten.</p>

    <p></p>
  syntax:
    content: public FileOutputStream openWriteExisting()
    return:
      type: com.microsoft.azure.storage.file._file_output_stream
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_output_stream" data-throw-if-not-resolved="false"></xref> object used to write data to the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.openWriteExisting(AccessCondition,FileRequestOptions,OperationContext)
  id: openWriteExisting(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: openWriteExisting(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.openWriteExisting(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: FileOutputStream com.microsoft.azure.storage.file.CloudFile.openWriteExisting(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.openWriteExisting*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1855
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Opens an output stream object to write data to the file, using specified request options and operation context. The file must already exist and any existing data may be overwritten.</p>

    <p></p>
  syntax:
    content: public FileOutputStream openWriteExisting(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage.file._file_output_stream
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_output_stream" data-throw-if-not-resolved="false"></xref> object used to write data to the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.openWriteNew(final long)
  id: openWriteNew(final long)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: openWriteNew(final long length)
  nameWithType: CloudFile.openWriteNew(final long length)
  fullName: FileOutputStream com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long length)
  overload: com.microsoft.azure.storage.file._cloud_file.openWriteNew*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1878
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Opens an output stream object to write data to the file. The file does not yet exist and will be created with the length specified. If the file already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please use the <xref href="com.microsoft.azure.storage.file._cloud_file.openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)" data-throw-if-not-resolved="false"></xref> overload with the appropriate <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public FileOutputStream openWriteNew(final long length)
    parameters:
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the stream to create.</p>
    return:
      type: com.microsoft.azure.storage.file._file_output_stream
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_output_stream" data-throw-if-not-resolved="false"></xref> object used to write data to the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)
  id: openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: FileOutputStream com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.openWriteNew*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1910
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Opens an output stream object to write data to the file, using the specified lease ID, request options and operation context. The file does not need to yet exist and will be created with the length specified. If the file already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please pass in an <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> generated using <xref href="com.microsoft.azure.storage._access_condition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: &o3
    content: public FileOutputStream openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the stream to create. </p>
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage.file._file_output_stream
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_output_stream" data-throw-if-not-resolved="false"></xref> object used to write data to the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.parent()
  id: parent()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: parent
  nameWithType: CloudFile.parent
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.CloudFile.parent
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 88
  package: com.microsoft.azure.storage.file
  summary: <p>Represents the file's directory reference. </p>
  syntax:
    content: protected CloudFileDirectory parent
    return:
      type: com.microsoft.azure.storage.file._cloud_file_directory
- uid: com.microsoft.azure.storage.file._cloud_file.resize(long)
  id: resize(long)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: resize(long size)
  nameWithType: CloudFile.resize(long size)
  fullName: void com.microsoft.azure.storage.file.CloudFile.resize(long size)
  overload: com.microsoft.azure.storage.file._cloud_file.resize*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2463
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Resizes the file to the specified size.</p>

    <p></p>
  syntax:
    content: public void resize(long size)
    parameters:
    - id: size
      type: 0364520f
      description: <p>A <code>long</code> which represents the size of the file, in bytes.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.resize(long,AccessCondition,FileRequestOptions,OperationContext)
  id: resize(long,AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: resize(long size, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.resize(long size, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.resize(long size, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.resize*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2486
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Resizes the file to the specified size.</p>

    <p></p>
  syntax:
    content: public void resize(long size, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: size
      type: 0364520f
      description: <p>A <code>long</code> which represents the size of the file, in bytes. </p>
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.setMetadata(final HashMap<String, String>)
  id: setMetadata(final HashMap<String, String>)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: setMetadata(final HashMap<String, String> metadata)
  nameWithType: CloudFile.setMetadata(final HashMap<String, String> metadata)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.setMetadata(final HashMap<String, String> metadata)
  overload: com.microsoft.azure.storage.file._cloud_file.setMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2856
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the metadata for the file.</p>

    <p></p>
  syntax:
    content: public final void setMetadata(final HashMap<String, String> metadata)
    parameters:
    - id: metadata
      type: 496ce5ae
      description: <p>A <code>java.util.HashMap</code> object that contains the metadata being assigned to the file. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.file._cloud_file.setProperties(final FileProperties)
  id: setProperties(final FileProperties)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: setProperties(final FileProperties properties)
  nameWithType: CloudFile.setProperties(final FileProperties properties)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.setProperties(final FileProperties properties)
  overload: com.microsoft.azure.storage.file._cloud_file.setProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2866
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the properties for the file.</p>

    <p></p>
  syntax:
    content: protected final void setProperties(final FileProperties properties)
    parameters:
    - id: properties
      type: 93de0ef9com.microsoft.azure.storage.file._file_properties
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_properties" data-throw-if-not-resolved="false"></xref> object that represents the properties being assigned to the file. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.file._cloud_file.setShare(final CloudFileShare)
  id: setShare(final CloudFileShare)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: setShare(final CloudFileShare share)
  nameWithType: CloudFile.setShare(final CloudFileShare share)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.setShare(final CloudFileShare share)
  overload: com.microsoft.azure.storage.file._cloud_file.setShare*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2846
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the share for the file.</p>

    <p></p>
  syntax:
    content: protected final void setShare(final CloudFileShare share)
    parameters:
    - id: share
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref href="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false"></xref> object that represents the share being assigned to the file. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.file._cloud_file.setStorageUri(final StorageUri)
  id: setStorageUri(final StorageUri)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: setStorageUri(final StorageUri storageUri)
  nameWithType: CloudFile.setStorageUri(final StorageUri storageUri)
  fullName: void com.microsoft.azure.storage.file.CloudFile.setStorageUri(final StorageUri storageUri)
  overload: com.microsoft.azure.storage.file._cloud_file.setStorageUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2876
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the list of URIs for all locations.</p>

    <p></p>
  syntax:
    content: protected void setStorageUri(final StorageUri storageUri)
    parameters:
    - id: storageUri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref> that represents the list of URIs for all locations. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.setStreamMinimumReadSizeInBytes(final int)
  id: setStreamMinimumReadSizeInBytes(final int)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  nameWithType: CloudFile.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  fullName: void com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  overload: com.microsoft.azure.storage.file._cloud_file.setStreamMinimumReadSizeInBytes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2889
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the minimum read size when using a <xref href="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: &o2
    content: public void setStreamMinimumReadSizeInBytes(final int minimumReadSize)
    parameters:
    - id: minimumReadSize
      type: cd225469
      description: <p>An <code>int</code> that represents the minimum number of bytes to buffer when reading from a file while using a <xref href="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false"></xref> object. Must be greater than or equal to 16 KB. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>If <code>minimumReadSize</code> is less than 16 KB. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.setStreamWriteSizeInBytes(final int)
  id: setStreamWriteSizeInBytes(final int)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  nameWithType: CloudFile.setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  fullName: void com.microsoft.azure.storage.file.CloudFile.setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  overload: com.microsoft.azure.storage.file._cloud_file.setStreamWriteSizeInBytes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2907
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the number of bytes to buffer when writing to a <xref href="com.microsoft.azure.storage.file._file_output_stream" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public void setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
    parameters:
    - id: streamWriteSizeInBytes
      type: cd225469
      description: <p>An <code>int</code> which represents the number of bytes to buffer while using a <xref href="com.microsoft.azure.storage.file._file_output_stream" data-throw-if-not-resolved="false"></xref> object, ranging from 512 bytes to 4 MB, inclusive.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>If <code>streamWriteSizeInBytes</code> is less than 512 bytes or greater than 4 MB. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.startCopy(final CloudBlob)
  id: startCopy(final CloudBlob)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: startCopy(final CloudBlob sourceBlob)
  nameWithType: CloudFile.startCopy(final CloudBlob sourceBlob)
  fullName: final String com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudBlob sourceBlob)
  overload: com.microsoft.azure.storage.file._cloud_file.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 318
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Requests the service to start copying a blob's contents, properties, and metadata to a new file.</p>

    <p></p>
  syntax:
    content: public final String startCopy(final CloudBlob sourceBlob)
    parameters:
    - id: sourceBlob
      type: 93de0ef9com.microsoft.azure.storage.blob._cloud_blob
      description: <p>A <code>CloudBlob</code> object that represents the source blob to copy.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file._cloud_file.startCopy(final CloudBlob,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  id: startCopy(final CloudBlob,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: startCopy(final CloudBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.startCopy(final CloudBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final String com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 350
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Requests the service to start copying a file's contents, properties, and metadata to a new file, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax:
    content: public final String startCopy(final CloudBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: sourceBlob
      type: 93de0ef9com.microsoft.azure.storage.blob._cloud_blob
      description: <p>A <code>CloudBlob</code> object that represents the source blob to copy. </p>
    - id: sourceAccessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the source blob. </p>
    - id: destinationAccessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the destination file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <ref refid="" kindref="compound">BlobRequestOptions</ref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<ref refid="" kindref="compound">CloudBlobClient</ref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file._cloud_file.startCopy(final CloudFile)
  id: startCopy(final CloudFile)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: startCopy(final CloudFile sourceFile)
  nameWithType: CloudFile.startCopy(final CloudFile sourceFile)
  fullName: final String com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudFile sourceFile)
  overload: com.microsoft.azure.storage.file._cloud_file.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 377
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Requests the service to start copying an Azure File's contents, properties, and metadata to a new Azure File.</p>

    <p></p>
  syntax:
    content: public final String startCopy(final CloudFile sourceFile)
    parameters:
    - id: sourceFile
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file
      description: <p>A <code><xref href="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false"></xref></code> object that represents the source Azure File to copy.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file._cloud_file.startCopy(final CloudFile,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  id: startCopy(final CloudFile,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final String com.microsoft.azure.storage.file.CloudFile.startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 409
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Requests the service to start copying an Azure File's contents, properties, and metadata to a new Azure File, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax:
    content: public final String startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: sourceFile
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file
      description: <p>A <code><xref href="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false"></xref></code> object that represents the source file to copy. </p>
    - id: sourceAccessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the source. </p>
    - id: destinationAccessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the destination. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
- uid: com.microsoft.azure.storage.file._cloud_file.startCopy(final URI)
  id: startCopy(final URI)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: startCopy(final URI source)
  nameWithType: CloudFile.startCopy(final URI source)
  fullName: final String com.microsoft.azure.storage.file.CloudFile.startCopy(final URI source)
  overload: com.microsoft.azure.storage.file._cloud_file.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 430
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Requests the service to start copying a URI's contents, properties, and metadata to a new Azure File.</p>

    <p></p>
  syntax:
    content: public final String startCopy(final URI source)
    parameters:
    - id: source
      type: bac42120
      description: <p>The source's <code>java.net.URI</code>.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.startCopy(final URI,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  id: startCopy(final URI,final AccessCondition,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final String com.microsoft.azure.storage.file.CloudFile.startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.startCopy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 461
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Requests the service to start copying a URI's contents, properties, and metadata to a new Azure File, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax:
    content: public final String startCopy(final URI source, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: source
      type: bac42120
      description: <p>The source's <code>java.net.URI</code>. </p>
    - id: sourceAccessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the source. </p>
    - id: destinationAccessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the destination. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3d93591e
      description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.streamMinimumReadSizeInBytes()
  id: streamMinimumReadSizeInBytes()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: streamMinimumReadSizeInBytes
  nameWithType: CloudFile.streamMinimumReadSizeInBytes
  fullName: int com.microsoft.azure.storage.file.CloudFile.streamMinimumReadSizeInBytes
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 78
  package: com.microsoft.azure.storage.file
  summary: <p>Holds the minimum read size when using a <xref href="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: protected int streamMinimumReadSizeInBytes= Constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
    return:
      type: f75371fa
- uid: com.microsoft.azure.storage.file._cloud_file.streamWriteSizeInBytes()
  id: streamWriteSizeInBytes()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: streamWriteSizeInBytes
  nameWithType: CloudFile.streamWriteSizeInBytes
  fullName: int com.microsoft.azure.storage.file.CloudFile.streamWriteSizeInBytes
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 73
  package: com.microsoft.azure.storage.file
  summary: <p>Holds the number of bytes to buffer when writing to a <xref href="com.microsoft.azure.storage.file._file_output_stream" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: protected int streamWriteSizeInBytes= Constants.DEFAULT_STREAM_WRITE_IN_BYTES
    return:
      type: f75371fa
- uid: com.microsoft.azure.storage.file._cloud_file.updateEtagAndLastModifiedFromResponse(HttpURLConnection)
  id: updateEtagAndLastModifiedFromResponse(HttpURLConnection)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  nameWithType: CloudFile.updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  fullName: void com.microsoft.azure.storage.file.CloudFile.updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
  overload: com.microsoft.azure.storage.file._cloud_file.updateEtagAndLastModifiedFromResponse*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2701
  package: com.microsoft.azure.storage.file
  syntax:
    content: protected void updateEtagAndLastModifiedFromResponse(HttpURLConnection request)
    parameters:
    - id: request
      type: a7895dc2
- uid: com.microsoft.azure.storage.file._cloud_file.updateLengthFromResponse(HttpURLConnection)
  id: updateLengthFromResponse(HttpURLConnection)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: updateLengthFromResponse(HttpURLConnection request)
  nameWithType: CloudFile.updateLengthFromResponse(HttpURLConnection request)
  fullName: void com.microsoft.azure.storage.file.CloudFile.updateLengthFromResponse(HttpURLConnection request)
  overload: com.microsoft.azure.storage.file._cloud_file.updateLengthFromResponse*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2714
  package: com.microsoft.azure.storage.file
  syntax:
    content: protected void updateLengthFromResponse(HttpURLConnection request)
    parameters:
    - id: request
      type: a7895dc2
- uid: com.microsoft.azure.storage.file._cloud_file.upload(final InputStream,final long)
  id: upload(final InputStream,final long)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: upload(final InputStream sourceStream, final long length)
  nameWithType: CloudFile.upload(final InputStream sourceStream, final long length)
  fullName: void com.microsoft.azure.storage.file.CloudFile.upload(final InputStream sourceStream, final long length)
  overload: com.microsoft.azure.storage.file._cloud_file.upload*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2548
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the source stream data to the file. If the file already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax:
    content: public void upload(final InputStream sourceStream, final long length)
    parameters:
    - id: sourceStream
      type: ac354e53
      description: <p>An <ref refid="" kindref="compound">InputStream</ref> object to read from. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the stream data. Must be non zero.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>If an I/O exception occurred. </p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.upload(final InputStream,final long,final AccessCondition,FileRequestOptions,OperationContext)
  id: upload(final InputStream,final long,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.upload*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2578
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the source stream data to the file using the specified access condition, request options, and operation context. If the file already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax:
    content: public void upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: sourceStream
      type: ac354e53
      description: <p>An <ref refid="" kindref="compound">InputStream</ref> object to read from. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the stream data. This must be great than zero. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>If an I/O exception occurred. </p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.uploadFromByteArray(final byte [],final int,final int)
  id: uploadFromByteArray(final byte [],final int,final int)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  nameWithType: CloudFile.uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadFromByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 1980
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads a file from data in a byte array. If the file already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax:
    content: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length)
    parameters:
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the data to write to the file. </p>
    - id: offset
      type: cd225469
      description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    - id: length
      type: cd225469
      description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.uploadFromByteArray(final byte [],final int,final int,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadFromByteArray(final byte [],final int,final int,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadFromByteArray*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2009
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads a file from data in a byte array. If the file already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax:
    content: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: buffer
      type: f549433f
      description: <p>A <code>byte</code> array which represents the data to write to the file. </p>
    - id: offset
      type: cd225469
      description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    - id: length
      type: cd225469
      description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.uploadFromFile(final String)
  id: uploadFromFile(final String)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadFromFile(final String path)
  nameWithType: CloudFile.uploadFromFile(final String path)
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadFromFile(final String path)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadFromFile*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2027
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads a local file. If the file already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax:
    content: public void uploadFromFile(final String path)
    parameters:
    - id: path
      type: 3d93591e
      description: <p>A <code>String</code> which represents the path to the file to be uploaded.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.uploadFromFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadFromFile(final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadFromFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadFromFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadFromFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadFromFile*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2051
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads a file from a local file. If the file already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax:
    content: public void uploadFromFile(final String path, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: path
      type: 3d93591e
      description: <p>A <code>String</code> which represents the path to the file to be uploaded. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.uploadMetadata()
  id: uploadMetadata()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadMetadata()
  nameWithType: CloudFile.uploadMetadata()
  fullName: final void com.microsoft.azure.storage.file.CloudFile.uploadMetadata()
  overload: com.microsoft.azure.storage.file._cloud_file.uploadMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2290
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the file's metadata to the storage service. </p>

    <p>Use <xref href="com.microsoft.azure.storage.file._cloud_file.downloadAttributes()" data-throw-if-not-resolved="false"></xref> to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax:
    content: public final void uploadMetadata()
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.uploadMetadata(final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadMetadata(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadMetadata(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadMetadata(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.uploadMetadata(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2316
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the file's metadata to the storage service using the access condition, request options, and operation context. </p>

    <p>Use <xref href="com.microsoft.azure.storage.file._cloud_file.downloadAttributes()" data-throw-if-not-resolved="false"></xref> to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax:
    content: public final void uploadMetadata(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.uploadProperties()
  id: uploadProperties()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadProperties()
  nameWithType: CloudFile.uploadProperties()
  fullName: final void com.microsoft.azure.storage.file.CloudFile.uploadProperties()
  overload: com.microsoft.azure.storage.file._cloud_file.uploadProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2380
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Updates the file's properties to the storage service. </p>

    <p>Use <xref href="com.microsoft.azure.storage.file._cloud_file.downloadAttributes()" data-throw-if-not-resolved="false"></xref> to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax:
    content: public final void uploadProperties()
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.uploadProperties(final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadProperties(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadProperties(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadProperties(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: final void com.microsoft.azure.storage.file.CloudFile.uploadProperties(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2405
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Updates the file's properties using the access condition, request options, and operation context. </p>

    <p>Use <xref href="com.microsoft.azure.storage.file._cloud_file.downloadAttributes()" data-throw-if-not-resolved="false"></xref> to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax:
    content: public final void uploadProperties(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 3f6357ce
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.uploadRange(final InputStream,final long,final long)
  id: uploadRange(final InputStream,final long,final long)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadRange(final InputStream sourceStream, final long offset, final long length)
  nameWithType: CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length)
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2122
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads a range to a file.</p>

    <p></p>
  syntax:
    content: public void uploadRange(final InputStream sourceStream, final long offset, final long length)
    parameters:
    - id: sourceStream
      type: ac354e53
      description: <p>An <ref refid="" kindref="compound">InputStream</ref> object which represents the input stream to write to the file. </p>
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the data to write.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>If an I/O exception occurred. </p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.uploadRange(final InputStream,final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadRange(final InputStream,final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadRange*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2154
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads a range to a file using the specified lease ID, request options, and operation context.</p>

    <p></p>
  syntax:
    content: public void uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: sourceStream
      type: ac354e53
      description: <p>An <ref refid="" kindref="compound">InputStream</ref> object which represents the input stream to write to the file. </p>
    - id: offset
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. </p>
    - id: length
      type: 4c60ae65
      description: <p>A <code>long</code> which represents the length, in bytes, of the data to write. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object which represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>If an I/O exception occurred. </p>
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.uploadText(final String)
  id: uploadText(final String)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadText(final String content)
  nameWithType: CloudFile.uploadText(final String content)
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadText(final String content)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadText*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2071
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads a file from a string using the platform's default encoding. If the file already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax:
    content: public void uploadText(final String content)
    parameters:
    - id: content
      type: 3d93591e
      description: <p>A <code>String</code> which represents the content that will be uploaded to the file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
- uid: com.microsoft.azure.storage.file._cloud_file.uploadText(final String,final String,final AccessCondition,FileRequestOptions,OperationContext)
  id: uploadText(final String,final String,final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  langs:
  - java
  name: uploadText(final String content, final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadText(final String content, final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadText(final String content, final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file.uploadText*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFile.java
    startLine: 2099
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads a file from a string using the specified encoding. If the file already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax:
    content: public void uploadText(final String content, final String charsetName, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: content
      type: 3d93591e
      description: <p>A <code>String</code> which represents the content that will be uploaded to the file. </p>
    - id: charsetName
      type: 3d93591e
      description: <p>A <code>String</code> which represents the name of the charset to use to encode the content. If null, the platform's default encoding is used. </p>
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref href="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false"></xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: cbf33bbe
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: "44102508"
  spec.java:
  - name: URISyntaxException
    fullName: URISyntaxException
- uid: bac42120
  spec.java:
  - name: final URI
    fullName: final URI
- uid: com.microsoft.azure.storage.file._cloud_file.CloudFile*
  name: CloudFile
  nameWithType: CloudFile.CloudFile
  fullName: com.microsoft.azure.storage.file.CloudFile.CloudFile
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage._storage_uri
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._storage_uri
    name: StorageUri
    fullName: com.microsoft.azure.storage.StorageUri
    href: com.microsoft.azure.storage._storage_uri.yml
- uid: 93de0ef9com.microsoft.azure.storage._storage_credentials
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._storage_credentials
    name: StorageCredentials
    fullName: com.microsoft.azure.storage.StorageCredentials
    href: com.microsoft.azure.storage._storage_credentials.yml
- uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._cloud_file
    name: CloudFile
    fullName: com.microsoft.azure.storage.file.CloudFile
    href: com.microsoft.azure.storage.file._cloud_file.yml
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.storage.file._cloud_file.abortCopy*
  name: abortCopy
  nameWithType: CloudFile.abortCopy
  fullName: final void com.microsoft.azure.storage.file.CloudFile.abortCopy
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage._access_condition
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._access_condition
    name: AccessCondition
    fullName: com.microsoft.azure.storage.AccessCondition
    href: com.microsoft.azure.storage._access_condition.yml
- uid: 93de0ef9com.microsoft.azure.storage.blob._cloud_blob
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.blob._cloud_blob
    name: CloudBlob
    fullName: com.microsoft.azure.storage.blob.CloudBlob
    href: com.microsoft.azure.storage.blob._cloud_blob.yml
- uid: com.microsoft.azure.storage.file._cloud_file.startCopy*
  name: startCopy
  nameWithType: CloudFile.startCopy
  fullName: final String com.microsoft.azure.storage.file.CloudFile.startCopy
  package: com.microsoft.azure.storage.file
- uid: 4c60ae65
  spec.java:
  - name: final long
    fullName: final long
- uid: com.microsoft.azure.storage.file._cloud_file.clearRange*
  name: clearRange
  nameWithType: CloudFile.clearRange
  fullName: void com.microsoft.azure.storage.file.CloudFile.clearRange
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.create*
  name: create
  nameWithType: CloudFile.create
  fullName: void com.microsoft.azure.storage.file.CloudFile.create
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.delete*
  name: delete
  nameWithType: CloudFile.delete
  fullName: final void com.microsoft.azure.storage.file.CloudFile.delete
  package: com.microsoft.azure.storage.file
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.azure.storage.file._cloud_file.deleteIfExists*
  name: deleteIfExists
  nameWithType: CloudFile.deleteIfExists
  fullName: final boolean com.microsoft.azure.storage.file.CloudFile.deleteIfExists
  package: com.microsoft.azure.storage.file
- uid: 688beaca
  spec.java:
  - name: final OutputStream
    fullName: final OutputStream
- uid: com.microsoft.azure.storage.file._cloud_file.download*
  name: download
  nameWithType: CloudFile.download
  fullName: final void com.microsoft.azure.storage.file.CloudFile.download
  package: com.microsoft.azure.storage.file
- uid: 6c34dcee
  spec.java:
  - name: final Long
    fullName: final Long
- uid: com.microsoft.azure.storage.file._cloud_file.downloadRange*
  name: downloadRange
  nameWithType: CloudFile.downloadRange
  fullName: final void com.microsoft.azure.storage.file.CloudFile.downloadRange
  package: com.microsoft.azure.storage.file
- uid: f549433f
  spec.java:
  - name: final byte []
    fullName: final byte []
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: com.microsoft.azure.storage.file._cloud_file.downloadRangeToByteArray*
  name: downloadRangeToByteArray
  nameWithType: CloudFile.downloadRangeToByteArray
  fullName: final int com.microsoft.azure.storage.file.CloudFile.downloadRangeToByteArray
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.downloadToByteArray*
  name: downloadToByteArray
  nameWithType: CloudFile.downloadToByteArray
  fullName: final int com.microsoft.azure.storage.file.CloudFile.downloadToByteArray
  package: com.microsoft.azure.storage.file
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.storage.file._cloud_file.downloadToFile*
  name: downloadToFile
  nameWithType: CloudFile.downloadToFile
  fullName: void com.microsoft.azure.storage.file.CloudFile.downloadToFile
  package: com.microsoft.azure.storage.file
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.file._cloud_file.downloadText*
  name: downloadText
  nameWithType: CloudFile.downloadText
  fullName: String com.microsoft.azure.storage.file.CloudFile.downloadText
  package: com.microsoft.azure.storage.file
- uid: 573b1e0bcom.microsoft.azure.storage.file._file_rangea08ddfce
  spec.java:
  - name: ArrayList<
    fullName: ArrayList<
  - uid: com.microsoft.azure.storage.file._file_range
    name: FileRange
    fullName: com.microsoft.azure.storage.file.FileRange
    href: com.microsoft.azure.storage.file._file_range.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.file._cloud_file.downloadFileRanges*
  name: downloadFileRanges
  nameWithType: CloudFile.downloadFileRanges
  fullName: ArrayList<FileRange> com.microsoft.azure.storage.file.CloudFile.downloadFileRanges
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.downloadAttributes*
  name: downloadAttributes
  nameWithType: CloudFile.downloadAttributes
  fullName: final void com.microsoft.azure.storage.file.CloudFile.downloadAttributes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.exists*
  name: exists
  nameWithType: CloudFile.exists
  fullName: final boolean com.microsoft.azure.storage.file.CloudFile.exists
  package: com.microsoft.azure.storage.file
- uid: e333ca4f
  spec.java:
  - name: InvalidKeyException
    fullName: InvalidKeyException
- uid: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_policy
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._shared_access_file_policy
    name: SharedAccessFilePolicy
    fullName: com.microsoft.azure.storage.file.SharedAccessFilePolicy
    href: com.microsoft.azure.storage.file._shared_access_file_policy.yml
- uid: com.microsoft.azure.storage.file._cloud_file.generateSharedAccessSignature*
  name: generateSharedAccessSignature
  nameWithType: CloudFile.generateSharedAccessSignature
  fullName: String com.microsoft.azure.storage.file.CloudFile.generateSharedAccessSignature
  package: com.microsoft.azure.storage.file
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 93de0ef9com.microsoft.azure.storage.file._shared_access_file_headers
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._shared_access_file_headers
    name: SharedAccessFileHeaders
    fullName: com.microsoft.azure.storage.file.SharedAccessFileHeaders
    href: com.microsoft.azure.storage.file._shared_access_file_headers.yml
- uid: 93de0ef9com.microsoft.azure.storage._i_p_range
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._i_p_range
    name: IPRange
    fullName: com.microsoft.azure.storage.IPRange
    href: com.microsoft.azure.storage._i_p_range.yml
- uid: 93de0ef9com.microsoft.azure.storage._shared_access_protocols
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._shared_access_protocols
    name: SharedAccessProtocols
    fullName: com.microsoft.azure.storage.SharedAccessProtocols
    href: com.microsoft.azure.storage._shared_access_protocols.yml
- uid: com.microsoft.azure.storage.file._cloud_file.getCopyState*
  name: getCopyState
  nameWithType: CloudFile.getCopyState
  fullName: CopyState com.microsoft.azure.storage.file.CloudFile.getCopyState
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._file_input_stream
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._file_input_stream
    name: FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
- uid: com.microsoft.azure.storage.file._cloud_file.openRead*
  name: openRead
  nameWithType: CloudFile.openRead
  fullName: final FileInputStream com.microsoft.azure.storage.file.CloudFile.openRead
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.openWriteExisting*
  name: openWriteExisting
  nameWithType: CloudFile.openWriteExisting
  fullName: FileOutputStream com.microsoft.azure.storage.file.CloudFile.openWriteExisting
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.openWriteNew*
  name: openWriteNew
  nameWithType: CloudFile.openWriteNew
  fullName: FileOutputStream com.microsoft.azure.storage.file.CloudFile.openWriteNew
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.uploadFromByteArray*
  name: uploadFromByteArray
  nameWithType: CloudFile.uploadFromByteArray
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadFromByteArray
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.uploadFromFile*
  name: uploadFromFile
  nameWithType: CloudFile.uploadFromFile
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadFromFile
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.uploadText*
  name: uploadText
  nameWithType: CloudFile.uploadText
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadText
  package: com.microsoft.azure.storage.file
- uid: ac354e53
  spec.java:
  - name: final InputStream
    fullName: final InputStream
- uid: com.microsoft.azure.storage.file._cloud_file.uploadRange*
  name: uploadRange
  nameWithType: CloudFile.uploadRange
  fullName: void com.microsoft.azure.storage.file.CloudFile.uploadRange
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.uploadMetadata*
  name: uploadMetadata
  nameWithType: CloudFile.uploadMetadata
  fullName: final void com.microsoft.azure.storage.file.CloudFile.uploadMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.uploadProperties*
  name: uploadProperties
  nameWithType: CloudFile.uploadProperties
  fullName: final void com.microsoft.azure.storage.file.CloudFile.uploadProperties
  package: com.microsoft.azure.storage.file
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.storage.file._cloud_file.resize*
  name: resize
  nameWithType: CloudFile.resize
  fullName: void com.microsoft.azure.storage.file.CloudFile.resize
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.upload*
  name: upload
  nameWithType: CloudFile.upload
  fullName: void com.microsoft.azure.storage.file.CloudFile.upload
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file_share
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._cloud_file_share
    name: CloudFileShare
    fullName: com.microsoft.azure.storage.file.CloudFileShare
    href: com.microsoft.azure.storage.file._cloud_file_share.yml
- uid: com.microsoft.azure.storage.file._cloud_file.getShare*
  name: getShare
  nameWithType: CloudFile.getShare
  fullName: final CloudFileShare com.microsoft.azure.storage.file.CloudFile.getShare
  package: com.microsoft.azure.storage.file
- uid: 496ce5ae
  spec.java:
  - name: final HashMap<String, String>
    fullName: final HashMap<String, String>
- uid: com.microsoft.azure.storage.file._cloud_file.getMetadata*
  name: getMetadata
  nameWithType: CloudFile.getMetadata
  fullName: final HashMap<String, String> com.microsoft.azure.storage.file.CloudFile.getMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.getName*
  name: getName
  nameWithType: CloudFile.getName
  fullName: final String com.microsoft.azure.storage.file.CloudFile.getName
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file_directory
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._cloud_file_directory
    name: CloudFileDirectory
    fullName: com.microsoft.azure.storage.file.CloudFileDirectory
    href: com.microsoft.azure.storage.file._cloud_file_directory.yml
- uid: com.microsoft.azure.storage.file._cloud_file.getParent*
  name: getParent
  nameWithType: CloudFile.getParent
  fullName: final CloudFileDirectory com.microsoft.azure.storage.file.CloudFile.getParent
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._file_properties
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._file_properties
    name: FileProperties
    fullName: com.microsoft.azure.storage.file.FileProperties
    href: com.microsoft.azure.storage.file._file_properties.yml
- uid: com.microsoft.azure.storage.file._cloud_file.getProperties*
  name: getProperties
  nameWithType: CloudFile.getProperties
  fullName: final FileProperties com.microsoft.azure.storage.file.CloudFile.getProperties
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file_client
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._cloud_file_client
    name: CloudFileClient
    fullName: com.microsoft.azure.storage.file.CloudFileClient
    href: com.microsoft.azure.storage.file._cloud_file_client.yml
- uid: com.microsoft.azure.storage.file._cloud_file.getServiceClient*
  name: getServiceClient
  nameWithType: CloudFile.getServiceClient
  fullName: final CloudFileClient com.microsoft.azure.storage.file.CloudFile.getServiceClient
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.getStreamWriteSizeInBytes*
  name: getStreamWriteSizeInBytes
  nameWithType: CloudFile.getStreamWriteSizeInBytes
  fullName: final int com.microsoft.azure.storage.file.CloudFile.getStreamWriteSizeInBytes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.getStreamMinimumReadSizeInBytes*
  name: getStreamMinimumReadSizeInBytes
  nameWithType: CloudFile.getStreamMinimumReadSizeInBytes
  fullName: final int com.microsoft.azure.storage.file.CloudFile.getStreamMinimumReadSizeInBytes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.getStorageUri*
  name: getStorageUri
  nameWithType: CloudFile.getStorageUri
  fullName: final StorageUri com.microsoft.azure.storage.file.CloudFile.getStorageUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.getUri*
  name: getUri
  nameWithType: CloudFile.getUri
  fullName: final URI com.microsoft.azure.storage.file.CloudFile.getUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.setMetadata*
  name: setMetadata
  nameWithType: CloudFile.setMetadata
  fullName: final void com.microsoft.azure.storage.file.CloudFile.setMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.setStreamMinimumReadSizeInBytes*
  name: setStreamMinimumReadSizeInBytes
  nameWithType: CloudFile.setStreamMinimumReadSizeInBytes
  fullName: void com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.setStreamWriteSizeInBytes*
  name: setStreamWriteSizeInBytes
  nameWithType: CloudFile.setStreamWriteSizeInBytes
  fullName: void com.microsoft.azure.storage.file.CloudFile.setStreamWriteSizeInBytes
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.downloadRangeInternal*
  name: downloadRangeInternal
  nameWithType: CloudFile.downloadRangeInternal
  fullName: final int com.microsoft.azure.storage.file.CloudFile.downloadRangeInternal
  package: com.microsoft.azure.storage.file
- uid: a7895dc2
  spec.java:
  - name: HttpURLConnection
    fullName: HttpURLConnection
- uid: com.microsoft.azure.storage.file._cloud_file.updateEtagAndLastModifiedFromResponse*
  name: updateEtagAndLastModifiedFromResponse
  nameWithType: CloudFile.updateEtagAndLastModifiedFromResponse
  fullName: void com.microsoft.azure.storage.file.CloudFile.updateEtagAndLastModifiedFromResponse
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.updateLengthFromResponse*
  name: updateLengthFromResponse
  nameWithType: CloudFile.updateLengthFromResponse
  fullName: void com.microsoft.azure.storage.file.CloudFile.updateLengthFromResponse
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.setShare*
  name: setShare
  nameWithType: CloudFile.setShare
  fullName: final void com.microsoft.azure.storage.file.CloudFile.setShare
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.setProperties*
  name: setProperties
  nameWithType: CloudFile.setProperties
  fullName: final void com.microsoft.azure.storage.file.CloudFile.setProperties
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.setStorageUri*
  name: setStorageUri
  nameWithType: CloudFile.setStorageUri
  fullName: void com.microsoft.azure.storage.file.CloudFile.setStorageUri
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage._operation_context
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._operation_context
    name: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    href: com.microsoft.azure.storage._operation_context.yml
- uid: com.microsoft.azure.storage.file._cloud_file.getTransformedAddress*
  name: getTransformedAddress
  nameWithType: CloudFile.getTransformedAddress
  fullName: final StorageUri com.microsoft.azure.storage.file.CloudFile.getTransformedAddress
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.getParentNameFromURI*
  name: getParentNameFromURI
  nameWithType: CloudFile.getParentNameFromURI
  fullName: static String com.microsoft.azure.storage.file.CloudFile.getParentNameFromURI
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file.getCanonicalName()
- uid: com.microsoft.azure.storage.file._list_file_item
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: ListFileItem
  nameWithType: ListFileItem
  fullName: com.microsoft.azure.storage.file.ListFileItem
  type: Interface
  summary: <p>Represents an item that may be returned by a file listing operation. </p>
  syntax:
    content: public interface ListFileItem
- uid: com.microsoft.azure.storage._constants.DEFAULT_STREAM_WRITE_IN_BYTES()
  parent: com.microsoft.azure.storage._constants
  href: com.microsoft.azure.storage._constants.yml
  name: DEFAULT_STREAM_WRITE_IN_BYTES
  nameWithType: Constants.DEFAULT_STREAM_WRITE_IN_BYTES
  fullName: final int com.microsoft.azure.storage.Constants.DEFAULT_STREAM_WRITE_IN_BYTES
  type: Field
  summary: <p>The default write size, in bytes, used by <ref refid="" kindref="compound">BlobOutputStream</ref> or <ref refid="" kindref="compound">FileOutputStream</ref>. </p>
  syntax:
    content: public static final int DEFAULT_STREAM_WRITE_IN_BYTES=  4 * Constants.MB
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.file._file_output_stream
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_output_stream.yml
  name: FileOutputStream
  nameWithType: FileOutputStream
  fullName: com.microsoft.azure.storage.file.FileOutputStream
  type: Class
  summary: <p>The class is an append-only stream for writing into storage. </p>
  syntax:
    content: public class FileOutputStream
- uid: com.microsoft.azure.storage._constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES()
  parent: com.microsoft.azure.storage._constants
  href: com.microsoft.azure.storage._constants.yml
  name: DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
  nameWithType: Constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
  fullName: final int com.microsoft.azure.storage.Constants.DEFAULT_MINIMUM_READ_SIZE_IN_BYTES
  type: Field
  summary: <p>The default minimum read size, in bytes, for a <ref refid="" kindref="compound">BlobInputStream</ref> or <ref refid="" kindref="compound">FileInputStream</ref>. </p>
  syntax:
    content: public static final int DEFAULT_MINIMUM_READ_SIZE_IN_BYTES= 4 * Constants.MB
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.file._file_input_stream
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_input_stream.yml
  name: FileInputStream
  nameWithType: FileInputStream
  fullName: com.microsoft.azure.storage.file.FileInputStream
  type: Class
  summary: <p>Provides an input stream to read a given file resource. </p>
  syntax:
    content: public class FileInputStream
- uid: com.microsoft.azure.storage.file._cloud_file_directory
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory
  type: Class
  summary: >-
    <p>Represents a virtual directory of files. </p>

    <p>Directories, which are encapsulated as <xref href="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false"></xref> objects, hold files and can also contain sub-directories. </p>
  syntax:
    content: public class CloudFileDirectory
- uid: com.microsoft.azure.storage.file._cloud_file_client
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_client.yml
  name: CloudFileClient
  nameWithType: CloudFileClient
  fullName: com.microsoft.azure.storage.file.CloudFileClient
  type: Class
  summary: >-
    <p>Provides a client for accessing the Microsoft Azure File service. </p>

    <p>This class provides a point of access to the File service. The service client encapsulates the base URI for the File service. It also encapsulates the credentials for accessing the storage account. </p>
  syntax:
    content: public class CloudFileClient
- uid: com.microsoft.azure.storage.file._cloud_file_share
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  name: CloudFileShare
  nameWithType: CloudFileShare
  fullName: com.microsoft.azure.storage.file.CloudFileShare
  type: Class
  summary: >-
    <p>Represents a share in the Microsoft Azure File service. </p>

    <p>Shares hold directories, which are encapsulated as <xref href="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false"></xref> objects, and directories hold files. Directories can also contain sub-directories. </p>
  syntax:
    content: public class CloudFileShare
- uid: com.microsoft.azure.storage.file._file_properties
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_properties.yml
  name: FileProperties
  nameWithType: FileProperties
  fullName: com.microsoft.azure.storage.file.FileProperties
  type: Class
  summary: <p>Represents the system properties for a file. </p>
  syntax:
    content: public class FileProperties
- uid: com.microsoft.azure.storage._storage_uri
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_uri.yml
  name: StorageUri
  nameWithType: StorageUri
  fullName: com.microsoft.azure.storage.StorageUri
  type: Class
  summary: <p>Holds a list of URIs that represents the storage resource. </p>
  syntax:
    content: public class StorageUri
- uid: com.microsoft.azure.storage._storage_exception
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_exception.yml
  name: StorageException
  nameWithType: StorageException
  fullName: com.microsoft.azure.storage.StorageException
  type: Class
  summary: <p>Represents an exception for the Microsoft Azure storage service. </p>
  syntax:
    content: public class StorageException
- uid: com.microsoft.azure.storage.file._cloud_file
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  name: CloudFile
  nameWithType: CloudFile
  fullName: com.microsoft.azure.storage.file.CloudFile
  type: Class
  summary: <p>Represents a Microsoft Azure File. </p>
  syntax: *o1
- uid: com.microsoft.azure.storage._storage_credentials
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_credentials.yml
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: com.microsoft.azure.storage.StorageCredentials
  type: Class
  summary: <p>Represents a set of credentials used to authenticate access to a Microsoft Azure storage account. This is the base class for the <xref href="com.microsoft.azure.storage._storage_credentials_account_and_key" data-throw-if-not-resolved="false"></xref> and <xref href="com.microsoft.azure.storage._storage_credentials_shared_access_signature" data-throw-if-not-resolved="false"></xref> classes. </p>
  syntax:
    content: public class StorageCredentials
- uid: com.microsoft.azure.storage._access_condition
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._access_condition.yml
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: com.microsoft.azure.storage.AccessCondition
  type: Class
  summary: <p>Represents a set of access conditions to be used for operations against the storage services. </p>
  syntax:
    content: public class AccessCondition
- uid: com.microsoft.azure.storage.file._file_request_options
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_request_options.yml
  name: FileRequestOptions
  nameWithType: FileRequestOptions
  fullName: com.microsoft.azure.storage.file.FileRequestOptions
  type: Class
  summary: <p>Represents a set of options that may be specified on a request. </p>
  syntax:
    content: public class FileRequestOptions
- uid: com.microsoft.azure.storage._operation_context
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._operation_context.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: <p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage.blob._cloud_blob
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._cloud_blob.yml
  name: CloudBlob
  nameWithType: CloudBlob
  fullName: com.microsoft.azure.storage.blob.CloudBlob
  type: Class
  summary: <p>Represents a Microsoft Azure blob. This is the base class for the <xref href="com.microsoft.azure.storage.blob._cloud_block_blob" data-throw-if-not-resolved="false"></xref> and <xref href="com.microsoft.azure.storage.blob._cloud_page_blob" data-throw-if-not-resolved="false"></xref> classes. </p>
  syntax:
    content: public class CloudBlob implements ListBlobItem
- uid: com.microsoft.azure.storage.file._file_range
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_range.yml
  name: FileRange
  nameWithType: FileRange
  fullName: com.microsoft.azure.storage.file.FileRange
  type: Class
  summary: <p>Represents a range of bytes in a file. </p>
  syntax:
    content: public class FileRange
- uid: com.microsoft.azure.storage.file._shared_access_file_policy
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._shared_access_file_policy.yml
  name: SharedAccessFilePolicy
  nameWithType: SharedAccessFilePolicy
  fullName: com.microsoft.azure.storage.file.SharedAccessFilePolicy
  type: Class
  summary: <p>Represents a shared access policy, which specifies the start time, expiry time, and permissions for a shared access signature. </p>
  syntax:
    content: public class SharedAccessFilePolicy
- uid: com.microsoft.azure.storage.file._shared_access_file_headers
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._shared_access_file_headers.yml
  name: SharedAccessFileHeaders
  nameWithType: SharedAccessFileHeaders
  fullName: com.microsoft.azure.storage.file.SharedAccessFileHeaders
  type: Class
  summary: <p>Represents the optional headers that can be returned with files accessed using SAS. </p>
  syntax:
    content: public class SharedAccessFileHeaders
- uid: com.microsoft.azure.storage._i_p_range
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._i_p_range.yml
  name: IPRange
  nameWithType: IPRange
  fullName: com.microsoft.azure.storage.IPRange
  type: Class
  summary: <p>A continuous range of IP addresses. </p>
  syntax:
    content: public class IPRange
- uid: com.microsoft.azure.storage._shared_access_protocols
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._shared_access_protocols.yml
  name: SharedAccessProtocols
  nameWithType: SharedAccessProtocols
  fullName: com.microsoft.azure.storage.SharedAccessProtocols
  type: Enum
  summary: <p>Specifies the set of possible permissions for a shared access protocol. </p>
  syntax:
    content: public enum SharedAccessProtocols
- uid: com.microsoft.azure.storage.file._copy_state
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._copy_state.yml
  name: CopyState
  nameWithType: CopyState
  fullName: com.microsoft.azure.storage.file.CopyState
  type: Class
  summary: <p>Represents the attributes of a copy operation. </p>
  syntax:
    content: public class CopyState
- uid: com.microsoft.azure.storage.file._cloud_file.setStreamMinimumReadSizeInBytes(final int)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  name: setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  nameWithType: CloudFile.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  fullName: void com.microsoft.azure.storage.file.CloudFile.setStreamMinimumReadSizeInBytes(final int minimumReadSize)
  type: Method
  summary: >-
    <p>Sets the minimum read size when using a <xref href="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.storage.file._cloud_file.openWriteNew(final long,AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  name: openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: FileOutputStream com.microsoft.azure.storage.file.CloudFile.openWriteNew(final long length, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  type: Method
  summary: >-
    <p>Opens an output stream object to write data to the file, using the specified lease ID, request options and operation context. The file does not need to yet exist and will be created with the length specified. If the file already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please pass in an <xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref> generated using <xref href="com.microsoft.azure.storage._access_condition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: *o3
- uid: com.microsoft.azure.storage._access_condition.generateIfNotExistsCondition()
  parent: com.microsoft.azure.storage._access_condition
  href: com.microsoft.azure.storage._access_condition.yml
  name: generateIfNotExistsCondition()
  nameWithType: AccessCondition.generateIfNotExistsCondition()
  fullName: static AccessCondition com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()
  type: Method
  summary: >-
    <p>Returns an access condition such that an operation will be performed only if the resource does not exist on the service. </p>

    <p>Setting this access condition modifies the request to include the HTTP <emphasis>If-None-Match</emphasis> conditional header. </p>

    <p>For more information, see <ulink url="http://go.microsoft.com/fwlink/?LinkID=224642">Specifying Conditional Headers for Blob Service Operations</ulink>.</p>

    <p></p>
  syntax:
    content: public static AccessCondition generateIfNotExistsCondition()
    return:
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <code><xref href="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false"></xref></code> object that represents the if not exists condition. </p>
- uid: com.microsoft.azure.storage.file._cloud_file.downloadAttributes()
  parent: com.microsoft.azure.storage.file._cloud_file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  name: downloadAttributes()
  nameWithType: CloudFile.downloadAttributes()
  fullName: final void com.microsoft.azure.storage.file.CloudFile.downloadAttributes()
  type: Method
  summary: >-
    <p>Populates a file's properties and metadata. </p>

    <p>This method populates the file's system properties and user-defined metadata. Before reading or modifying a file's properties or metadata, call this method or its overload to retrieve the latest values for the file's properties and metadata from the Microsoft Azure storage service.</p>

    <p></p>
  syntax: *o4
- uid: com.microsoft.azure.storage.file._list_file_item.getShare()
  parent: com.microsoft.azure.storage.file._list_file_item
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: getShare()
  nameWithType: ListFileItem.getShare()
  fullName: CloudFileShare com.microsoft.azure.storage.file.ListFileItem.getShare()
  type: Method
  summary: >-
    <p>Returns the share for the file item.</p>

    <p></p>
  syntax:
    content: public CloudFileShare getShare()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref href="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false"></xref> object which represents the file item's share.</p>
- uid: com.microsoft.azure.storage.file._list_file_item.getParent()
  parent: com.microsoft.azure.storage.file._list_file_item
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: getParent()
  nameWithType: ListFileItem.getParent()
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.ListFileItem.getParent()
  type: Method
  summary: >-
    <p>Returns the parent for the file item.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory getParent()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_directory
      description: <p>A <xref href="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false"></xref> object which represents the file item's parent.</p>
- uid: com.microsoft.azure.storage.file._list_file_item.getStorageUri()
  parent: com.microsoft.azure.storage.file._list_file_item
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: getStorageUri()
  nameWithType: ListFileItem.getStorageUri()
  fullName: StorageUri com.microsoft.azure.storage.file.ListFileItem.getStorageUri()
  type: Method
  summary: >-
    <p>Returns the list of URIs for all storage locations of the file item.</p>

    <p></p>
  syntax:
    content: public StorageUri getStorageUri()
    return:
      type: com.microsoft.azure.storage._storage_uri
      description: <p>A <code><xref href="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false"></xref></code> object which represents the file item's URI. </p>
- uid: com.microsoft.azure.storage.file._list_file_item.getUri()
  parent: com.microsoft.azure.storage.file._list_file_item
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: getUri()
  nameWithType: ListFileItem.getUri()
  fullName: URI com.microsoft.azure.storage.file.ListFileItem.getUri()
  type: Method
  summary: >-
    <p>Returns the URI for the file item.</p>

    <p></p>
  syntax:
    content: public URI getUri()
    return:
      type: "62304784"
      description: <p>A <code>java.net.URI</code> object which represents the file item's URI. </p>
- uid: com.microsoft.azure.storage.core._storage_request
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core._storage_request.yml
  name: StorageRequest<C,P,R>
  nameWithType: StorageRequest<C,P,R>
  fullName: com.microsoft.azure.storage.core.StorageRequest<C,P,R>
  type: Class
  summary: >-
    <p>RESERVED FOR INTERNAL USE. A class which encapsulate the execution of a given storage operation.</p>

    <p></p>
  syntax:
    content: public class StorageRequest<C,P,R>
    typeParameters:
    - type: 37f8610d
      description: <p>The service client type </p>
    - type: db9ec244
      description: <p>The type of the parent object, i.e. CloudBlobContainer for downloadAttributes etc. </p>
    - type: d4d3e1e1
      description: <p>The type of the expected result </p>
