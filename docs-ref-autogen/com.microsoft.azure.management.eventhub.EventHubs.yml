### YamlMime:JavaType
uid: "com.microsoft.azure.management.eventhub.EventHubs"
fullName: "com.microsoft.azure.management.eventhub.EventHubs"
name: "EventHubs"
nameWithType: "EventHubs"
summary: "Entry point to manage event hubs."
syntax: "public interface EventHubs extends SupportsCreating<EventHub.DefinitionStages.Blank>, SupportsDeletingById, SupportsGettingById<EventHub>, HasInner<EventHubsInner>, HasManager<EventHubManager>"
methods:
- uid: "com.microsoft.azure.management.eventhub.EventHubs.authorizationRules()"
  fullName: "com.microsoft.azure.management.eventhub.EventHubs.authorizationRules()"
  name: "authorizationRules()"
  nameWithType: "EventHubs.authorizationRules()"
  modifiers:
  - "abstract"
  syntax: "public abstract EventHubAuthorizationRules authorizationRules()"
  returns:
    description: "entry point to manage authorization rules of event hubs."
    type: "<xref href=\"com.microsoft.azure.management.eventhub.EventHubAuthorizationRules?alt=com.microsoft.azure.management.eventhub.EventHubAuthorizationRules&text=EventHubAuthorizationRules\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.eventhub.EventHubs.consumerGroups()"
  fullName: "com.microsoft.azure.management.eventhub.EventHubs.consumerGroups()"
  name: "consumerGroups()"
  nameWithType: "EventHubs.consumerGroups()"
  modifiers:
  - "abstract"
  syntax: "public abstract EventHubConsumerGroups consumerGroups()"
  returns:
    description: "entry point to manage consumer group of event hubs."
    type: "<xref href=\"com.microsoft.azure.management.eventhub.EventHubConsumerGroups?alt=com.microsoft.azure.management.eventhub.EventHubConsumerGroups&text=EventHubConsumerGroups\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.eventhub.EventHubs.deleteByName(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventhub.EventHubs.deleteByName(String resourceGroupName, String namespaceName, String name)"
  name: "deleteByName(String resourceGroupName, String namespaceName, String name)"
  nameWithType: "EventHubs.deleteByName(String resourceGroupName, String namespaceName, String name)"
  summary: "Deletes an event hub in a namespace under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource group name"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "namespace name"
    name: "namespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "event hub name"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByName(String resourceGroupName, String namespaceName, String name)"
  desc: "Deletes an event hub in a namespace under a resource group."
- uid: "com.microsoft.azure.management.eventhub.EventHubs.deleteByNameAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventhub.EventHubs.deleteByNameAsync(String resourceGroupName, String namespaceName, String name)"
  name: "deleteByNameAsync(String resourceGroupName, String namespaceName, String name)"
  nameWithType: "EventHubs.deleteByNameAsync(String resourceGroupName, String namespaceName, String name)"
  summary: "Deletes an event hub in a namespace under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource group name"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "namespace name"
    name: "namespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "event hub name"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteByNameAsync(String resourceGroupName, String namespaceName, String name)"
  desc: "Deletes an event hub in a namespace under a resource group."
  returns:
    description: "the completable representing the task"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.eventhub.EventHubs.getByName(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventhub.EventHubs.getByName(String resourceGroupName, String namespaceName, String name)"
  name: "getByName(String resourceGroupName, String namespaceName, String name)"
  nameWithType: "EventHubs.getByName(String resourceGroupName, String namespaceName, String name)"
  summary: "Gets an event hub in a namespace under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource group name"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "namespace name"
    name: "namespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "event hub name"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EventHub getByName(String resourceGroupName, String namespaceName, String name)"
  desc: "Gets an event hub in a namespace under a resource group."
  returns:
    description: "the event hubs"
    type: "<xref href=\"com.microsoft.azure.management.eventhub.EventHub?alt=com.microsoft.azure.management.eventhub.EventHub&text=EventHub\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.eventhub.EventHubs.getByNameAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventhub.EventHubs.getByNameAsync(String resourceGroupName, String namespaceName, String name)"
  name: "getByNameAsync(String resourceGroupName, String namespaceName, String name)"
  nameWithType: "EventHubs.getByNameAsync(String resourceGroupName, String namespaceName, String name)"
  summary: "Gets an event hub in a namespace under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource group name"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "namespace name"
    name: "namespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "event hub name"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventHub> getByNameAsync(String resourceGroupName, String namespaceName, String name)"
  desc: "Gets an event hub in a namespace under a resource group."
  returns:
    description: "observable that emits the event hubs"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventhub.EventHub?alt=com.microsoft.azure.management.eventhub.EventHub&text=EventHub\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventhub.EventHubs.listByNamespace(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventhub.EventHubs.listByNamespace(String resourceGroupName, String namespaceName)"
  name: "listByNamespace(String resourceGroupName, String namespaceName)"
  nameWithType: "EventHubs.listByNamespace(String resourceGroupName, String namespaceName)"
  summary: "Lists the event hubs in a namespace under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource group name"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "namespace name"
    name: "namespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<EventHub> listByNamespace(String resourceGroupName, String namespaceName)"
  desc: "Lists the event hubs in a namespace under a resource group."
  returns:
    description: "list of event hubs"
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventhub.EventHub?alt=com.microsoft.azure.management.eventhub.EventHub&text=EventHub\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventhub.EventHubs.listByNamespaceAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventhub.EventHubs.listByNamespaceAsync(String resourceGroupName, String namespaceName)"
  name: "listByNamespaceAsync(String resourceGroupName, String namespaceName)"
  nameWithType: "EventHubs.listByNamespaceAsync(String resourceGroupName, String namespaceName)"
  summary: "Lists the event hubs in a namespace under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource group name"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "namespace name"
    name: "namespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventHub> listByNamespaceAsync(String resourceGroupName, String namespaceName)"
  desc: "Lists the event hubs in a namespace under a resource group."
  returns:
    description: "observable that emits the event hubs"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventhub.EventHub?alt=com.microsoft.azure.management.eventhub.EventHub&text=EventHub\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point to manage event hubs."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById&text=SupportsGettingById\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventhub.EventHub?alt=com.microsoft.azure.management.eventhub.EventHub&text=EventHub\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventhub.implementation.EventHubManager?alt=com.microsoft.azure.management.eventhub.implementation.EventHubManager&text=EventHubManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventhub.EventHub.DefinitionStages.Blank?alt=com.microsoft.azure.management.eventhub.EventHub.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById&text=SupportsDeletingById\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventhub.implementation.EventHubsInner?alt=com.microsoft.azure.management.eventhub.implementation.EventHubsInner&text=EventHubsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.eventhub"
artifact: com.microsoft.azure:azure-mgmt-eventhub:1.41.2
