### YamlMime:JavaMember
nameWithType: SupportsBeginDeletingByName.beginDeleteByNameAsync
type: method
members:
- fullName: com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(String name)
  name: beginDeleteByNameAsync(String name)
  nameWithType: SupportsBeginDeletingByName.beginDeleteByNameAsync(String name)
  parameters:
  - description: <p>the name the resource to delete </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable<Void>&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously begins deleting a resource from Azure, identifying it by its resource name. The resource will stay until get() returns null.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteByNameAsync(String name)
  uid: com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(String)
- fullName: com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(String name, ServiceCallback<Void> callback)
  name: beginDeleteByNameAsync(String name, ServiceCallback<Void> callback)
  nameWithType: SupportsBeginDeletingByName.beginDeleteByNameAsync(String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the name of the resource to delete </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback<Void>&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture<Void>&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously begins deleting a resource from Azure, identifying it by its resource name. The resource will stay until get() returns null.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteByNameAsync(String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(String,ServiceCallback<Void>)
uid: com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync*
fullName: com.microsoft.azure.management.resources.fluentcore.collection.SupportsBeginDeletingByName.beginDeleteByNameAsync(String name)
name: beginDeleteByNameAsync(String name)
package: com.microsoft.azure.management.resources.fluentcore.collection
metadata: {}
