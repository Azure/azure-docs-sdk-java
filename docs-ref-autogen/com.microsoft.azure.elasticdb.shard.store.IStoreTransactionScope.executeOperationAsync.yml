### YamlMime:JavaMember
nameWithType: IStoreTransactionScope.executeOperationAsync
type: method
members:
- fullName: com.microsoft.azure.elasticdb.shard.store.IStoreTransactionScope.executeOperationAsync(String operationName, JAXBElement operationData)
  name: executeOperationAsync(String operationName, JAXBElement operationData)
  nameWithType: IStoreTransactionScope.executeOperationAsync(String operationName, JAXBElement operationData)
  parameters:
  - description: <p>Operation to execute. </p>
    name: operationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Input data for operation. </p>
    name: operationData
    type: <xref href="JAXBElement?alt=JAXBElement&text=JAXBElement" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Task encapsulating storage results object. </p>
    type: Callable&lt;<xref href="com.microsoft.azure.elasticdb.shard.store.StoreResults?alt=com.microsoft.azure.elasticdb.shard.store.StoreResults&text=StoreResults" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Asynchronously executes the given operation using the <em>operationData</em>  values as input to the operation.</p>

    <p></p>
  syntax: public Callable<StoreResults> executeOperationAsync(String operationName, JAXBElement operationData)
  uid: com.microsoft.azure.elasticdb.shard.store.IStoreTransactionScope.executeOperationAsync(String,JAXBElement)
uid: com.microsoft.azure.elasticdb.shard.store.IStoreTransactionScope.executeOperationAsync*
fullName: com.microsoft.azure.elasticdb.shard.store.IStoreTransactionScope.executeOperationAsync(String operationName, JAXBElement operationData)
name: executeOperationAsync(String operationName, JAXBElement operationData)
package: com.microsoft.azure.elasticdb.shard.store
metadata: {}
