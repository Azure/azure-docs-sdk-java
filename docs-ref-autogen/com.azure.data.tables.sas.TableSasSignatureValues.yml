### YamlMime:JavaType
uid: "com.azure.data.tables.sas.TableSasSignatureValues"
fullName: "com.azure.data.tables.sas.TableSasSignatureValues"
name: "TableSasSignatureValues"
nameWithType: "TableSasSignatureValues"
summary: "Used to initialize parameters for a Shared Access Signature (SAS) for the Azure Table Storage service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TableSasSignatureValues"
constructors:
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.TableSasSignatureValues(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.TableSasSignatureValues(String identifier)"
  name: "TableSasSignatureValues(String identifier)"
  nameWithType: "TableSasSignatureValues.TableSasSignatureValues(String identifier)"
  summary: "Creates an object with the specified identifier."
  parameters:
  - description: "Name of the access policy."
    name: "identifier"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues(String identifier)"
  desc: "Creates an object with the specified identifier."
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.TableSasSignatureValues(java.time.OffsetDateTime,com.azure.data.tables.sas.TableSasPermission)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.TableSasSignatureValues(OffsetDateTime expiryTime, TableSasPermission permissions)"
  name: "TableSasSignatureValues(OffsetDateTime expiryTime, TableSasPermission permissions)"
  nameWithType: "TableSasSignatureValues.TableSasSignatureValues(OffsetDateTime expiryTime, TableSasPermission permissions)"
  summary: "Creates an object with the specified expiry time and permissions."
  parameters:
  - description: "The time after which the SAS will no longer work."
    name: "expiryTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"table permissions\"></xref> allowed by the SAS."
    name: "permissions"
    type: "<xref href=\"com.azure.data.tables.sas.TableSasPermission?alt=com.azure.data.tables.sas.TableSasPermission&text=TableSasPermission\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues(OffsetDateTime expiryTime, TableSasPermission permissions)"
  desc: "Creates an object with the specified expiry time and permissions."
methods:
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getEndPartitionKey()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getEndPartitionKey()"
  name: "getEndPartitionKey()"
  nameWithType: "TableSasSignatureValues.getEndPartitionKey()"
  summary: "Get the maximum partition key accessible with this shared access signature."
  syntax: "public String getEndPartitionKey()"
  desc: "Get the maximum partition key accessible with this shared access signature. Key values are inclusive. If omitted, there is no upper bound on the table entities that can be accessed. If provided, it must accompany an ending row key that can be set via `setEndRowKey()`."
  returns:
    description: "The end partition key."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getEndRowKey()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getEndRowKey()"
  name: "getEndRowKey()"
  nameWithType: "TableSasSignatureValues.getEndRowKey()"
  summary: "Get the maximum row key accessible with this shared access signature."
  syntax: "public String getEndRowKey()"
  desc: "Get the maximum row key accessible with this shared access signature. Key values are inclusive. If omitted, there is no upper bound on the table entities that can be accessed. If provided, it must accompany an ending row key that can be set via `setEndPartitionKey()`."
  returns:
    description: "The end row key."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getExpiryTime()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getExpiryTime()"
  name: "getExpiryTime()"
  nameWithType: "TableSasSignatureValues.getExpiryTime()"
  syntax: "public OffsetDateTime getExpiryTime()"
  returns:
    description: "The time after which the SAS will no longer work."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getIdentifier()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getIdentifier()"
  name: "getIdentifier()"
  nameWithType: "TableSasSignatureValues.getIdentifier()"
  syntax: "public String getIdentifier()"
  returns:
    description: "The name of the access policy on the table this SAS references if any. Please see\n <a href=\"https://docs.microsoft.com/rest/api/storageservices/establishing-a-stored-access-policy\">here</a>\n for more information."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getPermissions()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getPermissions()"
  name: "getPermissions()"
  nameWithType: "TableSasSignatureValues.getPermissions()"
  syntax: "public String getPermissions()"
  returns:
    description: "The permissions string allowed by the SAS. Please refer to <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref> for help\n determining the permissions allowed."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getProtocol()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getProtocol()"
  name: "getProtocol()"
  nameWithType: "TableSasSignatureValues.getProtocol()"
  syntax: "public TableSasProtocol getProtocol()"
  returns:
    description: "The <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref> which determines the protocols allowed by the SAS."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasProtocol?alt=com.azure.data.tables.sas.TableSasProtocol&text=TableSasProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getSasIpRange()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getSasIpRange()"
  name: "getSasIpRange()"
  nameWithType: "TableSasSignatureValues.getSasIpRange()"
  syntax: "public TableSasIpRange getSasIpRange()"
  returns:
    description: "The <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasIpRange?alt=com.azure.data.tables.sas.TableSasIpRange&text=TableSasIpRange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getStartPartitionKey()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getStartPartitionKey()"
  name: "getStartPartitionKey()"
  nameWithType: "TableSasSignatureValues.getStartPartitionKey()"
  summary: "Get the minimum partition key accessible with this shared access signature."
  syntax: "public String getStartPartitionKey()"
  desc: "Get the minimum partition key accessible with this shared access signature. Key values are inclusive. If omitted, there is no lower bound on the table entities that can be accessed. If provided, it must accompany a start row key that can be set via `setStartRowKey()`."
  returns:
    description: "The start partition key."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getStartRowKey()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getStartRowKey()"
  name: "getStartRowKey()"
  nameWithType: "TableSasSignatureValues.getStartRowKey()"
  summary: "Get the minimum row key accessible with this shared access signature."
  syntax: "public String getStartRowKey()"
  desc: "Get the minimum row key accessible with this shared access signature. Key values are inclusive. If omitted, there is no lower bound on the table entities that can be accessed. If provided, it must accompany a start row key that can be set via `setStartPartitionKey()`."
  returns:
    description: "The start row key."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getStartTime()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getStartTime()"
  name: "getStartTime()"
  nameWithType: "TableSasSignatureValues.getStartTime()"
  syntax: "public OffsetDateTime getStartTime()"
  returns:
    description: "When the SAS will take effect."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.getVersion()"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.getVersion()"
  name: "getVersion()"
  nameWithType: "TableSasSignatureValues.getVersion()"
  syntax: "public String getVersion()"
  returns:
    description: "The version of the service this SAS will target. If not specified, it will default to the version\n targeted by the library."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setEndPartitionKey(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setEndPartitionKey(String endPartitionKey)"
  name: "setEndPartitionKey(String endPartitionKey)"
  nameWithType: "TableSasSignatureValues.setEndPartitionKey(String endPartitionKey)"
  summary: "Set the maximum partition key accessible with this shared access signature."
  parameters:
  - description: "The end partition key to set."
    name: "endPartitionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setEndPartitionKey(String endPartitionKey)"
  desc: "Set the maximum partition key accessible with this shared access signature. Key values are inclusive. If omitted, there is no upper bound on the table entities that can be accessed. If provided, it must accompany an ending row key that can be set via `setEndRowKey()`."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setEndRowKey(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setEndRowKey(String endRowKey)"
  name: "setEndRowKey(String endRowKey)"
  nameWithType: "TableSasSignatureValues.setEndRowKey(String endRowKey)"
  summary: "Set the maximum row key accessible with this shared access signature."
  parameters:
  - description: "The end row key to set."
    name: "endRowKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setEndRowKey(String endRowKey)"
  desc: "Set the maximum row key accessible with this shared access signature. Key values are inclusive. If omitted, there is no upper bound on the table entities that can be accessed. If provided, it must accompany an ending row key that can be set via `setEndPartitionKey()`."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setExpiryTime(OffsetDateTime expiryTime)"
  name: "setExpiryTime(OffsetDateTime expiryTime)"
  nameWithType: "TableSasSignatureValues.setExpiryTime(OffsetDateTime expiryTime)"
  summary: "Sets the time after which the SAS will no longer work."
  parameters:
  - description: "When the SAS will no longer work"
    name: "expiryTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setExpiryTime(OffsetDateTime expiryTime)"
  desc: "Sets the time after which the SAS will no longer work."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setIdentifier(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setIdentifier(String identifier)"
  name: "setIdentifier(String identifier)"
  nameWithType: "TableSasSignatureValues.setIdentifier(String identifier)"
  summary: "Sets the name of the access policy on the table this SAS references if any."
  parameters:
  - description: "Name of the access policy"
    name: "identifier"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setIdentifier(String identifier)"
  desc: "Sets the name of the access policy on the table this SAS references if any. Please see [here][] for more information.\n\n\n[here]: https://docs.microsoft.com/rest/api/storageservices/establishing-a-stored-access-policy"
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setPermissions(com.azure.data.tables.sas.TableSasPermission)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setPermissions(TableSasPermission permissions)"
  name: "setPermissions(TableSasPermission permissions)"
  nameWithType: "TableSasSignatureValues.setPermissions(TableSasPermission permissions)"
  summary: "Sets the permissions string allowed by the SAS."
  parameters:
  - description: "Permissions for the SAS"
    name: "permissions"
    type: "<xref href=\"com.azure.data.tables.sas.TableSasPermission?alt=com.azure.data.tables.sas.TableSasPermission&text=TableSasPermission\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setPermissions(TableSasPermission permissions)"
  desc: "Sets the permissions string allowed by the SAS. Please refer to <xref uid=\"com.azure.data.tables.sas.TableSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasPermission\"></xref> for help constructing the permissions string."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setProtocol(com.azure.data.tables.sas.TableSasProtocol)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setProtocol(TableSasProtocol protocol)"
  name: "setProtocol(TableSasProtocol protocol)"
  nameWithType: "TableSasSignatureValues.setProtocol(TableSasProtocol protocol)"
  summary: "Sets the <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref> which determines the protocols allowed by the SAS."
  parameters:
  - description: "Protocol for the SAS"
    name: "protocol"
    type: "<xref href=\"com.azure.data.tables.sas.TableSasProtocol?alt=com.azure.data.tables.sas.TableSasProtocol&text=TableSasProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setProtocol(TableSasProtocol protocol)"
  desc: "Sets the <xref uid=\"com.azure.data.tables.sas.TableSasProtocol\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasProtocol\"></xref> which determines the protocols allowed by the SAS."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setSasIpRange(com.azure.data.tables.sas.TableSasIpRange)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setSasIpRange(TableSasIpRange sasIpRange)"
  name: "setSasIpRange(TableSasIpRange sasIpRange)"
  nameWithType: "TableSasSignatureValues.setSasIpRange(TableSasIpRange sasIpRange)"
  summary: "Sets the <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
  parameters:
  - description: "Allowed IP range to set"
    name: "sasIpRange"
    type: "<xref href=\"com.azure.data.tables.sas.TableSasIpRange?alt=com.azure.data.tables.sas.TableSasIpRange&text=TableSasIpRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setSasIpRange(TableSasIpRange sasIpRange)"
  desc: "Sets the <xref uid=\"com.azure.data.tables.sas.TableSasIpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasIpRange\"></xref> which determines the IP ranges that are allowed to use the SAS."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setStartPartitionKey(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setStartPartitionKey(String startPartitionKey)"
  name: "setStartPartitionKey(String startPartitionKey)"
  nameWithType: "TableSasSignatureValues.setStartPartitionKey(String startPartitionKey)"
  summary: "Set the minimum partition key accessible with this shared access signature."
  parameters:
  - description: "The start partition key to set."
    name: "startPartitionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setStartPartitionKey(String startPartitionKey)"
  desc: "Set the minimum partition key accessible with this shared access signature. Key values are inclusive. If omitted, there is no lower bound on the table entities that can be accessed. If provided, it must accompany a start row key that can be set via `setStartRowKey()`."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setStartRowKey(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setStartRowKey(String startRowKey)"
  name: "setStartRowKey(String startRowKey)"
  nameWithType: "TableSasSignatureValues.setStartRowKey(String startRowKey)"
  summary: "Set the minimum row key accessible with this shared access signature."
  parameters:
  - description: "The start row key to set."
    name: "startRowKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setStartRowKey(String startRowKey)"
  desc: "Set the minimum row key accessible with this shared access signature. Key values are inclusive. If omitted, there is no lower bound on the table entities that can be accessed. If provided, it must accompany a start row key that can be set via `setStartPartitionKey()`."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setStartTime(java.time.OffsetDateTime)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  name: "setStartTime(OffsetDateTime startTime)"
  nameWithType: "TableSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  summary: "Sets when the SAS will take effect."
  parameters:
  - description: "When the SAS takes effect"
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setStartTime(OffsetDateTime startTime)"
  desc: "Sets when the SAS will take effect."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.sas.TableSasSignatureValues.setVersion(java.lang.String)"
  fullName: "com.azure.data.tables.sas.TableSasSignatureValues.setVersion(String version)"
  name: "setVersion(String version)"
  nameWithType: "TableSasSignatureValues.setVersion(String version)"
  summary: "Sets the version of the service this SAS will target."
  parameters:
  - description: "Version to target"
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableSasSignatureValues setVersion(String version)"
  desc: "Sets the version of the service this SAS will target. If not specified, it will default to the version targeted by the library."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.sas.TableSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableSasSignatureValues\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.sas.TableSasSignatureValues?alt=com.azure.data.tables.sas.TableSasSignatureValues&text=TableSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Used to initialize parameters for a Shared Access Signature (SAS) for the Azure Table Storage service. Once all the values here are set, use the `generateSas()` method on the desired Table client to obtain a representation of the SAS which can then be applied to a new client using the `sasToken(String)` method on the desired client builder."
metadata: {}
package: "com.azure.data.tables.sas"
artifact: com.azure:azure-data-tables:12.3.3
