### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.policy.UserAgentPolicy"
fullName: "com.azure.resourcemanager.resources.fluentcore.policy.UserAgentPolicy"
name: "UserAgentPolicy"
nameWithType: "UserAgentPolicy"
summary: "Rewrite the User<wbr>Agent<wbr>Policy, it will use Sdk-Name and Sdk-Version to build default user-agent."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class UserAgentPolicy implements HttpPipelinePolicy"
constructors:
- uid: "com.azure.resourcemanager.resources.fluentcore.policy.UserAgentPolicy.UserAgentPolicy(com.azure.core.http.policy.HttpLogOptions,com.azure.core.util.Configuration)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.policy.UserAgentPolicy.UserAgentPolicy(HttpLogOptions httpLogOptions, Configuration configuration)"
  name: "UserAgentPolicy(HttpLogOptions httpLogOptions, Configuration configuration)"
  nameWithType: "UserAgentPolicy.UserAgentPolicy(HttpLogOptions httpLogOptions, Configuration configuration)"
  parameters:
  - description: "used for get application id"
    name: "httpLogOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "used for check telemetry enable or not"
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UserAgentPolicy(HttpLogOptions httpLogOptions, Configuration configuration)"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.policy.UserAgentPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.policy.UserAgentPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "UserAgentPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextPolicy?alt=com.azure.core.http.HttpPipelineNextPolicy&text=HttpPipelineNextPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Rewrite the UserAgentPolicy, it will use Sdk-Name and Sdk-Version to build default user-agent."
implements:
- "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.policy"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.16.0
