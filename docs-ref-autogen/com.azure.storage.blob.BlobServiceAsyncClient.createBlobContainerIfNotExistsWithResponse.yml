### YamlMime:JavaMember
uid: "com.azure.storage.blob.BlobServiceAsyncClient.createBlobContainerIfNotExistsWithResponse*"
fullName: "com.azure.storage.blob.BlobServiceAsyncClient.createBlobContainerIfNotExistsWithResponse"
name: "createBlobContainerIfNotExistsWithResponse"
nameWithType: "BlobServiceAsyncClient.createBlobContainerIfNotExistsWithResponse"
members:
- uid: "com.azure.storage.blob.BlobServiceAsyncClient.createBlobContainerIfNotExistsWithResponse(java.lang.String,com.azure.storage.blob.options.BlobContainerCreateOptions)"
  fullName: "com.azure.storage.blob.BlobServiceAsyncClient.createBlobContainerIfNotExistsWithResponse(String containerName, BlobContainerCreateOptions options)"
  name: "createBlobContainerIfNotExistsWithResponse(String containerName, BlobContainerCreateOptions options)"
  nameWithType: "BlobServiceAsyncClient.createBlobContainerIfNotExistsWithResponse(String containerName, BlobContainerCreateOptions options)"
  summary: "Creates a new container within a storage account if it does not exist."
  parameters:
  - description: "Name of the container to create"
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobContainerCreateOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerCreateOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobContainerCreateOptions?alt=com.azure.storage.blob.options.BlobContainerCreateOptions&text=BlobContainerCreateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BlobContainerAsyncClient>> createBlobContainerIfNotExistsWithResponse(String containerName, BlobContainerCreateOptions options)"
  desc: "Creates a new container within a storage account if it does not exist. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n BlobContainerCreateOptions options = new BlobContainerCreateOptions().setMetadata(metadata)\n     .setPublicAccessType(PublicAccessType.CONTAINER);\n\n client.createBlobContainerIfNotExistsWithResponse(\"containerName\", options).subscribe(response -> {\n     if (response.getStatusCode() == 409) {\n         System.out.println(\"Already exists.\");\n     } else {\n         System.out.println(\"successfully created.\");\n     }\n });\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/create-container"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains a <xref uid=\"com.azure.storage.blob.BlobContainerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerAsyncClient\"></xref> used to interact with the container created. If <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>'s status code is 201,\n a new container was successfully created. If status code is 409, a container with the same name already existed\n at this location."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.BlobContainerAsyncClient?alt=com.azure.storage.blob.BlobContainerAsyncClient&text=BlobContainerAsyncClient\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob"
artifact: com.azure:azure-storage-blob:12.19.0
