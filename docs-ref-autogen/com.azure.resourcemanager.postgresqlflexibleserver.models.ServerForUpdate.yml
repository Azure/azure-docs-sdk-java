### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate"
fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate"
name: "ServerForUpdate"
nameWithType: "ServerForUpdate"
summary: "Represents a server to be updated."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ServerForUpdate**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.ServerForUpdate()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.ServerForUpdate()"
  name: "ServerForUpdate()"
  nameWithType: "ServerForUpdate.ServerForUpdate()"
  summary: "Creates an instance of Server<wbr>For<wbr>Update class."
  syntax: "public ServerForUpdate()"
  desc: "Creates an instance of ServerForUpdate class."
methods:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.administratorLogin()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.administratorLogin()"
  name: "administratorLogin()"
  nameWithType: "ServerForUpdate.administratorLogin()"
  summary: "Get the administrator<wbr>Login property: The administrator's login name of a server."
  syntax: "public String administratorLogin()"
  desc: "Get the administratorLogin property: The administrator's login name of a server. Can only be specified when the server is trying to switch to password authentication and does not have default administrator login."
  returns:
    description: "the administratorLogin value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.administratorLoginPassword()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.administratorLoginPassword()"
  name: "administratorLoginPassword()"
  nameWithType: "ServerForUpdate.administratorLoginPassword()"
  summary: "Get the administrator<wbr>Login<wbr>Password property: The password of the administrator login."
  syntax: "public String administratorLoginPassword()"
  desc: "Get the administratorLoginPassword property: The password of the administrator login."
  returns:
    description: "the administratorLoginPassword value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.authConfig()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.authConfig()"
  name: "authConfig()"
  nameWithType: "ServerForUpdate.authConfig()"
  summary: "Get the auth<wbr>Config property: Auth<wbr>Config properties of a server."
  syntax: "public AuthConfig authConfig()"
  desc: "Get the authConfig property: AuthConfig properties of a server."
  returns:
    description: "the authConfig value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.AuthConfig?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.AuthConfig&text=AuthConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.backup()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.backup()"
  name: "backup()"
  nameWithType: "ServerForUpdate.backup()"
  summary: "Get the backup property: Backup properties of a server."
  syntax: "public Backup backup()"
  desc: "Get the backup property: Backup properties of a server."
  returns:
    description: "the backup value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Backup?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Backup&text=Backup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.createMode()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.createMode()"
  name: "createMode()"
  nameWithType: "ServerForUpdate.createMode()"
  summary: "Get the create<wbr>Mode property: The mode to update a new PostgreSQL server."
  syntax: "public CreateModeForUpdate createMode()"
  desc: "Get the createMode property: The mode to update a new PostgreSQL server."
  returns:
    description: "the createMode value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate&text=CreateModeForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.dataEncryption()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.dataEncryption()"
  name: "dataEncryption()"
  nameWithType: "ServerForUpdate.dataEncryption()"
  summary: "Get the data<wbr>Encryption property: Data encryption properties of a server."
  syntax: "public DataEncryption dataEncryption()"
  desc: "Get the dataEncryption property: Data encryption properties of a server."
  returns:
    description: "the dataEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.DataEncryption?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.DataEncryption&text=DataEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ServerForUpdate.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Server<wbr>For<wbr>Update from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ServerForUpdate fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the ServerForUpdate."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ServerForUpdate from the JsonReader."
  returns:
    description: "An instance of ServerForUpdate if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.highAvailability()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.highAvailability()"
  name: "highAvailability()"
  nameWithType: "ServerForUpdate.highAvailability()"
  summary: "Get the high<wbr>Availability property: High availability properties of a server."
  syntax: "public HighAvailability highAvailability()"
  desc: "Get the highAvailability property: High availability properties of a server."
  returns:
    description: "the highAvailability value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability&text=HighAvailability\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.identity()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.identity()"
  name: "identity()"
  nameWithType: "ServerForUpdate.identity()"
  summary: "Get the identity property: Describes the identity of the application."
  syntax: "public UserAssignedIdentity identity()"
  desc: "Get the identity property: Describes the identity of the application."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.UserAssignedIdentity?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.UserAssignedIdentity&text=UserAssignedIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.maintenanceWindow()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.maintenanceWindow()"
  name: "maintenanceWindow()"
  nameWithType: "ServerForUpdate.maintenanceWindow()"
  summary: "Get the maintenance<wbr>Window property: Maintenance window properties of a server."
  syntax: "public MaintenanceWindow maintenanceWindow()"
  desc: "Get the maintenanceWindow property: Maintenance window properties of a server."
  returns:
    description: "the maintenanceWindow value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow&text=MaintenanceWindow\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.network()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.network()"
  name: "network()"
  nameWithType: "ServerForUpdate.network()"
  summary: "Get the network property: Network properties of a server."
  syntax: "public Network network()"
  desc: "Get the network property: Network properties of a server. These are required to be passed only in case if server is a private access server."
  returns:
    description: "the network value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Network?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.replica()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.replica()"
  name: "replica()"
  nameWithType: "ServerForUpdate.replica()"
  summary: "Get the replica property: Replica properties of a server."
  syntax: "public Replica replica()"
  desc: "Get the replica property: Replica properties of a server. These Replica properties are required to be passed only in case you want to Promote a server."
  returns:
    description: "the replica value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Replica?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Replica&text=Replica\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.replicationRole()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.replicationRole()"
  name: "replicationRole()"
  nameWithType: "ServerForUpdate.replicationRole()"
  summary: "Get the replication<wbr>Role property: Replication role of the server."
  syntax: "public ReplicationRole replicationRole()"
  desc: "Get the replicationRole property: Replication role of the server."
  returns:
    description: "the replicationRole value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ReplicationRole?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ReplicationRole&text=ReplicationRole\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.sku()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.sku()"
  name: "sku()"
  nameWithType: "ServerForUpdate.sku()"
  summary: "Get the sku property: The SKU (pricing tier) of the server."
  syntax: "public Sku sku()"
  desc: "Get the sku property: The SKU (pricing tier) of the server."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Sku?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.storage()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.storage()"
  name: "storage()"
  nameWithType: "ServerForUpdate.storage()"
  summary: "Get the storage property: Storage properties of a server."
  syntax: "public Storage storage()"
  desc: "Get the storage property: Storage properties of a server."
  returns:
    description: "the storage value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Storage?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Storage&text=Storage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.tags()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.tags()"
  name: "tags()"
  nameWithType: "ServerForUpdate.tags()"
  summary: "Get the tags property: Application-specific metadata in the form of key-value pairs."
  syntax: "public Map<String,String> tags()"
  desc: "Get the tags property: Application-specific metadata in the form of key-value pairs."
  returns:
    description: "the tags value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ServerForUpdate.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.validate()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.validate()"
  name: "validate()"
  nameWithType: "ServerForUpdate.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.version()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.version()"
  name: "version()"
  nameWithType: "ServerForUpdate.version()"
  summary: "Get the version property: PostgreSQL Server version."
  syntax: "public ServerVersion version()"
  desc: "Get the version property: PostgreSQL Server version. Version 16 is currently not supported for MVU."
  returns:
    description: "the version value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerVersion?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerVersion&text=ServerVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withAdministratorLogin(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withAdministratorLogin(String administratorLogin)"
  name: "withAdministratorLogin(String administratorLogin)"
  nameWithType: "ServerForUpdate.withAdministratorLogin(String administratorLogin)"
  summary: "Set the administrator<wbr>Login property: The administrator's login name of a server."
  parameters:
  - description: "the administratorLogin value to set."
    name: "administratorLogin"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ServerForUpdate withAdministratorLogin(String administratorLogin)"
  desc: "Set the administratorLogin property: The administrator's login name of a server. Can only be specified when the server is trying to switch to password authentication and does not have default administrator login."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withAdministratorLoginPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withAdministratorLoginPassword(String administratorLoginPassword)"
  name: "withAdministratorLoginPassword(String administratorLoginPassword)"
  nameWithType: "ServerForUpdate.withAdministratorLoginPassword(String administratorLoginPassword)"
  summary: "Set the administrator<wbr>Login<wbr>Password property: The password of the administrator login."
  parameters:
  - description: "the administratorLoginPassword value to set."
    name: "administratorLoginPassword"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ServerForUpdate withAdministratorLoginPassword(String administratorLoginPassword)"
  desc: "Set the administratorLoginPassword property: The password of the administrator login."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withAuthConfig(com.azure.resourcemanager.postgresqlflexibleserver.models.AuthConfig)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withAuthConfig(AuthConfig authConfig)"
  name: "withAuthConfig(AuthConfig authConfig)"
  nameWithType: "ServerForUpdate.withAuthConfig(AuthConfig authConfig)"
  summary: "Set the auth<wbr>Config property: Auth<wbr>Config properties of a server."
  parameters:
  - description: "the authConfig value to set."
    name: "authConfig"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.AuthConfig?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.AuthConfig&text=AuthConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withAuthConfig(AuthConfig authConfig)"
  desc: "Set the authConfig property: AuthConfig properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withBackup(com.azure.resourcemanager.postgresqlflexibleserver.models.Backup)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withBackup(Backup backup)"
  name: "withBackup(Backup backup)"
  nameWithType: "ServerForUpdate.withBackup(Backup backup)"
  summary: "Set the backup property: Backup properties of a server."
  parameters:
  - description: "the backup value to set."
    name: "backup"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Backup?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Backup&text=Backup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withBackup(Backup backup)"
  desc: "Set the backup property: Backup properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withCreateMode(com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withCreateMode(CreateModeForUpdate createMode)"
  name: "withCreateMode(CreateModeForUpdate createMode)"
  nameWithType: "ServerForUpdate.withCreateMode(CreateModeForUpdate createMode)"
  summary: "Set the create<wbr>Mode property: The mode to update a new PostgreSQL server."
  parameters:
  - description: "the createMode value to set."
    name: "createMode"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate&text=CreateModeForUpdate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withCreateMode(CreateModeForUpdate createMode)"
  desc: "Set the createMode property: The mode to update a new PostgreSQL server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withDataEncryption(com.azure.resourcemanager.postgresqlflexibleserver.models.DataEncryption)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withDataEncryption(DataEncryption dataEncryption)"
  name: "withDataEncryption(DataEncryption dataEncryption)"
  nameWithType: "ServerForUpdate.withDataEncryption(DataEncryption dataEncryption)"
  summary: "Set the data<wbr>Encryption property: Data encryption properties of a server."
  parameters:
  - description: "the dataEncryption value to set."
    name: "dataEncryption"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.DataEncryption?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.DataEncryption&text=DataEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withDataEncryption(DataEncryption dataEncryption)"
  desc: "Set the dataEncryption property: Data encryption properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withHighAvailability(com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withHighAvailability(HighAvailability highAvailability)"
  name: "withHighAvailability(HighAvailability highAvailability)"
  nameWithType: "ServerForUpdate.withHighAvailability(HighAvailability highAvailability)"
  summary: "Set the high<wbr>Availability property: High availability properties of a server."
  parameters:
  - description: "the highAvailability value to set."
    name: "highAvailability"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability&text=HighAvailability\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withHighAvailability(HighAvailability highAvailability)"
  desc: "Set the highAvailability property: High availability properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withIdentity(com.azure.resourcemanager.postgresqlflexibleserver.models.UserAssignedIdentity)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withIdentity(UserAssignedIdentity identity)"
  name: "withIdentity(UserAssignedIdentity identity)"
  nameWithType: "ServerForUpdate.withIdentity(UserAssignedIdentity identity)"
  summary: "Set the identity property: Describes the identity of the application."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.UserAssignedIdentity?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.UserAssignedIdentity&text=UserAssignedIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withIdentity(UserAssignedIdentity identity)"
  desc: "Set the identity property: Describes the identity of the application."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withMaintenanceWindow(com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withMaintenanceWindow(MaintenanceWindow maintenanceWindow)"
  name: "withMaintenanceWindow(MaintenanceWindow maintenanceWindow)"
  nameWithType: "ServerForUpdate.withMaintenanceWindow(MaintenanceWindow maintenanceWindow)"
  summary: "Set the maintenance<wbr>Window property: Maintenance window properties of a server."
  parameters:
  - description: "the maintenanceWindow value to set."
    name: "maintenanceWindow"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow&text=MaintenanceWindow\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withMaintenanceWindow(MaintenanceWindow maintenanceWindow)"
  desc: "Set the maintenanceWindow property: Maintenance window properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withNetwork(com.azure.resourcemanager.postgresqlflexibleserver.models.Network)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withNetwork(Network network)"
  name: "withNetwork(Network network)"
  nameWithType: "ServerForUpdate.withNetwork(Network network)"
  summary: "Set the network property: Network properties of a server."
  parameters:
  - description: "the network value to set."
    name: "network"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Network?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withNetwork(Network network)"
  desc: "Set the network property: Network properties of a server. These are required to be passed only in case if server is a private access server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withReplica(com.azure.resourcemanager.postgresqlflexibleserver.models.Replica)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withReplica(Replica replica)"
  name: "withReplica(Replica replica)"
  nameWithType: "ServerForUpdate.withReplica(Replica replica)"
  summary: "Set the replica property: Replica properties of a server."
  parameters:
  - description: "the replica value to set."
    name: "replica"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Replica?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Replica&text=Replica\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withReplica(Replica replica)"
  desc: "Set the replica property: Replica properties of a server. These Replica properties are required to be passed only in case you want to Promote a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withReplicationRole(com.azure.resourcemanager.postgresqlflexibleserver.models.ReplicationRole)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withReplicationRole(ReplicationRole replicationRole)"
  name: "withReplicationRole(ReplicationRole replicationRole)"
  nameWithType: "ServerForUpdate.withReplicationRole(ReplicationRole replicationRole)"
  summary: "Set the replication<wbr>Role property: Replication role of the server."
  parameters:
  - description: "the replicationRole value to set."
    name: "replicationRole"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ReplicationRole?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ReplicationRole&text=ReplicationRole\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withReplicationRole(ReplicationRole replicationRole)"
  desc: "Set the replicationRole property: Replication role of the server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withSku(com.azure.resourcemanager.postgresqlflexibleserver.models.Sku)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "ServerForUpdate.withSku(Sku sku)"
  summary: "Set the sku property: The SKU (pricing tier) of the server."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Sku?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withSku(Sku sku)"
  desc: "Set the sku property: The SKU (pricing tier) of the server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withStorage(com.azure.resourcemanager.postgresqlflexibleserver.models.Storage)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withStorage(Storage storage)"
  name: "withStorage(Storage storage)"
  nameWithType: "ServerForUpdate.withStorage(Storage storage)"
  summary: "Set the storage property: Storage properties of a server."
  parameters:
  - description: "the storage value to set."
    name: "storage"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Storage?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Storage&text=Storage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withStorage(Storage storage)"
  desc: "Set the storage property: Storage properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ServerForUpdate.withTags(Map<String,String> tags)"
  summary: "Set the tags property: Application-specific metadata in the form of key-value pairs."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public ServerForUpdate withTags(Map<String,String> tags)"
  desc: "Set the tags property: Application-specific metadata in the form of key-value pairs."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withVersion(com.azure.resourcemanager.postgresqlflexibleserver.models.ServerVersion)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withVersion(ServerVersion version)"
  name: "withVersion(ServerVersion version)"
  nameWithType: "ServerForUpdate.withVersion(ServerVersion version)"
  summary: "Set the version property: PostgreSQL Server version."
  parameters:
  - description: "the version value to set."
    name: "version"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerVersion?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerVersion&text=ServerVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withVersion(ServerVersion version)"
  desc: "Set the version property: PostgreSQL Server version. Version 16 is currently not supported for MVU."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a server to be updated."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.postgresqlflexibleserver.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver:1.1.0
