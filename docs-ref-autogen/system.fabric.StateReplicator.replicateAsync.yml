### YamlMime:JavaMember
nameWithType: StateReplicator.replicateAsync
type: method
members:
- fullName: system.fabric.StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
  name: replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
  nameWithType: StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
  parameters:
  - description: <p>Represents the state change that the Primary replica wants to replicate. </p>
    name: operationData
    type: <xref href="system.fabric.OperationData?alt=system.fabric.OperationData&text=OperationData" data-throw-if-not-resolved="False"/>
  - description: <p>Long, the LSN of the operation. Note that this is the same value which is returned by the task. Providing it as an out parameter is useful for services which want to prepare the local write to commit when the task finishes. </p>
    name: sequenceNumber
    type: <xref href="system.fabric.SequenceNumber?alt=system.fabric.SequenceNumber&text=SequenceNumber" data-throw-if-not-resolved="False"/>
  - description: <p>A write quorum of replicas that have been lost. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation might still be completed even if it is canceled. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns completable future of type long, the LSN of the operation. </p>
    type: CompletableFuture&lt;<xref href="system.fabric.SequenceNumber?alt=system.fabric.SequenceNumber&text=SequenceNumber" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Replicates state changes from Primary replica to the Secondary replicas and receives a quorum acknowledgement that those state changes have been applied. </p>
  syntax: public CompletableFuture<SequenceNumber> replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
  uid: system.fabric.StateReplicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)
uid: system.fabric.StateReplicator.replicateAsync*
fullName: system.fabric.StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
name: replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
package: system.fabric
metadata: {}
