### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation"
fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation"
name: "JobReleaseTaskExecutionInformation"
nameWithType: "JobReleaseTaskExecutionInformation"
summary: "Contains information about the execution of a Job Release Task on a Compute Node."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JobReleaseTaskExecutionInformation"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation()"
  name: "JobReleaseTaskExecutionInformation()"
  nameWithType: "JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation()"
  syntax: "public JobReleaseTaskExecutionInformation()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.containerInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.containerInfo()"
  name: "containerInfo()"
  nameWithType: "JobReleaseTaskExecutionInformation.containerInfo()"
  summary: "Get this property is set only if the Task runs in a container context."
  syntax: "public TaskContainerExecutionInformation containerInfo()"
  desc: "Get this property is set only if the Task runs in a container context."
  returns:
    description: "the containerInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.endTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.endTime()"
  name: "endTime()"
  nameWithType: "JobReleaseTaskExecutionInformation.endTime()"
  summary: "Get this property is set only if the Task is in the Completed state."
  syntax: "public DateTime endTime()"
  desc: "Get this property is set only if the Task is in the Completed state."
  returns:
    description: "the endTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.exitCode()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.exitCode()"
  name: "exitCode()"
  nameWithType: "JobReleaseTaskExecutionInformation.exitCode()"
  summary: "Get this parameter is returned only if the Task is in the completed state."
  syntax: "public Integer exitCode()"
  desc: "Get this parameter is returned only if the Task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the Compute Node operating system, such as when a process is forcibly terminated."
  returns:
    description: "the exitCode value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.failureInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.failureInfo()"
  name: "failureInfo()"
  nameWithType: "JobReleaseTaskExecutionInformation.failureInfo()"
  summary: "Get this property is set only if the Task is in the completed state and encountered a failure."
  syntax: "public TaskFailureInformation failureInfo()"
  desc: "Get this property is set only if the Task is in the completed state and encountered a failure."
  returns:
    description: "the failureInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.result()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.result()"
  name: "result()"
  nameWithType: "JobReleaseTaskExecutionInformation.result()"
  summary: "Get if the value is 'failed', then the details of the failure can be found in the failure<wbr>Info property."
  syntax: "public TaskExecutionResult result()"
  desc: "Get if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  returns:
    description: "the result value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.startTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.startTime()"
  name: "startTime()"
  nameWithType: "JobReleaseTaskExecutionInformation.startTime()"
  summary: "Get if the Task has been restarted or retried, this is the most recent time at which the Task started running."
  syntax: "public DateTime startTime()"
  desc: "Get if the Task has been restarted or retried, this is the most recent time at which the Task started running."
  returns:
    description: "the startTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.state()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.state()"
  name: "state()"
  nameWithType: "JobReleaseTaskExecutionInformation.state()"
  summary: "Get possible values include: 'running', 'completed'."
  syntax: "public JobReleaseTaskState state()"
  desc: "Get possible values include: 'running', 'completed'."
  returns:
    description: "the state value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskState?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskState&text=JobReleaseTaskState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.taskRootDirectory()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.taskRootDirectory()"
  name: "taskRootDirectory()"
  nameWithType: "JobReleaseTaskExecutionInformation.taskRootDirectory()"
  summary: "Get the task<wbr>Root<wbr>Directory value."
  syntax: "public String taskRootDirectory()"
  desc: "Get the taskRootDirectory value."
  returns:
    description: "the taskRootDirectory value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.taskRootDirectoryUrl()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.taskRootDirectoryUrl()"
  name: "taskRootDirectoryUrl()"
  nameWithType: "JobReleaseTaskExecutionInformation.taskRootDirectoryUrl()"
  summary: "Get the task<wbr>Root<wbr>Directory<wbr>Url value."
  syntax: "public String taskRootDirectoryUrl()"
  desc: "Get the taskRootDirectoryUrl value."
  returns:
    description: "the taskRootDirectoryUrl value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  name: "withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  nameWithType: "JobReleaseTaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  summary: "Set this property is set only if the Task runs in a container context."
  parameters:
  - description: "the containerInfo value to set"
    name: "containerInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  desc: "Set this property is set only if the Task runs in a container context."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withEndTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withEndTime(DateTime endTime)"
  name: "withEndTime(DateTime endTime)"
  nameWithType: "JobReleaseTaskExecutionInformation.withEndTime(DateTime endTime)"
  summary: "Set this property is set only if the Task is in the Completed state."
  parameters:
  - description: "the endTime value to set"
    name: "endTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withEndTime(DateTime endTime)"
  desc: "Set this property is set only if the Task is in the Completed state."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withExitCode(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withExitCode(Integer exitCode)"
  name: "withExitCode(Integer exitCode)"
  nameWithType: "JobReleaseTaskExecutionInformation.withExitCode(Integer exitCode)"
  summary: "Set this parameter is returned only if the Task is in the completed state."
  parameters:
  - description: "the exitCode value to set"
    name: "exitCode"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withExitCode(Integer exitCode)"
  desc: "Set this parameter is returned only if the Task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the Compute Node operating system, such as when a process is forcibly terminated."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withFailureInfo(TaskFailureInformation failureInfo)"
  name: "withFailureInfo(TaskFailureInformation failureInfo)"
  nameWithType: "JobReleaseTaskExecutionInformation.withFailureInfo(TaskFailureInformation failureInfo)"
  summary: "Set this property is set only if the Task is in the completed state and encountered a failure."
  parameters:
  - description: "the failureInfo value to set"
    name: "failureInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withFailureInfo(TaskFailureInformation failureInfo)"
  desc: "Set this property is set only if the Task is in the completed state and encountered a failure."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withResult(TaskExecutionResult result)"
  name: "withResult(TaskExecutionResult result)"
  nameWithType: "JobReleaseTaskExecutionInformation.withResult(TaskExecutionResult result)"
  summary: "Set if the value is 'failed', then the details of the failure can be found in the failure<wbr>Info property."
  parameters:
  - description: "the result value to set"
    name: "result"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withResult(TaskExecutionResult result)"
  desc: "Set if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withStartTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withStartTime(DateTime startTime)"
  name: "withStartTime(DateTime startTime)"
  nameWithType: "JobReleaseTaskExecutionInformation.withStartTime(DateTime startTime)"
  summary: "Set if the Task has been restarted or retried, this is the most recent time at which the Task started running."
  parameters:
  - description: "the startTime value to set"
    name: "startTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withStartTime(DateTime startTime)"
  desc: "Set if the Task has been restarted or retried, this is the most recent time at which the Task started running."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withState(com.microsoft.azure.batch.protocol.models.JobReleaseTaskState)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withState(JobReleaseTaskState state)"
  name: "withState(JobReleaseTaskState state)"
  nameWithType: "JobReleaseTaskExecutionInformation.withState(JobReleaseTaskState state)"
  summary: "Set possible values include: 'running', 'completed'."
  parameters:
  - description: "the state value to set"
    name: "state"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskState?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskState&text=JobReleaseTaskState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withState(JobReleaseTaskState state)"
  desc: "Set possible values include: 'running', 'completed'."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withTaskRootDirectory(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withTaskRootDirectory(String taskRootDirectory)"
  name: "withTaskRootDirectory(String taskRootDirectory)"
  nameWithType: "JobReleaseTaskExecutionInformation.withTaskRootDirectory(String taskRootDirectory)"
  summary: "Set the task<wbr>Root<wbr>Directory value."
  parameters:
  - description: "the taskRootDirectory value to set"
    name: "taskRootDirectory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withTaskRootDirectory(String taskRootDirectory)"
  desc: "Set the taskRootDirectory value."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withTaskRootDirectoryUrl(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withTaskRootDirectoryUrl(String taskRootDirectoryUrl)"
  name: "withTaskRootDirectoryUrl(String taskRootDirectoryUrl)"
  nameWithType: "JobReleaseTaskExecutionInformation.withTaskRootDirectoryUrl(String taskRootDirectoryUrl)"
  summary: "Set the task<wbr>Root<wbr>Directory<wbr>Url value."
  parameters:
  - description: "the taskRootDirectoryUrl value to set"
    name: "taskRootDirectoryUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTaskExecutionInformation withTaskRootDirectoryUrl(String taskRootDirectoryUrl)"
  desc: "Set the taskRootDirectoryUrl value."
  returns:
    description: "the JobReleaseTaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Contains information about the execution of a Job Release Task on a Compute Node."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
