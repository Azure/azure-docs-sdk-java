### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*"
fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync"
name: "stopResizeAsync"
nameWithType: "Pools.stopResizeAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId)"
  name: "stopResizeAsync(String poolId)"
  nameWithType: "Pools.stopResizeAsync(String poolId)"
  summary: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> stopResizeAsync(String poolId)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  name: "stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  nameWithType: "Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  summary: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolStopResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions&text=PoolStopResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)"
  name: "stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolStopResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions&text=PoolStopResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  name: "stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  summary: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
