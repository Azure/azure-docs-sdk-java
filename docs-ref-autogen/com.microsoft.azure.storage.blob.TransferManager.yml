### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.blob.TransferManager
  id: TransferManager
  parent: com.microsoft.azure.storage.blob
  children:
  - com.microsoft.azure.storage.blob.TransferManager.BLOB_DEFAULT_DOWNLOAD_BLOCK_SIZE
  - com.microsoft.azure.storage.blob.TransferManager.downloadBlobToFile(AsynchronousFileChannel,BlobURL,BlobRange,TransferManagerDownloadFromBlobOptions)
  - com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob(final AsynchronousFileChannel,final BlockBlobURL,final int,Integer,final TransferManagerUploadToBlockBlobOptions)
  - com.microsoft.azure.storage.blob.TransferManager.uploadFromNonReplayableFlowable(final Flowable<ByteBuffer>,final BlockBlobURL,final int,final int,final TransferManagerUploadToBlockBlobOptions)
  href: com.microsoft.azure.storage.blob.TransferManager.yml
  langs:
  - java
  name: TransferManager
  nameWithType: TransferManager
  fullName: com.microsoft.azure.storage.blob.TransferManager
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/storage/blob/TransferManager.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManager.java
    startLine: 43
  package: com.microsoft.azure.storage.blob
  summary: "<p>This class contains a collection of methods (and structures associated with those methods) which perform higher-level operations. Whereas operations on the URL types guarantee a single REST request and make no assumptions on desired behavior, these methods will often compose several requests to provide a convenient way of performing more complex operations. Further, we will make our own assumptions and optimizations for common cases that may not be ideal for rarer cases. </p>"
  syntax:
    content: public class TransferManager
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.storage.blob.TransferManager.BLOB_DEFAULT_DOWNLOAD_BLOCK_SIZE
  id: BLOB_DEFAULT_DOWNLOAD_BLOCK_SIZE
  parent: com.microsoft.azure.storage.blob.TransferManager
  href: com.microsoft.azure.storage.blob.TransferManager.yml
  langs:
  - java
  name: BLOB_DEFAULT_DOWNLOAD_BLOCK_SIZE
  nameWithType: TransferManager.BLOB_DEFAULT_DOWNLOAD_BLOCK_SIZE
  fullName: com.microsoft.azure.storage.blob.TransferManager.BLOB_DEFAULT_DOWNLOAD_BLOCK_SIZE
  type: Field
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManager.java
    startLine: 48
  package: com.microsoft.azure.storage.blob
  summary: "<p>The default size of a download chunk for download large blobs. </p>"
  syntax:
    content: public static final int BLOB_DEFAULT_DOWNLOAD_BLOCK_SIZE= 4 * Constants.MB
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.blob.TransferManager.downloadBlobToFile(AsynchronousFileChannel,BlobURL,BlobRange,TransferManagerDownloadFromBlobOptions)
  id: downloadBlobToFile(AsynchronousFileChannel,BlobURL,BlobRange,TransferManagerDownloadFromBlobOptions)
  parent: com.microsoft.azure.storage.blob.TransferManager
  href: com.microsoft.azure.storage.blob.TransferManager.yml
  langs:
  - java
  name: downloadBlobToFile(AsynchronousFileChannel file, BlobURL blobURL, BlobRange range, TransferManagerDownloadFromBlobOptions options)
  nameWithType: TransferManager.downloadBlobToFile(AsynchronousFileChannel file, BlobURL blobURL, BlobRange range, TransferManagerDownloadFromBlobOptions options)
  fullName: com.microsoft.azure.storage.blob.TransferManager.downloadBlobToFile(AsynchronousFileChannel file, BlobURL blobURL, BlobRange range, TransferManagerDownloadFromBlobOptions options)
  overload: com.microsoft.azure.storage.blob.TransferManager.downloadBlobToFile*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManager.java
    startLine: 199
  package: com.microsoft.azure.storage.blob
  summary: "<p>Downloads a file directly into a file, splitting the download into chunks and parallelizing as necessary.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=tm_file \"Sample code for TransferManager.downloadBlobToFile\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public static Single<BlobDownloadHeaders> downloadBlobToFile(AsynchronousFileChannel file, BlobURL blobURL, BlobRange range, TransferManagerDownloadFromBlobOptions options)
    parameters:
    - id: file
      type: a39e71f7
      description: <p>The destination file to which the blob will be written. </p>
    - id: blobURL
      type: com.microsoft.azure.storage.blob.BlobURL
      description: <p>The URL to the blob to download. </p>
    - id: range
      type: com.microsoft.azure.storage.blob.BlobRange
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>

        </p>
    - id: options
      type: com.microsoft.azure.storage.blob.TransferManagerDownloadFromBlobOptions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.TransferManagerDownloadFromBlobOptions" data-throw-if-not-resolved="false">TransferManagerDownloadFromBlobOptions</xref>

        </p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobDownloadHeadersa08ddfce
      description: >-
        <p>A<code>Completable 

            </code> that will signal when the download is complete.</p>
- uid: com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob(final AsynchronousFileChannel,final BlockBlobURL,final int,Integer,final TransferManagerUploadToBlockBlobOptions)
  id: uploadFileToBlockBlob(final AsynchronousFileChannel,final BlockBlobURL,final int,Integer,final TransferManagerUploadToBlockBlobOptions)
  parent: com.microsoft.azure.storage.blob.TransferManager
  href: com.microsoft.azure.storage.blob.TransferManager.yml
  langs:
  - java
  name: uploadFileToBlockBlob(final AsynchronousFileChannel file, final BlockBlobURL blockBlobURL, final int blockLength, Integer maxSingleShotSize, final TransferManagerUploadToBlockBlobOptions options)
  nameWithType: TransferManager.uploadFileToBlockBlob(final AsynchronousFileChannel file, final BlockBlobURL blockBlobURL, final int blockLength, Integer maxSingleShotSize, final TransferManagerUploadToBlockBlobOptions options)
  fullName: com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob(final AsynchronousFileChannel file, final BlockBlobURL blockBlobURL, final int blockLength, Integer maxSingleShotSize, final TransferManagerUploadToBlockBlobOptions options)
  overload: com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManager.java
    startLine: 77
  package: com.microsoft.azure.storage.blob
  summary: "<p>Uploads the contents of a file to a block blob in parallel, breaking it into block-size chunks if necessary.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=tm_file \"Sample code for TransferManager.uploadFileToBlockBlob\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax: &o1
    content: public static Single<CommonRestResponse> uploadFileToBlockBlob(final AsynchronousFileChannel file, final BlockBlobURL blockBlobURL, final int blockLength, Integer maxSingleShotSize, final TransferManagerUploadToBlockBlobOptions options)
    parameters:
    - id: file
      type: 097cf259
      description: <p>The file to upload. </p>
    - id: blockBlobURL
      type: 93de0ef9com.microsoft.azure.storage.blob.BlockBlobURL
      description: <p>Points to the blob to which the data should be uploaded. </p>
    - id: blockLength
      type: cd225469
      description: >-
        <p>If the data must be broken up into blocks, this value determines what size those blocks will be. This will affect the total number of service requests made as each REST request uploads exactly one block in full. This value will be ignored if the data can be uploaded in a single put-blob operation. Must be between 1 and <xref uid="com.microsoft.azure.storage.blob.BlockBlobURL.MAX_STAGE_BLOCK_BYTES" data-throw-if-not-resolved="false">BlockBlobURL#MAX_STAGE_BLOCK_BYTES</xref>. Note as well that <code>fileLength/blockLength 

            </code> must be less than or equal to <xref uid="com.microsoft.azure.storage.blob.BlockBlobURL.MAX_BLOCKS" data-throw-if-not-resolved="false">BlockBlobURL#MAX_BLOCKS</xref>. </p>
    - id: maxSingleShotSize
      type: 08effaa0
      description: <p>If the size of the data is less than or equal to this value, it will be uploaded in a single put rather than broken up into chunks. If the data is uploaded in a single shot, the block size will be ignored. Some constraints to consider are that more requests cost more, but several small or mid-sized requests may sometimes perform better. Must be greater than 0. May be null to accept default behavior. </p>
    - id: options
      type: 93de0ef9com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions" data-throw-if-not-resolved="false">TransferManagerUploadToBlockBlobOptions</xref>

        </p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.CommonRestResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.TransferManager.uploadFromNonReplayableFlowable(final Flowable<ByteBuffer>,final BlockBlobURL,final int,final int,final TransferManagerUploadToBlockBlobOptions)
  id: uploadFromNonReplayableFlowable(final Flowable<ByteBuffer>,final BlockBlobURL,final int,final int,final TransferManagerUploadToBlockBlobOptions)
  parent: com.microsoft.azure.storage.blob.TransferManager
  href: com.microsoft.azure.storage.blob.TransferManager.yml
  langs:
  - java
  name: uploadFromNonReplayableFlowable(final Flowable<ByteBuffer> source, final BlockBlobURL blockBlobURL, final int blockSize, final int numBuffers, final TransferManagerUploadToBlockBlobOptions options)
  nameWithType: TransferManager.uploadFromNonReplayableFlowable(final Flowable<ByteBuffer> source, final BlockBlobURL blockBlobURL, final int blockSize, final int numBuffers, final TransferManagerUploadToBlockBlobOptions options)
  fullName: com.microsoft.azure.storage.blob.TransferManager.uploadFromNonReplayableFlowable(final Flowable<ByteBuffer> source, final BlockBlobURL blockBlobURL, final int blockSize, final int numBuffers, final TransferManagerUploadToBlockBlobOptions options)
  overload: com.microsoft.azure.storage.blob.TransferManager.uploadFromNonReplayableFlowable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManager.java
    startLine: 412
  package: com.microsoft.azure.storage.blob
  summary: "<p>Uploads the contents of an arbitrary<code>Flowable \r\n    </code> to a block blob. This Flowable need not be replayable and therefore it may have as its source a network stream or any other data for which the replay behavior is unknown (non-replayable meaning the Flowable may not return the exact same data on each subscription).</p>\r\n<p>To eliminate the need for replayability on the source, the client must perform some buffering in order to ensure the actual data passed to the network is replayable. This is important in order to support retries, which are crucial for reliable data transfer. Typically, the greater the number of buffers used, the greater the possible parallelism. Larger buffers means we will have to stage fewer blocks. The tradeoffs between these values are context-dependent, so some experimentation may be required to optimize inputs for a given scenario.</p>\r\n<p>Note that buffering must be strictly sequential. Only the upload portion of this operation may be parallelized; the reads cannot be. Therefore, this method is not as optimal as <xref uid=\"com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob(final AsynchronousFileChannel,final BlockBlobURL,final int,Integer,final TransferManagerUploadToBlockBlobOptions)\" data-throw-if-not-resolved=\"false\">uploadFileToBlockBlob(AsynchronousFileChannel, BlockBlobURL, int, Integer, TransferManagerUploadToBlockBlobOptions)</xref> and if the source is known to be a file, that method should be preferred.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=tm_nrf \"Sample code for TransferManager.uploadFromNonReplayableFlowable\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public static Single<BlockBlobCommitBlockListResponse> uploadFromNonReplayableFlowable(final Flowable<ByteBuffer> source, final BlockBlobURL blockBlobURL, final int blockSize, final int numBuffers, final TransferManagerUploadToBlockBlobOptions options)
    parameters:
    - id: source
      type: 84b9debc
      description: <p>Contains the data to upload. Unlike other upload methods in this library, this method does not require that the Flowable be replayable. </p>
    - id: blockBlobURL
      type: 93de0ef9com.microsoft.azure.storage.blob.BlockBlobURL
      description: <p>Points to the blob to which the data should be uploaded. </p>
    - id: blockSize
      type: cd225469
      description: <p>The size of each block that will be staged. This value also determines the size that each buffer used by this method will be and determines the number of requests that need to be made. The amount of memory consumed by this method may be up to blockSize * numBuffers. If block size is large, this method will make fewer network calls, but each individual call will send more data and will therefore take longer. </p>
    - id: numBuffers
      type: cd225469
      description: <p>The maximum number of buffers this method should allocate. Must be at least two. Generally this value should have some relationship to the value for parallelism passed via the options. If the number of available buffers is smaller than the level of parallelism, then this method will not be able to make full use of the available parallelism. It is unlikely that the value need be more than two times the level of parallelism as such a value means that (assuming buffering is fast enough) there are enough available buffers to have both one occupied for each worker and one ready for all workers should they all complete the current request at approximately the same time. The amount of memory consumed by this method may be up to blockSize * numBuffers. </p>
    - id: options
      type: 93de0ef9com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions" data-throw-if-not-resolved="false">TransferManagerUploadToBlockBlobOptions</xref>

        </p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponsea08ddfce
      description: <p>Emits the successful response.</p>
references:
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: 097cf259
  spec.java:
  - name: final AsynchronousFileChannel
    fullName: final AsynchronousFileChannel
- uid: 93de0ef9com.microsoft.azure.storage.blob.BlockBlobURL
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.blob.BlockBlobURL
    name: BlockBlobURL
    fullName: com.microsoft.azure.storage.blob.BlockBlobURL
    href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 93de0ef9com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
    name: TransferManagerUploadToBlockBlobOptions
    fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
    href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
- uid: 449e6419com.microsoft.azure.storage.blob.CommonRestResponsea08ddfce
  spec.java:
  - name: Single<
    fullName: Single<
  - uid: com.microsoft.azure.storage.blob.CommonRestResponse
    name: CommonRestResponse
    fullName: com.microsoft.azure.storage.blob.CommonRestResponse
    href: com.microsoft.azure.storage.blob.CommonRestResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob*
  name: uploadFileToBlockBlob
  nameWithType: TransferManager.uploadFileToBlockBlob
  fullName: com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob
  package: com.microsoft.azure.storage.blob
- uid: a39e71f7
  spec.java:
  - name: AsynchronousFileChannel
    fullName: AsynchronousFileChannel
- uid: 449e6419com.microsoft.azure.storage.blob.models.BlobDownloadHeadersa08ddfce
  spec.java:
  - name: Single<
    fullName: Single<
  - uid: com.microsoft.azure.storage.blob.models.BlobDownloadHeaders
    name: BlobDownloadHeaders
    fullName: com.microsoft.azure.storage.blob.models.BlobDownloadHeaders
    href: com.microsoft.azure.storage.blob.models.BlobDownloadHeaders.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.blob.TransferManager.downloadBlobToFile*
  name: downloadBlobToFile
  nameWithType: TransferManager.downloadBlobToFile
  fullName: com.microsoft.azure.storage.blob.TransferManager.downloadBlobToFile
  package: com.microsoft.azure.storage.blob
- uid: 84b9debc
  spec.java:
  - name: final Flowable<ByteBuffer>
    fullName: final Flowable<ByteBuffer>
- uid: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponsea08ddfce
  spec.java:
  - name: Single<
    fullName: Single<
  - uid: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse
    name: BlockBlobCommitBlockListResponse
    fullName: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse
    href: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.blob.TransferManager.uploadFromNonReplayableFlowable*
  name: uploadFromNonReplayableFlowable
  nameWithType: TransferManager.uploadFromNonReplayableFlowable
  fullName: com.microsoft.azure.storage.blob.TransferManager.uploadFromNonReplayableFlowable
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob.CommonRestResponse
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.CommonRestResponse.yml
  name: CommonRestResponse
  nameWithType: CommonRestResponse
  fullName: com.microsoft.azure.storage.blob.CommonRestResponse
  type: Class
  summary: "<p>A generic wrapper for any type of blob REST API response. Used and returned by methods in the <xref uid=\"com.microsoft.azure.storage.blob.TransferManager\" data-throw-if-not-resolved=\"false\">TransferManager</xref> class. The methods there return this type because they represent composite operations which may conclude with any of several possible REST calls depending on the data provided. </p>"
  syntax:
    content: public class CommonRestResponse
- uid: com.microsoft.azure.storage.blob.BlockBlobURL
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  name: BlockBlobURL
  nameWithType: BlockBlobURL
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL
  type: Class
  summary: "<p>Represents a URL to a block blob. It may be obtained by direct construction or via the create method on a <xref uid=\"com.microsoft.azure.storage.blob.ContainerURL\" data-throw-if-not-resolved=\"false\">ContainerURL</xref> object. This class does not hold any state about a particular blob but is instead a convenient way of sending off appropriate requests to the resource on the service. Please refer to the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs&amp;ndash;append-blobs&amp;ndash;and-page-blobs\">Azure Docs</a> for more information on block blobs. </p>"
  syntax:
    content: public class BlockBlobURL extends BlobURL
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  name: TransferManagerUploadToBlockBlobOptions
  nameWithType: TransferManagerUploadToBlockBlobOptions
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  type: Class
  summary: "<p>Configures the parallel upload behavior for methods on the <xref uid=\"com.microsoft.azure.storage.blob.TransferManager\" data-throw-if-not-resolved=\"false\">TransferManager</xref>. </p>"
  syntax:
    content: public class TransferManagerUploadToBlockBlobOptions
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_STAGE_BLOCK_BYTES
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  name: MAX_STAGE_BLOCK_BYTES
  nameWithType: BlockBlobURL.MAX_STAGE_BLOCK_BYTES
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_STAGE_BLOCK_BYTES
  type: Field
  summary: "<p>Indicates the maximum number of bytes that can be sent in a call to stageBlock. </p>"
  syntax:
    content: public static final int MAX_STAGE_BLOCK_BYTES= 100 * Constants.MB
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_BLOCKS
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  name: MAX_BLOCKS
  nameWithType: BlockBlobURL.MAX_BLOCKS
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_BLOCKS
  type: Field
  summary: "<p>Indicates the maximum number of blocks allowed in a block blob. </p>"
  syntax:
    content: public static final int MAX_BLOCKS= 50000
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.blob.models.BlobDownloadHeaders
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlobDownloadHeaders.yml
  name: BlobDownloadHeaders
  nameWithType: BlobDownloadHeaders
  fullName: com.microsoft.azure.storage.blob.models.BlobDownloadHeaders
  type: Class
  summary: "<p>Defines headers for Download operation. </p>"
  syntax:
    content: public class BlobDownloadHeaders
- uid: com.microsoft.azure.storage.blob.BlobURL
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: BlobURL
  nameWithType: BlobURL
  fullName: com.microsoft.azure.storage.blob.BlobURL
  type: Class
  summary: "<p>Represents a URL to a blob of any type: block, append, or page. It may be obtained by direct construction or via the create method on a <xref uid=\"com.microsoft.azure.storage.blob.ContainerURL\" data-throw-if-not-resolved=\"false\">ContainerURL</xref> object. This class does not hold any state about a particular blob but is instead a convenient way of sending off appropriate requests to the resource on the service. Please refer to the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs&amp;ndash;append-blobs&amp;ndash;and-page-blobs\">Azure Docs</a> for more information. </p>"
  syntax:
    content: public class BlobURL extends StorageURL
- uid: com.microsoft.azure.storage.blob.BlobRange
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlobRange.yml
  name: BlobRange
  nameWithType: BlobRange
  fullName: com.microsoft.azure.storage.blob.BlobRange
  type: Class
  summary: "<p>This is a representation of a range of bytes on a blob, typically used during a download operation. This type is immutable to ensure thread-safety of requests, so changing the values for a different operation requires construction of a new object. Passing null as a BlobRange value will default to the entire range of the blob. </p>"
  syntax:
    content: public class BlobRange
- uid: com.microsoft.azure.storage.blob.TransferManagerDownloadFromBlobOptions
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.TransferManagerDownloadFromBlobOptions.yml
  name: TransferManagerDownloadFromBlobOptions
  nameWithType: TransferManagerDownloadFromBlobOptions
  fullName: com.microsoft.azure.storage.blob.TransferManagerDownloadFromBlobOptions
  type: Class
  summary: "<p>Configures the parallel download behavior for methods on the <xref uid=\"com.microsoft.azure.storage.blob.TransferManager\" data-throw-if-not-resolved=\"false\">TransferManager</xref>. </p>"
  syntax:
    content: public class TransferManagerDownloadFromBlobOptions
- uid: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse.yml
  name: BlockBlobCommitBlockListResponse
  nameWithType: BlockBlobCommitBlockListResponse
  fullName: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse
  type: Class
  summary: "<p>Contains all response data for the commitBlockList operation. </p>"
  syntax:
    content: public class BlockBlobCommitBlockListResponse
- uid: com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob(final AsynchronousFileChannel,final BlockBlobURL,final int,Integer,final TransferManagerUploadToBlockBlobOptions)
  parent: com.microsoft.azure.storage.blob.TransferManager
  href: com.microsoft.azure.storage.blob.TransferManager.yml
  name: uploadFileToBlockBlob(final AsynchronousFileChannel file, final BlockBlobURL blockBlobURL, final int blockLength, Integer maxSingleShotSize, final TransferManagerUploadToBlockBlobOptions options)
  nameWithType: TransferManager.uploadFileToBlockBlob(final AsynchronousFileChannel file, final BlockBlobURL blockBlobURL, final int blockLength, Integer maxSingleShotSize, final TransferManagerUploadToBlockBlobOptions options)
  fullName: com.microsoft.azure.storage.blob.TransferManager.uploadFileToBlockBlob(final AsynchronousFileChannel file, final BlockBlobURL blockBlobURL, final int blockLength, Integer maxSingleShotSize, final TransferManagerUploadToBlockBlobOptions options)
  type: Method
  summary: "<p>Uploads the contents of a file to a block blob in parallel, breaking it into block-size chunks if necessary.</p>\r\n<p></p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.blob.BlobAccessConditions
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlobAccessConditions.yml
  name: BlobAccessConditions
  nameWithType: BlobAccessConditions
  fullName: com.microsoft.azure.storage.blob.BlobAccessConditions
  type: Class
  summary: "<p>This class contains values which will restrict the successful operation of a variety of requests to the conditions present. These conditions are entirely optional. The entire object or any of its properties may be set to null when passed to a method to indicate that those conditions are not desired. Please refer to the type of each field for more information on those particular access conditions. </p>"
  syntax:
    content: public class BlobAccessConditions
- uid: com.microsoft.azure.storage.blob.DownloadResponse
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.DownloadResponse.yml
  name: DownloadResponse
  nameWithType: DownloadResponse
  fullName: com.microsoft.azure.storage.blob.DownloadResponse
  type: Class
  summary: "<p>\r\n  <code>DownloadResponse \r\n    </code> wraps the protocol-layer response from <xref uid=\"\" data-throw-if-not-resolved=\"false\">BlobAccessConditions, boolean, com.microsoft.rest.v2.Context)</xref> to automatically retry failed reads from the body as appropriate. If the download is interrupted, the<code>DownloadResponse \r\n    </code> will make a request to resume the download from where it left off, allowing the user to consume the data as one continuous stream, for any interruptions are hidden. The retry behavior is defined by the options passed to the <xref uid=\"com.microsoft.azure.storage.blob.DownloadResponse.body(ReliableDownloadOptions)\" data-throw-if-not-resolved=\"false\">body(ReliableDownloadOptions)</xref>. The download will also lock on the blob's etag to ensure consistency. </p>\r\n<p>Note that the retries performed as a part of this reader are composed with those of any retries in an <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref> used in conjunction with this reader. That is, if this object issues a request to resume a download, an underlying pipeline may issue several retries as a part of that request. Furthermore, this reader only retries on network errors; timeouts and unexpected status codes are not retried. Therefore, the behavior of this reader is entirely independent of and in no way coupled to an <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref>'s retry mechanism. </p>"
  syntax:
    content: public class DownloadResponse
