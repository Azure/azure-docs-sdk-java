### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client.IPublicClientApplication
  id: IPublicClientApplication
  parent: com.microsoft.identity.client
  children:
  - com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  - com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  - com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  - com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  langs:
  - java
  name: IPublicClientApplication
  nameWithType: IPublicClientApplication
  fullName: com.microsoft.identity.client.IPublicClientApplication
  type: Interface
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
    startLine: 35
  package: com.microsoft.identity.client
  syntax:
    content: public interface IPublicClientApplication
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  id: acquireToken(@NonNull final AcquireTokenParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  langs:
  - java
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  overload: com.microsoft.identity.client.IPublicClientApplication.acquireToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
    startLine: 65
  package: com.microsoft.identity.client
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>. </p>\r\n<p>Convey parameters via the AquireTokenParameters object</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
    parameters:
    - id: acquireTokenParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  id: acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  langs:
  - java
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: IPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  overload: com.microsoft.identity.client.IPublicClientApplication.acquireToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
    startLine: 52
  package: com.microsoft.identity.client
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  id: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  overload: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
    startLine: 85
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  id: acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  overload: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
    startLine: 75
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  id: acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  nameWithType: IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  overload: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
    startLine: 93
  package: com.microsoft.identity.client
  summary: "<p>Perform the Device Code Flow (DCF) protocol to allow a device without input capability to authenticate and get a new access token. Currently, flow is only supported in local MSAL. No Broker support. </p>"
  syntax:
    content: public void acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
    parameters:
    - id: scopes
      type: 045b2b2f
      description: <p>the desired access scopes </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
      description: <p>callback object used to communicate with the API throughout the protocol </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  id: getConfiguration()
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  langs:
  - java
  name: getConfiguration()
  nameWithType: IPublicClientApplication.getConfiguration()
  fullName: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  overload: com.microsoft.identity.client.IPublicClientApplication.getConfiguration*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
    startLine: 100
  package: com.microsoft.identity.client
  summary: "<p>Returns the PublicClientConfiguration for this instance of PublicClientApplication.</p>\r\n<p></p>"
  syntax:
    content: public PublicClientApplicationConfiguration getConfiguration()
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
      description: <p>The PublicClientApplicationConfiguration. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  id: isSharedDevice()
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  langs:
  - java
  name: isSharedDevice()
  nameWithType: IPublicClientApplication.isSharedDevice()
  fullName: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  overload: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java
    startLine: 108
  package: com.microsoft.identity.client
  summary: "<p>Returns whether the application is being run on a device that is marked as a shared. Only SingleAccountPublicClientApplications may be used on shared devices</p>\r\n<p></p>"
  syntax:
    content: public boolean isSharedDevice()
    return:
      type: 4fc6e284
references:
- uid: "97576948"
  spec.java:
  - name: '@NonNull final Activity'
    fullName: '@NonNull final Activity'
- uid: e5895f1f
  spec.java:
  - name: '@NonNull final String []'
    fullName: '@NonNull final String []'
- uid: d6b37550com.microsoft.identity.client.AuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AuthenticationCallback
    name: AuthenticationCallback
    fullName: com.microsoft.identity.client.AuthenticationCallback
    href: com.microsoft.identity.client.AuthenticationCallback.yml
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken*
  name: acquireToken
  nameWithType: IPublicClientApplication.acquireToken
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken
  package: com.microsoft.identity.client
- uid: d6b37550com.microsoft.identity.client.AcquireTokenParameters
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AcquireTokenParameters
    name: AcquireTokenParameters
    fullName: com.microsoft.identity.client.AcquireTokenParameters
    href: com.microsoft.identity.client.AcquireTokenParameters.yml
- uid: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AcquireTokenSilentParameters
    name: AcquireTokenSilentParameters
    fullName: com.microsoft.identity.client.AcquireTokenSilentParameters
    href: com.microsoft.identity.client.AcquireTokenSilentParameters.yml
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync*
  name: acquireTokenSilentAsync
  nameWithType: IPublicClientApplication.acquireTokenSilentAsync
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent*
  name: acquireTokenSilent
  nameWithType: IPublicClientApplication.acquireTokenSilent
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent
  package: com.microsoft.identity.client
- uid: 045b2b2f
  spec.java:
  - name: '@NonNull String []'
    fullName: '@NonNull String []'
- uid: d6b37550com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
    name: IPublicClientApplication.DeviceCodeFlowCallback
    fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
    href: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.yml
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode*
  name: acquireTokenWithDeviceCode
  nameWithType: IPublicClientApplication.acquireTokenWithDeviceCode
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.IPublicClientApplication.getConfiguration*
  name: getConfiguration
  nameWithType: IPublicClientApplication.getConfiguration
  fullName: com.microsoft.identity.client.IPublicClientApplication.getConfiguration
  package: com.microsoft.identity.client
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice*
  name: isSharedDevice
  nameWithType: IPublicClientApplication.isSharedDevice
  fullName: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: IMultipleAccountPublicClientApplication
  nameWithType: IMultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  type: Interface
  summary: "<p>An interface that contains list of operations that are available when MSAL is in 'multiple account' mode.<ul><li><p>This mode allows an application to make API calls with more than one accounts.</p></li><li><p>The application will only be able to retrieve/remove accounts that have been used to acquire token interactively in this application</p></li><li><p>API calls' scope is limited to 'the calling app'. (i.e. removeAccount() will not remove credentials of the same account in other apps). </p></li></ul></p>\r\n<p>This is MSAL's default mode. </p>"
  syntax:
    content: public interface IMultipleAccountPublicClientApplication extends IPublicClientApplication
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  name: ISingleAccountPublicClientApplication
  nameWithType: ISingleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  type: Interface
  summary: "<p>An interface that contains list of operations that are available when MSAL is in 'single account' mode.<ul><li><p>In this mode, one account can be signed-in to the app.</p></li><li><p>If the user wants to acquire a token for another account, the previous account must be signed out first. </p></li></ul></p>\r\n<p>When the device is registered as 'shared', this will be the only available PublicClientApplication the app can obtain. The calling app has to support ISingleAccountPublicClientApplication if it is planning to support shared device mode. </p>\r\n<p>In the shared device mode,<ul><li><p>'Sign-in' means that the user will be signed in to the device - not just this app.</p></li><li><p>Once an account is 'signed-in', every MSAL app on the device that support shared device mode will be able to retrieve this account, and use them to silently perform API calls.</p></li><li><p>'Sign-out' means that user will be signed out from the device - every MSAL apps and the default browser. </p></li></ul></p>"
  syntax:
    content: public interface ISingleAccountPublicClientApplication
- uid: com.microsoft.identity.client.PublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: PublicClientApplication
  nameWithType: PublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication
  type: Class
  summary: "<p>This is the entry point for developer to create public native applications and make API calls to acquire tokens. </p>\r\n<p>\r\n  <b>Client ID:</b> The clientID of your application is a unique identifier which can be obtained from the app registration portal.</p>\r\n<p>\r\n  <b>AuthorityMetadata:</b> A URL indicating a directory that MSAL can use to obtain tokens. In Azure AD it is of the form <a href=\"https://\">https://</a>&lt;[nstance]/[tenant], where [instance] is the directory host (e.g. <a href=\"https://login.microsoftonline.com\">https://login.microsoftonline.com</a>) and [tenant] is an identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory) </p>\r\n<p>For B2C, it is of the form <a href=\"https://\">https://</a>[instance]/tfp/[tenant]/[policy] where instance and tenant are same as Azure AD, and [policy] is a string like signup</p>\r\n<p>MSAL <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> provides three constructors allowing the client id to be set either via AndroidManifest.xml metadata or using constructor parameters. Similarly, if developer chooses not to use the default authority <a href=\"https://login.microsoftonline.com,\">https://login.microsoftonline.com,</a> an alternate can also be configured using the manifest, constructor parameters, or in acquire token calls. </p>\r\n<p>Redirect is auto-generated in the library in the format of msal&lt;client-id&gt;://auth, and it cannot be overridden. </p>\r\n<p>Developer <b>MUST</b> have <xref uid=\"com.microsoft.identity.client.BrowserTabActivity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BrowserTabActivity\"></xref> declared in their manifest, which must have the correct intent-filter configured. If the wrong scheme and host is provided, the sdk will fail the <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> creation. </p>\r\n<p>Expected format will be: <pre>\r\n&lt;activity\r\n    android:name=\"com.microsoft.identity.client.BrowserTabActivity\"&gt;\r\n    &lt;intent-filter&gt;\r\n        &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\r\n        &lt;data android:scheme=\"msal&amp;lt;AppClientId&amp;gt;\"\r\n             android:host=\"auth\" /&gt;\r\n    &lt;/intent-filter&gt;\r\n&lt;/activity&gt;\r\n</pre></p>\r\n<p>Other Terminology:</p>\r\n<p>\r\n  <b>Scopes:</b>Permissions that the developers wants included in the access token received . Not all scopes are guaranteed to be included in the access token returned. </p>\r\n<p>\r\n  <b>Login Hint:</b> Usually an email, to pass to the service at the beginning of the interactive authentication flow. </p>\r\n<p>\r\n  <b>Extra Scopes to Consent:</b> Permissions you want the user to consent to in the same authentication flow, but won't be included in the returned access token. </p>"
  syntax:
    content: public class PublicClientApplication
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: SingleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: PublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.AuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: AuthenticationCallback
  nameWithType: AuthenticationCallback
  fullName: com.microsoft.identity.client.AuthenticationCallback
  type: Interface
  summary: "<p>Callback passed with token acquisition. <xref uid=\"com.microsoft.identity.client.IAuthenticationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAuthenticationResult\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalException\"></xref> will be returned back via callback. </p>"
  syntax:
    content: public interface AuthenticationCallback extends SilentAuthenticationCallback
- uid: com.microsoft.identity.client.Prompt
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.Prompt.yml
  name: Prompt
  nameWithType: Prompt
  fullName: com.microsoft.identity.client.Prompt
  type: Enum
  summary: "<p>The UI options that developer can pass during interactive token acquisition requests. </p>"
  syntax:
    content: public enum Prompt
- uid: com.microsoft.identity.client.Prompt.SELECT_ACCOUNT
  parent: com.microsoft.identity.client.Prompt
  href: com.microsoft.identity.client.Prompt.yml
  name: SELECT_ACCOUNT
  nameWithType: Prompt.SELECT_ACCOUNT
  fullName: com.microsoft.identity.client.Prompt.SELECT_ACCOUNT
  type: Field
  summary: "<p>acquireToken will send prompt=select_account to the authorize endpoint. Shows a list of users from which can be selected for authentication. </p>"
  syntax:
    content: public SELECT_ACCOUNT
- uid: com.microsoft.identity.client.AuthenticationCallback.onCancel()
  parent: com.microsoft.identity.client.AuthenticationCallback
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: onCancel()
  nameWithType: AuthenticationCallback.onCancel()
  fullName: com.microsoft.identity.client.AuthenticationCallback.onCancel()
  type: Method
  summary: "<p>Will be called if user cancels the flow. </p>"
  syntax:
    content: public void onCancel()
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onSuccess(final IAuthenticationResult authenticationResult)
  nameWithType: SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  type: Method
  summary: "<p>Authentication finishes successfully.</p>\r\n<p></p>"
  syntax:
    content: public void onSuccess(final IAuthenticationResult authenticationResult)
    parameters:
    - id: authenticationResult
      type: 93de0ef9com.microsoft.identity.client.IAuthenticationResult
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="IAuthenticationResult"></xref> that contains the success response. </p>
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onError(final MsalException exception)
  nameWithType: SilentAuthenticationCallback.onError(final MsalException exception)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException exception)
  type: Method
  summary: "<p>Error occurs during the authentication.</p>\r\n<p></p>"
  syntax:
    content: public void onError(final MsalException exception)
    parameters:
    - id: exception
      type: 93de0ef9com.microsoft.identity.client.exception.MsalException
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalException"></xref> contains the error code, error message and cause if applicable. The exception returned in the callback could be <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalClientException"></xref>, <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalServiceException"></xref> or <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalUiRequiredException"></xref>. </p>
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: SingleAccountPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>. </p>\r\n<p>Convey parameters via the AquireTokenParameters object</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
    parameters:
    - id: acquireTokenParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>. </p>\r\n<p>Convey parameters via the AquireTokenParameters object</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
    parameters:
    - id: acquireTokenParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.AcquireTokenParameters
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AcquireTokenParameters.yml
  name: AcquireTokenParameters
  nameWithType: AcquireTokenParameters
  fullName: com.microsoft.identity.client.AcquireTokenParameters
  type: Class
  summary: "<p>Encapsulates the parameters passed to the acquireToken methods of PublicClientApplication </p>"
  syntax:
    content: public class AcquireTokenParameters extends TokenParameters
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: SingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.AcquireTokenSilentParameters
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AcquireTokenSilentParameters.yml
  name: AcquireTokenSilentParameters
  nameWithType: AcquireTokenSilentParameters
  fullName: com.microsoft.identity.client.AcquireTokenSilentParameters
  type: Class
  syntax:
    content: public class AcquireTokenSilentParameters extends TokenParameters
- uid: com.microsoft.identity.client.IAuthenticationResult
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAuthenticationResult.yml
  name: IAuthenticationResult
  nameWithType: IAuthenticationResult
  fullName: com.microsoft.identity.client.IAuthenticationResult
  type: Interface
  syntax:
    content: public interface IAuthenticationResult
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: PublicClientApplication.acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.exception.MsalException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalException.yml
  name: MsalException
  nameWithType: MsalException
  fullName: com.microsoft.identity.client.exception.MsalException
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.identity.client.exception.MsalException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalException\"></xref> thrown or sent back via callback, representing the detailed exception thrown by the sdk. It will contain the error code, error description (could be null) or throwable (could be null). </p>"
  syntax:
    content: public class MsalException
- uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.yml
  name: IPublicClientApplication.DeviceCodeFlowCallback
  nameWithType: IPublicClientApplication.DeviceCodeFlowCallback
  fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
  type: Interface
  summary: "<p>Callback object used in Device Code Flow. This callback provides the following methods for communicating with the protocol. 1). Receiving authentication information (user_code, verification_uri, and instruction message) via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceCodeFlowCallback#onUserCodeReceived(String, String, String)\"></xref>. 2). Receiving a successful authentication result containing a fresh access token via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceCodeFlowCallback#onTokenReceived(AuthenticationResult)\"></xref>. 3). Receiving an exception detailing what went wrong in the protocol via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceCodeFlowCallback#onError(MsalException)\"></xref>.</p>\r\n<p>Refer to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#acquireTokenWithDeviceCode(String[], DeviceCodeFlowCallback)\"></xref>. </p>"
  syntax:
    content: public interface DeviceCodeFlowCallback
- uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
  name: PublicClientApplicationConfiguration
  nameWithType: PublicClientApplicationConfiguration
  fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
  type: Class
  syntax:
    content: public class PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.PublicClientApplication.getConfiguration()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: getConfiguration()
  nameWithType: PublicClientApplication.getConfiguration()
  fullName: com.microsoft.identity.client.PublicClientApplication.getConfiguration()
  type: Method
  summary: "<p>Returns the PublicClientConfiguration for this instance of PublicClientApplication.</p>\r\n<p></p>"
  syntax:
    content: public PublicClientApplicationConfiguration getConfiguration()
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
      description: <p>The PublicClientApplicationConfiguration. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: isSharedDevice()
  nameWithType: PublicClientApplication.isSharedDevice()
  fullName: com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  type: Method
  summary: "<p>Returns whether the application is being run on a device that is marked as a shared. Only SingleAccountPublicClientApplications may be used on shared devices</p>\r\n<p></p>"
  syntax:
    content: public boolean isSharedDevice()
    return:
      type: 4fc6e284
