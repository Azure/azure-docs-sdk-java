### YamlMime:JavaType
uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder"
fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder"
name: "ConfidentialLedgerCertificateClientBuilder"
nameWithType: "ConfidentialLedgerCertificateClientBuilder"
summary: "A builder for creating a new instance of the Confidential<wbr>Ledger<wbr>Certificate<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ConfidentialLedgerCertificateClientBuilder implements HttpTrait<ConfidentialLedgerCertificateClientBuilder>, ConfigurationTrait<ConfidentialLedgerCertificateClientBuilder>, TokenCredentialTrait<ConfidentialLedgerCertificateClientBuilder>"
constructors:
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.ConfidentialLedgerCertificateClientBuilder()"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.ConfidentialLedgerCertificateClientBuilder()"
  name: "ConfidentialLedgerCertificateClientBuilder()"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.ConfidentialLedgerCertificateClientBuilder()"
  summary: "Create an instance of the Confidential<wbr>Ledger<wbr>Certificate<wbr>Client<wbr>Builder."
  syntax: "public ConfidentialLedgerCertificateClientBuilder()"
  desc: "Create an instance of the ConfidentialLedgerCertificateClientBuilder."
methods:
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.addPolicy(HttpPipelinePolicy customPolicy)"
  name: "addPolicy(HttpPipelinePolicy customPolicy)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.addPolicy(HttpPipelinePolicy customPolicy)"
  summary: "."
  parameters:
  - name: "customPolicy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder addPolicy(HttpPipelinePolicy customPolicy)"
  desc: "."
  returns:
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.buildAsyncClient()"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.buildAsyncClient()"
  summary: "Builds an instance of Confidential<wbr>Ledger<wbr>Certificate<wbr>Async<wbr>Client class."
  syntax: "public ConfidentialLedgerCertificateAsyncClient buildAsyncClient()"
  desc: "Builds an instance of ConfidentialLedgerCertificateAsyncClient class."
  returns:
    description: "an instance of ConfidentialLedgerCertificateAsyncClient."
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateAsyncClient?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateAsyncClient&text=ConfidentialLedgerCertificateAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.buildClient()"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.buildClient()"
  summary: "Builds an instance of Confidential<wbr>Ledger<wbr>Certificate<wbr>Client class."
  syntax: "public ConfidentialLedgerCertificateClient buildClient()"
  desc: "Builds an instance of ConfidentialLedgerCertificateClient class."
  returns:
    description: "an instance of ConfidentialLedgerCertificateClient."
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClient?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClient&text=ConfidentialLedgerCertificateClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.certificateEndpoint(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.certificateEndpoint(String certificateEndpoint)"
  name: "certificateEndpoint(String certificateEndpoint)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.certificateEndpoint(String certificateEndpoint)"
  summary: "Sets The certificate endpoint (or \"Identity Service Endpoint\" in the Azure portal), for example https://identity.<wbr>confidential-ledger.<wbr>core.<wbr>azure.<wbr>com."
  parameters:
  - description: "the certificateEndpoint value."
    name: "certificateEndpoint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder certificateEndpoint(String certificateEndpoint)"
  desc: "Sets The certificate endpoint (or \"Identity Service Endpoint\" in the Azure portal), for example https://identity.confidential-ledger.core.azure.com."
  returns:
    description: "the ConfidentialLedgerCertificateClientBuilder."
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.clientOptions(ClientOptions clientOptions)"
  name: "clientOptions(ClientOptions clientOptions)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.clientOptions(ClientOptions clientOptions)"
  summary: "."
  parameters:
  - name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder clientOptions(ClientOptions clientOptions)"
  desc: "."
  returns:
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.configuration(Configuration configuration)"
  summary: "."
  parameters:
  - name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder configuration(Configuration configuration)"
  desc: "."
  returns:
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.credential(TokenCredential tokenCredential)"
  name: "credential(TokenCredential tokenCredential)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.credential(TokenCredential tokenCredential)"
  summary: "."
  parameters:
  - name: "tokenCredential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder credential(TokenCredential tokenCredential)"
  desc: "."
  returns:
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.httpClient(HttpClient httpClient)"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.httpClient(HttpClient httpClient)"
  summary: "."
  parameters:
  - name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder httpClient(HttpClient httpClient)"
  desc: "."
  returns:
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.httpLogOptions(HttpLogOptions httpLogOptions)"
  name: "httpLogOptions(HttpLogOptions httpLogOptions)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.httpLogOptions(HttpLogOptions httpLogOptions)"
  summary: "."
  parameters:
  - name: "httpLogOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder httpLogOptions(HttpLogOptions httpLogOptions)"
  desc: "."
  returns:
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.pipeline(HttpPipeline pipeline)"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.pipeline(HttpPipeline pipeline)"
  summary: "."
  parameters:
  - name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder pipeline(HttpPipeline pipeline)"
  desc: "."
  returns:
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.retryOptions(RetryOptions retryOptions)"
  name: "retryOptions(RetryOptions retryOptions)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.retryOptions(RetryOptions retryOptions)"
  summary: "."
  parameters:
  - name: "retryOptions"
    type: "<xref href=\"com.azure.core.http.policy.RetryOptions?alt=com.azure.core.http.policy.RetryOptions&text=RetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder retryOptions(RetryOptions retryOptions)"
  desc: "."
  returns:
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  name: "retryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  summary: "Sets The retry policy that will attempt to retry failed requests, if applicable."
  parameters:
  - description: "the retryPolicy value."
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.http.policy.RetryPolicy?alt=com.azure.core.http.policy.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder retryPolicy(RetryPolicy retryPolicy)"
  desc: "Sets The retry policy that will attempt to retry failed requests, if applicable."
  returns:
    description: "the ConfidentialLedgerCertificateClientBuilder."
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.serviceVersion(com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateServiceVersion)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder.serviceVersion(ConfidentialLedgerCertificateServiceVersion serviceVersion)"
  name: "serviceVersion(ConfidentialLedgerCertificateServiceVersion serviceVersion)"
  nameWithType: "ConfidentialLedgerCertificateClientBuilder.serviceVersion(ConfidentialLedgerCertificateServiceVersion serviceVersion)"
  summary: "Sets Service version."
  parameters:
  - description: "the serviceVersion value."
    name: "serviceVersion"
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateServiceVersion?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateServiceVersion&text=ConfidentialLedgerCertificateServiceVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerCertificateClientBuilder serviceVersion(ConfidentialLedgerCertificateServiceVersion serviceVersion)"
  desc: "Sets Service version."
  returns:
    description: "the ConfidentialLedgerCertificateClientBuilder."
    type: "<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A builder for creating a new instance of the ConfidentialLedgerCertificateClient type."
implements:
- "<xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.HttpTrait?alt=com.azure.core.client.traits.HttpTrait&text=HttpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder?alt=com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateClientBuilder&text=ConfidentialLedgerCertificateClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.security.confidentialledger.certificate"
artifact: com.azure:azure-security-confidentialledger:1.0.1
