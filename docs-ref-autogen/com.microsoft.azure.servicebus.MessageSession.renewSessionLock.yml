### YamlMime:JavaMember
nameWithType: MessageSession.renewSessionLock
type: method
members:
- fullName: com.microsoft.azure.servicebus.MessageSession.renewSessionLock()
  name: renewSessionLock()
  nameWithType: MessageSession.renewSessionLock()
  overridden: com.microsoft.azure.servicebus.IMessageSession.renewSessionLock()
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the renew failed. </p>
  summary: >-
    <p>Renews the lock on the session specified by the <xref uid="com.microsoft.azure.servicebus.IMessageSession.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>. The lock will be renewed based on the setting specified on the entity. </p>

    <p>When you accept a session, the session is locked for this client instance by the service for a duration as specified during the Queue/Subscription creation. If processing of the session requires longer than this duration, the session-lock needs to be renewed. For each renewal, the session-lock is renewed by the entity's LockDuration. </p>

    <p>Renewal of session renews all the messages in the session as well. Each individual message need not be renewed.</p>

    <p></p>
  syntax: public void renewSessionLock()
  uid: com.microsoft.azure.servicebus.MessageSession.renewSessionLock()
uid: com.microsoft.azure.servicebus.MessageSession.renewSessionLock*
fullName: com.microsoft.azure.servicebus.MessageSession.renewSessionLock()
name: renewSessionLock()
package: com.microsoft.azure.servicebus
metadata: {}
