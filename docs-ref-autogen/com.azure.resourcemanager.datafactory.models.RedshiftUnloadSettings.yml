### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings"
fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings"
name: "RedshiftUnloadSettings"
nameWithType: "RedshiftUnloadSettings"
summary: "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **RedshiftUnloadSettings**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings?alt=com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings&text=RedshiftUnloadSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.RedshiftUnloadSettings()"
  fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.RedshiftUnloadSettings()"
  name: "RedshiftUnloadSettings()"
  nameWithType: "RedshiftUnloadSettings.RedshiftUnloadSettings()"
  summary: "Creates an instance of Redshift<wbr>Unload<wbr>Settings class."
  syntax: "public RedshiftUnloadSettings()"
  desc: "Creates an instance of RedshiftUnloadSettings class."
methods:
- uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.bucketName()"
  fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.bucketName()"
  name: "bucketName()"
  nameWithType: "RedshiftUnloadSettings.bucketName()"
  summary: "Get the bucket<wbr>Name property: The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source."
  syntax: "public Object bucketName()"
  desc: "Get the bucketName property: The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string)."
  returns:
    description: "the bucketName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
- uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "RedshiftUnloadSettings.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Redshift<wbr>Unload<wbr>Settings from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RedshiftUnloadSettings fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of RedshiftUnloadSettings from the JsonReader."
  returns:
    description: "An instance of RedshiftUnloadSettings if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings?alt=com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings&text=RedshiftUnloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.s3LinkedServiceName()"
  fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.s3LinkedServiceName()"
  name: "s3LinkedServiceName()"
  nameWithType: "RedshiftUnloadSettings.s3LinkedServiceName()"
  summary: "Get the s3Linked<wbr>Service<wbr>Name property: The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source."
  syntax: "public LinkedServiceReference s3LinkedServiceName()"
  desc: "Get the s3LinkedServiceName property: The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source."
  returns:
    description: "the s3LinkedServiceName value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "RedshiftUnloadSettings.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.validate()"
  name: "validate()"
  nameWithType: "RedshiftUnloadSettings.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.withBucketName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.withBucketName(Object bucketName)"
  name: "withBucketName(Object bucketName)"
  nameWithType: "RedshiftUnloadSettings.withBucketName(Object bucketName)"
  summary: "Set the bucket<wbr>Name property: The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source."
  parameters:
  - description: "the bucketName value to set."
    name: "bucketName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public RedshiftUnloadSettings withBucketName(Object bucketName)"
  desc: "Set the bucketName property: The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string)."
  returns:
    description: "the RedshiftUnloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings?alt=com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings&text=RedshiftUnloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.withS3LinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings.withS3LinkedServiceName(LinkedServiceReference s3LinkedServiceName)"
  name: "withS3LinkedServiceName(LinkedServiceReference s3LinkedServiceName)"
  nameWithType: "RedshiftUnloadSettings.withS3LinkedServiceName(LinkedServiceReference s3LinkedServiceName)"
  summary: "Set the s3Linked<wbr>Service<wbr>Name property: The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source."
  parameters:
  - description: "the s3LinkedServiceName value to set."
    name: "s3LinkedServiceName"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedshiftUnloadSettings withS3LinkedServiceName(LinkedServiceReference s3LinkedServiceName)"
  desc: "Set the s3LinkedServiceName property: The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source."
  returns:
    description: "the RedshiftUnloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings?alt=com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings&text=RedshiftUnloadSettings\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings?alt=com.azure.resourcemanager.datafactory.models.RedshiftUnloadSettings&text=RedshiftUnloadSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0
