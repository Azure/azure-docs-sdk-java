### YamlMime:JavaMember
uid: "com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability*"
fullName: "com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability"
name: "checkNameAvailability"
nameWithType: "VaultsClient.checkNameAvailability"
members:
- uid: "com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability(com.azure.resourcemanager.keyvault.models.VaultCheckNameAvailabilityParameters)"
  fullName: "com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailability(VaultCheckNameAvailabilityParameters vaultName)"
  name: "checkNameAvailability(VaultCheckNameAvailabilityParameters vaultName)"
  nameWithType: "VaultsClient.checkNameAvailability(VaultCheckNameAvailabilityParameters vaultName)"
  summary: "Checks that the vault name is valid and is not already in use."
  parameters:
  - description: "The name of the vault."
    name: "vaultName"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultCheckNameAvailabilityParameters?alt=com.azure.resourcemanager.keyvault.models.VaultCheckNameAvailabilityParameters&text=VaultCheckNameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResultInner checkNameAvailability(VaultCheckNameAvailabilityParameters vaultName)"
  returns:
    description: "the CheckNameAvailability operation response."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner?alt=com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.keyvault.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.13.0
