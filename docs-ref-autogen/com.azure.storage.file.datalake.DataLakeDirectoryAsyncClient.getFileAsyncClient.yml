### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.getFileAsyncClient*"
fullName: "com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.getFileAsyncClient"
name: "getFileAsyncClient"
nameWithType: "DataLakeDirectoryAsyncClient.getFileAsyncClient"
members:
- uid: "com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.getFileAsyncClient(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.getFileAsyncClient(String fileName)"
  name: "getFileAsyncClient(String fileName)"
  nameWithType: "DataLakeDirectoryAsyncClient.getFileAsyncClient(String fileName)"
  summary: "Creates a new DataLakeFileAsyncClient object by concatenating fileName to the end of DataLakeDirectoryAsyncClient's URL. The new DataLakeFileAsyncClient uses the same request policy pipeline as the DataLakeDirectoryAsyncClient.\n\n**Code Samples**\n\n```java\nDataLakeFileAsyncClient dataLakeFileClient = client.getFileAsyncClient(fileName);\n```"
  parameters:
  - description: "A <code>String</code> representing the name of the file."
    name: "fileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileAsyncClient getFileAsyncClient(String fileName)"
  returns:
    description: "A new <xref uid=\"com.azure.storage.file.datalake.DataLakeFileAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeFileAsyncClient\"></xref> object which references the file with the specified name in this\n file system."
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileAsyncClient?alt=com.azure.storage.file.datalake.DataLakeFileAsyncClient&text=DataLakeFileAsyncClient\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.4.0
