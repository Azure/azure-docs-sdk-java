### YamlMime:JavaMember
nameWithType: FileOperations.deleteFileFromTask
type: method
members:
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName)
  name: deleteFileFromTask(String jobId, String taskId, String fileName)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public void deleteFileFromTask(String jobId, String taskId, String fileName)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String,String,String)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  name: deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public void deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String,String,String,Boolean)
- fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  name: deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file to delete. </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail. </p>
    name: recursive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified file from the specified task's directory on its compute node.</p>

    <p></p>
  syntax: public void deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String,String,String,Boolean,Iterable<BatchClientBehavior>)
uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask*
fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName)
name: deleteFileFromTask(String jobId, String taskId, String fileName)
package: com.microsoft.azure.batch
metadata: {}
