### YamlMime:JavaMember
nameWithType: Catalogs.getCredentialAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.Catalogs.getCredentialAsync(String accountName, String databaseName, String credentialName)
  name: getCredentialAsync(String accountName, String databaseName, String credentialName)
  nameWithType: Catalogs.getCredentialAsync(String accountName, String databaseName, String credentialName)
  parameters:
  - description: <p>The Azure Data Lake Analytics account upon which to execute catalog operations. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the database containing the schema. </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the credential. </p>
    name: credentialName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the USqlCredential object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlCredential?alt=com.microsoft.azure.management.datalake.analytics.models.USqlCredential&text=USqlCredential" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieves the specified credential from the Data Lake Analytics catalog.</p>

    <p></p>
  syntax: public Observable<USqlCredential> getCredentialAsync(String accountName, String databaseName, String credentialName)
  uid: com.microsoft.azure.management.datalake.analytics.Catalogs.getCredentialAsync(String,String,String)
- fullName: com.microsoft.azure.management.datalake.analytics.Catalogs.getCredentialAsync(String accountName, String databaseName, String credentialName, final ServiceCallback<USqlCredential> serviceCallback)
  name: getCredentialAsync(String accountName, String databaseName, String credentialName, final ServiceCallback<USqlCredential> serviceCallback)
  nameWithType: Catalogs.getCredentialAsync(String accountName, String databaseName, String credentialName, final ServiceCallback<USqlCredential> serviceCallback)
  parameters:
  - description: <p>The Azure Data Lake Analytics account upon which to execute catalog operations. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the database containing the schema. </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the credential. </p>
    name: credentialName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlCredential?alt=com.microsoft.azure.management.datalake.analytics.models.USqlCredential&text=USqlCredential" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlCredential?alt=com.microsoft.azure.management.datalake.analytics.models.USqlCredential&text=USqlCredential" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieves the specified credential from the Data Lake Analytics catalog.</p>

    <p></p>
  syntax: public ServiceFuture<USqlCredential> getCredentialAsync(String accountName, String databaseName, String credentialName, final ServiceCallback<USqlCredential> serviceCallback)
  uid: com.microsoft.azure.management.datalake.analytics.Catalogs.getCredentialAsync(String,String,String,final ServiceCallback<USqlCredential>)
uid: com.microsoft.azure.management.datalake.analytics.Catalogs.getCredentialAsync*
fullName: com.microsoft.azure.management.datalake.analytics.Catalogs.getCredentialAsync(String accountName, String databaseName, String credentialName)
name: getCredentialAsync(String accountName, String databaseName, String credentialName)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
