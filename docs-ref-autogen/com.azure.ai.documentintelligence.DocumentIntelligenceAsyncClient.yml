### YamlMime:JavaType
uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient"
fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient"
name: "DocumentIntelligenceAsyncClient"
nameWithType: "DocumentIntelligenceAsyncClient"
summary: "Initializes a new instance of the asynchronous Document<wbr>Intelligence<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DocumentIntelligenceAsyncClient**"
methods:
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginAnalyzeBatchDocuments(java.lang.String,com.azure.ai.documentintelligence.models.AnalyzeBatchDocumentsOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginAnalyzeBatchDocuments(String modelId, AnalyzeBatchDocumentsOptions analyzeBatchDocumentOptions)"
  name: "beginAnalyzeBatchDocuments(String modelId, AnalyzeBatchDocumentsOptions analyzeBatchDocumentOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.beginAnalyzeBatchDocuments(String modelId, AnalyzeBatchDocumentsOptions analyzeBatchDocumentOptions)"
  summary: "/\\*\\* Analyzes batch documents with document model."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze batch request parameters."
    name: "analyzeBatchDocumentOptions"
    type: "<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeBatchDocumentsOptions?alt=com.azure.ai.documentintelligence.models.AnalyzeBatchDocumentsOptions&text=AnalyzeBatchDocumentsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<AnalyzeBatchOperationDetails,AnalyzeBatchResult> beginAnalyzeBatchDocuments(String modelId, AnalyzeBatchDocumentsOptions analyzeBatchDocumentOptions)"
  desc: "/\\*\\* Analyzes batch documents with document model."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation.\n /"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeBatchOperationDetails?alt=com.azure.ai.documentintelligence.models.AnalyzeBatchOperationDetails&text=AnalyzeBatchOperationDetails\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeBatchResult?alt=com.azure.ai.documentintelligence.models.AnalyzeBatchResult&text=AnalyzeBatchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginAnalyzeBatchDocuments(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginAnalyzeBatchDocuments(String modelId, BinaryData analyzeBatchRequest, RequestOptions requestOptions)"
  name: "beginAnalyzeBatchDocuments(String modelId, BinaryData analyzeBatchRequest, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.beginAnalyzeBatchDocuments(String modelId, BinaryData analyzeBatchRequest, RequestOptions requestOptions)"
  summary: "Analyzes batch documents with document model."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze batch request parameters."
    name: "analyzeBatchRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginAnalyzeBatchDocuments(String modelId, BinaryData analyzeBatchRequest, RequestOptions requestOptions)"
  desc: "Analyzes batch documents with document model.\n\n**Query Parameters**\n\n    | ------------------- | ------------ | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                | Type         | Required | Description                                                                                                                                             |\n    | pages               | String       | No       | 1-based page numbers to analyze. Ex. \"1-3,5,7-9\"                                                                                                        |\n    | locale              | String       | No       | Locale hint for text recognition and document analysis. Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\"). |\n    | stringIndexType     | String       | No       | Method used to compute string offset and length. Allowed values: \"textElements\", \"unicodeCodePoint\", \"utf16CodeUnit\".                                   |\n    | features            | List<String> | No       | List of optional analysis features. In the form of \",\" separated string.                                                                                |\n    | queryFields         | List<String> | No       | List of additional fields to extract. Ex. \"NumberOfGuests,StoreNumber\". In the form of \",\" separated string.                                            |\n    | outputContentFormat | String       | No       | Format of the analyze result top-level content. Allowed values: \"text\", \"markdown\".                                                                     |\n    | output              | List<String> | No       | Additional outputs to generate during analysis. In the form of \",\" separated string.                                                                    |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     azureBlobSource (Optional): {\n         containerUrl: String (Required)\n         prefix: String (Optional)\n     }\n     azureBlobFileListSource (Optional): {\n         containerUrl: String (Required)\n         fileList: String (Required)\n     }\n     resultContainerUrl: String (Required)\n     resultPrefix: String (Optional)\n     overwriteExisting: Boolean (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginAnalyzeDocument(java.lang.String,com.azure.ai.documentintelligence.models.AnalyzeDocumentOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginAnalyzeDocument(String modelId, AnalyzeDocumentOptions analyzeDocumentOptions)"
  name: "beginAnalyzeDocument(String modelId, AnalyzeDocumentOptions analyzeDocumentOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.beginAnalyzeDocument(String modelId, AnalyzeDocumentOptions analyzeDocumentOptions)"
  summary: "/\\*\\* Analyzes document with document model."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze request parameters."
    name: "analyzeDocumentOptions"
    type: "<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeDocumentOptions?alt=com.azure.ai.documentintelligence.models.AnalyzeDocumentOptions&text=AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<AnalyzeOperationDetails,AnalyzeResult> beginAnalyzeDocument(String modelId, AnalyzeDocumentOptions analyzeDocumentOptions)"
  desc: "/\\*\\* Analyzes document with document model."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation.\n /"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeOperationDetails?alt=com.azure.ai.documentintelligence.models.AnalyzeOperationDetails&text=AnalyzeOperationDetails\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeResult?alt=com.azure.ai.documentintelligence.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginAnalyzeDocument(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginAnalyzeDocument(String modelId, BinaryData analyzeRequest, RequestOptions requestOptions)"
  name: "beginAnalyzeDocument(String modelId, BinaryData analyzeRequest, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.beginAnalyzeDocument(String modelId, BinaryData analyzeRequest, RequestOptions requestOptions)"
  summary: "Analyzes document with document model."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze request parameters."
    name: "analyzeRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginAnalyzeDocument(String modelId, BinaryData analyzeRequest, RequestOptions requestOptions)"
  desc: "Analyzes document with document model.\n\n**Query Parameters**\n\n    | ------------------- | ------------ | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                | Type         | Required | Description                                                                                                                                             |\n    | pages               | String       | No       | 1-based page numbers to analyze. Ex. \"1-3,5,7-9\"                                                                                                        |\n    | locale              | String       | No       | Locale hint for text recognition and document analysis. Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\"). |\n    | stringIndexType     | String       | No       | Method used to compute string offset and length. Allowed values: \"textElements\", \"unicodeCodePoint\", \"utf16CodeUnit\".                                   |\n    | features            | List<String> | No       | List of optional analysis features. In the form of \",\" separated string.                                                                                |\n    | queryFields         | List<String> | No       | List of additional fields to extract. Ex. \"NumberOfGuests,StoreNumber\". In the form of \",\" separated string.                                            |\n    | outputContentFormat | String       | No       | Format of the analyze result top-level content. Allowed values: \"text\", \"markdown\".                                                                     |\n    | output              | List<String> | No       | Additional outputs to generate during analysis. In the form of \",\" separated string.                                                                    |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     urlSource: String (Optional)\n     base64Source: byte[] (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginClassifyDocument(java.lang.String,com.azure.ai.documentintelligence.models.ClassifyDocumentOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginClassifyDocument(String classifierId, ClassifyDocumentOptions classifyDocumentOptions)"
  name: "beginClassifyDocument(String classifierId, ClassifyDocumentOptions classifyDocumentOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.beginClassifyDocument(String classifierId, ClassifyDocumentOptions classifyDocumentOptions)"
  summary: "/\\*\\* Classifies document with document classifier."
  parameters:
  - description: "Unique document classifier name."
    name: "classifierId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Classify request parameters."
    name: "classifyDocumentOptions"
    type: "<xref href=\"com.azure.ai.documentintelligence.models.ClassifyDocumentOptions?alt=com.azure.ai.documentintelligence.models.ClassifyDocumentOptions&text=ClassifyDocumentOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<AnalyzeOperationDetails,AnalyzeResult> beginClassifyDocument(String classifierId, ClassifyDocumentOptions classifyDocumentOptions)"
  desc: "/\\*\\* Classifies document with document classifier."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation.\n /"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeOperationDetails?alt=com.azure.ai.documentintelligence.models.AnalyzeOperationDetails&text=AnalyzeOperationDetails\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeResult?alt=com.azure.ai.documentintelligence.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginClassifyDocument(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.beginClassifyDocument(String classifierId, BinaryData classifyRequest, RequestOptions requestOptions)"
  name: "beginClassifyDocument(String classifierId, BinaryData classifyRequest, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.beginClassifyDocument(String classifierId, BinaryData classifyRequest, RequestOptions requestOptions)"
  summary: "Classifies document with document classifier."
  parameters:
  - description: "Unique document classifier name."
    name: "classifierId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Classify request parameters."
    name: "classifyRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginClassifyDocument(String classifierId, BinaryData classifyRequest, RequestOptions requestOptions)"
  desc: "Classifies document with document classifier.\n\n**Query Parameters**\n\n    | --------------- | ------ | -------- | --------------------------------------------------------------------------------------------------------------------- |\n    | Name            | Type   | Required | Description                                                                                                           |\n    | stringIndexType | String | No       | Method used to compute string offset and length. Allowed values: \"textElements\", \"unicodeCodePoint\", \"utf16CodeUnit\". |\n    | split           | String | No       | Document splitting mode. Allowed values: \"auto\", \"none\", \"perPage\".                                                   |\n    | pages           | String | No       | 1-based page numbers to analyze. Ex. \"1-3,5,7-9\"                                                                      |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     urlSource: String (Optional)\n     base64Source: byte[] (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.deleteAnalyzeBatchResult(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.deleteAnalyzeBatchResult(String modelId, String resultId)"
  name: "deleteAnalyzeBatchResult(String modelId, String resultId)"
  nameWithType: "DocumentIntelligenceAsyncClient.deleteAnalyzeBatchResult(String modelId, String resultId)"
  summary: "Mark the batch document analysis result for deletion."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze batch operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteAnalyzeBatchResult(String modelId, String resultId)"
  desc: "Mark the batch document analysis result for deletion."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.deleteAnalyzeBatchResultWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.deleteAnalyzeBatchResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  name: "deleteAnalyzeBatchResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.deleteAnalyzeBatchResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  summary: "Mark the batch document analysis result for deletion."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze batch operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteAnalyzeBatchResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  desc: "Mark the batch document analysis result for deletion."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.deleteAnalyzeResult(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.deleteAnalyzeResult(String modelId, String resultId)"
  name: "deleteAnalyzeResult(String modelId, String resultId)"
  nameWithType: "DocumentIntelligenceAsyncClient.deleteAnalyzeResult(String modelId, String resultId)"
  summary: "Mark the result of document analysis for deletion."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteAnalyzeResult(String modelId, String resultId)"
  desc: "Mark the result of document analysis for deletion."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.deleteAnalyzeResultWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.deleteAnalyzeResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  name: "deleteAnalyzeResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.deleteAnalyzeResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  summary: "Mark the result of document analysis for deletion."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteAnalyzeResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  desc: "Mark the result of document analysis for deletion."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeBatchResult(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeBatchResult(String modelId, String resultId)"
  name: "getAnalyzeBatchResult(String modelId, String resultId)"
  nameWithType: "DocumentIntelligenceAsyncClient.getAnalyzeBatchResult(String modelId, String resultId)"
  summary: "Gets the result of batch document analysis."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze batch operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<AnalyzeBatchOperationDetails> getAnalyzeBatchResult(String modelId, String resultId)"
  desc: "Gets the result of batch document analysis."
  returns:
    description: "the result of batch document analysis on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeBatchOperationDetails?alt=com.azure.ai.documentintelligence.models.AnalyzeBatchOperationDetails&text=AnalyzeBatchOperationDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeBatchResultWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeBatchResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  name: "getAnalyzeBatchResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.getAnalyzeBatchResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  summary: "Gets the result of batch document analysis."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze batch operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getAnalyzeBatchResultWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  desc: "Gets the result of batch document analysis.\n\n**Response Body Schema**\n\n```java\n{\n     resultId: String (Optional)\n     status: String(notStarted/running/failed/succeeded/canceled/skipped) (Required)\n     createdDateTime: OffsetDateTime (Required)\n     lastUpdatedDateTime: OffsetDateTime (Required)\n     percentCompleted: Integer (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             message: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n     result (Optional): {\n         succeededCount: int (Required)\n         failedCount: int (Required)\n         skippedCount: int (Required)\n         details (Optional): [\n              (Optional){\n                 status: String(notStarted/running/failed/succeeded/canceled/skipped) (Required)\n                 sourceUrl: String (Required)\n                 resultUrl: String (Optional)\n                 error (Optional): (recursive schema, see error above)\n             }\n         ]\n     }\n }\n```"
  returns:
    description: "the result of batch document analysis along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeResultFigure(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeResultFigure(String modelId, String resultId, String figureId)"
  name: "getAnalyzeResultFigure(String modelId, String resultId, String figureId)"
  nameWithType: "DocumentIntelligenceAsyncClient.getAnalyzeResultFigure(String modelId, String resultId, String figureId)"
  summary: "Gets the generated cropped image of specified figure from document analysis."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Figure ID."
    name: "figureId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<BinaryData> getAnalyzeResultFigure(String modelId, String resultId, String figureId)"
  desc: "Gets the generated cropped image of specified figure from document analysis."
  returns:
    description: "the generated cropped image of specified figure from document analysis on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeResultFigureWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeResultFigureWithResponse(String modelId, String resultId, String figureId, RequestOptions requestOptions)"
  name: "getAnalyzeResultFigureWithResponse(String modelId, String resultId, String figureId, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.getAnalyzeResultFigureWithResponse(String modelId, String resultId, String figureId, RequestOptions requestOptions)"
  summary: "Gets the generated cropped image of specified figure from document analysis."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Figure ID."
    name: "figureId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getAnalyzeResultFigureWithResponse(String modelId, String resultId, String figureId, RequestOptions requestOptions)"
  desc: "Gets the generated cropped image of specified figure from document analysis.\n\n**Response Body Schema**\n\n```java\nBinaryData\n```"
  returns:
    description: "the generated cropped image of specified figure from document analysis along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on\n successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeResultPdf(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeResultPdf(String modelId, String resultId)"
  name: "getAnalyzeResultPdf(String modelId, String resultId)"
  nameWithType: "DocumentIntelligenceAsyncClient.getAnalyzeResultPdf(String modelId, String resultId)"
  summary: "Gets the generated searchable PDF output from document analysis."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<BinaryData> getAnalyzeResultPdf(String modelId, String resultId)"
  desc: "Gets the generated searchable PDF output from document analysis."
  returns:
    description: "the generated searchable PDF output from document analysis on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeResultPdfWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.getAnalyzeResultPdfWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  name: "getAnalyzeResultPdfWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.getAnalyzeResultPdfWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  summary: "Gets the generated searchable PDF output from document analysis."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Analyze operation result ID."
    name: "resultId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getAnalyzeResultPdfWithResponse(String modelId, String resultId, RequestOptions requestOptions)"
  desc: "Gets the generated searchable PDF output from document analysis.\n\n**Response Body Schema**\n\n```java\nBinaryData\n```"
  returns:
    description: "the generated searchable PDF output from document analysis along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.listAnalyzeBatchResults(java.lang.String)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.listAnalyzeBatchResults(String modelId)"
  name: "listAnalyzeBatchResults(String modelId)"
  nameWithType: "DocumentIntelligenceAsyncClient.listAnalyzeBatchResults(String modelId)"
  summary: "List batch document analysis results."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<AnalyzeBatchOperationDetails> listAnalyzeBatchResults(String modelId)"
  desc: "List batch document analysis results."
  returns:
    description: "paged collection of AnalyzeBatchOperation items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.documentintelligence.models.AnalyzeBatchOperationDetails?alt=com.azure.ai.documentintelligence.models.AnalyzeBatchOperationDetails&text=AnalyzeBatchOperationDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.listAnalyzeBatchResults(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.documentintelligence.DocumentIntelligenceAsyncClient.listAnalyzeBatchResults(String modelId, RequestOptions requestOptions)"
  name: "listAnalyzeBatchResults(String modelId, RequestOptions requestOptions)"
  nameWithType: "DocumentIntelligenceAsyncClient.listAnalyzeBatchResults(String modelId, RequestOptions requestOptions)"
  summary: "List batch document analysis results."
  parameters:
  - description: "Unique document model name."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listAnalyzeBatchResults(String modelId, RequestOptions requestOptions)"
  desc: "List batch document analysis results.\n\n**Response Body Schema**\n\n```java\n{\n     resultId: String (Optional)\n     status: String(notStarted/running/failed/succeeded/canceled/skipped) (Required)\n     createdDateTime: OffsetDateTime (Required)\n     lastUpdatedDateTime: OffsetDateTime (Required)\n     percentCompleted: Integer (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             message: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n     result (Optional): {\n         succeededCount: int (Required)\n         failedCount: int (Required)\n         skippedCount: int (Required)\n         details (Optional): [\n              (Optional){\n                 status: String(notStarted/running/failed/succeeded/canceled/skipped) (Required)\n                 sourceUrl: String (Required)\n                 resultUrl: String (Optional)\n                 error (Optional): (recursive schema, see error above)\n             }\n         ]\n     }\n }\n```"
  returns:
    description: "paged collection of AnalyzeBatchOperation items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous DocumentIntelligenceClient type."
metadata: {}
package: "com.azure.ai.documentintelligence"
artifact: com.azure:azure-ai-documentintelligence:1.0.1
