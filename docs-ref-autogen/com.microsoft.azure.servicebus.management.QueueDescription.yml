### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.management.QueueDescription
  id: QueueDescription
  parent: com.microsoft.azure.servicebus.management
  children:
  - com.microsoft.azure.servicebus.management.QueueDescription.equals(Object)
  - com.microsoft.azure.servicebus.management.QueueDescription.getAuthorizationRules()
  - com.microsoft.azure.servicebus.management.QueueDescription.getAutoDeleteOnIdle()
  - com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive()
  - com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow()
  - com.microsoft.azure.servicebus.management.QueueDescription.getEntityStatus()
  - com.microsoft.azure.servicebus.management.QueueDescription.getForwardDeadLetteredMessagesTo()
  - com.microsoft.azure.servicebus.management.QueueDescription.getForwardTo()
  - com.microsoft.azure.servicebus.management.QueueDescription.getLockDuration()
  - com.microsoft.azure.servicebus.management.QueueDescription.getMaxDeliveryCount()
  - com.microsoft.azure.servicebus.management.QueueDescription.getMaxSizeInMB()
  - com.microsoft.azure.servicebus.management.QueueDescription.getPath()
  - com.microsoft.azure.servicebus.management.QueueDescription.getUserMetadata()
  - com.microsoft.azure.servicebus.management.QueueDescription.hashCode()
  - com.microsoft.azure.servicebus.management.QueueDescription.isEnableBatchedOperations()
  - com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration()
  - com.microsoft.azure.servicebus.management.QueueDescription.isEnablePartitioning()
  - com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection()
  - com.microsoft.azure.servicebus.management.QueueDescription.isRequiresSession()
  - com.microsoft.azure.servicebus.management.QueueDescription.QueueDescription(String)
  - com.microsoft.azure.servicebus.management.QueueDescription.setAuthorizationRules(List<AuthorizationRule>)
  - com.microsoft.azure.servicebus.management.QueueDescription.setAutoDeleteOnIdle(Duration)
  - com.microsoft.azure.servicebus.management.QueueDescription.setDefaultMessageTimeToLive(Duration)
  - com.microsoft.azure.servicebus.management.QueueDescription.setDuplicationDetectionHistoryTimeWindow(Duration)
  - com.microsoft.azure.servicebus.management.QueueDescription.setEnableBatchedOperations(boolean)
  - com.microsoft.azure.servicebus.management.QueueDescription.setEnableDeadLetteringOnMessageExpiration(boolean)
  - com.microsoft.azure.servicebus.management.QueueDescription.setEnablePartitioning(boolean)
  - com.microsoft.azure.servicebus.management.QueueDescription.setEntityStatus(EntityStatus)
  - com.microsoft.azure.servicebus.management.QueueDescription.setForwardDeadLetteredMessagesTo(String)
  - com.microsoft.azure.servicebus.management.QueueDescription.setForwardTo(String)
  - com.microsoft.azure.servicebus.management.QueueDescription.setLockDuration(Duration)
  - com.microsoft.azure.servicebus.management.QueueDescription.setMaxDeliveryCount(int)
  - com.microsoft.azure.servicebus.management.QueueDescription.setMaxSizeInMB(long)
  - com.microsoft.azure.servicebus.management.QueueDescription.setRequiresDuplicateDetection(boolean)
  - com.microsoft.azure.servicebus.management.QueueDescription.setRequiresSession(boolean)
  - com.microsoft.azure.servicebus.management.QueueDescription.setUserMetadata(String)
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: QueueDescription
  nameWithType: QueueDescription
  fullName: com.microsoft.azure.servicebus.management.QueueDescription
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 10
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Represents the metadata description of the queue. </p>"
  syntax:
    content: public class QueueDescription
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.servicebus.management.QueueDescription.equals(Object)
  id: equals(Object)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: equals(Object o)
  nameWithType: QueueDescription.equals(Object o)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.equals(Object o)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.equals*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 404
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: "79317049"
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getAuthorizationRules()
  id: getAuthorizationRules()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getAuthorizationRules()
  nameWithType: QueueDescription.getAuthorizationRules()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getAuthorizationRules()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getAuthorizationRules*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 281
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public List<AuthorizationRule> getAuthorizationRules()
    return:
      type: 5618da2dcom.microsoft.azure.servicebus.management.AuthorizationRulea08ddfce
      description: <p>The <xref uid="com.microsoft.azure.servicebus.management.AuthorizationRule" data-throw-if-not-resolved="false" data-raw-source="AuthorizationRule"></xref> on the queue to control user access at entity level. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getAutoDeleteOnIdle()
  id: getAutoDeleteOnIdle()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getAutoDeleteOnIdle()
  nameWithType: QueueDescription.getAutoDeleteOnIdle()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getAutoDeleteOnIdle()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getAutoDeleteOnIdle*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 167
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public Duration getAutoDeleteOnIdle()
    return:
      type: e02a2de0
      description: <p>The idle interval after which the queue is automatically deleted. Default value is <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ManagementClientConstants#MAX_DURATION"></xref></p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive()
  id: getDefaultMessageTimeToLive()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getDefaultMessageTimeToLive()
  nameWithType: QueueDescription.getDefaultMessageTimeToLive()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 137
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Time-To-Live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getTimeToLive()\"></xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages. </p>"
  syntax: &o3
    content: public Duration getDefaultMessageTimeToLive()
    return:
      type: e02a2de0
      description: <p>The default time to live value for the messages. Default value is <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ManagementClientConstants#MAX_DURATION"></xref></p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow()
  id: getDuplicationDetectionHistoryTimeWindow()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getDuplicationDetectionHistoryTimeWindow()
  nameWithType: QueueDescription.getDuplicationDetectionHistoryTimeWindow()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 211
  package: com.microsoft.azure.servicebus.management
  syntax: &o1
    content: public Duration getDuplicationDetectionHistoryTimeWindow()
    return:
      type: e02a2de0
      description: <p>The duration of duplicate detection history that is maintained by the service. The default value is 1 minute. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getEntityStatus()
  id: getEntityStatus()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getEntityStatus()
  nameWithType: QueueDescription.getEntityStatus()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getEntityStatus()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getEntityStatus*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 297
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Gets the status of the entity. When an entity is disabled, that entity cannot send or receive messages. </p>"
  syntax:
    content: public EntityStatus getEntityStatus()
    return:
      type: com.microsoft.azure.servicebus.management.EntityStatus
      description: <p>The current status of the queue (Enabled / Disabled). The default value is Enabled. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getForwardDeadLetteredMessagesTo()
  id: getForwardDeadLetteredMessagesTo()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getForwardDeadLetteredMessagesTo()
  nameWithType: QueueDescription.getForwardDeadLetteredMessagesTo()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getForwardDeadLetteredMessagesTo()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getForwardDeadLetteredMessagesTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 342
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getForwardDeadLetteredMessagesTo()
    return:
      type: "26831127"
      description: <p>The path of the recipient entity to which all the dead-lettered messages of this queue are forwarded to. If set, user cannot manually receive dead-lettered messages from this queue. The destination entity must already exist. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getForwardTo()
  id: getForwardTo()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getForwardTo()
  nameWithType: QueueDescription.getForwardTo()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getForwardTo()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getForwardTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 314
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getForwardTo()
    return:
      type: "26831127"
      description: <p>The path of the recipient entity to which all the messages sent to the queue are forwarded to. If set, user cannot manually receive messages from this queue. The destination entity must be an already existing entity. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getLockDuration()
  id: getLockDuration()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getLockDuration()
  nameWithType: QueueDescription.getLockDuration()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getLockDuration()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getLockDuration*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 64
  package: com.microsoft.azure.servicebus.management
  summary: "<p>The amount of time that the message is locked by a given receiver so that no other receiver receives the same message. </p>"
  syntax:
    content: public Duration getLockDuration()
    return:
      type: e02a2de0
      description: <p>The duration of a peek lock. Default value is 60 seconds. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getMaxDeliveryCount()
  id: getMaxDeliveryCount()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getMaxDeliveryCount()
  nameWithType: QueueDescription.getMaxDeliveryCount()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getMaxDeliveryCount()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getMaxDeliveryCount*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 242
  package: com.microsoft.azure.servicebus.management
  summary: "<p>The maximum delivery count of a message before it is dead-lettered. The delivery count is increased when a message is received in <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.servicebus.ReceiveMode#PEEKLOCK\"></xref> mode and didn't complete the message before the message lock expired. </p>"
  syntax:
    content: public int getMaxDeliveryCount()
    return:
      type: f75371fa
      description: <p>Default value is 10. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getMaxSizeInMB()
  id: getMaxSizeInMB()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getMaxSizeInMB()
  nameWithType: QueueDescription.getMaxSizeInMB()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getMaxSizeInMB()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getMaxSizeInMB*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 86
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public long getMaxSizeInMB()
    return:
      type: 0364520f
      description: <p>the maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default value is 1024. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getPath()
  id: getPath()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getPath()
  nameWithType: QueueDescription.getPath()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getPath()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 43
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getPath()
    return:
      type: "26831127"
      description: <p>The path of the queue. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getUserMetadata()
  id: getUserMetadata()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: getUserMetadata()
  nameWithType: QueueDescription.getUserMetadata()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getUserMetadata()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.getUserMetadata*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 383
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getUserMetadata()
    return:
      type: "26831127"
      description: <p>Custom metdata that user can associate with the description. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.hashCode()
  id: hashCode()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: hashCode()
  nameWithType: QueueDescription.hashCode()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.hashCode()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.hashCode*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 438
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public int hashCode()
    return:
      type: f75371fa
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isEnableBatchedOperations()
  id: isEnableBatchedOperations()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: isEnableBatchedOperations()
  nameWithType: QueueDescription.isEnableBatchedOperations()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isEnableBatchedOperations()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.isEnableBatchedOperations*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 267
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean isEnableBatchedOperations()
    return:
      type: 4fc6e284
      description: <p>Indicates whether server-side batched operations are enabled. Defaults to true. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration()
  id: isEnableDeadLetteringOnMessageExpiration()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: isEnableDeadLetteringOnMessageExpiration()
  nameWithType: QueueDescription.isEnableDeadLetteringOnMessageExpiration()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 195
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Indicates whether this queue has dead letter support when a message expires. </p>"
  syntax: &o4
    content: public boolean isEnableDeadLetteringOnMessageExpiration()
    return:
      type: 4fc6e284
      description: <p>If true, the expired messages are moved to dead-letter sub-queue. Default value is false. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isEnablePartitioning()
  id: isEnablePartitioning()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: isEnablePartitioning()
  nameWithType: QueueDescription.isEnablePartitioning()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isEnablePartitioning()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.isEnablePartitioning*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 369
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean isEnablePartitioning()
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the queue is to be partitioned across multiple message brokers. Defaults to false </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection()
  id: isRequiresDuplicateDetection()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: isRequiresDuplicateDetection()
  nameWithType: QueueDescription.isRequiresDuplicateDetection()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 103
  package: com.microsoft.azure.servicebus.management
  summary: "<p>If enabled, duplicate messages having same <xref uid=\"com.microsoft.azure.servicebus.IMessage.getMessageId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getMessageId()\"></xref> and sent to queue within duration of <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getDuplicationDetectionHistoryTimeWindow\"></xref> will be discarded. </p>"
  syntax: &o2
    content: public boolean isRequiresDuplicateDetection()
    return:
      type: 4fc6e284
      description: <p>value indicating if the queue requires guard against duplicate messages. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresSession()
  id: isRequiresSession()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: isRequiresSession()
  nameWithType: QueueDescription.isRequiresSession()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresSession()
  overload: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresSession*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 118
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean isRequiresSession()
    return:
      type: 4fc6e284
      description: <p>boolean that indicates whether the queue supports the concept of session. Sessionful-messages follow FIFO ordering. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.QueueDescription(String)
  id: QueueDescription(String)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: QueueDescription(String path)
  nameWithType: QueueDescription.QueueDescription(String path)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.QueueDescription(String path)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.QueueDescription*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 35
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Initializes a new instance of QueueDescription with the specified relative path. </p>"
  syntax:
    content: public QueueDescription(String path)
    parameters:
    - id: path
      type: "26831127"
      description: "<p>- Path of the topic. Max length is 260 chars. Cannot start or end with a slash. Cannot have restricted characters: '@','?','#','*' </p>"
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setAuthorizationRules(List<AuthorizationRule>)
  id: setAuthorizationRules(List<AuthorizationRule>)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  nameWithType: QueueDescription.setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setAuthorizationRules*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 288
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setAuthorizationRules(List<AuthorizationRule> authorizationRules)
    parameters:
    - id: authorizationRules
      type: 5618da2dcom.microsoft.azure.servicebus.management.AuthorizationRulea08ddfce
      description: <p>- The <xref uid="com.microsoft.azure.servicebus.management.AuthorizationRule" data-throw-if-not-resolved="false" data-raw-source="AuthorizationRule"></xref> on the queue to control user access at entity level. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setAutoDeleteOnIdle(Duration)
  id: setAutoDeleteOnIdle(Duration)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  nameWithType: QueueDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setAutoDeleteOnIdle*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 175
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
    parameters:
    - id: autoDeleteOnIdle
      type: e02a2de0
      description: <p>- The idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setDefaultMessageTimeToLive(Duration)
  id: setDefaultMessageTimeToLive(Duration)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  nameWithType: QueueDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setDefaultMessageTimeToLive*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 146
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
    parameters:
    - id: defaultMessageTimeToLive
      type: e02a2de0
      description: <p>- The default message time to live value. Value cannot be lower than 1 second. See <xref uid="com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive()" data-throw-if-not-resolved="false" data-raw-source="getDefaultMessageTimeToLive()"></xref></p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setDuplicationDetectionHistoryTimeWindow(Duration)
  id: setDuplicationDetectionHistoryTimeWindow(Duration)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  nameWithType: QueueDescription.setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setDuplicationDetectionHistoryTimeWindow*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 219
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
    parameters:
    - id: duplicationDetectionHistoryTimeWindow
      type: e02a2de0
      description: <p>- The duration of duplicate detection history that is maintained by the service. Max value is 1 day and minimum is 20 seconds. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setEnableBatchedOperations(boolean)
  id: setEnableBatchedOperations(boolean)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setEnableBatchedOperations(boolean enableBatchedOperations)
  nameWithType: QueueDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setEnableBatchedOperations*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 274
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEnableBatchedOperations(boolean enableBatchedOperations)
    parameters:
    - id: enableBatchedOperations
      type: 4fc6e284
      description: <p>- Indicates whether server-side batched operations are enabled. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setEnableDeadLetteringOnMessageExpiration(boolean)
  id: setEnableDeadLetteringOnMessageExpiration(boolean)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  nameWithType: QueueDescription.setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setEnableDeadLetteringOnMessageExpiration*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 203
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
    parameters:
    - id: enableDeadLetteringOnMessageExpiration
      type: 4fc6e284
      description: <p>- True if messages should be dead-lettered on expiration. See <xref uid="com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration()" data-throw-if-not-resolved="false" data-raw-source="isEnableDeadLetteringOnMessageExpiration()"></xref></p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setEnablePartitioning(boolean)
  id: setEnablePartitioning(boolean)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setEnablePartitioning(boolean enablePartitioning)
  nameWithType: QueueDescription.setEnablePartitioning(boolean enablePartitioning)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setEnablePartitioning(boolean enablePartitioning)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setEnablePartitioning*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 376
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEnablePartitioning(boolean enablePartitioning)
    parameters:
    - id: enablePartitioning
      type: 4fc6e284
      description: <p>- true if queue is to be partitioned across multiple message brokers. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setEntityStatus(EntityStatus)
  id: setEntityStatus(EntityStatus)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setEntityStatus(EntityStatus status)
  nameWithType: QueueDescription.setEntityStatus(EntityStatus status)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setEntityStatus(EntityStatus status)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setEntityStatus*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 305
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEntityStatus(EntityStatus status)
    parameters:
    - id: status
      type: com.microsoft.azure.servicebus.management.EntityStatus
      description: <p>- the status of the queue (Enabled / Disabled). When an entity is disabled, that entity cannot send or receive messages. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setForwardDeadLetteredMessagesTo(String)
  id: setForwardDeadLetteredMessagesTo(String)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  nameWithType: QueueDescription.setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setForwardDeadLetteredMessagesTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 351
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
    parameters:
    - id: forwardDeadLetteredMessagesTo
      type: "26831127"
      description: <p>- The path of the recipient entity to which all the dead-lettered messages of this queue are forwarded to. If set, user cannot manually receive dead-lettered messages from this queue. The destination entity must already exist. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setForwardTo(String)
  id: setForwardTo(String)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setForwardTo(String forwardTo)
  nameWithType: QueueDescription.setForwardTo(String forwardTo)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setForwardTo(String forwardTo)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setForwardTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 323
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setForwardTo(String forwardTo)
    parameters:
    - id: forwardTo
      type: "26831127"
      description: <p>- The path of the recipient entity to which all the messages sent to the queue are forwarded to. If set, user cannot manually receive messages from this queue. The destination entity must be an already existing entity. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setLockDuration(Duration)
  id: setLockDuration(Duration)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setLockDuration(Duration lockDuration)
  nameWithType: QueueDescription.setLockDuration(Duration lockDuration)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setLockDuration(Duration lockDuration)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setLockDuration*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 74
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Sets The amount of time that the message is locked by a given receiver so that no other receiver receives the same message. </p>"
  syntax:
    content: public void setLockDuration(Duration lockDuration)
    parameters:
    - id: lockDuration
      type: e02a2de0
      description: <p>- The duration of a peek lock. Max value is 5 minutes. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setMaxDeliveryCount(int)
  id: setMaxDeliveryCount(int)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setMaxDeliveryCount(int maxDeliveryCount)
  nameWithType: QueueDescription.setMaxDeliveryCount(int maxDeliveryCount)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setMaxDeliveryCount(int maxDeliveryCount)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setMaxDeliveryCount*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 252
  package: com.microsoft.azure.servicebus.management
  summary: "<p>The maximum delivery count of a message before it is dead-lettered. The delivery count is increased when a message is received in <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.servicebus.ReceiveMode#PEEKLOCK\"></xref> mode and didn't complete the message before the message lock expired. </p>"
  syntax:
    content: public void setMaxDeliveryCount(int maxDeliveryCount)
    parameters:
    - id: maxDeliveryCount
      type: f75371fa
      description: <p>- Minimum value is 1. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setMaxSizeInMB(long)
  id: setMaxSizeInMB(long)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setMaxSizeInMB(long maxSize)
  nameWithType: QueueDescription.setMaxSizeInMB(long maxSize)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setMaxSizeInMB(long maxSize)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setMaxSizeInMB*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 93
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setMaxSizeInMB(long maxSize)
    parameters:
    - id: maxSize
      type: 0364520f
      description: <p>- Maximum size of the queue in megabytes, which is the size of memory allocated for the queue. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresDuplicateDetection(boolean)
  id: setRequiresDuplicateDetection(boolean)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  nameWithType: QueueDescription.setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresDuplicateDetection*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 111
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
    parameters:
    - id: requiresDuplicateDetection
      type: 4fc6e284
      description: <p>- True if duplicate detection needs to be enabled. See also - <xref uid="com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection()" data-throw-if-not-resolved="false" data-raw-source="isRequiresDuplicateDetection()"></xref></p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresSession(boolean)
  id: setRequiresSession(boolean)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setRequiresSession(boolean requiresSession)
  nameWithType: QueueDescription.setRequiresSession(boolean requiresSession)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresSession(boolean requiresSession)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresSession*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 125
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setRequiresSession(boolean requiresSession)
    parameters:
    - id: requiresSession
      type: 4fc6e284
      description: <p>- True if queue should support sessions. </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setUserMetadata(String)
  id: setUserMetadata(String)
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  langs:
  - java
  name: setUserMetadata(String userMetadata)
  nameWithType: QueueDescription.setUserMetadata(String userMetadata)
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setUserMetadata(String userMetadata)
  overload: com.microsoft.azure.servicebus.management.QueueDescription.setUserMetadata*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/QueueDescription.java
    startLine: 391
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setUserMetadata(String userMetadata)
    parameters:
    - id: userMetadata
      type: "26831127"
      description: <p>- Custom metdata that user can associate with the description. Cannot be null. Max length is 1024 chars </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.servicebus.management.QueueDescription.QueueDescription*
  name: QueueDescription
  nameWithType: QueueDescription.QueueDescription
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.QueueDescription
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getPath*
  name: getPath
  nameWithType: QueueDescription.getPath
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getPath
  package: com.microsoft.azure.servicebus.management
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getLockDuration*
  name: getLockDuration
  nameWithType: QueueDescription.getLockDuration
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getLockDuration
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setLockDuration*
  name: setLockDuration
  nameWithType: QueueDescription.setLockDuration
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setLockDuration
  package: com.microsoft.azure.servicebus.management
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getMaxSizeInMB*
  name: getMaxSizeInMB
  nameWithType: QueueDescription.getMaxSizeInMB
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getMaxSizeInMB
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setMaxSizeInMB*
  name: setMaxSizeInMB
  nameWithType: QueueDescription.setMaxSizeInMB
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setMaxSizeInMB
  package: com.microsoft.azure.servicebus.management
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection*
  name: isRequiresDuplicateDetection
  nameWithType: QueueDescription.isRequiresDuplicateDetection
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresDuplicateDetection*
  name: setRequiresDuplicateDetection
  nameWithType: QueueDescription.setRequiresDuplicateDetection
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresDuplicateDetection
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresSession*
  name: isRequiresSession
  nameWithType: QueueDescription.isRequiresSession
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresSession
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresSession*
  name: setRequiresSession
  nameWithType: QueueDescription.setRequiresSession
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setRequiresSession
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive*
  name: getDefaultMessageTimeToLive
  nameWithType: QueueDescription.getDefaultMessageTimeToLive
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setDefaultMessageTimeToLive*
  name: setDefaultMessageTimeToLive
  nameWithType: QueueDescription.setDefaultMessageTimeToLive
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setDefaultMessageTimeToLive
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getAutoDeleteOnIdle*
  name: getAutoDeleteOnIdle
  nameWithType: QueueDescription.getAutoDeleteOnIdle
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getAutoDeleteOnIdle
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setAutoDeleteOnIdle*
  name: setAutoDeleteOnIdle
  nameWithType: QueueDescription.setAutoDeleteOnIdle
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setAutoDeleteOnIdle
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration*
  name: isEnableDeadLetteringOnMessageExpiration
  nameWithType: QueueDescription.isEnableDeadLetteringOnMessageExpiration
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setEnableDeadLetteringOnMessageExpiration*
  name: setEnableDeadLetteringOnMessageExpiration
  nameWithType: QueueDescription.setEnableDeadLetteringOnMessageExpiration
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setEnableDeadLetteringOnMessageExpiration
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow*
  name: getDuplicationDetectionHistoryTimeWindow
  nameWithType: QueueDescription.getDuplicationDetectionHistoryTimeWindow
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setDuplicationDetectionHistoryTimeWindow*
  name: setDuplicationDetectionHistoryTimeWindow
  nameWithType: QueueDescription.setDuplicationDetectionHistoryTimeWindow
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setDuplicationDetectionHistoryTimeWindow
  package: com.microsoft.azure.servicebus.management
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getMaxDeliveryCount*
  name: getMaxDeliveryCount
  nameWithType: QueueDescription.getMaxDeliveryCount
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getMaxDeliveryCount
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setMaxDeliveryCount*
  name: setMaxDeliveryCount
  nameWithType: QueueDescription.setMaxDeliveryCount
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setMaxDeliveryCount
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isEnableBatchedOperations*
  name: isEnableBatchedOperations
  nameWithType: QueueDescription.isEnableBatchedOperations
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isEnableBatchedOperations
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setEnableBatchedOperations*
  name: setEnableBatchedOperations
  nameWithType: QueueDescription.setEnableBatchedOperations
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setEnableBatchedOperations
  package: com.microsoft.azure.servicebus.management
- uid: 5618da2dcom.microsoft.azure.servicebus.management.AuthorizationRulea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.servicebus.management.AuthorizationRule
    name: AuthorizationRule
    fullName: com.microsoft.azure.servicebus.management.AuthorizationRule
    href: com.microsoft.azure.servicebus.management.AuthorizationRule.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getAuthorizationRules*
  name: getAuthorizationRules
  nameWithType: QueueDescription.getAuthorizationRules
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getAuthorizationRules
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setAuthorizationRules*
  name: setAuthorizationRules
  nameWithType: QueueDescription.setAuthorizationRules
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setAuthorizationRules
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getEntityStatus*
  name: getEntityStatus
  nameWithType: QueueDescription.getEntityStatus
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getEntityStatus
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setEntityStatus*
  name: setEntityStatus
  nameWithType: QueueDescription.setEntityStatus
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setEntityStatus
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getForwardTo*
  name: getForwardTo
  nameWithType: QueueDescription.getForwardTo
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getForwardTo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setForwardTo*
  name: setForwardTo
  nameWithType: QueueDescription.setForwardTo
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setForwardTo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getForwardDeadLetteredMessagesTo*
  name: getForwardDeadLetteredMessagesTo
  nameWithType: QueueDescription.getForwardDeadLetteredMessagesTo
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getForwardDeadLetteredMessagesTo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setForwardDeadLetteredMessagesTo*
  name: setForwardDeadLetteredMessagesTo
  nameWithType: QueueDescription.setForwardDeadLetteredMessagesTo
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setForwardDeadLetteredMessagesTo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isEnablePartitioning*
  name: isEnablePartitioning
  nameWithType: QueueDescription.isEnablePartitioning
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isEnablePartitioning
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setEnablePartitioning*
  name: setEnablePartitioning
  nameWithType: QueueDescription.setEnablePartitioning
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setEnablePartitioning
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getUserMetadata*
  name: getUserMetadata
  nameWithType: QueueDescription.getUserMetadata
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getUserMetadata
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.setUserMetadata*
  name: setUserMetadata
  nameWithType: QueueDescription.setUserMetadata
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.setUserMetadata
  package: com.microsoft.azure.servicebus.management
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.servicebus.management.QueueDescription.equals*
  name: equals
  nameWithType: QueueDescription.equals
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.equals
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription.hashCode*
  name: hashCode
  nameWithType: QueueDescription.hashCode
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.hashCode
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.EntityStatus
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.EntityStatus.yml
  name: EntityStatus
  nameWithType: EntityStatus
  fullName: com.microsoft.azure.servicebus.management.EntityStatus
  type: Enum
  summary: "<p>The status of the messaging entity. </p>"
  syntax:
    content: public enum EntityStatus
- uid: com.microsoft.azure.servicebus.management.EntityStatus.Active
  parent: com.microsoft.azure.servicebus.management.EntityStatus
  href: com.microsoft.azure.servicebus.management.EntityStatus.yml
  name: Active
  nameWithType: EntityStatus.Active
  fullName: com.microsoft.azure.servicebus.management.EntityStatus.Active
  type: Field
  summary: "<p>The entity is active. </p>"
  syntax:
    content: public Active=(0)
- uid: com.microsoft.azure.servicebus.management.AuthorizationRule
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.AuthorizationRule.yml
  name: AuthorizationRule
  nameWithType: AuthorizationRule
  fullName: com.microsoft.azure.servicebus.management.AuthorizationRule
  type: Class
  syntax:
    content: public class AuthorizationRule
- uid: com.microsoft.azure.servicebus.IMessage.getMessageId()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getMessageId()
  nameWithType: IMessage.getMessageId()
  fullName: com.microsoft.azure.servicebus.IMessage.getMessageId()
  type: Method
  summary: "<p>Gets the Id of this message.</p>\r\n<p>The message identifier is an application-defined value that uniquely identifies the message and its payload. The identifier is a free-form string and can reflect a GUID or an identifier derived from the application context. If enabled, the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection\">duplicate detection</a> feature identifies and removes second and further submissions of messages with the same MessageId.</p>\r\n<p></p>"
  syntax:
    content: public String getMessageId()
    return:
      type: "26831127"
      description: <p>Id of this message </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  name: getDuplicationDetectionHistoryTimeWindow()
  nameWithType: QueueDescription.getDuplicationDetectionHistoryTimeWindow()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow()
  type: Method
  syntax: *o1
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  name: isRequiresDuplicateDetection()
  nameWithType: QueueDescription.isRequiresDuplicateDetection()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isRequiresDuplicateDetection()
  type: Method
  summary: "<p>If enabled, duplicate messages having same <xref uid=\"com.microsoft.azure.servicebus.IMessage.getMessageId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getMessageId()\"></xref> and sent to queue within duration of <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription.getDuplicationDetectionHistoryTimeWindow()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getDuplicationDetectionHistoryTimeWindow\"></xref> will be discarded. </p>"
  syntax: *o2
- uid: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getTimeToLive()
  nameWithType: IMessage.getTimeToLive()
  fullName: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  type: Method
  summary: "<p>Gets the duration before this message expires.</p>\r\n<p>This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid=\"com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getEnqueuedTimeUtc\"></xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.</p>\r\n<p></p>"
  syntax:
    content: public Duration getTimeToLive()
    return:
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
- uid: com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  name: getDefaultMessageTimeToLive()
  nameWithType: QueueDescription.getDefaultMessageTimeToLive()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.getDefaultMessageTimeToLive()
  type: Method
  summary: "<p>Time-To-Live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getTimeToLive()\"></xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages. </p>"
  syntax: *o3
- uid: com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration()
  parent: com.microsoft.azure.servicebus.management.QueueDescription
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  name: isEnableDeadLetteringOnMessageExpiration()
  nameWithType: QueueDescription.isEnableDeadLetteringOnMessageExpiration()
  fullName: com.microsoft.azure.servicebus.management.QueueDescription.isEnableDeadLetteringOnMessageExpiration()
  type: Method
  summary: "<p>Indicates whether this queue has dead letter support when a message expires. </p>"
  syntax: *o4
- uid: com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK
  parent: com.microsoft.azure.servicebus.ReceiveMode
  href: com.microsoft.azure.servicebus.ReceiveMode.yml
  name: PEEKLOCK
  nameWithType: ReceiveMode.PEEKLOCK
  fullName: com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK
  type: Field
  summary: "<p>In this mode, received message is not deleted from the queue or subscription, instead it is temporarily locked to the receiver, making it invisible to other receivers. Then the service waits for one of the three events <ul><li><p>If the receiver processes the message successfully, it calls  and the message will be deleted. </p></li><li><p>If the receiver decides that it can't process the message successfully, it calls  and the message will be unlocked and made available to other receivers. </p></li><li><p>If the receiver wants to defer the processing of the message to a later point in time, it calls  and the message will be deferred. A deferred can only be received by its sequence number. </p></li><li><p>If the receiver wants to dead-letter the message, it calls  and the message will be moved to a special sub-queue called deadletter queue. </p></li><li><p>If the receiver calls neither of these methods within a configurable period of time (by default, 60 seconds), the service assumes the receiver has failed. In this case, it behaves as if the receiver had called , making the message available to other receivers </p></li></ul></p>"
  syntax:
    content: public PEEKLOCK
