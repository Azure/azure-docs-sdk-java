### YamlMime:JavaMember
uid: "com.azure.data.tables.TableServiceClient.setPropertiesWithResponse*"
fullName: "com.azure.data.tables.TableServiceClient.setPropertiesWithResponse"
name: "setPropertiesWithResponse"
nameWithType: "TableServiceClient.setPropertiesWithResponse"
members:
- uid: "com.azure.data.tables.TableServiceClient.setPropertiesWithResponse(com.azure.data.tables.models.TableServiceProperties,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.data.tables.TableServiceClient.setPropertiesWithResponse(TableServiceProperties tableServiceProperties, Duration timeout, Context context)"
  name: "setPropertiesWithResponse(TableServiceProperties tableServiceProperties, Duration timeout, Context context)"
  nameWithType: "TableServiceClient.setPropertiesWithResponse(TableServiceProperties tableServiceProperties, Duration timeout, Context context)"
  summary: "Sets the properties of an account's Table service, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules.\n\nThis operation is only supported on Azure Storage endpoints.\n\n**Code Samples**\n\nSets the properties of the account's Table service. Prints out the details of the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref>.\n\n```java\nTableServiceProperties myProperties = new TableServiceProperties()\n     .setHourMetrics(new TableServiceMetrics()\n         .setVersion(\"1.0\")\n         .setEnabled(true))\n     .setLogging(new TableServiceLogging()\n         .setAnalyticsVersion(\"1.0\")\n         .setReadLogged(true)\n         .setRetentionPolicy(new TableServiceRetentionPolicy()\n             .setEnabled(true)\n             .setDaysToRetain(5)));\n\n Response<Void> response = tableServiceClient.setPropertiesWithResponse(myProperties, Duration.ofSeconds(5),\n     new Context(\"key1\", \"value1\"));\n\n System.out.printf(\"Retrieved service properties successfully with status code: %d.\", response.getStatusCode());\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.data.tables.models.TableServiceProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceProperties\"></xref> to set."
    name: "tableServiceProperties"
    type: "<xref href=\"com.azure.data.tables.models.TableServiceProperties?alt=com.azure.data.tables.models.TableServiceProperties&text=TableServiceProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> that is passed through the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP pipeline\"></xref> during\n the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setPropertiesWithResponse(TableServiceProperties tableServiceProperties, Duration timeout, Context context)"
  returns:
    description: "The <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.tables"
artifact: com.azure:azure-data-tables:12.2.1
