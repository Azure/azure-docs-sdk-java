### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess"
fullName: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>"
name: "NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>"
nameWithType: "NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>"
summary: "The stage of the network rule definition allowing the direction and the access type to be specified."
syntax: "public static interface NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>"
methods:
- uid: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess.allowInbound()"
  fullName: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>.allowInbound()"
  name: "allowInbound()"
  nameWithType: "NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>.allowInbound()"
  summary: "Allows inbound traffic."
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup<ParentT> allowInbound()"
  desc: "Allows inbound traffic."
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup?alt=com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup&text=WithSourceAddressOrSecurityGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess.allowOutbound()"
  fullName: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>.allowOutbound()"
  name: "allowOutbound()"
  nameWithType: "NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>.allowOutbound()"
  summary: "Allows outbound traffic."
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup<ParentT> allowOutbound()"
  desc: "Allows outbound traffic."
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup?alt=com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup&text=WithSourceAddressOrSecurityGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess.denyInbound()"
  fullName: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>.denyInbound()"
  name: "denyInbound()"
  nameWithType: "NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>.denyInbound()"
  summary: "Blocks inbound traffic."
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup<ParentT> denyInbound()"
  desc: "Blocks inbound traffic."
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup?alt=com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup&text=WithSourceAddressOrSecurityGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess.denyOutbound()"
  fullName: "com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>.denyOutbound()"
  name: "denyOutbound()"
  nameWithType: "NetworkSecurityRule.DefinitionStages.WithDirectionAccess<ParentT>.denyOutbound()"
  summary: "Blocks outbound traffic."
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup<ParentT> denyOutbound()"
  desc: "Blocks outbound traffic."
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup?alt=com.microsoft.azure.management.network.NetworkSecurityRule.DefinitionStages.WithSourceAddressOrSecurityGroup&text=WithSourceAddressOrSecurityGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the stage of the parent definition to return to after attaching this definition"
  name: "ParentT"
desc: "The stage of the network rule definition allowing the direction and the access type to be specified."
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
