### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  id: IotHubTransport
  parent: com.microsoft.azure.sdk.iot.device.transport
  children:
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message,IotHubEventCallback,Object)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close(IotHubConnectionStatusChangeReason,Throwable)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getProtocol()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getReceiveThreadLock()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getSendThreadLock()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasCallbacksToExecute()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasMessagesToSend()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasReceivedMessagesToHandle()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.IotHubTransport(DeviceClientConfig,IotHubConnectionStatusChangeCallback)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isClosed()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished(String)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost(Throwable,String)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageReceived(IotHubTransportMessage,Throwable)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageSent(Message,Throwable)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(Collection<DeviceClientConfig>)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
  - com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: IotHubTransport
  nameWithType: IotHubTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 29
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Manages queueing of message sending, receiving and callbacks. Manages notifying users of connection status change updates </p>"
  syntax:
    content: public class IotHubTransport implements IotHubListener
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.device.transport.IotHubListener
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message,IotHubEventCallback,Object)
  id: addMessage(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 392
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Adds a message to the transport queue.</p>\r\n<p></p>"
  syntax:
    content: public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.Message
      description: <p>the message to be sent. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
      description: <p>the callback to be invoked when a response for the message is received. </p>
    - id: callbackContext
      type: "79317049"
      description: <p>the context to be passed in when the callback is invoked. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close(IotHubConnectionStatusChangeReason,Throwable)
  id: close(IotHubConnectionStatusChangeReason,Throwable)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: close(IotHubConnectionStatusChangeReason reason, Throwable cause)
  nameWithType: IotHubTransport.close(IotHubConnectionStatusChangeReason reason, Throwable cause)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close(IotHubConnectionStatusChangeReason reason, Throwable cause)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 339
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Closes all resources used to communicate with an IoT Hub. Once<code>close()Â \r\n    </code> is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing.</p>\r\n<p></p>"
  syntax:
    content: public void close(IotHubConnectionStatusChangeReason reason, Throwable cause)
    parameters:
    - id: reason
      type: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason
      description: <p>the reason to close this connection, to be reported over connection status change callback</p>
    - id: cause
      type: a04fafd7
      description: <p>the cause of why this connection is closing, to be reported over connection status change callback </p>
  exceptions:
  - type: 884c4cdf
    description: <p>if an error occurs in closing the transport. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getProtocol()
  id: getProtocol()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: getProtocol()
  nameWithType: IotHubTransport.getProtocol()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getProtocol()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getProtocol*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 423
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public IotHubClientProtocol getProtocol()
    return:
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getReceiveThreadLock()
  id: getReceiveThreadLock()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: getReceiveThreadLock()
  nameWithType: IotHubTransport.getReceiveThreadLock()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getReceiveThreadLock()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getReceiveThreadLock*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 111
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public Object getReceiveThreadLock()
    return:
      type: "79317049"
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getSendThreadLock()
  id: getSendThreadLock()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: getSendThreadLock()
  nameWithType: IotHubTransport.getSendThreadLock()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getSendThreadLock()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getSendThreadLock*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 106
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public Object getSendThreadLock()
    return:
      type: "79317049"
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
  id: handleMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: handleMessage()
  nameWithType: IotHubTransport.handleMessage()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 542
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub. </p>\r\n<p>If no message callback is set, the function will do nothing.</p>\r\n<p></p>"
  syntax:
    content: public void handleMessage()
  exceptions:
  - type: 884c4cdf
    description: <p>if the server could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasCallbacksToExecute()
  id: hasCallbacksToExecute()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: hasCallbacksToExecute()
  nameWithType: IotHubTransport.hasCallbacksToExecute()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasCallbacksToExecute()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasCallbacksToExecute*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 132
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public boolean hasCallbacksToExecute()
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasMessagesToSend()
  id: hasMessagesToSend()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: hasMessagesToSend()
  nameWithType: IotHubTransport.hasMessagesToSend()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasMessagesToSend()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasMessagesToSend*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 116
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public boolean hasMessagesToSend()
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasReceivedMessagesToHandle()
  id: hasReceivedMessagesToHandle()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: hasReceivedMessagesToHandle()
  nameWithType: IotHubTransport.hasReceivedMessagesToHandle()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasReceivedMessagesToHandle()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasReceivedMessagesToHandle*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 124
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public boolean hasReceivedMessagesToHandle()
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
  id: invokeCallbacks()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: invokeCallbacks()
  nameWithType: IotHubTransport.invokeCallbacks()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 513
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Invokes the callbacks for all completed requests. </p>"
  syntax:
    content: public void invokeCallbacks()
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.IotHubTransport(DeviceClientConfig,IotHubConnectionStatusChangeCallback)
  id: IotHubTransport(DeviceClientConfig,IotHubConnectionStatusChangeCallback)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: IotHubTransport(DeviceClientConfig defaultConfig, IotHubConnectionStatusChangeCallback deviceIOConnectionStatusChangeCallback)
  nameWithType: IotHubTransport.IotHubTransport(DeviceClientConfig defaultConfig, IotHubConnectionStatusChangeCallback deviceIOConnectionStatusChangeCallback)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.IotHubTransport(DeviceClientConfig defaultConfig, IotHubConnectionStatusChangeCallback deviceIOConnectionStatusChangeCallback)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.IotHubTransport*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 86
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Constructor for an IotHubTransport object with default values </p>"
  syntax:
    content: public IotHubTransport(DeviceClientConfig defaultConfig, IotHubConnectionStatusChangeCallback deviceIOConnectionStatusChangeCallback)
    parameters:
    - id: defaultConfig
      type: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
      description: <p>the config used for opening connections, retrieving retry policy, and checking protocol </p>
    - id: deviceIOConnectionStatusChangeCallback
      type: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback
  exceptions:
  - type: 3c87bd19
    description: <p>if defaultConfig is null </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isClosed()
  id: isClosed()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: isClosed()
  nameWithType: IotHubTransport.isClosed()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isClosed()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isClosed*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 140
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public boolean isClosed()
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
  id: isEmpty()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: isEmpty()
  nameWithType: IotHubTransport.isEmpty()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 572
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Returns<code>trueÂ \r\n    </code> if the transport has no more messages to handle, and<code>falseÂ \r\n    </code> otherwise.</p>\r\n<p></p>"
  syntax:
    content: public boolean isEmpty()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>trueÂ 

            </code> if the transport has no more messages to handle, and<code>falseÂ 

            </code> otherwise. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished(String)
  id: onConnectionEstablished(String)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: onConnectionEstablished(String connectionId)
  nameWithType: IotHubTransport.onConnectionEstablished(String connectionId)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished(String connectionId)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 265
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Callback to be fired when the connection has been successfully established </p>"
  syntax:
    content: public void onConnectionEstablished(String connectionId)
    parameters:
    - id: connectionId
      type: "26831127"
      description: <p>the id of the connection this update is relevant to </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionEstablished(String)
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost(Throwable,String)
  id: onConnectionLost(Throwable,String)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: onConnectionLost(Throwable e, String connectionId)
  nameWithType: IotHubTransport.onConnectionLost(Throwable e, String connectionId)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost(Throwable e, String connectionId)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 226
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Callback to be fired when connection has been lost </p>"
  syntax:
    content: public void onConnectionLost(Throwable e, String connectionId)
    parameters:
    - id: e
      type: a04fafd7
      description: <p>the cause of the connection loss </p>
    - id: connectionId
      type: "26831127"
      description: <p>the id of the connection this update is relevant to </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionLost(Throwable,String)
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageReceived(IotHubTransportMessage,Throwable)
  id: onMessageReceived(IotHubTransportMessage,Throwable)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: onMessageReceived(IotHubTransportMessage message, Throwable e)
  nameWithType: IotHubTransport.onMessageReceived(IotHubTransportMessage message, Throwable e)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageReceived(IotHubTransportMessage message, Throwable e)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageReceived*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 202
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Callback to be fired when a transport message has been received. </p>"
  syntax:
    content: public void onMessageReceived(IotHubTransportMessage message, Throwable e)
    parameters:
    - id: transportMessage
      type: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
      description: <p>The message that was received. May be null if e is not null </p>
    - id: e
      type: a04fafd7
      description: <p>the exception that was encountered while receiving messages. May be null if transportMessage is not null </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageReceived(IotHubTransportMessage,Throwable)
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageSent(Message,Throwable)
  id: onMessageSent(Message,Throwable)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: onMessageSent(Message message, Throwable e)
  nameWithType: IotHubTransport.onMessageSent(Message message, Throwable e)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageSent(Message message, Throwable e)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageSent*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 146
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Callback to be fired when a message that the transport client sent has been acknowledged by Iot Hub </p>"
  syntax:
    content: public void onMessageSent(Message message, Throwable e)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.Message
      description: <p>The message that was acknowledged </p>
    - id: e
      type: a04fafd7
      description: <p>Null if the message was successfully acknowledged. Otherwise, this exception communicates if the message should be resent at all </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageSent(Message,Throwable)
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(Collection<DeviceClientConfig>)
  id: open(Collection<DeviceClientConfig>)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: open(Collection<DeviceClientConfig> deviceClientConfigs)
  nameWithType: IotHubTransport.open(Collection<DeviceClientConfig> deviceClientConfigs)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(Collection<DeviceClientConfig> deviceClientConfigs)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 289
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing.</p>\r\n<p>If reconnection is occurring when this is called, this function shall block and wait for the reconnection to finish before trying to open the connection</p>\r\n<p></p>"
  syntax:
    content: public void open(Collection<DeviceClientConfig> deviceClientConfigs)
    parameters:
    - id: deviceClientConfigs
      type: 12ebb11acom.microsoft.azure.sdk.iot.device.DeviceClientConfiga08ddfce
      description: <p>the configs for the devices to open</p>
  exceptions:
  - type: 884c4cdf
    description: <p>if a communication channel cannot be established. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)
  id: registerConnectionStateCallback(IotHubConnectionStateCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  nameWithType: IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 589
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Registers a callback to be executed whenever the connection to the IoT Hub is lost or established.</p>\r\n<p></p>"
  syntax:
    content: public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
      description: <p>the callback to be called. </p>
    - id: callbackContext
      type: "79317049"
      description: >-
        <p>a context to be passed to the callback. Can be <code>nullÂ 

            </code> if no callback is provided. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
  id: registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  nameWithType: IotHubTransport.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStatusChangeCallback*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 608
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Registers a callback to be executed whenever the connection status to the IoT Hub has changed.</p>\r\n<p></p>"
  syntax:
    content: public void registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback
      description: <p>the callback to be called. Can be null if callbackContext is not null </p>
    - id: callbackContext
      type: "79317049"
      description: >-
        <p>a context to be passed to the callback. Can be<code>nullÂ 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
  id: sendMessages()
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.yml
  langs:
  - java
  name: sendMessages()
  nameWithType: IotHubTransport.sendMessages()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
  overload: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
    startLine: 433
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: "<p>Sends all messages on the transport queue. If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt. </p>"
  syntax:
    content: public void sendMessages()
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.IotHubTransport*
  name: IotHubTransport
  nameWithType: IotHubTransport.IotHubTransport
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.IotHubTransport
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getSendThreadLock*
  name: getSendThreadLock
  nameWithType: IotHubTransport.getSendThreadLock
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getSendThreadLock
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getReceiveThreadLock*
  name: getReceiveThreadLock
  nameWithType: IotHubTransport.getReceiveThreadLock
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getReceiveThreadLock
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasMessagesToSend*
  name: hasMessagesToSend
  nameWithType: IotHubTransport.hasMessagesToSend
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasMessagesToSend
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasReceivedMessagesToHandle*
  name: hasReceivedMessagesToHandle
  nameWithType: IotHubTransport.hasReceivedMessagesToHandle
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasReceivedMessagesToHandle
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasCallbacksToExecute*
  name: hasCallbacksToExecute
  nameWithType: IotHubTransport.hasCallbacksToExecute
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.hasCallbacksToExecute
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isClosed*
  name: isClosed
  nameWithType: IotHubTransport.isClosed
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isClosed
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: a04fafd7
  spec.java:
  - name: Throwable
    fullName: Throwable
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageSent*
  name: onMessageSent
  nameWithType: IotHubTransport.onMessageSent
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageSent
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageReceived*
  name: onMessageReceived
  nameWithType: IotHubTransport.onMessageReceived
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onMessageReceived
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost*
  name: onConnectionLost
  nameWithType: IotHubTransport.onConnectionLost
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished*
  name: onConnectionEstablished
  nameWithType: IotHubTransport.onConnectionEstablished
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: 884c4cdf
  spec.java:
  - name: DeviceClientException
    fullName: DeviceClientException
- uid: 12ebb11acom.microsoft.azure.sdk.iot.device.DeviceClientConfiga08ddfce
  spec.java:
  - name: Collection<
    fullName: Collection<
  - uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    name: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    href: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open*
  name: open
  nameWithType: IotHubTransport.open
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close*
  name: close
  nameWithType: IotHubTransport.close
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage*
  name: addMessage
  nameWithType: IotHubTransport.addMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getProtocol*
  name: getProtocol
  nameWithType: IotHubTransport.getProtocol
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.getProtocol
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages*
  name: sendMessages
  nameWithType: IotHubTransport.sendMessages
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks*
  name: invokeCallbacks
  nameWithType: IotHubTransport.invokeCallbacks
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage*
  name: handleMessage
  nameWithType: IotHubTransport.handleMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty*
  name: isEmpty
  nameWithType: IotHubTransport.isEmpty
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback*
  name: registerConnectionStateCallback
  nameWithType: IotHubTransport.registerConnectionStateCallback
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStatusChangeCallback*
  name: registerConnectionStatusChangeCallback
  nameWithType: IotHubTransport.registerConnectionStatusChangeCallback
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStatusChangeCallback
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.yml
  name: IotHubListener
  nameWithType: IotHubListener
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  type: Interface
  summary: "<p>Callback interface for communicating connection and message status updates from individual protocol clients (mqtt, https, amqps) to the Tranpsort layer that handles queueing of messages and connecting/reconnecting/disconnecting </p>"
  syntax:
    content: public interface IotHubListener
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus.yml
  name: IotHubConnectionStatus
  nameWithType: IotHubConnectionStatus
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus
  type: Enum
  syntax:
    content: public enum IotHubConnectionStatus
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.yml
  name: IotHubTransportConnection
  nameWithType: IotHubTransportConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection
  type: Interface
  summary: "<p>Interface of what all a Transport Connection object must do. Serves to decouple the Message Queueing of the Transport layer from the protocol specific details of the Connection layer. </p>"
  syntax:
    content: public interface IotHubTransportConnection
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.yml
  name: IotHubTransportPacket
  nameWithType: IotHubTransportPacket
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket
  type: Class
  summary: "<p>A packet containing the data needed for an IoT Hub transport to send a message. </p>"
  syntax:
    content: public class IotHubTransportPacket
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage.yml
  name: IotHubTransportMessage
  nameWithType: IotHubTransportMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
  type: Class
  summary: "<p>Extends Message, adding transport artifacts. </p>"
  syntax:
    content: public class IotHubTransportMessage
- uid: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback.yml
  name: IotHubConnectionStateCallback
  nameWithType: IotHubConnectionStateCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
  type: Interface
  summary: "<p>An interface for an IoT Hub connection state callback.</p>\r\n<p>Developers are expected to create an implementation of this interface, and the transport will call <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IotHubConnectionStateCallback#execute(IotHubConnectionState, Object)\"></xref> passing in the connection status (down, success, etc.). </p>"
  syntax:
    content: public interface IotHubConnectionStateCallback
- uid: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback.yml
  name: IotHubConnectionStatusChangeCallback
  nameWithType: IotHubConnectionStatusChangeCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback
  type: Interface
  summary: "<p>Callback interface for allowing users to respond to changes in the connectivity of this sdk to Iot Hub. </p>"
  syntax:
    content: public interface IotHubConnectionStatusChangeCallback
- uid: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device.DeviceClientConfig.yml
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  type: Class
  summary: "<p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>"
  syntax:
    content: public class DeviceClientConfig
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageSent(Message,Throwable)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.yml
  name: onMessageSent(Message message, Throwable e)
  nameWithType: IotHubListener.onMessageSent(Message message, Throwable e)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageSent(Message message, Throwable e)
  type: Method
  summary: "<p>Callback to be fired when a message that the transport client sent has been acknowledged by Iot Hub </p>"
  syntax:
    content: public void onMessageSent(Message message, Throwable e)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device.Message
      description: <p>The message that was acknowledged </p>
    - id: e
      type: a04fafd7
      description: <p>Null if the message was successfully acknowledged. Otherwise, this exception communicates if the message should be resent at all </p>
- uid: com.microsoft.azure.sdk.iot.device.Message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device.Message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageReceived(IotHubTransportMessage,Throwable)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.yml
  name: onMessageReceived(IotHubTransportMessage transportMessage, Throwable e)
  nameWithType: IotHubListener.onMessageReceived(IotHubTransportMessage transportMessage, Throwable e)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageReceived(IotHubTransportMessage transportMessage, Throwable e)
  type: Method
  summary: "<p>Callback to be fired when a transport message has been received. </p>"
  syntax:
    content: public void onMessageReceived(IotHubTransportMessage transportMessage, Throwable e)
    parameters:
    - id: transportMessage
      type: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
      description: <p>The message that was received. May be null if e is not null </p>
    - id: e
      type: a04fafd7
      description: <p>the exception that was encountered while receiving messages. May be null if transportMessage is not null </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionLost(Throwable,String)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.yml
  name: onConnectionLost(Throwable e, String connectionId)
  nameWithType: IotHubListener.onConnectionLost(Throwable e, String connectionId)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionLost(Throwable e, String connectionId)
  type: Method
  summary: "<p>Callback to be fired when connection has been lost </p>"
  syntax:
    content: public void onConnectionLost(Throwable e, String connectionId)
    parameters:
    - id: e
      type: a04fafd7
      description: <p>the cause of the connection loss </p>
    - id: connectionId
      type: "26831127"
      description: <p>the id of the connection this update is relevant to </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionEstablished(String)
  parent: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  href: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.yml
  name: onConnectionEstablished(String connectionId)
  nameWithType: IotHubListener.onConnectionEstablished(String connectionId)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionEstablished(String connectionId)
  type: Method
  summary: "<p>Callback to be fired when the connection has been successfully established </p>"
  syntax:
    content: public void onConnectionEstablished(String connectionId)
    parameters:
    - id: connectionId
      type: "26831127"
      description: <p>the id of the connection this update is relevant to </p>
- uid: com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException
  parent: com.microsoft.azure.sdk.iot.device.exceptions
  href: com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException.yml
  name: DeviceClientException
  nameWithType: DeviceClientException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.DeviceClientException
  type: Class
  syntax:
    content: public class DeviceClientException
- uid: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason.yml
  name: IotHubConnectionStatusChangeReason
  nameWithType: IotHubConnectionStatusChangeReason
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason
  type: Enum
  syntax:
    content: public enum IotHubConnectionStatusChangeReason
- uid: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device.IotHubEventCallback.yml
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  type: Interface
  summary: "<p>An interface for an IoT Hub event callback.</p>\r\n<p>Developers are expected to create an implementation of this interface, and the transport will call <xref uid=\"com.microsoft.azure.sdk.iot.device.IotHubEventCallback.execute(IotHubStatusCode,Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IotHubEventCallback#execute(IotHubStatusCode, Object)\"></xref> upon receiving a response from an IoT Hub. </p>"
  syntax:
    content: public interface IotHubEventCallback
- uid: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol.yml
  name: IotHubClientProtocol
  nameWithType: IotHubClientProtocol
  fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
  type: Enum
  summary: "<p>The application-layer protocol used by the client to communicate with an IoT Hub. </p>"
  syntax:
    content: public enum IotHubClientProtocol
- uid: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  parent: com.microsoft.azure.sdk.iot.device.exceptions
  href: com.microsoft.azure.sdk.iot.device.exceptions.TransportException.yml
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  type: Class
  syntax:
    content: public class TransportException
