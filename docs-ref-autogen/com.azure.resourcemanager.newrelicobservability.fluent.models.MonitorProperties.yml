### YamlMime:JavaType
uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties"
fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties"
name: "MonitorProperties"
nameWithType: "MonitorProperties"
summary: "Properties specific to the New<wbr>Relic Monitor resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **MonitorProperties**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.MonitorProperties()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.MonitorProperties()"
  name: "MonitorProperties()"
  nameWithType: "MonitorProperties.MonitorProperties()"
  summary: "Creates an instance of Monitor<wbr>Properties class."
  syntax: "public MonitorProperties()"
  desc: "Creates an instance of MonitorProperties class."
methods:
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.accountCreationSource()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.accountCreationSource()"
  name: "accountCreationSource()"
  nameWithType: "MonitorProperties.accountCreationSource()"
  summary: "Get the account<wbr>Creation<wbr>Source property: Source of account creation."
  syntax: "public AccountCreationSource accountCreationSource()"
  desc: "Get the accountCreationSource property: Source of account creation."
  returns:
    description: "the accountCreationSource value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource&text=AccountCreationSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "MonitorProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Monitor<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MonitorProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the MonitorProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of MonitorProperties from the JsonReader."
  returns:
    description: "An instance of MonitorProperties if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.liftrResourceCategory()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.liftrResourceCategory()"
  name: "liftrResourceCategory()"
  nameWithType: "MonitorProperties.liftrResourceCategory()"
  summary: "Get the liftr<wbr>Resource<wbr>Category property: Liftr resource category."
  syntax: "public LiftrResourceCategories liftrResourceCategory()"
  desc: "Get the liftrResourceCategory property: Liftr resource category."
  returns:
    description: "the liftrResourceCategory value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.LiftrResourceCategories?alt=com.azure.resourcemanager.newrelicobservability.models.LiftrResourceCategories&text=LiftrResourceCategories\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.liftrResourcePreference()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.liftrResourcePreference()"
  name: "liftrResourcePreference()"
  nameWithType: "MonitorProperties.liftrResourcePreference()"
  summary: "Get the liftr<wbr>Resource<wbr>Preference property: Liftr resource preference."
  syntax: "public Integer liftrResourcePreference()"
  desc: "Get the liftrResourcePreference property: Liftr resource preference. The priority of the resource."
  returns:
    description: "the liftrResourcePreference value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.marketplaceSubscriptionId()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.marketplaceSubscriptionId()"
  name: "marketplaceSubscriptionId()"
  nameWithType: "MonitorProperties.marketplaceSubscriptionId()"
  summary: "Get the marketplace<wbr>Subscription<wbr>Id property: Marketplace Subscription Id."
  syntax: "public String marketplaceSubscriptionId()"
  desc: "Get the marketplaceSubscriptionId property: Marketplace Subscription Id."
  returns:
    description: "the marketplaceSubscriptionId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.marketplaceSubscriptionStatus()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.marketplaceSubscriptionStatus()"
  name: "marketplaceSubscriptionStatus()"
  nameWithType: "MonitorProperties.marketplaceSubscriptionStatus()"
  summary: "Get the marketplace<wbr>Subscription<wbr>Status property: New<wbr>Relic Organization properties of the resource."
  syntax: "public MarketplaceSubscriptionStatus marketplaceSubscriptionStatus()"
  desc: "Get the marketplaceSubscriptionStatus property: NewRelic Organization properties of the resource."
  returns:
    description: "the marketplaceSubscriptionStatus value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MarketplaceSubscriptionStatus?alt=com.azure.resourcemanager.newrelicobservability.models.MarketplaceSubscriptionStatus&text=MarketplaceSubscriptionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.monitoringStatus()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.monitoringStatus()"
  name: "monitoringStatus()"
  nameWithType: "MonitorProperties.monitoringStatus()"
  summary: "Get the monitoring<wbr>Status property: Monitoring<wbr>Status of the resource."
  syntax: "public MonitoringStatus monitoringStatus()"
  desc: "Get the monitoringStatus property: MonitoringStatus of the resource."
  returns:
    description: "the monitoringStatus value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MonitoringStatus?alt=com.azure.resourcemanager.newrelicobservability.models.MonitoringStatus&text=MonitoringStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.newRelicAccountProperties()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.newRelicAccountProperties()"
  name: "newRelicAccountProperties()"
  nameWithType: "MonitorProperties.newRelicAccountProperties()"
  summary: "Get the new<wbr>Relic<wbr>Account<wbr>Properties property: Marketplace<wbr>Subscription<wbr>Status of the resource."
  syntax: "public NewRelicAccountProperties newRelicAccountProperties()"
  desc: "Get the newRelicAccountProperties property: MarketplaceSubscriptionStatus of the resource."
  returns:
    description: "the newRelicAccountProperties value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.NewRelicAccountProperties?alt=com.azure.resourcemanager.newrelicobservability.models.NewRelicAccountProperties&text=NewRelicAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.orgCreationSource()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.orgCreationSource()"
  name: "orgCreationSource()"
  nameWithType: "MonitorProperties.orgCreationSource()"
  summary: "Get the org<wbr>Creation<wbr>Source property: Source of org creation."
  syntax: "public OrgCreationSource orgCreationSource()"
  desc: "Get the orgCreationSource property: Source of org creation."
  returns:
    description: "the orgCreationSource value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource&text=OrgCreationSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.planData()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.planData()"
  name: "planData()"
  nameWithType: "MonitorProperties.planData()"
  summary: "Get the plan<wbr>Data property: Plan details."
  syntax: "public PlanData planData()"
  desc: "Get the planData property: Plan details."
  returns:
    description: "the planData value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PlanData?alt=com.azure.resourcemanager.newrelicobservability.models.PlanData&text=PlanData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "MonitorProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning State of the resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning State of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.ProvisioningState?alt=com.azure.resourcemanager.newrelicobservability.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.saaSAzureSubscriptionStatus()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.saaSAzureSubscriptionStatus()"
  name: "saaSAzureSubscriptionStatus()"
  nameWithType: "MonitorProperties.saaSAzureSubscriptionStatus()"
  summary: "Get the saa<wbr>SAzure<wbr>Subscription<wbr>Status property: Status of Azure Subscription where Marketplace SaaS is located."
  syntax: "public String saaSAzureSubscriptionStatus()"
  desc: "Get the saaSAzureSubscriptionStatus property: Status of Azure Subscription where Marketplace SaaS is located."
  returns:
    description: "the saaSAzureSubscriptionStatus value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.subscriptionState()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.subscriptionState()"
  name: "subscriptionState()"
  nameWithType: "MonitorProperties.subscriptionState()"
  summary: "Get the subscription<wbr>State property: State of the Azure Subscription containing the monitor resource."
  syntax: "public String subscriptionState()"
  desc: "Get the subscriptionState property: State of the Azure Subscription containing the monitor resource."
  returns:
    description: "the subscriptionState value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "MonitorProperties.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.userInfo()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.userInfo()"
  name: "userInfo()"
  nameWithType: "MonitorProperties.userInfo()"
  summary: "Get the user<wbr>Info property: User Info."
  syntax: "public UserInfo userInfo()"
  desc: "Get the userInfo property: User Info."
  returns:
    description: "the userInfo value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.UserInfo?alt=com.azure.resourcemanager.newrelicobservability.models.UserInfo&text=UserInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.validate()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.validate()"
  name: "validate()"
  nameWithType: "MonitorProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withAccountCreationSource(com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withAccountCreationSource(AccountCreationSource accountCreationSource)"
  name: "withAccountCreationSource(AccountCreationSource accountCreationSource)"
  nameWithType: "MonitorProperties.withAccountCreationSource(AccountCreationSource accountCreationSource)"
  summary: "Set the account<wbr>Creation<wbr>Source property: Source of account creation."
  parameters:
  - description: "the accountCreationSource value to set."
    name: "accountCreationSource"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource&text=AccountCreationSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorProperties withAccountCreationSource(AccountCreationSource accountCreationSource)"
  desc: "Set the accountCreationSource property: Source of account creation."
  returns:
    description: "the MonitorProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withNewRelicAccountProperties(com.azure.resourcemanager.newrelicobservability.models.NewRelicAccountProperties)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withNewRelicAccountProperties(NewRelicAccountProperties newRelicAccountProperties)"
  name: "withNewRelicAccountProperties(NewRelicAccountProperties newRelicAccountProperties)"
  nameWithType: "MonitorProperties.withNewRelicAccountProperties(NewRelicAccountProperties newRelicAccountProperties)"
  summary: "Set the new<wbr>Relic<wbr>Account<wbr>Properties property: Marketplace<wbr>Subscription<wbr>Status of the resource."
  parameters:
  - description: "the newRelicAccountProperties value to set."
    name: "newRelicAccountProperties"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.NewRelicAccountProperties?alt=com.azure.resourcemanager.newrelicobservability.models.NewRelicAccountProperties&text=NewRelicAccountProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorProperties withNewRelicAccountProperties(NewRelicAccountProperties newRelicAccountProperties)"
  desc: "Set the newRelicAccountProperties property: MarketplaceSubscriptionStatus of the resource."
  returns:
    description: "the MonitorProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withOrgCreationSource(com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withOrgCreationSource(OrgCreationSource orgCreationSource)"
  name: "withOrgCreationSource(OrgCreationSource orgCreationSource)"
  nameWithType: "MonitorProperties.withOrgCreationSource(OrgCreationSource orgCreationSource)"
  summary: "Set the org<wbr>Creation<wbr>Source property: Source of org creation."
  parameters:
  - description: "the orgCreationSource value to set."
    name: "orgCreationSource"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource&text=OrgCreationSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorProperties withOrgCreationSource(OrgCreationSource orgCreationSource)"
  desc: "Set the orgCreationSource property: Source of org creation."
  returns:
    description: "the MonitorProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withPlanData(com.azure.resourcemanager.newrelicobservability.models.PlanData)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withPlanData(PlanData planData)"
  name: "withPlanData(PlanData planData)"
  nameWithType: "MonitorProperties.withPlanData(PlanData planData)"
  summary: "Set the plan<wbr>Data property: Plan details."
  parameters:
  - description: "the planData value to set."
    name: "planData"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PlanData?alt=com.azure.resourcemanager.newrelicobservability.models.PlanData&text=PlanData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorProperties withPlanData(PlanData planData)"
  desc: "Set the planData property: Plan details."
  returns:
    description: "the MonitorProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withSaaSAzureSubscriptionStatus(java.lang.String)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withSaaSAzureSubscriptionStatus(String saaSAzureSubscriptionStatus)"
  name: "withSaaSAzureSubscriptionStatus(String saaSAzureSubscriptionStatus)"
  nameWithType: "MonitorProperties.withSaaSAzureSubscriptionStatus(String saaSAzureSubscriptionStatus)"
  summary: "Set the saa<wbr>SAzure<wbr>Subscription<wbr>Status property: Status of Azure Subscription where Marketplace SaaS is located."
  parameters:
  - description: "the saaSAzureSubscriptionStatus value to set."
    name: "saaSAzureSubscriptionStatus"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public MonitorProperties withSaaSAzureSubscriptionStatus(String saaSAzureSubscriptionStatus)"
  desc: "Set the saaSAzureSubscriptionStatus property: Status of Azure Subscription where Marketplace SaaS is located."
  returns:
    description: "the MonitorProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withSubscriptionState(java.lang.String)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withSubscriptionState(String subscriptionState)"
  name: "withSubscriptionState(String subscriptionState)"
  nameWithType: "MonitorProperties.withSubscriptionState(String subscriptionState)"
  summary: "Set the subscription<wbr>State property: State of the Azure Subscription containing the monitor resource."
  parameters:
  - description: "the subscriptionState value to set."
    name: "subscriptionState"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public MonitorProperties withSubscriptionState(String subscriptionState)"
  desc: "Set the subscriptionState property: State of the Azure Subscription containing the monitor resource."
  returns:
    description: "the MonitorProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withUserInfo(com.azure.resourcemanager.newrelicobservability.models.UserInfo)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties.withUserInfo(UserInfo userInfo)"
  name: "withUserInfo(UserInfo userInfo)"
  nameWithType: "MonitorProperties.withUserInfo(UserInfo userInfo)"
  summary: "Set the user<wbr>Info property: User Info."
  parameters:
  - description: "the userInfo value to set."
    name: "userInfo"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.UserInfo?alt=com.azure.resourcemanager.newrelicobservability.models.UserInfo&text=UserInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorProperties withUserInfo(UserInfo userInfo)"
  desc: "Set the userInfo property: User Info."
  returns:
    description: "the MonitorProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties specific to the NewRelic Monitor resource."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.newrelicobservability.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-newrelicobservability:1.2.0
