### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  id: FeedbackReceiver
  parent: com.microsoft.azure.sdk.iot.service
  children:
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.close()
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.closeAsync()
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String,String,String,IotHubServiceClientProtocol)
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String,String,String,IotHubServiceClientProtocol,String)
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.open()
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.openAsync()
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive()
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive(long)
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync()
  - com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync(long)
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: FeedbackReceiver
  nameWithType: FeedbackReceiver
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 20
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>FeedbackReceiver is a specialized receiver whose ReceiveAsync method returns a FeedbackBatch instead of a Message. </p>"
  syntax:
    content: public class FeedbackReceiver extends Receiver
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.service.Receiver
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: close()
  nameWithType: FeedbackReceiver.close()
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.close()
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.close*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 139
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Close AmqpReceive object</p>\r\n<p></p>"
  syntax:
    content: public void close()
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.closeAsync()
  id: closeAsync()
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: closeAsync()
  nameWithType: FeedbackReceiver.closeAsync()
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.closeAsync()
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.closeAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 222
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for close() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: db03ee24
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String,String,String,IotHubServiceClientProtocol)
  id: FeedbackReceiver(String,String,String,IotHubServiceClientProtocol)
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: FeedbackReceiver.FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 74
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Constructor to verify initialization parameters Create instance of AmqpReceive</p>\r\n<p></p>"
  syntax: &o1
    content: public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: hostName
      type: "26831127"
      description: <p>The iot hub host name </p>
    - id: userName
      type: "26831127"
      description: <p>The iot hub user name </p>
    - id: sasToken
      type: "26831127"
      description: <p>The iot hub SAS token for the given device </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: <p>protocol to be used </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  id: FeedbackReceiver(String,String,String,IotHubServiceClientProtocol,ProxyOptions)
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  nameWithType: FeedbackReceiver.FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 89
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Constructor to verify initialization parameters Create instance of AmqpReceive</p>\r\n<p></p>"
  syntax:
    content: public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
    parameters:
    - id: hostName
      type: "26831127"
      description: <p>The iot hub host name </p>
    - id: userName
      type: "26831127"
      description: <p>The iot hub user name </p>
    - id: sasToken
      type: "26831127"
      description: <p>The iot hub SAS token for the given device </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: <p>protocol to be used </p>
    - id: proxyOptions
      type: com.microsoft.azure.sdk.iot.service.ProxyOptions
      description: <p>the proxy options to tunnel through, if a proxy should be used. </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String,String,String,IotHubServiceClientProtocol,String)
  id: FeedbackReceiver(String,String,String,IotHubServiceClientProtocol,String)
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)
  nameWithType: FeedbackReceiver.FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 38
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Constructor to verify initialization parameters Create instance of AmqpReceive <xrefsect id=\"deprecated_1_deprecated000099\"><xreftitle>Deprecated</xreftitle><xrefdescription><p>As of release 1.1.15, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String,String,String,IotHubServiceClientProtocol)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\"></xref></p></xrefdescription></xrefsect></p>"
  syntax:
    content: public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)
    parameters:
    - id: hostName
      type: "26831127"
      description: <p>The iot hub host name </p>
    - id: userName
      type: "26831127"
      description: <p>The iot hub user name </p>
    - id: sasToken
      type: "26831127"
      description: <p>The iot hub SAS token for the given device </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: <p>The iot hub protocol name </p>
    - id: deviceId
      type: "26831127"
      description: <p>The device id </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: open()
  nameWithType: FeedbackReceiver.open()
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.open()
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.open*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 118
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Open AmqpReceive object</p>\r\n<p></p>"
  syntax:
    content: public void open()
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.openAsync()
  id: openAsync()
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: openAsync()
  nameWithType: FeedbackReceiver.openAsync()
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.openAsync()
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.openAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 199
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for open() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> openAsync()
    return:
      type: db03ee24
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive()
  id: receive()
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: receive()
  nameWithType: FeedbackReceiver.receive()
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive()
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 165
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Receive FeedbackBatch with default timeout</p>\r\n<p>This function is synchronized internally so that only one receive operation is allowed at a time. In order to do more receive operations at a time, you will need to instantiate another FeedbackReceiver instance.</p>\r\n<p></p>"
  syntax:
    content: public FeedbackBatch receive()
    return:
      type: com.microsoft.azure.sdk.iot.service.FeedbackBatch
      description: <p>The received FeedbackBatch object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
  - type: 8256ba40
    description: <p>This exception is thrown if the receive process has been interrupted </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive(long)
  id: receive(long)
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: receive(long timeoutMs)
  nameWithType: FeedbackReceiver.receive(long timeoutMs)
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive(long timeoutMs)
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 182
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Receive FeedbackBatch with specific timeout</p>\r\n<p>This function is synchronized internally so that only one receive operation is allowed at a time. In order to do more receive operations at a time, you will need to instantiate another FeedbackReceiver instance.</p>\r\n<p></p>"
  syntax:
    content: public FeedbackBatch receive(long timeoutMs)
    parameters:
    - id: timeoutMs
      type: 0364520f
      description: <p>The timeout in milliseconds </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.FeedbackBatch
      description: <p>The received FeedbackBatch object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input AmqpReceive object is null </p>
  - type: 8256ba40
    description: <p>This exception is thrown if the receive process has been interrupted </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync()
  id: receiveAsync()
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: receiveAsync()
  nameWithType: FeedbackReceiver.receiveAsync()
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync()
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 245
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for receive() operation with default timeout</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<FeedbackBatch> receiveAsync()
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.FeedbackBatcha08ddfce
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync(long)
  id: receiveAsync(long)
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  langs:
  - java
  name: receiveAsync(long timeoutMs)
  nameWithType: FeedbackReceiver.receiveAsync(long timeoutMs)
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync(long timeoutMs)
  overload: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java
    startLine: 257
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for receive() operation with specific timeout</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<FeedbackBatch> receiveAsync(long timeoutMs)
    parameters:
    - id: timeoutMs
      type: 0364520f
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.FeedbackBatcha08ddfce
      description: <p>The future object for the requested operation </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver*
  name: FeedbackReceiver
  nameWithType: FeedbackReceiver.FeedbackReceiver
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver
  package: com.microsoft.azure.sdk.iot.service
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.open*
  name: open
  nameWithType: FeedbackReceiver.open
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.open
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.close*
  name: close
  nameWithType: FeedbackReceiver.close
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.close
  package: com.microsoft.azure.sdk.iot.service
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive*
  name: receive
  nameWithType: FeedbackReceiver.receive
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receive
  package: com.microsoft.azure.sdk.iot.service
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.openAsync*
  name: openAsync
  nameWithType: FeedbackReceiver.openAsync
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.openAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.closeAsync*
  name: closeAsync
  nameWithType: FeedbackReceiver.closeAsync
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.closeAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: 9cdf14d0com.microsoft.azure.sdk.iot.service.FeedbackBatcha08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.sdk.iot.service.FeedbackBatch
    name: FeedbackBatch
    fullName: com.microsoft.azure.sdk.iot.service.FeedbackBatch
    href: com.microsoft.azure.sdk.iot.service.FeedbackBatch.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync*
  name: receiveAsync
  nameWithType: FeedbackReceiver.receiveAsync
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.Receiver
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.Receiver.yml
  name: Receiver
  nameWithType: Receiver
  fullName: com.microsoft.azure.sdk.iot.service.Receiver
  type: Class
  summary: "<p>A receiver is a class abstracting the methods to receive messages, in order to use it for multiple endpoints, e.g. feedback endpoint, \"alerts\" (i.e. D2C). </p>"
  syntax:
    content: public class Receiver
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.yml
  name: AmqpReceive
  nameWithType: AmqpReceive
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  type: Class
  summary: "<p>Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close methods and feedback received event. </p>"
  syntax:
    content: public class AmqpReceive implements AmqpFeedbackReceivedEvent
- uid: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol.yml
  name: IotHubServiceClientProtocol
  nameWithType: IotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  type: Enum
  summary: "<p>The application-layer protocol used by the service client to communicate with an IoT Hub. </p>"
  syntax:
    content: public enum IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String,String,String,IotHubServiceClientProtocol)
  parent: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  href: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.yml
  name: FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: FeedbackReceiver.FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  type: Constructor
  summary: "<p>Constructor to verify initialization parameters Create instance of AmqpReceive</p>\r\n<p></p>"
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.service.ProxyOptions
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.ProxyOptions.yml
  name: ProxyOptions
  nameWithType: ProxyOptions
  fullName: com.microsoft.azure.sdk.iot.service.ProxyOptions
  type: Class
  summary: "<p>The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK, but only if the proxy does not require authentication. </p>"
  syntax:
    content: public class ProxyOptions
- uid: com.microsoft.azure.sdk.iot.service.FeedbackBatch
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.FeedbackBatch.yml
  name: FeedbackBatch
  nameWithType: FeedbackBatch
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackBatch
  type: Class
  summary: "<p>Data structure for feedback messages received in Json array Provide getters and setters for batch properties and messages </p>"
  syntax:
    content: public class FeedbackBatch
