### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.commitBlockList*"
fullName: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.commitBlockList"
name: "commitBlockList"
nameWithType: "BlockBlobAsyncClient.commitBlockList"
members:
- uid: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.commitBlockList(java.util.List<java.lang.String>)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.commitBlockList(List<String> base64BlockIds)"
  name: "commitBlockList(List<String> base64BlockIds)"
  nameWithType: "BlockBlobAsyncClient.commitBlockList(List<String> base64BlockIds)"
  summary: "Writes a blob by specifying the list of block IDs that are to make up the blob. In order to be written as part of a blob, a block must have been successfully written to the server in a prior stageBlock operation. You can call commitBlockList to update a blob by uploading only those blocks that have changed, then committing the new and existing blocks together. Any blocks not specified in the block list and permanently deleted. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nclient.commitBlockList(Collections.singletonList(base64BlockID)).subscribe(response ->\n     System.out.printf(\"Committing block list completed. Last modified: %s%n\", response.getLastModified()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-block-list"
  parameters:
  - description: "A list of base64 encode <code>String</code>s that specifies the block IDs to be committed."
    name: "base64BlockIds"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<BlockBlobItem> commitBlockList(List<String> base64BlockIds)"
  returns:
    description: "A reactive response containing the information of the block blob."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlockBlobItem?alt=com.azure.storage.blob.models.BlockBlobItem&text=BlockBlobItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.commitBlockList(java.util.List<java.lang.String>,boolean)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.commitBlockList(List<String> base64BlockIds, boolean overwrite)"
  name: "commitBlockList(List<String> base64BlockIds, boolean overwrite)"
  nameWithType: "BlockBlobAsyncClient.commitBlockList(List<String> base64BlockIds, boolean overwrite)"
  summary: "Writes a blob by specifying the list of block IDs that are to make up the blob. In order to be written as part of a blob, a block must have been successfully written to the server in a prior stageBlock operation. You can call commitBlockList to update a blob by uploading only those blocks that have changed, then committing the new and existing blocks together. Any blocks not specified in the block list and permanently deleted. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nboolean overwrite = false; // Default behavior\n client.commitBlockList(Collections.singletonList(base64BlockID), overwrite).subscribe(response ->\n     System.out.printf(\"Committing block list completed. Last modified: %s%n\", response.getLastModified()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-block-list"
  parameters:
  - description: "A list of base64 encode <code>String</code>s that specifies the block IDs to be committed."
    name: "base64BlockIds"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Whether or not to overwrite, should data exist on the blob."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<BlockBlobItem> commitBlockList(List<String> base64BlockIds, boolean overwrite)"
  returns:
    description: "A reactive response containing the information of the block blob."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlockBlobItem?alt=com.azure.storage.blob.models.BlockBlobItem&text=BlockBlobItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
