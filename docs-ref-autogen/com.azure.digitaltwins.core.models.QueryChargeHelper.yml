### YamlMime:ManagedReference
items:
- uid: com.azure.digitaltwins.core.models.QueryChargeHelper
  id: QueryChargeHelper
  artifact: com.azure:azure-digitaltwins-core:1.0.0
  parent: com.azure.digitaltwins.core.models
  children:
  - com.azure.digitaltwins.core.models.QueryChargeHelper.<T>getQueryCharge(com.azure.core.http.rest.PagedResponse<T>)
  - com.azure.digitaltwins.core.models.QueryChargeHelper.QueryChargeHelper()
  langs:
  - java
  name: QueryChargeHelper
  nameWithType: QueryChargeHelper
  fullName: com.azure.digitaltwins.core.models.QueryChargeHelper
  type: Class
  package: com.azure.digitaltwins.core.models
  summary: A helper to extract the query charge from the query response. An Azure Digital Twins Query Unit (QU) is a unit of on-demand computation that's used to execute your Azure Digital Twins queries.
  syntax:
    content: public final class QueryChargeHelper
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.digitaltwins.core.models.QueryChargeHelper.<T>getQueryCharge(com.azure.core.http.rest.PagedResponse<T>)
  id: <T>getQueryCharge(com.azure.core.http.rest.PagedResponse<T>)
  artifact: com.azure:azure-digitaltwins-core:1.0.0
  parent: com.azure.digitaltwins.core.models.QueryChargeHelper
  langs:
  - java
  name: <T>getQueryCharge(PagedResponse<T> page)
  nameWithType: QueryChargeHelper.<T>getQueryCharge(PagedResponse<T> page)
  fullName: com.azure.digitaltwins.core.models.QueryChargeHelper.<T>getQueryCharge(PagedResponse<T> page)
  overload: com.azure.digitaltwins.core.models.QueryChargeHelper.getQueryCharge*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Extract the query-charge field from a page header.
  syntax:
    content: public static Float <T>getQueryCharge(PagedResponse<T> page)
    parameters:
    - id: page
      type: com.azure.core.http.rest.PagedResponse<T>
      description: The page that contains the query-charge header.
    return:
      type: java.lang.Float
      description: The query charge.
- uid: com.azure.digitaltwins.core.models.QueryChargeHelper.QueryChargeHelper()
  id: QueryChargeHelper()
  artifact: com.azure:azure-digitaltwins-core:1.0.0
  parent: com.azure.digitaltwins.core.models.QueryChargeHelper
  langs:
  - java
  name: QueryChargeHelper()
  nameWithType: QueryChargeHelper.QueryChargeHelper()
  fullName: com.azure.digitaltwins.core.models.QueryChargeHelper.QueryChargeHelper()
  overload: com.azure.digitaltwins.core.models.QueryChargeHelper.QueryChargeHelper*
  type: Constructor
  package: com.azure.digitaltwins.core.models
  syntax:
    content: public QueryChargeHelper()
references:
- uid: com.azure.digitaltwins.core.models.QueryChargeHelper.QueryChargeHelper*
  name: QueryChargeHelper
  nameWithType: QueryChargeHelper.QueryChargeHelper
  fullName: com.azure.digitaltwins.core.models.QueryChargeHelper.QueryChargeHelper
  package: com.azure.digitaltwins.core.models
- uid: com.azure.core.http.rest.PagedResponse<T>
  spec.java:
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: java.lang.Float
  spec.java:
  - uid: java.lang.Float
    name: Float
    fullName: java.lang.Float
- uid: com.azure.digitaltwins.core.models.QueryChargeHelper.getQueryCharge*
  name: <T>getQueryCharge
  nameWithType: QueryChargeHelper.<T>getQueryCharge
  fullName: com.azure.digitaltwins.core.models.QueryChargeHelper.<T>getQueryCharge
  package: com.azure.digitaltwins.core.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
