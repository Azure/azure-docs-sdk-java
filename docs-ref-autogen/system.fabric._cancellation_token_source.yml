### YamlMime:ManagedReference
items:
- uid: system.fabric._cancellation_token_source
  id: _cancellation_token_source
  parent: system.fabric
  children:
  - system.fabric._cancellation_token_source.cancel()
  - system.fabric._cancellation_token_source.CancellationTokenSource()
  - system.fabric._cancellation_token_source.getToken()
  - system.fabric._cancellation_token_source.isCancellationRequested()
  href: system.fabric._cancellation_token_source.yml
  langs:
  - java
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource
  fullName: system.fabric.CancellationTokenSource
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
    startLine: 6
  package: system.fabric
  summary: <p>A <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">CancellationTokenSource</xref> is used to create <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object and manage it. </p>
  syntax: &o1
    content: public class CancellationTokenSource
  inheritance:
  - java.lang.Object
- uid: system.fabric._cancellation_token_source.cancel()
  id: cancel()
  parent: system.fabric._cancellation_token_source
  href: system.fabric._cancellation_token_source.yml
  langs:
  - java
  name: cancel()
  nameWithType: CancellationTokenSource.cancel()
  fullName: void system.fabric.CancellationTokenSource.cancel()
  overload: system.fabric._cancellation_token_source.cancel*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
    startLine: 42
  package: system.fabric
  summary: <p>Requests cancel on the <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> being managed by this object. </p>
  syntax:
    content: public void cancel()
- uid: system.fabric._cancellation_token_source.CancellationTokenSource()
  id: CancellationTokenSource()
  parent: system.fabric._cancellation_token_source
  href: system.fabric._cancellation_token_source.yml
  langs:
  - java
  name: CancellationTokenSource()
  nameWithType: CancellationTokenSource.CancellationTokenSource()
  fullName: system.fabric.CancellationTokenSource.CancellationTokenSource()
  overload: system.fabric._cancellation_token_source.CancellationTokenSource*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
    startLine: 13
  package: system.fabric
  summary: <p>Initializes a new instance of the <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> class. </p>
  syntax:
    content: public CancellationTokenSource()
- uid: system.fabric._cancellation_token_source.getToken()
  id: getToken()
  parent: system.fabric._cancellation_token_source
  href: system.fabric._cancellation_token_source.yml
  langs:
  - java
  name: getToken()
  nameWithType: CancellationTokenSource.getToken()
  fullName: CancellationToken system.fabric.CancellationTokenSource.getToken()
  overload: system.fabric._cancellation_token_source.getToken*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
    startLine: 34
  package: system.fabric
  summary: >-
    <p>Returns the cancellation token which is being by this <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object.</p>

    <p></p>
  syntax:
    content: public CancellationToken getToken()
    return:
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref>

        </p>
- uid: system.fabric._cancellation_token_source.isCancellationRequested()
  id: isCancellationRequested()
  parent: system.fabric._cancellation_token_source
  href: system.fabric._cancellation_token_source.yml
  langs:
  - java
  name: isCancellationRequested()
  nameWithType: CancellationTokenSource.isCancellationRequested()
  fullName: boolean system.fabric.CancellationTokenSource.isCancellationRequested()
  overload: system.fabric._cancellation_token_source.isCancellationRequested*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
    startLine: 23
  package: system.fabric
  summary: >-
    <p>Gets whether cancellation has been requested for this <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>.</p>

    <p></p>
  syntax:
    content: public boolean isCancellationRequested()
    return:
      type: 4fc6e284
      description: <p>Whether cancellation has been requested for this <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>. </p>
references:
- uid: system.fabric._cancellation_token_source.CancellationTokenSource*
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource.CancellationTokenSource
  fullName: system.fabric.CancellationTokenSource.CancellationTokenSource
  package: system.fabric
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: system.fabric._cancellation_token_source.isCancellationRequested*
  name: isCancellationRequested
  nameWithType: CancellationTokenSource.isCancellationRequested
  fullName: boolean system.fabric.CancellationTokenSource.isCancellationRequested
  package: system.fabric
- uid: system.fabric._cancellation_token_source.getToken*
  name: getToken
  nameWithType: CancellationTokenSource.getToken
  fullName: CancellationToken system.fabric.CancellationTokenSource.getToken
  package: system.fabric
- uid: system.fabric._cancellation_token_source.cancel*
  name: cancel
  nameWithType: CancellationTokenSource.cancel
  fullName: void system.fabric.CancellationTokenSource.cancel
  package: system.fabric
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: system.fabric._cancellation_token_source
  parent: system.fabric
  href: system.fabric._cancellation_token_source.yml
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource
  fullName: system.fabric.CancellationTokenSource
  type: Class
  summary: <p>A <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">CancellationTokenSource</xref> is used to create <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object and manage it. </p>
  syntax: *o1
