### YamlMime:JavaType
uid: "com.azure.sdk.build.tool.util.AnnotationUtils"
fullName: "com.azure.sdk.build.tool.util.AnnotationUtils"
name: "AnnotationUtils"
nameWithType: "AnnotationUtils"
summary: "Utility class to check for annotations."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **AnnotationUtils**"
methods:
- uid: "com.azure.sdk.build.tool.util.AnnotationUtils.findCallsToAnnotatedMethod(java.lang.Class<? extends java.lang.annotation.Annotation>,java.util.stream.Stream<java.nio.file.Path>,java.util.Set<java.lang.String>,boolean)"
  fullName: "com.azure.sdk.build.tool.util.AnnotationUtils.findCallsToAnnotatedMethod(Class<? extends Annotation> annotation, Stream<Path> paths, Set<String> interestedPackages, boolean recursive)"
  name: "findCallsToAnnotatedMethod(Class<? extends Annotation> annotation, Stream<Path> paths, Set<String> interestedPackages, boolean recursive)"
  nameWithType: "AnnotationUtils.findCallsToAnnotatedMethod(Class<? extends Annotation> annotation, Stream<Path> paths, Set<String> interestedPackages, boolean recursive)"
  summary: "Returns a list of methods that call methods that are annotated with the given annotation."
  modifiers:
  - "static"
  parameters:
  - description: "The annotation on the method to look for."
    name: "annotation"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.lang.annotation.Annotation?alt=? extends java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The paths to scan."
    name: "paths"
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The packages that this scan should be limited to."
    name: "interestedPackages"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "If true, look for packages in the sub-directories of the given paths."
    name: "recursive"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Set<AnnotatedMethodCallerResult> findCallsToAnnotatedMethod(Class<? extends Annotation> annotation, Stream<Path> paths, Set<String> interestedPackages, boolean recursive)"
  desc: "Returns a list of methods that call methods that are annotated with the given annotation."
  returns:
    description: "A set of methods that call methods with the annotation."
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.sdk.build.tool.util.AnnotatedMethodCallerResult?alt=com.azure.sdk.build.tool.util.AnnotatedMethodCallerResult&text=AnnotatedMethodCallerResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.sdk.build.tool.util.AnnotationUtils.getAnnotation(java.lang.String,java.lang.ClassLoader)"
  fullName: "com.azure.sdk.build.tool.util.AnnotationUtils.getAnnotation(String name, ClassLoader classLoader)"
  name: "getAnnotation(String name, ClassLoader classLoader)"
  nameWithType: "AnnotationUtils.getAnnotation(String name, ClassLoader classLoader)"
  summary: "Returns the annotation class with the given name if found."
  modifiers:
  - "static"
  parameters:
  - description: "The name of the annotation to look for."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The class loader to use to load the annotation."
    name: "classLoader"
    type: "<xref href=\"java.lang.ClassLoader?alt=java.lang.ClassLoader&text=ClassLoader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Optional<Class<? extends Annotation>> getAnnotation(String name, ClassLoader classLoader)"
  desc: "Returns the annotation class with the given name if found."
  returns:
    description: "The annotation class if found, otherwise an empty optional."
    type: "<xref href=\"java.util.Optional?alt=java.util.Optional&text=Optional\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.lang.annotation.Annotation?alt=? extends java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.sdk.build.tool.util.AnnotationUtils.getCompleteClassLoader(java.util.stream.Stream<java.nio.file.Path>)"
  fullName: "com.azure.sdk.build.tool.util.AnnotationUtils.getCompleteClassLoader(Stream<Path> paths)"
  name: "getCompleteClassLoader(Stream<Path> paths)"
  nameWithType: "AnnotationUtils.getCompleteClassLoader(Stream<Path> paths)"
  summary: "Returns a classloader that contains all the given paths."
  modifiers:
  - "static"
  parameters:
  - description: "The paths to include in the classloader"
    name: "paths"
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ClassLoader getCompleteClassLoader(Stream<Path> paths)"
  desc: "Returns a classloader that contains all the given paths."
  returns:
    description: "The classloader that contains the given paths."
    type: "<xref href=\"java.lang.ClassLoader?alt=java.lang.ClassLoader&text=ClassLoader\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Utility class to check for annotations."
metadata: {}
package: "com.azure.sdk.build.tool.util"
artifact: com.azure.tools:azure-sdk-build-tool:1.0.0
