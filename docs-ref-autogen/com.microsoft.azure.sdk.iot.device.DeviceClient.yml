### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient
  id: DeviceClient
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device
  children:
  - com.microsoft.azure.sdk.iot.device.DeviceClient.CONNECTION_STRING_CHARSET
  - com.microsoft.azure.sdk.iot.device.DeviceClient.DEVICE_ID_ATTRIBUTE
  - com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient()
  - com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,java.lang.String,boolean,java.lang.String,boolean)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,javax.net.ssl.SSLContext)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.TransportClient)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.HOSTNAME_ATTRIBUTE
  - com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS
  - com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_AMQPS
  - com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_HTTPS
  - com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_MQTT
  - com.microsoft.azure.sdk.iot.device.DeviceClient.SEND_PERIOD_MILLIS
  - com.microsoft.azure.sdk.iot.device.DeviceClient.SHARED_ACCESS_KEY_ATTRIBUTE
  - com.microsoft.azure.sdk.iot.device.DeviceClient.SHARED_ACCESS_TOKEN_ATTRIBUTE
  - com.microsoft.azure.sdk.iot.device.DeviceClient.close()
  - com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow()
  - com.microsoft.azure.sdk.iot.device.DeviceClient.completeFileUploadAsync(com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.getDeviceTwin()
  - com.microsoft.azure.sdk.iot.device.DeviceClient.getFileUploadSasUri(com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.open()
  - com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStateCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.setMessageCallback(com.microsoft.azure.sdk.iot.device.MessageCallback,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.setOption(java.lang.String,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDeviceMethod(com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.DeviceClient.uploadToBlobAsync(java.lang.String,java.io.InputStream,long,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
  langs:
  - java
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub.


    To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages.


    The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only).


    The client supports HTTPS 1.1 and AMQPS 1.0 transports.
  syntax:
    content: public final class DeviceClient extends InternalClient implements Closeable
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.device.InternalClient
  implements:
  - java.io.Closeable
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.device.InternalClient.close()
  - com.microsoft.azure.sdk.iot.device.InternalClient.closeNow()
  - com.microsoft.azure.sdk.iot.device.InternalClient.getConfig()
  - com.microsoft.azure.sdk.iot.device.InternalClient.getProductInfo()
  - com.microsoft.azure.sdk.iot.device.InternalClient.open()
  - com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.InternalClient.sendEventAsync(com.microsoft.azure.sdk.iot.device.Message,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(java.util.Set<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>)
  - com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(java.util.Set<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>,int)
  - com.microsoft.azure.sdk.iot.device.InternalClient.setOperationTimeout(long)
  - com.microsoft.azure.sdk.iot.device.InternalClient.setOption(java.lang.String,java.lang.Object)
  - com.microsoft.azure.sdk.iot.device.InternalClient.setProxySettings(com.microsoft.azure.sdk.iot.device.ProxySettings)
  - com.microsoft.azure.sdk.iot.device.InternalClient.setRetryPolicy(com.microsoft.azure.sdk.iot.device.transport.RetryPolicy)
  - com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToDesiredProperties(java.util.Map<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair<com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack<java.lang.String,java.lang.Object>,java.lang.Object>>)
  - com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToTwinDesiredProperties(java.util.Map<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair<com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object>>)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.CONNECTION_STRING_CHARSET
  id: CONNECTION_STRING_CHARSET
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: CONNECTION_STRING_CHARSET
  nameWithType: DeviceClient.CONNECTION_STRING_CHARSET
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.CONNECTION_STRING_CHARSET
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static final Charset CONNECTION_STRING_CHARSET
    return:
      type: java.nio.charset.Charset
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DEVICE_ID_ATTRIBUTE
  id: DEVICE_ID_ATTRIBUTE
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: DEVICE_ID_ATTRIBUTE
  nameWithType: DeviceClient.DEVICE_ID_ATTRIBUTE
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DEVICE_ID_ATTRIBUTE
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static final String DEVICE_ID_ATTRIBUTE
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient()
  id: DeviceClient()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: DeviceClient()
  nameWithType: DeviceClient.DeviceClient()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient()
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: protected DeviceClient()
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)
  id: DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: DeviceClient(String connString, IotHubClientProtocol protocol)
  nameWithType: DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  summary: Constructor that takes a connection string as an argument.
  syntax:
    content: public DeviceClient(String connString, IotHubClientProtocol protocol)
    parameters:
    - id: connString
      type: java.lang.String
      description: >-
        the connection string. The connection string is a set
         of key-value pairs that are separated by ';', with the keys and values
         separated by '='. It should contain values for the following keys:
         <code>HostName</code>, <code>DeviceId</code>, and <code>SharedAccessKey</code>.
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
      description: the communication protocol used (i.e. HTTPS).
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)
  id: DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: DeviceClient(String connString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  summary: Constructor that takes a connection string as an argument.
  syntax:
    content: public DeviceClient(String connString, IotHubClientProtocol protocol, ClientOptions clientOptions)
    parameters:
    - id: connString
      type: java.lang.String
      description: >-
        the connection string. The connection string is a set
         of key-value pairs that are separated by ';', with the keys and values
         separated by '='. It should contain values for the following keys:
         <code>HostName</code>, <code>DeviceId</code>, and <code>SharedAccessKey</code>.
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
      description: the communication protocol used (i.e. HTTPS)
    - id: clientOptions
      type: com.microsoft.azure.sdk.iot.device.ClientOptions
      description: The options that allow configuration of the device client instance during initialization
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,java.lang.String,boolean,java.lang.String,boolean)
  id: DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,java.lang.String,boolean,java.lang.String,boolean)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: DeviceClient(String connString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  nameWithType: DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  summary: Constructor that uses x509 authentication for communicating with IotHub
  syntax:
    content: public DeviceClient(String connString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
    parameters:
    - id: connString
      type: java.lang.String
      description: 'the connection string for the x509 device to connect as (format: "HostName=...;DeviceId=...;x509=true")'
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
      description: the protocol to use when communicating with IotHub
    - id: publicKeyCertificate
      type: java.lang.String
      description: >-
        the PEM formatted public key certificate or the path to a PEM formatted public key certificate file.
                                     Append if there is any intermediate or chained certificates to the end of the public certificate file in the following format:
                                     -----BEGIN CERTIFICATE-----
                                     (Primary SSL certificate)
                                     -----END CERTIFICATE-----
                                     ----BEGIN CERTIFICATE-----
                                     (Intermediate certificate)
                                     -----END CERTIFICATE-----
                                     -----BEGIN CERTIFICATE-----
                                     (Root certificate)
                                     -----END CERTIFICATE-----
    - id: isCertificatePath
      type: boolean
      description: if the provided publicKeyCertificate is a path to a file containing the PEM formatted public key certificate
    - id: privateKey
      type: java.lang.String
      description: the PEM formatted private key or the path to a PEM formatted private key file
    - id: isPrivateKeyPath
      type: boolean
      description: if the provided privateKey is a path to a file containing the PEM formatted private key
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,javax.net.ssl.SSLContext)
  id: DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,javax.net.ssl.SSLContext)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext sslContext)
  nameWithType: DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext sslContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext sslContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  summary: Creates a device client that uses the provided SSLContext for SSL negotiation
  syntax:
    content: public DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext sslContext)
    parameters:
    - id: connString
      type: java.lang.String
      description: >-
        the connection string for the device. May be an x509 connection string (format: "HostName=...;DeviceId=...;x509=true")
                           and it may be a SAS connection string (format: "HostName=...;DeviceId=...;SharedAccessKey=..."). If
                           this connection string is an x509 connection string, the client will use the provided SSLContext for authentication.
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
      description: the protocol to use when communicating with IotHub
    - id: sslContext
      type: javax.net.ssl.SSLContext
      description: >-
        the ssl context that will be used during authentication. If the provided connection string does not contain
                           SAS based credentials, then the sslContext will be used for x509 authentication. If the provided connection string
                           does contain SAS based credentials, the sslContext will still be used during SSL negotiation.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.TransportClient)
  id: DeviceClient(java.lang.String,com.microsoft.azure.sdk.iot.device.TransportClient)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: DeviceClient(String connString, TransportClient transportClient)
  nameWithType: DeviceClient.DeviceClient(String connString, TransportClient transportClient)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connString, TransportClient transportClient)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  summary: Constructor that takes a connection string and a transport client as an argument.
  syntax:
    content: public DeviceClient(String connString, TransportClient transportClient)
    parameters:
    - id: connString
      type: java.lang.String
      description: >-
        the connection string. The connection string is a set
         of key-value pairs that are separated by ';', with the keys and values
         separated by '='. It should contain values for the following keys:
         <code>HostName</code>, <code>DeviceId</code>, and <code>SharedAccessKey</code>.
    - id: transportClient
      type: com.microsoft.azure.sdk.iot.device.TransportClient
      description: the transport client to use by the device client.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)
  id: DeviceClient(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: DeviceClient.DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device
  summary: Creates a device client that uses the provided security provider for authentication.
  syntax:
    content: private DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
    parameters:
    - id: uri
      type: java.lang.String
      description: 'The hostname of iot hub to connect to (format: "yourHubName.azure-devices.net")'
    - id: deviceId
      type: java.lang.String
      description: The id for the device to use
    - id: securityProvider
      type: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
      description: The security provider for the device
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
      description: The protocol the device shall use for communication to the IoT Hub
    - id: clientOptions
      type: com.microsoft.azure.sdk.iot.device.ClientOptions
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.HOSTNAME_ATTRIBUTE
  id: HOSTNAME_ATTRIBUTE
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: HOSTNAME_ATTRIBUTE
  nameWithType: DeviceClient.HOSTNAME_ATTRIBUTE
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.HOSTNAME_ATTRIBUTE
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static final String HOSTNAME_ATTRIBUTE
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS
  id: RECEIVE_PERIOD_MILLIS
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: RECEIVE_PERIOD_MILLIS
  nameWithType: DeviceClient.RECEIVE_PERIOD_MILLIS
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: protected long RECEIVE_PERIOD_MILLIS
    return:
      type: long
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_AMQPS
  id: RECEIVE_PERIOD_MILLIS_AMQPS
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: RECEIVE_PERIOD_MILLIS_AMQPS
  nameWithType: DeviceClient.RECEIVE_PERIOD_MILLIS_AMQPS
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_AMQPS
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static long RECEIVE_PERIOD_MILLIS_AMQPS
    return:
      type: long
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_HTTPS
  id: RECEIVE_PERIOD_MILLIS_HTTPS
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: RECEIVE_PERIOD_MILLIS_HTTPS
  nameWithType: DeviceClient.RECEIVE_PERIOD_MILLIS_HTTPS
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_HTTPS
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static long RECEIVE_PERIOD_MILLIS_HTTPS
    return:
      type: long
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_MQTT
  id: RECEIVE_PERIOD_MILLIS_MQTT
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: RECEIVE_PERIOD_MILLIS_MQTT
  nameWithType: DeviceClient.RECEIVE_PERIOD_MILLIS_MQTT
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_MQTT
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static long RECEIVE_PERIOD_MILLIS_MQTT
    return:
      type: long
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.SEND_PERIOD_MILLIS
  id: SEND_PERIOD_MILLIS
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: SEND_PERIOD_MILLIS
  nameWithType: DeviceClient.SEND_PERIOD_MILLIS
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.SEND_PERIOD_MILLIS
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static long SEND_PERIOD_MILLIS
    return:
      type: long
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.SHARED_ACCESS_KEY_ATTRIBUTE
  id: SHARED_ACCESS_KEY_ATTRIBUTE
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: SHARED_ACCESS_KEY_ATTRIBUTE
  nameWithType: DeviceClient.SHARED_ACCESS_KEY_ATTRIBUTE
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.SHARED_ACCESS_KEY_ATTRIBUTE
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static final String SHARED_ACCESS_KEY_ATTRIBUTE
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.SHARED_ACCESS_TOKEN_ATTRIBUTE
  id: SHARED_ACCESS_TOKEN_ATTRIBUTE
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: SHARED_ACCESS_TOKEN_ATTRIBUTE
  nameWithType: DeviceClient.SHARED_ACCESS_TOKEN_ATTRIBUTE
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.SHARED_ACCESS_TOKEN_ATTRIBUTE
  type: Field
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static final String SHARED_ACCESS_TOKEN_ATTRIBUTE
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.close()
  id: close()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: close()
  nameWithType: DeviceClient.close()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.close()
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.close*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Completes all current outstanding requests and closes the IoT Hub client. Must be called to terminate the background thread that is sending data to IoT Hub. After `closeNow()` is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing.
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
    description: if the connection to an IoT Hub cannot be closed.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow()
  id: closeNow()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: closeNow()
  nameWithType: DeviceClient.closeNow()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow()
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Closes the IoT Hub client by releasing any resources held by client. When closeNow is called all the messages that were in transit or pending to be sent will be informed to the user in the callbacks and any existing connection to IotHub will be closed. Must be called to terminate the background thread that is sending data to IoT Hub. After `closeNow()` is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing.
  syntax:
    content: public void closeNow()
  exceptions:
  - type: java.io.IOException
    description: if the connection to an IoT Hub cannot be closed.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.completeFileUploadAsync(com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification)
  id: completeFileUploadAsync(com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: completeFileUploadAsync(FileUploadCompletionNotification notification)
  nameWithType: DeviceClient.completeFileUploadAsync(FileUploadCompletionNotification notification)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.completeFileUploadAsync(FileUploadCompletionNotification notification)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.completeFileUploadAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    Notify IoT Hub that a file upload has been completed, successfully or otherwise. See [this documentation][] for more details.



    [this documentation]: https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-file-upload#notify-iot-hub-of-a-completed-file-upload
  syntax:
    content: public void completeFileUploadAsync(FileUploadCompletionNotification notification)
    parameters:
    - id: notification
      type: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification
      description: The notification details, including if the file upload succeeded.
  exceptions:
  - type: java.io.IOException
    description: If this HTTPS request fails to send.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)
  id: createFromSecurityProvider(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  nameWithType: DeviceClient.createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Creates a device client that uses the provided security provider for authentication.
  syntax:
    content: public static DeviceClient createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
    parameters:
    - id: uri
      type: java.lang.String
      description: 'The hostname of the iot hub to connect to (format: "yourHubName.azure-devices.net")'
    - id: deviceId
      type: java.lang.String
      description: The id for the device to use
    - id: securityProvider
      type: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
      description: The security provider for the device
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
      description: The protocol the device shall use for communication to the IoT Hub
    return:
      type: com.microsoft.azure.sdk.iot.device.DeviceClient
      description: The created device client instance
  exceptions:
  - type: java.net.URISyntaxException
    description: If the provided connString could not be parsed.
  - type: java.io.IOException
    description: If the provided connString could not be parsed.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)
  id: createFromSecurityProvider(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider,com.microsoft.azure.sdk.iot.device.IotHubClientProtocol,com.microsoft.azure.sdk.iot.device.ClientOptions)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: DeviceClient.createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Creates a device client that uses the provided security provider for authentication.
  syntax:
    content: public static DeviceClient createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
    parameters:
    - id: uri
      type: java.lang.String
      description: 'The hostname of the iot hub to connect to (format: "yourHubName.azure-devices.net")'
    - id: deviceId
      type: java.lang.String
      description: The id for the device to use
    - id: securityProvider
      type: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
      description: The security provider for the device
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
      description: The protocol the device shall use for communication to the IoT Hub
    - id: clientOptions
      type: com.microsoft.azure.sdk.iot.device.ClientOptions
      description: The options that allow configuration of the device client instance during initialization
    return:
      type: com.microsoft.azure.sdk.iot.device.DeviceClient
      description: The created device client instance
  exceptions:
  - type: java.net.URISyntaxException
    description: If the provided connString could not be parsed.
  - type: java.io.IOException
    description: If the provided connString could not be parsed.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.getDeviceTwin()
  id: getDeviceTwin()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: getDeviceTwin()
  nameWithType: DeviceClient.getDeviceTwin()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.getDeviceTwin()
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.getDeviceTwin*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Retrieves the twin's latest desired properties
  syntax:
    content: public void getDeviceTwin()
  exceptions:
  - type: java.io.IOException
    description: if the iothub cannot be reached
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.getFileUploadSasUri(com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest)
  id: getFileUploadSasUri(com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: getFileUploadSasUri(FileUploadSasUriRequest request)
  nameWithType: DeviceClient.getFileUploadSasUri(FileUploadSasUriRequest request)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.getFileUploadSasUri(FileUploadSasUriRequest request)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.getFileUploadSasUri*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    Get a file upload SAS URI which the Azure Storage SDK can use to upload a file to blob for this device. See [this documentation][] for more details.



    [this documentation]: https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-file-upload#initialize-a-file-upload
  syntax:
    content: public FileUploadSasUriResponse getFileUploadSasUri(FileUploadSasUriRequest request)
    parameters:
    - id: request
      type: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest
      description: The request details for getting the SAS URI, including the destination blob name.
    return:
      type: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriResponse
      description: The file upload details to be used with the Azure Storage SDK in order to upload a file from this device.
  exceptions:
  - type: java.io.IOException
    description: If this HTTPS request fails to send.
  - type: java.net.URISyntaxException
    description: If this HTTPS request fails to send.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.open()
  id: open()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: open()
  nameWithType: DeviceClient.open()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.open()
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.open*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Starts asynchronously sending and receiving messages from an IoT Hub. If the client is already open, the function shall do nothing.
  syntax:
    content: public void open()
  exceptions:
  - type: java.io.IOException
    description: if a connection to an IoT Hub cannot be established.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStateCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback,java.lang.Object)
  id: registerConnectionStateCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  nameWithType: DeviceClient.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStateCallback*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Registers a callback to be executed whenever the connection to the device is lost or established.
  syntax:
    content: public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
      description: the callback to be called.
    - id: callbackContext
      type: java.lang.Object
      description: >-
        a context to be passed to the callback. Can be
         <code>null</code> if no callback is provided.
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if the provided callback is null
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.setMessageCallback(com.microsoft.azure.sdk.iot.device.MessageCallback,java.lang.Object)
  id: setMessageCallback(com.microsoft.azure.sdk.iot.device.MessageCallback,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: setMessageCallback(MessageCallback callback, Object context)
  nameWithType: DeviceClient.setMessageCallback(MessageCallback callback, Object context)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.setMessageCallback(MessageCallback callback, Object context)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.setMessageCallback*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Sets the message callback.
  syntax:
    content: public DeviceClient setMessageCallback(MessageCallback callback, Object context)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device.MessageCallback
      description: the message callback. Can be <code>null</code>.
    - id: context
      type: java.lang.Object
      description: the context to be passed to the callback. Can be <code>null</code>.
    return:
      type: com.microsoft.azure.sdk.iot.device.DeviceClient
      description: itself, for fluent setting.
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: >-
      if the callback is <code>null</code> but a context is
       passed in.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.setOption(java.lang.String,java.lang.Object)
  id: setOption(java.lang.String,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: setOption(String optionName, Object value)
  nameWithType: DeviceClient.setOption(String optionName, Object value)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.setOption(String optionName, Object value)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.setOption*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: "Sets a runtime option identified by parameter `optionName` to `value`. The options that can be set via this API are: - **SetMinimumPollingInterval** \\- this option is applicable only when the transport configured with this client is HTTP. This option specifies the interval in milliseconds between calls to the service checking for availability of new messages. The value is expected to be of type `long`. - **SetSendInterval** \\- this option is applicable to all protocols. This value sets the period (in milliseconds) that this SDK spawns threads to send queued messages. Even if no message is queued, this thread will be spawned. - **SetReceiveInterval** \\- this option is applicable to all protocols in case of HTTPS protocol, this option acts the same as `SetMinimumPollingInterval` in case of MQTT and AMQP protocols, this option specifies the interval in millisecods between spawning a thread that dequeues a message from the SDK's queue of received messages. - **SetCertificatePath** \\- this option is applicable only when the transport configured with this client is AMQP. This option specifies the path to the certificate used to verify peer. The value is expected to be of type `String`. - **SetSASTokenExpiryTime** \\- this option is applicable for HTTP/ AMQP/MQTT. This option specifies the interval in seconds after which SASToken expires. If the transport is already open then setting this option will restart the transport with the updated expiry time, and will use that expiry time length for all subsequently generated sas tokens. The value is expected to be of type `long`. - **SetHttpsReadTimeout** \\- this option is applicable for HTTPS. This option specifies the read timeout in milliseconds per https request made by this client. By default, this value is 4 minutes. The value is expected to be of type `int`. - **SetHttpsConnectTimeout** \\- this option is applicable for HTTPS. This option specifies the connect timeout in milliseconds per https request made by this client. By default, this value is 0 (no connect timeout). The value is expected to be of type `int`."
  syntax:
    content: public void setOption(String optionName, Object value)
    parameters:
    - id: optionName
      type: java.lang.String
      description: the option name to modify
    - id: value
      type: java.lang.Object
      description: an object of the appropriate type for the option's value
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if the provided optionName is null
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack,java.lang.Object)
  id: startDeviceTwin(com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  nameWithType: DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    Starts the device twin. This device client will receive a callback with the current state of the full twin, including reported properties and desired properties. After that callback is received, this device client will receive a callback each time a desired property is updated. That callback will either contain the full desired properties set, or only the updated desired property depending on how the desired property was changed. IoT Hub supports a PUT and a PATCH on the twin. The PUT will cause this device client to receive the full desired properties set, and the PATCH will cause this device client to only receive the updated desired properties. Similarly, the version of each desired property will be incremented from a PUT call, and only the actually updated desired property will have its version incremented from a PATCH call. The java service client library uses the PATCH call when updated desired properties, but it builds the patch such that all properties are included in the patch. As a result, the device side will receive full twin updates, not partial updates. See [PUT][] and [PATCH][]



    [PUT]: https://docs.microsoft.com/en-us/rest/api/iothub/service/twin/replacedevicetwin

    [PATCH]: https://docs.microsoft.com/en-us/rest/api/iothub/service/twin/updatedevicetwin
  syntax:
    content: public void startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
    parameters:
    - id: deviceTwinStatusCallback
      type: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
      description: the IotHubEventCallback callback for providing the status of Device Twin operations. Cannot be <code>null</code>.
    - id: deviceTwinStatusCallbackContext
      type: java.lang.Object
      description: the context to be passed to the status callback. Can be <code>null</code>.
    - id: genericPropertyCallBack
      type: com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack
      description: the PropertyCallBack callback for providing any changes in desired properties. Cannot be <code>null</code>.
    - id: genericPropertyCallBackContext
      type: java.lang.Object
      description: the context to be passed to the property callback. Can be <code>null</code>.     *
  exceptions:
  - type: java.io.IOException
    description: if the callback is <code>null</code>
  - type: java.lang.IllegalArgumentException
    description: if the callback is <code>null</code>
  - type: java.lang.UnsupportedOperationException
    description: if the callback is <code>null</code>
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object)
  id: startDeviceTwin(com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  nameWithType: DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    Starts the device twin. This device client will receive a callback with the current state of the full twin, including reported properties and desired properties. After that callback is received, this device client will receive a callback each time a desired property is updated. That callback will either contain the full desired properties set, or only the updated desired property depending on how the desired property was changed. IoT Hub supports a PUT and a PATCH on the twin. The PUT will cause this device client to receive the full desired properties set, and the PATCH will cause this device client to only receive the updated desired properties. Similarly, the version of each desired property will be incremented from a PUT call, and only the actually updated desired property will have its version incremented from a PATCH call. The java service client library uses the PATCH call when updated desired properties, but it builds the patch such that all properties are included in the patch. As a result, the device side will receive full twin updates, not partial updates. See [PUT][] and [PATCH][]



    [PUT]: https://docs.microsoft.com/en-us/rest/api/iothub/service/twin/replacedevicetwin

    [PATCH]: https://docs.microsoft.com/en-us/rest/api/iothub/service/twin/updatedevicetwin
  syntax:
    content: public void startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
    parameters:
    - id: deviceTwinStatusCallback
      type: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
      description: the IotHubEventCallback callback for providing the status of Device Twin operations. Cannot be <code>null</code>.
    - id: deviceTwinStatusCallbackContext
      type: java.lang.Object
      description: the context to be passed to the status callback. Can be <code>null</code>.
    - id: genericPropertyCallBack
      type: com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack
      description: the TwinPropertyCallBack callback for providing any changes in desired properties. Cannot be <code>null</code>.
    - id: genericPropertyCallBackContext
      type: java.lang.Object
      description: the context to be passed to the property callback. Can be <code>null</code>.     *
  exceptions:
  - type: java.io.IOException
    description: if the callback is <code>null</code>
  - type: java.lang.IllegalArgumentException
    description: if the callback is <code>null</code>
  - type: java.lang.UnsupportedOperationException
    description: if the callback is <code>null</code>
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDeviceMethod(com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
  id: subscribeToDeviceMethod(com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: subscribeToDeviceMethod(DeviceTwin.DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  nameWithType: DeviceClient.subscribeToDeviceMethod(DeviceTwin.DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDeviceMethod(DeviceTwin.DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDeviceMethod*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: Subscribes to device methods
  syntax:
    content: public void subscribeToDeviceMethod(DeviceTwin.DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
    parameters:
    - id: deviceMethodCallback
      type: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback
      description: Callback on which device methods shall be invoked. Cannot be <code>null</code>.
    - id: deviceMethodCallbackContext
      type: java.lang.Object
      description: Context for device method callback. Can be <code>null</code>.
    - id: deviceMethodStatusCallback
      type: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
      description: Callback for providing IotHub status for device methods. Cannot be <code>null</code>.
    - id: deviceMethodStatusCallbackContext
      type: java.lang.Object
      description: Context for device method status callback. Can be <code>null</code>.
  exceptions:
  - type: java.io.IOException
    description: if called when client is not opened.
  - type: java.lang.IllegalArgumentException
    description: if called when client is not opened.
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.uploadToBlobAsync(java.lang.String,java.io.InputStream,long,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
  id: uploadToBlobAsync(java.lang.String,java.io.InputStream,long,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.DeviceClient
  langs:
  - java
  name: uploadToBlobAsync(String destinationBlobName, InputStream inputStream, long streamLength, IotHubEventCallback callback, Object callbackContext)
  nameWithType: DeviceClient.uploadToBlobAsync(String destinationBlobName, InputStream inputStream, long streamLength, IotHubEventCallback callback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.uploadToBlobAsync(String destinationBlobName, InputStream inputStream, long streamLength, IotHubEventCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device.DeviceClient.uploadToBlobAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.device
  summary: 'Asynchronously upload a stream to the IoT Hub. NOTE: IotHub does not currently support CA signed devices using file upload. Please use SAS based authentication or self signed certificates.'
  syntax:
    content: public void uploadToBlobAsync(String destinationBlobName, InputStream inputStream, long streamLength, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: destinationBlobName
      type: java.lang.String
      description: is a string with the name of the file in the storage.
    - id: inputStream
      type: java.io.InputStream
      description: is a InputStream with the stream to upload in the blob.
    - id: streamLength
      type: long
      description: is a long with the number of bytes in the stream to upload.
    - id: callback
      type: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
      description: the callback to be invoked when a file is uploaded.
    - id: callbackContext
      type: java.lang.Object
      description: a context to be passed to the callback. Can be <code>null</code>.
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: >-
      if the provided blob name, or the file path is <code>null</code>,
                empty or not valid, or if the callback is <code>null</code>.
  - type: java.io.IOException
    description: >-
      if the provided blob name, or the file path is <code>null</code>,
                empty or not valid, or if the callback is <code>null</code>.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.TransportClient
  name: TransportClient
  nameWithType: TransportClient
  fullName: com.microsoft.azure.sdk.iot.device.TransportClient
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
  name: DeviceClient
  nameWithType: DeviceClient.DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
  name: IotHubClientProtocol
  nameWithType: IotHubClientProtocol
  fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
- uid: com.microsoft.azure.sdk.iot.device.ClientOptions
  name: ClientOptions
  nameWithType: ClientOptions
  fullName: com.microsoft.azure.sdk.iot.device.ClientOptions
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: javax.net.ssl.SSLContext
  spec.java:
  - uid: javax.net.ssl.SSLContext
    name: SSLContext
    fullName: javax.net.ssl.SSLContext
- uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
  spec.java:
  - uid: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
    name: SecurityProvider
    fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
- uid: java.net.URISyntaxException
  spec.java:
  - uid: java.net.URISyntaxException
    name: URISyntaxException
    fullName: java.net.URISyntaxException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider*
  name: createFromSecurityProvider
  nameWithType: DeviceClient.createFromSecurityProvider
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider
  package: com.microsoft.azure.sdk.iot.device
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: com.microsoft.azure.sdk.iot.device.MessageCallback
  name: MessageCallback
  nameWithType: MessageCallback
  fullName: com.microsoft.azure.sdk.iot.device.MessageCallback
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.setMessageCallback*
  name: setMessageCallback
  nameWithType: DeviceClient.setMessageCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.setMessageCallback
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.open*
  name: open
  nameWithType: DeviceClient.open
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.open
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.close*
  name: close
  nameWithType: DeviceClient.close
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.close
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow*
  name: closeNow
  nameWithType: DeviceClient.closeNow
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow
  package: com.microsoft.azure.sdk.iot.device
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.uploadToBlobAsync*
  name: uploadToBlobAsync
  nameWithType: DeviceClient.uploadToBlobAsync
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.uploadToBlobAsync
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest
  spec.java:
  - uid: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest
    name: FileUploadSasUriRequest
    fullName: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest
- uid: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriResponse
  spec.java:
  - uid: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriResponse
    name: FileUploadSasUriResponse
    fullName: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriResponse
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.getFileUploadSasUri*
  name: getFileUploadSasUri
  nameWithType: DeviceClient.getFileUploadSasUri
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.getFileUploadSasUri
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification
  spec.java:
  - uid: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification
    name: FileUploadCompletionNotification
    fullName: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.completeFileUploadAsync*
  name: completeFileUploadAsync
  nameWithType: DeviceClient.completeFileUploadAsync
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.completeFileUploadAsync
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.getDeviceTwin*
  name: getDeviceTwin
  nameWithType: DeviceClient.getDeviceTwin
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.getDeviceTwin
  package: com.microsoft.azure.sdk.iot.device
- uid: java.lang.UnsupportedOperationException
  spec.java:
  - uid: java.lang.UnsupportedOperationException
    name: UnsupportedOperationException
    fullName: java.lang.UnsupportedOperationException
- uid: com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack
  spec.java:
  - uid: com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack
    name: PropertyCallBack
    fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin*
  name: startDeviceTwin
  nameWithType: DeviceClient.startDeviceTwin
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack
  name: DeviceTwin.TwinPropertyCallBack
  nameWithType: DeviceTwin.TwinPropertyCallBack
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack
- uid: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
  name: IotHubConnectionStateCallback
  nameWithType: IotHubConnectionStateCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStateCallback*
  name: registerConnectionStateCallback
  nameWithType: DeviceClient.registerConnectionStateCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStateCallback
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback
  name: DeviceTwin.DeviceMethodCallback
  nameWithType: DeviceTwin.DeviceMethodCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDeviceMethod*
  name: subscribeToDeviceMethod
  nameWithType: DeviceClient.subscribeToDeviceMethod
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDeviceMethod
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.DeviceClient.setOption*
  name: setOption
  nameWithType: DeviceClient.setOption
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.setOption
  package: com.microsoft.azure.sdk.iot.device
- uid: java.nio.charset.Charset
  spec.java:
  - uid: java.nio.charset.Charset
    name: Charset
    fullName: java.nio.charset.Charset
- uid: com.microsoft.azure.sdk.iot.device.InternalClient
  name: InternalClient
  nameWithType: InternalClient
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient
- uid: java.io.Closeable
  name: Closeable
  nameWithType: Closeable
  fullName: java.io.Closeable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback,java.lang.Object)
  name: InternalClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
  nameWithType: InternalClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback,java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.setProxySettings(com.microsoft.azure.sdk.iot.device.ProxySettings)
  name: InternalClient.setProxySettings(ProxySettings)
  nameWithType: InternalClient.setProxySettings(ProxySettings)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.setProxySettings(com.microsoft.azure.sdk.iot.device.ProxySettings)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.setOption(java.lang.String,java.lang.Object)
  name: InternalClient.setOption(String,Object)
  nameWithType: InternalClient.setOption(String,Object)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.setOption(java.lang.String,java.lang.Object)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.setRetryPolicy(com.microsoft.azure.sdk.iot.device.transport.RetryPolicy)
  name: InternalClient.setRetryPolicy(RetryPolicy)
  nameWithType: InternalClient.setRetryPolicy(RetryPolicy)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.setRetryPolicy(com.microsoft.azure.sdk.iot.device.transport.RetryPolicy)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToDesiredProperties(java.util.Map<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair<com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack<java.lang.String,java.lang.Object>,java.lang.Object>>)
  name: InternalClient.subscribeToDesiredProperties(Map<DeviceTwin.Property,DeviceTwin.Pair<DeviceTwin.PropertyCallBack<String,Object>,Object>>)
  nameWithType: InternalClient.subscribeToDesiredProperties(Map<DeviceTwin.Property,DeviceTwin.Pair<DeviceTwin.PropertyCallBack<String,Object>,Object>>)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToDesiredProperties(java.util.Map<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair<com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack<java.lang.String,java.lang.Object>,java.lang.Object>>)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(java.util.Set<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>,int)
  name: InternalClient.sendReportedProperties(Set<DeviceTwin.Property>,int)
  nameWithType: InternalClient.sendReportedProperties(Set<DeviceTwin.Property>,int)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(java.util.Set<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>,int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.closeNow()
  name: InternalClient.closeNow()
  nameWithType: InternalClient.closeNow()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.closeNow()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.sendEventAsync(com.microsoft.azure.sdk.iot.device.Message,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
  name: InternalClient.sendEventAsync(Message,IotHubEventCallback,Object)
  nameWithType: InternalClient.sendEventAsync(Message,IotHubEventCallback,Object)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.sendEventAsync(com.microsoft.azure.sdk.iot.device.Message,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.open()
  name: InternalClient.open()
  nameWithType: InternalClient.open()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.open()
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.setOperationTimeout(long)
  name: InternalClient.setOperationTimeout(long)
  nameWithType: InternalClient.setOperationTimeout(long)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.setOperationTimeout(long)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToTwinDesiredProperties(java.util.Map<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair<com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object>>)
  name: InternalClient.subscribeToTwinDesiredProperties(Map<DeviceTwin.Property,DeviceTwin.Pair<DeviceTwin.TwinPropertyCallBack,Object>>)
  nameWithType: InternalClient.subscribeToTwinDesiredProperties(Map<DeviceTwin.Property,DeviceTwin.Pair<DeviceTwin.TwinPropertyCallBack,Object>>)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToTwinDesiredProperties(java.util.Map<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair<com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object>>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.getConfig()
  name: InternalClient.getConfig()
  nameWithType: InternalClient.getConfig()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.getConfig()
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.close()
  name: InternalClient.close()
  nameWithType: InternalClient.close()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.close()
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(java.util.Set<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>)
  name: InternalClient.sendReportedProperties(Set<DeviceTwin.Property>)
  nameWithType: InternalClient.sendReportedProperties(Set<DeviceTwin.Property>)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(java.util.Set<com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.getProductInfo()
  name: InternalClient.getProductInfo()
  nameWithType: InternalClient.getProductInfo()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.getProductInfo()
- uid: java.lang.String,java.lang.Object>,java.lang.Object>>)
  name: String,Object>,Object>>)
  nameWithType: String,Object>,Object>>)
  fullName: java.lang.String,java.lang.Object>,java.lang.Object>>)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToDesiredProperties(java.util.Map
  name: InternalClient.subscribeToDesiredProperties(Map
  nameWithType: InternalClient.subscribeToDesiredProperties(Map
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToDesiredProperties(java.util.Map
- uid: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair
  name: DeviceTwin.Property,DeviceTwin.Pair
  nameWithType: DeviceTwin.Property,DeviceTwin.Pair
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property,com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(java.util.Set
  name: InternalClient.sendReportedProperties(Set
  nameWithType: InternalClient.sendReportedProperties(Set
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(java.util.Set
- uid: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>,int)
  name: DeviceTwin.Property>,int)
  nameWithType: DeviceTwin.Property>,int)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>,int)
- uid: com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object>>)
  name: DeviceTwin.TwinPropertyCallBack,Object>>)
  nameWithType: DeviceTwin.TwinPropertyCallBack,Object>>)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object>>)
- uid: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToTwinDesiredProperties(java.util.Map
  name: InternalClient.subscribeToTwinDesiredProperties(Map
  nameWithType: InternalClient.subscribeToTwinDesiredProperties(Map
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToTwinDesiredProperties(java.util.Map
- uid: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>)
  name: DeviceTwin.Property>)
  nameWithType: DeviceTwin.Property>)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property>)
