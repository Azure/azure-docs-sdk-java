### YamlMime:JavaMember
nameWithType: StorageAccounts.listSasTokens
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.StorageAccounts.listSasTokens(final String resourceGroupName, final String accountName, final String storageAccountName, final String containerName)
  name: listSasTokens(final String resourceGroupName, final String accountName, final String storageAccountName, final String containerName)
  nameWithType: StorageAccounts.listSasTokens(final String resourceGroupName, final String accountName, final String storageAccountName, final String containerName)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account from which an Azure Storage account's SAS token is being requested. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Azure storage account for which the SAS token is being requested. </p>
    name: storageAccountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Azure storage container for which the SAS token is being requested. </p>
    name: containerName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;SasTokenInfo&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.SasTokenInfo?alt=com.microsoft.azure.management.datalake.analytics.models.SasTokenInfo&text=SasTokenInfo" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account and container combination.</p>

    <p></p>
  syntax: public PagedList<SasTokenInfo> listSasTokens(final String resourceGroupName, final String accountName, final String storageAccountName, final String containerName)
  uid: com.microsoft.azure.management.datalake.analytics.StorageAccounts.listSasTokens(final String,final String,final String,final String)
uid: com.microsoft.azure.management.datalake.analytics.StorageAccounts.listSasTokens*
fullName: com.microsoft.azure.management.datalake.analytics.StorageAccounts.listSasTokens
name: listSasTokens(final String resourceGroupName, final String accountName, final String storageAccountName, final String containerName)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
