### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.amqp.ReactorDispatcher
  id: ReactorDispatcher
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.amqp
  children:
  - com.microsoft.azure.servicebus.amqp.ReactorDispatcher.ReactorDispatcher(org.apache.qpid.proton.reactor.Reactor)
  - com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke(com.microsoft.azure.servicebus.amqp.DispatchHandler)
  - com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke(int,com.microsoft.azure.servicebus.amqp.DispatchHandler)
  langs:
  - java
  name: ReactorDispatcher
  nameWithType: ReactorDispatcher
  fullName: com.microsoft.azure.servicebus.amqp.ReactorDispatcher
  type: Class
  package: com.microsoft.azure.servicebus.amqp
  summary: "<xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\">Reactor</xref> is not thread-safe - all calls to <xref uid=\"\" data-throw-if-not-resolved=\"false\">Proton</xref> API's should be - on the Reactor Thread. <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\">Reactor</xref> works out-of-box for all event driven API - ex: onReceive - which could raise upon onSocketRead. <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\">Reactor</xref> didn't support API's like Send() out-of-box - which could potentially run on different thread to that of Reactor. So, the following utility class is used to generate an Event to hook into <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\">Reactor</xref>'s event delegation pattern. It uses a <xref uid=\"\" data-throw-if-not-resolved=\"false\">Pipe</xref> as the IO on which Reactor Listens to. Cardinality: multiple <xref uid=\"com.microsoft.azure.servicebus.amqp.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref>'s could be attached to 1 <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\">Reactor</xref>. Each <xref uid=\"com.microsoft.azure.servicebus.amqp.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref> should be initialized Synchronously - as it calls API in <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\">Reactor</xref> which is not thread-safe."
  syntax:
    content: public final class ReactorDispatcher
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.ReactorDispatcher(org.apache.qpid.proton.reactor.Reactor)
  id: ReactorDispatcher(org.apache.qpid.proton.reactor.Reactor)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.amqp.ReactorDispatcher
  langs:
  - java
  name: ReactorDispatcher(Reactor reactor)
  nameWithType: ReactorDispatcher.ReactorDispatcher(Reactor reactor)
  fullName: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.ReactorDispatcher(Reactor reactor)
  overload: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.ReactorDispatcher*
  type: Constructor
  package: com.microsoft.azure.servicebus.amqp
  syntax:
    content: public ReactorDispatcher(Reactor reactor)
    parameters:
    - id: reactor
      type: org.apache.qpid.proton.reactor.Reactor
- uid: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke(com.microsoft.azure.servicebus.amqp.DispatchHandler)
  id: invoke(com.microsoft.azure.servicebus.amqp.DispatchHandler)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.amqp.ReactorDispatcher
  langs:
  - java
  name: invoke(DispatchHandler timerCallback)
  nameWithType: ReactorDispatcher.invoke(DispatchHandler timerCallback)
  fullName: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke(DispatchHandler timerCallback)
  overload: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke*
  type: Method
  package: com.microsoft.azure.servicebus.amqp
  syntax:
    content: public void invoke(DispatchHandler timerCallback)
    parameters:
    - id: timerCallback
      type: com.microsoft.azure.servicebus.amqp.DispatchHandler
  exceptions:
  - type: java.io.IOException
- uid: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke(int,com.microsoft.azure.servicebus.amqp.DispatchHandler)
  id: invoke(int,com.microsoft.azure.servicebus.amqp.DispatchHandler)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.amqp.ReactorDispatcher
  langs:
  - java
  name: invoke(int delay, DispatchHandler timerCallback)
  nameWithType: ReactorDispatcher.invoke(int delay, DispatchHandler timerCallback)
  fullName: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke(int delay, DispatchHandler timerCallback)
  overload: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke*
  type: Method
  package: com.microsoft.azure.servicebus.amqp
  syntax:
    content: public void invoke(int delay, DispatchHandler timerCallback)
    parameters:
    - id: delay
      type: int
    - id: timerCallback
      type: com.microsoft.azure.servicebus.amqp.DispatchHandler
  exceptions:
  - type: java.io.IOException
references:
- uid: org.apache.qpid.proton.reactor.Reactor
  spec.java:
  - uid: org.apache.qpid.proton.reactor.Reactor
    name: Reactor
    fullName: org.apache.qpid.proton.reactor.Reactor
- uid: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.ReactorDispatcher*
  name: ReactorDispatcher
  nameWithType: ReactorDispatcher.ReactorDispatcher
  fullName: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.ReactorDispatcher
  package: com.microsoft.azure.servicebus.amqp
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.servicebus.amqp.DispatchHandler
  name: DispatchHandler
  nameWithType: DispatchHandler
  fullName: com.microsoft.azure.servicebus.amqp.DispatchHandler
- uid: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke*
  name: invoke
  nameWithType: ReactorDispatcher.invoke
  fullName: com.microsoft.azure.servicebus.amqp.ReactorDispatcher.invoke
  package: com.microsoft.azure.servicebus.amqp
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
