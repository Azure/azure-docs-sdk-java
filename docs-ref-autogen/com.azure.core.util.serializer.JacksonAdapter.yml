### YamlMime:ManagedReference
items:
- uid: com.azure.core.util.serializer.JacksonAdapter
  id: JacksonAdapter
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer
  children:
  - com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)
  - com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  - com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  - com.azure.core.util.serializer.JacksonAdapter.JacksonAdapter()
  - com.azure.core.util.serializer.JacksonAdapter.createDefaultSerializerAdapter()
  - com.azure.core.util.serializer.JacksonAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding)
  - com.azure.core.util.serializer.JacksonAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding,java.io.OutputStream)
  - com.azure.core.util.serializer.JacksonAdapter.serializeList(java.util.List<?>,com.azure.core.util.serializer.CollectionFormat)
  - com.azure.core.util.serializer.JacksonAdapter.serializeRaw(java.lang.Object)
  - com.azure.core.util.serializer.JacksonAdapter.serializer()
  - com.azure.core.util.serializer.JacksonAdapter.simpleMapper()
  langs:
  - java
  name: JacksonAdapter
  nameWithType: JacksonAdapter
  fullName: com.azure.core.util.serializer.JacksonAdapter
  type: Class
  package: com.azure.core.util.serializer
  summary: Implementation of <xref uid="com.azure.core.util.serializer.SerializerAdapter" data-throw-if-not-resolved="false">SerializerAdapter</xref> for Jackson.
  syntax:
    content: public class JacksonAdapter implements SerializerAdapter
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.core.util.serializer.SerializerAdapter
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)
  id: <T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: <T>deserialize(HttpHeaders headers, Type deserializedHeadersType)
  nameWithType: JacksonAdapter.<T>deserialize(HttpHeaders headers, Type deserializedHeadersType)
  fullName: com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(HttpHeaders headers, Type deserializedHeadersType)
  overload: com.azure.core.util.serializer.JacksonAdapter.deserialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: >-
    Deserialize the provided headers returned from a REST API to an entity instance declared as the model to hold 'Matching' headers. 'Matching' headers are the REST API returned headers those with:


    1.  header names same as name of a properties in the entity.

    2.  header names start with value of <xref uid="com.azure.core.annotation.HeaderCollection" data-throw-if-not-resolved="false">com.azure.core.annotation.HeaderCollection</xref> annotation applied to the properties in the entity.


    When needed, the 'header entity' types must be declared as first generic argument of <xref uid="com.azure.core.http.rest.ResponseBase" data-throw-if-not-resolved="false">com.azure.core.http.rest.ResponseBase</xref> returned by java proxy method corresponding to the REST API. e.g. `Mono> getMetadata(args);` `class FooMetadataHeaders { String name; {@literal @}HeaderCollection("header-collection-prefix-") Map headerCollection; }` in the case of above example, this method produces an instance of FooMetadataHeaders from provided `headers`.
  syntax:
    content: public T <T>deserialize(HttpHeaders headers, Type deserializedHeadersType)
    parameters:
    - id: headers
      type: com.azure.core.http.HttpHeaders
    - id: deserializedHeadersType
      type: java.lang.reflect.Type
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  id: <T>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: <T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)
  nameWithType: JacksonAdapter.<T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)
  fullName: com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)
  overload: com.azure.core.util.serializer.JacksonAdapter.deserialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: Deserializes a byte\[\] into a `T` object.
  syntax:
    content: public T <T>deserialize(InputStream inputStream, Type type, SerializerEncoding encoding)
    parameters:
    - id: inputStream
      type: java.io.InputStream
    - id: type
      type: java.lang.reflect.Type
    - id: encoding
      type: com.azure.core.util.serializer.SerializerEncoding
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  id: <T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: <T>deserialize(String value, Type type, SerializerEncoding encoding)
  nameWithType: JacksonAdapter.<T>deserialize(String value, Type type, SerializerEncoding encoding)
  fullName: com.azure.core.util.serializer.JacksonAdapter.<T>deserialize(String value, Type type, SerializerEncoding encoding)
  overload: com.azure.core.util.serializer.JacksonAdapter.deserialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: Deserializes a string into a `T` object.
  syntax:
    content: public T <T>deserialize(String value, Type type, SerializerEncoding encoding)
    parameters:
    - id: value
      type: java.lang.String
    - id: type
      type: java.lang.reflect.Type
    - id: encoding
      type: com.azure.core.util.serializer.SerializerEncoding
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.azure.core.util.serializer.JacksonAdapter.JacksonAdapter()
  id: JacksonAdapter()
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: JacksonAdapter()
  nameWithType: JacksonAdapter.JacksonAdapter()
  fullName: com.azure.core.util.serializer.JacksonAdapter.JacksonAdapter()
  overload: com.azure.core.util.serializer.JacksonAdapter.JacksonAdapter*
  type: Constructor
  package: com.azure.core.util.serializer
  summary: Creates a new JacksonAdapter instance with default mapper settings.
  syntax:
    content: public JacksonAdapter()
- uid: com.azure.core.util.serializer.JacksonAdapter.createDefaultSerializerAdapter()
  id: createDefaultSerializerAdapter()
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: createDefaultSerializerAdapter()
  nameWithType: JacksonAdapter.createDefaultSerializerAdapter()
  fullName: com.azure.core.util.serializer.JacksonAdapter.createDefaultSerializerAdapter()
  overload: com.azure.core.util.serializer.JacksonAdapter.createDefaultSerializerAdapter*
  type: Method
  package: com.azure.core.util.serializer
  summary: maintain singleton instance of the default serializer adapter.
  syntax:
    content: public static synchronized SerializerAdapter createDefaultSerializerAdapter()
    return:
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the default serializer
- uid: com.azure.core.util.serializer.JacksonAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding)
  id: serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: serialize(Object object, SerializerEncoding encoding)
  nameWithType: JacksonAdapter.serialize(Object object, SerializerEncoding encoding)
  fullName: com.azure.core.util.serializer.JacksonAdapter.serialize(Object object, SerializerEncoding encoding)
  overload: com.azure.core.util.serializer.JacksonAdapter.serialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: Serializes an object into a string.
  syntax:
    content: public String serialize(Object object, SerializerEncoding encoding)
    parameters:
    - id: object
      type: java.lang.Object
    - id: encoding
      type: com.azure.core.util.serializer.SerializerEncoding
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.azure.core.util.serializer.JacksonAdapter.serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding,java.io.OutputStream)
  id: serialize(java.lang.Object,com.azure.core.util.serializer.SerializerEncoding,java.io.OutputStream)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)
  nameWithType: JacksonAdapter.serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)
  fullName: com.azure.core.util.serializer.JacksonAdapter.serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)
  overload: com.azure.core.util.serializer.JacksonAdapter.serialize*
  type: Method
  package: com.azure.core.util.serializer
  summary: Serializes an object and writes its output into an <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref>.
  syntax:
    content: public void serialize(Object object, SerializerEncoding encoding, OutputStream outputStream)
    parameters:
    - id: object
      type: java.lang.Object
    - id: encoding
      type: com.azure.core.util.serializer.SerializerEncoding
    - id: outputStream
      type: java.io.OutputStream
  exceptions:
  - type: java.io.IOException
- uid: com.azure.core.util.serializer.JacksonAdapter.serializeList(java.util.List<?>,com.azure.core.util.serializer.CollectionFormat)
  id: serializeList(java.util.List<?>,com.azure.core.util.serializer.CollectionFormat)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: serializeList(List<?> list, CollectionFormat format)
  nameWithType: JacksonAdapter.serializeList(List<?> list, CollectionFormat format)
  fullName: com.azure.core.util.serializer.JacksonAdapter.serializeList(List<?> list, CollectionFormat format)
  overload: com.azure.core.util.serializer.JacksonAdapter.serializeList*
  type: Method
  package: com.azure.core.util.serializer
  summary: Serializes a list into a string with the delimiter specified with the Swagger collection format joining each individual serialized items in the list.
  syntax:
    content: public String serializeList(List<?> list, CollectionFormat format)
    parameters:
    - id: list
      type: java.util.List<?>
    - id: format
      type: com.azure.core.util.serializer.CollectionFormat
    return:
      type: java.lang.String
- uid: com.azure.core.util.serializer.JacksonAdapter.serializeRaw(java.lang.Object)
  id: serializeRaw(java.lang.Object)
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: serializeRaw(Object object)
  nameWithType: JacksonAdapter.serializeRaw(Object object)
  fullName: com.azure.core.util.serializer.JacksonAdapter.serializeRaw(Object object)
  overload: com.azure.core.util.serializer.JacksonAdapter.serializeRaw*
  type: Method
  package: com.azure.core.util.serializer
  summary: Serializes an object into a raw string. The leading and trailing quotes will be trimmed.
  syntax:
    content: public String serializeRaw(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: java.lang.String
- uid: com.azure.core.util.serializer.JacksonAdapter.serializer()
  id: serializer()
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: serializer()
  nameWithType: JacksonAdapter.serializer()
  fullName: com.azure.core.util.serializer.JacksonAdapter.serializer()
  overload: com.azure.core.util.serializer.JacksonAdapter.serializer*
  type: Method
  package: com.azure.core.util.serializer
  syntax:
    content: public ObjectMapper serializer()
    return:
      type: com.fasterxml.jackson.databind.ObjectMapper
      description: the original serializer type
- uid: com.azure.core.util.serializer.JacksonAdapter.simpleMapper()
  id: simpleMapper()
  artifact: com.azure:azure-core:1.10.0
  parent: com.azure.core.util.serializer.JacksonAdapter
  langs:
  - java
  name: simpleMapper()
  nameWithType: JacksonAdapter.simpleMapper()
  fullName: com.azure.core.util.serializer.JacksonAdapter.simpleMapper()
  overload: com.azure.core.util.serializer.JacksonAdapter.simpleMapper*
  type: Method
  package: com.azure.core.util.serializer
  summary: Gets a static instance of <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> that doesn't handle flattening.
  syntax:
    content: protected ObjectMapper simpleMapper()
    return:
      type: com.fasterxml.jackson.databind.ObjectMapper
      description: an instance of <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>.
references:
- uid: com.azure.core.util.serializer.JacksonAdapter.JacksonAdapter*
  name: JacksonAdapter
  nameWithType: JacksonAdapter.JacksonAdapter
  fullName: com.azure.core.util.serializer.JacksonAdapter.JacksonAdapter
  package: com.azure.core.util.serializer
- uid: com.fasterxml.jackson.databind.ObjectMapper
  spec.java:
  - uid: com.fasterxml.jackson.databind.ObjectMapper
    name: ObjectMapper
    fullName: com.fasterxml.jackson.databind.ObjectMapper
- uid: com.azure.core.util.serializer.JacksonAdapter.simpleMapper*
  name: simpleMapper
  nameWithType: JacksonAdapter.simpleMapper
  fullName: com.azure.core.util.serializer.JacksonAdapter.simpleMapper
  package: com.azure.core.util.serializer
- uid: com.azure.core.util.serializer.SerializerAdapter
  name: SerializerAdapter
  nameWithType: SerializerAdapter
  fullName: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.core.util.serializer.JacksonAdapter.createDefaultSerializerAdapter*
  name: createDefaultSerializerAdapter
  nameWithType: JacksonAdapter.createDefaultSerializerAdapter
  fullName: com.azure.core.util.serializer.JacksonAdapter.createDefaultSerializerAdapter
  package: com.azure.core.util.serializer
- uid: com.azure.core.util.serializer.JacksonAdapter.serializer*
  name: serializer
  nameWithType: JacksonAdapter.serializer
  fullName: com.azure.core.util.serializer.JacksonAdapter.serializer
  package: com.azure.core.util.serializer
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.core.util.serializer.SerializerEncoding
  name: SerializerEncoding
  nameWithType: SerializerEncoding
  fullName: com.azure.core.util.serializer.SerializerEncoding
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.util.serializer.JacksonAdapter.serialize*
  name: serialize
  nameWithType: JacksonAdapter.serialize
  fullName: com.azure.core.util.serializer.JacksonAdapter.serialize
  package: com.azure.core.util.serializer
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.azure.core.util.serializer.JacksonAdapter.serializeRaw*
  name: serializeRaw
  nameWithType: JacksonAdapter.serializeRaw
  fullName: com.azure.core.util.serializer.JacksonAdapter.serializeRaw
  package: com.azure.core.util.serializer
- uid: java.util.List<?>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.core.util.serializer.CollectionFormat
  name: CollectionFormat
  nameWithType: CollectionFormat
  fullName: com.azure.core.util.serializer.CollectionFormat
- uid: com.azure.core.util.serializer.JacksonAdapter.serializeList*
  name: serializeList
  nameWithType: JacksonAdapter.serializeList
  fullName: com.azure.core.util.serializer.JacksonAdapter.serializeList
  package: com.azure.core.util.serializer
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.core.util.serializer.JacksonAdapter.deserialize*
  name: <T>deserialize
  nameWithType: JacksonAdapter.<T>deserialize
  fullName: com.azure.core.util.serializer.JacksonAdapter.<T>deserialize
  package: com.azure.core.util.serializer
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.azure.core.http.HttpHeaders
  name: HttpHeaders
  nameWithType: HttpHeaders
  fullName: com.azure.core.http.HttpHeaders
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
