### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties
  id: SystemProperties
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs
  children:
  - com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties(java.util.HashMap<java.lang.String,java.lang.Object>)
  - com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties(long,java.time.Instant,java.lang.String,java.lang.String)
  - com.microsoft.azure.eventhubs.EventData.SystemProperties.getEnqueuedTime()
  - com.microsoft.azure.eventhubs.EventData.SystemProperties.getOffset()
  - com.microsoft.azure.eventhubs.EventData.SystemProperties.getPartitionKey()
  - com.microsoft.azure.eventhubs.EventData.SystemProperties.getPublisher()
  - com.microsoft.azure.eventhubs.EventData.SystemProperties.getSequenceNumber()
  langs:
  - java
  name: EventData.SystemProperties
  nameWithType: EventData.SystemProperties
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties
  type: Class
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public static class EventData.SystemProperties extends HashMap<String,Object>
  inheritance:
  - java.lang.Object
  - java.util.AbstractMap
  - java.util.HashMap
  inheritedMembers:
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.util.AbstractMap.equals(java.lang.Object)
  - java.util.AbstractMap.hashCode()
  - java.util.AbstractMap.toString()
  - java.util.HashMap.clear()
  - java.util.HashMap.clone()
  - java.util.HashMap.compute(K,java.util.function.BiFunction<? super K,? super V,? extends V>)
  - java.util.HashMap.computeIfAbsent(K,java.util.function.Function<? super K,? extends V>)
  - java.util.HashMap.computeIfPresent(K,java.util.function.BiFunction<? super K,? super V,? extends V>)
  - java.util.HashMap.containsKey(java.lang.Object)
  - java.util.HashMap.containsValue(java.lang.Object)
  - java.util.HashMap.entrySet()
  - java.util.HashMap.forEach(java.util.function.BiConsumer<? super K,? super V>)
  - java.util.HashMap.get(java.lang.Object)
  - java.util.HashMap.getOrDefault(java.lang.Object,V)
  - java.util.HashMap.isEmpty()
  - java.util.HashMap.keySet()
  - java.util.HashMap.merge(K,V,java.util.function.BiFunction<? super V,? super V,? extends V>)
  - java.util.HashMap.put(K,V)
  - java.util.HashMap.putAll(java.util.Map<? extends K,? extends V>)
  - java.util.HashMap.putIfAbsent(K,V)
  - java.util.HashMap.remove(java.lang.Object)
  - java.util.HashMap.remove(java.lang.Object,java.lang.Object)
  - java.util.HashMap.replace(K,V)
  - java.util.HashMap.replace(K,V,V)
  - java.util.HashMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
  - java.util.HashMap.size()
  - java.util.HashMap.values()
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties(java.util.HashMap<java.lang.String,java.lang.Object>)
  id: SystemProperties(java.util.HashMap<java.lang.String,java.lang.Object>)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.EventData.SystemProperties
  langs:
  - java
  name: SystemProperties(HashMap<String,Object> map)
  nameWithType: EventData.SystemProperties.SystemProperties(HashMap<String,Object> map)
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties(HashMap<String,Object> map)
  overload: com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties*
  type: Constructor
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public SystemProperties(HashMap<String,Object> map)
    parameters:
    - id: map
      type: java.util.HashMap<java.lang.String,java.lang.Object>
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties(long,java.time.Instant,java.lang.String,java.lang.String)
  id: SystemProperties(long,java.time.Instant,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.EventData.SystemProperties
  langs:
  - java
  name: SystemProperties(long sequenceNumber, Instant enqueuedTimeUtc, String offset, String partitionKey)
  nameWithType: EventData.SystemProperties.SystemProperties(long sequenceNumber, Instant enqueuedTimeUtc, String offset, String partitionKey)
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties(long sequenceNumber, Instant enqueuedTimeUtc, String offset, String partitionKey)
  overload: com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties*
  type: Constructor
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public SystemProperties(long sequenceNumber, Instant enqueuedTimeUtc, String offset, String partitionKey)
    parameters:
    - id: sequenceNumber
      type: long
    - id: enqueuedTimeUtc
      type: java.time.Instant
    - id: offset
      type: java.lang.String
    - id: partitionKey
      type: java.lang.String
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getEnqueuedTime()
  id: getEnqueuedTime()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.EventData.SystemProperties
  langs:
  - java
  name: getEnqueuedTime()
  nameWithType: EventData.SystemProperties.getEnqueuedTime()
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getEnqueuedTime()
  overload: com.microsoft.azure.eventhubs.EventData.SystemProperties.getEnqueuedTime*
  type: Method
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public Instant getEnqueuedTime()
    return:
      type: java.time.Instant
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getOffset()
  id: getOffset()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.EventData.SystemProperties
  langs:
  - java
  name: getOffset()
  nameWithType: EventData.SystemProperties.getOffset()
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getOffset()
  overload: com.microsoft.azure.eventhubs.EventData.SystemProperties.getOffset*
  type: Method
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public String getOffset()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPartitionKey()
  id: getPartitionKey()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.EventData.SystemProperties
  langs:
  - java
  name: getPartitionKey()
  nameWithType: EventData.SystemProperties.getPartitionKey()
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPartitionKey()
  overload: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPartitionKey*
  type: Method
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public String getPartitionKey()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPublisher()
  id: getPublisher()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.EventData.SystemProperties
  langs:
  - java
  name: getPublisher()
  nameWithType: EventData.SystemProperties.getPublisher()
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPublisher()
  overload: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPublisher*
  type: Method
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public String getPublisher()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getSequenceNumber()
  id: getSequenceNumber()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.EventData.SystemProperties
  langs:
  - java
  name: getSequenceNumber()
  nameWithType: EventData.SystemProperties.getSequenceNumber()
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getSequenceNumber()
  overload: com.microsoft.azure.eventhubs.EventData.SystemProperties.getSequenceNumber*
  type: Method
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public long getSequenceNumber()
    return:
      type: long
references:
- uid: java.util.HashMap<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.HashMap
    name: HashMap
    fullName: java.util.HashMap
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties*
  name: SystemProperties
  nameWithType: EventData.SystemProperties.SystemProperties
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.SystemProperties
  package: com.microsoft.azure.eventhubs
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getOffset*
  name: getOffset
  nameWithType: EventData.SystemProperties.getOffset
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getOffset
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPartitionKey*
  name: getPartitionKey
  nameWithType: EventData.SystemProperties.getPartitionKey
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPartitionKey
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getEnqueuedTime*
  name: getEnqueuedTime
  nameWithType: EventData.SystemProperties.getEnqueuedTime
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getEnqueuedTime
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getSequenceNumber*
  name: getSequenceNumber
  nameWithType: EventData.SystemProperties.getSequenceNumber
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getSequenceNumber
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPublisher*
  name: getPublisher
  nameWithType: EventData.SystemProperties.getPublisher
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties.getPublisher
  package: com.microsoft.azure.eventhubs
- uid: java.util.HashMap.get(java.lang.Object)
  name: HashMap.get(Object)
  nameWithType: HashMap.get(Object)
  fullName: java.util.HashMap.get(java.lang.Object)
- uid: java.util.HashMap.remove(java.lang.Object,java.lang.Object)
  name: HashMap.remove(Object,Object)
  nameWithType: HashMap.remove(Object,Object)
  fullName: java.util.HashMap.remove(java.lang.Object,java.lang.Object)
- uid: java.util.HashMap.remove(java.lang.Object)
  name: HashMap.remove(Object)
  nameWithType: HashMap.remove(Object)
  fullName: java.util.HashMap.remove(java.lang.Object)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.util.HashMap.forEach(java.util.function.BiConsumer<? super K,? super V>)
  name: HashMap.forEach(BiConsumer<? super K,? super V>)
  nameWithType: HashMap.forEach(BiConsumer<? super K,? super V>)
  fullName: java.util.HashMap.forEach(java.util.function.BiConsumer<? super K,? super V>)
- uid: java.util.HashMap.putIfAbsent(K,V)
  name: HashMap.putIfAbsent(K,V)
  nameWithType: HashMap.putIfAbsent(K,V)
  fullName: java.util.HashMap.putIfAbsent(K,V)
- uid: java.util.AbstractMap.toString()
  name: AbstractMap.toString()
  nameWithType: AbstractMap.toString()
  fullName: java.util.AbstractMap.toString()
- uid: java.util.HashMap.putAll(java.util.Map<? extends K,? extends V>)
  name: HashMap.putAll(Map<? extends K,? extends V>)
  nameWithType: HashMap.putAll(Map<? extends K,? extends V>)
  fullName: java.util.HashMap.putAll(java.util.Map<? extends K,? extends V>)
- uid: java.util.HashMap.replace(K,V,V)
  name: HashMap.replace(K,V,V)
  nameWithType: HashMap.replace(K,V,V)
  fullName: java.util.HashMap.replace(K,V,V)
- uid: java.util.HashMap.containsValue(java.lang.Object)
  name: HashMap.containsValue(Object)
  nameWithType: HashMap.containsValue(Object)
  fullName: java.util.HashMap.containsValue(java.lang.Object)
- uid: java.util.HashMap.getOrDefault(java.lang.Object,V)
  name: HashMap.getOrDefault(Object,V)
  nameWithType: HashMap.getOrDefault(Object,V)
  fullName: java.util.HashMap.getOrDefault(java.lang.Object,V)
- uid: java.util.HashMap.clear()
  name: HashMap.clear()
  nameWithType: HashMap.clear()
  fullName: java.util.HashMap.clear()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.util.HashMap.compute(K,java.util.function.BiFunction<? super K,? super V,? extends V>)
  name: HashMap.compute(K,BiFunction<? super K,? super V,? extends V>)
  nameWithType: HashMap.compute(K,BiFunction<? super K,? super V,? extends V>)
  fullName: java.util.HashMap.compute(K,java.util.function.BiFunction<? super K,? super V,? extends V>)
- uid: java.util.HashMap.size()
  name: HashMap.size()
  nameWithType: HashMap.size()
  fullName: java.util.HashMap.size()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.HashMap.put(K,V)
  name: HashMap.put(K,V)
  nameWithType: HashMap.put(K,V)
  fullName: java.util.HashMap.put(K,V)
- uid: java.util.HashMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
  name: HashMap.replaceAll(BiFunction<? super K,? super V,? extends V>)
  nameWithType: HashMap.replaceAll(BiFunction<? super K,? super V,? extends V>)
  fullName: java.util.HashMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
- uid: java.util.HashMap.entrySet()
  name: HashMap.entrySet()
  nameWithType: HashMap.entrySet()
  fullName: java.util.HashMap.entrySet()
- uid: java.util.HashMap.containsKey(java.lang.Object)
  name: HashMap.containsKey(Object)
  nameWithType: HashMap.containsKey(Object)
  fullName: java.util.HashMap.containsKey(java.lang.Object)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.util.HashMap.values()
  name: HashMap.values()
  nameWithType: HashMap.values()
  fullName: java.util.HashMap.values()
- uid: java.util.AbstractMap.hashCode()
  name: AbstractMap.hashCode()
  nameWithType: AbstractMap.hashCode()
  fullName: java.util.AbstractMap.hashCode()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.util.HashMap.computeIfPresent(K,java.util.function.BiFunction<? super K,? super V,? extends V>)
  name: HashMap.computeIfPresent(K,BiFunction<? super K,? super V,? extends V>)
  nameWithType: HashMap.computeIfPresent(K,BiFunction<? super K,? super V,? extends V>)
  fullName: java.util.HashMap.computeIfPresent(K,java.util.function.BiFunction<? super K,? super V,? extends V>)
- uid: java.util.HashMap.computeIfAbsent(K,java.util.function.Function<? super K,? extends V>)
  name: HashMap.computeIfAbsent(K,Function<? super K,? extends V>)
  nameWithType: HashMap.computeIfAbsent(K,Function<? super K,? extends V>)
  fullName: java.util.HashMap.computeIfAbsent(K,java.util.function.Function<? super K,? extends V>)
- uid: java.util.HashMap.isEmpty()
  name: HashMap.isEmpty()
  nameWithType: HashMap.isEmpty()
  fullName: java.util.HashMap.isEmpty()
- uid: java.util.AbstractMap.equals(java.lang.Object)
  name: AbstractMap.equals(Object)
  nameWithType: AbstractMap.equals(Object)
  fullName: java.util.AbstractMap.equals(java.lang.Object)
- uid: java.util.HashMap.clone()
  name: HashMap.clone()
  nameWithType: HashMap.clone()
  fullName: java.util.HashMap.clone()
- uid: java.util.HashMap.replace(K,V)
  name: HashMap.replace(K,V)
  nameWithType: HashMap.replace(K,V)
  fullName: java.util.HashMap.replace(K,V)
- uid: java.util.HashMap.keySet()
  name: HashMap.keySet()
  nameWithType: HashMap.keySet()
  fullName: java.util.HashMap.keySet()
- uid: java.util.HashMap.merge(K,V,java.util.function.BiFunction<? super V,? super V,? extends V>)
  name: HashMap.merge(K,V,BiFunction<? super V,? super V,? extends V>)
  nameWithType: HashMap.merge(K,V,BiFunction<? super V,? super V,? extends V>)
  fullName: java.util.HashMap.merge(K,V,java.util.function.BiFunction<? super V,? super V,? extends V>)
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.HashMap
  name: HashMap
  nameWithType: HashMap
  fullName: java.util.HashMap
- uid: '? super K,? super V>)'
  name: '? super K,? super V>)'
  nameWithType: '? super K,? super V>)'
  fullName: '? super K,? super V>)'
- uid: java.util.HashMap.forEach(java.util.function.BiConsumer
  name: HashMap.forEach(BiConsumer
  nameWithType: HashMap.forEach(BiConsumer
  fullName: java.util.HashMap.forEach(java.util.function.BiConsumer
- uid: java.util.HashMap.putAll(java.util.Map
  name: HashMap.putAll(Map
  nameWithType: HashMap.putAll(Map
  fullName: java.util.HashMap.putAll(java.util.Map
- uid: '? extends K,? extends V>)'
  name: '? extends K,? extends V>)'
  nameWithType: '? extends K,? extends V>)'
  fullName: '? extends K,? extends V>)'
- uid: java.util.HashMap.compute(K,java.util.function.BiFunction
  name: HashMap.compute(K,BiFunction
  nameWithType: HashMap.compute(K,BiFunction
  fullName: java.util.HashMap.compute(K,java.util.function.BiFunction
- uid: '? super K,? super V,? extends V>)'
  name: '? super K,? super V,? extends V>)'
  nameWithType: '? super K,? super V,? extends V>)'
  fullName: '? super K,? super V,? extends V>)'
- uid: java.util.HashMap.replaceAll(java.util.function.BiFunction
  name: HashMap.replaceAll(BiFunction
  nameWithType: HashMap.replaceAll(BiFunction
  fullName: java.util.HashMap.replaceAll(java.util.function.BiFunction
- uid: java.util.HashMap.computeIfPresent(K,java.util.function.BiFunction
  name: HashMap.computeIfPresent(K,BiFunction
  nameWithType: HashMap.computeIfPresent(K,BiFunction
  fullName: java.util.HashMap.computeIfPresent(K,java.util.function.BiFunction
- uid: '? super K,? extends V>)'
  name: '? super K,? extends V>)'
  nameWithType: '? super K,? extends V>)'
  fullName: '? super K,? extends V>)'
- uid: java.util.HashMap.computeIfAbsent(K,java.util.function.Function
  name: HashMap.computeIfAbsent(K,Function
  nameWithType: HashMap.computeIfAbsent(K,Function
  fullName: java.util.HashMap.computeIfAbsent(K,java.util.function.Function
- uid: java.util.HashMap.merge(K,V,java.util.function.BiFunction
  name: HashMap.merge(K,V,BiFunction
  nameWithType: HashMap.merge(K,V,BiFunction
  fullName: java.util.HashMap.merge(K,V,java.util.function.BiFunction
- uid: '? super V,? super V,? extends V>)'
  name: '? super V,? super V,? extends V>)'
  nameWithType: '? super V,? super V,? extends V>)'
  fullName: '? super V,? super V,? extends V>)'
