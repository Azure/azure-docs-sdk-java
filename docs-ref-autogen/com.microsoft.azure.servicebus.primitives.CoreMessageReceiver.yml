### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  id: CoreMessageReceiver
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives
  children:
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(byte[],java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(byte[],com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,int,com.microsoft.azure.servicebus.primitives.SettleModePair)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,int,com.microsoft.azure.servicebus.primitives.SettleModePair,com.microsoft.azure.servicebus.primitives.MessagingEntityType)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,java.lang.String,boolean,int,com.microsoft.azure.servicebus.primitives.SettleModePair)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,java.lang.String,boolean,int,com.microsoft.azure.servicebus.primitives.SettleModePair,com.microsoft.azure.servicebus.primitives.MessagingEntityType)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(byte[],java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(byte[],java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getContext()
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getPrefetchCount()
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionId()
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionLockedUntilUtc()
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionStateAsync()
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose()
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose(org.apache.qpid.proton.amqp.transport.ErrorCondition)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onError(java.lang.Exception)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onOpenComplete(java.lang.Exception)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onReceiveComplete(org.apache.qpid.proton.engine.Delivery)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.peekMessagesAsync(long,int,java.lang.String)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveAsync(int,java.time.Duration)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveDeferredMessageBatchAsync(java.lang.Long[])
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewMessageLocksAsync(java.util.UUID[])
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewSessionLocksAsync()
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setPrefetchCount(int)
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setSessionStateAsync(byte[])
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.updateDispositionAsync(java.util.UUID[],java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  langs:
  - java
  name: CoreMessageReceiver
  nameWithType: CoreMessageReceiver
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  type: Class
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public class CoreMessageReceiver extends ClientEntity implements IAmqpReceiver, IErrorContextProvider
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.servicebus.primitives.ClientEntity
  implements:
  - com.microsoft.azure.servicebus.amqp.IAmqpReceiver
  - com.microsoft.azure.servicebus.primitives.IErrorContextProvider
  inheritedMembers:
  - com.microsoft.azure.servicebus.primitives.ClientEntity.close()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()
  - com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.CoreMessageReceiver(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,java.lang.String,int,com.microsoft.azure.servicebus.primitives.SettleModePair,com.microsoft.azure.servicebus.primitives.MessagingEntityType)
  id: CoreMessageReceiver(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,java.lang.String,int,com.microsoft.azure.servicebus.primitives.SettleModePair,com.microsoft.azure.servicebus.primitives.MessagingEntityType)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: CoreMessageReceiver(MessagingFactory factory, String name, String recvPath, String sessionId, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  nameWithType: CoreMessageReceiver.CoreMessageReceiver(MessagingFactory factory, String name, String recvPath, String sessionId, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.CoreMessageReceiver(MessagingFactory factory, String name, String recvPath, String sessionId, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.CoreMessageReceiver*
  type: Constructor
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: private CoreMessageReceiver(MessagingFactory factory, String name, String recvPath, String sessionId, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
    parameters:
    - id: factory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
    - id: name
      type: java.lang.String
    - id: recvPath
      type: java.lang.String
    - id: sessionId
      type: java.lang.String
    - id: prefetchCount
      type: int
    - id: settleModePair
      type: com.microsoft.azure.servicebus.primitives.SettleModePair
    - id: entityType
      type: com.microsoft.azure.servicebus.primitives.MessagingEntityType
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(byte[],java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  id: abandonMessageAsync(byte[],java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: abandonMessageAsync(byte[] deliveryTag, Map<String,Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.abandonMessageAsync(byte[] deliveryTag, Map<String,Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(byte[] deliveryTag, Map<String,Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> abandonMessageAsync(byte[] deliveryTag, Map<String,Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: deliveryTag
      type: byte[]
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  id: abandonMessageAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: abandonMessageAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.abandonMessageAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> abandonMessageAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: java.util.UUID
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(byte[],com.microsoft.azure.servicebus.TransactionContext)
  id: completeMessageAsync(byte[],com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: completeMessageAsync(byte[] deliveryTag, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.completeMessageAsync(byte[] deliveryTag, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(byte[] deliveryTag, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> completeMessageAsync(byte[] deliveryTag, TransactionContext transaction)
    parameters:
    - id: deliveryTag
      type: byte[]
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  id: completeMessageAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: completeMessageAsync(UUID lockToken, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.completeMessageAsync(UUID lockToken, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync(UUID lockToken, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> completeMessageAsync(UUID lockToken, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: java.util.UUID
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,int,com.microsoft.azure.servicebus.primitives.SettleModePair)
  id: create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,int,com.microsoft.azure.servicebus.primitives.SettleModePair)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: create(MessagingFactory factory, String name, String recvPath, int prefetchCount, SettleModePair settleModePair)
  nameWithType: CoreMessageReceiver.create(MessagingFactory factory, String name, String recvPath, int prefetchCount, SettleModePair settleModePair)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(MessagingFactory factory, String name, String recvPath, int prefetchCount, SettleModePair settleModePair)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public static CompletableFuture<CoreMessageReceiver> create(MessagingFactory factory, String name, String recvPath, int prefetchCount, SettleModePair settleModePair)
    parameters:
    - id: factory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
    - id: name
      type: java.lang.String
    - id: recvPath
      type: java.lang.String
    - id: prefetchCount
      type: int
    - id: settleModePair
      type: com.microsoft.azure.servicebus.primitives.SettleModePair
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.primitives.CoreMessageReceiver>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,int,com.microsoft.azure.servicebus.primitives.SettleModePair,com.microsoft.azure.servicebus.primitives.MessagingEntityType)
  id: create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,int,com.microsoft.azure.servicebus.primitives.SettleModePair,com.microsoft.azure.servicebus.primitives.MessagingEntityType)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: create(MessagingFactory factory, String name, String recvPath, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  nameWithType: CoreMessageReceiver.create(MessagingFactory factory, String name, String recvPath, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(MessagingFactory factory, String name, String recvPath, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public static CompletableFuture<CoreMessageReceiver> create(MessagingFactory factory, String name, String recvPath, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
    parameters:
    - id: factory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
    - id: name
      type: java.lang.String
    - id: recvPath
      type: java.lang.String
    - id: prefetchCount
      type: int
    - id: settleModePair
      type: com.microsoft.azure.servicebus.primitives.SettleModePair
    - id: entityType
      type: com.microsoft.azure.servicebus.primitives.MessagingEntityType
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.primitives.CoreMessageReceiver>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,java.lang.String,boolean,int,com.microsoft.azure.servicebus.primitives.SettleModePair)
  id: create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,java.lang.String,boolean,int,com.microsoft.azure.servicebus.primitives.SettleModePair)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: create(MessagingFactory factory, String name, String recvPath, String sessionId, boolean isBrowsableSession, int prefetchCount, SettleModePair settleModePair)
  nameWithType: CoreMessageReceiver.create(MessagingFactory factory, String name, String recvPath, String sessionId, boolean isBrowsableSession, int prefetchCount, SettleModePair settleModePair)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(MessagingFactory factory, String name, String recvPath, String sessionId, boolean isBrowsableSession, int prefetchCount, SettleModePair settleModePair)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public static CompletableFuture<CoreMessageReceiver> create(MessagingFactory factory, String name, String recvPath, String sessionId, boolean isBrowsableSession, int prefetchCount, SettleModePair settleModePair)
    parameters:
    - id: factory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
    - id: name
      type: java.lang.String
    - id: recvPath
      type: java.lang.String
    - id: sessionId
      type: java.lang.String
    - id: isBrowsableSession
      type: boolean
    - id: prefetchCount
      type: int
    - id: settleModePair
      type: com.microsoft.azure.servicebus.primitives.SettleModePair
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.primitives.CoreMessageReceiver>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,java.lang.String,boolean,int,com.microsoft.azure.servicebus.primitives.SettleModePair,com.microsoft.azure.servicebus.primitives.MessagingEntityType)
  id: create(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,java.lang.String,boolean,int,com.microsoft.azure.servicebus.primitives.SettleModePair,com.microsoft.azure.servicebus.primitives.MessagingEntityType)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: create(MessagingFactory factory, String name, String recvPath, String sessionId, boolean isBrowsableSession, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  nameWithType: CoreMessageReceiver.create(MessagingFactory factory, String name, String recvPath, String sessionId, boolean isBrowsableSession, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create(MessagingFactory factory, String name, String recvPath, String sessionId, boolean isBrowsableSession, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public static CompletableFuture<CoreMessageReceiver> create(MessagingFactory factory, String name, String recvPath, String sessionId, boolean isBrowsableSession, int prefetchCount, SettleModePair settleModePair, MessagingEntityType entityType)
    parameters:
    - id: factory
      type: com.microsoft.azure.servicebus.primitives.MessagingFactory
    - id: name
      type: java.lang.String
    - id: recvPath
      type: java.lang.String
    - id: sessionId
      type: java.lang.String
    - id: isBrowsableSession
      type: boolean
    - id: prefetchCount
      type: int
    - id: settleModePair
      type: com.microsoft.azure.servicebus.primitives.SettleModePair
    - id: entityType
      type: com.microsoft.azure.servicebus.primitives.MessagingEntityType
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.primitives.CoreMessageReceiver>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(byte[],java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  id: deadLetterMessageAsync(byte[],java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: deadLetterMessageAsync(byte[] deliveryTag, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.deadLetterMessageAsync(byte[] deliveryTag, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(byte[] deliveryTag, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> deadLetterMessageAsync(byte[] deliveryTag, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: deliveryTag
      type: byte[]
    - id: deadLetterReason
      type: java.lang.String
    - id: deadLetterErrorDescription
      type: java.lang.String
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  id: deadLetterMessageAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: deadLetterMessageAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.deadLetterMessageAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> deadLetterMessageAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: java.util.UUID
    - id: deadLetterReason
      type: java.lang.String
    - id: deadLetterErrorDescription
      type: java.lang.String
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(byte[],java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  id: deferMessageAsync(byte[],java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: deferMessageAsync(byte[] deliveryTag, Map<String,Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.deferMessageAsync(byte[] deliveryTag, Map<String,Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(byte[] deliveryTag, Map<String,Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> deferMessageAsync(byte[] deliveryTag, Map<String,Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: deliveryTag
      type: byte[]
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  id: deferMessageAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: deferMessageAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.deferMessageAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> deferMessageAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockToken
      type: java.util.UUID
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getContext()
  id: getContext()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: getContext()
  nameWithType: CoreMessageReceiver.getContext()
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getContext()
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getContext*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public ErrorContext getContext()
    return:
      type: com.microsoft.azure.servicebus.primitives.ErrorContext
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getPrefetchCount()
  id: getPrefetchCount()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: getPrefetchCount()
  nameWithType: CoreMessageReceiver.getPrefetchCount()
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getPrefetchCount()
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getPrefetchCount*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public int getPrefetchCount()
    return:
      type: int
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionId()
  id: getSessionId()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: getSessionId()
  nameWithType: CoreMessageReceiver.getSessionId()
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionId()
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionId*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public String getSessionId()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionLockedUntilUtc()
  id: getSessionLockedUntilUtc()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: getSessionLockedUntilUtc()
  nameWithType: CoreMessageReceiver.getSessionLockedUntilUtc()
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionLockedUntilUtc()
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionLockedUntilUtc*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public Instant getSessionLockedUntilUtc()
    return:
      type: java.time.Instant
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionStateAsync()
  id: getSessionStateAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: getSessionStateAsync()
  nameWithType: CoreMessageReceiver.getSessionStateAsync()
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionStateAsync()
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionStateAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<byte[]> getSessionStateAsync()
    return:
      type: java.util.concurrent.CompletableFuture<byte[]>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose()
  id: onClose()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: onClose()
  nameWithType: CoreMessageReceiver.onClose()
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose()
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: protected CompletableFuture<Void> onClose()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose(org.apache.qpid.proton.amqp.transport.ErrorCondition)
  id: onClose(org.apache.qpid.proton.amqp.transport.ErrorCondition)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: onClose(ErrorCondition condition)
  nameWithType: CoreMessageReceiver.onClose(ErrorCondition condition)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose(ErrorCondition condition)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public void onClose(ErrorCondition condition)
    parameters:
    - id: condition
      type: org.apache.qpid.proton.amqp.transport.ErrorCondition
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onError(java.lang.Exception)
  id: onError(java.lang.Exception)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: onError(Exception exception)
  nameWithType: CoreMessageReceiver.onError(Exception exception)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onError(Exception exception)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onError*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public void onError(Exception exception)
    parameters:
    - id: exception
      type: java.lang.Exception
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onOpenComplete(java.lang.Exception)
  id: onOpenComplete(java.lang.Exception)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: onOpenComplete(Exception exception)
  nameWithType: CoreMessageReceiver.onOpenComplete(Exception exception)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onOpenComplete(Exception exception)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onOpenComplete*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public void onOpenComplete(Exception exception)
    parameters:
    - id: exception
      type: java.lang.Exception
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onReceiveComplete(org.apache.qpid.proton.engine.Delivery)
  id: onReceiveComplete(org.apache.qpid.proton.engine.Delivery)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: onReceiveComplete(Delivery delivery)
  nameWithType: CoreMessageReceiver.onReceiveComplete(Delivery delivery)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onReceiveComplete(Delivery delivery)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onReceiveComplete*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public void onReceiveComplete(Delivery delivery)
    parameters:
    - id: delivery
      type: org.apache.qpid.proton.engine.Delivery
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.peekMessagesAsync(long,int,java.lang.String)
  id: peekMessagesAsync(long,int,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: peekMessagesAsync(long fromSequenceNumber, int messageCount, String sessionId)
  nameWithType: CoreMessageReceiver.peekMessagesAsync(long fromSequenceNumber, int messageCount, String sessionId)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.peekMessagesAsync(long fromSequenceNumber, int messageCount, String sessionId)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.peekMessagesAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Collection<Message>> peekMessagesAsync(long fromSequenceNumber, int messageCount, String sessionId)
    parameters:
    - id: fromSequenceNumber
      type: long
    - id: messageCount
      type: int
    - id: sessionId
      type: java.lang.String
    return:
      type: java.util.concurrent.CompletableFuture<java.util.Collection<org.apache.qpid.proton.message.Message>>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveAsync(int,java.time.Duration)
  id: receiveAsync(int,java.time.Duration)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: receiveAsync(int maxMessageCount, Duration timeout)
  nameWithType: CoreMessageReceiver.receiveAsync(int maxMessageCount, Duration timeout)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveAsync(int maxMessageCount, Duration timeout)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Collection<MessageWithDeliveryTag>> receiveAsync(int maxMessageCount, Duration timeout)
    parameters:
    - id: maxMessageCount
      type: int
    - id: timeout
      type: java.time.Duration
    return:
      type: java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag>>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveDeferredMessageBatchAsync(java.lang.Long[])
  id: receiveDeferredMessageBatchAsync(java.lang.Long[])
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: receiveDeferredMessageBatchAsync(Long[] sequenceNumbers)
  nameWithType: CoreMessageReceiver.receiveDeferredMessageBatchAsync(Long[] sequenceNumbers)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveDeferredMessageBatchAsync(Long[] sequenceNumbers)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveDeferredMessageBatchAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Collection<MessageWithLockToken>> receiveDeferredMessageBatchAsync(Long[] sequenceNumbers)
    parameters:
    - id: sequenceNumbers
      type: java.lang.Long[]
    return:
      type: java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.primitives.MessageWithLockToken>>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewMessageLocksAsync(java.util.UUID[])
  id: renewMessageLocksAsync(java.util.UUID[])
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: renewMessageLocksAsync(UUID[] lockTokens)
  nameWithType: CoreMessageReceiver.renewMessageLocksAsync(UUID[] lockTokens)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewMessageLocksAsync(UUID[] lockTokens)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewMessageLocksAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Collection<Instant>> renewMessageLocksAsync(UUID[] lockTokens)
    parameters:
    - id: lockTokens
      type: java.util.UUID[]
    return:
      type: java.util.concurrent.CompletableFuture<java.util.Collection<java.time.Instant>>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewSessionLocksAsync()
  id: renewSessionLocksAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: renewSessionLocksAsync()
  nameWithType: CoreMessageReceiver.renewSessionLocksAsync()
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewSessionLocksAsync()
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewSessionLocksAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> renewSessionLocksAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setPrefetchCount(int)
  id: setPrefetchCount(int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: setPrefetchCount(int value)
  nameWithType: CoreMessageReceiver.setPrefetchCount(int value)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setPrefetchCount(int value)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setPrefetchCount*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public void setPrefetchCount(int value)
    parameters:
    - id: value
      type: int
  exceptions:
  - type: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setSessionStateAsync(byte[])
  id: setSessionStateAsync(byte[])
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: setSessionStateAsync(byte[] sessionState)
  nameWithType: CoreMessageReceiver.setSessionStateAsync(byte[] sessionState)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setSessionStateAsync(byte[] sessionState)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setSessionStateAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> setSessionStateAsync(byte[] sessionState)
    parameters:
    - id: sessionState
      type: byte[]
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.updateDispositionAsync(java.util.UUID[],java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  id: updateDispositionAsync(java.util.UUID[],java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  langs:
  - java
  name: updateDispositionAsync(UUID[] lockTokens, String dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  nameWithType: CoreMessageReceiver.updateDispositionAsync(UUID[] lockTokens, String dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.updateDispositionAsync(UUID[] lockTokens, String dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
  overload: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.updateDispositionAsync*
  type: Method
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public CompletableFuture<Void> updateDispositionAsync(UUID[] lockTokens, String dispositionStatus, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)
    parameters:
    - id: lockTokens
      type: java.util.UUID[]
    - id: dispositionStatus
      type: java.lang.String
    - id: deadLetterReason
      type: java.lang.String
    - id: deadLetterErrorDescription
      type: java.lang.String
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: transaction
      type: com.microsoft.azure.servicebus.TransactionContext
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
references:
- uid: com.microsoft.azure.servicebus.primitives.MessagingFactory
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.servicebus.primitives.SettleModePair
  name: SettleModePair
  nameWithType: SettleModePair
  fullName: com.microsoft.azure.servicebus.primitives.SettleModePair
- uid: com.microsoft.azure.servicebus.primitives.MessagingEntityType
  name: MessagingEntityType
  nameWithType: MessagingEntityType
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityType
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.CoreMessageReceiver*
  name: CoreMessageReceiver
  nameWithType: CoreMessageReceiver.CoreMessageReceiver
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.CoreMessageReceiver
  package: com.microsoft.azure.servicebus.primitives
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.primitives.CoreMessageReceiver>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
    name: CoreMessageReceiver
    fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create*
  name: create
  nameWithType: CoreMessageReceiver.create
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.create
  package: com.microsoft.azure.servicebus.primitives
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getPrefetchCount*
  name: getPrefetchCount
  nameWithType: CoreMessageReceiver.getPrefetchCount
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getPrefetchCount
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionId*
  name: getSessionId
  nameWithType: CoreMessageReceiver.getSessionId
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionId
  package: com.microsoft.azure.servicebus.primitives
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionLockedUntilUtc*
  name: getSessionLockedUntilUtc
  nameWithType: CoreMessageReceiver.getSessionLockedUntilUtc
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionLockedUntilUtc
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setPrefetchCount*
  name: setPrefetchCount
  nameWithType: CoreMessageReceiver.setPrefetchCount
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setPrefetchCount
  package: com.microsoft.azure.servicebus.primitives
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag
    name: MessageWithDeliveryTag
    fullName: com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveAsync*
  name: receiveAsync
  nameWithType: CoreMessageReceiver.receiveAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onOpenComplete*
  name: onOpenComplete
  nameWithType: CoreMessageReceiver.onOpenComplete
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onOpenComplete
  package: com.microsoft.azure.servicebus.primitives
- uid: org.apache.qpid.proton.engine.Delivery
  spec.java:
  - uid: org.apache.qpid.proton.engine.Delivery
    name: Delivery
    fullName: org.apache.qpid.proton.engine.Delivery
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onReceiveComplete*
  name: onReceiveComplete
  nameWithType: CoreMessageReceiver.onReceiveComplete
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onReceiveComplete
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onError*
  name: onError
  nameWithType: CoreMessageReceiver.onError
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onError
  package: com.microsoft.azure.servicebus.primitives
- uid: org.apache.qpid.proton.amqp.transport.ErrorCondition
  spec.java:
  - uid: org.apache.qpid.proton.amqp.transport.ErrorCondition
    name: ErrorCondition
    fullName: org.apache.qpid.proton.amqp.transport.ErrorCondition
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose*
  name: onClose
  nameWithType: CoreMessageReceiver.onClose
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.onClose
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.ErrorContext
  spec.java:
  - uid: com.microsoft.azure.servicebus.primitives.ErrorContext
    name: ErrorContext
    fullName: com.microsoft.azure.servicebus.primitives.ErrorContext
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getContext*
  name: getContext
  nameWithType: CoreMessageReceiver.getContext
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getContext
  package: com.microsoft.azure.servicebus.primitives
- uid: java.util.concurrent.CompletableFuture<java.lang.Void>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.servicebus.TransactionContext
  name: TransactionContext
  nameWithType: TransactionContext
  fullName: com.microsoft.azure.servicebus.TransactionContext
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync*
  name: completeMessageAsync
  nameWithType: CoreMessageReceiver.completeMessageAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.completeMessageAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: java.util.UUID
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync*
  name: abandonMessageAsync
  nameWithType: CoreMessageReceiver.abandonMessageAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.abandonMessageAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync*
  name: deferMessageAsync
  nameWithType: CoreMessageReceiver.deferMessageAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deferMessageAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync*
  name: deadLetterMessageAsync
  nameWithType: CoreMessageReceiver.deadLetterMessageAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.deadLetterMessageAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: java.util.UUID[]
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
  - name: '[]'
    fullName: '[]'
- uid: java.util.concurrent.CompletableFuture<java.util.Collection<java.time.Instant>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewMessageLocksAsync*
  name: renewMessageLocksAsync
  nameWithType: CoreMessageReceiver.renewMessageLocksAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewMessageLocksAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: java.lang.Long[]
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
  - name: '[]'
    fullName: '[]'
- uid: java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.primitives.MessageWithLockToken>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.primitives.MessageWithLockToken
    name: MessageWithLockToken
    fullName: com.microsoft.azure.servicebus.primitives.MessageWithLockToken
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveDeferredMessageBatchAsync*
  name: receiveDeferredMessageBatchAsync
  nameWithType: CoreMessageReceiver.receiveDeferredMessageBatchAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.receiveDeferredMessageBatchAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.updateDispositionAsync*
  name: updateDispositionAsync
  nameWithType: CoreMessageReceiver.updateDispositionAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.updateDispositionAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewSessionLocksAsync*
  name: renewSessionLocksAsync
  nameWithType: CoreMessageReceiver.renewSessionLocksAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.renewSessionLocksAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: java.util.concurrent.CompletableFuture<byte[]>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionStateAsync*
  name: getSessionStateAsync
  nameWithType: CoreMessageReceiver.getSessionStateAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.getSessionStateAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setSessionStateAsync*
  name: setSessionStateAsync
  nameWithType: CoreMessageReceiver.setSessionStateAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.setSessionStateAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: java.util.concurrent.CompletableFuture<java.util.Collection<org.apache.qpid.proton.message.Message>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: org.apache.qpid.proton.message.Message
    name: Message
    fullName: org.apache.qpid.proton.message.Message
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.peekMessagesAsync*
  name: peekMessagesAsync
  nameWithType: CoreMessageReceiver.peekMessagesAsync
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.peekMessagesAsync
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity
- uid: com.microsoft.azure.servicebus.amqp.IAmqpReceiver
  name: IAmqpReceiver
  nameWithType: IAmqpReceiver
  fullName: com.microsoft.azure.servicebus.amqp.IAmqpReceiver
- uid: com.microsoft.azure.servicebus.primitives.IErrorContextProvider
  name: IErrorContextProvider
  nameWithType: IErrorContextProvider
  fullName: com.microsoft.azure.servicebus.primitives.IErrorContextProvider
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
  name: ClientEntity.setClosed()
  nameWithType: ClientEntity.setClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
  name: ClientEntity.finalize()
  nameWithType: ClientEntity.finalize()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()
  name: ClientEntity.setClosing()
  nameWithType: ClientEntity.setClosing()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)
  name: ClientEntity.throwIfClosed(Throwable)
  nameWithType: ClientEntity.throwIfClosed(Throwable)
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.close()
  name: ClientEntity.close()
  nameWithType: ClientEntity.close()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.close()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
  name: ClientEntity.closeAsync()
  nameWithType: ClientEntity.closeAsync()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()
  name: ClientEntity.onClose()
  nameWithType: ClientEntity.onClose()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
  name: ClientEntity.getIsClosed()
  nameWithType: ClientEntity.getIsClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
  name: ClientEntity.getIsClosingOrClosed()
  nameWithType: ClientEntity.getIsClosingOrClosed()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
  name: ClientEntity.getClientId()
  nameWithType: ClientEntity.getClientId()
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag
  name: MessageWithDeliveryTag
  nameWithType: MessageWithDeliveryTag
  fullName: com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: com.microsoft.azure.servicebus.primitives.MessageWithLockToken
  name: MessageWithLockToken
  nameWithType: MessageWithLockToken
  fullName: com.microsoft.azure.servicebus.primitives.MessageWithLockToken
- uid: org.apache.qpid.proton.message.Message
  name: Message
  nameWithType: Message
  fullName: org.apache.qpid.proton.message.Message
