items:
- uid: microsoft.servicefabric.actors._actor_remoting_exception_handler
  id: _actor_remoting_exception_handler
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_remoting_exception_handler.handleException(ExceptionInformation,OperationRetrySettings)
  href: microsoft.servicefabric.actors._actor_remoting_exception_handler.yml
  langs:
  - java
  name: ActorRemotingExceptionHandler
  nameWithType: ActorRemotingExceptionHandler
  fullName: microsoft.servicefabric.actors.ActorRemotingExceptionHandler
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRemotingExceptionHandler.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRemotingExceptionHandler.java
    startLine: 60
  package: microsoft.servicefabric.actors
  summary: >-
    <p>This class provide handling of exceptions encountered in communicating with service fabric actors over remoted actor interfaces.</p>

    <p>

      <bold>Remarks:</bold> This exception handler handles exceptions related to the following scenarios: </p>

    <p>

      <itemizedlist>

        <listitem>

          <p>&lt;cite&gt;Duplicate Messages:&lt;/cite&gt; </p>

          <p>Operations performed on the actor are retried from the client based on the exception handling logic. These exceptions represent various error condition including service failover. Therefore it is possible for the actors to receive duplicate messages. If a duplicate message is received while previous message is being processed by the actor, runtime return an internal exception to the client. The client then retries the operation to get the result back from the actor. From the actor's perspective duplicate operation will be performed by the clients and it should handle it in the similar manner as if the operation was already processed and then a duplicate message arrived. </p>

          <p></p>

          <p></p>

        </listitem>

        <listitem>

          <p>&lt;cite&gt;<xref href="microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception" data-throw-if-not-resolved="false"></xref>:&lt;/cite&gt; </p>

          <p>Operations on the actors are performed using a turn based concurrency lock ( <xref href="microsoft.servicefabric.actors._actor_concurrency_settings" data-throw-if-not-resolved="false"></xref>) that supports logical call context based reentrancy. In case of the long running actor operations it is possible for acquisition of this lock to time out. The acquisition of the lock can also time out in case of the deadlock situations (actor A and actor B calling each other almost at the same time). </p>

          <p></p>

          <p>The exception related to concurrency lock timeout is handled by returning <ref refid="" kindref="compound">ExceptionHandlingRetryResult</ref> from the <xref href="microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)" data-throw-if-not-resolved="false"></xref> method if the client performing the operation is not another actor. The <ref refid="" kindref="compound">ExceptionHandlingRetryResult#isTransient</ref> property of the <ref refid="" kindref="compound">ExceptionHandlingRetryResult</ref> is set to true, the <ref refid="" kindref="compound">ExceptionHandlingRetryResult</ref>'s retryDelay property is set to a random value up to <ref refid="" kindref="compound">OperationRetrySettings</ref>'s MaxRetryBackoffIntervalOnTransientErrors and <ref refid="" kindref="compound">ExceptionHandlingRetryResult</ref>'s MaxRetryCount property is set to <ref refid="" kindref="compound">Integer#MAX_VALUE</ref>. </p>

          <p></p>

          <p>The exception related to concurrency lock timeout is handled by returning <ref refid="" kindref="compound">ExceptionHandlingThrowResult</ref> from the <xref href="microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)" data-throw-if-not-resolved="false"></xref> method, if the client performing the operation is another actor. In the deadlock situations this allows the call chain to unwind all the way back to the original client and the operation is then retried from there. </p>

          <p></p>

        </listitem>

      </itemizedlist>

    </p>
  syntax:
    content: public class ActorRemotingExceptionHandler implements ExceptionHandler
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.communication.client._exception_handler
- uid: microsoft.servicefabric.actors._actor_remoting_exception_handler.handleException(ExceptionInformation,OperationRetrySettings)
  id: handleException(ExceptionInformation,OperationRetrySettings)
  parent: microsoft.servicefabric.actors._actor_remoting_exception_handler
  href: microsoft.servicefabric.actors._actor_remoting_exception_handler.yml
  langs:
  - java
  name: handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: ActorRemotingExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  fullName: ExceptionHandlingResult microsoft.servicefabric.actors.ActorRemotingExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  overload: microsoft.servicefabric.actors._actor_remoting_exception_handler.handleException*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRemotingExceptionHandler.java
    startLine: 72
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Method that examines the exception and determines how that exception can be handled.</p>

    <p></p>
  syntax:
    content: public ExceptionHandlingResult handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
    parameters:
    - id: exceptionInformation
      type: microsoft.servicefabric.services.communication.client._exception_information
      description: <p>Information about the exception. </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client._operation_retry_settings
      description: <p>The operation retry preferences. </p>
    return:
      type: microsoft.servicefabric.services.communication.client._exception_handling_result
      description: <p>Result of the exception handling. </p>
  overridden: microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)
references:
- uid: microsoft.servicefabric.actors._actor_remoting_exception_handler.handleException*
  name: handleException
  nameWithType: ActorRemotingExceptionHandler.handleException
  fullName: ExceptionHandlingResult microsoft.servicefabric.actors.ActorRemotingExceptionHandler.handleException
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.services.communication.client._exception_handler
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._exception_handler.yml
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: microsoft.servicefabric.services.communication.client.ExceptionHandler
  type: Interface
  summary: <p>Defines the interface for handling the exceptions encountered in communicating with service fabric services. </p>
  syntax:
    content: public interface ExceptionHandler
- uid: microsoft.servicefabric.services.communication.client._exception_handling_result
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._exception_handling_result.yml
  name: ExceptionHandlingResult
  nameWithType: ExceptionHandlingResult
  fullName: microsoft.servicefabric.services.communication.client.ExceptionHandlingResult
  type: Class
  summary: <p>Specifies the base class for the result from handling an exception during client to service communication. </p>
  syntax:
    content: public class ExceptionHandlingResult
- uid: microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client._exception_handler
  href: microsoft.servicefabric.services.communication.client._exception_handler.yml
  name: handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: ExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  fullName: ExceptionHandlingResult microsoft.servicefabric.services.communication.client.ExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  type: Method
  summary: >-
    <p>Method that examines the exception and determines how that exception can be handled.</p>

    <p></p>
  syntax:
    content: public ExceptionHandlingResult handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
    parameters:
    - id: exceptionInformation
      type: microsoft.servicefabric.services.communication.client._exception_information
      description: <p>Information about the exception. </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client._operation_retry_settings
      description: <p>The operation retry preferences. </p>
    return:
      type: microsoft.servicefabric.services.communication.client._exception_handling_result
      description: <p>true if the exception is handled, false otherwise </p>
- uid: microsoft.servicefabric.services.communication.client._exception_information
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._exception_information.yml
  name: ExceptionInformation
  nameWithType: ExceptionInformation
  fullName: microsoft.servicefabric.services.communication.client.ExceptionInformation
  type: Class
  summary: <p>Specifies the class that encapsulates the exception seen on the communication channel and additional information required to handle that exception. </p>
  syntax:
    content: public class ExceptionInformation
- uid: microsoft.servicefabric.services.communication.client._operation_retry_settings
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._operation_retry_settings.yml
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: microsoft.servicefabric.services.communication.client.OperationRetrySettings
  type: Class
  syntax:
    content: public class OperationRetrySettings
- uid: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception.yml
  name: ActorConcurrencyLockTimeoutException
  nameWithType: ActorConcurrencyLockTimeoutException
  fullName: microsoft.servicefabric.actors.ActorConcurrencyLockTimeoutException
  type: Class
  summary: <p>Exception thrown by actor runtime when runtime cannot acquire the turn based concurrency lock to dispatch the method. </p>
  syntax:
    content: public class ActorConcurrencyLockTimeoutException extends FabricException
- uid: microsoft.servicefabric.actors._actor_concurrency_settings
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  name: ActorConcurrencySettings
  nameWithType: ActorConcurrencySettings
  fullName: microsoft.servicefabric.actors.ActorConcurrencySettings
  type: Class
  summary: <p>The method calls on an actor dispatched via in turn with support for logical call context based reentrancy. This class provides the settings to configure the turn based concurrency lock for actors. </p>
  syntax:
    content: public class ActorConcurrencySettings
