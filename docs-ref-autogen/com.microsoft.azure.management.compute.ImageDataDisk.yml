### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.blobUri()
  name: blobUri()
  nameWithType: ImageDataDisk.blobUri()
  returns:
    description: <p>the blobUri value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the blobUri value.</p>

    <p></p>
  syntax: public String blobUri()
  uid: com.microsoft.azure.management.compute.ImageDataDisk.blobUri()
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.caching()
  name: caching()
  nameWithType: ImageDataDisk.caching()
  returns:
    description: <p>the caching value </p>
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the caching value.</p>

    <p></p>
  syntax: public CachingTypes caching()
  uid: com.microsoft.azure.management.compute.ImageDataDisk.caching()
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.diskSizeGB()
  name: diskSizeGB()
  nameWithType: ImageDataDisk.diskSizeGB()
  returns:
    description: <p>the diskSizeGB value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the diskSizeGB value.</p>

    <p></p>
  syntax: public Integer diskSizeGB()
  uid: com.microsoft.azure.management.compute.ImageDataDisk.diskSizeGB()
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.lun()
  name: lun()
  nameWithType: ImageDataDisk.lun()
  returns:
    description: <p>the lun value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the lun value.</p>

    <p></p>
  syntax: public int lun()
  uid: com.microsoft.azure.management.compute.ImageDataDisk.lun()
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.managedDisk()
  name: managedDisk()
  nameWithType: ImageDataDisk.managedDisk()
  returns:
    description: <p>the managedDisk value </p>
    type: <xref href="SubResource?alt=SubResource&text=SubResource" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the managedDisk value.</p>

    <p></p>
  syntax: public SubResource managedDisk()
  uid: com.microsoft.azure.management.compute.ImageDataDisk.managedDisk()
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.snapshot()
  name: snapshot()
  nameWithType: ImageDataDisk.snapshot()
  returns:
    description: <p>the snapshot value </p>
    type: <xref href="SubResource?alt=SubResource&text=SubResource" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the snapshot value.</p>

    <p></p>
  syntax: public SubResource snapshot()
  uid: com.microsoft.azure.management.compute.ImageDataDisk.snapshot()
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.storageAccountType()
  name: storageAccountType()
  nameWithType: ImageDataDisk.storageAccountType()
  returns:
    description: <p>the storageAccountType value </p>
    type: <xref href="com.microsoft.azure.management.compute.StorageAccountTypes?alt=com.microsoft.azure.management.compute.StorageAccountTypes&text=StorageAccountTypes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the storageAccountType value.</p>

    <p></p>
  syntax: public StorageAccountTypes storageAccountType()
  uid: com.microsoft.azure.management.compute.ImageDataDisk.storageAccountType()
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.withBlobUri(String blobUri)
  name: withBlobUri(String blobUri)
  nameWithType: ImageDataDisk.withBlobUri(String blobUri)
  parameters:
  - description: <p>the blobUri value to set </p>
    name: blobUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.ImageDataDisk?alt=com.microsoft.azure.management.compute.ImageDataDisk&text=ImageDataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the blobUri value.</p>

    <p></p>
  syntax: public ImageDataDisk withBlobUri(String blobUri)
  uid: com.microsoft.azure.management.compute.ImageDataDisk.withBlobUri(String)
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.withCaching(CachingTypes caching)
  name: withCaching(CachingTypes caching)
  nameWithType: ImageDataDisk.withCaching(CachingTypes caching)
  parameters:
  - description: <p>the caching value to set </p>
    name: caching
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.ImageDataDisk?alt=com.microsoft.azure.management.compute.ImageDataDisk&text=ImageDataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the caching value.</p>

    <p></p>
  syntax: public ImageDataDisk withCaching(CachingTypes caching)
  uid: com.microsoft.azure.management.compute.ImageDataDisk.withCaching(CachingTypes)
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.withDiskSizeGB(Integer diskSizeGB)
  name: withDiskSizeGB(Integer diskSizeGB)
  nameWithType: ImageDataDisk.withDiskSizeGB(Integer diskSizeGB)
  parameters:
  - description: <p>the diskSizeGB value to set </p>
    name: diskSizeGB
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.ImageDataDisk?alt=com.microsoft.azure.management.compute.ImageDataDisk&text=ImageDataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the diskSizeGB value.</p>

    <p></p>
  syntax: public ImageDataDisk withDiskSizeGB(Integer diskSizeGB)
  uid: com.microsoft.azure.management.compute.ImageDataDisk.withDiskSizeGB(Integer)
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.withLun(int lun)
  name: withLun(int lun)
  nameWithType: ImageDataDisk.withLun(int lun)
  parameters:
  - description: <p>the lun value to set </p>
    name: lun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.ImageDataDisk?alt=com.microsoft.azure.management.compute.ImageDataDisk&text=ImageDataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the lun value.</p>

    <p></p>
  syntax: public ImageDataDisk withLun(int lun)
  uid: com.microsoft.azure.management.compute.ImageDataDisk.withLun(int)
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.withManagedDisk(SubResource managedDisk)
  name: withManagedDisk(SubResource managedDisk)
  nameWithType: ImageDataDisk.withManagedDisk(SubResource managedDisk)
  parameters:
  - description: <p>the managedDisk value to set </p>
    name: managedDisk
    type: <xref href="SubResource?alt=SubResource&text=SubResource" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.ImageDataDisk?alt=com.microsoft.azure.management.compute.ImageDataDisk&text=ImageDataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the managedDisk value.</p>

    <p></p>
  syntax: public ImageDataDisk withManagedDisk(SubResource managedDisk)
  uid: com.microsoft.azure.management.compute.ImageDataDisk.withManagedDisk(SubResource)
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.withSnapshot(SubResource snapshot)
  name: withSnapshot(SubResource snapshot)
  nameWithType: ImageDataDisk.withSnapshot(SubResource snapshot)
  parameters:
  - description: <p>the snapshot value to set </p>
    name: snapshot
    type: <xref href="SubResource?alt=SubResource&text=SubResource" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.ImageDataDisk?alt=com.microsoft.azure.management.compute.ImageDataDisk&text=ImageDataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the snapshot value.</p>

    <p></p>
  syntax: public ImageDataDisk withSnapshot(SubResource snapshot)
  uid: com.microsoft.azure.management.compute.ImageDataDisk.withSnapshot(SubResource)
- fullName: com.microsoft.azure.management.compute.ImageDataDisk.withStorageAccountType(StorageAccountTypes storageAccountType)
  name: withStorageAccountType(StorageAccountTypes storageAccountType)
  nameWithType: ImageDataDisk.withStorageAccountType(StorageAccountTypes storageAccountType)
  parameters:
  - description: <p>the storageAccountType value to set </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.compute.StorageAccountTypes?alt=com.microsoft.azure.management.compute.StorageAccountTypes&text=StorageAccountTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.ImageDataDisk?alt=com.microsoft.azure.management.compute.ImageDataDisk&text=ImageDataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the storageAccountType value.</p>

    <p></p>
  syntax: public ImageDataDisk withStorageAccountType(StorageAccountTypes storageAccountType)
  uid: com.microsoft.azure.management.compute.ImageDataDisk.withStorageAccountType(StorageAccountTypes)
nameWithType: ImageDataDisk
syntax: public class ImageDataDisk
type: class
uid: com.microsoft.azure.management.compute.ImageDataDisk
fullName: com.microsoft.azure.management.compute.ImageDataDisk
name: ImageDataDisk
package: com.microsoft.azure.management.compute
summary: <p>Describes a data disk. </p>
metadata: {}
