### YamlMime:JavaMember
uid: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getImmutabilityPolicyAsync*"
fullName: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getImmutabilityPolicyAsync"
name: "getImmutabilityPolicyAsync"
nameWithType: "BlobContainersImpl.getImmutabilityPolicyAsync"
members:
- uid: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)"
  name: "getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)"
  nameWithType: "BlobContainersImpl.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)"
  summary: "Gets the existing immutability policy along with the corresponding ETag in response headers and body."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ImmutabilityPolicy> getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.ImmutabilityPolicy?alt=com.azure.resourcemanager.storage.models.ImmutabilityPolicy&text=ImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)"
  name: "getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)"
  nameWithType: "BlobContainersImpl.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)"
  summary: "Gets the existing immutability policy along with the corresponding ETag in response headers and body."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "eTagValue"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ImmutabilityPolicy> getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.ImmutabilityPolicy?alt=com.azure.resourcemanager.storage.models.ImmutabilityPolicy&text=ImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.storage.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
