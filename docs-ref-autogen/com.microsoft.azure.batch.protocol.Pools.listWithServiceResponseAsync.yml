### YamlMime:JavaMember
nameWithType: Pools.listWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: Pools.listWithServiceResponseAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>&gt;, <xref href="com.microsoft.azure.batch.protocol.models.PoolListHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListHeaders&text=PoolListHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the pools in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Page<CloudPool>, PoolListHeaders>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
- fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(final PoolListOptions poolListOptions)
  name: listWithServiceResponseAsync(final PoolListOptions poolListOptions)
  nameWithType: Pools.listWithServiceResponseAsync(final PoolListOptions poolListOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: poolListOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.PoolListOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListOptions&text=PoolListOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>&gt;, <xref href="com.microsoft.azure.batch.protocol.models.PoolListHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListHeaders&text=PoolListHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the pools in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Page<CloudPool>, PoolListHeaders>> listWithServiceResponseAsync(final PoolListOptions poolListOptions)
  uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(final PoolListOptions)
uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
name: listWithServiceResponseAsync()
package: com.microsoft.azure.batch.protocol
metadata: {}
