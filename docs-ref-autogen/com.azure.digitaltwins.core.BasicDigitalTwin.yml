### YamlMime:JavaType
uid: "com.azure.digitaltwins.core.BasicDigitalTwin"
fullName: "com.azure.digitaltwins.core.BasicDigitalTwin"
name: "BasicDigitalTwin"
nameWithType: "BasicDigitalTwin"
summary: "An optional, helper class for deserializing a digital twin."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BasicDigitalTwin**"
constructors:
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.BasicDigitalTwin(java.lang.String)"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.BasicDigitalTwin(String digitalTwinId)"
  name: "BasicDigitalTwin(String digitalTwinId)"
  nameWithType: "BasicDigitalTwin.BasicDigitalTwin(String digitalTwinId)"
  summary: "Construct a basic digital twin."
  parameters:
  - description: "The Id of the digital twin. The Id is unique within the service and case sensitive."
    name: "digitalTwinId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BasicDigitalTwin(String digitalTwinId)"
  desc: "Construct a basic digital twin."
methods:
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.addToContents(java.lang.String,java.lang.Object)"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.addToContents(String key, Object value)"
  name: "addToContents(String key, Object value)"
  nameWithType: "BasicDigitalTwin.addToContents(String key, Object value)"
  summary: "Adds an additional custom property to the digital twin contents."
  parameters:
  - description: "The key of the additional property to be added to the digital twin."
    name: "key"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The value of the additional property to be added to the digital twin."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public BasicDigitalTwin addToContents(String key, Object value)"
  desc: "Adds an additional custom property to the digital twin contents. This field will contain any contents of the digital twin that are not already defined by the other strong types of this class."
  returns:
    description: "The BasicDigitalTwin object itself."
    type: "<xref href=\"com.azure.digitaltwins.core.BasicDigitalTwin?alt=com.azure.digitaltwins.core.BasicDigitalTwin&text=BasicDigitalTwin\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.getContents()"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.getContents()"
  name: "getContents()"
  nameWithType: "BasicDigitalTwin.getContents()"
  summary: "Gets the additional custom contents of the digital twin."
  syntax: "public Map<String,Object> getContents()"
  desc: "Gets the additional custom contents of the digital twin. This field will contain any contents of the digital twin that are not already defined by the other strong types of this class."
  returns:
    description: "The additional contents of the digital twin. This field will contain any contents of the digital twin that are not already defined by the other strong types of this class."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>&gt;"
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.getETag()"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.getETag()"
  name: "getETag()"
  nameWithType: "BasicDigitalTwin.getETag()"
  summary: "Gets a string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232."
  syntax: "public String getETag()"
  desc: "Gets a string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232."
  returns:
    description: "A string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.getId()"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.getId()"
  name: "getId()"
  nameWithType: "BasicDigitalTwin.getId()"
  summary: "Gets the unique Id of the digital twin in a digital twins instance."
  syntax: "public String getId()"
  desc: "Gets the unique Id of the digital twin in a digital twins instance. This field is present on every digital twin."
  returns:
    description: "The unique Id of the digital twin in a digital twins instance. This field is present on every digital twin."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.getLastUpdatedOn()"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.getLastUpdatedOn()"
  name: "getLastUpdatedOn()"
  nameWithType: "BasicDigitalTwin.getLastUpdatedOn()"
  summary: "Gets the date and time when the twin was last updated."
  syntax: "public OffsetDateTime getLastUpdatedOn()"
  desc: "Gets the date and time when the twin was last updated."
  returns:
    description: "The date and time the twin was last updated."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.getMetadata()"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.getMetadata()"
  name: "getMetadata()"
  nameWithType: "BasicDigitalTwin.getMetadata()"
  summary: "Gets the information about the model a digital twin conforms to."
  syntax: "public BasicDigitalTwinMetadata getMetadata()"
  desc: "Gets the information about the model a digital twin conforms to. This field is present on every digital twin."
  returns:
    description: "The information about the model a digital twin conforms to. This field is present on every digital twin."
    type: "<xref href=\"com.azure.digitaltwins.core.BasicDigitalTwinMetadata?alt=com.azure.digitaltwins.core.BasicDigitalTwinMetadata&text=BasicDigitalTwinMetadata\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.setETag(java.lang.String)"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.setETag(String etag)"
  name: "setETag(String etag)"
  nameWithType: "BasicDigitalTwin.setETag(String etag)"
  summary: "Sets a string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232."
  parameters:
  - description: "A string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232."
    name: "etag"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BasicDigitalTwin setETag(String etag)"
  desc: "Sets a string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232."
  returns:
    description: "The BasicDigitalTwin object itself."
    type: "<xref href=\"com.azure.digitaltwins.core.BasicDigitalTwin?alt=com.azure.digitaltwins.core.BasicDigitalTwin&text=BasicDigitalTwin\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.digitaltwins.core.BasicDigitalTwin.setMetadata(com.azure.digitaltwins.core.BasicDigitalTwinMetadata)"
  fullName: "com.azure.digitaltwins.core.BasicDigitalTwin.setMetadata(BasicDigitalTwinMetadata metadata)"
  name: "setMetadata(BasicDigitalTwinMetadata metadata)"
  nameWithType: "BasicDigitalTwin.setMetadata(BasicDigitalTwinMetadata metadata)"
  summary: "Sets the information about the model a digital twin conforms to."
  parameters:
  - description: "The information about the model a digital twin conforms to. This field is present on every digital twin."
    name: "metadata"
    type: "<xref href=\"com.azure.digitaltwins.core.BasicDigitalTwinMetadata?alt=com.azure.digitaltwins.core.BasicDigitalTwinMetadata&text=BasicDigitalTwinMetadata\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BasicDigitalTwin setMetadata(BasicDigitalTwinMetadata metadata)"
  desc: "Sets the information about the model a digital twin conforms to. This field is present on every digital twin."
  returns:
    description: "The BasicDigitalTwin object itself."
    type: "<xref href=\"com.azure.digitaltwins.core.BasicDigitalTwin?alt=com.azure.digitaltwins.core.BasicDigitalTwin&text=BasicDigitalTwin\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An optional, helper class for deserializing a digital twin. Only properties with non-null values are included.\n\nNote that this class uses <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonProperty\"></xref> from the Jackson serialization library. Because of this, this type will only work if the default json serializer is used by the digital twins client or if the custom json serializer uses Jackson as well. In order to use a different json library, a new BasicDigitalTwin class must be constructed and have its json properties tagged by the annotation used by that json library."
metadata: {}
package: "com.azure.digitaltwins.core"
artifact: com.azure:azure-digitaltwins-core:1.3.4
