### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  id: "AppendBlobsImpl"
  parent: "com.azure.storage.blob.implementation"
  children:
  - "com.azure.storage.blob.implementation.AppendBlobsImpl.AppendBlobsImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  - "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,long,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,long,java.lang.String,byte[],byte[],java.lang.Integer,byte[],java.lang.String,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Integer,byte[],byte[],java.lang.String,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "AppendBlobsImpl"
  nameWithType: "AppendBlobsImpl"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  type: "Class"
  package: "com.azure.storage.blob.implementation"
  summary: "An instance of this class provides access to all the operations defined in AppendBlobs."
  syntax:
    content: "public final class AppendBlobsImpl"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.AppendBlobsImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  id: "AppendBlobsImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  parent: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  langs:
  - "java"
  name: "AppendBlobsImpl(AzureBlobStorageImpl client)"
  nameWithType: "AppendBlobsImpl.AppendBlobsImpl(AzureBlobStorageImpl client)"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.AppendBlobsImpl(AzureBlobStorageImpl client)"
  overload: "com.azure.storage.blob.implementation.AppendBlobsImpl.AppendBlobsImpl*"
  type: "Constructor"
  package: "com.azure.storage.blob.implementation"
  summary: "Initializes an instance of AppendBlobsImpl."
  syntax:
    content: "public AppendBlobsImpl(AzureBlobStorageImpl client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,long,com.azure.core.util.Context)"
  id: "appendBlockFromUrlWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  langs:
  - "java"
  name: "appendBlockFromUrlWithRestResponseAsync(String containerName, String blob, URL sourceUrl, long contentLength, Context context)"
  nameWithType: "AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync(String containerName, String blob, URL sourceUrl, long contentLength, Context context)"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync(String containerName, String blob, URL sourceUrl, long contentLength, Context context)"
  overload: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Append Block operation commits a new block of data to the end of an existing append blob where the contents are read from a source url. The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version 2015-02-21 version or later."
  syntax:
    content: "public Mono<AppendBlobsAppendBlockFromUrlResponse> appendBlockFromUrlWithRestResponseAsync(String containerName, String blob, URL sourceUrl, long contentLength, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "sourceUrl"
      type: "java.net.URL"
      description: "Specify a URL to the copy source."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockFromUrlResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,long,java.lang.String,byte[],byte[],java.lang.Integer,byte[],java.lang.String,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  id: "appendBlockFromUrlWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,long,java.lang.String,byte[],byte[],java.lang.Integer,byte[],java.lang.String,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  langs:
  - "java"
  name: "appendBlockFromUrlWithRestResponseAsync(String containerName, String blob, URL sourceUrl, long contentLength, String sourceRange, byte[] sourceContentMD5, byte[] sourceContentcrc64, Integer timeout, byte[] transactionalContentMD5, String leaseId, Long maxSize, Long appendPosition, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync(String containerName, String blob, URL sourceUrl, long contentLength, String sourceRange, byte[] sourceContentMD5, byte[] sourceContentcrc64, Integer timeout, byte[] transactionalContentMD5, String leaseId, Long maxSize, Long appendPosition, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync(String containerName, String blob, URL sourceUrl, long contentLength, String sourceRange, byte[] sourceContentMD5, byte[] sourceContentcrc64, Integer timeout, byte[] transactionalContentMD5, String leaseId, Long maxSize, Long appendPosition, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Append Block operation commits a new block of data to the end of an existing append blob where the contents are read from a source url. The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version 2015-02-21 version or later."
  syntax:
    content: "public Mono<AppendBlobsAppendBlockFromUrlResponse> appendBlockFromUrlWithRestResponseAsync(String containerName, String blob, URL sourceUrl, long contentLength, String sourceRange, byte[] sourceContentMD5, byte[] sourceContentcrc64, Integer timeout, byte[] transactionalContentMD5, String leaseId, Long maxSize, Long appendPosition, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "sourceUrl"
      type: "java.net.URL"
      description: "Specify a URL to the copy source."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "sourceRange"
      type: "java.lang.String"
      description: "Bytes of source data in the specified range."
    - id: "sourceContentMD5"
      type: "byte[]"
      description: "Specify the md5 calculated for the range of bytes that must be read from the copy source."
    - id: "sourceContentcrc64"
      type: "byte[]"
      description: "Specify the crc64 calculated for the range of bytes that must be read from the copy source."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "transactionalContentMD5"
      type: "byte[]"
      description: "Specify the transactional md5 for the body, to be validated by the service."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "maxSize"
      type: "java.lang.Long"
      description: "Optional conditional header. The max length in bytes permitted for the append blob. If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the value specified in this header, the request will fail with MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed)."
    - id: "appendPosition"
      type: "java.lang.Long"
      description: "Optional conditional header, used only for the Append Block operation. A number indicating the byte offset to compare. Append Block will succeed only if the append position is equal to this number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP status code 412 - Precondition Failed)."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "sourceIfModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "sourceIfUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "sourceIfMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "cpkInfo"
      type: "com.azure.storage.blob.models.CpkInfo"
      description: "Additional parameters for the operation."
    - id: "encryptionScope"
      type: "com.azure.storage.blob.implementation.models.EncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockFromUrlResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)"
  id: "appendBlockWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  langs:
  - "java"
  name: "appendBlockWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Context context)"
  nameWithType: "AppendBlobsImpl.appendBlockWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Context context)"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Context context)"
  overload: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Append Block operation commits a new block of data to the end of an existing append blob. The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version 2015-02-21 version or later."
  syntax:
    content: "public Mono<AppendBlobsAppendBlockResponse> appendBlockWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "Initial data."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Integer,byte[],byte[],java.lang.String,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  id: "appendBlockWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Integer,byte[],byte[],java.lang.String,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  langs:
  - "java"
  name: "appendBlockWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Integer timeout, byte[] transactionalContentMD5, byte[] transactionalContentCrc64, String leaseId, Long maxSize, Long appendPosition, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "AppendBlobsImpl.appendBlockWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Integer timeout, byte[] transactionalContentMD5, byte[] transactionalContentCrc64, String leaseId, Long maxSize, Long appendPosition, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Integer timeout, byte[] transactionalContentMD5, byte[] transactionalContentCrc64, String leaseId, Long maxSize, Long appendPosition, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Append Block operation commits a new block of data to the end of an existing append blob. The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version 2015-02-21 version or later."
  syntax:
    content: "public Mono<AppendBlobsAppendBlockResponse> appendBlockWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Integer timeout, byte[] transactionalContentMD5, byte[] transactionalContentCrc64, String leaseId, Long maxSize, Long appendPosition, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "Initial data."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "transactionalContentMD5"
      type: "byte[]"
      description: "Specify the transactional md5 for the body, to be validated by the service."
    - id: "transactionalContentCrc64"
      type: "byte[]"
      description: "Specify the transactional crc64 for the body, to be validated by the service."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "maxSize"
      type: "java.lang.Long"
      description: "Optional conditional header. The max length in bytes permitted for the append blob. If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the value specified in this header, the request will fail with MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed)."
    - id: "appendPosition"
      type: "java.lang.Long"
      description: "Optional conditional header, used only for the Append Block operation. A number indicating the byte offset to compare. Append Block will succeed only if the append position is equal to this number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP status code 412 - Precondition Failed)."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "cpkInfo"
      type: "com.azure.storage.blob.models.CpkInfo"
      description: "Additional parameters for the operation."
    - id: "encryptionScope"
      type: "com.azure.storage.blob.implementation.models.EncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String containerName, String blob, long contentLength, Context context)"
  nameWithType: "AppendBlobsImpl.createWithRestResponseAsync(String containerName, String blob, long contentLength, Context context)"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync(String containerName, String blob, long contentLength, Context context)"
  overload: "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Create Append Blob operation creates a new append blob."
  syntax:
    content: "public Mono<AppendBlobsCreateResponse> createWithRestResponseAsync(String containerName, String blob, long contentLength, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.AppendBlobsImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String containerName, String blob, long contentLength, Integer timeout, Map<String,String> metadata, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "AppendBlobsImpl.createWithRestResponseAsync(String containerName, String blob, long contentLength, Integer timeout, Map<String,String> metadata, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync(String containerName, String blob, long contentLength, Integer timeout, Map<String,String> metadata, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Create Append Blob operation creates a new append blob."
  syntax:
    content: "public Mono<AppendBlobsCreateResponse> createWithRestResponseAsync(String containerName, String blob, long contentLength, Integer timeout, Map<String,String> metadata, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "blobHttpHeaders"
      type: "com.azure.storage.blob.models.BlobHttpHeaders"
      description: "Additional parameters for the operation."
    - id: "cpkInfo"
      type: "com.azure.storage.blob.models.CpkInfo"
      description: "Additional parameters for the operation."
    - id: "encryptionScope"
      type: "com.azure.storage.blob.implementation.models.EncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
references:
- uid: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
  name: "AzureBlobStorageImpl"
  nameWithType: "AzureBlobStorageImpl"
  fullName: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.AppendBlobsImpl*"
  name: "AppendBlobsImpl"
  nameWithType: "AppendBlobsImpl.AppendBlobsImpl"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.AppendBlobsImpl"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.AppendBlobsCreateResponse"
    name: "AppendBlobsCreateResponse"
    fullName: "com.azure.storage.blob.implementation.models.AppendBlobsCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync*"
  name: "createWithRestResponseAsync"
  nameWithType: "AppendBlobsImpl.createWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.createWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "com.azure.storage.blob.models.BlobHttpHeaders"
  name: "BlobHttpHeaders"
  nameWithType: "BlobHttpHeaders"
  fullName: "com.azure.storage.blob.models.BlobHttpHeaders"
- uid: "com.azure.storage.blob.models.CpkInfo"
  name: "CpkInfo"
  nameWithType: "CpkInfo"
  fullName: "com.azure.storage.blob.models.CpkInfo"
- uid: "com.azure.storage.blob.implementation.models.EncryptionScope"
  name: "EncryptionScope"
  nameWithType: "EncryptionScope"
  fullName: "com.azure.storage.blob.implementation.models.EncryptionScope"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockResponse"
    name: "AppendBlobsAppendBlockResponse"
    fullName: "com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync*"
  name: "appendBlockWithRestResponseAsync"
  nameWithType: "AppendBlobsImpl.appendBlockWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "java.net.URL"
  spec.java:
  - uid: "java.net.URL"
    name: "URL"
    fullName: "java.net.URL"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockFromUrlResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockFromUrlResponse"
    name: "AppendBlobsAppendBlockFromUrlResponse"
    fullName: "com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockFromUrlResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync*"
  name: "appendBlockFromUrlWithRestResponseAsync"
  nameWithType: "AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.appendBlockFromUrlWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.blob.implementation.AppendBlobsImpl.AppendBlobsService"
  name: "AppendBlobsImpl.AppendBlobsService"
  nameWithType: "AppendBlobsImpl.AppendBlobsService"
  fullName: "com.azure.storage.blob.implementation.AppendBlobsImpl.AppendBlobsService"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.blob.implementation.models.AppendBlobsCreateResponse"
  name: "AppendBlobsCreateResponse"
  nameWithType: "AppendBlobsCreateResponse"
  fullName: "com.azure.storage.blob.implementation.models.AppendBlobsCreateResponse"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockResponse"
  name: "AppendBlobsAppendBlockResponse"
  nameWithType: "AppendBlobsAppendBlockResponse"
  fullName: "com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockResponse"
- uid: "com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockFromUrlResponse"
  name: "AppendBlobsAppendBlockFromUrlResponse"
  nameWithType: "AppendBlobsAppendBlockFromUrlResponse"
  fullName: "com.azure.storage.blob.implementation.models.AppendBlobsAppendBlockFromUrlResponse"
