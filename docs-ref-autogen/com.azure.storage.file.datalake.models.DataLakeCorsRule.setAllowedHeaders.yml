### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.models.DataLakeCorsRule.setAllowedHeaders*"
fullName: "com.azure.storage.file.datalake.models.DataLakeCorsRule.setAllowedHeaders"
name: "setAllowedHeaders"
nameWithType: "DataLakeCorsRule.setAllowedHeaders"
members:
- uid: "com.azure.storage.file.datalake.models.DataLakeCorsRule.setAllowedHeaders(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.DataLakeCorsRule.setAllowedHeaders(String allowedHeaders)"
  name: "setAllowedHeaders(String allowedHeaders)"
  nameWithType: "DataLakeCorsRule.setAllowedHeaders(String allowedHeaders)"
  summary: "Set the allowedHeaders property: the request headers that the origin domain may specify on the CORS request."
  parameters:
  - description: "the allowedHeaders value to set."
    name: "allowedHeaders"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeCorsRule setAllowedHeaders(String allowedHeaders)"
  returns:
    description: "the DataLakeCorsRule object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeCorsRule?alt=com.azure.storage.file.datalake.models.DataLakeCorsRule&text=DataLakeCorsRule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.8.0
