### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties"
fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties"
name: "FileSystemItemProperties"
nameWithType: "FileSystemItemProperties"
summary: "Properties of a file system."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FileSystemItemProperties"
constructors:
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.FileSystemItemProperties()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.FileSystemItemProperties()"
  name: "FileSystemItemProperties()"
  nameWithType: "FileSystemItemProperties.FileSystemItemProperties()"
  syntax: "public FileSystemItemProperties()"
methods:
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getETag()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getETag()"
  name: "getETag()"
  nameWithType: "FileSystemItemProperties.getETag()"
  summary: "Get the e<wbr>Tag property: The e<wbr>Tag property."
  syntax: "public String getETag()"
  desc: "Get the eTag property: The eTag property."
  returns:
    description: "the eTag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getLastModified()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getLastModified()"
  name: "getLastModified()"
  nameWithType: "FileSystemItemProperties.getLastModified()"
  summary: "Get the last<wbr>Modified property: The last<wbr>Modified property."
  syntax: "public OffsetDateTime getLastModified()"
  desc: "Get the lastModified property: The lastModified property."
  returns:
    description: "the lastModified value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getLeaseDuration()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getLeaseDuration()"
  name: "getLeaseDuration()"
  nameWithType: "FileSystemItemProperties.getLeaseDuration()"
  summary: "Get the lease<wbr>Duration property: Possible values include: 'infinite', 'fixed'."
  syntax: "public LeaseDurationType getLeaseDuration()"
  desc: "Get the leaseDuration property: Possible values include: 'infinite', 'fixed'."
  returns:
    description: "the leaseDuration value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseDurationType?alt=com.azure.storage.file.datalake.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getLeaseState()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getLeaseState()"
  name: "getLeaseState()"
  nameWithType: "FileSystemItemProperties.getLeaseState()"
  summary: "Get the lease<wbr>State property: Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'."
  syntax: "public LeaseStateType getLeaseState()"
  desc: "Get the leaseState property: Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'."
  returns:
    description: "the leaseState value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStateType?alt=com.azure.storage.file.datalake.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getLeaseStatus()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getLeaseStatus()"
  name: "getLeaseStatus()"
  nameWithType: "FileSystemItemProperties.getLeaseStatus()"
  summary: "Get the lease<wbr>Status property: Possible values include: 'locked', 'unlocked'."
  syntax: "public LeaseStatusType getLeaseStatus()"
  desc: "Get the leaseStatus property: Possible values include: 'locked', 'unlocked'."
  returns:
    description: "the leaseStatus value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStatusType?alt=com.azure.storage.file.datalake.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getPublicAccess()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.getPublicAccess()"
  name: "getPublicAccess()"
  nameWithType: "FileSystemItemProperties.getPublicAccess()"
  summary: "Get the public<wbr>Access property: Possible values include: 'container', 'blob'."
  syntax: "public PublicAccessType getPublicAccess()"
  desc: "Get the publicAccess property: Possible values include: 'container', 'blob'."
  returns:
    description: "the publicAccess value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PublicAccessType?alt=com.azure.storage.file.datalake.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.hasImmutabilityPolicy()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.hasImmutabilityPolicy()"
  name: "hasImmutabilityPolicy()"
  nameWithType: "FileSystemItemProperties.hasImmutabilityPolicy()"
  summary: "Get the has<wbr>Immutability<wbr>Policy property: The has<wbr>Immutability<wbr>Policy property."
  syntax: "public Boolean hasImmutabilityPolicy()"
  desc: "Get the hasImmutabilityPolicy property: The hasImmutabilityPolicy property."
  returns:
    description: "the hasImmutabilityPolicy value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.hasLegalHold()"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.hasLegalHold()"
  name: "hasLegalHold()"
  nameWithType: "FileSystemItemProperties.hasLegalHold()"
  summary: "Get the has<wbr>Legal<wbr>Hold property: The has<wbr>Legal<wbr>Hold property."
  syntax: "public Boolean hasLegalHold()"
  desc: "Get the hasLegalHold property: The hasLegalHold property."
  returns:
    description: "the hasLegalHold value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setETag(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setETag(String eTag)"
  name: "setETag(String eTag)"
  nameWithType: "FileSystemItemProperties.setETag(String eTag)"
  summary: "Set the e<wbr>Tag property: The e<wbr>Tag property."
  parameters:
  - description: "the eTag value to set."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemItemProperties setETag(String eTag)"
  desc: "Set the eTag property: The eTag property."
  returns:
    description: "the FileSystemItemProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemItemProperties?alt=com.azure.storage.file.datalake.models.FileSystemItemProperties&text=FileSystemItemProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setHasImmutabilityPolicy(java.lang.Boolean)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setHasImmutabilityPolicy(Boolean hasImmutabilityPolicy)"
  name: "setHasImmutabilityPolicy(Boolean hasImmutabilityPolicy)"
  nameWithType: "FileSystemItemProperties.setHasImmutabilityPolicy(Boolean hasImmutabilityPolicy)"
  summary: "Set the has<wbr>Immutability<wbr>Policy property: The has<wbr>Immutability<wbr>Policy property."
  parameters:
  - description: "the hasImmutabilityPolicy value to set."
    name: "hasImmutabilityPolicy"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemItemProperties setHasImmutabilityPolicy(Boolean hasImmutabilityPolicy)"
  desc: "Set the hasImmutabilityPolicy property: The hasImmutabilityPolicy property."
  returns:
    description: "the FileSystemItemProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemItemProperties?alt=com.azure.storage.file.datalake.models.FileSystemItemProperties&text=FileSystemItemProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setHasLegalHold(java.lang.Boolean)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setHasLegalHold(Boolean hasLegalHold)"
  name: "setHasLegalHold(Boolean hasLegalHold)"
  nameWithType: "FileSystemItemProperties.setHasLegalHold(Boolean hasLegalHold)"
  summary: "Set the has<wbr>Legal<wbr>Hold property: The has<wbr>Legal<wbr>Hold property."
  parameters:
  - description: "the hasLegalHold value to set."
    name: "hasLegalHold"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemItemProperties setHasLegalHold(Boolean hasLegalHold)"
  desc: "Set the hasLegalHold property: The hasLegalHold property."
  returns:
    description: "the FileSystemItemProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemItemProperties?alt=com.azure.storage.file.datalake.models.FileSystemItemProperties&text=FileSystemItemProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setLastModified(java.time.OffsetDateTime)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setLastModified(OffsetDateTime lastModified)"
  name: "setLastModified(OffsetDateTime lastModified)"
  nameWithType: "FileSystemItemProperties.setLastModified(OffsetDateTime lastModified)"
  summary: "Set the last<wbr>Modified property: The last<wbr>Modified property."
  parameters:
  - description: "the lastModified value to set."
    name: "lastModified"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemItemProperties setLastModified(OffsetDateTime lastModified)"
  desc: "Set the lastModified property: The lastModified property."
  returns:
    description: "the FileSystemItemProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemItemProperties?alt=com.azure.storage.file.datalake.models.FileSystemItemProperties&text=FileSystemItemProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setLeaseDuration(com.azure.storage.file.datalake.models.LeaseDurationType)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setLeaseDuration(LeaseDurationType leaseDuration)"
  name: "setLeaseDuration(LeaseDurationType leaseDuration)"
  nameWithType: "FileSystemItemProperties.setLeaseDuration(LeaseDurationType leaseDuration)"
  summary: "Set the lease<wbr>Duration property: Possible values include: 'infinite', 'fixed'."
  parameters:
  - description: "the leaseDuration value to set."
    name: "leaseDuration"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseDurationType?alt=com.azure.storage.file.datalake.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemItemProperties setLeaseDuration(LeaseDurationType leaseDuration)"
  desc: "Set the leaseDuration property: Possible values include: 'infinite', 'fixed'."
  returns:
    description: "the FileSystemItemProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemItemProperties?alt=com.azure.storage.file.datalake.models.FileSystemItemProperties&text=FileSystemItemProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setLeaseState(com.azure.storage.file.datalake.models.LeaseStateType)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setLeaseState(LeaseStateType leaseState)"
  name: "setLeaseState(LeaseStateType leaseState)"
  nameWithType: "FileSystemItemProperties.setLeaseState(LeaseStateType leaseState)"
  summary: "Set the lease<wbr>State property: Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'."
  parameters:
  - description: "the leaseState value to set."
    name: "leaseState"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStateType?alt=com.azure.storage.file.datalake.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemItemProperties setLeaseState(LeaseStateType leaseState)"
  desc: "Set the leaseState property: Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'."
  returns:
    description: "the FileSystemItemProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemItemProperties?alt=com.azure.storage.file.datalake.models.FileSystemItemProperties&text=FileSystemItemProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setLeaseStatus(com.azure.storage.file.datalake.models.LeaseStatusType)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setLeaseStatus(LeaseStatusType leaseStatus)"
  name: "setLeaseStatus(LeaseStatusType leaseStatus)"
  nameWithType: "FileSystemItemProperties.setLeaseStatus(LeaseStatusType leaseStatus)"
  summary: "Set the lease<wbr>Status property: Possible values include: 'locked', 'unlocked'."
  parameters:
  - description: "the leaseStatus value to set."
    name: "leaseStatus"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStatusType?alt=com.azure.storage.file.datalake.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemItemProperties setLeaseStatus(LeaseStatusType leaseStatus)"
  desc: "Set the leaseStatus property: Possible values include: 'locked', 'unlocked'."
  returns:
    description: "the FileSystemItemProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemItemProperties?alt=com.azure.storage.file.datalake.models.FileSystemItemProperties&text=FileSystemItemProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setPublicAccess(com.azure.storage.file.datalake.models.PublicAccessType)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemItemProperties.setPublicAccess(PublicAccessType publicAccess)"
  name: "setPublicAccess(PublicAccessType publicAccess)"
  nameWithType: "FileSystemItemProperties.setPublicAccess(PublicAccessType publicAccess)"
  summary: "Set the public<wbr>Access property: Possible values include: 'container', 'blob'."
  parameters:
  - description: "the publicAccess value to set."
    name: "publicAccess"
    type: "<xref href=\"com.azure.storage.file.datalake.models.PublicAccessType?alt=com.azure.storage.file.datalake.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemItemProperties setPublicAccess(PublicAccessType publicAccess)"
  desc: "Set the publicAccess property: Possible values include: 'container', 'blob'."
  returns:
    description: "the FileSystemItemProperties object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileSystemItemProperties?alt=com.azure.storage.file.datalake.models.FileSystemItemProperties&text=FileSystemItemProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of a file system."
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.12.0
