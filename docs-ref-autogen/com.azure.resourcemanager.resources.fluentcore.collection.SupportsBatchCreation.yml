### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation"
fullName: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>"
name: "SupportsBatchCreation<ResourceT>"
nameWithType: "SupportsBatchCreation<ResourceT>"
summary: "Providing access to creating a batch of Azure top level resources of same type."
syntax: "public interface SupportsBatchCreation<ResourceT>"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation.create(com.azure.resourcemanager.resources.fluentcore.model.Creatable<ResourceT>...)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.create(Creatable<ResourceT>[] creatables)"
  name: "create(Creatable<ResourceT>[] creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.create(Creatable<ResourceT>[] creatables)"
  summary: "Executes the create requests on a collection (batch) of resources."
  modifiers:
  - "abstract"
  parameters:
  - description: "the creatables in the batch"
    name: "creatables"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Creatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;[]"
  syntax: "public abstract CreatedResources<ResourceT> create(Creatable<ResourceT>[] creatables)"
  desc: "Executes the create requests on a collection (batch) of resources."
  returns:
    description: "the batch operation result from which created resources in this batch can be accessed."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.CreatedResources?alt=com.azure.resourcemanager.resources.fluentcore.model.CreatedResources&text=CreatedResources\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation.create(java.util.List<? extends com.azure.resourcemanager.resources.fluentcore.model.Creatable<ResourceT>>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.create(List<? extends Creatable<ResourceT>> creatables)"
  name: "create(List<? extends Creatable<ResourceT>> creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.create(List<? extends Creatable<ResourceT>> creatables)"
  summary: "Executes the create requests on a collection (batch) of resources."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of creatables in the batch"
    name: "creatables"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"? extends com.azure.resourcemanager.resources.fluentcore.model.Creatable?alt=? extends com.azure.resourcemanager.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public abstract CreatedResources<ResourceT> create(List<? extends Creatable<ResourceT>> creatables)"
  desc: "Executes the create requests on a collection (batch) of resources."
  returns:
    description: "the batch operation result from which created resources in this batch can be accessed."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.CreatedResources?alt=com.azure.resourcemanager.resources.fluentcore.model.CreatedResources&text=CreatedResources\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation.createAsync(com.azure.resourcemanager.resources.fluentcore.model.Creatable<ResourceT>...)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.createAsync(Creatable<ResourceT>[] creatables)"
  name: "createAsync(Creatable<ResourceT>[] creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.createAsync(Creatable<ResourceT>[] creatables)"
  summary: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  modifiers:
  - "abstract"
  parameters:
  - description: "the creatables in the batch"
    name: "creatables"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Creatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;[]"
  syntax: "public abstract Flux<ResourceT> createAsync(Creatable<ResourceT>[] creatables)"
  desc: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that emits the found resource asynchronously."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation.createAsync(java.util.List<? extends com.azure.resourcemanager.resources.fluentcore.model.Creatable<ResourceT>>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.createAsync(List<? extends Creatable<ResourceT>> creatables)"
  name: "createAsync(List<? extends Creatable<ResourceT>> creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.createAsync(List<? extends Creatable<ResourceT>> creatables)"
  summary: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of creatables in the batch"
    name: "creatables"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"? extends com.azure.resourcemanager.resources.fluentcore.model.Creatable?alt=? extends com.azure.resourcemanager.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public abstract Flux<ResourceT> createAsync(List<? extends Creatable<ResourceT>> creatables)"
  desc: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that emits the found resource asynchronously."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the top level Azure resource type"
  name: "ResourceT"
desc: "Providing access to creating a batch of Azure top level resources of same type.\n\n(Note: this interface is not intended to be implemented by user code)"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.collection"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
