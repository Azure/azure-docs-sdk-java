### YamlMime:JavaMember
nameWithType: ActorId.ActorId
type: constructor
members:
- fullName: microsoft.servicefabric.actors.ActorId.ActorId(long id)
  name: ActorId(long id)
  nameWithType: ActorId.ActorId(long id)
  parameters:
  - description: <p>Value for actor id. </p>
    name: id
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of ActorId class with Id value of type long</p>

    <p></p>
  syntax: public ActorId(long id)
  uid: microsoft.servicefabric.actors.ActorId.ActorId(long)
- fullName: microsoft.servicefabric.actors.ActorId.ActorId(String id)
  name: ActorId(String id)
  nameWithType: ActorId.ActorId(String id)
  parameters:
  - description: <p>Value for actor id. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of ActorId class with Id value of type <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>.</p>

    <p></p>
  syntax: public ActorId(String id)
  uid: microsoft.servicefabric.actors.ActorId.ActorId(String)
- fullName: microsoft.servicefabric.actors.ActorId.ActorId(UUID id)
  name: ActorId(UUID id)
  nameWithType: ActorId.ActorId(UUID id)
  parameters:
  - description: <p>Value for actor id. </p>
    name: id
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of ActorId class with Id value of type <xref uid="" data-throw-if-not-resolved="false">java.util.UUID</xref></p>

    <p></p>
  syntax: public ActorId(UUID id)
  uid: microsoft.servicefabric.actors.ActorId.ActorId(UUID)
uid: microsoft.servicefabric.actors.ActorId.ActorId*
fullName: microsoft.servicefabric.actors.ActorId.ActorId
name: ActorId
package: microsoft.servicefabric.actors
metadata: {}
