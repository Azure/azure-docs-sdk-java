### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventhubs.models.EventHub"
fullName: "com.azure.resourcemanager.eventhubs.models.EventHub"
name: "EventHub"
nameWithType: "EventHub"
summary: "Type representing an Azure Event<wbr>Hub."
syntax: "public interface EventHub extends NestedResource, HasManager<EventHubsManager>, Refreshable<EventHub>, Updatable<EventHub.Update>, HasInnerModel<EventhubInner>"
methods:
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.captureDestination()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.captureDestination()"
  name: "captureDestination()"
  nameWithType: "EventHub.captureDestination()"
  modifiers:
  - "abstract"
  syntax: "public abstract Destination captureDestination()"
  returns:
    description: "description of the destination where captured data will be stored"
    type: "<xref href=\"com.azure.resourcemanager.eventhubs.models.Destination?alt=com.azure.resourcemanager.eventhubs.models.Destination&text=Destination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.dataCaptureFileNameFormat()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.dataCaptureFileNameFormat()"
  name: "dataCaptureFileNameFormat()"
  nameWithType: "EventHub.dataCaptureFileNameFormat()"
  modifiers:
  - "abstract"
  syntax: "public abstract String dataCaptureFileNameFormat()"
  returns:
    description: "the format file name that stores captured data when capturing is enabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.dataCaptureSkipEmptyArchives()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.dataCaptureSkipEmptyArchives()"
  name: "dataCaptureSkipEmptyArchives()"
  nameWithType: "EventHub.dataCaptureSkipEmptyArchives()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean dataCaptureSkipEmptyArchives()"
  returns:
    description: "whether to skip empty archives when capturing is enabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.dataCaptureWindowSizeInMB()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.dataCaptureWindowSizeInMB()"
  name: "dataCaptureWindowSizeInMB()"
  nameWithType: "EventHub.dataCaptureWindowSizeInMB()"
  modifiers:
  - "abstract"
  syntax: "public abstract int dataCaptureWindowSizeInMB()"
  returns:
    description: "configured window in MB to be used for event capturing when capturing is enabled"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.dataCaptureWindowSizeInSeconds()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.dataCaptureWindowSizeInSeconds()"
  name: "dataCaptureWindowSizeInSeconds()"
  nameWithType: "EventHub.dataCaptureWindowSizeInSeconds()"
  modifiers:
  - "abstract"
  syntax: "public abstract int dataCaptureWindowSizeInSeconds()"
  returns:
    description: "configured window in seconds to be used for event capturing when capturing is enabled"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.isDataCaptureEnabled()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.isDataCaptureEnabled()"
  name: "isDataCaptureEnabled()"
  nameWithType: "EventHub.isDataCaptureEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isDataCaptureEnabled()"
  returns:
    description: "true if the data capture enabled for the event hub events, false otherwise"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.listAuthorizationRules()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.listAuthorizationRules()"
  name: "listAuthorizationRules()"
  nameWithType: "EventHub.listAuthorizationRules()"
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<EventHubAuthorizationRule> listAuthorizationRules()"
  returns:
    description: "authorization rules enabled for the event hub"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationRule?alt=com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationRule&text=EventHubAuthorizationRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.listAuthorizationRulesAsync()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.listAuthorizationRulesAsync()"
  name: "listAuthorizationRulesAsync()"
  nameWithType: "EventHub.listAuthorizationRulesAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<EventHubAuthorizationRule> listAuthorizationRulesAsync()"
  returns:
    description: "authorization rules enabled for the event hub"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationRule?alt=com.azure.resourcemanager.eventhubs.models.EventHubAuthorizationRule&text=EventHubAuthorizationRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.listConsumerGroups()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.listConsumerGroups()"
  name: "listConsumerGroups()"
  nameWithType: "EventHub.listConsumerGroups()"
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<EventHubConsumerGroup> listConsumerGroups()"
  returns:
    description: "consumer group in the event hub"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubConsumerGroup?alt=com.azure.resourcemanager.eventhubs.models.EventHubConsumerGroup&text=EventHubConsumerGroup\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.listConsumerGroupsAsync()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.listConsumerGroupsAsync()"
  name: "listConsumerGroupsAsync()"
  nameWithType: "EventHub.listConsumerGroupsAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<EventHubConsumerGroup> listConsumerGroupsAsync()"
  returns:
    description: "consumer group in the event hub"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHubConsumerGroup?alt=com.azure.resourcemanager.eventhubs.models.EventHubConsumerGroup&text=EventHubConsumerGroup\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.messageRetentionPeriodInDays()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.messageRetentionPeriodInDays()"
  name: "messageRetentionPeriodInDays()"
  nameWithType: "EventHub.messageRetentionPeriodInDays()"
  modifiers:
  - "abstract"
  syntax: "public abstract int messageRetentionPeriodInDays()"
  returns:
    description: "retention period of events in days"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.namespaceName()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.namespaceName()"
  name: "namespaceName()"
  nameWithType: "EventHub.namespaceName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String namespaceName()"
  returns:
    description: "name of the parent namespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.namespaceResourceGroupName()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.namespaceResourceGroupName()"
  name: "namespaceResourceGroupName()"
  nameWithType: "EventHub.namespaceResourceGroupName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String namespaceResourceGroupName()"
  returns:
    description: "the resource group of the parent namespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.eventhubs.models.EventHub.partitionIds()"
  fullName: "com.azure.resourcemanager.eventhubs.models.EventHub.partitionIds()"
  name: "partitionIds()"
  nameWithType: "EventHub.partitionIds()"
  modifiers:
  - "abstract"
  syntax: "public abstract Set<String> partitionIds()"
  returns:
    description: "the partition identifiers"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Set.html\">Set</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
type: "interface"
desc: "Type representing an Azure EventHub."
implements:
- "<xref href=\"com.azure.resourcemanager.eventhubs.models.NestedResource?alt=com.azure.resourcemanager.eventhubs.models.NestedResource&text=NestedResource\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.EventHubsManager?alt=com.azure.resourcemanager.eventhubs.EventHubsManager&text=EventHubsManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.fluent.models.EventhubInner?alt=com.azure.resourcemanager.eventhubs.fluent.models.EventhubInner&text=EventhubInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHub?alt=com.azure.resourcemanager.eventhubs.models.EventHub&text=EventHub\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.models.EventHub.Update?alt=com.azure.resourcemanager.eventhubs.models.EventHub.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.eventhubs.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventhubs:2.19.0
