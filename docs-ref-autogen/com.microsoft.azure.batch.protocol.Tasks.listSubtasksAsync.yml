### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync*"
fullName: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync"
name: "listSubtasksAsync"
nameWithType: "Tasks.listSubtasksAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(String jobId, String taskId)"
  name: "listSubtasksAsync(String jobId, String taskId)"
  nameWithType: "Tasks.listSubtasksAsync(String jobId, String taskId)"
  summary: "Lists all of the subtasks that are associated with the specified multi-instance Task. If the Task is not a multi-instance Task then this returns an empty collection."
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CloudTaskListSubtasksResult> listSubtasksAsync(String jobId, String taskId)"
  returns:
    description: "the observable to the CloudTaskListSubtasksResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult?alt=com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult&text=CloudTaskListSubtasksResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)"
  name: "listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)"
  nameWithType: "Tasks.listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)"
  summary: "Lists all of the subtasks that are associated with the specified multi-instance Task. If the Task is not a multi-instance Task then this returns an empty collection."
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "taskListSubtasksOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions?alt=com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions&text=TaskListSubtasksOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CloudTaskListSubtasksResult> listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions)"
  returns:
    description: "the observable to the CloudTaskListSubtasksResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult?alt=com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult&text=CloudTaskListSubtasksResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult>)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions, ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)"
  name: "listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions, ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)"
  nameWithType: "Tasks.listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions, ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)"
  summary: "Lists all of the subtasks that are associated with the specified multi-instance Task. If the Task is not a multi-instance Task then this returns an empty collection."
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "taskListSubtasksOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions?alt=com.microsoft.azure.batch.protocol.models.TaskListSubtasksOptions&text=TaskListSubtasksOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult?alt=com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult&text=CloudTaskListSubtasksResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<CloudTaskListSubtasksResult> listSubtasksAsync(String jobId, String taskId, TaskListSubtasksOptions taskListSubtasksOptions, ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult?alt=com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult&text=CloudTaskListSubtasksResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult>)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.listSubtasksAsync(String jobId, String taskId, ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)"
  name: "listSubtasksAsync(String jobId, String taskId, ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)"
  nameWithType: "Tasks.listSubtasksAsync(String jobId, String taskId, ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)"
  summary: "Lists all of the subtasks that are associated with the specified multi-instance Task. If the Task is not a multi-instance Task then this returns an empty collection."
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult?alt=com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult&text=CloudTaskListSubtasksResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<CloudTaskListSubtasksResult> listSubtasksAsync(String jobId, String taskId, ServiceCallback<CloudTaskListSubtasksResult> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult?alt=com.microsoft.azure.batch.protocol.models.CloudTaskListSubtasksResult&text=CloudTaskListSubtasksResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
