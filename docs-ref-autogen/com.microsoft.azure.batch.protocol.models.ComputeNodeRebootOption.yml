### YamlMime:JavaEnum
uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption"
fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption"
name: "ComputeNodeRebootOption"
nameWithType: "ComputeNodeRebootOption"
summary: "Defines values for ComputeNodeRebootOption."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum ComputeNodeRebootOption extends Enum<ComputeNodeRebootOption>"
fields:
- uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.REQUEUE"
  fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.REQUEUE"
  name: "REQUEUE"
  nameWithType: "ComputeNodeRebootOption.REQUEUE"
  summary: "Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Restart the Compute Node as soon as Tasks have been terminated."
- uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.RETAINED_DATA"
  fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.RETAINED_DATA"
  name: "RETAINED_DATA"
  nameWithType: "ComputeNodeRebootOption.RETAINED_DATA"
  summary: "Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Restart the Compute Node when all Task retention periods have expired."
- uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.TASK_COMPLETION"
  fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.TASK_COMPLETION"
  name: "TASK_COMPLETION"
  nameWithType: "ComputeNodeRebootOption.TASK_COMPLETION"
  summary: "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Restart the Compute Node when all Tasks have completed."
- uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.TERMINATE"
  fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.TERMINATE"
  name: "TERMINATE"
  nameWithType: "ComputeNodeRebootOption.TERMINATE"
  summary: "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Restart the Compute Node as soon as Tasks have been terminated."
methods:
- uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.fromString(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.fromString(String value)"
  name: "fromString(String value)"
  nameWithType: "ComputeNodeRebootOption.fromString(String value)"
  summary: "Parses a serialized value to a ComputeNodeRebootOption instance."
  parameters:
  - description: "the serialized value to parse."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ComputeNodeRebootOption fromString(String value)"
  returns:
    description: "the parsed ComputeNodeRebootOption object, or null if unable to parse."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption&text=ComputeNodeRebootOption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.toString()"
  fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.toString()"
  name: "toString()"
  nameWithType: "ComputeNodeRebootOption.toString()"
  overridden: "java.lang.Enum.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.valueOf(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "ComputeNodeRebootOption.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ComputeNodeRebootOption valueOf(String name)"
  returns:
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption&text=ComputeNodeRebootOption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.values()"
  fullName: "com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.values()"
  name: "values()"
  nameWithType: "ComputeNodeRebootOption.values()"
  syntax: "public static ComputeNodeRebootOption[] values()"
  returns:
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption&text=ComputeNodeRebootOption\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
