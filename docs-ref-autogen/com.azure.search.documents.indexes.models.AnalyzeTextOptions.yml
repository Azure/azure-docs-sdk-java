### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.AnalyzeTextOptions"
fullName: "com.azure.search.documents.indexes.models.AnalyzeTextOptions"
name: "AnalyzeTextOptions"
nameWithType: "AnalyzeTextOptions"
summary: "Specifies some text and analysis components used to break that text into tokens."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AnalyzeTextOptions"
constructors:
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions(java.lang.String,com.azure.search.documents.indexes.models.LexicalAnalyzerName)"
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.AnalyzeTextOptions(java.lang.String,com.azure.search.documents.indexes.models.LexicalTokenizerName)"
methods:
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.getAnalyzerName()"
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.getCharFilters()"
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.getText()"
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.getTokenFilters()"
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.getTokenizerName()"
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.setCharFilters(com.azure.search.documents.indexes.models.CharFilterName...)"
- "com.azure.search.documents.indexes.models.AnalyzeTextOptions.setTokenFilters(com.azure.search.documents.indexes.models.TokenFilterName...)"
type: "class"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.1.3
