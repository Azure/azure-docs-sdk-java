### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery"
fullName: "com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery"
name: "SqlQuery"
nameWithType: "SqlQuery"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SqlQuery"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery.createSqlQuery(java.lang.String,com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery.FromType,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery.createSqlQuery(String selection, SqlQuery.FromType fromType, String where, String groupby)"
  name: "createSqlQuery(String selection, SqlQuery.FromType fromType, String where, String groupby)"
  nameWithType: "SqlQuery.createSqlQuery(String selection, SqlQuery.FromType fromType, String where, String groupby)"
  summary: "Creates a Sql style query for Iot<wbr>Hub"
  modifiers:
  - "static"
  parameters:
  - description: "Select clause for query. Cannot be <code>null</code>."
    name: "selection"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "From enum for Query. Cannot be <code>null</code>."
    name: "fromType"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery.FromType?alt=com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery.FromType&text=FromType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Where clause for Query. Can be <code>null</code>."
    name: "where"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "GroupBy clause for query. Can be <code>null</code>"
    name: "groupby"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SqlQuery createSqlQuery(String selection, SqlQuery.FromType fromType, String where, String groupby)"
  exceptions:
  - description: "If input parameter is invalid"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a Sql style query for IotHub"
  returns:
    description: "SqlQuery Object as specified by param"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery?alt=com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery&text=SqlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery.getQuery()"
  fullName: "com.microsoft.azure.sdk.iot.service.devicetwin.SqlQuery.getQuery()"
  name: "getQuery()"
  nameWithType: "SqlQuery.getQuery()"
  summary: "Getter for the String corresponding to Sql Query String created"
  syntax: "public String getQuery()"
  desc: "Getter for the String corresponding to Sql Query String created"
  returns:
    description: "String corresponding to Sql Query created"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.devicetwin"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
