### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.SearchableField"
fullName: "com.azure.search.documents.indexes.SearchableField"
name: "SearchableField"
nameWithType: "SearchableField"
summary: "An annotation that directs <xref uid=\"com.azure.search.documents.indexes.SearchIndexAsyncClient.buildSearchFields(java.lang.Class<?>,com.azure.search.documents.indexes.models.FieldBuilderOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndexAsyncClient#buildSearchFields(Class, FieldBuilderOptions)\"></xref> to turn the field or method into a searchable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
syntax: "public interface SearchableField implements Annotation"
methods:
- uid: "com.azure.search.documents.indexes.SearchableField.analyzerName()"
  fullName: "com.azure.search.documents.indexes.SearchableField.analyzerName()"
  name: "analyzerName()"
  nameWithType: "SearchableField.analyzerName()"
  summary: "A <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> to associate as the search and index analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract String analyzerName()"
  desc: "A <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> to associate as the search and index analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  returns:
    description: "The <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> that will be associated as the search and index analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.SearchableField.indexAnalyzerName()"
  fullName: "com.azure.search.documents.indexes.SearchableField.indexAnalyzerName()"
  name: "indexAnalyzerName()"
  nameWithType: "SearchableField.indexAnalyzerName()"
  summary: "A <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> to associate as the index analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract String indexAnalyzerName()"
  desc: "A <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> to associate as the index analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  returns:
    description: "The <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> that will be associated as the index analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.SearchableField.isFacetable()"
  fullName: "com.azure.search.documents.indexes.SearchableField.isFacetable()"
  name: "isFacetable()"
  nameWithType: "SearchableField.isFacetable()"
  summary: "Indicates if the field or method should generate as a facetable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isFacetable()"
  desc: "Indicates if the field or method should generate as a facetable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  returns:
    description: "A flag indicating if the field or method should generate as a facetable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.SearchableField.isFilterable()"
  fullName: "com.azure.search.documents.indexes.SearchableField.isFilterable()"
  name: "isFilterable()"
  nameWithType: "SearchableField.isFilterable()"
  summary: "Indicates if the field or method should generate as a filterable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isFilterable()"
  desc: "Indicates if the field or method should generate as a filterable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  returns:
    description: "A flag indicating if the field or method should generate as a filterable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.SearchableField.isHidden()"
  fullName: "com.azure.search.documents.indexes.SearchableField.isHidden()"
  name: "isHidden()"
  nameWithType: "SearchableField.isHidden()"
  summary: "Indicates if the field or method should generate as a hidden <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isHidden()"
  desc: "Indicates if the field or method should generate as a hidden <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  returns:
    description: "A flag indicating if the field or method should generate as a hidden <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.SearchableField.isKey()"
  fullName: "com.azure.search.documents.indexes.SearchableField.isKey()"
  name: "isKey()"
  nameWithType: "SearchableField.isKey()"
  summary: "Indicates if the field or method should generate as a key <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isKey()"
  desc: "Indicates if the field or method should generate as a key <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  returns:
    description: "A flag indicating if the field or method should generate as a key <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.SearchableField.isSortable()"
  fullName: "com.azure.search.documents.indexes.SearchableField.isSortable()"
  name: "isSortable()"
  nameWithType: "SearchableField.isSortable()"
  summary: "Indicates if the field or method should generate as a sortable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isSortable()"
  desc: "Indicates if the field or method should generate as a sortable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  returns:
    description: "A flag indicating if the field or method should generate as a sortable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.SearchableField.searchAnalyzerName()"
  fullName: "com.azure.search.documents.indexes.SearchableField.searchAnalyzerName()"
  name: "searchAnalyzerName()"
  nameWithType: "SearchableField.searchAnalyzerName()"
  summary: "A <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> to associate as the search analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract String searchAnalyzerName()"
  desc: "A <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> to associate as the search analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  returns:
    description: "The <xref uid=\"com.azure.search.documents.indexes.models.LexicalAnalyzerName\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalAnalyzerName\"></xref> that will be associated as the search analyzer for the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.SearchableField.synonymMapNames()"
  fullName: "com.azure.search.documents.indexes.SearchableField.synonymMapNames()"
  name: "synonymMapNames()"
  nameWithType: "SearchableField.synonymMapNames()"
  summary: "A list of <xref uid=\"com.azure.search.documents.indexes.models.SynonymMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SynonymMap\"></xref> names to be associated with the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
  modifiers:
  - "abstract"
  syntax: "public abstract String[] synonymMapNames()"
  desc: "A list of <xref uid=\"com.azure.search.documents.indexes.models.SynonymMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SynonymMap\"></xref> names to be associated with the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>.\n\nAssigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. The synonym map attribute may be changed on existing fields.\n\nCurrently, only one synonym map per field is supported."
  returns:
    description: "The <xref uid=\"com.azure.search.documents.indexes.models.SynonymMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SynonymMap\"></xref> names that will be associated with the <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
type: "interface"
desc: "An annotation that directs <xref uid=\"com.azure.search.documents.indexes.SearchIndexAsyncClient.buildSearchFields(java.lang.Class<?>,com.azure.search.documents.indexes.models.FieldBuilderOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndexAsyncClient#buildSearchFields(Class, FieldBuilderOptions)\"></xref> to turn the field or method into a searchable <xref uid=\"com.azure.search.documents.indexes.models.SearchField\" data-throw-if-not-resolved=\"false\" data-raw-source=\"field\"></xref>."
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.4.13
