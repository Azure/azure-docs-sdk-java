### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest
  id: PlatformAltTaskRunRequest
  parent: com.microsoft.azure.management.containerregistry
  children:
  - com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.withTaskRunRequest(String)
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.yml
  langs:
  - java
  name: RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest
  nameWithType: RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTaskRun.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTaskRun.java
    startLine: 127
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The stage of the container registry task run definition that allows to specify the task run is going to be run with a TaskRunRequest. </p>"
  syntax:
    content: public interface PlatformAltTaskRunRequest extends RegistryTaskRun.DefinitionStages.Platform
  inheritedMembers:
  - com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux()
  - com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux(Architecture)
  - com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux(Architecture,Variant)
  - com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withPlatform(PlatformProperties)
  - com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows()
  - com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture)
  - com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture,Variant)
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.withTaskRunRequest(String)
  id: withTaskRunRequest(String)
  parent: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.yml
  langs:
  - java
  name: withTaskRunRequest(String taskName)
  nameWithType: RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.withTaskRunRequest(String taskName)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.withTaskRunRequest(String taskName)
  overload: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.withTaskRunRequest*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTaskRun.java
    startLine: 134
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The function that specifies the name of the existing task to run.</p>\r\n<p></p>"
  syntax:
    content: public RegistryTaskRunRequest withTaskRunRequest(String taskName)
    parameters:
    - id: taskName
      type: "26831127"
      description: <p>the name of the created task to pass into the task run request. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RegistryTaskRunRequest
      description: <p>the next stage of the container registry task run definition. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.withTaskRunRequest*
  name: withTaskRunRequest
  nameWithType: RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.withTaskRunRequest
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest.withTaskRunRequest
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux()
  parent: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.yml
  name: withLinux()
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withLinux()
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux()
  type: Method
  summary: "<p>The function that specifies the platform will have a Linux OS.</p>\r\n<p></p>"
  syntax:
    content: public RunRequestType withLinux()
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType
      description: <p>the next stage of the container registry task run definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux(Architecture)
  parent: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.yml
  name: withLinux(Architecture architecture)
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withLinux(Architecture architecture)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux(Architecture architecture)
  type: Method
  summary: "<p>The function that specifies the platform will have a Linux OS with Architecture architecture.</p>\r\n<p></p>"
  syntax:
    content: public RunRequestType withLinux(Architecture architecture)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: <p>the architecture the platform will have. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType
      description: <p>the next stage of the container registry task run definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux(Architecture,Variant)
  parent: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.yml
  name: withLinux(Architecture architecture, Variant variant)
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withLinux(Architecture architecture, Variant variant)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withLinux(Architecture architecture, Variant variant)
  type: Method
  summary: "<p>The function that specifies the platform will have a Linux OS with Architecture architecture and Variant variant.</p>\r\n<p></p>"
  syntax:
    content: public RunRequestType withLinux(Architecture architecture, Variant variant)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: <p>the architecture the platform will have. </p>
    - id: variant
      type: com.microsoft.azure.management.containerregistry.Variant
      description: <p>the variant the platform will have. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType
      description: <p>the next stage of the container registry task run definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withPlatform(PlatformProperties)
  parent: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.yml
  name: withPlatform(PlatformProperties platformProperties)
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withPlatform(PlatformProperties platformProperties)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withPlatform(PlatformProperties platformProperties)
  type: Method
  summary: "<p>The function that specifies the platform properties of the registry task run.</p>\r\n<p></p>"
  syntax:
    content: public RunRequestType withPlatform(PlatformProperties platformProperties)
    parameters:
    - id: platformProperties
      type: com.microsoft.azure.management.containerregistry.PlatformProperties
      description: <p>the properties of the platform. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType
      description: <p>the next stage of the container registry task run definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows()
  parent: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.yml
  name: withWindows()
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withWindows()
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows()
  type: Method
  summary: "<p>The function that specifies the platform will have a Windows OS.</p>\r\n<p></p>"
  syntax:
    content: public RunRequestType withWindows()
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType
      description: <p>the next stage of the container registry task run definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture)
  parent: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.yml
  name: withWindows(Architecture architecture)
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture architecture)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture architecture)
  type: Method
  summary: "<p>The function that specifies the platform will have a Windows OS with Architecture architecture.</p>\r\n<p></p>"
  syntax:
    content: public RunRequestType withWindows(Architecture architecture)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: <p>the architecture the platform will have. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType
      description: <p>the next stage of the container registry task run definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture,Variant)
  parent: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.yml
  name: withWindows(Architecture architecture, Variant variant)
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  type: Method
  summary: "<p>The function that specifies the platform will have a Windows OS with Architecture architecture and Variant variant.</p>\r\n<p></p>"
  syntax:
    content: public RunRequestType withWindows(Architecture architecture, Variant variant)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: <p>the architecture the platform will have. </p>
    - id: variant
      type: com.microsoft.azure.management.containerregistry.Variant
      description: <p>the variant the platform will have. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType
      description: <p>the next stage of the container registry task run definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.yml
  name: RegistryTaskRun.DefinitionStages.Platform
  nameWithType: RegistryTaskRun.DefinitionStages.Platform
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform
  type: Interface
  summary: "<p>The stage of the container registry task definition that specifies the platform for the container registry task run. </p>"
  syntax:
    content: public interface Platform
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.Definition
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.Definition.yml
  name: RegistryTaskRun.Definition
  nameWithType: RegistryTaskRun.Definition
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.Definition
  type: Interface
  summary: "<p>Container interface for all the definitions related to a RegistryTaskRun. </p>"
  syntax:
    content: public interface Definition extends RegistryTaskRun.DefinitionStages.BlankFromRegistry,RegistryTaskRun.DefinitionStages.BlankFromRuns,RegistryTaskRun.DefinitionStages.Platform,RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest,RegistryTaskRun.DefinitionStages.RegistryTaskRunRequest,RegistryTaskRun.DefinitionStages.RunRequestType,RegistryTaskRun.DefinitionStages.RunRequestExecutableWithSourceLocation,RegistryTaskRun.DefinitionStages.RunRequestExecutable
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.BlankFromRegistry
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.BlankFromRegistry.yml
  name: RegistryTaskRun.DefinitionStages.BlankFromRegistry
  nameWithType: RegistryTaskRun.DefinitionStages.BlankFromRegistry
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.BlankFromRegistry
  type: Interface
  summary: "<p>The first stage of a a RegistryTaskRun definition if originating from a call on a registry. </p>"
  syntax:
    content: public interface BlankFromRegistry extends RegistryTaskRun.DefinitionStages.PlatformAltTaskRunRequest
- uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RegistryTaskRunRequest
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RegistryTaskRunRequest.yml
  name: RegistryTaskRun.DefinitionStages.RegistryTaskRunRequest
  nameWithType: RegistryTaskRun.DefinitionStages.RegistryTaskRunRequest
  fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RegistryTaskRunRequest
  type: Interface
  summary: "<p>The stage of the container registry task definition for TaskRunRequests that allows the user to specify overriding values and whether archiving is enabled or not. </p>"
  syntax:
    content: public interface RegistryTaskRunRequest
