### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.models.FunctionEnvelope"
fullName: "com.azure.resourcemanager.appservice.models.FunctionEnvelope"
name: "FunctionEnvelope"
nameWithType: "FunctionEnvelope"
summary: "An immutable representation of function Information."
syntax: "public interface FunctionEnvelope extends HasInnerModel<FunctionEnvelopeInner>"
methods:
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.config()"
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.configHref()"
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.files()"
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.functionAppId()"
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.href()"
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.scriptHref()"
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.scriptRootPathHref()"
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.secretsFileHref()"
- "com.azure.resourcemanager.appservice.models.FunctionEnvelope.testData()"
type: "interface"
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
