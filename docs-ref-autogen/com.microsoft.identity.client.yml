### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client
  id: client
  children:
  - com.microsoft.identity.client.AuthenticationActivity
  - com.microsoft.identity.client.AuthenticationCallback
  - com.microsoft.identity.client.AuthenticationResult
  - com.microsoft.identity.client.AzureActiveDirectoryAccountIdentifier
  - com.microsoft.identity.client.BrowserTabActivity
  - com.microsoft.identity.client.IAccount
  - com.microsoft.identity.client.IAccountIdentifier
  - com.microsoft.identity.client.ILoggerCallback
  - com.microsoft.identity.client.IMsalEventReceiver
  - com.microsoft.identity.client.Logger
  - com.microsoft.identity.client.Logger.LogLevel
  - com.microsoft.identity.client.MsalChromeCustomTabManager
  - com.microsoft.identity.client.PublicClientApplication
  - com.microsoft.identity.client.PublicClientApplicationConfiguration
  - com.microsoft.identity.client.PublicClientApplicationConfiguration.SerializedNames
  - com.microsoft.identity.client.UiBehavior
  - com.microsoft.identity.client.WebViewSelection
  href: com.microsoft.identity.client.yml
  langs:
  - java
  name: com.microsoft.identity.client
  nameWithType: com.microsoft.identity.client
  fullName: com.microsoft.identity.client
  type: Namespace
  source:
    remote:
      path: msal/src/main/java/com/microsoft/identity/client/Account.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/Account.java
    startLine: 22
  summary: "<p>Provides the classes necessary to create a client for Azure Active Directory to get tokens.</p>\r\n<p></p>"
  syntax:
    content: package com.microsoft.identity.client
references:
- uid: com.microsoft.identity.client.configuration
  href: com.microsoft.identity.client.configuration.yml
  name: com.microsoft.identity.client.configuration
  nameWithType: com.microsoft.identity.client.configuration
  fullName: com.microsoft.identity.client.configuration
  type: Namespace
  syntax:
    content: package com.microsoft.identity.client.configuration
- uid: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.yml
  name: com.microsoft.identity.client.exception
  nameWithType: com.microsoft.identity.client.exception
  fullName: com.microsoft.identity.client.exception
  type: Namespace
  syntax:
    content: package com.microsoft.identity.client.exception
- uid: com.microsoft.identity.client.internal
  href: com.microsoft.identity.client.internal.yml
  name: com.microsoft.identity.client.internal
  nameWithType: com.microsoft.identity.client.internal
  fullName: com.microsoft.identity.client.internal
  type: Namespace
  syntax:
    content: package com.microsoft.identity.client.internal
- uid: com.microsoft.identity.client.AuthenticationActivity
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AuthenticationActivity.yml
  name: AuthenticationActivity
  nameWithType: AuthenticationActivity
  fullName: com.microsoft.identity.client.AuthenticationActivity
  type: Class
  summary: "<p>Custom tab requires the device to have a browser with custom tab support, chrome with version&gt;= 45 comes with the support and is available on all devices with API version&gt;= 16 . The sdk use chrome custom tab, and before launching chrome custom tab, we need to check if chrome package is in the device. If it is, it's safe to launch the chrome custom tab; Otherwise the sdk will launch chrome. AuthenticationActivity will be responsible for checking if it's safe to launch chrome custom tab, if not, will go with chrome browser, if chrome is not installed, we throw error back. </p>"
  syntax:
    content: public class AuthenticationActivity
- uid: com.microsoft.identity.client.AuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: AuthenticationCallback
  nameWithType: AuthenticationCallback
  fullName: com.microsoft.identity.client.AuthenticationCallback
  type: Interface
  summary: "<p>Callback passed with token acquisition. <xref uid=\"com.microsoft.identity.client.AuthenticationResult\" data-throw-if-not-resolved=\"false\">AuthenticationResult</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">MsalException</xref> will be returned back via callback. </p>"
  syntax:
    content: public interface AuthenticationCallback
- uid: com.microsoft.identity.client.AuthenticationResult
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AuthenticationResult.yml
  name: AuthenticationResult
  nameWithType: AuthenticationResult
  fullName: com.microsoft.identity.client.AuthenticationResult
  type: Class
  summary: "<p>MSAL successful authentication result. When auth succeeds, token will be wrapped into the <xref uid=\"com.microsoft.identity.client.AuthenticationResult\" data-throw-if-not-resolved=\"false\">AuthenticationResult</xref> and passed back through the <xref uid=\"com.microsoft.identity.client.AuthenticationCallback\" data-throw-if-not-resolved=\"false\">AuthenticationCallback</xref>. </p>"
  syntax:
    content: public class AuthenticationResult
- uid: com.microsoft.identity.client.AzureActiveDirectoryAccountIdentifier
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AzureActiveDirectoryAccountIdentifier.yml
  name: AzureActiveDirectoryAccountIdentifier
  nameWithType: AzureActiveDirectoryAccountIdentifier
  fullName: com.microsoft.identity.client.AzureActiveDirectoryAccountIdentifier
  type: Class
  summary: "<p>AccountIdentifier implementation for Accounts retrieved from AzureActiveDirectory. </p>"
  syntax:
    content: public class AzureActiveDirectoryAccountIdentifier
- uid: com.microsoft.identity.client.BrowserTabActivity
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.BrowserTabActivity.yml
  name: BrowserTabActivity
  nameWithType: BrowserTabActivity
  fullName: com.microsoft.identity.client.BrowserTabActivity
  type: Class
  summary: "<p>MSAL activity class (needs to be public in order to be discoverable by the os) to get the browser redirect with auth code from authorize endpoint. This activity has to be exposed by \"android:exported=true\", and intent filter has to be declared in the manifest for the activity. </p>\r\n<p>When chrome custom tab is launched, and we're redirected back with the redirect uri (the redirect must be unique across apps on a device), the os will fire an intent with the redirect, and the BrowserTabActivity will be launched. <pre>\r\n&lt;intent-filter&gt;\r\n    &lt;action android:name=\"android.intent.action.VIEW\" /&gt;</pre></p>\r\n<p>\r\n  <pre>    To receive implicit intents, have to put the activity in the category of default.\r\n    &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;</pre>\r\n</p>\r\n<p>\r\n  <pre>    The target activity allows itself to be started by a web browser to display data.\r\n    &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;</pre>\r\n</p>\r\n<p>\r\n  <pre>    BrowserTabActivity will be launched when matching the custom url scheme.\r\n    &lt;data android:scheme=\"msalclientid\" android:host=\"auth\" /&gt;\r\n&lt;/intent-filter&gt;\r\n</pre>\r\n</p>"
  syntax:
    content: public class BrowserTabActivity
- uid: com.microsoft.identity.client.IAccount
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAccount.yml
  name: IAccount
  nameWithType: IAccount
  fullName: com.microsoft.identity.client.IAccount
  type: Interface
  summary: "<p>Interface describing MSAL's externally-exposed Account representation. </p>"
  syntax:
    content: public interface IAccount
- uid: com.microsoft.identity.client.IAccountIdentifier
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAccountIdentifier.yml
  name: IAccountIdentifier
  nameWithType: IAccountIdentifier
  fullName: com.microsoft.identity.client.IAccountIdentifier
  type: Interface
  summary: "<p>Interface describing an identifier with a <xref uid=\"\" data-throw-if-not-resolved=\"false\">String</xref> representation. </p>"
  syntax:
    content: public interface IAccountIdentifier
- uid: com.microsoft.identity.client.ILoggerCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ILoggerCallback.yml
  name: ILoggerCallback
  nameWithType: ILoggerCallback
  fullName: com.microsoft.identity.client.ILoggerCallback
  type: Interface
  summary: "<p>Interface for apps to configure the external logging and implement the callback to designate the output of the log messages. </p>"
  syntax:
    content: public interface ILoggerCallback
- uid: com.microsoft.identity.client.IMsalEventReceiver
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IMsalEventReceiver.yml
  name: IMsalEventReceiver
  nameWithType: IMsalEventReceiver
  fullName: com.microsoft.identity.client.IMsalEventReceiver
  type: Interface
  summary: "<p>The interface function for apps to override if they want to get the Telemetry from MSAL. </p>"
  syntax:
    content: public interface IMsalEventReceiver
- uid: com.microsoft.identity.client.Logger
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.Logger.yml
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.identity.client.Logger
  type: Class
  summary: "<p>Override public void log(String tag, Logger.LogLevel logLevel, String message, boolean containsPII) { } });   Loglevel can be specified at <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.ERROR\" data-throw-if-not-resolved=\"false\">LogLevel#ERROR</xref>, <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.WARNING\" data-throw-if-not-resolved=\"false\">LogLevel#WARNING</xref>, <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.INFO\" data-throw-if-not-resolved=\"false\">LogLevel#INFO</xref> and <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.VERBOSE\" data-throw-if-not-resolved=\"false\">LogLevel#VERBOSE</xref>. The sdk enables the verbose level logging by default, to set different level logging: <pre><code>Logger.getInstance().setLogLevel(Loglevel)\r\n    </code></pre> By default, the sdk doesn't send any log messages that contain PII (personal identifiable information) info. To enable PII logging: <pre><code>Logger.getInstance().setEnablePII(true);\r\n    </code></pre></p>"
  syntax:
    content: public class Logger
- uid: com.microsoft.identity.client.MsalChromeCustomTabManager
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.MsalChromeCustomTabManager.yml
  name: MsalChromeCustomTabManager
  nameWithType: MsalChromeCustomTabManager
  fullName: com.microsoft.identity.client.MsalChromeCustomTabManager
  type: Class
  syntax:
    content: public class MsalChromeCustomTabManager
- uid: com.microsoft.identity.client.PublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: PublicClientApplication
  nameWithType: PublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication
  type: Class
  summary: "<p>This is the entry point for developer to create public native applications and make API calls to acquire tokens. </p>\r\n<p>\r\n  <b>Client ID:</b> The clientID of your application is a unique identifier which can be obtained from the app registration portal.</p>\r\n<p>\r\n  <b>AuthorityMetadata:</b> A URL indicating a directory that MSAL can use to obtain tokens. In Azure AD it is of the form <a href=\"https://\">https://</a>&lt;[nstance]/[tenant], where [instance] is the directory host (e.g. <a href=\"https://login.microsoftonline.com\">https://login.microsoftonline.com</a>) and [tenant] is an identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory) For B2C, it is of the form <a href=\"https://\">https://</a>[instance]/tfp/[tenant]/[policy] where instance and tenant are same as Azure AD, and [policy] is a string like signup</p>\r\n<p>MSAL <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\">PublicClientApplication</xref> provides three constructors allowing the client id to be set either via AndroidManifest.xml metadata or using constructor parameters. Similarly, if developer chooses not to use the default authority <a href=\"https://login.microsoftonline.com,\">https://login.microsoftonline.com,</a> an alternate can also be configured using the manifest, constructor parameters, or in acquire token calls. </p>\r\n<p>Redirect is auto-generated in the library in the format of msal&lt;client-id&gt;://auth, and it cannot be overridden. </p>\r\n<p>Developer <b>MUST</b> have <xref uid=\"com.microsoft.identity.client.BrowserTabActivity\" data-throw-if-not-resolved=\"false\">BrowserTabActivity</xref> declared in their manifest, which must have the correct intent-filter configured. If the wrong scheme and host is provided, the sdk will fail the <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\">PublicClientApplication</xref> creation. </p>\r\n<p>Expected format will be: <pre>\r\n&lt;activity\r\n    android:name=\"com.microsoft.identity.client.BrowserTabActivity\"&gt;\r\n    &lt;intent-filter&gt;\r\n        &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\r\n        &lt;data android:scheme=\"msal&amp;lt;AppClientId&amp;gt;\"\r\n             android:host=\"auth\" /&gt;\r\n    &lt;/intent-filter&gt;\r\n&lt;/activity&gt;\r\n</pre></p>\r\n<p>Other Terminology:</p>\r\n<p>\r\n  <b>Scopes:</b>Permissions that the developers wants included in the access token received . Not all scopes are guaranteed to be included in the access token returned. </p>\r\n<p>\r\n  <b>Login Hint:</b> Usually an email, to pass to the service at the beginning of the interactive authentication flow. </p>\r\n<p>\r\n  <b>Extra Scopes to Consent:</b> Permissions you want the user to consent to in the same authentication flow, but won't be included in the returned access token. </p>"
  syntax:
    content: public class PublicClientApplication
- uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
  name: PublicClientApplicationConfiguration
  nameWithType: PublicClientApplicationConfiguration
  fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
  type: Class
  syntax:
    content: public class PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.UiBehavior
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.UiBehavior.yml
  name: UiBehavior
  nameWithType: UiBehavior
  fullName: com.microsoft.identity.client.UiBehavior
  type: Enum
  summary: "<p>The UI options that developer can pass during interactive token acquisition requests. </p>"
  syntax:
    content: public enum UiBehavior
- uid: com.microsoft.identity.client.WebViewSelection
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.WebViewSelection.yml
  name: WebViewSelection
  nameWithType: WebViewSelection
  fullName: com.microsoft.identity.client.WebViewSelection
  type: Enum
  syntax:
    content: public enum WebViewSelection
- uid: com.microsoft.identity.client.Logger.LogLevel
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.Logger.LogLevel.yml
  name: Logger.LogLevel
  nameWithType: Logger.LogLevel
  fullName: com.microsoft.identity.client.Logger.LogLevel
  type: Enum
  summary: "<p>Enum class for LogLevel that the sdk recognizes. </p>"
  syntax:
    content: public enum LogLevel
- uid: com.microsoft.identity.client.PublicClientApplicationConfiguration.SerializedNames
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplicationConfiguration.SerializedNames.yml
  name: PublicClientApplicationConfiguration.SerializedNames
  nameWithType: PublicClientApplicationConfiguration.SerializedNames
  fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration.SerializedNames
  type: Class
  syntax:
    content: public class SerializedNames
