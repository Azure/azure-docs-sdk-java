### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Files.listFromComputeNodeWithServiceResponseAsync*"
fullName: "com.microsoft.azure.batch.protocol.Files.listFromComputeNodeWithServiceResponseAsync"
name: "listFromComputeNodeWithServiceResponseAsync"
nameWithType: "Files.listFromComputeNodeWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Files.listFromComputeNodeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Files.listFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId)"
  name: "listFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId)"
  nameWithType: "Files.listFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId)"
  summary: "Lists all of the files in Task directories on the specified Compute Node."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node whose files you want to list."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<NodeFile>,FileListFromComputeNodeHeaders>> listFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId)"
  returns:
    description: "the observable to the PagedList&lt;NodeFile&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders?alt=com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders&text=FileListFromComputeNodeHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Files.listFromComputeNodeWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Files.listFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, Boolean recursive, FileListFromComputeNodeOptions fileListFromComputeNodeOptions)"
  name: "listFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, Boolean recursive, FileListFromComputeNodeOptions fileListFromComputeNodeOptions)"
  nameWithType: "Files.listFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, Boolean recursive, FileListFromComputeNodeOptions fileListFromComputeNodeOptions)"
  summary: "Lists all of the files in Task directories on the specified Compute Node."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node whose files you want to list."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether to list children of a directory."
    name: "recursive"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "fileListFromComputeNodeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions?alt=com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions&text=FileListFromComputeNodeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<NodeFile>,FileListFromComputeNodeHeaders>> listFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, Boolean recursive, FileListFromComputeNodeOptions fileListFromComputeNodeOptions)"
  returns:
    description: "the observable to the PagedList&lt;NodeFile&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders?alt=com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders&text=FileListFromComputeNodeHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:8.0.0
