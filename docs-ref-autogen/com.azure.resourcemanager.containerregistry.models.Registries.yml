### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerregistry.models.Registries"
fullName: "com.azure.resourcemanager.containerregistry.models.Registries"
name: "Registries"
nameWithType: "Registries"
summary: "Entry point to the registry management API."
syntax: "public interface Registries extends SupportsCreating<Registry.DefinitionStages.Blank>, HasManager<ContainerRegistryManager>, SupportsBatchCreation<Registry>, SupportsGettingById<Registry>, SupportsDeletingById, SupportsDeletingByResourceGroup, SupportsListingByResourceGroup<Registry>, SupportsGettingByResourceGroup<Registry>, SupportsListing<Registry>"
methods:
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.checkNameAvailability(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.checkNameAvailability(String name)"
  name: "checkNameAvailability(String name)"
  nameWithType: "Registries.checkNameAvailability(String name)"
  summary: "Checks if the specified container registry name is valid and available."
  modifiers:
  - "abstract"
  parameters:
  - description: "the container registry name to check"
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract CheckNameAvailabilityResult checkNameAvailability(String name)"
  desc: "Checks if the specified container registry name is valid and available."
  returns:
    description: "whether the name is available and other info if not"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.CheckNameAvailabilityResult?alt=com.azure.resourcemanager.containerregistry.models.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.checkNameAvailabilityAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.checkNameAvailabilityAsync(String name)"
  name: "checkNameAvailabilityAsync(String name)"
  nameWithType: "Registries.checkNameAvailabilityAsync(String name)"
  summary: "Checks if container registry name is valid and is not in use asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the container registry name to check"
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<CheckNameAvailabilityResult> checkNameAvailabilityAsync(String name)"
  desc: "Checks if container registry name is valid and is not in use asynchronously."
  returns:
    description: "a representation of the future computation of this call, returning whether the name is available or other\n     info if not"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.CheckNameAvailabilityResult?alt=com.azure.resourcemanager.containerregistry.models.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.getBuildSourceUploadUrl(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.getBuildSourceUploadUrl(String rgName, String acrName)"
  name: "getBuildSourceUploadUrl(String rgName, String acrName)"
  nameWithType: "Registries.getBuildSourceUploadUrl(String rgName, String acrName)"
  summary: "The function that gets the URL of the build source upload."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the resource group."
    name: "rgName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the name of the container."
    name: "acrName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SourceUploadDefinition getBuildSourceUploadUrl(String rgName, String acrName)"
  desc: "The function that gets the URL of the build source upload."
  returns:
    description: "the URL of the build source upload."
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition?alt=com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition&text=SourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.getBuildSourceUploadUrlAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.getBuildSourceUploadUrlAsync(String rgName, String acrName)"
  name: "getBuildSourceUploadUrlAsync(String rgName, String acrName)"
  nameWithType: "Registries.getBuildSourceUploadUrlAsync(String rgName, String acrName)"
  summary: "The function that gets the URL of the build source upload ashnchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the resource group."
    name: "rgName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the name of the container."
    name: "acrName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<SourceUploadDefinition> getBuildSourceUploadUrlAsync(String rgName, String acrName)"
  desc: "The function that gets the URL of the build source upload ashnchronously."
  returns:
    description: "the URL of the build source upload."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition?alt=com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition&text=SourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.getCredentials(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.getCredentials(String resourceGroupName, String registryName)"
  name: "getCredentials(String resourceGroupName, String registryName)"
  nameWithType: "Registries.getCredentials(String resourceGroupName, String registryName)"
  summary: "Gets the login credentials for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the registry name"
    name: "registryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RegistryCredentials getCredentials(String resourceGroupName, String registryName)"
  desc: "Gets the login credentials for the specified container registry."
  returns:
    description: "the container registry's login credentials"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryCredentials?alt=com.azure.resourcemanager.containerregistry.models.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.getCredentialsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.getCredentialsAsync(String resourceGroupName, String registryName)"
  name: "getCredentialsAsync(String resourceGroupName, String registryName)"
  nameWithType: "Registries.getCredentialsAsync(String resourceGroupName, String registryName)"
  summary: "Gets the login credentials for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the registry name"
    name: "registryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<RegistryCredentials> getCredentialsAsync(String resourceGroupName, String registryName)"
  desc: "Gets the login credentials for the specified container registry."
  returns:
    description: "a representation of the future computation of this call, returning the container registry's login\n     credentials"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryCredentials?alt=com.azure.resourcemanager.containerregistry.models.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.listQuotaUsages(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.listQuotaUsages(String resourceGroupName, String registryName)"
  name: "listQuotaUsages(String resourceGroupName, String registryName)"
  nameWithType: "Registries.listQuotaUsages(String resourceGroupName, String registryName)"
  summary: "Lists the quota usages for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the registry name"
    name: "registryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Collection<RegistryUsage> listQuotaUsages(String resourceGroupName, String registryName)"
  desc: "Lists the quota usages for the specified container registry."
  returns:
    description: "the list of container registry's quota usages"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html\">Collection</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryUsage?alt=com.azure.resourcemanager.containerregistry.models.RegistryUsage&text=RegistryUsage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.listQuotaUsagesAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.listQuotaUsagesAsync(String resourceGroupName, String registryName)"
  name: "listQuotaUsagesAsync(String resourceGroupName, String registryName)"
  nameWithType: "Registries.listQuotaUsagesAsync(String resourceGroupName, String registryName)"
  summary: "Lists the quota usages for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the registry name"
    name: "registryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RegistryUsage> listQuotaUsagesAsync(String resourceGroupName, String registryName)"
  desc: "Lists the quota usages for the specified container registry."
  returns:
    description: "a representation of the future computation of this call, returning the list of container registry's quota\n     usages"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryUsage?alt=com.azure.resourcemanager.containerregistry.models.RegistryUsage&text=RegistryUsage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.regenerateCredential(java.lang.String,java.lang.String,com.azure.resourcemanager.containerregistry.models.AccessKeyType)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.regenerateCredential(String resourceGroupName, String registryName, AccessKeyType accessKeyType)"
  name: "regenerateCredential(String resourceGroupName, String registryName, AccessKeyType accessKeyType)"
  nameWithType: "Registries.regenerateCredential(String resourceGroupName, String registryName, AccessKeyType accessKeyType)"
  summary: "Regenerates the value for one of the admin user access key for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the registry name"
    name: "registryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the admin user access key name to regenerate the value for"
    name: "accessKeyType"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.AccessKeyType?alt=com.azure.resourcemanager.containerregistry.models.AccessKeyType&text=AccessKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RegistryCredentials regenerateCredential(String resourceGroupName, String registryName, AccessKeyType accessKeyType)"
  desc: "Regenerates the value for one of the admin user access key for the specified container registry."
  returns:
    description: "the container registry's login credentials"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryCredentials?alt=com.azure.resourcemanager.containerregistry.models.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.regenerateCredentialAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.containerregistry.models.AccessKeyType)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.regenerateCredentialAsync(String resourceGroupName, String registryName, AccessKeyType accessKeyType)"
  name: "regenerateCredentialAsync(String resourceGroupName, String registryName, AccessKeyType accessKeyType)"
  nameWithType: "Registries.regenerateCredentialAsync(String resourceGroupName, String registryName, AccessKeyType accessKeyType)"
  summary: "Regenerates the value for one of the admin user access key for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the registry name"
    name: "registryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the admin user access key name to regenerate the value for"
    name: "accessKeyType"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.AccessKeyType?alt=com.azure.resourcemanager.containerregistry.models.AccessKeyType&text=AccessKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<RegistryCredentials> regenerateCredentialAsync(String resourceGroupName, String registryName, AccessKeyType accessKeyType)"
  desc: "Regenerates the value for one of the admin user access key for the specified container registry."
  returns:
    description: "a representation of the future computation of this call, returning the container registry's login\n     credentials"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryCredentials?alt=com.azure.resourcemanager.containerregistry.models.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.webhooks()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.webhooks()"
  name: "webhooks()"
  nameWithType: "Registries.webhooks()"
  modifiers:
  - "abstract"
  syntax: "public abstract Registries.WebhooksClient webhooks()"
  returns:
    description: "returns entry point to manage container registry webhooks."
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.Registries.WebhooksClient?alt=com.azure.resourcemanager.containerregistry.models.Registries.WebhooksClient&text=WebhooksClient\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Entry point to the registry management API."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup&text=SupportsDeletingByResourceGroup\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById&text=SupportsGettingById\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.Registry?alt=com.azure.resourcemanager.containerregistry.models.Registry&text=Registry\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup&text=SupportsGettingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.Registry?alt=com.azure.resourcemanager.containerregistry.models.Registry&text=Registry\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup&text=SupportsListingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.Registry?alt=com.azure.resourcemanager.containerregistry.models.Registry&text=Registry\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.ContainerRegistryManager?alt=com.azure.resourcemanager.containerregistry.ContainerRegistryManager&text=ContainerRegistryManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation&text=SupportsBatchCreation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.Registry?alt=com.azure.resourcemanager.containerregistry.models.Registry&text=Registry\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.Registry.DefinitionStages.Blank?alt=com.azure.resourcemanager.containerregistry.models.Registry.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById&text=SupportsDeletingById\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.Registry?alt=com.azure.resourcemanager.containerregistry.models.Registry&text=Registry\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.containerregistry.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.19.0
