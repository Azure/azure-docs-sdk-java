### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base
  id: _proxy_base
  parent: microsoft.servicefabric.services.remoting.builder
  children:
  - microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith(CompletableFuture<Object>)
  - microsoft.servicefabric.services.remoting.builder._proxy_base.continueWithResult(int,int,CompletableFuture<Object>)
  - microsoft.servicefabric.services.remoting.builder._proxy_base.createRequestMessageBody(Object)
  - microsoft.servicefabric.services.remoting.builder._proxy_base.deserializeMessage(byte [])
  - microsoft.servicefabric.services.remoting.builder._proxy_base.getResponseMessageBodyValue(Object)
  - microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue(int,int,Object)
  - microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,byte [])
  - microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,Object)
  - microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,byte [],CancellationToken)
  - microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,Object,CancellationToken)
  - microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase()
  - microsoft.servicefabric.services.remoting.builder._proxy_base.serializeMessage(Object)
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: ProxyBase
  nameWithType: ProxyBase
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 7
  package: microsoft.servicefabric.services.remoting.builder
  summary: <p>The base class used by remoting code generator to generate the proxy for the remoted interfaces. </p>
  syntax: &o1
    content: public class ProxyBase
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith(CompletableFuture<Object>)
  id: continueWith(CompletableFuture<Object>)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: continueWith(CompletableFuture<Object> future)
  nameWithType: ProxyBase.continueWith(CompletableFuture<Object> future)
  fullName: CompletableFuture<?> microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWith(CompletableFuture<Object> future)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 71
  package: microsoft.servicefabric.services.remoting.builder
  summary: <p>Called by the generated proxy class to continue after getting the response body that does not have value. </p>
  syntax:
    content: protected CompletableFuture<?> continueWith(CompletableFuture<Object> future)
    parameters:
    - id: future
      type: 55aa5245
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation for remote method call. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation for remote method call. </p>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWithResult(int,int,CompletableFuture<Object>)
  id: continueWithResult(int,int,CompletableFuture<Object>)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: continueWithResult(int interfaceId, int methodId, CompletableFuture<Object> future)
  nameWithType: ProxyBase.continueWithResult(int interfaceId, int methodId, CompletableFuture<Object> future)
  fullName: protected<T> CompletableFuture<T> microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWithResult(int interfaceId, int methodId, CompletableFuture<Object> future)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWithResult*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 57
  package: microsoft.servicefabric.services.remoting.builder
  summary: <p>Called by the generated proxy class to get the result from the response body. </p>
  syntax:
    content: protected <T> CompletableFuture<T> continueWithResult(int interfaceId, int methodId, CompletableFuture<Object> future)
    parameters:
    - id: interfaceId
      type: f75371fa
      description: <p>Interface Id for the remoted interface. </p>
    - id: methodId
      type: f75371fa
      description: <p>Method Id for the remote method. </p>
    - id: future
      type: 55aa5245
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation for remote method call. </p>
    return:
      type: 6d056e8b
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation for remote method call. The value of the &lt;T&gt; contains the remote method return value. </p>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.createRequestMessageBody(Object)
  id: createRequestMessageBody(Object)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: createRequestMessageBody(Object requestMessageBodyValue)
  nameWithType: ProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.createRequestMessageBody*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 89
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected abstract Object createRequestMessageBody(Object requestMessageBodyValue)
    parameters:
    - id: requestMessageBodyValue
      type: "79317049"
    return:
      type: 1377799a
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.deserializeMessage(byte [])
  id: deserializeMessage(byte [])
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: deserializeMessage(byte[] msgBodyValue)
  nameWithType: ProxyBase.deserializeMessage(byte[] msgBodyValue)
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.deserializeMessage(byte[] msgBodyValue)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.deserializeMessage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 87
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected abstract Object deserializeMessage(byte[] msgBodyValue)
    parameters:
    - id: msgBodyValue
      type: ccd9418d
    return:
      type: 1377799a
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.getResponseMessageBodyValue(Object)
  id: getResponseMessageBodyValue(Object)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: getResponseMessageBodyValue(Object responseMessageBody)
  nameWithType: ProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.getResponseMessageBodyValue*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 95
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected abstract Object getResponseMessageBodyValue(Object responseMessageBody)
    parameters:
    - id: responseMessageBody
      type: "79317049"
    return:
      type: 1377799a
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue(int,int,Object)
  id: getReturnValue(int,int,Object)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: getReturnValue(int interfaceId, int methodId, Object responseBody)
  nameWithType: ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 82
  package: microsoft.servicefabric.services.remoting.builder
  summary: <p>Implemented by the derived class to type cast the response body and extract the value from it. </p>
  syntax:
    content: protected abstract Object getReturnValue(int interfaceId, int methodId, Object responseBody)
    parameters:
    - id: interfaceId
      type: f75371fa
      description: <p>Interface Id for the actor interface. </p>
    - id: methodId
      type: f75371fa
      description: <p>Method Id for the actor method. </p>
    - id: responseBody
      type: "79317049"
      description: <p>Response body. </p>
    return:
      type: 1377799a
      description: <p>Return value of method call as <xref uid="" data-throw-if-not-resolved="false">Object</xref>. </p>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,byte [])
  id: invoke(int,int,byte [])
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  nameWithType: ProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  fullName: abstract void microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.invoke*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 91
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected abstract void invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
    parameters:
    - id: interfaceId
      type: f75371fa
    - id: methodId
      type: f75371fa
    - id: requestMsgBodyBytes
      type: ccd9418d
    return:
      type: 5beb11ad
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,Object)
  id: invoke(int,int,Object)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  nameWithType: ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  fullName: void microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.invoke*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 18
  package: microsoft.servicefabric.services.remoting.builder
  summary: <p>Called by the generated proxy class to send the message to the remote object. </p>
  syntax:
    content: protected void invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
    parameters:
    - id: interfaceId
      type: f75371fa
      description: <p>Id of the remote interface. </p>
    - id: methodId
      type: f75371fa
      description: <p>Id of the remote method to be invokved. </p>
    - id: requestMsgBodyValue
      type: "79317049"
      description: <p>Message body to be sent to remote object. </p>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,byte [],CancellationToken)
  id: invokeAsync(int,int,byte [],CancellationToken)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  nameWithType: ProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  fullName: abstract CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 93
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected abstract CompletableFuture<byte[]> invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
    parameters:
    - id: interfaceId
      type: f75371fa
    - id: methodId
      type: f75371fa
    - id: requestMsgBodyBytes
      type: ccd9418d
    - id: cancellationToken
      type: system.fabric._cancellation_token
    return:
      type: c496e2c5
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,Object,CancellationToken)
  id: invokeAsync(int,int,Object,CancellationToken)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  nameWithType: ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 32
  package: microsoft.servicefabric.services.remoting.builder
  summary: <p>Called by the generated proxy class to send the request to the remote object and get the response back. </p>
  syntax:
    content: protected CompletableFuture<Object> invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
    parameters:
    - id: interfaceId
      type: f75371fa
      description: <p>Id of the remote interface. </p>
    - id: methodId
      type: f75371fa
      description: <p>Id of the remote method to be invoked. </p>
    - id: requestMsgBodyValue
      type: "79317049"
      description: <p>Request body. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
    return:
      type: 55aa5245
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation async call to remote object. </p>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase()
  id: ProxyBase()
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: ProxyBase()
  nameWithType: ProxyBase.ProxyBase()
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.ProxyBase()
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 10
  package: microsoft.servicefabric.services.remoting.builder
  summary: <p>Initializes a new instance of the <xref uid="microsoft.servicefabric.services.remoting.builder._proxy_base" data-throw-if-not-resolved="false">ProxyBase</xref> class. </p>
  syntax:
    content: protected ProxyBase()
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.serializeMessage(Object)
  id: serializeMessage(Object)
  parent: microsoft.servicefabric.services.remoting.builder._proxy_base
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  langs:
  - java
  name: serializeMessage(Object msgBodyValue)
  nameWithType: ProxyBase.serializeMessage(Object msgBodyValue)
  fullName: abstract byte [] microsoft.servicefabric.services.remoting.builder.ProxyBase.serializeMessage(Object msgBodyValue)
  overload: microsoft.servicefabric.services.remoting.builder._proxy_base.serializeMessage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyBase.java
    startLine: 85
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected abstract byte [] serializeMessage(Object msgBodyValue)
    parameters:
    - id: msgBodyValue
      type: "79317049"
    return:
      type: ca8125b7
references:
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase*
  name: ProxyBase
  nameWithType: ProxyBase.ProxyBase
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.ProxyBase
  package: microsoft.servicefabric.services.remoting.builder
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.invoke*
  name: invoke
  nameWithType: ProxyBase.invoke
  fullName: void microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke
  package: microsoft.servicefabric.services.remoting.builder
- uid: 55aa5245
  spec.java:
  - name: CompletableFuture<Object>
    fullName: CompletableFuture<Object>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync*
  name: invokeAsync
  nameWithType: ProxyBase.invokeAsync
  fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync
  package: microsoft.servicefabric.services.remoting.builder
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith*
  name: continueWith
  nameWithType: ProxyBase.continueWith
  fullName: CompletableFuture<?> microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWith
  package: microsoft.servicefabric.services.remoting.builder
- uid: 1377799a
  spec.java:
  - name: abstract Object
    fullName: abstract Object
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue*
  name: getReturnValue
  nameWithType: ProxyBase.getReturnValue
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.getReturnValue
  package: microsoft.servicefabric.services.remoting.builder
- uid: ca8125b7
  spec.java:
  - name: abstract byte []
    fullName: abstract byte []
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.serializeMessage*
  name: serializeMessage
  nameWithType: ProxyBase.serializeMessage
  fullName: abstract byte [] microsoft.servicefabric.services.remoting.builder.ProxyBase.serializeMessage
  package: microsoft.servicefabric.services.remoting.builder
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.deserializeMessage*
  name: deserializeMessage
  nameWithType: ProxyBase.deserializeMessage
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.deserializeMessage
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.createRequestMessageBody*
  name: createRequestMessageBody
  nameWithType: ProxyBase.createRequestMessageBody
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.createRequestMessageBody
  package: microsoft.servicefabric.services.remoting.builder
- uid: 5beb11ad
  spec.java:
  - name: abstract void
    fullName: abstract void
- uid: c496e2c5
  spec.java:
  - name: abstract CompletableFuture<byte[]>
    fullName: abstract CompletableFuture<byte[]>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.getResponseMessageBodyValue*
  name: getResponseMessageBodyValue
  nameWithType: ProxyBase.getResponseMessageBodyValue
  fullName: abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.getResponseMessageBodyValue
  package: microsoft.servicefabric.services.remoting.builder
- uid: 6d056e8b
  spec.java:
  - name: <T> CompletableFuture<T>
    fullName: <T> CompletableFuture<T>
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWithResult*
  name: continueWithResult
  nameWithType: ProxyBase.continueWithResult
  fullName: protected<T> CompletableFuture<T> microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWithResult
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.actors._actor_event_proxy
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_event_proxy.yml
  name: ActorEventProxy
  nameWithType: ActorEventProxy
  fullName: microsoft.servicefabric.actors.ActorEventProxy
  type: Class
  summary: <p>Provides the base implementation for the proxy to invoke methods on actor event subscribers. </p>
  syntax:
    content: public class ActorEventProxy extends ProxyBase
- uid: microsoft.servicefabric.actors._actor_proxy_base
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_proxy_base.yml
  name: ActorProxyBase
  nameWithType: ActorProxyBase
  fullName: microsoft.servicefabric.actors.ActorProxyBase
  type: Class
  summary: <p>Provides the base implementation for the proxy to the remote actor objects implementing IActor interfaces. </p>
  syntax:
    content: public class ActorProxyBase extends ProxyBase implements ActorProxy
- uid: microsoft.servicefabric.services.remoting.client._service_proxy_base
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
  name: ServiceProxyBase
  nameWithType: ServiceProxyBase
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyBase
  type: Class
  summary: <p>Provides the base implementation for the proxy to the remoted IService interfaces. </p>
  syntax:
    content: public class ServiceProxyBase
- uid: microsoft.servicefabric.services.remoting.builder._proxy_base
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
  name: ProxyBase
  nameWithType: ProxyBase
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase
  type: Class
  summary: <p>The base class used by remoting code generator to generate the proxy for the remoted interfaces. </p>
  syntax: *o1
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
