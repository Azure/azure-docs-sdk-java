### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  id: VirtualMachineScaleSetVMsClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation
  children:
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocateAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenanceAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOffAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeployAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAllAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestartAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommandAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStartAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceView(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEviction(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  - com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  langs:
  - java
  name: VirtualMachineScaleSetVMsClientImpl
  nameWithType: VirtualMachineScaleSetVMsClientImpl
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  type: Class
  package: com.azure.resourcemanager.compute.implementation
  summary: An instance of this class provides access to all the operations defined in VirtualMachineScaleSetVMsClient.
  syntax:
    content: public final class VirtualMachineScaleSetVMsClientImpl implements VirtualMachineScaleSetVMsClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.VirtualMachineScaleSetVMsClientImpl(com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl)
  id: VirtualMachineScaleSetVMsClientImpl(com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: VirtualMachineScaleSetVMsClientImpl(ComputeManagementClientImpl client)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.VirtualMachineScaleSetVMsClientImpl(ComputeManagementClientImpl client)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.VirtualMachineScaleSetVMsClientImpl(ComputeManagementClientImpl client)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.VirtualMachineScaleSetVMsClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.compute.implementation
  summary: Initializes an instance of VirtualMachineScaleSetVMsClientImpl.
  syntax:
    content: " VirtualMachineScaleSetVMsClientImpl(ComputeManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeallocate(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeallocate(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocateAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeallocateAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginDeallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDeallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDelete(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a virtual machine from a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDelete(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a virtual machine from a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDeleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a virtual machine from a VM scale set.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance(java.lang.String,java.lang.String,java.lang.String)
  id: beginPerformMaintenance(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Performs maintenance on a virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginPerformMaintenance(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Performs maintenance on a virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenanceAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginPerformMaintenanceAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenanceAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Performs maintenance on a virtual machine in a VM scale set.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginPowerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: beginPowerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOffAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginPowerOffAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginPowerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPowerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOffAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginPowerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy(java.lang.String,java.lang.String,java.lang.String)
  id: beginRedeploy(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRedeploy(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRedeploy(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginRedeploy(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginRedeploy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRedeploy(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRedeploy(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginRedeploy(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeployAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginRedeployAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRedeployAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRedeployAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeployAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeployAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginRedeployAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginReimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginReimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginReimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: tempDisk
      type: java.lang.Boolean
      description: >-
        Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage
             parameter is only supported for VM/VMSS with Ephemeral OS disk.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: beginReimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginReimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginReimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: tempDisk
      type: java.lang.Boolean
      description: >-
        Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage
             parameter is only supported for VM/VMSS with Ephemeral OS disk.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll(java.lang.String,java.lang.String,java.lang.String)
  id: beginReimageAll(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginReimageAll(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAllAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginReimageAllAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginReimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAllAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginReimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginReimageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginReimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginReimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: tempDisk
      type: java.lang.Boolean
      description: >-
        Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage
             parameter is only supported for VM/VMSS with Ephemeral OS disk.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart(java.lang.String,java.lang.String,java.lang.String)
  id: beginRestart(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRestart(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRestart(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Restarts a virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginRestart(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginRestart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRestart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRestart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Restarts a virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginRestart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestartAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginRestartAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRestartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRestartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestartAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Restarts a virtual machine in a VM scale set.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginRestartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  id: beginRunCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRunCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRunCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Run command on a virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<RunCommandResultInner>,RunCommandResultInner> beginRunCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.RunCommandInput
      description: Capture Virtual Machine parameters.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>,com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>
      description: the response.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput,com.azure.core.util.Context)
  id: beginRunCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRunCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRunCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Run command on a virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<RunCommandResultInner>,RunCommandResultInner> beginRunCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.RunCommandInput
      description: Capture Virtual Machine parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>,com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>
      description: the response.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommandAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  id: beginRunCommandAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginRunCommandAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRunCommandAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommandAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommandAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Run command on a virtual machine in a VM scale set.
  syntax:
    content: public PollerFlux<PollResult<RunCommandResultInner>,RunCommandResultInner> beginRunCommandAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.RunCommandInput
      description: Capture Virtual Machine parameters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>,com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>
      description: the response.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart(java.lang.String,java.lang.String,java.lang.String)
  id: beginStart(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginStart(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginStart(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Starts a virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginStart(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginStart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginStart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginStart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Starts a virtual machine in a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginStart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStartAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginStartAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginStartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginStartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStartAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Starts a virtual machine in a VM scale set.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginStartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginUpdate(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates a virtual machine of a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<VirtualMachineScaleSetVMInner>,VirtualMachineScaleSetVMInner> beginUpdate(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set where the extension should be create or updated.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: Describes a virtual machine scale set virtual machine.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: describes a virtual machine scale set virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginUpdate(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates a virtual machine of a VM scale set.
  syntax:
    content: public SyncPoller<PollResult<VirtualMachineScaleSetVMInner>,VirtualMachineScaleSetVMInner> beginUpdate(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set where the extension should be create or updated.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: Describes a virtual machine scale set virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: describes a virtual machine scale set virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  id: beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginUpdateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates a virtual machine of a VM scale set.
  syntax:
    content: public PollerFlux<PollResult<VirtualMachineScaleSetVMInner>,VirtualMachineScaleSetVMInner> beginUpdateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set where the extension should be create or updated.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: Describes a virtual machine scale set virtual machine.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: describes a virtual machine scale set virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate(java.lang.String,java.lang.String,java.lang.String)
  id: deallocate(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: deallocate(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deallocate(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
  syntax:
    content: public void deallocate(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deallocate(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: deallocate(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deallocate(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
  syntax:
    content: public void deallocate(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deallocateAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: deallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
  syntax:
    content: public Mono<Void> deallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deallocateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: deallocateWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deallocateWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deallocateWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.delete(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a virtual machine from a VM scale set.
  syntax:
    content: public void delete(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.delete(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a virtual machine from a VM scale set.
  syntax:
    content: public void delete(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a virtual machine from a VM scale set.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deleteWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a virtual machine from a VM scale set.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.get(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.get(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a virtual machine from a VM scale set.
  syntax:
    content: public VirtualMachineScaleSetVMInner get(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a virtual machine from a VM scale set.
  syntax:
    content: public Mono<VirtualMachineScaleSetVMInner> getAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getAsync(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a virtual machine from a VM scale set.
  syntax:
    content: public Mono<VirtualMachineScaleSetVMInner> getAsync(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: expand
      type: com.azure.resourcemanager.compute.models.InstanceViewTypes
      description: The expand expression to apply on the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceView(java.lang.String,java.lang.String,java.lang.String)
  id: getInstanceView(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: getInstanceView(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getInstanceView(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceView(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceView*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets the status of a virtual machine from a VM scale set.
  syntax:
    content: public VirtualMachineScaleSetVMInstanceViewInner getInstanceView(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
      description: the status of a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getInstanceViewAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: getInstanceViewAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getInstanceViewAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets the status of a virtual machine from a VM scale set.
  syntax:
    content: public Mono<VirtualMachineScaleSetVMInstanceViewInner> getInstanceViewAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner>
      description: the status of a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getInstanceViewWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: getInstanceViewWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets the status of a virtual machine from a VM scale set.
  syntax:
    content: public Response<VirtualMachineScaleSetVMInstanceViewInner> getInstanceViewWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner>
      description: the status of a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getInstanceViewWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: getInstanceViewWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets the status of a virtual machine from a VM scale set.
  syntax:
    content: public Mono<Response<VirtualMachineScaleSetVMInstanceViewInner>> getInstanceViewWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner>>
      description: the status of a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a virtual machine from a VM scale set.
  syntax:
    content: public Response<VirtualMachineScaleSetVMInner> getWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: expand
      type: com.azure.resourcemanager.compute.models.InstanceViewTypes
      description: The expand expression to apply on the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.InstanceViewTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a virtual machine from a VM scale set.
  syntax:
    content: public Mono<Response<VirtualMachineScaleSetVMInner>> getWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, InstanceViewTypes expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: expand
      type: com.azure.resourcemanager.compute.models.InstanceViewTypes
      description: The expand expression to apply on the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>>
      description: a virtual machine from a VM scale set.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String virtualMachineScaleSetName)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.list(String resourceGroupName, String virtualMachineScaleSetName)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list(String resourceGroupName, String virtualMachineScaleSetName)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a list of all virtual machines in a VM scale sets.
  syntax:
    content: public PagedIterable<VirtualMachineScaleSetVMInner> list(String resourceGroupName, String virtualMachineScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: virtualMachineScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: a list of all virtual machines in a VM scale sets.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String virtualMachineScaleSetName, String filter, String select, String expand, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.list(String resourceGroupName, String virtualMachineScaleSetName, String filter, String select, String expand, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list(String resourceGroupName, String virtualMachineScaleSetName, String filter, String select, String expand, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a list of all virtual machines in a VM scale sets.
  syntax:
    content: public PagedIterable<VirtualMachineScaleSetVMInner> list(String resourceGroupName, String virtualMachineScaleSetName, String filter, String select, String expand, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: virtualMachineScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply to the operation. Allowed values are 'startswith(instanceView/statuses/code,
             'PowerState') eq true', 'properties/latestModelApplied eq true', 'properties/latestModelApplied eq false'.
    - id: select
      type: java.lang.String
      description: The list parameters. Allowed values are 'instanceView', 'instanceView/statuses'.
    - id: expand
      type: java.lang.String
      description: The expand expression to apply to the operation. Allowed values are 'instanceView'.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: a list of all virtual machines in a VM scale sets.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: listAsync(String resourceGroupName, String virtualMachineScaleSetName)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.listAsync(String resourceGroupName, String virtualMachineScaleSetName)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync(String resourceGroupName, String virtualMachineScaleSetName)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a list of all virtual machines in a VM scale sets.
  syntax:
    content: public PagedFlux<VirtualMachineScaleSetVMInner> listAsync(String resourceGroupName, String virtualMachineScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: virtualMachineScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: a list of all virtual machines in a VM scale sets.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: listAsync(String resourceGroupName, String virtualMachineScaleSetName, String filter, String select, String expand)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.listAsync(String resourceGroupName, String virtualMachineScaleSetName, String filter, String select, String expand)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync(String resourceGroupName, String virtualMachineScaleSetName, String filter, String select, String expand)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets a list of all virtual machines in a VM scale sets.
  syntax:
    content: public PagedFlux<VirtualMachineScaleSetVMInner> listAsync(String resourceGroupName, String virtualMachineScaleSetName, String filter, String select, String expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: virtualMachineScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply to the operation. Allowed values are 'startswith(instanceView/statuses/code,
             'PowerState') eq true', 'properties/latestModelApplied eq true', 'properties/latestModelApplied eq false'.
    - id: select
      type: java.lang.String
      description: The list parameters. Allowed values are 'instanceView', 'instanceView/statuses'.
    - id: expand
      type: java.lang.String
      description: The expand expression to apply to the operation. Allowed values are 'instanceView'.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: a list of all virtual machines in a VM scale sets.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance(java.lang.String,java.lang.String,java.lang.String)
  id: performMaintenance(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: performMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.performMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Performs maintenance on a virtual machine in a VM scale set.
  syntax:
    content: public void performMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: performMaintenance(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: performMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.performMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Performs maintenance on a virtual machine in a VM scale set.
  syntax:
    content: public void performMaintenance(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceAsync(java.lang.String,java.lang.String,java.lang.String)
  id: performMaintenanceAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: performMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.performMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Performs maintenance on a virtual machine in a VM scale set.
  syntax:
    content: public Mono<Void> performMaintenanceAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: performMaintenanceWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: performMaintenanceWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.performMaintenanceWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Performs maintenance on a virtual machine in a VM scale set.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> performMaintenanceWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(java.lang.String,java.lang.String,java.lang.String)
  id: powerOff(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: powerOff(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOff(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public void powerOff(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: powerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: powerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public void powerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: powerOff(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: powerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public void powerOff(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync(java.lang.String,java.lang.String,java.lang.String)
  id: powerOffAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: powerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public Mono<Void> powerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: powerOffAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: powerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public Mono<Void> powerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: powerOffWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: powerOffWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOffWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> powerOffWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy(java.lang.String,java.lang.String,java.lang.String)
  id: redeploy(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: redeploy(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.redeploy(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
  syntax:
    content: public void redeploy(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: redeploy(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: redeploy(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.redeploy(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
  syntax:
    content: public void redeploy(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployAsync(java.lang.String,java.lang.String,java.lang.String)
  id: redeployAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: redeployAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.redeployAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
  syntax:
    content: public Mono<Void> redeployAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: redeployWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: redeployWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.redeployWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> redeployWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(java.lang.String,java.lang.String,java.lang.String)
  id: reimage(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimage(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimage(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public void reimage(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: reimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public void reimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: tempDisk
      type: java.lang.Boolean
      description: >-
        Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage
             parameter is only supported for VM/VMSS with Ephemeral OS disk.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: reimage(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public void reimage(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: tempDisk
      type: java.lang.Boolean
      description: >-
        Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage
             parameter is only supported for VM/VMSS with Ephemeral OS disk.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll(java.lang.String,java.lang.String,java.lang.String)
  id: reimageAll(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimageAll(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAll(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
  syntax:
    content: public void reimageAll(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: reimageAll(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
  syntax:
    content: public void reimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllAsync(java.lang.String,java.lang.String,java.lang.String)
  id: reimageAllAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
  syntax:
    content: public Mono<Void> reimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: reimageAllWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimageAllWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAllWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> reimageAllWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync(java.lang.String,java.lang.String,java.lang.String)
  id: reimageAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public Mono<Void> reimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: reimageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public Mono<Void> reimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: tempDisk
      type: java.lang.Boolean
      description: >-
        Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage
             parameter is only supported for VM/VMSS with Ephemeral OS disk.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: reimageWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: reimageWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> reimageWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean tempDisk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: tempDisk
      type: java.lang.Boolean
      description: >-
        Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage
             parameter is only supported for VM/VMSS with Ephemeral OS disk.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart(java.lang.String,java.lang.String,java.lang.String)
  id: restart(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: restart(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.restart(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Restarts a virtual machine in a VM scale set.
  syntax:
    content: public void restart(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: restart(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: restart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.restart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Restarts a virtual machine in a VM scale set.
  syntax:
    content: public void restart(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartAsync(java.lang.String,java.lang.String,java.lang.String)
  id: restartAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: restartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.restartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Restarts a virtual machine in a VM scale set.
  syntax:
    content: public Mono<Void> restartAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: restartWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: restartWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.restartWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Restarts a virtual machine in a VM scale set.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> restartWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  id: runCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: runCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.runCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Run command on a virtual machine in a VM scale set.
  syntax:
    content: public RunCommandResultInner runCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.RunCommandInput
      description: Capture Virtual Machine parameters.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
      description: the response.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput,com.azure.core.util.Context)
  id: runCommand(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: runCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.runCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Run command on a virtual machine in a VM scale set.
  syntax:
    content: public RunCommandResultInner runCommand(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.RunCommandInput
      description: Capture Virtual Machine parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
      description: the response.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  id: runCommandAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: runCommandAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.runCommandAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Run command on a virtual machine in a VM scale set.
  syntax:
    content: public Mono<RunCommandResultInner> runCommandAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.RunCommandInput
      description: Capture Virtual Machine parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>
      description: the response.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  id: runCommandWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.RunCommandInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: runCommandWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.runCommandWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Run command on a virtual machine in a VM scale set.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> runCommandWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, RunCommandInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.RunCommandInput
      description: Capture Virtual Machine parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the response.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEviction(java.lang.String,java.lang.String,java.lang.String)
  id: simulateEviction(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: simulateEviction(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.simulateEviction(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEviction(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEviction*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: The operation to simulate the eviction of spot virtual machine in a VM scale set. The eviction will occur within 30 minutes of calling the API.
  syntax:
    content: public void simulateEviction(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionAsync(java.lang.String,java.lang.String,java.lang.String)
  id: simulateEvictionAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: simulateEvictionAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.simulateEvictionAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: The operation to simulate the eviction of spot virtual machine in a VM scale set. The eviction will occur within 30 minutes of calling the API.
  syntax:
    content: public Mono<Void> simulateEvictionAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: simulateEvictionWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: simulateEvictionWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: The operation to simulate the eviction of spot virtual machine in a VM scale set. The eviction will occur within 30 minutes of calling the API.
  syntax:
    content: public Response<Void> simulateEvictionWithResponse(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: simulateEvictionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: simulateEvictionWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: The operation to simulate the eviction of spot virtual machine in a VM scale set. The eviction will occur within 30 minutes of calling the API.
  syntax:
    content: public Mono<Response<Void>> simulateEvictionWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start(java.lang.String,java.lang.String,java.lang.String)
  id: start(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: start(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.start(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Starts a virtual machine in a VM scale set.
  syntax:
    content: public void start(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: start(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: start(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.start(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Starts a virtual machine in a VM scale set.
  syntax:
    content: public void start(String resourceGroupName, String vmScaleSetName, String instanceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startAsync(java.lang.String,java.lang.String,java.lang.String)
  id: startAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: startAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.startAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Starts a virtual machine in a VM scale set.
  syntax:
    content: public Mono<Void> startAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: startWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: startWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.startWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Starts a virtual machine in a VM scale set.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> startWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.update(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates a virtual machine of a VM scale set.
  syntax:
    content: public VirtualMachineScaleSetVMInner update(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set where the extension should be create or updated.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: Describes a virtual machine scale set virtual machine.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: describes a virtual machine scale set virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters, Context context)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.update(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates a virtual machine of a VM scale set.
  syntax:
    content: public VirtualMachineScaleSetVMInner update(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set where the extension should be create or updated.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: Describes a virtual machine scale set virtual machine.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: describes a virtual machine scale set virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.updateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates a virtual machine of a VM scale set.
  syntax:
    content: public Mono<VirtualMachineScaleSetVMInner> updateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set where the extension should be create or updated.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: Describes a virtual machine scale set virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
      description: describes a virtual machine scale set virtual machine.
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  nameWithType: VirtualMachineScaleSetVMsClientImpl.updateWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
  overload: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates a virtual machine of a VM scale set.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String vmScaleSetName, String instanceId, VirtualMachineScaleSetVMInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set where the extension should be create or updated.
    - id: instanceId
      type: java.lang.String
      description: The instance ID of the virtual machine.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
      description: Describes a virtual machine scale set virtual machine.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: describes a virtual machine scale set virtual machine.
references:
- uid: com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl
  name: ComputeManagementClientImpl
  nameWithType: ComputeManagementClientImpl
  fullName: com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.VirtualMachineScaleSetVMsClientImpl*
  name: VirtualMachineScaleSetVMsClientImpl
  nameWithType: VirtualMachineScaleSetVMsClientImpl.VirtualMachineScaleSetVMsClientImpl
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.VirtualMachineScaleSetVMsClientImpl
  package: com.azure.resourcemanager.compute.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageWithResponseAsync*
  name: reimageWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAsync*
  name: beginReimageAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimageAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage*
  name: beginReimage
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimage
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimage
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync*
  name: reimageAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage*
  name: reimage
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimage
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimage
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllWithResponseAsync*
  name: reimageAllWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAllWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAllAsync*
  name: beginReimageAllAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimageAllAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAllAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll*
  name: beginReimageAll
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginReimageAll
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginReimageAll
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllAsync*
  name: reimageAllAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAllAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAllAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll*
  name: reimageAll
  nameWithType: VirtualMachineScaleSetVMsClientImpl.reimageAll
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.reimageAll
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateWithResponseAsync*
  name: deallocateWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deallocateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocateAsync*
  name: beginDeallocateAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDeallocateAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocateAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate*
  name: beginDeallocate
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDeallocate
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeallocate
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateAsync*
  name: deallocateAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deallocateAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocateAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate*
  name: deallocate
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deallocate
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deallocate
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  name: VirtualMachineScaleSetVMInner
  nameWithType: VirtualMachineScaleSetVMInner
  fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginUpdateAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdateAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate*
  name: beginUpdate
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginUpdate
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginUpdate
  package: com.azure.resourcemanager.compute.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateAsync*
  name: updateAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.updateAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.updateAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update*
  name: update
  nameWithType: VirtualMachineScaleSetVMsClientImpl.update
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.update
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDeleteAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDeleteAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete*
  name: beginDelete
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginDelete
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginDelete
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.deleteAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete*
  name: delete
  nameWithType: VirtualMachineScaleSetVMsClientImpl.delete
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.delete
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.models.InstanceViewTypes
  name: InstanceViewTypes
  nameWithType: InstanceViewTypes
  fullName: com.azure.resourcemanager.compute.models.InstanceViewTypes
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync*
  name: getAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.get*
  name: get
  nameWithType: VirtualMachineScaleSetVMsClientImpl.get
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.get
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getWithResponse
  package: com.azure.resourcemanager.compute.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
    name: VirtualMachineScaleSetVMInstanceViewInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponseAsync*
  name: getInstanceViewWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
    name: VirtualMachineScaleSetVMInstanceViewInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewAsync*
  name: getInstanceViewAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getInstanceViewAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
  name: VirtualMachineScaleSetVMInstanceViewInner
  nameWithType: VirtualMachineScaleSetVMInstanceViewInner
  fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceView*
  name: getInstanceView
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getInstanceView
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceView
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
    name: VirtualMachineScaleSetVMInstanceViewInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInstanceViewInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponse*
  name: getInstanceViewWithResponse
  nameWithType: VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponse
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.getInstanceViewWithResponse
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync*
  name: listAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.listAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.listAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
    name: VirtualMachineScaleSetVMInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list*
  name: list
  nameWithType: VirtualMachineScaleSetVMsClientImpl.list
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.list
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffWithResponseAsync*
  name: powerOffWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOffWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOffAsync*
  name: beginPowerOffAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPowerOffAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOffAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff*
  name: beginPowerOff
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPowerOff
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPowerOff
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync*
  name: powerOffAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOffAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOffAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff*
  name: powerOff
  nameWithType: VirtualMachineScaleSetVMsClientImpl.powerOff
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.powerOff
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartWithResponseAsync*
  name: restartWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.restartWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestartAsync*
  name: beginRestartAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRestartAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestartAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart*
  name: beginRestart
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRestart
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRestart
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartAsync*
  name: restartAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.restartAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restartAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart*
  name: restart
  nameWithType: VirtualMachineScaleSetVMsClientImpl.restart
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.restart
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startWithResponseAsync*
  name: startWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.startWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStartAsync*
  name: beginStartAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginStartAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStartAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart*
  name: beginStart
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginStart
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginStart
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startAsync*
  name: startAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.startAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.startAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start*
  name: start
  nameWithType: VirtualMachineScaleSetVMsClientImpl.start
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.start
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployWithResponseAsync*
  name: redeployWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.redeployWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeployAsync*
  name: beginRedeployAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRedeployAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeployAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy*
  name: beginRedeploy
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRedeploy
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRedeploy
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployAsync*
  name: redeployAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.redeployAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeployAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy*
  name: redeploy
  nameWithType: VirtualMachineScaleSetVMsClientImpl.redeploy
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.redeploy
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceWithResponseAsync*
  name: performMaintenanceWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.performMaintenanceWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenanceAsync*
  name: beginPerformMaintenanceAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenanceAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenanceAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance*
  name: beginPerformMaintenance
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginPerformMaintenance
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceAsync*
  name: performMaintenanceAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.performMaintenanceAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenanceAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance*
  name: performMaintenance
  nameWithType: VirtualMachineScaleSetVMsClientImpl.performMaintenance
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.performMaintenance
  package: com.azure.resourcemanager.compute.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponseAsync*
  name: simulateEvictionWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionAsync*
  name: simulateEvictionAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.simulateEvictionAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEviction*
  name: simulateEviction
  nameWithType: VirtualMachineScaleSetVMsClientImpl.simulateEviction
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEviction
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponse*
  name: simulateEvictionWithResponse
  nameWithType: VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponse
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.simulateEvictionWithResponse
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.models.RunCommandInput
  name: RunCommandInput
  nameWithType: RunCommandInput
  fullName: com.azure.resourcemanager.compute.models.RunCommandInput
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandWithResponseAsync*
  name: runCommandWithResponseAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.runCommandWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>,com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
    name: RunCommandResultInner
    fullName: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
    name: RunCommandResultInner
    fullName: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommandAsync*
  name: beginRunCommandAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRunCommandAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommandAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>,com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
    name: RunCommandResultInner
    fullName: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
    name: RunCommandResultInner
    fullName: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand*
  name: beginRunCommand
  nameWithType: VirtualMachineScaleSetVMsClientImpl.beginRunCommand
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.beginRunCommand
  package: com.azure.resourcemanager.compute.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
    name: RunCommandResultInner
    fullName: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandAsync*
  name: runCommandAsync
  nameWithType: VirtualMachineScaleSetVMsClientImpl.runCommandAsync
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommandAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
  name: RunCommandResultInner
  nameWithType: RunCommandResultInner
  fullName: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
- uid: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand*
  name: runCommand
  nameWithType: VirtualMachineScaleSetVMsClientImpl.runCommand
  fullName: com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetVMsClientImpl.runCommand
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient
  name: VirtualMachineScaleSetVMsClient
  nameWithType: VirtualMachineScaleSetVMsClient
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
  name: VirtualMachineScaleSetVMInner>,VirtualMachineScaleSetVMInner
  nameWithType: VirtualMachineScaleSetVMInner>,VirtualMachineScaleSetVMInner
  fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetVMInner
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>,com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
  name: RunCommandResultInner>,RunCommandResultInner
  nameWithType: RunCommandResultInner>,RunCommandResultInner
  fullName: com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner>,com.azure.resourcemanager.compute.fluent.models.RunCommandResultInner
