### YamlMime:JavaMember
nameWithType: AuthenticationContext.acquireTokenSilentAsyncWithAssertion
type: method
members:
- fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
  name: acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
  parameters:
  - description: <p>the actual saml assertion </p>
    name: assertion
    type: <xref href="%40NonNull+final+String?alt=%40NonNull+final+String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>version of saml assertion being used </p>
    name: assertionType
    type: <xref href="%40NonNull+final+String?alt=%40NonNull+final+String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>required resource identifier. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>required client identifier. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>UserID obtained from <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="#getUserInfo()"></xref></p>
    name: userId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
    name: callback
    type: <xref href="com.microsoft.aad.adal.AuthenticationCallback?alt=com.microsoft.aad.adal.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.aad.adal.AuthenticationResult?alt=com.microsoft.aad.adal.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>This function tries to acquire token silently. It will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. If both RT and AT are not present, then it will use the provided assertion and its type to acquire the same. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>

    <p></p>
  syntax: public void acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
  uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion(@NonNull final String,@NonNull final String,final String,final String,final String,AuthenticationCallback<AuthenticationResult>)
uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion*
fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion
name: acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
package: com.microsoft.aad.adal
metadata: {}
