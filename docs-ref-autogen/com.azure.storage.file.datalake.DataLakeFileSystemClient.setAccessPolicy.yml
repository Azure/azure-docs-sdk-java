### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient.setAccessPolicy*"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient.setAccessPolicy"
name: "setAccessPolicy"
nameWithType: "DataLakeFileSystemClient.setAccessPolicy"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient.setAccessPolicy(com.azure.storage.file.datalake.models.PublicAccessType,java.util.List<com.azure.storage.file.datalake.models.DataLakeSignedIdentifier>)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient.setAccessPolicy(PublicAccessType accessType, List<DataLakeSignedIdentifier> identifiers)"
  name: "setAccessPolicy(PublicAccessType accessType, List<DataLakeSignedIdentifier> identifiers)"
  nameWithType: "DataLakeFileSystemClient.setAccessPolicy(PublicAccessType accessType, List<DataLakeSignedIdentifier> identifiers)"
  summary: "Sets the file system's permissions. The permissions indicate whether paths in a file system may be accessed publicly. Note that, for each signed identifier, we will truncate the start and expiry times to the nearest second to ensure the time formatting is compatible with the service. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nDataLakeSignedIdentifier identifier = new DataLakeSignedIdentifier()\n     .setId(\"name\")\n     .setAccessPolicy(new DataLakeAccessPolicy()\n         .setStartsOn(OffsetDateTime.now())\n         .setExpiresOn(OffsetDateTime.now().plusDays(7))\n         .setPermissions(\"permissionString\"));\n \n try {\n     client.setAccessPolicy(PublicAccessType.CONTAINER, Collections.singletonList(identifier));\n     System.out.printf(\"Set Access Policy completed %n\");\n } catch (UnsupportedOperationException error) {\n     System.out.printf(\"Set Access Policy completed %s%n\", error);\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-container-acl"
  parameters:
  - description: "Specifies how the data in this file system is available to the public. See the\n x-ms-blob-public-access header in the Azure Docs for more information. Pass null for no public access."
    name: "accessType"
    type: "<xref href=\"com.azure.storage.file.datalake.models.PublicAccessType?alt=com.azure.storage.file.datalake.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
  - description: "A list of <xref uid=\"com.azure.storage.file.datalake.models.DataLakeSignedIdentifier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeSignedIdentifier\"></xref> objects that specify the permissions for the file\n system.\n Please see\n <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\">here</a>\n for more information. Passing null will clear all access policies."
    name: "identifiers"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.DataLakeSignedIdentifier?alt=com.azure.storage.file.datalake.models.DataLakeSignedIdentifier&text=DataLakeSignedIdentifier\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setAccessPolicy(PublicAccessType accessType, List<DataLakeSignedIdentifier> identifiers)"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.4.0
