### YamlMime:JavaMember
uid: "com.azure.communication.chat.implementation.ChatThreadsImpl.listChatReadReceiptsSinglePageAsync*"
fullName: "com.azure.communication.chat.implementation.ChatThreadsImpl.listChatReadReceiptsSinglePageAsync"
name: "listChatReadReceiptsSinglePageAsync"
nameWithType: "ChatThreadsImpl.listChatReadReceiptsSinglePageAsync"
members:
- uid: "com.azure.communication.chat.implementation.ChatThreadsImpl.listChatReadReceiptsSinglePageAsync(java.lang.String,java.lang.Integer,java.lang.Integer)"
  fullName: "com.azure.communication.chat.implementation.ChatThreadsImpl.listChatReadReceiptsSinglePageAsync(String chatThreadId, Integer maxPageSize, Integer skip)"
  name: "listChatReadReceiptsSinglePageAsync(String chatThreadId, Integer maxPageSize, Integer skip)"
  nameWithType: "ChatThreadsImpl.listChatReadReceiptsSinglePageAsync(String chatThreadId, Integer maxPageSize, Integer skip)"
  summary: "Gets chat message read receipts for a thread."
  parameters:
  - description: "Thread id to get the chat message read receipts for."
    name: "chatThreadId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum number of chat message read receipts to be returned per page."
    name: "maxPageSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skips chat message read receipts up to a specified position in response."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PagedResponse<ChatMessageReadReceipt>> listChatReadReceiptsSinglePageAsync(String chatThreadId, Integer maxPageSize, Integer skip)"
  returns:
    description: "chat message read receipts for a thread."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.chat.implementation.models.ChatMessageReadReceipt?alt=com.azure.communication.chat.implementation.models.ChatMessageReadReceipt&text=ChatMessageReadReceipt\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.chat.implementation.ChatThreadsImpl.listChatReadReceiptsSinglePageAsync(java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.communication.chat.implementation.ChatThreadsImpl.listChatReadReceiptsSinglePageAsync(String chatThreadId, Integer maxPageSize, Integer skip, Context context)"
  name: "listChatReadReceiptsSinglePageAsync(String chatThreadId, Integer maxPageSize, Integer skip, Context context)"
  nameWithType: "ChatThreadsImpl.listChatReadReceiptsSinglePageAsync(String chatThreadId, Integer maxPageSize, Integer skip, Context context)"
  summary: "Gets chat message read receipts for a thread."
  parameters:
  - description: "Thread id to get the chat message read receipts for."
    name: "chatThreadId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum number of chat message read receipts to be returned per page."
    name: "maxPageSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skips chat message read receipts up to a specified position in response."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PagedResponse<ChatMessageReadReceipt>> listChatReadReceiptsSinglePageAsync(String chatThreadId, Integer maxPageSize, Integer skip, Context context)"
  returns:
    description: "chat message read receipts for a thread."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.chat.implementation.models.ChatMessageReadReceipt?alt=com.azure.communication.chat.implementation.models.ChatMessageReadReceipt&text=ChatMessageReadReceipt\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.communication.chat.implementation"
artifact: com.azure:azure-communication-chat:1.0.0
