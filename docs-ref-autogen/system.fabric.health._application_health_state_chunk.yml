items:
- uid: system.fabric.health._application_health_state_chunk
  id: _application_health_state_chunk
  parent: system.fabric.health
  children:
  - system.fabric.health._application_health_state_chunk.getApplicationName()
  - system.fabric.health._application_health_state_chunk.getApplicationTypeName()
  - system.fabric.health._application_health_state_chunk.getDeployedApplicationHealthStateChunks()
  - system.fabric.health._application_health_state_chunk.getHealthState()
  - system.fabric.health._application_health_state_chunk.getServiceHealthStateChunks()
  - system.fabric.health._application_health_state_chunk.toString()
  href: system.fabric.health._application_health_state_chunk.yml
  langs:
  - java
  name: ApplicationHealthStateChunk
  nameWithType: ApplicationHealthStateChunk
  fullName: system.fabric.health.ApplicationHealthStateChunk
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
    startLine: 8
  package: system.fabric.health
  summary: <p>Represents an application health state chunk, which contains basic health information about the application. </p>
  syntax:
    content: public class ApplicationHealthStateChunk
  inheritance:
  - java.lang.Object
- uid: system.fabric.health._application_health_state_chunk.getApplicationName()
  id: getApplicationName()
  parent: system.fabric.health._application_health_state_chunk
  href: system.fabric.health._application_health_state_chunk.yml
  langs:
  - java
  name: getApplicationName()
  nameWithType: ApplicationHealthStateChunk.getApplicationName()
  fullName: URI system.fabric.health.ApplicationHealthStateChunk.getApplicationName()
  overload: system.fabric.health._application_health_state_chunk.getApplicationName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
    startLine: 84
  package: system.fabric.health
  summary: >-
    <p>Gets the application name.</p>

    <p></p>
  syntax:
    content: public URI getApplicationName()
    return:
      type: "62304784"
      description: <p>The application name. </p>
- uid: system.fabric.health._application_health_state_chunk.getApplicationTypeName()
  id: getApplicationTypeName()
  parent: system.fabric.health._application_health_state_chunk
  href: system.fabric.health._application_health_state_chunk.yml
  langs:
  - java
  name: getApplicationTypeName()
  nameWithType: ApplicationHealthStateChunk.getApplicationTypeName()
  fullName: String system.fabric.health.ApplicationHealthStateChunk.getApplicationTypeName()
  overload: system.fabric.health._application_health_state_chunk.getApplicationTypeName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
    startLine: 75
  package: system.fabric.health
  summary: >-
    <p>Gets the application type name.</p>

    <p></p>
  syntax:
    content: public String getApplicationTypeName()
    return:
      type: "26831127"
      description: <p>The application type name. </p>
- uid: system.fabric.health._application_health_state_chunk.getDeployedApplicationHealthStateChunks()
  id: getDeployedApplicationHealthStateChunks()
  parent: system.fabric.health._application_health_state_chunk
  href: system.fabric.health._application_health_state_chunk.yml
  langs:
  - java
  name: getDeployedApplicationHealthStateChunks()
  nameWithType: ApplicationHealthStateChunk.getDeployedApplicationHealthStateChunks()
  fullName: DeployedApplicationHealthStateChunkList system.fabric.health.ApplicationHealthStateChunk.getDeployedApplicationHealthStateChunks()
  overload: system.fabric.health._application_health_state_chunk.getDeployedApplicationHealthStateChunks*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
    startLine: 41
  package: system.fabric.health
  summary: >-
    <p>Gets the list of the deployed application health state chunks that respect the input filters.</p>

    <p>

      <bold>Remarks:</bold> By default, no children are included in results. Users can request to include some children based on desired health or other information. For example, users can request to include all deployed applications that have health state error. Regardless of filter value, all children are used to compute application aggregated health. </p>
  syntax:
    content: public DeployedApplicationHealthStateChunkList getDeployedApplicationHealthStateChunks()
    return:
      type: system.fabric.health._deployed_application_health_state_chunk_list
      description: <p>The list of the deployed application health state chunks that respect the input filters. </p>
- uid: system.fabric.health._application_health_state_chunk.getHealthState()
  id: getHealthState()
  parent: system.fabric.health._application_health_state_chunk
  href: system.fabric.health._application_health_state_chunk.yml
  langs:
  - java
  name: getHealthState()
  nameWithType: ApplicationHealthStateChunk.getHealthState()
  fullName: HealthState system.fabric.health.ApplicationHealthStateChunk.getHealthState()
  overload: system.fabric.health._application_health_state_chunk.getHealthState*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
    startLine: 66
  package: system.fabric.health
  summary: >-
    <p>Gets the application aggregated health state, computed based on all reported health events, the children and the application health policy.</p>

    <p></p>
  syntax:
    content: public HealthState getHealthState()
    return:
      type: system.fabric.health._health_state
      description: <p>The application aggregated health state. </p>
- uid: system.fabric.health._application_health_state_chunk.getServiceHealthStateChunks()
  id: getServiceHealthStateChunks()
  parent: system.fabric.health._application_health_state_chunk
  href: system.fabric.health._application_health_state_chunk.yml
  langs:
  - java
  name: getServiceHealthStateChunks()
  nameWithType: ApplicationHealthStateChunk.getServiceHealthStateChunks()
  fullName: ServiceHealthStateChunkList system.fabric.health.ApplicationHealthStateChunk.getServiceHealthStateChunks()
  overload: system.fabric.health._application_health_state_chunk.getServiceHealthStateChunks*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
    startLine: 56
  package: system.fabric.health
  summary: >-
    <p>Gets the list of the service health state chunks that respect the input filters.</p>

    <p>

      <bold>Remarks:</bold> By default, no children are included in results. Users can request to include some children based on desired health or other information. For example, users can request to include all services that have health state error. Regardless of filter value, all children are used to compute application aggregated health. </p>
  syntax:
    content: public ServiceHealthStateChunkList getServiceHealthStateChunks()
    return:
      type: system.fabric.health._service_health_state_chunk_list
      description: <p>The list of the service health state chunks that respect the input filters. </p>
- uid: system.fabric.health._application_health_state_chunk.toString()
  id: toString()
  parent: system.fabric.health._application_health_state_chunk
  href: system.fabric.health._application_health_state_chunk.yml
  langs:
  - java
  name: toString()
  nameWithType: ApplicationHealthStateChunk.toString()
  fullName: String system.fabric.health.ApplicationHealthStateChunk.toString()
  overload: system.fabric.health._application_health_state_chunk.toString*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
    startLine: 89
  package: system.fabric.health
  syntax:
    content: public String toString()
    return:
      type: "26831127"
references:
- uid: system.fabric.health._application_health_state_chunk.getDeployedApplicationHealthStateChunks*
  name: getDeployedApplicationHealthStateChunks
  nameWithType: ApplicationHealthStateChunk.getDeployedApplicationHealthStateChunks
  fullName: DeployedApplicationHealthStateChunkList system.fabric.health.ApplicationHealthStateChunk.getDeployedApplicationHealthStateChunks
  package: system.fabric.health
- uid: system.fabric.health._application_health_state_chunk.getServiceHealthStateChunks*
  name: getServiceHealthStateChunks
  nameWithType: ApplicationHealthStateChunk.getServiceHealthStateChunks
  fullName: ServiceHealthStateChunkList system.fabric.health.ApplicationHealthStateChunk.getServiceHealthStateChunks
  package: system.fabric.health
- uid: system.fabric.health._application_health_state_chunk.getHealthState*
  name: getHealthState
  nameWithType: ApplicationHealthStateChunk.getHealthState
  fullName: HealthState system.fabric.health.ApplicationHealthStateChunk.getHealthState
  package: system.fabric.health
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: system.fabric.health._application_health_state_chunk.getApplicationTypeName*
  name: getApplicationTypeName
  nameWithType: ApplicationHealthStateChunk.getApplicationTypeName
  fullName: String system.fabric.health.ApplicationHealthStateChunk.getApplicationTypeName
  package: system.fabric.health
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: system.fabric.health._application_health_state_chunk.getApplicationName*
  name: getApplicationName
  nameWithType: ApplicationHealthStateChunk.getApplicationName
  fullName: URI system.fabric.health.ApplicationHealthStateChunk.getApplicationName
  package: system.fabric.health
- uid: system.fabric.health._application_health_state_chunk.toString*
  name: toString
  nameWithType: ApplicationHealthStateChunk.toString
  fullName: String system.fabric.health.ApplicationHealthStateChunk.toString
  package: system.fabric.health
- uid: system.fabric.health._health_state
  parent: system.fabric.health
  href: system.fabric.health._health_state.yml
  name: HealthState
  nameWithType: HealthState
  fullName: system.fabric.health.HealthState
  type: Enum
  syntax:
    content: public enum HealthState
- uid: system.fabric.health._service_health_state_chunk_list
  parent: system.fabric.health
  href: system.fabric.health._service_health_state_chunk_list.yml
  name: ServiceHealthStateChunkList
  nameWithType: ServiceHealthStateChunkList
  fullName: system.fabric.health.ServiceHealthStateChunkList
  type: Class
  summary: >-
    <p>Represents a list that contains <xref href="system.fabric.health._service_health_state_chunk" data-throw-if-not-resolved="false"></xref> items. </p>

    <p>

      <bold>Remarks:</bold>The list can be obtained through health state chunk queries. The queries may have as result more chunks that can fit a message. In this case, the list of items that fit the message is returned plus a count that shows how many total items are available. </p>
  syntax:
    content: public class ServiceHealthStateChunkList
- uid: system.fabric.health._deployed_application_health_state_chunk_list
  parent: system.fabric.health
  href: system.fabric.health._deployed_application_health_state_chunk_list.yml
  name: DeployedApplicationHealthStateChunkList
  nameWithType: DeployedApplicationHealthStateChunkList
  fullName: system.fabric.health.DeployedApplicationHealthStateChunkList
  type: Class
  summary: >-
    <p>Represents a list that contains <xref href="system.fabric.health._deployed_application_health_state_chunk" data-throw-if-not-resolved="false"></xref> items. </p>

    <p>

      <bold>Remarks:</bold>The list can be obtained through health state chunk queries. The queries may have as result more chunks that can fit a message. In this case, the list of items that fit the message is returned plus a count that shows how many total items are available. </p>
  syntax:
    content: public class DeployedApplicationHealthStateChunkList
