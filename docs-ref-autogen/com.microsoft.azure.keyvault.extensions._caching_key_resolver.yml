### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.keyvault.extensions._caching_key_resolver
  id: _caching_key_resolver
  parent: com.microsoft.azure.keyvault.extensions
  children:
  - com.microsoft.azure.keyvault.extensions._caching_key_resolver.CachingKeyResolver(int,final IKeyResolver)
  - com.microsoft.azure.keyvault.extensions._caching_key_resolver.resolveKeyAsync(String)
  href: com.microsoft.azure.keyvault.extensions._caching_key_resolver.yml
  langs:
  - java
  name: CachingKeyResolver
  nameWithType: CachingKeyResolver
  fullName: com.microsoft.azure.keyvault.extensions.CachingKeyResolver
  type: Class
  source:
    remote: &o0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/CachingKeyResolver.java
      branch: bb950b2a0255c017040501de0c19e4849361ca1d
      repo: https://github.com/Azure/azure-keyvault-java
    path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/CachingKeyResolver.java
    startLine: 30
  package: com.microsoft.azure.keyvault.extensions
  summary: <p>The key resolver that caches the key after resolving to <xref uid="" data-throw-if-not-resolved="false">IKey</xref>. </p>
  syntax:
    content: public class CachingKeyResolver implements IKeyResolver
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.keyvault.core._i_key_resolver
- uid: com.microsoft.azure.keyvault.extensions._caching_key_resolver.CachingKeyResolver(int,final IKeyResolver)
  id: CachingKeyResolver(int,final IKeyResolver)
  parent: com.microsoft.azure.keyvault.extensions._caching_key_resolver
  href: com.microsoft.azure.keyvault.extensions._caching_key_resolver.yml
  langs:
  - java
  name: CachingKeyResolver(int capacity, final IKeyResolver keyResolver)
  nameWithType: CachingKeyResolver.CachingKeyResolver(int capacity, final IKeyResolver keyResolver)
  fullName: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.CachingKeyResolver(int capacity, final IKeyResolver keyResolver)
  overload: com.microsoft.azure.keyvault.extensions._caching_key_resolver.CachingKeyResolver*
  type: Constructor
  source:
    remote: *o0
    path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/CachingKeyResolver.java
    startLine: 39
  package: com.microsoft.azure.keyvault.extensions
  summary: <p>Constructor. </p>
  syntax:
    content: public CachingKeyResolver(int capacity, final IKeyResolver keyResolver)
    parameters:
    - id: capacity
      type: f75371fa
      description: <p>the cache size </p>
    - id: keyResolver
      type: 93de0ef9com.microsoft.azure.keyvault.core._i_key_resolver
      description: <p>the key resolver </p>
- uid: com.microsoft.azure.keyvault.extensions._caching_key_resolver.resolveKeyAsync(String)
  id: resolveKeyAsync(String)
  parent: com.microsoft.azure.keyvault.extensions._caching_key_resolver
  href: com.microsoft.azure.keyvault.extensions._caching_key_resolver.yml
  langs:
  - java
  name: resolveKeyAsync(String kid)
  nameWithType: CachingKeyResolver.resolveKeyAsync(String kid)
  fullName: ListenableFuture<IKey> com.microsoft.azure.keyvault.extensions.CachingKeyResolver.resolveKeyAsync(String kid)
  overload: com.microsoft.azure.keyvault.extensions._caching_key_resolver.resolveKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/CachingKeyResolver.java
    startLine: 50
  package: com.microsoft.azure.keyvault.extensions
  summary: >-
    <p>Retrieves an IKey implementation for the specified key identifier. Implementations should check the format of the kid to ensure that it is recognized. Null, rather than an exception, should be returned for unrecognized key identifiers to enable chaining of key resolvers.</p>

    <p></p>
  syntax:
    content: public ListenableFuture<IKey> resolveKeyAsync(String kid)
    parameters:
    - id: kid
      type: "26831127"
      description: <p>The key identifier to resolve. </p>
    return:
      type: 76185cf1com.microsoft.azure.keyvault.core._i_keya08ddfce
      description: <p>A ListenableFuture containing the resolved IKey </p>
  overridden: com.microsoft.azure.keyvault.core._i_key_resolver.resolveKeyAsync(String)
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 93de0ef9com.microsoft.azure.keyvault.core._i_key_resolver
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.keyvault.core._i_key_resolver
    name: IKeyResolver
    fullName: com.microsoft.azure.keyvault.core.IKeyResolver
    href: com.microsoft.azure.keyvault.core._i_key_resolver.yml
- uid: com.microsoft.azure.keyvault.extensions._caching_key_resolver.CachingKeyResolver*
  name: CachingKeyResolver
  nameWithType: CachingKeyResolver.CachingKeyResolver
  fullName: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.CachingKeyResolver
  package: com.microsoft.azure.keyvault.extensions
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 76185cf1com.microsoft.azure.keyvault.core._i_keya08ddfce
  spec.java:
  - name: ListenableFuture<
    fullName: ListenableFuture<
  - uid: com.microsoft.azure.keyvault.core._i_key
    name: IKey
    fullName: com.microsoft.azure.keyvault.core.IKey
    href: com.microsoft.azure.keyvault.core._i_key.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.extensions._caching_key_resolver.resolveKeyAsync*
  name: resolveKeyAsync
  nameWithType: CachingKeyResolver.resolveKeyAsync
  fullName: ListenableFuture<IKey> com.microsoft.azure.keyvault.extensions.CachingKeyResolver.resolveKeyAsync
  package: com.microsoft.azure.keyvault.extensions
- uid: com.microsoft.azure.keyvault.core._i_key_resolver
  parent: com.microsoft.azure.keyvault.core
  href: com.microsoft.azure.keyvault.core._i_key_resolver.yml
  name: IKeyResolver
  nameWithType: IKeyResolver
  fullName: com.microsoft.azure.keyvault.core.IKeyResolver
  type: Interface
  summary: <p>Interface for representing key resolving operations with the Microsoft Azure Key Vault libraries. </p>
  syntax:
    content: public interface IKeyResolver
- uid: com.microsoft.azure.keyvault.core._i_key
  parent: com.microsoft.azure.keyvault.core
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: IKey
  nameWithType: IKey
  fullName: com.microsoft.azure.keyvault.core.IKey
  type: Interface
  summary: <p>Interface for representing cryptographic keys with the Microsoft Azure Key Vault libraries. </p>
  syntax:
    content: public interface IKey
- uid: com.microsoft.azure.keyvault.core._i_key_resolver.resolveKeyAsync(String)
  parent: com.microsoft.azure.keyvault.core._i_key_resolver
  href: com.microsoft.azure.keyvault.core._i_key_resolver.yml
  name: resolveKeyAsync(String kid)
  nameWithType: IKeyResolver.resolveKeyAsync(String kid)
  fullName: ListenableFuture<IKey> com.microsoft.azure.keyvault.core.IKeyResolver.resolveKeyAsync(String kid)
  type: Method
  summary: >-
    <p>Retrieves an <xref uid="com.microsoft.azure.keyvault.core._i_key" data-throw-if-not-resolved="false">IKey</xref> implementation for the specified key identifier. Implementations should check the format of the kid to ensure that it is recognized. Null, rather than an exception, should be returned for unrecognized key identifiers to enable chaining of key resolvers.</p>

    <p></p>
  syntax:
    content: public ListenableFuture<IKey> resolveKeyAsync(String kid)
    parameters:
    - id: kid
      type: "26831127"
      description: <p>The key identifier to resolve. </p>
    return:
      type: 76185cf1com.microsoft.azure.keyvault.core._i_keya08ddfce
      description: <p>A ListenableFuture containing the resolved <xref uid="com.microsoft.azure.keyvault.core._i_key" data-throw-if-not-resolved="false">IKey</xref></p>
