### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem"
  id: "RetriableWorkItem"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,java.time.Duration)"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.getEncodedMessageSize()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.getLastKnownException()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.getMessage()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.getMessageFormat()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.getSink()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.getTimeoutTracker()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.hasBeenRetried()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.incrementRetryAttempts()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.isWaitingForAck()"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.setLastKnownException(java.lang.Exception)"
  - "com.azure.core.amqp.implementation.RetriableWorkItem.setWaitingForAck()"
  langs:
  - "java"
  name: "RetriableWorkItem"
  nameWithType: "RetriableWorkItem"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  summary: "Represents a work item that can be scheduled multiple times."
  syntax:
    content: " class RetriableWorkItem"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,com.azure.core.amqp.implementation.TimeoutTracker)"
  id: "RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,com.azure.core.amqp.implementation.TimeoutTracker)"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, TimeoutTracker timeout)"
  nameWithType: "RetriableWorkItem.RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, TimeoutTracker timeout)"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, TimeoutTracker timeout)"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "private RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, TimeoutTracker timeout)"
    parameters:
    - id: "amqpMessage"
      type: "byte[]"
    - id: "encodedMessageSize"
      type: "int"
    - id: "messageFormat"
      type: "int"
    - id: "monoSink"
      type: "reactor.core.publisher.MonoSink<java.lang.Void>"
    - id: "timeout"
      type: "com.azure.core.amqp.implementation.TimeoutTracker"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,java.time.Duration)"
  id: "RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,java.time.Duration)"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, Duration timeout)"
  nameWithType: "RetriableWorkItem.RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, Duration timeout)"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, Duration timeout)"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, Duration timeout)"
    parameters:
    - id: "amqpMessage"
      type: "byte[]"
    - id: "encodedMessageSize"
      type: "int"
    - id: "messageFormat"
      type: "int"
    - id: "monoSink"
      type: "reactor.core.publisher.MonoSink<java.lang.Void>"
    - id: "timeout"
      type: "java.time.Duration"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getEncodedMessageSize()"
  id: "getEncodedMessageSize()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "getEncodedMessageSize()"
  nameWithType: "RetriableWorkItem.getEncodedMessageSize()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getEncodedMessageSize()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.getEncodedMessageSize*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " int getEncodedMessageSize()"
    return:
      type: "int"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getLastKnownException()"
  id: "getLastKnownException()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "getLastKnownException()"
  nameWithType: "RetriableWorkItem.getLastKnownException()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getLastKnownException()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.getLastKnownException*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " Exception getLastKnownException()"
    return:
      type: "java.lang.Exception"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessage()"
  id: "getMessage()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "getMessage()"
  nameWithType: "RetriableWorkItem.getMessage()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessage()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessage*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " byte[] getMessage()"
    return:
      type: "byte[]"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessageFormat()"
  id: "getMessageFormat()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "getMessageFormat()"
  nameWithType: "RetriableWorkItem.getMessageFormat()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessageFormat()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessageFormat*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " int getMessageFormat()"
    return:
      type: "int"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getSink()"
  id: "getSink()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "getSink()"
  nameWithType: "RetriableWorkItem.getSink()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getSink()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.getSink*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " MonoSink<Void> getSink()"
    return:
      type: "reactor.core.publisher.MonoSink<java.lang.Void>"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getTimeoutTracker()"
  id: "getTimeoutTracker()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "getTimeoutTracker()"
  nameWithType: "RetriableWorkItem.getTimeoutTracker()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getTimeoutTracker()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.getTimeoutTracker*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " TimeoutTracker getTimeoutTracker()"
    return:
      type: "com.azure.core.amqp.implementation.TimeoutTracker"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.hasBeenRetried()"
  id: "hasBeenRetried()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "hasBeenRetried()"
  nameWithType: "RetriableWorkItem.hasBeenRetried()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.hasBeenRetried()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.hasBeenRetried*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " boolean hasBeenRetried()"
    return:
      type: "boolean"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.incrementRetryAttempts()"
  id: "incrementRetryAttempts()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "incrementRetryAttempts()"
  nameWithType: "RetriableWorkItem.incrementRetryAttempts()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.incrementRetryAttempts()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.incrementRetryAttempts*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " int incrementRetryAttempts()"
    return:
      type: "int"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.isWaitingForAck()"
  id: "isWaitingForAck()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "isWaitingForAck()"
  nameWithType: "RetriableWorkItem.isWaitingForAck()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.isWaitingForAck()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.isWaitingForAck*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " boolean isWaitingForAck()"
    return:
      type: "boolean"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.setLastKnownException(java.lang.Exception)"
  id: "setLastKnownException(java.lang.Exception)"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "setLastKnownException(Exception exception)"
  nameWithType: "RetriableWorkItem.setLastKnownException(Exception exception)"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.setLastKnownException(Exception exception)"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.setLastKnownException*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " void setLastKnownException(Exception exception)"
    parameters:
    - id: "exception"
      type: "java.lang.Exception"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.setWaitingForAck()"
  id: "setWaitingForAck()"
  parent: "com.azure.core.amqp.implementation.RetriableWorkItem"
  langs:
  - "java"
  name: "setWaitingForAck()"
  nameWithType: "RetriableWorkItem.setWaitingForAck()"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.setWaitingForAck()"
  overload: "com.azure.core.amqp.implementation.RetriableWorkItem.setWaitingForAck*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " void setWaitingForAck()"
references:
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "reactor.core.publisher.MonoSink<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.MonoSink"
    name: "MonoSink"
    fullName: "reactor.core.publisher.MonoSink"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem*"
  name: "RetriableWorkItem"
  nameWithType: "RetriableWorkItem.RetriableWorkItem"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.TimeoutTracker"
  name: "TimeoutTracker"
  nameWithType: "TimeoutTracker"
  fullName: "com.azure.core.amqp.implementation.TimeoutTracker"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessage*"
  name: "getMessage"
  nameWithType: "RetriableWorkItem.getMessage"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessage"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getTimeoutTracker*"
  name: "getTimeoutTracker"
  nameWithType: "RetriableWorkItem.getTimeoutTracker"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getTimeoutTracker"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getSink*"
  name: "getSink"
  nameWithType: "RetriableWorkItem.getSink"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getSink"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.incrementRetryAttempts*"
  name: "incrementRetryAttempts"
  nameWithType: "RetriableWorkItem.incrementRetryAttempts"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.incrementRetryAttempts"
  package: "com.azure.core.amqp.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.hasBeenRetried*"
  name: "hasBeenRetried"
  nameWithType: "RetriableWorkItem.hasBeenRetried"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.hasBeenRetried"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getEncodedMessageSize*"
  name: "getEncodedMessageSize"
  nameWithType: "RetriableWorkItem.getEncodedMessageSize"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getEncodedMessageSize"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessageFormat*"
  name: "getMessageFormat"
  nameWithType: "RetriableWorkItem.getMessageFormat"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getMessageFormat"
  package: "com.azure.core.amqp.implementation"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.getLastKnownException*"
  name: "getLastKnownException"
  nameWithType: "RetriableWorkItem.getLastKnownException"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.getLastKnownException"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.setLastKnownException*"
  name: "setLastKnownException"
  nameWithType: "RetriableWorkItem.setLastKnownException"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.setLastKnownException"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.setWaitingForAck*"
  name: "setWaitingForAck"
  nameWithType: "RetriableWorkItem.setWaitingForAck"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.setWaitingForAck"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.RetriableWorkItem.isWaitingForAck*"
  name: "isWaitingForAck"
  nameWithType: "RetriableWorkItem.isWaitingForAck"
  fullName: "com.azure.core.amqp.implementation.RetriableWorkItem.isWaitingForAck"
  package: "com.azure.core.amqp.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.MonoSink"
  name: "MonoSink"
  nameWithType: "MonoSink"
  fullName: "reactor.core.publisher.MonoSink"
