### YamlMime:JavaMember
uid: "com.azure.resourcemanager.compute.models.WinRMListener.withCertificateUrl*"
fullName: "com.azure.resourcemanager.compute.models.WinRMListener.withCertificateUrl"
name: "withCertificateUrl"
nameWithType: "WinRMListener.withCertificateUrl"
members:
- uid: "com.azure.resourcemanager.compute.models.WinRMListener.withCertificateUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.WinRMListener.withCertificateUrl(String certificateUrl)"
  name: "withCertificateUrl(String certificateUrl)"
  nameWithType: "WinRMListener.withCertificateUrl(String certificateUrl)"
  summary: "Set the certificateUrl property: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see \\[Add a key or secret to the key vault\\](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/\\#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> \\{<br> \"data\":\"<Base64-encoded-certificate>\",<br> \"dataType\":\"pfx\",<br> \"password\":\"<pfx-file-password>\"<br>\\}."
  parameters:
  - description: "the certificateUrl value to set."
    name: "certificateUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WinRMListener withCertificateUrl(String certificateUrl)"
  returns:
    description: "the WinRMListener object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.WinRMListener?alt=com.azure.resourcemanager.compute.models.WinRMListener&text=WinRMListener\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
