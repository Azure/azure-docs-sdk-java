### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithKeyVault.withExistingKeyVault(Vault vault)
  name: withExistingKeyVault(Vault vault)
  nameWithType: AppServiceCertificateOrder.DefinitionStages.WithKeyVault.withExistingKeyVault(Vault vault)
  parameters:
  - description: <p>the vault to store the private key </p>
    name: vault
    type: <xref href="com.microsoft.azure.management.keyvault.Vault?alt=com.microsoft.azure.management.keyvault.Vault&text=Vault" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithCreate&text=AppServiceCertificateOrder.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies an existing key vault to store the certificate private key.</p>

    <p>The vault MUST allow 2 service principals to read/write secrets: f3c21649-0979-4721-ac85-b0216b2cf413 and abfa0a7c-a6b6-4736-8310-5855508787cd. If they don't have access, an attempt will be made to grant access. If you are logged in from an identity without access to the Active Directory Graph, this attempt will fail.</p>

    <p></p>
  syntax: public WithCreate withExistingKeyVault(Vault vault)
  uid: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithKeyVault.withExistingKeyVault(Vault)
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithKeyVault.withNewKeyVault(String vaultName, Region region)
  name: withNewKeyVault(String vaultName, Region region)
  nameWithType: AppServiceCertificateOrder.DefinitionStages.WithKeyVault.withNewKeyVault(String vaultName, Region region)
  parameters:
  - description: <p>the name of the new key vault </p>
    name: vaultName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the region to create the vault </p>
    name: region
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithCreate&text=AppServiceCertificateOrder.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new key vault to store the certificate private key.</p>

    <p>DO NOT use this method if you are logged in from an identity without access to the Active Directory Graph.</p>

    <p></p>
  syntax: public WithCreate withNewKeyVault(String vaultName, Region region)
  uid: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithKeyVault.withNewKeyVault(String,Region)
nameWithType: AppServiceCertificateOrder.DefinitionStages.WithKeyVault
syntax: public interface WithKeyVault
type: interface
uid: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithKeyVault
fullName: com.microsoft.azure.management.appservice.AppServiceCertificateOrder.DefinitionStages.WithKeyVault
name: AppServiceCertificateOrder.DefinitionStages.WithKeyVault
package: com.microsoft.azure.management.appservice
summary: <p>An app service certificate order definition allowing more domain verification methods to be set. </p>
metadata: {}
