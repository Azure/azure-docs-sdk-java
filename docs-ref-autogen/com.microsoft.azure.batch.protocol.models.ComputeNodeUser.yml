### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  id: ComputeNodeUser
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.ComputeNodeUser()
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.expiryTime()
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.isAdmin()
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.name()
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.password()
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.sshPublicKey()
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withExpiryTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withIsAdmin(java.lang.Boolean)
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withName(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withPassword(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withSshPublicKey(java.lang.String)
  langs:
  - java
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: A user Account for RDP or SSH access on a Compute Node.
  syntax:
    content: public class ComputeNodeUser
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.ComputeNodeUser()
  id: ComputeNodeUser()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: ComputeNodeUser()
  nameWithType: ComputeNodeUser.ComputeNodeUser()
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.ComputeNodeUser()
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.ComputeNodeUser*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public ComputeNodeUser()
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.expiryTime()
  id: expiryTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: expiryTime()
  nameWithType: ComputeNodeUser.expiryTime()
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.expiryTime()
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.expiryTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day.
  syntax:
    content: public DateTime expiryTime()
    return:
      type: org.joda.time.DateTime
      description: the expiryTime value
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.isAdmin()
  id: isAdmin()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: isAdmin()
  nameWithType: ComputeNodeUser.isAdmin()
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.isAdmin()
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.isAdmin*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the default value is false.
  syntax:
    content: public Boolean isAdmin()
    return:
      type: java.lang.Boolean
      description: the isAdmin value
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.name()
  id: name()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: name()
  nameWithType: ComputeNodeUser.name()
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.name()
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.name*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the name value.
  syntax:
    content: public String name()
    return:
      type: java.lang.String
      description: the name value
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.password()
  id: password()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: password()
  nameWithType: ComputeNodeUser.password()
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.password()
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.password*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the password is required for Windows Compute Nodes (those created with 'cloudServiceConfiguration', or created with 'virtualMachineConfiguration' using a Windows Image reference). For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property.
  syntax:
    content: public String password()
    return:
      type: java.lang.String
      description: the password value
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.sshPublicKey()
  id: sshPublicKey()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: sshPublicKey()
  nameWithType: ComputeNodeUser.sshPublicKey()
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.sshPublicKey()
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.sshPublicKey*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
  syntax:
    content: public String sshPublicKey()
    return:
      type: java.lang.String
      description: the sshPublicKey value
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withExpiryTime(org.joda.time.DateTime)
  id: withExpiryTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: withExpiryTime(DateTime expiryTime)
  nameWithType: ComputeNodeUser.withExpiryTime(DateTime expiryTime)
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withExpiryTime(DateTime expiryTime)
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withExpiryTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day.
  syntax:
    content: public ComputeNodeUser withExpiryTime(DateTime expiryTime)
    parameters:
    - id: expiryTime
      type: org.joda.time.DateTime
      description: the expiryTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: the ComputeNodeUser object itself.
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withIsAdmin(java.lang.Boolean)
  id: withIsAdmin(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: withIsAdmin(Boolean isAdmin)
  nameWithType: ComputeNodeUser.withIsAdmin(Boolean isAdmin)
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withIsAdmin(Boolean isAdmin)
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withIsAdmin*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the default value is false.
  syntax:
    content: public ComputeNodeUser withIsAdmin(Boolean isAdmin)
    parameters:
    - id: isAdmin
      type: java.lang.Boolean
      description: the isAdmin value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: the ComputeNodeUser object itself.
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withName(java.lang.String)
  id: withName(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: withName(String name)
  nameWithType: ComputeNodeUser.withName(String name)
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withName(String name)
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the name value.
  syntax:
    content: public ComputeNodeUser withName(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: the ComputeNodeUser object itself.
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withPassword(java.lang.String)
  id: withPassword(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: withPassword(String password)
  nameWithType: ComputeNodeUser.withPassword(String password)
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withPassword(String password)
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withPassword*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the password is required for Windows Compute Nodes (those created with 'cloudServiceConfiguration', or created with 'virtualMachineConfiguration' using a Windows Image reference). For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property.
  syntax:
    content: public ComputeNodeUser withPassword(String password)
    parameters:
    - id: password
      type: java.lang.String
      description: the password value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: the ComputeNodeUser object itself.
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withSshPublicKey(java.lang.String)
  id: withSshPublicKey(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  langs:
  - java
  name: withSshPublicKey(String sshPublicKey)
  nameWithType: ComputeNodeUser.withSshPublicKey(String sshPublicKey)
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withSshPublicKey(String sshPublicKey)
  overload: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withSshPublicKey*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
  syntax:
    content: public ComputeNodeUser withSshPublicKey(String sshPublicKey)
    parameters:
    - id: sshPublicKey
      type: java.lang.String
      description: the sshPublicKey value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: the ComputeNodeUser object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.ComputeNodeUser*
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser.ComputeNodeUser
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.ComputeNodeUser
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.name*
  name: name
  nameWithType: ComputeNodeUser.name
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.name
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withName*
  name: withName
  nameWithType: ComputeNodeUser.withName
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withName
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.isAdmin*
  name: isAdmin
  nameWithType: ComputeNodeUser.isAdmin
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.isAdmin
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withIsAdmin*
  name: withIsAdmin
  nameWithType: ComputeNodeUser.withIsAdmin
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withIsAdmin
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.DateTime
  spec.java:
  - uid: org.joda.time.DateTime
    name: DateTime
    fullName: org.joda.time.DateTime
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.expiryTime*
  name: expiryTime
  nameWithType: ComputeNodeUser.expiryTime
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.expiryTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withExpiryTime*
  name: withExpiryTime
  nameWithType: ComputeNodeUser.withExpiryTime
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withExpiryTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.password*
  name: password
  nameWithType: ComputeNodeUser.password
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.password
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withPassword*
  name: withPassword
  nameWithType: ComputeNodeUser.withPassword
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withPassword
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.sshPublicKey*
  name: sshPublicKey
  nameWithType: ComputeNodeUser.sshPublicKey
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.sshPublicKey
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withSshPublicKey*
  name: withSshPublicKey
  nameWithType: ComputeNodeUser.withSshPublicKey
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.withSshPublicKey
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
