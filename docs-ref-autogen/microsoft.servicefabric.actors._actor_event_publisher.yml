### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors._actor_event_publisher
  id: _actor_event_publisher
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_event_publisher.subscribeAsync(ActorEvents)
  - microsoft.servicefabric.actors._actor_event_publisher.unsubscribeAsync(ActorEvents)
  href: microsoft.servicefabric.actors._actor_event_publisher.yml
  langs:
  - java
  name: ActorEventPublisher<TActorEvents>
  nameWithType: ActorEventPublisher<TActorEvents>
  fullName: microsoft.servicefabric.actors.ActorEventPublisher<TActorEvents>
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorEventPublisher.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorEventPublisher.java
    startLine: 10
  package: microsoft.servicefabric.actors
  summary: "<p>Represents publisher of actor events. Publishers of actor events must implement this interface</p>\r\n<p></p>"
  syntax:
    content: public interface ActorEventPublisher<TActorEvents extends ActorEvents>
    typeParameters:
    - id: TActorEvents
      type: 6e1c167f
      description: <p>Actor event interface type derived from <xref uid="microsoft.servicefabric.actors._actor_events" data-throw-if-not-resolved="false">ActorEvents</xref>. </p>
- uid: microsoft.servicefabric.actors._actor_event_publisher.subscribeAsync(ActorEvents)
  id: subscribeAsync(ActorEvents)
  parent: microsoft.servicefabric.actors._actor_event_publisher
  href: microsoft.servicefabric.actors._actor_event_publisher.yml
  langs:
  - java
  name: subscribeAsync(ActorEvents subscriber)
  nameWithType: ActorEventPublisher<TActorEvents>.subscribeAsync(ActorEvents subscriber)
  fullName: microsoft.servicefabric.actors.ActorEventPublisher<TActorEvents extends ActorEvents>.subscribeAsync(ActorEvents subscriber)
  overload: microsoft.servicefabric.actors._actor_event_publisher.subscribeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorEventPublisher.java
    startLine: 11
  package: microsoft.servicefabric.actors
  syntax:
    content: public default CompletableFuture<?> subscribeAsync(ActorEvents subscriber)
    parameters:
    - id: subscriber
      type: microsoft.servicefabric.actors._actor_events
    return:
      type: cf6fe00c
- uid: microsoft.servicefabric.actors._actor_event_publisher.unsubscribeAsync(ActorEvents)
  id: unsubscribeAsync(ActorEvents)
  parent: microsoft.servicefabric.actors._actor_event_publisher
  href: microsoft.servicefabric.actors._actor_event_publisher.yml
  langs:
  - java
  name: unsubscribeAsync(ActorEvents subscriber)
  nameWithType: ActorEventPublisher<TActorEvents>.unsubscribeAsync(ActorEvents subscriber)
  fullName: microsoft.servicefabric.actors.ActorEventPublisher<TActorEvents extends ActorEvents>.unsubscribeAsync(ActorEvents subscriber)
  overload: microsoft.servicefabric.actors._actor_event_publisher.unsubscribeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorEventPublisher.java
    startLine: 18
  package: microsoft.servicefabric.actors
  syntax:
    content: public default CompletableFuture<?> unsubscribeAsync(ActorEvents subscriber)
    parameters:
    - id: subscriber
      type: microsoft.servicefabric.actors._actor_events
    return:
      type: cf6fe00c
references:
- uid: 6e1c167f
  spec.java:
  - name: TActorEvents
    fullName: TActorEvents
- uid: cf6fe00c
  spec.java:
  - name: default CompletableFuture<?>
    fullName: default CompletableFuture<?>
- uid: microsoft.servicefabric.actors._actor_event_publisher.subscribeAsync*
  name: subscribeAsync
  nameWithType: ActorEventPublisher<TActorEvents>.subscribeAsync
  fullName: microsoft.servicefabric.actors.ActorEventPublisher<TActorEvents extends ActorEvents>.subscribeAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_event_publisher.unsubscribeAsync*
  name: unsubscribeAsync
  nameWithType: ActorEventPublisher<TActorEvents>.unsubscribeAsync
  fullName: microsoft.servicefabric.actors.ActorEventPublisher<TActorEvents extends ActorEvents>.unsubscribeAsync
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_events
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_events.yml
  name: ActorEvents
  nameWithType: ActorEvents
  fullName: microsoft.servicefabric.actors.ActorEvents
  type: Interface
  summary: <p>Represents actor events. Interface that creates actor events must implement this interface </p>
  syntax:
    content: public interface ActorEvents
