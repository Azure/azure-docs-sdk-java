### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.password()
  name: password()
  nameWithType: PrivateRegistryCredentials.password()
  returns:
    description: <p>the password value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get user password to login to the docker repository. One of password or passwordSecretReference must be specified.</p>

    <p></p>
  syntax: public String password()
  uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.password()
- fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.passwordSecretReference()
  name: passwordSecretReference()
  nameWithType: PrivateRegistryCredentials.passwordSecretReference()
  returns:
    description: <p>the passwordSecretReference value </p>
    type: <xref href="com.microsoft.azure.management.batchai.KeyVaultSecretReference?alt=com.microsoft.azure.management.batchai.KeyVaultSecretReference&text=KeyVaultSecretReference" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get keyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified.</p>

    <p></p>
  syntax: public KeyVaultSecretReference passwordSecretReference()
  uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.passwordSecretReference()
- fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.username()
  name: username()
  nameWithType: PrivateRegistryCredentials.username()
  returns:
    description: <p>the username value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get user name to login to the repository.</p>

    <p></p>
  syntax: public String username()
  uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.username()
- fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPassword(String password)
  name: withPassword(String password)
  nameWithType: PrivateRegistryCredentials.withPassword(String password)
  parameters:
  - description: <p>the password value to set </p>
    name: password
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PrivateRegistryCredentials object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.PrivateRegistryCredentials?alt=com.microsoft.azure.management.batchai.PrivateRegistryCredentials&text=PrivateRegistryCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set user password to login to the docker repository. One of password or passwordSecretReference must be specified.</p>

    <p></p>
  syntax: public PrivateRegistryCredentials withPassword(String password)
  uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPassword(String)
- fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)
  name: withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)
  nameWithType: PrivateRegistryCredentials.withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)
  parameters:
  - description: <p>the passwordSecretReference value to set </p>
    name: passwordSecretReference
    type: <xref href="com.microsoft.azure.management.batchai.KeyVaultSecretReference?alt=com.microsoft.azure.management.batchai.KeyVaultSecretReference&text=KeyVaultSecretReference" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PrivateRegistryCredentials object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.PrivateRegistryCredentials?alt=com.microsoft.azure.management.batchai.PrivateRegistryCredentials&text=PrivateRegistryCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set keyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified.</p>

    <p></p>
  syntax: public PrivateRegistryCredentials withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)
  uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPasswordSecretReference(KeyVaultSecretReference)
- fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withUsername(String username)
  name: withUsername(String username)
  nameWithType: PrivateRegistryCredentials.withUsername(String username)
  parameters:
  - description: <p>the username value to set </p>
    name: username
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PrivateRegistryCredentials object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.PrivateRegistryCredentials?alt=com.microsoft.azure.management.batchai.PrivateRegistryCredentials&text=PrivateRegistryCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set user name to login to the repository.</p>

    <p></p>
  syntax: public PrivateRegistryCredentials withUsername(String username)
  uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withUsername(String)
nameWithType: PrivateRegistryCredentials
syntax: public class PrivateRegistryCredentials
type: class
uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
name: PrivateRegistryCredentials
package: com.microsoft.azure.management.batchai
summary: <p>Credentials to access a container image in a private repository. </p>
metadata: {}
