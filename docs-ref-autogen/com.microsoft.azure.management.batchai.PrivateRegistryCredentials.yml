### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  id: PrivateRegistryCredentials
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai
  children:
  - com.microsoft.azure.management.batchai.PrivateRegistryCredentials.PrivateRegistryCredentials()
  - com.microsoft.azure.management.batchai.PrivateRegistryCredentials.password()
  - com.microsoft.azure.management.batchai.PrivateRegistryCredentials.passwordSecretReference()
  - com.microsoft.azure.management.batchai.PrivateRegistryCredentials.username()
  - com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPassword(java.lang.String)
  - com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPasswordSecretReference(com.microsoft.azure.management.batchai.KeyVaultSecretReference)
  - com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withUsername(java.lang.String)
  langs:
  - java
  name: PrivateRegistryCredentials
  nameWithType: PrivateRegistryCredentials
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  type: Class
  package: com.microsoft.azure.management.batchai
  summary: Credentials to access a container image in a private repository.
  syntax:
    content: public class PrivateRegistryCredentials
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.PrivateRegistryCredentials()
  id: PrivateRegistryCredentials()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  langs:
  - java
  name: PrivateRegistryCredentials()
  nameWithType: PrivateRegistryCredentials.PrivateRegistryCredentials()
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.PrivateRegistryCredentials()
  overload: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.PrivateRegistryCredentials*
  type: Constructor
  package: com.microsoft.azure.management.batchai
  syntax:
    content: public PrivateRegistryCredentials()
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.password()
  id: password()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  langs:
  - java
  name: password()
  nameWithType: PrivateRegistryCredentials.password()
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.password()
  overload: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.password*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get user password to login to the docker repository. One of password or passwordSecretReference must be specified.
  syntax:
    content: public String password()
    return:
      type: java.lang.String
      description: the password value
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.passwordSecretReference()
  id: passwordSecretReference()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  langs:
  - java
  name: passwordSecretReference()
  nameWithType: PrivateRegistryCredentials.passwordSecretReference()
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.passwordSecretReference()
  overload: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.passwordSecretReference*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get keyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
  syntax:
    content: public KeyVaultSecretReference passwordSecretReference()
    return:
      type: com.microsoft.azure.management.batchai.KeyVaultSecretReference
      description: the passwordSecretReference value
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.username()
  id: username()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  langs:
  - java
  name: username()
  nameWithType: PrivateRegistryCredentials.username()
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.username()
  overload: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.username*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get user name to login to the repository.
  syntax:
    content: public String username()
    return:
      type: java.lang.String
      description: the username value
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPassword(java.lang.String)
  id: withPassword(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  langs:
  - java
  name: withPassword(String password)
  nameWithType: PrivateRegistryCredentials.withPassword(String password)
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPassword(String password)
  overload: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPassword*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set user password to login to the docker repository. One of password or passwordSecretReference must be specified.
  syntax:
    content: public PrivateRegistryCredentials withPassword(String password)
    parameters:
    - id: password
      type: java.lang.String
      description: the password value to set
    return:
      type: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
      description: the PrivateRegistryCredentials object itself.
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPasswordSecretReference(com.microsoft.azure.management.batchai.KeyVaultSecretReference)
  id: withPasswordSecretReference(com.microsoft.azure.management.batchai.KeyVaultSecretReference)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  langs:
  - java
  name: withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)
  nameWithType: PrivateRegistryCredentials.withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)
  overload: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPasswordSecretReference*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set keyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
  syntax:
    content: public PrivateRegistryCredentials withPasswordSecretReference(KeyVaultSecretReference passwordSecretReference)
    parameters:
    - id: passwordSecretReference
      type: com.microsoft.azure.management.batchai.KeyVaultSecretReference
      description: the passwordSecretReference value to set
    return:
      type: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
      description: the PrivateRegistryCredentials object itself.
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withUsername(java.lang.String)
  id: withUsername(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
  langs:
  - java
  name: withUsername(String username)
  nameWithType: PrivateRegistryCredentials.withUsername(String username)
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withUsername(String username)
  overload: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withUsername*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set user name to login to the repository.
  syntax:
    content: public PrivateRegistryCredentials withUsername(String username)
    parameters:
    - id: username
      type: java.lang.String
      description: the username value to set
    return:
      type: com.microsoft.azure.management.batchai.PrivateRegistryCredentials
      description: the PrivateRegistryCredentials object itself.
references:
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.PrivateRegistryCredentials*
  name: PrivateRegistryCredentials
  nameWithType: PrivateRegistryCredentials.PrivateRegistryCredentials
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.PrivateRegistryCredentials
  package: com.microsoft.azure.management.batchai
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.username*
  name: username
  nameWithType: PrivateRegistryCredentials.username
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.username
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withUsername*
  name: withUsername
  nameWithType: PrivateRegistryCredentials.withUsername
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withUsername
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.password*
  name: password
  nameWithType: PrivateRegistryCredentials.password
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.password
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPassword*
  name: withPassword
  nameWithType: PrivateRegistryCredentials.withPassword
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPassword
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.KeyVaultSecretReference
  name: KeyVaultSecretReference
  nameWithType: KeyVaultSecretReference
  fullName: com.microsoft.azure.management.batchai.KeyVaultSecretReference
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.passwordSecretReference*
  name: passwordSecretReference
  nameWithType: PrivateRegistryCredentials.passwordSecretReference
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.passwordSecretReference
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPasswordSecretReference*
  name: withPasswordSecretReference
  nameWithType: PrivateRegistryCredentials.withPasswordSecretReference
  fullName: com.microsoft.azure.management.batchai.PrivateRegistryCredentials.withPasswordSecretReference
  package: com.microsoft.azure.management.batchai
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
