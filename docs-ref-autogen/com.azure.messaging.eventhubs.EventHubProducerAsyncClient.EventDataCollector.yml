### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector"
  id: "EventDataCollector"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.EventDataCollector(com.azure.messaging.eventhubs.models.CreateBatchOptions,java.lang.Integer,com.azure.core.amqp.implementation.ErrorContextProvider,com.azure.core.amqp.implementation.TracerProvider,java.lang.String,java.lang.String)"
  - "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.accumulator()"
  - "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.characteristics()"
  - "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.combiner()"
  - "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.finisher()"
  - "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.supplier()"
  langs:
  - "java"
  name: "EventHubProducerAsyncClient.EventDataCollector"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "Collects EventData into EventDataBatch to send to Event Hubs. If `maxNumberOfBatches` is `null` then it'll collect as many batches as possible. Otherwise, if there are more events than can fit into `maxNumberOfBatches`, then the collector throws a <xref uid=\"\" data-throw-if-not-resolved=\"false\">AmqpException</xref> with <xref uid=\"\" data-throw-if-not-resolved=\"false\">AmqpErrorCondition#LINK_PAYLOAD_SIZE_EXCEEDED</xref>."
  syntax:
    content: "private static class EventHubProducerAsyncClient.EventDataCollector implements Collector<EventData,List<EventDataBatch>,List<EventDataBatch>>"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.util.stream.Collector<com.azure.messaging.eventhubs.EventData,java.util.List<com.azure.messaging.eventhubs.EventDataBatch>,java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.EventDataCollector(com.azure.messaging.eventhubs.models.CreateBatchOptions,java.lang.Integer,com.azure.core.amqp.implementation.ErrorContextProvider,com.azure.core.amqp.implementation.TracerProvider,java.lang.String,java.lang.String)"
  id: "EventDataCollector(com.azure.messaging.eventhubs.models.CreateBatchOptions,java.lang.Integer,com.azure.core.amqp.implementation.ErrorContextProvider,com.azure.core.amqp.implementation.TracerProvider,java.lang.String,java.lang.String)"
  parent: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector"
  langs:
  - "java"
  name: "EventDataCollector(CreateBatchOptions options, Integer maxNumberOfBatches, ErrorContextProvider contextProvider, TracerProvider tracerProvider, String entityPath, String hostname)"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.EventDataCollector(CreateBatchOptions options, Integer maxNumberOfBatches, ErrorContextProvider contextProvider, TracerProvider tracerProvider, String entityPath, String hostname)"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.EventDataCollector(CreateBatchOptions options, Integer maxNumberOfBatches, ErrorContextProvider contextProvider, TracerProvider tracerProvider, String entityPath, String hostname)"
  overload: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.EventDataCollector*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: " EventDataCollector(CreateBatchOptions options, Integer maxNumberOfBatches, ErrorContextProvider contextProvider, TracerProvider tracerProvider, String entityPath, String hostname)"
    parameters:
    - id: "options"
      type: "com.azure.messaging.eventhubs.models.CreateBatchOptions"
    - id: "maxNumberOfBatches"
      type: "java.lang.Integer"
    - id: "contextProvider"
      type: "com.azure.core.amqp.implementation.ErrorContextProvider"
    - id: "tracerProvider"
      type: "com.azure.core.amqp.implementation.TracerProvider"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "hostname"
      type: "java.lang.String"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.accumulator()"
  id: "accumulator()"
  parent: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector"
  langs:
  - "java"
  name: "accumulator()"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.accumulator()"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.accumulator()"
  overload: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.accumulator*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public BiConsumer<List<EventDataBatch>,EventData> accumulator()"
    return:
      type: "java.util.function.BiConsumer<java.util.List<com.azure.messaging.eventhubs.EventDataBatch>,com.azure.messaging.eventhubs.EventData>"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.characteristics()"
  id: "characteristics()"
  parent: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector"
  langs:
  - "java"
  name: "characteristics()"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.characteristics()"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.characteristics()"
  overload: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.characteristics*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public Set<Collector.Characteristics> characteristics()"
    return:
      type: "java.util.Set<java.util.stream.Collector.Characteristics>"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.combiner()"
  id: "combiner()"
  parent: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector"
  langs:
  - "java"
  name: "combiner()"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.combiner()"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.combiner()"
  overload: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.combiner*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public BinaryOperator<List<EventDataBatch>> combiner()"
    return:
      type: "java.util.function.BinaryOperator<java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.finisher()"
  id: "finisher()"
  parent: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector"
  langs:
  - "java"
  name: "finisher()"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.finisher()"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.finisher()"
  overload: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.finisher*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public Function<List<EventDataBatch>,List<EventDataBatch>> finisher()"
    return:
      type: "java.util.function.Function<java.util.List<com.azure.messaging.eventhubs.EventDataBatch>,java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.supplier()"
  id: "supplier()"
  parent: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector"
  langs:
  - "java"
  name: "supplier()"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.supplier()"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.supplier()"
  overload: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.supplier*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public Supplier<List<EventDataBatch>> supplier()"
    return:
      type: "java.util.function.Supplier<java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
references:
- uid: "com.azure.messaging.eventhubs.models.CreateBatchOptions"
  name: "CreateBatchOptions"
  nameWithType: "CreateBatchOptions"
  fullName: "com.azure.messaging.eventhubs.models.CreateBatchOptions"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.core.amqp.implementation.ErrorContextProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.ErrorContextProvider"
    name: "ErrorContextProvider"
    fullName: "com.azure.core.amqp.implementation.ErrorContextProvider"
- uid: "com.azure.core.amqp.implementation.TracerProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.TracerProvider"
    name: "TracerProvider"
    fullName: "com.azure.core.amqp.implementation.TracerProvider"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.EventDataCollector*"
  name: "EventDataCollector"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.EventDataCollector"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.EventDataCollector"
  package: "com.azure.messaging.eventhubs"
- uid: "java.util.function.Supplier<java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
  spec.java:
  - uid: "java.util.function.Supplier"
    name: "Supplier"
    fullName: "java.util.function.Supplier"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.EventDataBatch"
    name: "EventDataBatch"
    fullName: "com.azure.messaging.eventhubs.EventDataBatch"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.supplier*"
  name: "supplier"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.supplier"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.supplier"
  package: "com.azure.messaging.eventhubs"
- uid: "java.util.function.BiConsumer<java.util.List<com.azure.messaging.eventhubs.EventDataBatch>,com.azure.messaging.eventhubs.EventData>"
  spec.java:
  - uid: "java.util.function.BiConsumer"
    name: "BiConsumer"
    fullName: "java.util.function.BiConsumer"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.EventDataBatch"
    name: "EventDataBatch"
    fullName: "com.azure.messaging.eventhubs.EventDataBatch"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "com.azure.messaging.eventhubs.EventData"
    name: "EventData"
    fullName: "com.azure.messaging.eventhubs.EventData"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.accumulator*"
  name: "accumulator"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.accumulator"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.accumulator"
  package: "com.azure.messaging.eventhubs"
- uid: "java.util.function.BinaryOperator<java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
  spec.java:
  - uid: "java.util.function.BinaryOperator"
    name: "BinaryOperator"
    fullName: "java.util.function.BinaryOperator"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.EventDataBatch"
    name: "EventDataBatch"
    fullName: "com.azure.messaging.eventhubs.EventDataBatch"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.combiner*"
  name: "combiner"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.combiner"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.combiner"
  package: "com.azure.messaging.eventhubs"
- uid: "java.util.function.Function<java.util.List<com.azure.messaging.eventhubs.EventDataBatch>,java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.EventDataBatch"
    name: "EventDataBatch"
    fullName: "com.azure.messaging.eventhubs.EventDataBatch"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.EventDataBatch"
    name: "EventDataBatch"
    fullName: "com.azure.messaging.eventhubs.EventDataBatch"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.finisher*"
  name: "finisher"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.finisher"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.finisher"
  package: "com.azure.messaging.eventhubs"
- uid: "java.util.Set<java.util.stream.Collector.Characteristics>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "java.util.stream.Collector.Characteristics"
    name: "Characteristics"
    fullName: "java.util.stream.Collector.Characteristics"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.characteristics*"
  name: "characteristics"
  nameWithType: "EventHubProducerAsyncClient.EventDataCollector.characteristics"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient.EventDataCollector.characteristics"
  package: "com.azure.messaging.eventhubs"
- uid: "java.util.stream.Collector<com.azure.messaging.eventhubs.EventData,java.util.List<com.azure.messaging.eventhubs.EventDataBatch>,java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
  name: "Collector<EventData,List<EventDataBatch>,List<EventDataBatch>>"
  nameWithType: "Collector<EventData,List<EventDataBatch>,List<EventDataBatch>>"
  fullName: "java.util.stream.Collector<com.azure.messaging.eventhubs.EventData,java.util.List<com.azure.messaging.eventhubs.EventDataBatch>,java.util.List<com.azure.messaging.eventhubs.EventDataBatch>>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.util.function.Supplier"
  name: "Supplier"
  nameWithType: "Supplier"
  fullName: "java.util.function.Supplier"
- uid: "com.azure.messaging.eventhubs.EventDataBatch"
  name: "EventDataBatch"
  nameWithType: "EventDataBatch"
  fullName: "com.azure.messaging.eventhubs.EventDataBatch"
- uid: "java.util.function.BiConsumer"
  name: "BiConsumer"
  nameWithType: "BiConsumer"
  fullName: "java.util.function.BiConsumer"
- uid: "com.azure.messaging.eventhubs.EventDataBatch>,com.azure.messaging.eventhubs.EventData"
  name: "EventDataBatch>,EventData"
  nameWithType: "EventDataBatch>,EventData"
  fullName: "com.azure.messaging.eventhubs.EventDataBatch>,com.azure.messaging.eventhubs.EventData"
- uid: "java.util.function.BinaryOperator"
  name: "BinaryOperator"
  nameWithType: "BinaryOperator"
  fullName: "java.util.function.BinaryOperator"
- uid: "com.azure.messaging.eventhubs.EventDataBatch>,java.util.List"
  name: "EventDataBatch>,List"
  nameWithType: "EventDataBatch>,List"
  fullName: "com.azure.messaging.eventhubs.EventDataBatch>,java.util.List"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
- uid: "java.util.stream.Collector.Characteristics"
  name: "Collector.Characteristics"
  nameWithType: "Collector.Characteristics"
  fullName: "java.util.stream.Collector.Characteristics"
- uid: "com.azure.messaging.eventhubs.EventData,java.util.List"
  name: "EventData,List"
  nameWithType: "EventData,List"
  fullName: "com.azure.messaging.eventhubs.EventData,java.util.List"
- uid: "java.util.stream.Collector"
  name: "Collector"
  nameWithType: "Collector"
  fullName: "java.util.stream.Collector"
