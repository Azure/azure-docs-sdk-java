### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  id: "InnerHttpResponse"
  parent: "com.azure.storage.common.policy"
  children:
  - "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.InnerHttpResponse(com.azure.core.http.HttpResponse,com.azure.core.http.HttpHeaders,com.azure.core.http.HttpRequest)"
  - "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBody()"
  - "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsByteArray()"
  - "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString()"
  - "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString(java.nio.charset.Charset)"
  - "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaderValue(java.lang.String)"
  - "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaders()"
  - "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getStatusCode()"
  langs:
  - "java"
  name: "ScrubEtagPolicy.InnerHttpResponse"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  type: "Class"
  package: "com.azure.storage.common.policy"
  syntax:
    content: "private static final class ScrubEtagPolicy.InnerHttpResponse extends HttpResponse"
  inheritance:
  - "java.lang.Object"
  - "com.azure.core.http.HttpResponse"
  inheritedMembers:
  - "com.azure.core.http.HttpResponse.buffer()"
  - "com.azure.core.http.HttpResponse.close()"
  - "com.azure.core.http.HttpResponse.getBody()"
  - "com.azure.core.http.HttpResponse.getBodyAsByteArray()"
  - "com.azure.core.http.HttpResponse.getBodyAsString()"
  - "com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)"
  - "com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)"
  - "com.azure.core.http.HttpResponse.getHeaders()"
  - "com.azure.core.http.HttpResponse.getRequest()"
  - "com.azure.core.http.HttpResponse.getStatusCode()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.InnerHttpResponse(com.azure.core.http.HttpResponse,com.azure.core.http.HttpHeaders,com.azure.core.http.HttpRequest)"
  id: "InnerHttpResponse(com.azure.core.http.HttpResponse,com.azure.core.http.HttpHeaders,com.azure.core.http.HttpRequest)"
  parent: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  langs:
  - "java"
  name: "InnerHttpResponse(HttpResponse innerHttpResponse, HttpHeaders headers, HttpRequest request)"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.InnerHttpResponse(HttpResponse innerHttpResponse, HttpHeaders headers, HttpRequest request)"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.InnerHttpResponse(HttpResponse innerHttpResponse, HttpHeaders headers, HttpRequest request)"
  overload: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.InnerHttpResponse*"
  type: "Constructor"
  package: "com.azure.storage.common.policy"
  syntax:
    content: " InnerHttpResponse(HttpResponse innerHttpResponse, HttpHeaders headers, HttpRequest request)"
    parameters:
    - id: "innerHttpResponse"
      type: "com.azure.core.http.HttpResponse"
    - id: "headers"
      type: "com.azure.core.http.HttpHeaders"
    - id: "request"
      type: "com.azure.core.http.HttpRequest"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBody()"
  id: "getBody()"
  parent: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  langs:
  - "java"
  name: "getBody()"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getBody()"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBody()"
  overload: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBody*"
  type: "Method"
  package: "com.azure.storage.common.policy"
  syntax:
    content: "public Flux<ByteBuffer> getBody()"
    return:
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsByteArray()"
  id: "getBodyAsByteArray()"
  parent: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  langs:
  - "java"
  name: "getBodyAsByteArray()"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getBodyAsByteArray()"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsByteArray()"
  overload: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsByteArray*"
  type: "Method"
  package: "com.azure.storage.common.policy"
  syntax:
    content: "public Mono<byte[]> getBodyAsByteArray()"
    return:
      type: "reactor.core.publisher.Mono<byte[]>"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString()"
  id: "getBodyAsString()"
  parent: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  langs:
  - "java"
  name: "getBodyAsString()"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getBodyAsString()"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString()"
  overload: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString*"
  type: "Method"
  package: "com.azure.storage.common.policy"
  syntax:
    content: "public Mono<String> getBodyAsString()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.String>"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString(java.nio.charset.Charset)"
  id: "getBodyAsString(java.nio.charset.Charset)"
  parent: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  langs:
  - "java"
  name: "getBodyAsString(Charset charset)"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getBodyAsString(Charset charset)"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString(Charset charset)"
  overload: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString*"
  type: "Method"
  package: "com.azure.storage.common.policy"
  syntax:
    content: "public Mono<String> getBodyAsString(Charset charset)"
    parameters:
    - id: "charset"
      type: "java.nio.charset.Charset"
    return:
      type: "reactor.core.publisher.Mono<java.lang.String>"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaderValue(java.lang.String)"
  id: "getHeaderValue(java.lang.String)"
  parent: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  langs:
  - "java"
  name: "getHeaderValue(String name)"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getHeaderValue(String name)"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaderValue(String name)"
  overload: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaderValue*"
  type: "Method"
  package: "com.azure.storage.common.policy"
  syntax:
    content: "public String getHeaderValue(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaders()"
  id: "getHeaders()"
  parent: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  langs:
  - "java"
  name: "getHeaders()"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getHeaders()"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaders()"
  overload: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaders*"
  type: "Method"
  package: "com.azure.storage.common.policy"
  syntax:
    content: "public HttpHeaders getHeaders()"
    return:
      type: "com.azure.core.http.HttpHeaders"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getStatusCode()"
  id: "getStatusCode()"
  parent: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse"
  langs:
  - "java"
  name: "getStatusCode()"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getStatusCode()"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getStatusCode()"
  overload: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getStatusCode*"
  type: "Method"
  package: "com.azure.storage.common.policy"
  syntax:
    content: "public int getStatusCode()"
    return:
      type: "int"
references:
- uid: "com.azure.core.http.HttpResponse"
  spec.java:
  - uid: "com.azure.core.http.HttpResponse"
    name: "HttpResponse"
    fullName: "com.azure.core.http.HttpResponse"
- uid: "com.azure.core.http.HttpHeaders"
  spec.java:
  - uid: "com.azure.core.http.HttpHeaders"
    name: "HttpHeaders"
    fullName: "com.azure.core.http.HttpHeaders"
- uid: "com.azure.core.http.HttpRequest"
  spec.java:
  - uid: "com.azure.core.http.HttpRequest"
    name: "HttpRequest"
    fullName: "com.azure.core.http.HttpRequest"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.InnerHttpResponse*"
  name: "InnerHttpResponse"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.InnerHttpResponse"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.InnerHttpResponse"
  package: "com.azure.storage.common.policy"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getStatusCode*"
  name: "getStatusCode"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getStatusCode"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getStatusCode"
  package: "com.azure.storage.common.policy"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaderValue*"
  name: "getHeaderValue"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getHeaderValue"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaderValue"
  package: "com.azure.storage.common.policy"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaders*"
  name: "getHeaders"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getHeaders"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getHeaders"
  package: "com.azure.storage.common.policy"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBody*"
  name: "getBody"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getBody"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBody"
  package: "com.azure.storage.common.policy"
- uid: "reactor.core.publisher.Mono<byte[]>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsByteArray*"
  name: "getBodyAsByteArray"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getBodyAsByteArray"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsByteArray"
  package: "com.azure.storage.common.policy"
- uid: "reactor.core.publisher.Mono<java.lang.String>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString*"
  name: "getBodyAsString"
  nameWithType: "ScrubEtagPolicy.InnerHttpResponse.getBodyAsString"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.InnerHttpResponse.getBodyAsString"
  package: "com.azure.storage.common.policy"
- uid: "java.nio.charset.Charset"
  spec.java:
  - uid: "java.nio.charset.Charset"
    name: "Charset"
    fullName: "java.nio.charset.Charset"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)"
  name: "HttpResponse.getBodyAsString(Charset)"
  nameWithType: "HttpResponse.getBodyAsString(Charset)"
  fullName: "com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.azure.core.http.HttpResponse.getBody()"
  name: "HttpResponse.getBody()"
  nameWithType: "HttpResponse.getBody()"
  fullName: "com.azure.core.http.HttpResponse.getBody()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.core.http.HttpResponse.getHeaders()"
  name: "HttpResponse.getHeaders()"
  nameWithType: "HttpResponse.getHeaders()"
  fullName: "com.azure.core.http.HttpResponse.getHeaders()"
- uid: "com.azure.core.http.HttpResponse.getBodyAsString()"
  name: "HttpResponse.getBodyAsString()"
  nameWithType: "HttpResponse.getBodyAsString()"
  fullName: "com.azure.core.http.HttpResponse.getBodyAsString()"
- uid: "com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)"
  name: "HttpResponse.getHeaderValue(String)"
  nameWithType: "HttpResponse.getHeaderValue(String)"
  fullName: "com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.http.HttpResponse.getBodyAsByteArray()"
  name: "HttpResponse.getBodyAsByteArray()"
  nameWithType: "HttpResponse.getBodyAsByteArray()"
  fullName: "com.azure.core.http.HttpResponse.getBodyAsByteArray()"
- uid: "com.azure.core.http.HttpResponse.getRequest()"
  name: "HttpResponse.getRequest()"
  nameWithType: "HttpResponse.getRequest()"
  fullName: "com.azure.core.http.HttpResponse.getRequest()"
- uid: "com.azure.core.http.HttpResponse.close()"
  name: "HttpResponse.close()"
  nameWithType: "HttpResponse.close()"
  fullName: "com.azure.core.http.HttpResponse.close()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.core.http.HttpResponse.getStatusCode()"
  name: "HttpResponse.getStatusCode()"
  nameWithType: "HttpResponse.getStatusCode()"
  fullName: "com.azure.core.http.HttpResponse.getStatusCode()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.HttpResponse.buffer()"
  name: "HttpResponse.buffer()"
  nameWithType: "HttpResponse.buffer()"
  fullName: "com.azure.core.http.HttpResponse.buffer()"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "byte[]"
  name: "byte[]"
  nameWithType: "byte[]"
  fullName: "byte[]"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
