### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)
  name: ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)
  nameWithType: ServiceRemotingDispatcher.ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)
  parameters:
  - description: <p>Service context </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>Service implementation that implements interfaces of type </p>
    name: service
    type: <xref href="microsoft.servicefabric.services.remoting.Service?alt=microsoft.servicefabric.services.remoting.Service&text=Service" data-throw-if-not-resolved="False"/>
  summary: <p>Instantiates the ServiceRemotingDispatcher that uses the given service context and dispatches messages to the given service implementation. </p>
  syntax: public ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.ServiceRemotingDispatcher(ServiceContext,Service)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler&text=ServiceRemotingMessageHandler" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  name: handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  nameWithType: ServiceRemotingDispatcher.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  overridden: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  parameters:
  - description: <p>contains additional information about the request </p>
    name: requestContext
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext?alt=microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext&text=ServiceRemotingRequestContext" data-throw-if-not-resolved="False"/>
  - description: <p>Request message headers </p>
    name: messageHeaders
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders&text=ServiceRemotingMessageHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>Request message body </p>
    name: requestBody
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Handles a one way message from the client. </p>
  syntax: public void handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  name: requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  nameWithType: ServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  overridden: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
  parameters:
  - description: <p>contains additional information about the request </p>
    name: requestContext
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext?alt=microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext&text=ServiceRemotingRequestContext" data-throw-if-not-resolved="False"/>
  - description: <p>Request message headers </p>
    name: messageHeaders
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders&text=ServiceRemotingMessageHeaders" data-throw-if-not-resolved="False"/>
  - description: <p>Request message body </p>
    name: requestBody
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Response body </p>
    type: <xref href="CompletableFuture%3Cbyte%5B%5D%3E?alt=CompletableFuture%3Cbyte%5B%5D%3E&text=CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Handles a message from the client that requires a response from the service. </p>
  syntax: public CompletableFuture<byte[]> requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])
nameWithType: ServiceRemotingDispatcher
syntax: public class ServiceRemotingDispatcher implements ServiceRemotingMessageHandler
type: class
uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher
fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher
name: ServiceRemotingDispatcher
package: microsoft.servicefabric.services.remoting.runtime
summary: <p>Provides an implementation of <xref uid="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler"></xref> that can dispatch messages to the service implementing <xref uid="microsoft.servicefabric.services.remoting.Service" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.Service"></xref> interface. </p>
metadata: {}
