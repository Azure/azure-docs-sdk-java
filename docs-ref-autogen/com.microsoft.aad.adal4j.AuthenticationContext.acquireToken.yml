### YamlMime:JavaMember
nameWithType: AuthenticationContext.acquireToken
type: method
members:
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String resource, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  name: acquireToken(final String resource, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireToken(final String resource, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  parameters:
  - description: <p>Identifier of the target resource that is the recipient of the requested token. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>object representing Private Key to use for token acquisition. </p>
    name: credential
    type: final <xref href="com.microsoft.aad.adal4j.AsymmetricKeyCredential?alt=com.microsoft.aad.adal4j.AsymmetricKeyCredential&text=AsymmetricKeyCredential" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="AuthenticationException?alt=AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="com.microsoft.aad.adal4j.AuthenticationException" data-throw-if-not-resolved="false" data-raw-source="AuthenticationException"></xref>

      </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires security token from the authority.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireToken(final String resource, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String,final AsymmetricKeyCredential,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String resource, final ClientAssertion clientAssertion, final AuthenticationCallback callback)
  name: acquireToken(final String resource, final ClientAssertion clientAssertion, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireToken(final String resource, final ClientAssertion clientAssertion, final AuthenticationCallback callback)
  parameters:
  - description: <p>Identifier of the target resource that is the recipient of the requested token. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The client assertion to use for client authentication. </p>
    name: clientAssertion
    type: final <xref href="com.microsoft.aad.adal4j.ClientAssertion?alt=com.microsoft.aad.adal4j.ClientAssertion&text=ClientAssertion" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires security token from the authority.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireToken(final String resource, final ClientAssertion clientAssertion, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String,final ClientAssertion,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String resource, final ClientCredential credential, final AuthenticationCallback callback)
  name: acquireToken(final String resource, final ClientCredential credential, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireToken(final String resource, final ClientCredential credential, final AuthenticationCallback callback)
  parameters:
  - description: <p>Identifier of the target resource that is the recipient of the requested token. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The client credential to use for token acquisition. </p>
    name: credential
    type: final <xref href="com.microsoft.aad.adal4j.ClientCredential?alt=com.microsoft.aad.adal4j.ClientCredential&text=ClientCredential" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires security token from the authority.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireToken(final String resource, final ClientCredential credential, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String,final ClientCredential,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String resource, final String clientId, final String username, final String password, final AuthenticationCallback callback)
  name: acquireToken(final String resource, final String clientId, final String username, final String password, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireToken(final String resource, final String clientId, final String username, final String password, final AuthenticationCallback callback)
  parameters:
  - description: <p>Identifier of the target resource that is the recipient of the requested token. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Name or ID of the client requesting the token. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Username of the managed or federated user. </p>
    name: username
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Password of the managed or federated user. If null, integrated authentication will be used. </p>
    name: password
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a username/password flow.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireToken(final String resource, final String clientId, final String username, final String password, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String,final String,final String,final String,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String resource, final UserAssertion userAssertion, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  name: acquireToken(final String resource, final UserAssertion userAssertion, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireToken(final String resource, final UserAssertion userAssertion, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  parameters:
  - description: <p>Identifier of the target resource that is the recipient of the requested token. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>userAssertion to use as Authorization grant </p>
    name: userAssertion
    type: final <xref href="com.microsoft.aad.adal4j.UserAssertion?alt=com.microsoft.aad.adal4j.UserAssertion&text=UserAssertion" data-throw-if-not-resolved="False"/>
  - description: <p>The certificate based client credential to use for token acquisition. </p>
    name: credential
    type: final <xref href="com.microsoft.aad.adal4j.AsymmetricKeyCredential?alt=com.microsoft.aad.adal4j.AsymmetricKeyCredential&text=AsymmetricKeyCredential" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="AuthenticationException?alt=AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="com.microsoft.aad.adal4j.AuthenticationException" data-throw-if-not-resolved="false" data-raw-source="AuthenticationException"></xref>

      </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires an access token from the authority on behalf of a user. It requires using a user token previously received. Uses certificate to authenticate client.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireToken(final String resource, final UserAssertion userAssertion, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String,final UserAssertion,final AsymmetricKeyCredential,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String resource, final UserAssertion userAssertion, final ClientCredential credential, final AuthenticationCallback callback)
  name: acquireToken(final String resource, final UserAssertion userAssertion, final ClientCredential credential, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireToken(final String resource, final UserAssertion userAssertion, final ClientCredential credential, final AuthenticationCallback callback)
  parameters:
  - description: <p>Identifier of the target resource that is the recipient of the requested token. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>userAssertion to use as Authorization grant </p>
    name: userAssertion
    type: final <xref href="com.microsoft.aad.adal4j.UserAssertion?alt=com.microsoft.aad.adal4j.UserAssertion&text=UserAssertion" data-throw-if-not-resolved="False"/>
  - description: <p>The client credential to use for token acquisition. </p>
    name: credential
    type: final <xref href="com.microsoft.aad.adal4j.ClientCredential?alt=com.microsoft.aad.adal4j.ClientCredential&text=ClientCredential" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="AuthenticationException?alt=AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>

        <xref uid="com.microsoft.aad.adal4j.AuthenticationException" data-throw-if-not-resolved="false" data-raw-source="AuthenticationException"></xref>

      </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires an access token from the authority on behalf of a user. It requires using a user token previously received.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireToken(final String resource, final UserAssertion userAssertion, final ClientCredential credential, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken(final String,final UserAssertion,final ClientCredential,final AuthenticationCallback)
uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken*
fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireToken
name: acquireToken(final String resource, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
package: com.microsoft.aad.adal4j
metadata: {}
