### YamlMime:JavaMember
nameWithType: PartitionReceiver.setReceiveHandler
type: method
members:
- fullName: com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  name: setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  nameWithType: PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  parameters:
  - description: <p>An implementation of <xref uid="com.microsoft.azure.eventhubs.PartitionReceiveHandler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref>. Setting this handler to <code>null</code> will stop the receive pump. </p>
    name: receiveHandler
    type: final <xref href="com.microsoft.azure.eventhubs.PartitionReceiveHandler?alt=com.microsoft.azure.eventhubs.PartitionReceiveHandler&text=PartitionReceiveHandler" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A completableFuture which sets receiveHandler </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Register a receive handler that will be called when an event is available. A <xref uid="com.microsoft.azure.eventhubs.PartitionReceiveHandler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref> is a handler that allows user to specify a callback for event processing and error handling in a receive pump model.</p>

    <p></p>
  syntax: public CompletableFuture<Void> setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  uid: com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler)
- fullName: com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)
  name: setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)
  nameWithType: PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)
  parameters:
  - description: <p>An implementation of <xref uid="com.microsoft.azure.eventhubs.PartitionReceiveHandler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref></p>
    name: receiveHandler
    type: final <xref href="com.microsoft.azure.eventhubs.PartitionReceiveHandler?alt=com.microsoft.azure.eventhubs.PartitionReceiveHandler&text=PartitionReceiveHandler" data-throw-if-not-resolved="False"/>
  - description: <p>flag to indicate whether the <xref uid="" data-throw-if-not-resolved="false">PartitionReceiveHandler#onReceive(Iterable)</xref> should be invoked when the receive call times out </p>
    name: invokeWhenNoEvents
    type: <xref href="final+boolean?alt=final boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A completableFuture which sets receiveHandler </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Register a receive handler that will be called when an event is available. A <xref uid="com.microsoft.azure.eventhubs.PartitionReceiveHandler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref> is a handler that allows user to specify a callback for event processing and error handling in a receive pump model.</p>

    <p></p>
  syntax: public CompletableFuture<Void> setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)
  uid: com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler,final boolean)
uid: com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler*
fullName: com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
name: setReceiveHandler(final PartitionReceiveHandler receiveHandler)
package: com.microsoft.azure.eventhubs
metadata: {}
