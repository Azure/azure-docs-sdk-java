### YamlMime:JavaMember
uid: "com.azure.resourcemanager.containerregistry.models.TokenCertificate.withEncodedPemCertificate*"
fullName: "com.azure.resourcemanager.containerregistry.models.TokenCertificate.withEncodedPemCertificate"
name: "withEncodedPemCertificate"
nameWithType: "TokenCertificate.withEncodedPemCertificate"
members:
- uid: "com.azure.resourcemanager.containerregistry.models.TokenCertificate.withEncodedPemCertificate(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.TokenCertificate.withEncodedPemCertificate(String encodedPemCertificate)"
  name: "withEncodedPemCertificate(String encodedPemCertificate)"
  nameWithType: "TokenCertificate.withEncodedPemCertificate(String encodedPemCertificate)"
  summary: "Set the encodedPemCertificate property: Base 64 encoded string of the public certificate1 in PEM format that will be used for authenticating the token."
  parameters:
  - description: "the encodedPemCertificate value to set."
    name: "encodedPemCertificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TokenCertificate withEncodedPemCertificate(String encodedPemCertificate)"
  returns:
    description: "the TokenCertificate object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.TokenCertificate?alt=com.azure.resourcemanager.containerregistry.models.TokenCertificate&text=TokenCertificate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.containerregistry.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.10.0
