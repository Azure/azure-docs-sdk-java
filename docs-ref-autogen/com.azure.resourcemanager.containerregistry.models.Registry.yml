### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerregistry.models.Registry"
fullName: "com.azure.resourcemanager.containerregistry.models.Registry"
name: "Registry"
nameWithType: "Registry"
summary: "An immutable client-side representation of an Azure registry."
syntax: "public interface Registry extends GroupableResource<ContainerRegistryManager,RegistryInner>, Refreshable<Registry>, Updatable<Registry.Update>"
methods:
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.adminUserEnabled()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.adminUserEnabled()"
  name: "adminUserEnabled()"
  nameWithType: "Registry.adminUserEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean adminUserEnabled()"
  returns:
    description: "the value that indicates whether the admin user is enabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.creationDate()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.creationDate()"
  name: "creationDate()"
  nameWithType: "Registry.creationDate()"
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime creationDate()"
  returns:
    description: "the creation date of the container registry in ISO8601 format"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.getBuildSourceUploadUrl()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.getBuildSourceUploadUrl()"
  name: "getBuildSourceUploadUrl()"
  nameWithType: "Registry.getBuildSourceUploadUrl()"
  modifiers:
  - "abstract"
  syntax: "public abstract SourceUploadDefinition getBuildSourceUploadUrl()"
  returns:
    description: "returns the upload location for the user to be able to upload the source."
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition?alt=com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition&text=SourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.getBuildSourceUploadUrlAsync()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.getBuildSourceUploadUrlAsync()"
  name: "getBuildSourceUploadUrlAsync()"
  nameWithType: "Registry.getBuildSourceUploadUrlAsync()"
  summary: "Gets the upload location for the user to be able to upload the source asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<SourceUploadDefinition> getBuildSourceUploadUrlAsync()"
  desc: "Gets the upload location for the user to be able to upload the source asynchronously."
  returns:
    description: "a representation of the future computation of this call"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition?alt=com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition&text=SourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.getCredentials()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.getCredentials()"
  name: "getCredentials()"
  nameWithType: "Registry.getCredentials()"
  modifiers:
  - "abstract"
  syntax: "public abstract RegistryCredentials getCredentials()"
  returns:
    description: "the login credentials for the specified container registry"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryCredentials?alt=com.azure.resourcemanager.containerregistry.models.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.getCredentialsAsync()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.getCredentialsAsync()"
  name: "getCredentialsAsync()"
  nameWithType: "Registry.getCredentialsAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<RegistryCredentials> getCredentialsAsync()"
  returns:
    description: "a representation of the future computation of this call"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryCredentials?alt=com.azure.resourcemanager.containerregistry.models.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.listQuotaUsages()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.listQuotaUsages()"
  name: "listQuotaUsages()"
  nameWithType: "Registry.listQuotaUsages()"
  summary: "Lists the quota usages for the specified container registry."
  modifiers:
  - "abstract"
  syntax: "public abstract Collection<RegistryUsage> listQuotaUsages()"
  desc: "Lists the quota usages for the specified container registry."
  returns:
    description: "the list of container registry's quota usages"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html\">Collection</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryUsage?alt=com.azure.resourcemanager.containerregistry.models.RegistryUsage&text=RegistryUsage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.listQuotaUsagesAsync()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.listQuotaUsagesAsync()"
  name: "listQuotaUsagesAsync()"
  nameWithType: "Registry.listQuotaUsagesAsync()"
  summary: "Lists the quota usages for the specified container registry."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<RegistryUsage> listQuotaUsagesAsync()"
  desc: "Lists the quota usages for the specified container registry."
  returns:
    description: "a representation of the future computation of this call"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryUsage?alt=com.azure.resourcemanager.containerregistry.models.RegistryUsage&text=RegistryUsage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.loginServerUrl()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.loginServerUrl()"
  name: "loginServerUrl()"
  nameWithType: "Registry.loginServerUrl()"
  modifiers:
  - "abstract"
  syntax: "public abstract String loginServerUrl()"
  returns:
    description: "the URL that can be used to log into the container registry"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "Registry.publicNetworkAccess()"
  modifiers:
  - "abstract"
  syntax: "public abstract PublicNetworkAccess publicNetworkAccess()"
  returns:
    description: "the state of public network access for the container registry."
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.PublicNetworkAccess?alt=com.azure.resourcemanager.containerregistry.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.regenerateCredential(com.azure.resourcemanager.containerregistry.models.AccessKeyType)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.regenerateCredential(AccessKeyType accessKeyType)"
  name: "regenerateCredential(AccessKeyType accessKeyType)"
  nameWithType: "Registry.regenerateCredential(AccessKeyType accessKeyType)"
  summary: "Regenerates one of the login credentials for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the admin user access key name to regenerate the value for"
    name: "accessKeyType"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.AccessKeyType?alt=com.azure.resourcemanager.containerregistry.models.AccessKeyType&text=AccessKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RegistryCredentials regenerateCredential(AccessKeyType accessKeyType)"
  desc: "Regenerates one of the login credentials for the specified container registry."
  returns:
    description: "the result of the regeneration"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryCredentials?alt=com.azure.resourcemanager.containerregistry.models.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.regenerateCredentialAsync(com.azure.resourcemanager.containerregistry.models.AccessKeyType)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.regenerateCredentialAsync(AccessKeyType accessKeyType)"
  name: "regenerateCredentialAsync(AccessKeyType accessKeyType)"
  nameWithType: "Registry.regenerateCredentialAsync(AccessKeyType accessKeyType)"
  summary: "Regenerates one of the login credentials for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the admin user access key name to regenerate the value for"
    name: "accessKeyType"
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.AccessKeyType?alt=com.azure.resourcemanager.containerregistry.models.AccessKeyType&text=AccessKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<RegistryCredentials> regenerateCredentialAsync(AccessKeyType accessKeyType)"
  desc: "Regenerates one of the login credentials for the specified container registry."
  returns:
    description: "a representation of the future computation of this call"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryCredentials?alt=com.azure.resourcemanager.containerregistry.models.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.scheduleRun()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.scheduleRun()"
  name: "scheduleRun()"
  nameWithType: "Registry.scheduleRun()"
  summary: "Begins the definition of the task run."
  modifiers:
  - "abstract"
  syntax: "public abstract RegistryTaskRun.DefinitionStages.BlankFromRegistry scheduleRun()"
  desc: "Begins the definition of the task run."
  returns:
    description: "the first stage of the task run definition."
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.RegistryTaskRun.DefinitionStages.BlankFromRegistry?alt=com.azure.resourcemanager.containerregistry.models.RegistryTaskRun.DefinitionStages.BlankFromRegistry&text=BlankFromRegistry\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.sku()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.sku()"
  name: "sku()"
  nameWithType: "Registry.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract Sku sku()"
  returns:
    description: "the SKU of the container registry."
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.Sku?alt=com.azure.resourcemanager.containerregistry.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerregistry.models.Registry.webhooks()"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registry.webhooks()"
  name: "webhooks()"
  nameWithType: "Registry.webhooks()"
  modifiers:
  - "abstract"
  syntax: "public abstract WebhookOperations webhooks()"
  returns:
    description: "returns entry point to manage container registry webhooks."
    type: "<xref href=\"com.azure.resourcemanager.containerregistry.models.WebhookOperations?alt=com.azure.resourcemanager.containerregistry.models.WebhookOperations&text=WebhookOperations\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of an Azure registry."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.ContainerRegistryManager?alt=com.azure.resourcemanager.containerregistry.ContainerRegistryManager&text=ContainerRegistryManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.containerregistry.fluent.models.RegistryInner?alt=com.azure.resourcemanager.containerregistry.fluent.models.RegistryInner&text=RegistryInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.Registry?alt=com.azure.resourcemanager.containerregistry.models.Registry&text=Registry\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.Registry.Update?alt=com.azure.resourcemanager.containerregistry.models.Registry.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.containerregistry.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.19.0
