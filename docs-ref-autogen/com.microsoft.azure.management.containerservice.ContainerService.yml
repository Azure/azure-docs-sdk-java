### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerservice.ContainerService"
fullName: "com.microsoft.azure.management.containerservice.ContainerService"
name: "ContainerService"
nameWithType: "ContainerService"
summary: "A client-side representation for a container service."
syntax: "public interface ContainerService extends GroupableResource<ContainerServiceManager,ContainerServiceInner>, Refreshable<ContainerService>, Updatable<ContainerService.Update>, OrchestratorServiceBase"
methods:
- uid: "com.microsoft.azure.management.containerservice.ContainerService.agentPools()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.agentPools()"
  name: "agentPools()"
  nameWithType: "ContainerService.agentPools()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,ContainerServiceAgentPool> agentPools()"
  returns:
    description: "the agent pools map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceAgentPool?alt=com.microsoft.azure.management.containerservice.ContainerServiceAgentPool&text=ContainerServiceAgentPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.isDiagnosticsEnabled()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.isDiagnosticsEnabled()"
  name: "isDiagnosticsEnabled()"
  nameWithType: "ContainerService.isDiagnosticsEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isDiagnosticsEnabled()"
  returns:
    description: "true if diagnostics are enabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.linuxRootUsername()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.linuxRootUsername()"
  name: "linuxRootUsername()"
  nameWithType: "ContainerService.linuxRootUsername()"
  modifiers:
  - "abstract"
  syntax: "public abstract String linuxRootUsername()"
  returns:
    description: "the Linux root username"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.masterDnsPrefix()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.masterDnsPrefix()"
  name: "masterDnsPrefix()"
  nameWithType: "ContainerService.masterDnsPrefix()"
  modifiers:
  - "abstract"
  syntax: "public abstract String masterDnsPrefix()"
  returns:
    description: "the master DNS prefix which was specified at creation time"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.masterFqdn()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.masterFqdn()"
  name: "masterFqdn()"
  nameWithType: "ContainerService.masterFqdn()"
  modifiers:
  - "abstract"
  syntax: "public abstract String masterFqdn()"
  returns:
    description: "the master FQDN"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.masterNodeCount()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.masterNodeCount()"
  name: "masterNodeCount()"
  nameWithType: "ContainerService.masterNodeCount()"
  modifiers:
  - "abstract"
  syntax: "public abstract int masterNodeCount()"
  returns:
    description: "the master node count"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.masterOSDiskSizeInGB()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.masterOSDiskSizeInGB()"
  name: "masterOSDiskSizeInGB()"
  nameWithType: "ContainerService.masterOSDiskSizeInGB()"
  modifiers:
  - "abstract"
  syntax: "public abstract int masterOSDiskSizeInGB()"
  returns:
    description: "OS disk size in GB set for every machine in the master pool"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.masterStorageProfile()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.masterStorageProfile()"
  name: "masterStorageProfile()"
  nameWithType: "ContainerService.masterStorageProfile()"
  modifiers:
  - "abstract"
  syntax: "public abstract ContainerServiceStorageProfileTypes masterStorageProfile()"
  returns:
    description: "the storage kind set for every machine in the master pool"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes?alt=com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes&text=ContainerServiceStorageProfileTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.masterSubnetName()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.masterSubnetName()"
  name: "masterSubnetName()"
  nameWithType: "ContainerService.masterSubnetName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String masterSubnetName()"
  returns:
    description: "the name of the subnet used by every machine in the master pool"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.networkId()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.networkId()"
  name: "networkId()"
  nameWithType: "ContainerService.networkId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String networkId()"
  returns:
    description: "the ID of the virtual network used by every machine in the master and agent pools"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.orchestratorType()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.orchestratorType()"
  name: "orchestratorType()"
  nameWithType: "ContainerService.orchestratorType()"
  modifiers:
  - "abstract"
  syntax: "public abstract ContainerServiceOrchestratorTypes orchestratorType()"
  returns:
    description: "the type of the orchestrator"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes?alt=com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes&text=ContainerServiceOrchestratorTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalClientId()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalClientId()"
  name: "servicePrincipalClientId()"
  nameWithType: "ContainerService.servicePrincipalClientId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String servicePrincipalClientId()"
  returns:
    description: "the service principal client ID"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalSecret()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalSecret()"
  name: "servicePrincipalSecret()"
  nameWithType: "ContainerService.servicePrincipalSecret()"
  modifiers:
  - "abstract"
  syntax: "public abstract String servicePrincipalSecret()"
  returns:
    description: "the service principal secret"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerService.sshKey()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerService.sshKey()"
  name: "sshKey()"
  nameWithType: "ContainerService.sshKey()"
  modifiers:
  - "abstract"
  syntax: "public abstract String sshKey()"
  returns:
    description: "the Linux SSH key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "A client-side representation for a container service."
implements:
- "<xref href=\"com.microsoft.azure.management.containerservice.OrchestratorServiceBase?alt=com.microsoft.azure.management.containerservice.OrchestratorServiceBase&text=OrchestratorServiceBase\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager&text=ContainerServiceManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner&text=ContainerServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Refreshable?alt=com.microsoft.azure.management.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerservice.ContainerService?alt=com.microsoft.azure.management.containerservice.ContainerService&text=ContainerService\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Updatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerservice.ContainerService.Update?alt=com.microsoft.azure.management.containerservice.ContainerService.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.containerservice"
artifact: com.microsoft.azure:azure-mgmt-containerservice:1.41.4
