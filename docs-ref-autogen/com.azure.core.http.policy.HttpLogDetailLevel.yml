### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.policy.HttpLogDetailLevel"
  id: "HttpLogDetailLevel"
  parent: "com.azure.core.http.policy"
  children:
  - "com.azure.core.http.policy.HttpLogDetailLevel.BASIC"
  - "com.azure.core.http.policy.HttpLogDetailLevel.BODY"
  - "com.azure.core.http.policy.HttpLogDetailLevel.BODY_AND_HEADERS"
  - "com.azure.core.http.policy.HttpLogDetailLevel.HEADERS"
  - "com.azure.core.http.policy.HttpLogDetailLevel.NONE"
  - "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogBody()"
  - "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogHeaders()"
  - "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogUrl()"
  - "com.azure.core.http.policy.HttpLogDetailLevel.valueOf(java.lang.String)"
  - "com.azure.core.http.policy.HttpLogDetailLevel.values()"
  langs:
  - "java"
  name: "HttpLogDetailLevel"
  nameWithType: "HttpLogDetailLevel"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel"
  type: "Enum"
  package: "com.azure.core.http.policy"
  summary: "The level of detail to log on HTTP messages."
  syntax:
    content: "public enum HttpLogDetailLevel extends Enum<HttpLogDetailLevel>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.BASIC"
  id: "BASIC"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "BASIC"
  nameWithType: "HttpLogDetailLevel.BASIC"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.BASIC"
  type: "Field"
  package: "com.azure.core.http.policy"
  summary: "Logs only URLs, HTTP methods, and time to finish the request."
  syntax:
    content: "public static final HttpLogDetailLevel BASIC"
    return:
      type: "com.azure.core.http.policy.HttpLogDetailLevel"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.BODY"
  id: "BODY"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "BODY"
  nameWithType: "HttpLogDetailLevel.BODY"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.BODY"
  type: "Field"
  package: "com.azure.core.http.policy"
  summary: "Logs everything in BASIC, plus all the request and response body. Note that only payloads in plain text or plain text encoded in GZIP will be logged."
  syntax:
    content: "public static final HttpLogDetailLevel BODY"
    return:
      type: "com.azure.core.http.policy.HttpLogDetailLevel"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.BODY_AND_HEADERS"
  id: "BODY_AND_HEADERS"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "BODY_AND_HEADERS"
  nameWithType: "HttpLogDetailLevel.BODY_AND_HEADERS"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.BODY_AND_HEADERS"
  type: "Field"
  package: "com.azure.core.http.policy"
  summary: "Logs everything in HEADERS and BODY."
  syntax:
    content: "public static final HttpLogDetailLevel BODY_AND_HEADERS"
    return:
      type: "com.azure.core.http.policy.HttpLogDetailLevel"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.HEADERS"
  id: "HEADERS"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "HEADERS"
  nameWithType: "HttpLogDetailLevel.HEADERS"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.HEADERS"
  type: "Field"
  package: "com.azure.core.http.policy"
  summary: "Logs everything in BASIC, plus all the request and response headers."
  syntax:
    content: "public static final HttpLogDetailLevel HEADERS"
    return:
      type: "com.azure.core.http.policy.HttpLogDetailLevel"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.HttpLogDetailLevel()"
  id: "HttpLogDetailLevel()"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "HttpLogDetailLevel()"
  nameWithType: "HttpLogDetailLevel.HttpLogDetailLevel()"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.HttpLogDetailLevel()"
  overload: "com.azure.core.http.policy.HttpLogDetailLevel.HttpLogDetailLevel*"
  type: "Constructor"
  package: "com.azure.core.http.policy"
  syntax:
    content: "private HttpLogDetailLevel()"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.NONE"
  id: "NONE"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "NONE"
  nameWithType: "HttpLogDetailLevel.NONE"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.NONE"
  type: "Field"
  package: "com.azure.core.http.policy"
  summary: "Logging is turned off."
  syntax:
    content: "public static final HttpLogDetailLevel NONE"
    return:
      type: "com.azure.core.http.policy.HttpLogDetailLevel"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogBody()"
  id: "shouldLogBody()"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "shouldLogBody()"
  nameWithType: "HttpLogDetailLevel.shouldLogBody()"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogBody()"
  overload: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogBody*"
  type: "Method"
  package: "com.azure.core.http.policy"
  syntax:
    content: "public boolean shouldLogBody()"
    return:
      type: "boolean"
      description: "a value indicating whether HTTP message bodies should be logged."
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogHeaders()"
  id: "shouldLogHeaders()"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "shouldLogHeaders()"
  nameWithType: "HttpLogDetailLevel.shouldLogHeaders()"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogHeaders()"
  overload: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogHeaders*"
  type: "Method"
  package: "com.azure.core.http.policy"
  syntax:
    content: "public boolean shouldLogHeaders()"
    return:
      type: "boolean"
      description: "a value indicating whether HTTP message headers should be logged."
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogUrl()"
  id: "shouldLogUrl()"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "shouldLogUrl()"
  nameWithType: "HttpLogDetailLevel.shouldLogUrl()"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogUrl()"
  overload: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogUrl*"
  type: "Method"
  package: "com.azure.core.http.policy"
  syntax:
    content: "public boolean shouldLogUrl()"
    return:
      type: "boolean"
      description: "a value indicating whether a request's URL should be logged."
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "HttpLogDetailLevel.valueOf(String name)"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.valueOf(String name)"
  overload: "com.azure.core.http.policy.HttpLogDetailLevel.valueOf*"
  type: "Method"
  package: "com.azure.core.http.policy"
  syntax:
    content: "public static HttpLogDetailLevel valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.azure.core.http.policy.HttpLogDetailLevel"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.values()"
  id: "values()"
  parent: "com.azure.core.http.policy.HttpLogDetailLevel"
  langs:
  - "java"
  name: "values()"
  nameWithType: "HttpLogDetailLevel.values()"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.values()"
  overload: "com.azure.core.http.policy.HttpLogDetailLevel.values*"
  type: "Method"
  package: "com.azure.core.http.policy"
  syntax:
    content: "public static HttpLogDetailLevel[] values()"
    return:
      type: "com.azure.core.http.policy.HttpLogDetailLevel[]"
references:
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.HttpLogDetailLevel*"
  name: "HttpLogDetailLevel"
  nameWithType: "HttpLogDetailLevel.HttpLogDetailLevel"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.HttpLogDetailLevel"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel[]"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpLogDetailLevel"
    name: "HttpLogDetailLevel"
    fullName: "com.azure.core.http.policy.HttpLogDetailLevel"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.values*"
  name: "values"
  nameWithType: "HttpLogDetailLevel.values"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.values"
  package: "com.azure.core.http.policy"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.valueOf*"
  name: "valueOf"
  nameWithType: "HttpLogDetailLevel.valueOf"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.valueOf"
  package: "com.azure.core.http.policy"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogUrl*"
  name: "shouldLogUrl"
  nameWithType: "HttpLogDetailLevel.shouldLogUrl"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogUrl"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogHeaders*"
  name: "shouldLogHeaders"
  nameWithType: "HttpLogDetailLevel.shouldLogHeaders"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogHeaders"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogBody*"
  name: "shouldLogBody"
  nameWithType: "HttpLogDetailLevel.shouldLogBody"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel.shouldLogBody"
  package: "com.azure.core.http.policy"
- uid: "java.lang.Enum<com.azure.core.http.policy.HttpLogDetailLevel>"
  name: "Enum<HttpLogDetailLevel>"
  nameWithType: "Enum<HttpLogDetailLevel>"
  fullName: "java.lang.Enum<com.azure.core.http.policy.HttpLogDetailLevel>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
