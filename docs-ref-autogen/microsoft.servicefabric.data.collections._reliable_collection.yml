### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.data.collections._reliable_collection
  id: _reliable_collection
  parent: microsoft.servicefabric.data.collections
  children:
  - microsoft.servicefabric.data.collections._reliable_collection.clearAsync()
  - microsoft.servicefabric.data.collections._reliable_collection.getCount()
  href: microsoft.servicefabric.data.collections._reliable_collection.yml
  langs:
  - java
  name: ReliableCollection
  nameWithType: ReliableCollection
  fullName: microsoft.servicefabric.data.collections.ReliableCollection
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/data/collections/ReliableCollection.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/data/collections/ReliableCollection.java
    startLine: 10
  package: microsoft.servicefabric.data.collections
  summary: "<p>Defines methods for manipulating Reliable Collections. </p>"
  syntax: &o1
    content: public interface ReliableCollection extends ReliableState
  inheritedMembers:
  - microsoft.servicefabric.data._reliable_state.getName()
- uid: microsoft.servicefabric.data.collections._reliable_collection.clearAsync()
  id: clearAsync()
  parent: microsoft.servicefabric.data.collections._reliable_collection
  href: microsoft.servicefabric.data.collections._reliable_collection.yml
  langs:
  - java
  name: clearAsync()
  nameWithType: ReliableCollection.clearAsync()
  fullName: microsoft.servicefabric.data.collections.ReliableCollection.clearAsync()
  overload: microsoft.servicefabric.data.collections._reliable_collection.clearAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/data/collections/ReliableCollection.java
    startLine: 24
  package: microsoft.servicefabric.data.collections
  summary: "<p>Removes all state from the <xref uid=\"microsoft.servicefabric.data.collections._reliable_collection\" data-throw-if-not-resolved=\"false\">ReliableCollection</xref>, including replicated and persisted store. </p>"
  syntax:
    content: public CompletableFuture<Void> clearAsync()
    return:
      type: db03ee24
      description: <p>A completable future that represents the asynchronous clear operation. </p>
- uid: microsoft.servicefabric.data.collections._reliable_collection.getCount()
  id: getCount()
  parent: microsoft.servicefabric.data.collections._reliable_collection
  href: microsoft.servicefabric.data.collections._reliable_collection.yml
  langs:
  - java
  name: getCount()
  nameWithType: ReliableCollection.getCount()
  fullName: microsoft.servicefabric.data.collections.ReliableCollection.getCount()
  overload: microsoft.servicefabric.data.collections._reliable_collection.getCount*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/data/collections/ReliableCollection.java
    startLine: 18
  package: microsoft.servicefabric.data.collections
  summary: "<p>Gets the number of elements contained in the <xref uid=\"microsoft.servicefabric.data.collections._reliable_collection\" data-throw-if-not-resolved=\"false\">ReliableCollection</xref></p>\r\n<p></p>"
  syntax:
    content: public long getCount()
    return:
      type: 0364520f
      description: <p>The number of elements. </p>
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: microsoft.servicefabric.data.collections._reliable_collection.getCount*
  name: getCount
  nameWithType: ReliableCollection.getCount
  fullName: microsoft.servicefabric.data.collections.ReliableCollection.getCount
  package: microsoft.servicefabric.data.collections
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: microsoft.servicefabric.data.collections._reliable_collection.clearAsync*
  name: clearAsync
  nameWithType: ReliableCollection.clearAsync
  fullName: microsoft.servicefabric.data.collections.ReliableCollection.clearAsync
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data._reliable_state.getName()
  parent: microsoft.servicefabric.data._reliable_state
  href: microsoft.servicefabric.data._reliable_state.yml
  name: getName()
  nameWithType: ReliableState.getName()
  fullName: microsoft.servicefabric.data.ReliableState.getName()
  type: Method
  summary: >-
    <p>Gets a value indicating the unique name for <xref uid="microsoft.servicefabric.data._reliable_state" data-throw-if-not-resolved="false">ReliableState</xref></p>

    <p></p>
  syntax:
    content: public URI getName()
    return:
      type: "62304784"
      description: <p>The name of the <xref uid="microsoft.servicefabric.data._reliable_state" data-throw-if-not-resolved="false">ReliableState</xref> instance. </p>
- uid: microsoft.servicefabric.data._reliable_state
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._reliable_state.yml
  name: ReliableState
  nameWithType: ReliableState
  fullName: microsoft.servicefabric.data.ReliableState
  type: Interface
  summary: <p>Defines methods for interacting with all reliable state in Service Fabric. </p>
  syntax:
    content: public interface ReliableState
- uid: microsoft.servicefabric.data.collections._reliable_hash_map
  parent: microsoft.servicefabric.data.collections
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  name: ReliableHashMap<K,V>
  nameWithType: ReliableHashMap<K,V>
  fullName: microsoft.servicefabric.data.collections.ReliableHashMap<K,V>
  type: Class
  syntax:
    content: public class ReliableHashMap<K extends String,V>
    typeParameters:
    - id: K
      type: a1c6f3a5
    - id: V
      type: 0a560652
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.getCount()
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  name: getCount()
  nameWithType: ReliableHashMap<K,V>.getCount()
  fullName: microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getCount()
  type: Method
  summary: >-
    <p>Gets the number of elements contained in the <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref></p>

    <p></p>
  syntax:
    content: public long getCount()
    return:
      type: 0364520f
      description: <p>The number of elements. </p>
- uid: microsoft.servicefabric.data.collections._reliable_collection
  parent: microsoft.servicefabric.data.collections
  href: microsoft.servicefabric.data.collections._reliable_collection.yml
  name: ReliableCollection
  nameWithType: ReliableCollection
  fullName: microsoft.servicefabric.data.collections.ReliableCollection
  type: Interface
  summary: <p>Defines methods for manipulating Reliable Collections. </p>
  syntax: *o1
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync()
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  name: clearAsync()
  nameWithType: ReliableHashMap<K,V>.clearAsync()
  fullName: microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.clearAsync()
  type: Method
  summary: <p>Removes all state from the <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref>, including replicated and persisted store. </p>
  syntax:
    content: public CompletableFuture<Void> clearAsync()
    return:
      type: db03ee24
      description: <p>A completable future that represents the asynchronous clear operation. </p>
