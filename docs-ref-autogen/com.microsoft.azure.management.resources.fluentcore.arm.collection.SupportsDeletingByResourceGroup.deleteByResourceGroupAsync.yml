### YamlMime:JavaMember
nameWithType: SupportsDeletingByResourceGroup.deleteByResourceGroupAsync
type: method
members:
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String resourceGroupName, String name)
  name: deleteByResourceGroupAsync(String resourceGroupName, String name)
  nameWithType: SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String resourceGroupName, String name)
  parameters:
  - description: <p>the resource group the resource is part of </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously delete a resource from Azure, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public Completable deleteByResourceGroupAsync(String resourceGroupName, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<Void> callback)
  name: deleteByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<Void> callback)
  nameWithType: SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the resource group the resource is part of </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback<Void>&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture<Void>&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously delete a resource from Azure, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync*
fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String resourceGroupName, String name)
name: deleteByResourceGroupAsync(String resourceGroupName, String name)
package: com.microsoft.azure.management.resources.fluentcore.arm.collection
metadata: {}
