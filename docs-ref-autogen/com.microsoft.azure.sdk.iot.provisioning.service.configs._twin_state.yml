### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  id: _twin_state
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.getDesiredProperties()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.getTags()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.toString()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.TwinState()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.TwinState(TwinCollection,TwinCollection)
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  langs:
  - java
  name: TwinState
  nameWithType: TwinState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState
  type: Class
  source:
    remote: &o0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinState.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinState.java
    startLine: 72
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Representation of a single Twin initial state for the Device Provisioning Service.</p>

    <p>The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state" data-throw-if-not-resolved="false">TwinState</xref> can contain one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> of <b>Tags</b>, and one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> of <b>desiredProperties</b>.</p>

    <p>Each entity in the collections can contain a associated <xref uid="" data-throw-if-not-resolved="false">TwinMetadata</xref>.</p>

    <p>These metadata are provided by the Service and contains information about the last updated date time, and version.</p>

    <p>For instance, the follow is a valid <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state" data-throw-if-not-resolved="false">TwinState</xref>, represented as <code>initialTwinState 

        </code> in the rest API. <pre><code>{

            "initialTwinState": {

                "tags":{

                    "SpeedUnity":"MPH",

                    "$metadata":{

                        "$lastUpdated":"2017-09-21T02:07:44.238Z",

                        "$lastUpdatedVersion":4,

                        "SpeedUnity":{

                            "$lastUpdated":"2017-09-21T02:07:44.238Z",

                            "$lastUpdatedVersion":4

                        }

                    },

                    "$version":4

                }

                "desiredProperties":{

                    "MaxSpeed":{

                        "Value":500,

                        "NewValue":300

                    },

                    "$metadata":{

                        "$lastUpdated":"2017-09-21T02:07:44.238Z",

                        "$lastUpdatedVersion":4,

                        "MaxSpeed":{

                            "$lastUpdated":"2017-09-21T02:07:44.238Z",

                            "$lastUpdatedVersion":4,

                            "Value":{

                                "$lastUpdated":"2017-09-21T02:07:44.238Z",

                                "$lastUpdatedVersion":4

                            },

                            "NewValue":{

                                "$lastUpdated":"2017-09-21T02:07:44.238Z",

                                "$lastUpdatedVersion":4

                            }

                        }

                    },

                    "$version":4

                }

            }

        }

        </code></pre></p>

    <p></p>
  syntax: &o1
    content: public class TwinState
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.getDesiredProperties()
  id: getDesiredProperties()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  langs:
  - java
  name: getDesiredProperties()
  nameWithType: TwinState.getDesiredProperties()
  fullName: TwinCollection com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.getDesiredProperties()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.getDesiredProperties*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinState.java
    startLine: 177
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the desiredProperties.</p>

    <p></p>
  syntax:
    content: public TwinCollection getDesiredProperties()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
      description: >-
        <p>The<code>TwinCollection 

            </code> with the desiredProperties content. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.getTags()
  id: getTags()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  langs:
  - java
  name: getTags()
  nameWithType: TwinState.getTags()
  fullName: TwinCollection com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.getTags()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.getTags*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinState.java
    startLine: 166
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the tags.</p>

    <p></p>
  syntax:
    content: public TwinCollection getTags()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
      description: >-
        <p>The<code>TwinCollection 

            </code> with the tags content. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.toString()
  id: toString()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  langs:
  - java
  name: toString()
  nameWithType: TwinState.toString()
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.toString()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.toString*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinState.java
    startLine: 189
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Creates a pretty print JSON with the content of this class and subclasses.</p>

    <p></p>
  syntax:
    content: public String toString()
    return:
      type: "26831127"
      description: >-
        <p>The<code>String 

            </code> with the pretty print JSON. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.TwinState()
  id: TwinState()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  langs:
  - java
  name: TwinState()
  nameWithType: TwinState.TwinState()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.TwinState()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.TwinState*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinState.java
    startLine: 217
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Empty constructor</p>

    <p>Used only by the tools that will deserialize this class. </p>
  syntax:
    content: protected TwinState()
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.TwinState(TwinCollection,TwinCollection)
  id: TwinState(TwinCollection,TwinCollection)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  langs:
  - java
  name: TwinState(TwinCollection tags, TwinCollection desiredProperties)
  nameWithType: TwinState.TwinState(TwinCollection tags, TwinCollection desiredProperties)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.TwinState(TwinCollection tags, TwinCollection desiredProperties)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.TwinState*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinState.java
    startLine: 115
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: "<p>CONSTRUCTOR</p>\r\n<p>This constructor creates an instance of the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state\" data-throw-if-not-resolved=\"false\">TwinState</xref> with the provided <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> tags and desired properties.</p>\r\n<p>When serialized, this class will looks like the following example: <pre><code>\"initialTwinState\": {\r\n        \"tags\":{\r\n            \"SpeedUnity\":\"MPH\",\r\n            \"$version\":4\r\n        }\r\n        \"desiredProperties\":{\r\n            \"MaxSpeed\":{\r\n                \"Value\":500,\r\n                \"NewValue\":300\r\n            },\r\n            \"$version\":4\r\n        }\r\n    }\r\n    </code> \r\n    }\r\n</pre></p>\r\n<p></p>"
  syntax:
    content: public TwinState(TwinCollection tags, TwinCollection desiredProperties)
    parameters:
    - id: tags
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
      description: >-
        <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> with the initial tags state. It can be<code>null 

            </code> . </p>
    - id: desiredProperties
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
      description: >-
        <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> with the initial desired properties. It can be<code>null 

            </code> . </p>
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.TwinState*
  name: TwinState
  nameWithType: TwinState.TwinState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.TwinState
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.getTags*
  name: getTags
  nameWithType: TwinState.getTags
  fullName: TwinCollection com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.getTags
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.getDesiredProperties*
  name: getDesiredProperties
  nameWithType: TwinState.getDesiredProperties
  fullName: TwinCollection com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.getDesiredProperties
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.toString*
  name: toString
  nameWithType: TwinState.toString
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.toString
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  type: Class
  summary: "<p>Representation of a single Twin collection for Provisioning.</p>\r\n<p>The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> is an extension of a<code>HashMap \r\n    </code> of<code>String \r\n    </code> and <code>Object \r\n    </code> that contain individual and general versioning mechanism.</p>\r\n<p>By the Twin definition, the<code>Object \r\n    </code> can contain types of<code>Boolean \r\n    </code> , <code>Number \r\n    </code> ,<code>String \r\n    </code> ,<code>Object \r\n    </code> , or a sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>\r\n<p>A <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> can contain up to 5 levels of sub TwinCollections. Once the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> is a extension of the<code>HashMap \r\n    </code> , both <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> as well as its sub-TwinCollections can be casted to Map of String and Object.</p>\r\n<p>The collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the <b>$</b> character at the beginning of the key.</p>\r\n<p>Because of the Twin metadata, the character <b>$</b> is not allowed in the entry key.</p>\r\n<p>For instance, the following JSON is a valid <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> with its metadata. <pre><code>{\r\n        \"Color\":\"White\",\r\n        \"MaxSpeed\":{\r\n            \"Value\":500,\r\n            \"NewValue\":300\r\n        },\r\n        \"$metadata\":{\r\n            \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n            \"$lastUpdatedVersion\":4,\r\n            \"Color\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n            },\r\n            \"MaxSpeed\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n                \"Value\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                },\r\n                \"NewValue\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                }\r\n            }\r\n        },\r\n        \"$version\":4\r\n    }\r\n    </code></pre></p>\r\n<p>This class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">get(Object)</xref> for <b>Color</b> will return <b>White</b> and the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata(String)\" data-throw-if-not-resolved=\"false\">getTwinMetadata(String)</xref> for <b>Color</b> will return the Object TwinMetadata that contain <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdated()</xref> that will returns the<code>Date \r\n    </code><b>2017-09-21T02:07:44.238Z</b> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdatedVersion()</xref> that will returns the<code>Integer \r\n    </code><b>4</b>.</p>\r\n<p>For the nested <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref>, you can do the same, for instance, the following code will return the value and metadata of the <b>NewValue</b> nested in <b>MaxSpeed</b>: <pre><code>// Get the value of the MaxSpeed, which is a inner TwinCollection.\r\n    TwinCollection innerMaxSpeed = (TwinCollection) twinCollection.get(\"MaxSpeed\");\r\n    \r\n    // From the inner TwinCollection, get the value of the NewValue.\r\n    Long maxSpeedNewValue = innerMaxSpeed.get(\"NewValue\");\r\n    \r\n    // As in the root TwinCollection, the inner TwinCollection contain its own metadata.\r\n    // So, get the metadata information for the inner NewValue.\r\n    TwinMetadata maxSpeedNewValueMetadata = innerMaxSpeed.getTwinMetadata(\"NewValue\");\r\n    Date newValueLastUpdated = maxSpeedNewValueMetadata.getLastUpdated(); //Shall contain `2017-09-21T02:07:44.238Z`\r\n    Integer newValueLastUpdatedVersion = maxSpeedNewValueMetadata.getLastUpdatedVersion(); //Shall contain `4`\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinCollection
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  name: TwinState
  nameWithType: TwinState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState
  type: Class
  summary: >-
    <p>Representation of a single Twin initial state for the Device Provisioning Service.</p>

    <p>The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state" data-throw-if-not-resolved="false">TwinState</xref> can contain one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> of <b>Tags</b>, and one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> of <b>desiredProperties</b>.</p>

    <p>Each entity in the collections can contain a associated <xref uid="" data-throw-if-not-resolved="false">TwinMetadata</xref>.</p>

    <p>These metadata are provided by the Service and contains information about the last updated date time, and version.</p>

    <p>For instance, the follow is a valid <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state" data-throw-if-not-resolved="false">TwinState</xref>, represented as <code>initialTwinState 

        </code> in the rest API. <pre><code>{

            "initialTwinState": {

                "tags":{

                    "SpeedUnity":"MPH",

                    "$metadata":{

                        "$lastUpdated":"2017-09-21T02:07:44.238Z",

                        "$lastUpdatedVersion":4,

                        "SpeedUnity":{

                            "$lastUpdated":"2017-09-21T02:07:44.238Z",

                            "$lastUpdatedVersion":4

                        }

                    },

                    "$version":4

                }

                "desiredProperties":{

                    "MaxSpeed":{

                        "Value":500,

                        "NewValue":300

                    },

                    "$metadata":{

                        "$lastUpdated":"2017-09-21T02:07:44.238Z",

                        "$lastUpdatedVersion":4,

                        "MaxSpeed":{

                            "$lastUpdated":"2017-09-21T02:07:44.238Z",

                            "$lastUpdatedVersion":4,

                            "Value":{

                                "$lastUpdated":"2017-09-21T02:07:44.238Z",

                                "$lastUpdatedVersion":4

                            },

                            "NewValue":{

                                "$lastUpdated":"2017-09-21T02:07:44.238Z",

                                "$lastUpdatedVersion":4

                            }

                        }

                    },

                    "$version":4

                }

            }

        }

        </code></pre></p>

    <p></p>
  syntax: *o1
