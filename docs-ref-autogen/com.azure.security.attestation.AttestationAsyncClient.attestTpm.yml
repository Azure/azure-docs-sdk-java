### YamlMime:JavaMember
uid: "com.azure.security.attestation.AttestationAsyncClient.attestTpm*"
fullName: "com.azure.security.attestation.AttestationAsyncClient.attestTpm"
name: "attestTpm"
nameWithType: "AttestationAsyncClient.attestTpm"
members:
- uid: "com.azure.security.attestation.AttestationAsyncClient.attestTpm(java.lang.String)"
  fullName: "com.azure.security.attestation.AttestationAsyncClient.attestTpm(String request)"
  name: "attestTpm(String request)"
  nameWithType: "AttestationAsyncClient.attestTpm(String request)"
  summary: "Performs TPM attestation. Processes attestation evidence from a VBS enclave, producing an attestation result.\n\nThe TPM attestation protocol is defined [here.][]\n\nUnlike OpenEnclave reports and SGX enclave quotes, TPM attestation is implemented using JSON encoded strings.\n\nThe client formats a string serialized JSON request to the service, which responds with a JSON response. The serialized JSON object exchange continues until the service responds with a JSON string with a property named `\"report\"`, whose value will be an attestation result token.\n\n**Perform the first leg of a TPM attestation operation**\n\n```java\n// The initial payload for TPM attestation is a JSON object with a property named \"payload\",\n // containing an object with a property named \"type\" whose value is \"aikcert\".\n\n String attestInitialPayload = \"{\\\"payload\\\": { \\\"type\\\": \\\"aikcert\\\" } }\";\n Mono<String> tpmResponse = client.attestTpm(attestInitialPayload);\n```\n\n\n[here.]: https://docs.microsoft.com/azure/attestation/virtualization-based-security-protocol"
  parameters:
  - description: "Attestation request for Trusted Platform Module (TPM) attestation."
    name: "request"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<String> attestTpm(String request)"
  returns:
    description: "attestation response for Trusted Platform Module (TPM) attestation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.attestation"
artifact: com.azure:azure-security-attestation:1.1.0
