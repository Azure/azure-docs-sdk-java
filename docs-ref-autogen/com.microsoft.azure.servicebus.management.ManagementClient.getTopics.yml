### YamlMime:JavaMember
nameWithType: ManagementClient.getTopics
type: method
members:
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopics()
  name: getTopics()
  nameWithType: ManagementClient.getTopics()
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the first 100 topics. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of topics present in the namespace. </p>
  syntax: public List<TopicDescription> getTopics()
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopics()
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int count, int skip)
  name: getTopics(int count, int skip)
  nameWithType: ManagementClient.getTopics(int count, int skip)
  parameters:
  - description: <p>- The number of topics to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    name: count
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of topics to skip. Defaults to 0. Cannot be negative. </p>
    name: skip
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the list of topics. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of topics present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>
  syntax: public List<TopicDescription> getTopics(int count, int skip)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int,int)
uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopics*
fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopics()
name: getTopics()
package: com.microsoft.azure.servicebus.management
metadata: {}
