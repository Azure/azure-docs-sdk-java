### YamlMime:JavaMember
uid: "com.azure.cosmos.util.CosmosPagedIterable.CosmosPagedIterable*"
fullName: "com.azure.cosmos.util.CosmosPagedIterable<T>.CosmosPagedIterable"
name: "CosmosPagedIterable"
nameWithType: "CosmosPagedIterable<T>.CosmosPagedIterable"
members:
- uid: "com.azure.cosmos.util.CosmosPagedIterable.CosmosPagedIterable(com.azure.cosmos.util.CosmosPagedFlux<T>)"
  fullName: "com.azure.cosmos.util.CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  name: "CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  nameWithType: "CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  summary: "Creates instance given <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref>."
  parameters:
  - description: "the paged flux use as iterable"
    name: "cosmosPagedFlux"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
- uid: "com.azure.cosmos.util.CosmosPagedIterable.CosmosPagedIterable(com.azure.cosmos.util.CosmosPagedFlux<T>,int)"
  fullName: "com.azure.cosmos.util.CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize)"
  name: "CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize)"
  nameWithType: "CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize)"
  summary: "Creates instance given <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref>."
  parameters:
  - description: "the paged flux use as iterable"
    name: "cosmosPagedFlux"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the preferred pageSize to be used when pulling data from the service"
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize)"
- uid: "com.azure.cosmos.util.CosmosPagedIterable.CosmosPagedIterable(com.azure.cosmos.util.CosmosPagedFlux<T>,int,int)"
  fullName: "com.azure.cosmos.util.CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize, int pagePrefetchCount)"
  name: "CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize, int pagePrefetchCount)"
  nameWithType: "CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize, int pagePrefetchCount)"
  summary: "Creates instance given <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref>."
  parameters:
  - description: "the paged flux use as iterable"
    name: "cosmosPagedFlux"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the preferred pageSize to be used when pulling data from the service"
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the number of pages prefetched from the paged flux - note that this might be interpolated\n by Reactor - for example all numbers &gt; 1 but &lt; 8 will result in at least prefetching 8 pages. See\n `reactor.util.concurrent.Queues.get(int)` for more details"
    name: "pagePrefetchCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize, int pagePrefetchCount)"
type: "constructor"
metadata: {}
package: "com.azure.cosmos.util"
artifact: com.azure:azure-cosmos:4.27.0
