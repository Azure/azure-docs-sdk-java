### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler"
fullName: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler"
name: "WebSocketConnectionHandler"
nameWithType: "WebSocketConnectionHandler"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.amqp.ConnectionHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.addTransportLayers(org.apache.qpid.proton.engine.Event,org.apache.qpid.proton.engine.impl.TransportInternal)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.create(com.microsoft.azure.servicebus.primitives.TransportType,com.microsoft.azure.servicebus.amqp.IAmqpConnection)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getMaxFrameSize()"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getMessagingFactory()"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getOutboundSocketHostName()"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getOutboundSocketPort()"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getProtocolPort()"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.notifyTransportErrors(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onTransportError(org.apache.qpid.proton.engine.Event)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)"
- "org.apache.qpid.proton.engine.BaseHandler.children()"
- "org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)"
- "org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)"
- "org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkLocalClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionLocalClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)"
- "org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)"
syntax: "public class WebSocketConnectionHandler extends ConnectionHandler"
constructors:
- uid: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler.WebSocketConnectionHandler(com.microsoft.azure.servicebus.amqp.IAmqpConnection)"
  fullName: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler.WebSocketConnectionHandler(IAmqpConnection messagingFactory)"
  name: "WebSocketConnectionHandler(IAmqpConnection messagingFactory)"
  nameWithType: "WebSocketConnectionHandler.WebSocketConnectionHandler(IAmqpConnection messagingFactory)"
  parameters:
  - name: "messagingFactory"
    type: "<xref href=\"com.microsoft.azure.servicebus.amqp.IAmqpConnection?alt=com.microsoft.azure.servicebus.amqp.IAmqpConnection&text=IAmqpConnection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WebSocketConnectionHandler(IAmqpConnection messagingFactory)"
methods:
- uid: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler.addTransportLayers(org.apache.qpid.proton.engine.Event,org.apache.qpid.proton.engine.impl.TransportInternal)"
  fullName: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler.addTransportLayers(Event event, TransportInternal transport)"
  name: "addTransportLayers(Event event, TransportInternal transport)"
  nameWithType: "WebSocketConnectionHandler.addTransportLayers(Event event, TransportInternal transport)"
  overridden: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.addTransportLayers(org.apache.qpid.proton.engine.Event,org.apache.qpid.proton.engine.impl.TransportInternal)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  - name: "transport"
    type: "<xref href=\"org.apache.qpid.proton.engine.impl.TransportInternal?alt=org.apache.qpid.proton.engine.impl.TransportInternal&text=TransportInternal\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void addTransportLayers(Event event, TransportInternal transport)"
- uid: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler.getMaxFrameSize()"
  fullName: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler.getMaxFrameSize()"
  name: "getMaxFrameSize()"
  nameWithType: "WebSocketConnectionHandler.getMaxFrameSize()"
  overridden: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getMaxFrameSize()"
  syntax: "public int getMaxFrameSize()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler.getProtocolPort()"
  fullName: "com.microsoft.azure.servicebus.amqp.WebSocketConnectionHandler.getProtocolPort()"
  name: "getProtocolPort()"
  nameWithType: "WebSocketConnectionHandler.getProtocolPort()"
  overridden: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getProtocolPort()"
  syntax: "public int getProtocolPort()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.servicebus.amqp"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
