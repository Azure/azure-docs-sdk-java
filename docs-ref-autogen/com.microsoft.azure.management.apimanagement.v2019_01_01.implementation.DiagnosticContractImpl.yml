### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  id: "DiagnosticContractImpl"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  children:
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl(com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl(java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.alwaysLog()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.backend()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.createResourceAsync()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.enableHttpCorrelationHeaders()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.frontend()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.getInnerAsync()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.id()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.isInCreateMode()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.loggerId()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.manager()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.name()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.sampling()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.type()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.updateResourceAsync()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withAlwaysLog(com.microsoft.azure.management.apimanagement.v2019_01_01.AlwaysLog)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withBackend(com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withEnableHttpCorrelationHeaders(java.lang.Boolean)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withFrontend(com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withIfMatch(java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withLoggerId(java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withResourceGroupName(java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withSampling(com.microsoft.azure.management.apimanagement.v2019_01_01.SamplingSettings)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withServiceName(java.lang.String)"
  langs:
  - "java"
  name: "DiagnosticContractImpl"
  nameWithType: "DiagnosticContractImpl"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  type: "Class"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: " class DiagnosticContractImpl extends CreatableUpdatableImpl<DiagnosticContract,DiagnosticContractInner,DiagnosticContractImpl> implements DiagnosticContract, DiagnosticContract.Definition, DiagnosticContract.Update"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.arm.model.implementation.IndexableImpl"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableImpl"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl"
  implements:
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract.Definition"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract.Update"
  inheritedMembers:
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.<T>taskResult(java.lang.String)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.afterPostRunAsync(boolean)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.apply()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.create()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.isHot()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.name()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.taskGroup()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.update()"
  - "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.updateResourceAsync()"
  - "com.microsoft.azure.arm.model.implementation.IndexableImpl.key()"
  - "com.microsoft.azure.arm.model.implementation.IndexableImpl.toString()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.getInnerAsync()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.inner()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refresh()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refreshAsync()"
  - "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl(com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager)"
  id: "DiagnosticContractImpl(com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "DiagnosticContractImpl(DiagnosticContractInner inner, ApiManagementManager manager)"
  nameWithType: "DiagnosticContractImpl.DiagnosticContractImpl(DiagnosticContractInner inner, ApiManagementManager manager)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl(DiagnosticContractInner inner, ApiManagementManager manager)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: " DiagnosticContractImpl(DiagnosticContractInner inner, ApiManagementManager manager)"
    parameters:
    - id: "inner"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner"
    - id: "manager"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl(java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager)"
  id: "DiagnosticContractImpl(java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "DiagnosticContractImpl(String name, ApiManagementManager manager)"
  nameWithType: "DiagnosticContractImpl.DiagnosticContractImpl(String name, ApiManagementManager manager)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl(String name, ApiManagementManager manager)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: " DiagnosticContractImpl(String name, ApiManagementManager manager)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "manager"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.alwaysLog()"
  id: "alwaysLog()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "alwaysLog()"
  nameWithType: "DiagnosticContractImpl.alwaysLog()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.alwaysLog()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.alwaysLog*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public AlwaysLog alwaysLog()"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.AlwaysLog"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.backend()"
  id: "backend()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "backend()"
  nameWithType: "DiagnosticContractImpl.backend()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.backend()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.backend*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public PipelineDiagnosticSettings backend()"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.createResourceAsync()"
  id: "createResourceAsync()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "createResourceAsync()"
  nameWithType: "DiagnosticContractImpl.createResourceAsync()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.createResourceAsync()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.createResourceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public Observable<DiagnosticContract> createResourceAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract>"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.enableHttpCorrelationHeaders()"
  id: "enableHttpCorrelationHeaders()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "enableHttpCorrelationHeaders()"
  nameWithType: "DiagnosticContractImpl.enableHttpCorrelationHeaders()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.enableHttpCorrelationHeaders()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.enableHttpCorrelationHeaders*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public Boolean enableHttpCorrelationHeaders()"
    return:
      type: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.frontend()"
  id: "frontend()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "frontend()"
  nameWithType: "DiagnosticContractImpl.frontend()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.frontend()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.frontend*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public PipelineDiagnosticSettings frontend()"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.getInnerAsync()"
  id: "getInnerAsync()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "getInnerAsync()"
  nameWithType: "DiagnosticContractImpl.getInnerAsync()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.getInnerAsync()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.getInnerAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "protected Observable<DiagnosticContractInner> getInnerAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner>"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.id()"
  id: "id()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "id()"
  nameWithType: "DiagnosticContractImpl.id()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.id()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.id*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public String id()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.isInCreateMode()"
  id: "isInCreateMode()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "isInCreateMode()"
  nameWithType: "DiagnosticContractImpl.isInCreateMode()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.isInCreateMode()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.isInCreateMode*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public boolean isInCreateMode()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.loggerId()"
  id: "loggerId()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "loggerId()"
  nameWithType: "DiagnosticContractImpl.loggerId()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.loggerId()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.loggerId*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public String loggerId()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.manager()"
  id: "manager()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "manager()"
  nameWithType: "DiagnosticContractImpl.manager()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.manager()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.manager*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public ApiManagementManager manager()"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.name()"
  id: "name()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "name()"
  nameWithType: "DiagnosticContractImpl.name()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.name()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.name*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public String name()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.sampling()"
  id: "sampling()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "sampling()"
  nameWithType: "DiagnosticContractImpl.sampling()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.sampling()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.sampling*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public SamplingSettings sampling()"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.SamplingSettings"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.type()"
  id: "type()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "type()"
  nameWithType: "DiagnosticContractImpl.type()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.type()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.type*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public String type()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.updateResourceAsync()"
  id: "updateResourceAsync()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "updateResourceAsync()"
  nameWithType: "DiagnosticContractImpl.updateResourceAsync()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.updateResourceAsync()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.updateResourceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public Observable<DiagnosticContract> updateResourceAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract>"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withAlwaysLog(com.microsoft.azure.management.apimanagement.v2019_01_01.AlwaysLog)"
  id: "withAlwaysLog(com.microsoft.azure.management.apimanagement.v2019_01_01.AlwaysLog)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withAlwaysLog(AlwaysLog alwaysLog)"
  nameWithType: "DiagnosticContractImpl.withAlwaysLog(AlwaysLog alwaysLog)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withAlwaysLog(AlwaysLog alwaysLog)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withAlwaysLog*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withAlwaysLog(AlwaysLog alwaysLog)"
    parameters:
    - id: "alwaysLog"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.AlwaysLog"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withBackend(com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings)"
  id: "withBackend(com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withBackend(PipelineDiagnosticSettings backend)"
  nameWithType: "DiagnosticContractImpl.withBackend(PipelineDiagnosticSettings backend)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withBackend(PipelineDiagnosticSettings backend)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withBackend*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withBackend(PipelineDiagnosticSettings backend)"
    parameters:
    - id: "backend"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withEnableHttpCorrelationHeaders(java.lang.Boolean)"
  id: "withEnableHttpCorrelationHeaders(java.lang.Boolean)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withEnableHttpCorrelationHeaders(Boolean enableHttpCorrelationHeaders)"
  nameWithType: "DiagnosticContractImpl.withEnableHttpCorrelationHeaders(Boolean enableHttpCorrelationHeaders)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withEnableHttpCorrelationHeaders(Boolean enableHttpCorrelationHeaders)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withEnableHttpCorrelationHeaders*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withEnableHttpCorrelationHeaders(Boolean enableHttpCorrelationHeaders)"
    parameters:
    - id: "enableHttpCorrelationHeaders"
      type: "java.lang.Boolean"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withFrontend(com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings)"
  id: "withFrontend(com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withFrontend(PipelineDiagnosticSettings frontend)"
  nameWithType: "DiagnosticContractImpl.withFrontend(PipelineDiagnosticSettings frontend)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withFrontend(PipelineDiagnosticSettings frontend)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withFrontend*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withFrontend(PipelineDiagnosticSettings frontend)"
    parameters:
    - id: "frontend"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withIfMatch(java.lang.String)"
  id: "withIfMatch(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withIfMatch(String ifMatch)"
  nameWithType: "DiagnosticContractImpl.withIfMatch(String ifMatch)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withIfMatch(String ifMatch)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withIfMatch*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withIfMatch(String ifMatch)"
    parameters:
    - id: "ifMatch"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withLoggerId(java.lang.String)"
  id: "withLoggerId(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withLoggerId(String loggerId)"
  nameWithType: "DiagnosticContractImpl.withLoggerId(String loggerId)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withLoggerId(String loggerId)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withLoggerId*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withLoggerId(String loggerId)"
    parameters:
    - id: "loggerId"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withResourceGroupName(java.lang.String)"
  id: "withResourceGroupName(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withResourceGroupName(String resourceGroupName)"
  nameWithType: "DiagnosticContractImpl.withResourceGroupName(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withResourceGroupName(String resourceGroupName)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withResourceGroupName*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withResourceGroupName(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withSampling(com.microsoft.azure.management.apimanagement.v2019_01_01.SamplingSettings)"
  id: "withSampling(com.microsoft.azure.management.apimanagement.v2019_01_01.SamplingSettings)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withSampling(SamplingSettings sampling)"
  nameWithType: "DiagnosticContractImpl.withSampling(SamplingSettings sampling)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withSampling(SamplingSettings sampling)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withSampling*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withSampling(SamplingSettings sampling)"
    parameters:
    - id: "sampling"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.SamplingSettings"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withServiceName(java.lang.String)"
  id: "withServiceName(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  langs:
  - "java"
  name: "withServiceName(String serviceName)"
  nameWithType: "DiagnosticContractImpl.withServiceName(String serviceName)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withServiceName(String serviceName)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withServiceName*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public DiagnosticContractImpl withServiceName(String serviceName)"
    parameters:
    - id: "serviceName"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager"
  name: "ApiManagementManager"
  nameWithType: "ApiManagementManager"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementManager"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl*"
  name: "DiagnosticContractImpl"
  nameWithType: "DiagnosticContractImpl.DiagnosticContractImpl"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.DiagnosticContractImpl"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner"
  name: "DiagnosticContractInner"
  nameWithType: "DiagnosticContractInner"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.manager*"
  name: "manager"
  nameWithType: "DiagnosticContractImpl.manager"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.manager"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract"
    name: "DiagnosticContract"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.createResourceAsync*"
  name: "createResourceAsync"
  nameWithType: "DiagnosticContractImpl.createResourceAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.createResourceAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.updateResourceAsync*"
  name: "updateResourceAsync"
  nameWithType: "DiagnosticContractImpl.updateResourceAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.updateResourceAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner"
    name: "DiagnosticContractInner"
    fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.getInnerAsync*"
  name: "getInnerAsync"
  nameWithType: "DiagnosticContractImpl.getInnerAsync"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.getInnerAsync"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.isInCreateMode*"
  name: "isInCreateMode"
  nameWithType: "DiagnosticContractImpl.isInCreateMode"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.isInCreateMode"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.AlwaysLog"
  name: "AlwaysLog"
  nameWithType: "AlwaysLog"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.AlwaysLog"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.alwaysLog*"
  name: "alwaysLog"
  nameWithType: "DiagnosticContractImpl.alwaysLog"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.alwaysLog"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings"
  name: "PipelineDiagnosticSettings"
  nameWithType: "PipelineDiagnosticSettings"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.PipelineDiagnosticSettings"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.backend*"
  name: "backend"
  nameWithType: "DiagnosticContractImpl.backend"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.backend"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.enableHttpCorrelationHeaders*"
  name: "enableHttpCorrelationHeaders"
  nameWithType: "DiagnosticContractImpl.enableHttpCorrelationHeaders"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.enableHttpCorrelationHeaders"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.frontend*"
  name: "frontend"
  nameWithType: "DiagnosticContractImpl.frontend"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.frontend"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.id*"
  name: "id"
  nameWithType: "DiagnosticContractImpl.id"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.id"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.loggerId*"
  name: "loggerId"
  nameWithType: "DiagnosticContractImpl.loggerId"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.loggerId"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.name*"
  name: "name"
  nameWithType: "DiagnosticContractImpl.name"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.name"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.SamplingSettings"
  name: "SamplingSettings"
  nameWithType: "SamplingSettings"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.SamplingSettings"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.sampling*"
  name: "sampling"
  nameWithType: "DiagnosticContractImpl.sampling"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.sampling"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.type*"
  name: "type"
  nameWithType: "DiagnosticContractImpl.type"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.type"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withResourceGroupName*"
  name: "withResourceGroupName"
  nameWithType: "DiagnosticContractImpl.withResourceGroupName"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withResourceGroupName"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withServiceName*"
  name: "withServiceName"
  nameWithType: "DiagnosticContractImpl.withServiceName"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withServiceName"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withLoggerId*"
  name: "withLoggerId"
  nameWithType: "DiagnosticContractImpl.withLoggerId"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withLoggerId"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withIfMatch*"
  name: "withIfMatch"
  nameWithType: "DiagnosticContractImpl.withIfMatch"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withIfMatch"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withAlwaysLog*"
  name: "withAlwaysLog"
  nameWithType: "DiagnosticContractImpl.withAlwaysLog"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withAlwaysLog"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withBackend*"
  name: "withBackend"
  nameWithType: "DiagnosticContractImpl.withBackend"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withBackend"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withEnableHttpCorrelationHeaders*"
  name: "withEnableHttpCorrelationHeaders"
  nameWithType: "DiagnosticContractImpl.withEnableHttpCorrelationHeaders"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withEnableHttpCorrelationHeaders"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withFrontend*"
  name: "withFrontend"
  nameWithType: "DiagnosticContractImpl.withFrontend"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withFrontend"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withSampling*"
  name: "withSampling"
  nameWithType: "DiagnosticContractImpl.withSampling"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl.withSampling"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl<com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl>"
  name: "CreatableUpdatableImpl<DiagnosticContract,DiagnosticContractInner,DiagnosticContractImpl>"
  nameWithType: "CreatableUpdatableImpl<DiagnosticContract,DiagnosticContractInner,DiagnosticContractImpl>"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl<com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl>"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract.Definition"
  name: "DiagnosticContract.Definition"
  nameWithType: "DiagnosticContract.Definition"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract.Definition"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract"
  name: "DiagnosticContract"
  nameWithType: "DiagnosticContract"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract.Update"
  name: "DiagnosticContract.Update"
  nameWithType: "DiagnosticContract.Update"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract.Update"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableImpl.toString()"
  name: "IndexableImpl.toString()"
  nameWithType: "IndexableImpl.toString()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableImpl.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
  name: "CreatableUpdatableImpl.addPostRunDependent(TaskGroup.HasTaskGroup)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(TaskGroup.HasTaskGroup)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.inner()"
  name: "IndexableRefreshableWrapperImpl.inner()"
  nameWithType: "IndexableRefreshableWrapperImpl.inner()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.inner()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
  name: "CreatableUpdatableImpl.addDependency(TaskGroup.HasTaskGroup)"
  nameWithType: "CreatableUpdatableImpl.addDependency(TaskGroup.HasTaskGroup)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.TaskGroup.HasTaskGroup)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addDependency(Creatable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addDependency(Creatable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addDependency(Executable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addDependency(Executable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
  name: "IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
  nameWithType: "IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.setInner(InnerModelT)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
  name: "CreatableUpdatableImpl.createAsync(ServiceCallback<FluentModelT>)"
  nameWithType: "CreatableUpdatableImpl.createAsync(ServiceCallback<FluentModelT>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.taskGroup()"
  name: "CreatableUpdatableImpl.taskGroup()"
  nameWithType: "CreatableUpdatableImpl.taskGroup()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.taskGroup()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
  name: "CreatableUpdatableImpl.addPostRunDependent(FunctionalTaskItem)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(FunctionalTaskItem)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.name()"
  name: "CreatableUpdatableImpl.name()"
  nameWithType: "CreatableUpdatableImpl.name()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.name()"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refreshAsync()"
  name: "IndexableRefreshableWrapperImpl.refreshAsync()"
  nameWithType: "IndexableRefreshableWrapperImpl.refreshAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refreshAsync()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableImpl.key()"
  name: "IndexableImpl.key()"
  nameWithType: "IndexableImpl.key()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableImpl.key()"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.getInnerAsync()"
  name: "IndexableRefreshableWrapperImpl.getInnerAsync()"
  nameWithType: "IndexableRefreshableWrapperImpl.getInnerAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.getInnerAsync()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refresh()"
  name: "IndexableRefreshableWrapperImpl.refresh()"
  nameWithType: "IndexableRefreshableWrapperImpl.refresh()"
  fullName: "com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl.refresh()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.create()"
  name: "CreatableUpdatableImpl.create()"
  nameWithType: "CreatableUpdatableImpl.create()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.create()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.afterPostRunAsync(boolean)"
  name: "CreatableUpdatableImpl.afterPostRunAsync(boolean)"
  nameWithType: "CreatableUpdatableImpl.afterPostRunAsync(boolean)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.afterPostRunAsync(boolean)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
  name: "CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
  nameWithType: "CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.beforeGroupCreateOrUpdate()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addPostRunDependent(Appliable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Appliable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.<T>taskResult(java.lang.String)"
  name: "CreatableUpdatableImpl.<T>taskResult(String)"
  nameWithType: "CreatableUpdatableImpl.<T>taskResult(String)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.<T>taskResult(java.lang.String)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.isHot()"
  name: "CreatableUpdatableImpl.isHot()"
  nameWithType: "CreatableUpdatableImpl.isHot()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.isHot()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync()"
  name: "CreatableUpdatableImpl.createAsync()"
  nameWithType: "CreatableUpdatableImpl.createAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
  name: "CreatableUpdatableImpl.addDependency(FunctionalTaskItem)"
  nameWithType: "CreatableUpdatableImpl.addDependency(FunctionalTaskItem)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.dag.FunctionalTaskItem)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addeDependency(Appliable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addeDependency(Appliable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
  name: "CreatableUpdatableImpl.applyAsync(ServiceCallback<FluentModelT>)"
  nameWithType: "CreatableUpdatableImpl.applyAsync(ServiceCallback<FluentModelT>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback<FluentModelT>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addPostRunDependent(Creatable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Creatable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync()"
  name: "CreatableUpdatableImpl.applyAsync()"
  nameWithType: "CreatableUpdatableImpl.applyAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.update()"
  name: "CreatableUpdatableImpl.update()"
  nameWithType: "CreatableUpdatableImpl.update()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.update()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.apply()"
  name: "CreatableUpdatableImpl.apply()"
  nameWithType: "CreatableUpdatableImpl.apply()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.apply()"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "CreatableUpdatableImpl.addPostRunDependent(Executable<? extends Indexable>)"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Executable<? extends Indexable>)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable<? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
  name: "CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
  nameWithType: "CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.innerToFluentMap(FluentModelImplT)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.updateResourceAsync()"
  name: "CreatableUpdatableImpl.updateResourceAsync()"
  nameWithType: "CreatableUpdatableImpl.updateResourceAsync()"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.updateResourceAsync()"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl"
  name: "CreatableUpdatableImpl"
  nameWithType: "CreatableUpdatableImpl"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
  name: "DiagnosticContract,DiagnosticContractInner,DiagnosticContractImpl"
  nameWithType: "DiagnosticContract,DiagnosticContractInner,DiagnosticContractImpl"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.DiagnosticContract,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractInner,com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.DiagnosticContractImpl"
- uid: "? extends com.microsoft.azure.arm.model.Indexable>)"
  name: "? extends Indexable>)"
  nameWithType: "? extends Indexable>)"
  fullName: "? extends com.microsoft.azure.arm.model.Indexable>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable"
  name: "CreatableUpdatableImpl.addDependency(Creatable"
  nameWithType: "CreatableUpdatableImpl.addDependency(Creatable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Creatable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable"
  name: "CreatableUpdatableImpl.addDependency(Executable"
  nameWithType: "CreatableUpdatableImpl.addDependency(Executable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addDependency(com.microsoft.azure.arm.model.Executable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback"
  name: "CreatableUpdatableImpl.createAsync(ServiceCallback"
  nameWithType: "CreatableUpdatableImpl.createAsync(ServiceCallback"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.createAsync(com.microsoft.rest.ServiceCallback"
- uid: "FluentModelT>)"
  name: "FluentModelT>)"
  nameWithType: "FluentModelT>)"
  fullName: "FluentModelT>)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable"
  name: "CreatableUpdatableImpl.addPostRunDependent(Appliable"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Appliable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Appliable"
- uid: "T>taskResult(java.lang.String)"
  name: "T>taskResult(String)"
  nameWithType: "T>taskResult(String)"
  fullName: "T>taskResult(java.lang.String)"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl."
  name: "CreatableUpdatableImpl."
  nameWithType: "CreatableUpdatableImpl."
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl."
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable"
  name: "CreatableUpdatableImpl.addeDependency(Appliable"
  nameWithType: "CreatableUpdatableImpl.addeDependency(Appliable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addeDependency(com.microsoft.azure.arm.model.Appliable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback"
  name: "CreatableUpdatableImpl.applyAsync(ServiceCallback"
  nameWithType: "CreatableUpdatableImpl.applyAsync(ServiceCallback"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.applyAsync(com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable"
  name: "CreatableUpdatableImpl.addPostRunDependent(Creatable"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Creatable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Creatable"
- uid: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable"
  name: "CreatableUpdatableImpl.addPostRunDependent(Executable"
  nameWithType: "CreatableUpdatableImpl.addPostRunDependent(Executable"
  fullName: "com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl.addPostRunDependent(com.microsoft.azure.arm.model.Executable"
