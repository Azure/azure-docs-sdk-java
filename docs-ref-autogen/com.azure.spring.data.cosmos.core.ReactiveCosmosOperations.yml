### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations"
fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations"
name: "ReactiveCosmosOperations"
nameWithType: "ReactiveCosmosOperations"
summary: "Operation class of reactive cosmos"
syntax: "public interface **ReactiveCosmosOperations**"
methods:
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<S,T>deleteEntities(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,?>,java.lang.Iterable<S>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<S,T>deleteEntities(CosmosEntityInformation<T,?> entityInformation, Iterable<S> entities)"
  name: "<S,T>deleteEntities(CosmosEntityInformation<T,?> entityInformation, Iterable<S> entities)"
  nameWithType: "ReactiveCosmosOperations.<S,T>deleteEntities(CosmosEntityInformation<T,?> entityInformation, Iterable<S> entities)"
  summary: "Delete all items with bulk."
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "entityInformation"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,?&gt;"
  - description: "must not be null"
    name: "entities"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Void> <S,T>deleteEntities(CosmosEntityInformation<T,?> entityInformation, Iterable<S> entities)"
  desc: "Delete all items with bulk."
  returns:
    description: "void Mono"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<S,T>deleteEntities(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,?>,reactor.core.publisher.Flux<S>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<S,T>deleteEntities(CosmosEntityInformation<T,?> entityInformation, Flux<S> entities)"
  name: "<S,T>deleteEntities(CosmosEntityInformation<T,?> entityInformation, Flux<S> entities)"
  nameWithType: "ReactiveCosmosOperations.<S,T>deleteEntities(CosmosEntityInformation<T,?> entityInformation, Flux<S> entities)"
  summary: "Delete all items with bulk."
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "entityInformation"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,?&gt;"
  - description: "must not be null"
    name: "entities"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Void> <S,T>deleteEntities(CosmosEntityInformation<T,?> entityInformation, Flux<S> entities)"
  desc: "Delete all items with bulk."
  returns:
    description: "void Mono"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<S,T>insertAll(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,?>,java.lang.Iterable<S>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<S,T>insertAll(CosmosEntityInformation<T,?> entityInformation, Iterable<S> entities)"
  name: "<S,T>insertAll(CosmosEntityInformation<T,?> entityInformation, Iterable<S> entities)"
  nameWithType: "ReactiveCosmosOperations.<S,T>insertAll(CosmosEntityInformation<T,?> entityInformation, Iterable<S> entities)"
  summary: "Insert all items with bulk."
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "entityInformation"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,?&gt;"
  - description: "must not be null"
    name: "entities"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Flux<S> <S,T>insertAll(CosmosEntityInformation<T,?> entityInformation, Iterable<S> entities)"
  desc: "Insert all items with bulk."
  returns:
    description: "Flux of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<S,T>insertAll(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,?>,reactor.core.publisher.Flux<S>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<S,T>insertAll(CosmosEntityInformation<T,?> entityInformation, Flux<S> entities)"
  name: "<S,T>insertAll(CosmosEntityInformation<T,?> entityInformation, Flux<S> entities)"
  nameWithType: "ReactiveCosmosOperations.<S,T>insertAll(CosmosEntityInformation<T,?> entityInformation, Flux<S> entities)"
  summary: "Insert all items with bulk."
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "entityInformation"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,?&gt;"
  - description: "must not be null"
    name: "entities"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Flux<S> <S,T>insertAll(CosmosEntityInformation<T,?> entityInformation, Flux<S> entities)"
  desc: "Insert all items with bulk."
  returns:
    description: "Flux of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>delete(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.delete(CosmosQuery query, Class<T> domainType, String containerName)"
  name: "delete(CosmosQuery query, Class<T> domainType, String containerName)"
  nameWithType: "ReactiveCosmosOperations.delete(CosmosQuery query, Class<T> domainType, String containerName)"
  summary: "Delete items matching query"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Flux<T> <T>delete(CosmosQuery query, Class<T> domainType, String containerName)"
  desc: "Delete items matching query"
  returns:
    description: "Flux of results"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>deleteEntity(java.lang.String,T)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteEntity(String containerName, T entity)"
  name: "deleteEntity(String containerName, T entity)"
  nameWithType: "ReactiveCosmosOperations.deleteEntity(String containerName, T entity)"
  summary: "Delete using entity"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the entity object"
    name: "entity"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> <T>deleteEntity(String containerName, T entity)"
  desc: "Delete using entity"
  returns:
    description: "void Mono"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>find(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.find(CosmosQuery query, Class<T> domainType, String containerName)"
  name: "find(CosmosQuery query, Class<T> domainType, String containerName)"
  nameWithType: "ReactiveCosmosOperations.find(CosmosQuery query, Class<T> domainType, String containerName)"
  summary: "Find items"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Flux<T> <T>find(CosmosQuery query, Class<T> domainType, String containerName)"
  desc: "Find items"
  returns:
    description: "Flux of results"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findAll(com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.findAll(PartitionKey partitionKey, Class<T> domainType)"
  name: "findAll(PartitionKey partitionKey, Class<T> domainType)"
  nameWithType: "ReactiveCosmosOperations.findAll(PartitionKey partitionKey, Class<T> domainType)"
  summary: "Find all items in a given container with partition key"
  modifiers:
  - "abstract"
  parameters:
  - description: "partition Key"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domainType"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Flux<T> <T>findAll(PartitionKey partitionKey, Class<T> domainType)"
  desc: "Find all items in a given container with partition key"
  returns:
    description: "Flux of results"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findAll(java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.findAll(Class<T> domainType)"
  name: "findAll(Class<T> domainType)"
  nameWithType: "ReactiveCosmosOperations.findAll(Class<T> domainType)"
  summary: "Find all items in a given container"
  modifiers:
  - "abstract"
  parameters:
  - description: "the domainType"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Flux<T> <T>findAll(Class<T> domainType)"
  desc: "Find all items in a given container"
  returns:
    description: "Flux of results"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findAll(java.lang.String,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.findAll(String containerName, Class<T> domainType)"
  name: "findAll(String containerName, Class<T> domainType)"
  nameWithType: "ReactiveCosmosOperations.findAll(String containerName, Class<T> domainType)"
  summary: "Find all items in a given container"
  modifiers:
  - "abstract"
  parameters:
  - description: "the containerName"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the domainType"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Flux<T> <T>findAll(String containerName, Class<T> domainType)"
  desc: "Find all items in a given container"
  returns:
    description: "Flux of results"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findById(java.lang.Object,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.findById(Object id, Class<T> domainType)"
  name: "findById(Object id, Class<T> domainType)"
  nameWithType: "ReactiveCosmosOperations.findById(Object id, Class<T> domainType)"
  summary: "Find by id"
  modifiers:
  - "abstract"
  parameters:
  - description: "the id"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "the domainType"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<T> <T>findById(Object id, Class<T> domainType)"
  desc: "Find by id"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findById(java.lang.Object,java.lang.Class<T>,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  name: "findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  nameWithType: "ReactiveCosmosOperations.findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  summary: "Find by id"
  modifiers:
  - "abstract"
  parameters:
  - description: "the id"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "partition Key"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> <T>findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  desc: "Find by id"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findById(java.lang.String,java.lang.Object,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.findById(String containerName, Object id, Class<T> domainType)"
  name: "findById(String containerName, Object id, Class<T> domainType)"
  nameWithType: "ReactiveCosmosOperations.findById(String containerName, Object id, Class<T> domainType)"
  summary: "Find by id"
  modifiers:
  - "abstract"
  parameters:
  - description: "the containername"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the id"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<T> <T>findById(String containerName, Object id, Class<T> domainType)"
  desc: "Find by id"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>insert(T,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.insert(T objectToSave, PartitionKey partitionKey)"
  name: "insert(T objectToSave, PartitionKey partitionKey)"
  nameWithType: "ReactiveCosmosOperations.insert(T objectToSave, PartitionKey partitionKey)"
  summary: "Insert"
  modifiers:
  - "abstract"
  parameters:
  - description: "the object to save"
    name: "objectToSave"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> <T>insert(T objectToSave, PartitionKey partitionKey)"
  desc: "Insert"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>insert(java.lang.String,T)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.insert(String containerName, T objectToSave)"
  name: "insert(String containerName, T objectToSave)"
  nameWithType: "ReactiveCosmosOperations.insert(String containerName, T objectToSave)"
  summary: "Insert"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "must not be null"
    name: "objectToSave"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> <T>insert(String containerName, T objectToSave)"
  desc: "Insert"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>insert(java.lang.String,T,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.insert(String containerName, T objectToSave, PartitionKey partitionKey)"
  name: "insert(String containerName, T objectToSave, PartitionKey partitionKey)"
  nameWithType: "ReactiveCosmosOperations.insert(String containerName, T objectToSave, PartitionKey partitionKey)"
  summary: "Insert"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object to save"
    name: "objectToSave"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> <T>insert(String containerName, T objectToSave, PartitionKey partitionKey)"
  desc: "Insert"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>patch(java.lang.Object,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>,com.azure.cosmos.models.CosmosPatchOperations)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations)"
  name: "patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations)"
  nameWithType: "ReactiveCosmosOperations.patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations)"
  summary: "patches item"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "must not be null, max operations is 10"
    name: "patchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> <T>patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations)"
  desc: "patches item"
  returns:
    description: "the patched item"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>patch(java.lang.Object,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>,com.azure.cosmos.models.CosmosPatchOperations,com.azure.cosmos.models.CosmosPatchItemRequestOptions)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  name: "patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  nameWithType: "ReactiveCosmosOperations.patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  summary: "patches item"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "must not be null, max operations is 10"
    name: "patchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional CosmosPatchItemRequestOptions, e.g. options.setFilterPredicate(\"FROM products p WHERE p.used = false\");"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchItemRequestOptions?alt=com.azure.cosmos.models.CosmosPatchItemRequestOptions&text=CosmosPatchItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> <T>patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  desc: "patches item"
  returns:
    description: "Mono with the patched item"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>runQuery(com.azure.cosmos.models.SqlQuerySpec,java.lang.Class<?>,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.runQuery(SqlQuerySpec querySpec, Class<?> domainType, Class<T> returnType)"
  name: "runQuery(SqlQuerySpec querySpec, Class<?> domainType, Class<T> returnType)"
  nameWithType: "ReactiveCosmosOperations.runQuery(SqlQuerySpec querySpec, Class<?> domainType, Class<T> returnType)"
  summary: "Run the query."
  modifiers:
  - "abstract"
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  - description: "the return type"
    name: "returnType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Flux<T> <T>runQuery(SqlQuerySpec querySpec, Class<?> domainType, Class<T> returnType)"
  desc: "Run the query."
  returns:
    description: "the flux"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>runQuery(com.azure.cosmos.models.SqlQuerySpec,org.springframework.data.domain.Sort,java.lang.Class<?>,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.runQuery(SqlQuerySpec querySpec, Sort sort, Class<?> domainType, Class<T> returnType)"
  name: "runQuery(SqlQuerySpec querySpec, Sort sort, Class<?> domainType, Class<T> returnType)"
  nameWithType: "ReactiveCosmosOperations.runQuery(SqlQuerySpec querySpec, Sort sort, Class<?> domainType, Class<T> returnType)"
  summary: "Run the query."
  modifiers:
  - "abstract"
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the sort order"
    name: "sort"
    type: "<xref href=\"org.springframework.data.domain.Sort?alt=org.springframework.data.domain.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  - description: "the return type"
    name: "returnType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Flux<T> <T>runQuery(SqlQuerySpec querySpec, Sort sort, Class<?> domainType, Class<T> returnType)"
  desc: "Run the query."
  returns:
    description: "the flux"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>upsert(T)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.upsert(T object)"
  name: "upsert(T object)"
  nameWithType: "ReactiveCosmosOperations.upsert(T object)"
  summary: "Upsert an item with partition key"
  modifiers:
  - "abstract"
  parameters:
  - description: "the object to upsert"
    name: "object"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> <T>upsert(T object)"
  desc: "Upsert an item with partition key"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>upsert(java.lang.String,T)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.upsert(String containerName, T object)"
  name: "upsert(String containerName, T object)"
  nameWithType: "ReactiveCosmosOperations.upsert(String containerName, T object)"
  summary: "Upsert an item to container with partition key"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object to save"
    name: "object"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> <T>upsert(String containerName, T object)"
  desc: "Upsert an item to container with partition key"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.count(com.azure.cosmos.models.SqlQuerySpec,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.count(SqlQuerySpec querySpec, String containerName)"
  name: "count(SqlQuerySpec querySpec, String containerName)"
  nameWithType: "ReactiveCosmosOperations.count(SqlQuerySpec querySpec, String containerName)"
  summary: "Count"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Long> count(SqlQuerySpec querySpec, String containerName)"
  desc: "Count"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.count(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.count(CosmosQuery query, String containerName)"
  name: "count(CosmosQuery query, String containerName)"
  nameWithType: "ReactiveCosmosOperations.count(CosmosQuery query, String containerName)"
  summary: "Count"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Long> count(CosmosQuery query, String containerName)"
  desc: "Count"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.count(java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.count(String containerName)"
  name: "count(String containerName)"
  nameWithType: "ReactiveCosmosOperations.count(String containerName)"
  summary: "Count"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Long> count(String containerName)"
  desc: "Count"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.createContainerIfNotExists(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<?,?>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  name: "createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  nameWithType: "ReactiveCosmosOperations.createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  summary: "Creates a container if it doesn't already exist"
  modifiers:
  - "abstract"
  parameters:
  - description: "the CosmosEntityInformation"
    name: "information"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;?,?&gt;"
  syntax: "public abstract Mono<CosmosContainerResponse> createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  desc: "Creates a container if it doesn't already exist"
  returns:
    description: "Mono of CosmosContainerResponse"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteAll(java.lang.String,java.lang.Class<?>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteAll(String containerName, Class<?> domainType)"
  name: "deleteAll(String containerName, Class<?> domainType)"
  nameWithType: "ReactiveCosmosOperations.deleteAll(String containerName, Class<?> domainType)"
  summary: "Delete all items in a container."
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the domainType"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  syntax: "public abstract Mono<Void> deleteAll(String containerName, Class<?> domainType)"
  desc: "Delete all items in a container. Uses bulk if possible."
  returns:
    description: "void Mono"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteById(java.lang.String,java.lang.Object,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteById(String containerName, Object id, PartitionKey partitionKey)"
  name: "deleteById(String containerName, Object id, PartitionKey partitionKey)"
  nameWithType: "ReactiveCosmosOperations.deleteById(String containerName, Object id, PartitionKey partitionKey)"
  summary: "Delete an item by id"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the id"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "the partition key"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteById(String containerName, Object id, PartitionKey partitionKey)"
  desc: "Delete an item by id"
  returns:
    description: "void Mono"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteContainer(java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteContainer(String containerName)"
  name: "deleteContainer(String containerName)"
  nameWithType: "ReactiveCosmosOperations.deleteContainer(String containerName)"
  summary: "Delete container"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteContainer(String containerName)"
  desc: "Delete container"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.exists(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<?>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.exists(CosmosQuery query, Class<?> domainType, String containerName)"
  name: "exists(CosmosQuery query, Class<?> domainType, String containerName)"
  nameWithType: "ReactiveCosmosOperations.exists(CosmosQuery query, Class<?> domainType, String containerName)"
  summary: "Exists"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Boolean> exists(CosmosQuery query, Class<?> domainType, String containerName)"
  desc: "Exists"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.existsById(java.lang.Object,java.lang.Class<?>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.existsById(Object id, Class<?> domainType, String containerName)"
  name: "existsById(Object id, Class<?> domainType, String containerName)"
  nameWithType: "ReactiveCosmosOperations.existsById(Object id, Class<?> domainType, String containerName)"
  summary: "Exists"
  modifiers:
  - "abstract"
  parameters:
  - description: "the id"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Boolean> existsById(Object id, Class<?> domainType, String containerName)"
  desc: "Exists"
  returns:
    description: "Mono of result"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.getContainerName(java.lang.Class<?>)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.getContainerName(Class<?> domainType)"
  name: "getContainerName(Class<?> domainType)"
  nameWithType: "ReactiveCosmosOperations.getContainerName(Class<?> domainType)"
  summary: "Get container name"
  modifiers:
  - "abstract"
  parameters:
  - description: "the domainType"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  syntax: "public abstract String getContainerName(Class<?> domainType)"
  desc: "Get container name"
  returns:
    description: "container name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.getContainerProperties(java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.getContainerProperties(String containerName)"
  name: "getContainerProperties(String containerName)"
  nameWithType: "ReactiveCosmosOperations.getContainerProperties(String containerName)"
  summary: "Get properties for specified container"
  modifiers:
  - "abstract"
  parameters:
  - description: "String"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<CosmosContainerProperties> getContainerProperties(String containerName)"
  desc: "Get properties for specified container"
  returns:
    description: "CosmosContainerProperties"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.getConverter()"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.getConverter()"
  name: "getConverter()"
  nameWithType: "ReactiveCosmosOperations.getConverter()"
  summary: "To get converter"
  modifiers:
  - "abstract"
  syntax: "public abstract MappingCosmosConverter getConverter()"
  desc: "To get converter"
  returns:
    description: "MappingCosmosConverter"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.convert.MappingCosmosConverter?alt=com.azure.spring.data.cosmos.core.convert.MappingCosmosConverter&text=MappingCosmosConverter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.replaceContainerProperties(java.lang.String,com.azure.cosmos.models.CosmosContainerProperties)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.replaceContainerProperties(String containerName, CosmosContainerProperties properties)"
  name: "replaceContainerProperties(String containerName, CosmosContainerProperties properties)"
  nameWithType: "ReactiveCosmosOperations.replaceContainerProperties(String containerName, CosmosContainerProperties properties)"
  summary: "Replace container properties for the specified container"
  modifiers:
  - "abstract"
  parameters:
  - description: "String"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "CosmosContainerProperties"
    name: "properties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<CosmosContainerProperties> replaceContainerProperties(String containerName, CosmosContainerProperties properties)"
  desc: "Replace container properties for the specified container"
  returns:
    description: "CosmosContainerProperties"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Operation class of reactive cosmos"
metadata: {}
package: "com.azure.spring.data.cosmos.core"
artifact: com.azure:azure-spring-data-cosmos:5.17.1
