### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appservice.models.CorsSettings.withAllowedOrigins*"
fullName: "com.azure.resourcemanager.appservice.models.CorsSettings.withAllowedOrigins"
name: "withAllowedOrigins"
nameWithType: "CorsSettings.withAllowedOrigins"
members:
- uid: "com.azure.resourcemanager.appservice.models.CorsSettings.withAllowedOrigins(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.appservice.models.CorsSettings.withAllowedOrigins(List<String> allowedOrigins)"
  name: "withAllowedOrigins(List<String> allowedOrigins)"
  nameWithType: "CorsSettings.withAllowedOrigins(List<String> allowedOrigins)"
  summary: "Set the allowedOrigins property: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \"\\*\" to allow all."
  parameters:
  - description: "the allowedOrigins value to set."
    name: "allowedOrigins"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CorsSettings withAllowedOrigins(List<String> allowedOrigins)"
  returns:
    description: "the CorsSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CorsSettings?alt=com.azure.resourcemanager.appservice.models.CorsSettings&text=CorsSettings\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
