### YamlMime:JavaType
uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource"
fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource"
name: "ExtensionDataSource"
nameWithType: "ExtensionDataSource"
summary: "Definition of which data will be collected from a separate VM extension that integrates with the Azure Monitor Agent."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ExtensionDataSource"
constructors:
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.ExtensionDataSource()"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.ExtensionDataSource()"
  name: "ExtensionDataSource()"
  nameWithType: "ExtensionDataSource.ExtensionDataSource()"
  syntax: "public ExtensionDataSource()"
methods:
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.extensionName()"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.extensionName()"
  name: "extensionName()"
  nameWithType: "ExtensionDataSource.extensionName()"
  summary: "Get the extension<wbr>Name property: The name of the VM extension."
  syntax: "public String extensionName()"
  desc: "Get the extensionName property: The name of the VM extension."
  returns:
    description: "the extensionName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.extensionSettings()"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.extensionSettings()"
  name: "extensionSettings()"
  nameWithType: "ExtensionDataSource.extensionSettings()"
  summary: "Get the extension<wbr>Settings property: The extension settings."
  syntax: "public Object extensionSettings()"
  desc: "Get the extensionSettings property: The extension settings. The format is specific for particular extension."
  returns:
    description: "the extensionSettings value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.inputDataSources()"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.inputDataSources()"
  name: "inputDataSources()"
  nameWithType: "ExtensionDataSource.inputDataSources()"
  summary: "Get the input<wbr>Data<wbr>Sources property: The list of data sources this extension needs data from."
  syntax: "public List<String> inputDataSources()"
  desc: "Get the inputDataSources property: The list of data sources this extension needs data from."
  returns:
    description: "the inputDataSources value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.name()"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.name()"
  name: "name()"
  nameWithType: "ExtensionDataSource.name()"
  summary: "Get the name property: A friendly name for the data source."
  syntax: "public String name()"
  desc: "Get the name property: A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.streams()"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.streams()"
  name: "streams()"
  nameWithType: "ExtensionDataSource.streams()"
  summary: "Get the streams property: List of streams that this data source will be sent to."
  syntax: "public List<KnownExtensionDataSourceStreams> streams()"
  desc: "Get the streams property: List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."
  returns:
    description: "the streams value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.monitor.models.KnownExtensionDataSourceStreams?alt=com.azure.resourcemanager.monitor.models.KnownExtensionDataSourceStreams&text=KnownExtensionDataSourceStreams\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.validate()"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.validate()"
  name: "validate()"
  nameWithType: "ExtensionDataSource.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withExtensionName(java.lang.String)"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withExtensionName(String extensionName)"
  name: "withExtensionName(String extensionName)"
  nameWithType: "ExtensionDataSource.withExtensionName(String extensionName)"
  summary: "Set the extension<wbr>Name property: The name of the VM extension."
  parameters:
  - description: "the extensionName value to set."
    name: "extensionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExtensionDataSource withExtensionName(String extensionName)"
  desc: "Set the extensionName property: The name of the VM extension."
  returns:
    description: "the ExtensionDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.monitor.models.ExtensionDataSource?alt=com.azure.resourcemanager.monitor.models.ExtensionDataSource&text=ExtensionDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withExtensionSettings(java.lang.Object)"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withExtensionSettings(Object extensionSettings)"
  name: "withExtensionSettings(Object extensionSettings)"
  nameWithType: "ExtensionDataSource.withExtensionSettings(Object extensionSettings)"
  summary: "Set the extension<wbr>Settings property: The extension settings."
  parameters:
  - description: "the extensionSettings value to set."
    name: "extensionSettings"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExtensionDataSource withExtensionSettings(Object extensionSettings)"
  desc: "Set the extensionSettings property: The extension settings. The format is specific for particular extension."
  returns:
    description: "the ExtensionDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.monitor.models.ExtensionDataSource?alt=com.azure.resourcemanager.monitor.models.ExtensionDataSource&text=ExtensionDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withInputDataSources(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withInputDataSources(List<String> inputDataSources)"
  name: "withInputDataSources(List<String> inputDataSources)"
  nameWithType: "ExtensionDataSource.withInputDataSources(List<String> inputDataSources)"
  summary: "Set the input<wbr>Data<wbr>Sources property: The list of data sources this extension needs data from."
  parameters:
  - description: "the inputDataSources value to set."
    name: "inputDataSources"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExtensionDataSource withInputDataSources(List<String> inputDataSources)"
  desc: "Set the inputDataSources property: The list of data sources this extension needs data from."
  returns:
    description: "the ExtensionDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.monitor.models.ExtensionDataSource?alt=com.azure.resourcemanager.monitor.models.ExtensionDataSource&text=ExtensionDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withName(String name)"
  name: "withName(String name)"
  nameWithType: "ExtensionDataSource.withName(String name)"
  summary: "Set the name property: A friendly name for the data source."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExtensionDataSource withName(String name)"
  desc: "Set the name property: A friendly name for the data source. This name should be unique across all data sources (regardless of type) within the data collection rule."
  returns:
    description: "the ExtensionDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.monitor.models.ExtensionDataSource?alt=com.azure.resourcemanager.monitor.models.ExtensionDataSource&text=ExtensionDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withStreams(java.util.List<com.azure.resourcemanager.monitor.models.KnownExtensionDataSourceStreams>)"
  fullName: "com.azure.resourcemanager.monitor.models.ExtensionDataSource.withStreams(List<KnownExtensionDataSourceStreams> streams)"
  name: "withStreams(List<KnownExtensionDataSourceStreams> streams)"
  nameWithType: "ExtensionDataSource.withStreams(List<KnownExtensionDataSourceStreams> streams)"
  summary: "Set the streams property: List of streams that this data source will be sent to."
  parameters:
  - description: "the streams value to set."
    name: "streams"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.monitor.models.KnownExtensionDataSourceStreams?alt=com.azure.resourcemanager.monitor.models.KnownExtensionDataSourceStreams&text=KnownExtensionDataSourceStreams\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExtensionDataSource withStreams(List<KnownExtensionDataSourceStreams> streams)"
  desc: "Set the streams property: List of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."
  returns:
    description: "the ExtensionDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.monitor.models.ExtensionDataSource?alt=com.azure.resourcemanager.monitor.models.ExtensionDataSource&text=ExtensionDataSource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Definition of which data will be collected from a separate VM extension that integrates with the Azure Monitor Agent. Collected from either Windows and Linux machines, depending on which extension is defined."
metadata: {}
package: "com.azure.resourcemanager.monitor.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-monitor:2.16.0
