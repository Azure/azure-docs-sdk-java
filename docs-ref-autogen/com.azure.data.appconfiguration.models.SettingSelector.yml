### YamlMime:JavaType
uid: "com.azure.data.appconfiguration.models.SettingSelector"
fullName: "com.azure.data.appconfiguration.models.SettingSelector"
name: "SettingSelector"
nameWithType: "SettingSelector"
summary: "A set of options for selecting configuration settings from App Configuration service.\n\n *  Providing <xref uid=\"com.azure.data.appconfiguration.models.SettingSelector.getLabelFilter()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"labelFilter\"></xref> will filter <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSettings\"></xref> that match any label name in conjunction with the keys that are passed in to the service request.\n *  Providing <xref uid=\"com.azure.data.appconfiguration.models.SettingSelector.getAcceptDateTime()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"acceptDateTime\"></xref> will return the representation of matching <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> at that given <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime\"></xref>.\n *  Providing <xref uid=\"com.azure.data.appconfiguration.models.SettingSelector.getFields()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"fields\"></xref> will populate only those <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> fields in the response. By default, all of the fields are returned."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SettingSelector"
constructors:
- "com.azure.data.appconfiguration.models.SettingSelector.SettingSelector()"
methods:
- "com.azure.data.appconfiguration.models.SettingSelector.getAcceptDateTime()"
- "com.azure.data.appconfiguration.models.SettingSelector.getFields()"
- "com.azure.data.appconfiguration.models.SettingSelector.getKeyFilter()"
- "com.azure.data.appconfiguration.models.SettingSelector.getLabelFilter()"
- "com.azure.data.appconfiguration.models.SettingSelector.setAcceptDatetime(java.time.OffsetDateTime)"
- "com.azure.data.appconfiguration.models.SettingSelector.setFields(com.azure.data.appconfiguration.models.SettingFields...)"
- "com.azure.data.appconfiguration.models.SettingSelector.setKeyFilter(java.lang.String)"
- "com.azure.data.appconfiguration.models.SettingSelector.setLabelFilter(java.lang.String)"
- "com.azure.data.appconfiguration.models.SettingSelector.toString()"
type: "class"
metadata: {}
package: "com.azure.data.appconfiguration.models"
artifact: com.azure:azure-data-appconfiguration:1.1.8
