### YamlMime:JavaType
uid: "com.azure.data.appconfiguration.models.SettingSelector"
fullName: "com.azure.data.appconfiguration.models.SettingSelector"
name: "SettingSelector"
nameWithType: "SettingSelector"
summary: "A set of options for selecting configuration settings from App Configuration service.\n\n *  Providing <xref uid=\"com.azure.data.appconfiguration.models.SettingSelector.getLabelFilter()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"labelFilter\"></xref> will filter <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSettings\"></xref> that match any label name in conjunction with the keys that are passed in to the service request.\n *  Providing <xref uid=\"com.azure.data.appconfiguration.models.SettingSelector.getAcceptDateTime()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"acceptDateTime\"></xref> will return the representation of matching <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> at that given <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime\"></xref>.\n *  Providing <xref uid=\"com.azure.data.appconfiguration.models.SettingSelector.getFields()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"fields\"></xref> will populate only those <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> fields in the response. By default, all of the fields are returned."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SettingSelector"
constructors:
- uid: "com.azure.data.appconfiguration.models.SettingSelector.SettingSelector()"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.SettingSelector()"
  name: "SettingSelector()"
  nameWithType: "SettingSelector.SettingSelector()"
  summary: "Creates a setting selector that will populate responses with all of the <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting's\"></xref> properties and select all <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keys\"></xref>."
  syntax: "public SettingSelector()"
methods:
- uid: "com.azure.data.appconfiguration.models.SettingSelector.getAcceptDateTime()"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.getAcceptDateTime()"
  name: "getAcceptDateTime()"
  nameWithType: "SettingSelector.getAcceptDateTime()"
  summary: "Gets the date time for the request query. When the query is performed, if `acceptDateTime` is set, the <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getValue()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"configuration setting value\"></xref> at that point in time is returned. Otherwise, the current value is returned."
  syntax: "public String getAcceptDateTime()"
  returns:
    description: "Gets the currently set datetime in <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DateTimeFormatter#RFC_1123_DATE_TIME\"></xref> format."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.appconfiguration.models.SettingSelector.getFields()"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.getFields()"
  name: "getFields()"
  nameWithType: "SettingSelector.getFields()"
  summary: "Gets the fields on <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> to return from the GET request. If none are set, the service returns the ConfigurationSettings with all of their fields populated."
  syntax: "public SettingFields[] getFields()"
  returns:
    description: "The set of <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> fields to return for a GET request."
    type: "<xref href=\"com.azure.data.appconfiguration.models.SettingFields?alt=com.azure.data.appconfiguration.models.SettingFields&text=SettingFields\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.data.appconfiguration.models.SettingSelector.getKeyFilter()"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.getKeyFilter()"
  name: "getKeyFilter()"
  nameWithType: "SettingSelector.getKeyFilter()"
  summary: "Gets the expressions to filter <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keys\"></xref> on for the request.\n\nSee [Filtering][] for more information about these supported filters.\n\n\n[Filtering]: https://docs.microsoft.com/azure/azure-app-configuration/rest-api-key-value#supported-filters"
  syntax: "public String getKeyFilter()"
  returns:
    description: "The expressions to filter ConfigurationSetting keys on."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.appconfiguration.models.SettingSelector.getLabelFilter()"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.getLabelFilter()"
  name: "getLabelFilter()"
  nameWithType: "SettingSelector.getLabelFilter()"
  summary: "Gets the labels used to filter settings based on their <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getLabel()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"label\"></xref> in the service.\n\nSee [Filtering][] for more information about these supported filters.\n\n\n[Filtering]: https://docs.microsoft.com/azure/azure-app-configuration/rest-api-key-value#supported-filters"
  syntax: "public String getLabelFilter()"
  returns:
    description: "labels The labels used to filter GET requests from the service."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.appconfiguration.models.SettingSelector.setAcceptDatetime(java.time.OffsetDateTime)"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.setAcceptDatetime(OffsetDateTime datetime)"
  name: "setAcceptDatetime(OffsetDateTime datetime)"
  nameWithType: "SettingSelector.setAcceptDatetime(OffsetDateTime datetime)"
  summary: "If set, then configuration setting values will be retrieved as they existed at the provided datetime. Otherwise, the current values are returned."
  parameters:
  - description: "The value of the configuration setting at that given <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime\"></xref>."
    name: "datetime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SettingSelector setAcceptDatetime(OffsetDateTime datetime)"
  returns:
    description: "The updated SettingSelector object."
    type: "<xref href=\"com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.appconfiguration.models.SettingSelector.setFields(com.azure.data.appconfiguration.models.SettingFields...)"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.setFields(SettingFields[] fields)"
  name: "setFields(SettingFields[] fields)"
  nameWithType: "SettingSelector.setFields(SettingFields[] fields)"
  summary: "Sets fields that will be returned in the response corresponding to properties in <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref>. If none are set, the service returns ConfigurationSettings with all of their fields populated."
  parameters:
  - description: "The fields to select for the query response. If none are set, the service will return the\n ConfigurationSettings with a default set of properties."
    name: "fields"
    type: "<xref href=\"com.azure.data.appconfiguration.models.SettingFields?alt=com.azure.data.appconfiguration.models.SettingFields&text=SettingFields\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SettingSelector setFields(SettingFields[] fields)"
  returns:
    description: "The updated SettingSelector object."
    type: "<xref href=\"com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.appconfiguration.models.SettingSelector.setKeyFilter(java.lang.String)"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.setKeyFilter(String keyFilter)"
  name: "setKeyFilter(String keyFilter)"
  nameWithType: "SettingSelector.setKeyFilter(String keyFilter)"
  summary: "Sets the expressions to filter <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keys\"></xref> on for the request.\n\nSee [Filtering][] for more information about these supported filters.\n\n\n[Filtering]: https://docs.microsoft.com/azure/azure-app-configuration/rest-api-key-value#supported-filters"
  parameters:
  - description: "The expressions to filter ConfigurationSetting keys on."
    name: "keyFilter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SettingSelector setKeyFilter(String keyFilter)"
  returns:
    description: "The updated SettingSelector object"
    type: "<xref href=\"com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.appconfiguration.models.SettingSelector.setLabelFilter(java.lang.String)"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.setLabelFilter(String labelFilter)"
  name: "setLabelFilter(String labelFilter)"
  nameWithType: "SettingSelector.setLabelFilter(String labelFilter)"
  summary: "Sets the expression to filter <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getLabel()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"labels\"></xref> on for the request.\n\nSee [Filtering][] for more information about these supported filters.\n\n\n[Filtering]: https://docs.microsoft.com/azure/azure-app-configuration/rest-api-key-value#supported-filters"
  parameters:
  - description: "The expressions to filter ConfigurationSetting labels on."
    name: "labelFilter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SettingSelector setLabelFilter(String labelFilter)"
  returns:
    description: "SettingSelector The updated SettingSelector object."
    type: "<xref href=\"com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.appconfiguration.models.SettingSelector.toString()"
  fullName: "com.azure.data.appconfiguration.models.SettingSelector.toString()"
  name: "toString()"
  nameWithType: "SettingSelector.toString()"
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.data.appconfiguration.models"
artifact: com.azure:azure-data-appconfiguration:1.3.2
