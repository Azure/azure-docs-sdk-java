### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.close()
  name: close()
  nameWithType: Participant.close()
  summary: <p>Explicitly frees any external resource attached to the object </p>
  syntax: public void close()
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.close()
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String userId)
  name: from(String userId)
  nameWithType: Participant.from(String userId)
  parameters:
  - description: <p>user's Id. </p>
    name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Participant object. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant" data-throw-if-not-resolved="False"/>
  summary: <p>Create a Participant using user id. </p>
  syntax: public static Participant from(String userId)
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String)
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String userId, String preferredLanguage)
  name: from(String userId, String preferredLanguage)
  nameWithType: Participant.from(String userId, String preferredLanguage)
  parameters:
  - description: <p>user's Id. </p>
    name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>users' preferred language. </p>
    name: preferredLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Participant object. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant" data-throw-if-not-resolved="False"/>
  summary: <p>Create a Participant using user id and her/his preferred language. </p>
  syntax: public static Participant from(String userId, String preferredLanguage)
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String,String)
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String userId, String preferredLanguage, String voiceSignature)
  name: from(String userId, String preferredLanguage, String voiceSignature)
  nameWithType: Participant.from(String userId, String preferredLanguage, String voiceSignature)
  parameters:
  - description: <p>user's Id. </p>
    name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>users' preferred language. </p>
    name: preferredLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>user's voice signature. </p>
    name: voiceSignature
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Participant object. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant" data-throw-if-not-resolved="False"/>
  summary: <p>Create a Participant using user id, her/his preferred language and her/his voice signature. If voice signature is empty then user will not be identified. </p>
  syntax: public static Participant from(String userId, String preferredLanguage, String voiceSignature)
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String,String,String)
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.getAvatar()
  name: getAvatar()
  nameWithType: Participant.getAvatar()
  returns:
    description: <p>hex color string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the colour of the user's avatar as an HTML hex string (e.g. FF0000 for red). </p>
  syntax: public String getAvatar()
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.getAvatar()
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.getDisplayName()
  name: getDisplayName()
  nameWithType: Participant.getDisplayName()
  returns:
    description: <p>The participant's display name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>The participant's display name. Please note that each participant within the same conversation must have a different display name. Duplicate names within the same conversation are not allowed. You can use the Id property as another way to refer to each participant. </p>
  syntax: public String getDisplayName()
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.getDisplayName()
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.getId()
  name: getId()
  nameWithType: Participant.getId()
  returns:
    description: <p>unique ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>The unique identifier for the participant. </p>
  syntax: public String getId()
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.getId()
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.getProperties()
  name: getProperties()
  nameWithType: Participant.getProperties()
  returns:
    description: <p>the properties of participant. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the properties for participant. </p>
  syntax: public PropertyCollection getProperties()
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.getProperties()
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.isHost()
  name: isHost()
  nameWithType: Participant.isHost()
  returns:
    description: <p>whether or not this participant is the host. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets whether or not this participant is the host. </p>
  syntax: public boolean isHost()
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.isHost()
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.isMuted()
  name: isMuted()
  nameWithType: Participant.isMuted()
  returns:
    description: <p>whether or not this participant is muted. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets whether or not this participant is muted. </p>
  syntax: public boolean isMuted()
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.isMuted()
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.isUsingTts()
  name: isUsingTts()
  nameWithType: Participant.isUsingTts()
  returns:
    description: <p>whether or not the participant is using Text To Speech (TTS). </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets whether or not the participant is using Text To Speech (TTS). </p>
  syntax: public boolean isUsingTts()
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.isUsingTts()
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.setPreferredLanguage(String preferredLanguage)
  name: setPreferredLanguage(String preferredLanguage)
  nameWithType: Participant.setPreferredLanguage(String preferredLanguage)
  parameters:
  - description: <p>participant's preferred language. </p>
    name: preferredLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the preferred languages for participant. </p>
  syntax: public void setPreferredLanguage(String preferredLanguage)
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.setPreferredLanguage(String)
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.setVoiceSignature(String voiceSignature)
  name: setVoiceSignature(String voiceSignature)
  nameWithType: Participant.setVoiceSignature(String voiceSignature)
  parameters:
  - description: <p>user's voice signature. </p>
    name: voiceSignature
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the voice signature for participant. If voice signature is empty then user will not be identified. </p>
  syntax: public void setVoiceSignature(String voiceSignature)
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.setVoiceSignature(String)
nameWithType: Participant
syntax: public class Participant
type: class
uid: com.microsoft.cognitiveservices.speech.transcription.Participant
fullName: com.microsoft.cognitiveservices.speech.transcription.Participant
name: Participant
package: com.microsoft.cognitiveservices.speech.transcription
summary: <p>Represents a participant in a conversation transcribing session. Added in version 1.5.0 </p>
metadata: {}
