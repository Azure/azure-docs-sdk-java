### YamlMime:JavaMember
uid: "com.microsoft.azure.management.storage.StorageAccounts.checkNameAvailabilityAsync*"
fullName: "com.microsoft.azure.management.storage.StorageAccounts.checkNameAvailabilityAsync"
name: "checkNameAvailabilityAsync"
nameWithType: "StorageAccounts.checkNameAvailabilityAsync"
members:
- uid: "com.microsoft.azure.management.storage.StorageAccounts.checkNameAvailabilityAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.storage.StorageAccounts.checkNameAvailabilityAsync(String name)"
  name: "checkNameAvailabilityAsync(String name)"
  nameWithType: "StorageAccounts.checkNameAvailabilityAsync(String name)"
  summary: "Checks that account name is valid and is not in use asynchronously."
  parameters:
  - description: "the account name to check"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CheckNameAvailabilityResult> checkNameAvailabilityAsync(String name)"
  returns:
    description: "a representation of the deferred computation of this call, returning whether the name is available and other info if not"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.storage.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.storage.StorageAccounts.checkNameAvailabilityAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.storage.CheckNameAvailabilityResult>)"
  fullName: "com.microsoft.azure.management.storage.StorageAccounts.checkNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)"
  name: "checkNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)"
  nameWithType: "StorageAccounts.checkNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)"
  summary: "Checks that account name is valid and is not in use asynchronously."
  parameters:
  - description: "the account name to check"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback to call on success or failure"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.storage.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<CheckNameAvailabilityResult> checkNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)"
  returns:
    description: "a handle to cancel the request"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.storage.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.storage"
artifact: com.microsoft.azure:azure-mgmt-storage:1.38.1
