### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState"
fullName: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState"
name: "GalleryImage.DefinitionStages.WithOsTypeAndState"
nameWithType: "GalleryImage.DefinitionStages.WithOsTypeAndState"
summary: "The stage of the gallery image definition allowing to specify the OS type and state."
syntax: "public static interface GalleryImage.DefinitionStages.WithOsTypeAndState"
methods:
- uid: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withGeneralizedLinux()"
  fullName: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withGeneralizedLinux()"
  name: "withGeneralizedLinux()"
  nameWithType: "GalleryImage.DefinitionStages.WithOsTypeAndState.withGeneralizedLinux()"
  summary: "Specifies that image is a Linux image with OS state as generalized."
  modifiers:
  - "abstract"
  syntax: "public abstract GalleryImage.DefinitionStages.WithCreate withGeneralizedLinux()"
  desc: "Specifies that image is a Linux image with OS state as generalized."
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withGeneralizedWindows()"
  fullName: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withGeneralizedWindows()"
  name: "withGeneralizedWindows()"
  nameWithType: "GalleryImage.DefinitionStages.WithOsTypeAndState.withGeneralizedWindows()"
  summary: "Specifies that image is a Windows image with OS state as generalized."
  modifiers:
  - "abstract"
  syntax: "public abstract GalleryImage.DefinitionStages.WithCreate withGeneralizedWindows()"
  desc: "Specifies that image is a Windows image with OS state as generalized."
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withLinux(com.azure.resourcemanager.compute.models.OperatingSystemStateTypes)"
  fullName: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withLinux(OperatingSystemStateTypes osState)"
  name: "withLinux(OperatingSystemStateTypes osState)"
  nameWithType: "GalleryImage.DefinitionStages.WithOsTypeAndState.withLinux(OperatingSystemStateTypes osState)"
  summary: "Specifies that image is a Linux image."
  modifiers:
  - "abstract"
  parameters:
  - description: "operating system state"
    name: "osState"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.OperatingSystemStateTypes?alt=com.azure.resourcemanager.compute.models.OperatingSystemStateTypes&text=OperatingSystemStateTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract GalleryImage.DefinitionStages.WithCreate withLinux(OperatingSystemStateTypes osState)"
  desc: "Specifies that image is a Linux image."
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows(com.azure.resourcemanager.compute.models.OperatingSystemStateTypes)"
  fullName: "com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows(OperatingSystemStateTypes osState)"
  name: "withWindows(OperatingSystemStateTypes osState)"
  nameWithType: "GalleryImage.DefinitionStages.WithOsTypeAndState.withWindows(OperatingSystemStateTypes osState)"
  summary: "Specifies that image is a Windows image."
  modifiers:
  - "abstract"
  parameters:
  - description: "operating system state"
    name: "osState"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.OperatingSystemStateTypes?alt=com.azure.resourcemanager.compute.models.OperatingSystemStateTypes&text=OperatingSystemStateTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract GalleryImage.DefinitionStages.WithCreate withWindows(OperatingSystemStateTypes osState)"
  desc: "Specifies that image is a Windows image."
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.compute.models.GalleryImage.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the gallery image definition allowing to specify the OS type and state."
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.19.0
