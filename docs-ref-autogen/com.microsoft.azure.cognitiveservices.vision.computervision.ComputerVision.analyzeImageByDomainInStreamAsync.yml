### YamlMime:JavaMember
nameWithType: ComputerVision.analyzeImageByDomainInStreamAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  parameters:
  - description: <p>The domain-specific content to recognize. </p>
    name: model
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>An image stream. </p>
    name: image
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: analyzeImageByDomainInStreamOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter&text=AnalyzeImageByDomainInStreamOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the DomainModelResults object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax: public Observable<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync
name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
package: com.microsoft.azure.cognitiveservices.vision.computervision
metadata: {}
