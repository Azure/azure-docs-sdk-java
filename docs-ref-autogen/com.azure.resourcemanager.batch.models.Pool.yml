### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.models.Pool"
fullName: "com.azure.resourcemanager.batch.models.Pool"
name: "Pool"
nameWithType: "Pool"
summary: "An immutable client-side representation of Pool."
syntax: "public interface Pool"
methods:
- uid: "com.azure.resourcemanager.batch.models.Pool.allocationState()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.allocationState()"
  name: "allocationState()"
  nameWithType: "Pool.allocationState()"
  summary: "Gets the allocation<wbr>State property: Whether the pool is resizing."
  modifiers:
  - "abstract"
  syntax: "public abstract AllocationState allocationState()"
  desc: "Gets the allocationState property: Whether the pool is resizing."
  returns:
    description: "the allocationState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.AllocationState?alt=com.azure.resourcemanager.batch.models.AllocationState&text=AllocationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.allocationStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.allocationStateTransitionTime()"
  name: "allocationStateTransitionTime()"
  nameWithType: "Pool.allocationStateTransitionTime()"
  summary: "Gets the allocation<wbr>State<wbr>Transition<wbr>Time property: The time at which the pool entered its current allocation state."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime allocationStateTransitionTime()"
  desc: "Gets the allocationStateTransitionTime property: The time at which the pool entered its current allocation state."
  returns:
    description: "the allocationStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.applicationLicenses()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.applicationLicenses()"
  name: "applicationLicenses()"
  nameWithType: "Pool.applicationLicenses()"
  summary: "Gets the application<wbr>Licenses property: The list of application licenses the Batch service will make available on each compute node in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> applicationLicenses()"
  desc: "Gets the applicationLicenses property: The list of application licenses the Batch service will make available on each compute node in the pool. The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail."
  returns:
    description: "the applicationLicenses value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Pool.applicationPackages()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.applicationPackages()"
  name: "applicationPackages()"
  nameWithType: "Pool.applicationPackages()"
  summary: "Gets the application<wbr>Packages property: The list of application packages to be installed on each compute node in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract List<ApplicationPackageReference> applicationPackages()"
  desc: "Gets the applicationPackages property: The list of application packages to be installed on each compute node in the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool."
  returns:
    description: "the applicationPackages value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.ApplicationPackageReference?alt=com.azure.resourcemanager.batch.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Pool.autoScaleRun()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.autoScaleRun()"
  name: "autoScaleRun()"
  nameWithType: "Pool.autoScaleRun()"
  summary: "Gets the auto<wbr>Scale<wbr>Run property: The results and errors from an execution of a pool autoscale formula."
  modifiers:
  - "abstract"
  syntax: "public abstract AutoScaleRun autoScaleRun()"
  desc: "Gets the autoScaleRun property: The results and errors from an execution of a pool autoscale formula. This property is set only if the pool automatically scales, i.e. autoScaleSettings are used."
  returns:
    description: "the autoScaleRun value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.AutoScaleRun?alt=com.azure.resourcemanager.batch.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.certificates()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.certificates()"
  name: "certificates()"
  nameWithType: "Pool.certificates()"
  summary: "Gets the certificates property: The list of certificates to be installed on each compute node in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract List<CertificateReference> certificates()"
  desc: "Gets the certificates property: The list of certificates to be installed on each compute node in the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ\\_BATCH\\_CERTIFICATES\\_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\\{user-name\\}/certs) and certificates are placed in that directory."
  returns:
    description: "the certificates value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.CertificateReference?alt=com.azure.resourcemanager.batch.models.CertificateReference&text=CertificateReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Pool.creationTime()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.creationTime()"
  name: "creationTime()"
  nameWithType: "Pool.creationTime()"
  summary: "Gets the creation<wbr>Time property: The creation time of the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime creationTime()"
  desc: "Gets the creationTime property: The creation time of the pool."
  returns:
    description: "the creationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.currentDedicatedNodes()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.currentDedicatedNodes()"
  name: "currentDedicatedNodes()"
  nameWithType: "Pool.currentDedicatedNodes()"
  summary: "Gets the current<wbr>Dedicated<wbr>Nodes property: The number of compute nodes currently in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer currentDedicatedNodes()"
  desc: "Gets the currentDedicatedNodes property: The number of compute nodes currently in the pool."
  returns:
    description: "the currentDedicatedNodes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.currentLowPriorityNodes()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.currentLowPriorityNodes()"
  name: "currentLowPriorityNodes()"
  nameWithType: "Pool.currentLowPriorityNodes()"
  summary: "Gets the current<wbr>Low<wbr>Priority<wbr>Nodes property: The number of Spot/low-priority compute nodes currently in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer currentLowPriorityNodes()"
  desc: "Gets the currentLowPriorityNodes property: The number of Spot/low-priority compute nodes currently in the pool."
  returns:
    description: "the currentLowPriorityNodes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.deploymentConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.deploymentConfiguration()"
  name: "deploymentConfiguration()"
  nameWithType: "Pool.deploymentConfiguration()"
  summary: "Gets the deployment<wbr>Configuration property: Deployment configuration properties."
  modifiers:
  - "abstract"
  syntax: "public abstract DeploymentConfiguration deploymentConfiguration()"
  desc: "Gets the deploymentConfiguration property: Deployment configuration properties. Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS)."
  returns:
    description: "the deploymentConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DeploymentConfiguration?alt=com.azure.resourcemanager.batch.models.DeploymentConfiguration&text=DeploymentConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.disableAutoScale()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.disableAutoScale()"
  name: "disableAutoScale()"
  nameWithType: "Pool.disableAutoScale()"
  summary: "Disables automatic scaling for a pool."
  modifiers:
  - "abstract"
  syntax: "public abstract Pool disableAutoScale()"
  desc: "Disables automatic scaling for a pool."
  returns:
    description: "contains information about a pool."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Pool?alt=com.azure.resourcemanager.batch.models.Pool&text=Pool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.disableAutoScaleWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.batch.models.Pool.disableAutoScaleWithResponse(Context context)"
  name: "disableAutoScaleWithResponse(Context context)"
  nameWithType: "Pool.disableAutoScaleWithResponse(Context context)"
  summary: "Disables automatic scaling for a pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Pool> disableAutoScaleWithResponse(Context context)"
  desc: "Disables automatic scaling for a pool."
  returns:
    description: "contains information about a pool."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.Pool?alt=com.azure.resourcemanager.batch.models.Pool&text=Pool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Pool.displayName()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.displayName()"
  name: "displayName()"
  nameWithType: "Pool.displayName()"
  summary: "Gets the display<wbr>Name property: The display name for the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract String displayName()"
  desc: "Gets the displayName property: The display name for the pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.etag()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.etag()"
  name: "etag()"
  nameWithType: "Pool.etag()"
  summary: "Gets the etag property: The ETag of the resource, used for concurrency statements."
  modifiers:
  - "abstract"
  syntax: "public abstract String etag()"
  desc: "Gets the etag property: The ETag of the resource, used for concurrency statements."
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.id()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.id()"
  name: "id()"
  nameWithType: "Pool.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.identity()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.identity()"
  name: "identity()"
  nameWithType: "Pool.identity()"
  summary: "Gets the identity property: The type of identity used for the Batch Pool."
  modifiers:
  - "abstract"
  syntax: "public abstract BatchPoolIdentity identity()"
  desc: "Gets the identity property: The type of identity used for the Batch Pool."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.BatchPoolIdentity?alt=com.azure.resourcemanager.batch.models.BatchPoolIdentity&text=BatchPoolIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.innerModel()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.innerModel()"
  name: "innerModel()"
  nameWithType: "Pool.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>batch.<wbr>fluent.<wbr>models.<wbr>Pool<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract PoolInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.batch.fluent.models.PoolInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.interNodeCommunication()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.interNodeCommunication()"
  name: "interNodeCommunication()"
  nameWithType: "Pool.interNodeCommunication()"
  summary: "Gets the inter<wbr>Node<wbr>Communication property: Whether the pool permits direct communication between nodes."
  modifiers:
  - "abstract"
  syntax: "public abstract InterNodeCommunicationState interNodeCommunication()"
  desc: "Gets the interNodeCommunication property: Whether the pool permits direct communication between nodes. This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'."
  returns:
    description: "the interNodeCommunication value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.InterNodeCommunicationState?alt=com.azure.resourcemanager.batch.models.InterNodeCommunicationState&text=InterNodeCommunicationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.lastModified()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.lastModified()"
  name: "lastModified()"
  nameWithType: "Pool.lastModified()"
  summary: "Gets the last<wbr>Modified property: The last modified time of the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime lastModified()"
  desc: "Gets the lastModified property: The last modified time of the pool. This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state."
  returns:
    description: "the lastModified value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.metadata()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.metadata()"
  name: "metadata()"
  nameWithType: "Pool.metadata()"
  summary: "Gets the metadata property: A list of name-value pairs associated with the pool as metadata."
  modifiers:
  - "abstract"
  syntax: "public abstract List<MetadataItem> metadata()"
  desc: "Gets the metadata property: A list of name-value pairs associated with the pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the metadata value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MetadataItem?alt=com.azure.resourcemanager.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Pool.mountConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.mountConfiguration()"
  name: "mountConfiguration()"
  nameWithType: "Pool.mountConfiguration()"
  summary: "Gets the mount<wbr>Configuration property: A list of file systems to mount on each node in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract List<MountConfiguration> mountConfiguration()"
  desc: "Gets the mountConfiguration property: A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  returns:
    description: "the mountConfiguration value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MountConfiguration?alt=com.azure.resourcemanager.batch.models.MountConfiguration&text=MountConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Pool.name()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.name()"
  name: "name()"
  nameWithType: "Pool.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.networkConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.networkConfiguration()"
  name: "networkConfiguration()"
  nameWithType: "Pool.networkConfiguration()"
  summary: "Gets the network<wbr>Configuration property: The network configuration for a pool."
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkConfiguration networkConfiguration()"
  desc: "Gets the networkConfiguration property: The network configuration for a pool."
  returns:
    description: "the networkConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.provisioningState()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Pool.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The current state of the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract PoolProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: The current state of the pool."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.PoolProvisioningState?alt=com.azure.resourcemanager.batch.models.PoolProvisioningState&text=PoolProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.provisioningStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.provisioningStateTransitionTime()"
  name: "provisioningStateTransitionTime()"
  nameWithType: "Pool.provisioningStateTransitionTime()"
  summary: "Gets the provisioning<wbr>State<wbr>Transition<wbr>Time property: The time at which the pool entered its current state."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime provisioningStateTransitionTime()"
  desc: "Gets the provisioningStateTransitionTime property: The time at which the pool entered its current state."
  returns:
    description: "the provisioningStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.refresh()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.refresh()"
  name: "refresh()"
  nameWithType: "Pool.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Pool refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Pool?alt=com.azure.resourcemanager.batch.models.Pool&text=Pool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.batch.models.Pool.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Pool.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Pool refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Pool?alt=com.azure.resourcemanager.batch.models.Pool&text=Pool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.resizeOperationStatus()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.resizeOperationStatus()"
  name: "resizeOperationStatus()"
  nameWithType: "Pool.resizeOperationStatus()"
  summary: "Gets the resize<wbr>Operation<wbr>Status property: Details about the current or last completed resize operation."
  modifiers:
  - "abstract"
  syntax: "public abstract ResizeOperationStatus resizeOperationStatus()"
  desc: "Gets the resizeOperationStatus property: Details about the current or last completed resize operation. Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady)."
  returns:
    description: "the resizeOperationStatus value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ResizeOperationStatus?alt=com.azure.resourcemanager.batch.models.ResizeOperationStatus&text=ResizeOperationStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.scaleSettings()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.scaleSettings()"
  name: "scaleSettings()"
  nameWithType: "Pool.scaleSettings()"
  summary: "Gets the scale<wbr>Settings property: Scale settings for the pool Defines the desired size of the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract ScaleSettings scaleSettings()"
  desc: "Gets the scaleSettings property: Scale settings for the pool Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
  returns:
    description: "the scaleSettings value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ScaleSettings?alt=com.azure.resourcemanager.batch.models.ScaleSettings&text=ScaleSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.startTask()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.startTask()"
  name: "startTask()"
  nameWithType: "Pool.startTask()"
  summary: "Gets the start<wbr>Task property: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged."
  modifiers:
  - "abstract"
  syntax: "public abstract StartTask startTask()"
  desc: "Gets the startTask property: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged. In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool."
  returns:
    description: "the startTask value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.StartTask?alt=com.azure.resourcemanager.batch.models.StartTask&text=StartTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.stopResize()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.stopResize()"
  name: "stopResize()"
  nameWithType: "Pool.stopResize()"
  summary: "This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state."
  modifiers:
  - "abstract"
  syntax: "public abstract Pool stopResize()"
  desc: "This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created."
  returns:
    description: "contains information about a pool."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Pool?alt=com.azure.resourcemanager.batch.models.Pool&text=Pool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.stopResizeWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.batch.models.Pool.stopResizeWithResponse(Context context)"
  name: "stopResizeWithResponse(Context context)"
  nameWithType: "Pool.stopResizeWithResponse(Context context)"
  summary: "This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Pool> stopResizeWithResponse(Context context)"
  desc: "This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created."
  returns:
    description: "contains information about a pool."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.Pool?alt=com.azure.resourcemanager.batch.models.Pool&text=Pool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Pool.taskSchedulingPolicy()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.taskSchedulingPolicy()"
  name: "taskSchedulingPolicy()"
  nameWithType: "Pool.taskSchedulingPolicy()"
  summary: "Gets the task<wbr>Scheduling<wbr>Policy property: Specifies how tasks should be distributed across compute nodes."
  modifiers:
  - "abstract"
  syntax: "public abstract TaskSchedulingPolicy taskSchedulingPolicy()"
  desc: "Gets the taskSchedulingPolicy property: Specifies how tasks should be distributed across compute nodes. If not specified, the default is spread."
  returns:
    description: "the taskSchedulingPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.TaskSchedulingPolicy?alt=com.azure.resourcemanager.batch.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.taskSlotsPerNode()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.taskSlotsPerNode()"
  name: "taskSlotsPerNode()"
  nameWithType: "Pool.taskSlotsPerNode()"
  summary: "Gets the task<wbr>Slots<wbr>Per<wbr>Node property: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer taskSlotsPerNode()"
  desc: "Gets the taskSlotsPerNode property: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
  returns:
    description: "the taskSlotsPerNode value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.type()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.type()"
  name: "type()"
  nameWithType: "Pool.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.update()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.update()"
  name: "update()"
  nameWithType: "Pool.update()"
  summary: "Begins update for the Pool resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Pool.Update update()"
  desc: "Begins update for the Pool resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.Pool.Update?alt=com.azure.resourcemanager.batch.models.Pool.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.Pool.userAccounts()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.userAccounts()"
  name: "userAccounts()"
  nameWithType: "Pool.userAccounts()"
  summary: "Gets the user<wbr>Accounts property: The list of user accounts to be created on each node in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract List<UserAccount> userAccounts()"
  desc: "Gets the userAccounts property: The list of user accounts to be created on each node in the pool."
  returns:
    description: "the userAccounts value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.UserAccount?alt=com.azure.resourcemanager.batch.models.UserAccount&text=UserAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.Pool.vmSize()"
  fullName: "com.azure.resourcemanager.batch.models.Pool.vmSize()"
  name: "vmSize()"
  nameWithType: "Pool.vmSize()"
  summary: "Gets the vm<wbr>Size property: The size of virtual machines in the pool."
  modifiers:
  - "abstract"
  syntax: "public abstract String vmSize()"
  desc: "Gets the vmSize property: The size of virtual machines in the pool. All VMs in a pool are the same size. For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD\\_A0 and those with premium storage (STANDARD\\_GS, STANDARD\\_DS, and STANDARD\\_DSV2 series)."
  returns:
    description: "the vmSize value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of Pool."
metadata: {}
package: "com.azure.resourcemanager.batch.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:1.0.0
