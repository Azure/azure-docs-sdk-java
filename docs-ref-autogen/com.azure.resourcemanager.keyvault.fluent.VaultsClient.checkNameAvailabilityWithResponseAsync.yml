### YamlMime:JavaMember
uid: "com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync*"
fullName: "com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync"
name: "checkNameAvailabilityWithResponseAsync"
nameWithType: "VaultsClient.checkNameAvailabilityWithResponseAsync"
members:
- uid: "com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.keyvault.fluent.VaultsClient.checkNameAvailabilityWithResponseAsync(String name)"
  name: "checkNameAvailabilityWithResponseAsync(String name)"
  nameWithType: "VaultsClient.checkNameAvailabilityWithResponseAsync(String name)"
  summary: "Checks that the vault name is valid and is not already in use."
  parameters:
  - description: "The vault name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<CheckNameAvailabilityResultInner>> checkNameAvailabilityWithResponseAsync(String name)"
  returns:
    description: "the CheckNameAvailability operation response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner?alt=com.azure.resourcemanager.keyvault.fluent.models.CheckNameAvailabilityResultInner&text=CheckNameAvailabilityResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.keyvault.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.1.0
