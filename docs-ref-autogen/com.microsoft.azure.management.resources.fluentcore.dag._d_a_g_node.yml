### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  id: _d_a_g_node
  parent: com.microsoft.azure.management.resources.fluentcore.dag
  children:
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependency(String)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependent(String)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.DAGNode(final String,final DataT)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.dependencyKeys()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.hasDependencies()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.initialize()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.isPreparer()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.lock()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.onFaultedResolution(String,Throwable)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.onSuccessfulResolution(String)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.setPreparer(boolean)
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: DAGNode<DataT,NodeT,NodeT>
  nameWithType: DAGNode<DataT,NodeT,NodeT>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT,NodeT,NodeT>
  type: Class
  source:
    remote: &o0
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
      branch: 880e2022bf46b71f481107effb7c878a9ae065dd
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 19
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>The type representing node in a <xref uid="com.microsoft.azure.management.resources.fluentcore.dag._d_a_graph" data-throw-if-not-resolved="false">DAGraph</xref>.</p>

    <p></p>
  syntax: &o1
    content: public class DAGNode<DataT,NodeT extends DAGNode<DataT,NodeT>> extends Node<DataT, NodeT>
    typeParameters:
    - type: 7aacc8e4
      description: <p>the type of the data stored in the node </p>
    - type: 3166dcd3
      description: <p>the type of the node </p>
    - type: 3166dcd3
      description: <p>the type of the node </p>
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.management.resources.fluentcore.dag._node
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.dag._node.addChild(String)
  - com.microsoft.azure.management.resources.fluentcore.dag._node.children()
  - com.microsoft.azure.management.resources.fluentcore.dag._node.data()
  - com.microsoft.azure.management.resources.fluentcore.dag._node.hasChildren()
  - com.microsoft.azure.management.resources.fluentcore.dag._node.key()
  - com.microsoft.azure.management.resources.fluentcore.dag._node.Node(final String,final DataT)
  - com.microsoft.azure.management.resources.fluentcore.dag._node.owner()
  - com.microsoft.azure.management.resources.fluentcore.dag._node.setOwner(Graph<DataT, NodeT>)
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependency(String)
  id: addDependency(String)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: addDependency(String dependencyKey)
  nameWithType: DAGNode<DataT,NodeT,NodeT>.addDependency(String dependencyKey)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.addDependency(String dependencyKey)
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependency*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 84
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>Mark the node identified by the given key as this node's dependency.</p>

    <p></p>
  syntax:
    content: public void addDependency(String dependencyKey)
    parameters:
    - id: dependencyKey
      type: "26831127"
      description: <p>the id of the dependency node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependent(String)
  id: addDependent(String)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: addDependent(String key)
  nameWithType: DAGNode<DataT,NodeT,NodeT>.addDependent(String key)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.addDependent(String key)
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependent*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 68
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>Mark the node identified by the given key as dependent of this node.</p>

    <p></p>
  syntax:
    content: public void addDependent(String key)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the id of the dependent node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.DAGNode(final String,final DataT)
  id: DAGNode(final String,final DataT)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: DAGNode(final String key, final DataT data)
  nameWithType: DAGNode<DataT,NodeT,NodeT>.DAGNode(final String key, final DataT data)
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.DAGNode(final String key, final DataT data)
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.DAGNode*
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 43
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>Creates a DAG node.</p>

    <p></p>
  syntax:
    content: public DAGNode(final String key, final DataT data)
    parameters:
    - id: key
      type: 3d93591e
      description: <p>unique id of the node </p>
    - id: data
      type: 9fbd3c83
      description: <p>data to be stored in the node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.dependencyKeys()
  id: dependencyKeys()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: dependencyKeys()
  nameWithType: DAGNode<DataT,NodeT,NodeT>.dependencyKeys()
  fullName: List<String> com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.dependencyKeys()
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.dependencyKeys*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 75
  package: com.microsoft.azure.management.resources.fluentcore.dag
  syntax:
    content: public List<String> dependencyKeys()
    return:
      type: 7d60c20e
      description: <p>a list of keys of nodes in <xref uid="com.microsoft.azure.management.resources.fluentcore.dag._d_a_graph" data-throw-if-not-resolved="false">DAGraph</xref> that this node depends on </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.hasDependencies()
  id: hasDependencies()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: hasDependencies()
  nameWithType: DAGNode<DataT,NodeT,NodeT>.hasDependencies()
  fullName: boolean com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.hasDependencies()
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.hasDependencies*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 91
  package: com.microsoft.azure.management.resources.fluentcore.dag
  syntax:
    content: public boolean hasDependencies()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this node has any dependency </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.initialize()
  id: initialize()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: initialize()
  nameWithType: DAGNode<DataT,NodeT,NodeT>.initialize()
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.initialize()
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.initialize*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 114
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: <p>Initialize the node so that traversal can be performed on the parent DAG. </p>
  syntax:
    content: public void initialize()
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.isPreparer()
  id: isPreparer()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: isPreparer()
  nameWithType: DAGNode<DataT,NodeT,NodeT>.isPreparer()
  fullName: boolean com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.isPreparer()
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.isPreparer*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 107
  package: com.microsoft.azure.management.resources.fluentcore.dag
  syntax:
    content: public boolean isPreparer()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this node is marked as preparer </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.lock()
  id: lock()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: lock()
  nameWithType: DAGNode<DataT,NodeT,NodeT>.lock()
  fullName: ReentrantLock com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.lock()
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.lock*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 52
  package: com.microsoft.azure.management.resources.fluentcore.dag
  syntax:
    content: public ReentrantLock lock()
    return:
      type: 8d30929a
      description: <p>the lock to be used while performing thread safe operation on this node. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.onFaultedResolution(String,Throwable)
  id: onFaultedResolution(String,Throwable)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: onFaultedResolution(String dependencyKey, Throwable throwable)
  nameWithType: DAGNode<DataT,NodeT,NodeT>.onFaultedResolution(String dependencyKey, Throwable throwable)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.onFaultedResolution(String dependencyKey, Throwable throwable)
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.onFaultedResolution*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 144
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>Reports a dependency of this node has been faulted.</p>

    <p></p>
  syntax:
    content: protected void onFaultedResolution(String dependencyKey, Throwable throwable)
    parameters:
    - id: dependencyKey
      type: "26831127"
      description: <p>the id of the dependency node </p>
    - id: throwable
      type: a04fafd7
      description: <p>the reason for unsuccessful resolution </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.onSuccessfulResolution(String)
  id: onSuccessfulResolution(String)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: onSuccessfulResolution(String dependencyKey)
  nameWithType: DAGNode<DataT,NodeT,NodeT>.onSuccessfulResolution(String dependencyKey)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.onSuccessfulResolution(String dependencyKey)
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.onSuccessfulResolution*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 131
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>Reports a dependency of this node has been successfully resolved.</p>

    <p></p>
  syntax:
    content: protected void onSuccessfulResolution(String dependencyKey)
    parameters:
    - id: dependencyKey
      type: "26831127"
      description: <p>the id of the dependency node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.setPreparer(boolean)
  id: setPreparer(boolean)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  langs:
  - java
  name: setPreparer(boolean isPreparer)
  nameWithType: DAGNode<DataT,NodeT,NodeT>.setPreparer(boolean isPreparer)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.setPreparer(boolean isPreparer)
  overload: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.setPreparer*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/DAGNode.java
    startLine: 100
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>Mark or un-mark this node as preparer.</p>

    <p></p>
  syntax:
    content: public void setPreparer(boolean isPreparer)
    parameters:
    - id: isPreparer
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this node needs to be marked as preparer, <code>false</code> otherwise. </p>
references:
- uid: 7aacc8e4
  spec.java:
  - name: DataT
    fullName: DataT
- uid: 3166dcd3
  spec.java:
  - name: NodeT
    fullName: NodeT
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 9fbd3c83
  spec.java:
  - name: final DataT
    fullName: final DataT
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.DAGNode*
  name: DAGNode
  nameWithType: DAGNode<DataT,NodeT,NodeT>.DAGNode
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.DAGNode
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: 8d30929a
  spec.java:
  - name: ReentrantLock
    fullName: ReentrantLock
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.lock*
  name: lock
  nameWithType: DAGNode<DataT,NodeT,NodeT>.lock
  fullName: ReentrantLock com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.lock
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependent*
  name: addDependent
  nameWithType: DAGNode<DataT,NodeT,NodeT>.addDependent
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.addDependent
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: 7d60c20e
  spec.java:
  - name: List<String>
    fullName: List<String>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.dependencyKeys*
  name: dependencyKeys
  nameWithType: DAGNode<DataT,NodeT,NodeT>.dependencyKeys
  fullName: List<String> com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.dependencyKeys
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependency*
  name: addDependency
  nameWithType: DAGNode<DataT,NodeT,NodeT>.addDependency
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.addDependency
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.hasDependencies*
  name: hasDependencies
  nameWithType: DAGNode<DataT,NodeT,NodeT>.hasDependencies
  fullName: boolean com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.hasDependencies
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.setPreparer*
  name: setPreparer
  nameWithType: DAGNode<DataT,NodeT,NodeT>.setPreparer
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.setPreparer
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.isPreparer*
  name: isPreparer
  nameWithType: DAGNode<DataT,NodeT,NodeT>.isPreparer
  fullName: boolean com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.isPreparer
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.initialize*
  name: initialize
  nameWithType: DAGNode<DataT,NodeT,NodeT>.initialize
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.initialize
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.onSuccessfulResolution*
  name: onSuccessfulResolution
  nameWithType: DAGNode<DataT,NodeT,NodeT>.onSuccessfulResolution
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.onSuccessfulResolution
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: a04fafd7
  spec.java:
  - name: Throwable
    fullName: Throwable
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.onFaultedResolution*
  name: onFaultedResolution
  nameWithType: DAGNode<DataT,NodeT,NodeT>.onFaultedResolution
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.onFaultedResolution
  package: com.microsoft.azure.management.resources.fluentcore.dag
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node.addChild(String)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._node
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: addChild(String childKey)
  nameWithType: Node<DataT,NodeT,NodeT>.addChild(String childKey)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT, NodeT extends Node<DataT, NodeT>.addChild(String childKey)
  type: Method
  syntax:
    content: public void addChild(String childKey)
    parameters:
    - id: childKey
      type: "26831127"
      description: <p>add a child (neighbour) of this node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node.children()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._node
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: children()
  nameWithType: Node<DataT,NodeT,NodeT>.children()
  fullName: List<String> com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT, NodeT extends Node<DataT, NodeT>.children()
  type: Method
  syntax:
    content: public List<String> children()
    return:
      type: 7d60c20e
      description: <p>children (neighbours) of this node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node.data()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._node
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: data()
  nameWithType: Node<DataT,NodeT,NodeT>.data()
  fullName: DataT com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT, NodeT extends Node<DataT, NodeT>.data()
  type: Method
  syntax:
    content: public DataT data()
    return:
      type: 7aacc8e4
      description: <p>data stored in this node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node.hasChildren()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._node
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: hasChildren()
  nameWithType: Node<DataT,NodeT,NodeT>.hasChildren()
  fullName: boolean com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT, NodeT extends Node<DataT, NodeT>.hasChildren()
  type: Method
  syntax:
    content: public boolean hasChildren()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this node has any children </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node.key()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._node
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: key()
  nameWithType: Node<DataT,NodeT,NodeT>.key()
  fullName: String com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT, NodeT extends Node<DataT, NodeT>.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>this node's unique id </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node.Node(final String,final DataT)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._node
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: Node(final String key, final DataT data)
  nameWithType: Node<DataT,NodeT,NodeT>.Node(final String key, final DataT data)
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT, NodeT extends Node<DataT, NodeT>.Node(final String key, final DataT data)
  type: Constructor
  summary: >-
    <p>Creates a graph node.</p>

    <p></p>
  syntax:
    content: public Node(final String key, final DataT data)
    parameters:
    - id: key
      type: 3d93591e
      description: <p>unique id of the node </p>
    - id: data
      type: 9fbd3c83
      description: <p>data to be stored in the node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node.owner()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._node
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: owner()
  nameWithType: Node<DataT,NodeT,NodeT>.owner()
  fullName: Graph<DataT, NodeT> com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT, NodeT extends Node<DataT, NodeT>.owner()
  type: Method
  syntax:
    content: public Graph<DataT, NodeT> owner()
    return:
      type: com.microsoft.azure.management.resources.fluentcore.dag._graph513491d4
      description: <p>the owner (container) graph of this node. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node.setOwner(Graph<DataT, NodeT>)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._node
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: setOwner(Graph<DataT, NodeT> ownerGraph)
  nameWithType: Node<DataT,NodeT,NodeT>.setOwner(Graph<DataT, NodeT> ownerGraph)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT, NodeT extends Node<DataT, NodeT>.setOwner(Graph<DataT, NodeT> ownerGraph)
  type: Method
  summary: >-
    <p>Sets reference to the graph owning this node.</p>

    <p></p>
  syntax:
    content: public void setOwner(Graph<DataT, NodeT> ownerGraph)
    parameters:
    - id: ownerGraph
      type: com.microsoft.azure.management.resources.fluentcore.dag._graph513491d4
      description: <p>the owning graph </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._node
  parent: com.microsoft.azure.management.resources.fluentcore.dag
  href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
  name: Node<DataT,NodeT,NodeT>
  nameWithType: Node<DataT,NodeT,NodeT>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT,NodeT,NodeT>
  type: Class
  summary: >-
    <p>Type represents a node in a <xref uid="com.microsoft.azure.management.resources.fluentcore.dag._graph" data-throw-if-not-resolved="false">Graph</xref>.</p>

    <p></p>
  syntax:
    content: public class Node<DataT,NodeT extends Node<DataT,NodeT>>
    typeParameters:
    - type: 7aacc8e4
      description: <p>the type of the data stored in the node </p>
    - type: 3166dcd3
      description: <p>the type of the node </p>
    - type: 3166dcd3
      description: <p>the type of the node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  parent: com.microsoft.azure.management.resources.fluentcore.dag
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: DAGNode<DataT,NodeT,NodeT>
  nameWithType: DAGNode<DataT,NodeT,NodeT>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT,NodeT,NodeT>
  type: Class
  summary: >-
    <p>The type representing node in a <xref uid="com.microsoft.azure.management.resources.fluentcore.dag._d_a_graph" data-throw-if-not-resolved="false">DAGraph</xref>.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_graph
  parent: com.microsoft.azure.management.resources.fluentcore.dag
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_graph.yml
  name: DAGraph<DataT,NodeT,NodeT>
  nameWithType: DAGraph<DataT,NodeT,NodeT>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGraph<DataT,NodeT,NodeT>
  type: Class
  summary: >-
    <p>Type representing a DAG (directed acyclic graph). </p>

    <p>each node in a DAG is represented by <xref uid="com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node" data-throw-if-not-resolved="false">DAGNode</xref></p>

    <p></p>
  syntax:
    content: public class DAGraph<DataT,NodeT extends DAGNode<DataT,NodeT>>
    typeParameters:
    - type: 7aacc8e4
      description: <p>the type of the data stored in the graph nodes </p>
    - type: 3166dcd3
      description: <p>the type of the nodes in the graph </p>
    - type: 3166dcd3
      description: <p>the type of the nodes in the graph </p>
