### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appservice.models.WebAppBase.UpdateStages.WithNetworkAccess.withAccessFromIpAddress*"
fullName: "com.azure.resourcemanager.appservice.models.WebAppBase.UpdateStages.WithNetworkAccess<FluentT>.withAccessFromIpAddress"
name: "withAccessFromIpAddress"
nameWithType: "WebAppBase.UpdateStages.WithNetworkAccess<FluentT>.withAccessFromIpAddress"
members:
- uid: "com.azure.resourcemanager.appservice.models.WebAppBase.UpdateStages.WithNetworkAccess.withAccessFromIpAddress(java.lang.String,int)"
  fullName: "com.azure.resourcemanager.appservice.models.WebAppBase.UpdateStages.WithNetworkAccess<FluentT>.withAccessFromIpAddress(String ipAddress, int priority)"
  name: "withAccessFromIpAddress(String ipAddress, int priority)"
  nameWithType: "WebAppBase.UpdateStages.WithNetworkAccess<FluentT>.withAccessFromIpAddress(String ipAddress, int priority)"
  summary: "Specifies that access to the web app from the specific ip address should be allowed. Allowing any specific access will add a Deny Any rule with least priority."
  parameters:
  - description: "the ip address"
    name: "ipAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the priority of the rule"
    name: "priority"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WebAppBase.Update<FluentT> withAccessFromIpAddress(String ipAddress, int priority)"
  returns:
    description: "the next stage of the update"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.WebAppBase.Update?alt=com.azure.resourcemanager.appservice.models.WebAppBase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"FluentT?alt=FluentT&text=FluentT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.13.0
