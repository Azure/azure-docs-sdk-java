### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  id: ProvidersImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation
  children:
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.ProvidersImpl(com.azure.resourcemanager.resources.fluent.ProvidersClient)
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByName(java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByNameAsync(java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.list()
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.listAsync()
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.register(java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.registerAsync(java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregister(java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregisterAsync(java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ProvidersImpl.wrapModel(com.azure.resourcemanager.resources.fluent.models.ProviderInner)
  langs:
  - java
  name: ProvidersImpl
  nameWithType: ProvidersImpl
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  type: Class
  package: com.azure.resourcemanager.resources.implementation
  summary: The implementation for <xref uid="com.azure.resourcemanager.resources.models.Providers" data-throw-if-not-resolved="false">Providers</xref>.
  syntax:
    content: public final class ProvidersImpl extends ReadableWrappersImpl<Provider,ProviderImpl,ProviderInner> implements Providers
  inheritance:
  - java.lang.Object
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl
  implements:
  - com.azure.resourcemanager.resources.models.Providers
  inheritedMembers:
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.azure.core.http.rest.PagedIterable<InnerT>)
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)
  - com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(com.azure.core.http.rest.PagedFlux<InnerT>)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.ProvidersImpl(com.azure.resourcemanager.resources.fluent.ProvidersClient)
  id: ProvidersImpl(com.azure.resourcemanager.resources.fluent.ProvidersClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: ProvidersImpl(ProvidersClient client)
  nameWithType: ProvidersImpl.ProvidersImpl(ProvidersClient client)
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.ProvidersImpl(ProvidersClient client)
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.ProvidersImpl*
  type: Constructor
  package: com.azure.resourcemanager.resources.implementation
  syntax:
    content: public ProvidersImpl(ProvidersClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.resources.fluent.ProvidersClient
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByName(java.lang.String)
  id: getByName(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: getByName(String resourceProviderNamespace)
  nameWithType: ProvidersImpl.getByName(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByName(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByName*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets the information about a resource from Azure based on the resource name within the current resource group.
  syntax:
    content: public Provider getByName(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
    return:
      type: com.azure.resourcemanager.resources.models.Provider
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByNameAsync(java.lang.String)
  id: getByNameAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: getByNameAsync(String name)
  nameWithType: ProvidersImpl.getByNameAsync(String name)
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByNameAsync(String name)
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByNameAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets the information about a provider from Azure based on the provider name.
  syntax:
    content: public Mono<Provider> getByNameAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.models.Provider>
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: list()
  nameWithType: ProvidersImpl.list()
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.list()
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.list*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Lists all the resources of the specified type in the currently selected subscription.
  syntax:
    content: public PagedIterable<Provider> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.models.Provider>
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: listAsync()
  nameWithType: ProvidersImpl.listAsync()
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.listAsync()
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Lists all the resources of the specified type in the currently selected subscription.
  syntax:
    content: public PagedFlux<Provider> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.models.Provider>
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.register(java.lang.String)
  id: register(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: register(String resourceProviderNamespace)
  nameWithType: ProvidersImpl.register(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.register(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.register*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Registers provider to be used with a subscription.
  syntax:
    content: public Provider register(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
    return:
      type: com.azure.resourcemanager.resources.models.Provider
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.registerAsync(java.lang.String)
  id: registerAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: registerAsync(String resourceProviderNamespace)
  nameWithType: ProvidersImpl.registerAsync(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.registerAsync(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.registerAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Registers provider to be used with a subscription asynchronously.
  syntax:
    content: public Mono<Provider> registerAsync(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.models.Provider>
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregister(java.lang.String)
  id: unregister(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: unregister(String resourceProviderNamespace)
  nameWithType: ProvidersImpl.unregister(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregister(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregister*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Unregisters provider from a subscription.
  syntax:
    content: public Provider unregister(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
    return:
      type: com.azure.resourcemanager.resources.models.Provider
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregisterAsync(java.lang.String)
  id: unregisterAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: unregisterAsync(String resourceProviderNamespace)
  nameWithType: ProvidersImpl.unregisterAsync(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregisterAsync(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregisterAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Unregisters provider from a subscription asynchronously.
  syntax:
    content: public Mono<Provider> unregisterAsync(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.models.Provider>
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.wrapModel(com.azure.resourcemanager.resources.fluent.models.ProviderInner)
  id: wrapModel(com.azure.resourcemanager.resources.fluent.models.ProviderInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ProvidersImpl
  langs:
  - java
  name: wrapModel(ProviderInner inner)
  nameWithType: ProvidersImpl.wrapModel(ProviderInner inner)
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.wrapModel(ProviderInner inner)
  overload: com.azure.resourcemanager.resources.implementation.ProvidersImpl.wrapModel*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  syntax:
    content: protected ProviderImpl wrapModel(ProviderInner inner)
    parameters:
    - id: inner
      type: com.azure.resourcemanager.resources.fluent.models.ProviderInner
    return:
      type: com.azure.resourcemanager.resources.implementation.ProviderImpl
references:
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient
  name: ProvidersClient
  nameWithType: ProvidersClient
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.ProvidersImpl*
  name: ProvidersImpl
  nameWithType: ProvidersImpl.ProvidersImpl
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.ProvidersImpl
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.models.Provider>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.models.Provider
    name: Provider
    fullName: com.azure.resourcemanager.resources.models.Provider
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.list*
  name: list
  nameWithType: ProvidersImpl.list
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.list
  package: com.azure.resourcemanager.resources.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.resources.models.Provider
  name: Provider
  nameWithType: Provider
  fullName: com.azure.resourcemanager.resources.models.Provider
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregister*
  name: unregister
  nameWithType: ProvidersImpl.unregister
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregister
  package: com.azure.resourcemanager.resources.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.models.Provider>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.models.Provider
    name: Provider
    fullName: com.azure.resourcemanager.resources.models.Provider
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregisterAsync*
  name: unregisterAsync
  nameWithType: ProvidersImpl.unregisterAsync
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.unregisterAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.register*
  name: register
  nameWithType: ProvidersImpl.register
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.register
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.registerAsync*
  name: registerAsync
  nameWithType: ProvidersImpl.registerAsync
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.registerAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByNameAsync*
  name: getByNameAsync
  nameWithType: ProvidersImpl.getByNameAsync
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByNameAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByName*
  name: getByName
  nameWithType: ProvidersImpl.getByName
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.getByName
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.models.Provider>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.models.Provider
    name: Provider
    fullName: com.azure.resourcemanager.resources.models.Provider
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.listAsync*
  name: listAsync
  nameWithType: ProvidersImpl.listAsync
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.listAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.fluent.models.ProviderInner
  name: ProviderInner
  nameWithType: ProviderInner
  fullName: com.azure.resourcemanager.resources.fluent.models.ProviderInner
- uid: com.azure.resourcemanager.resources.implementation.ProviderImpl
  spec.java:
  - uid: com.azure.resourcemanager.resources.implementation.ProviderImpl
    name: ProviderImpl
    fullName: com.azure.resourcemanager.resources.implementation.ProviderImpl
- uid: com.azure.resourcemanager.resources.implementation.ProvidersImpl.wrapModel*
  name: wrapModel
  nameWithType: ProvidersImpl.wrapModel
  fullName: com.azure.resourcemanager.resources.implementation.ProvidersImpl.wrapModel
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<com.azure.resourcemanager.resources.models.Provider,com.azure.resourcemanager.resources.implementation.ProviderImpl,com.azure.resourcemanager.resources.fluent.models.ProviderInner>
  name: ReadableWrappersImpl<Provider,ProviderImpl,ProviderInner>
  nameWithType: ReadableWrappersImpl<Provider,ProviderImpl,ProviderInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<com.azure.resourcemanager.resources.models.Provider,com.azure.resourcemanager.resources.implementation.ProviderImpl,com.azure.resourcemanager.resources.fluent.models.ProviderInner>
- uid: com.azure.resourcemanager.resources.models.Providers
  name: Providers
  nameWithType: Providers
  fullName: com.azure.resourcemanager.resources.models.Providers
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.azure.core.http.rest.PagedIterable<InnerT>)
  name: ReadableWrappersImpl.wrapList(PagedIterable<InnerT>)
  nameWithType: ReadableWrappersImpl.wrapList(PagedIterable<InnerT>)
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.azure.core.http.rest.PagedIterable<InnerT>)
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(com.azure.core.http.rest.PagedFlux<InnerT>)
  name: ReadableWrappersImpl.wrapPageAsync(PagedFlux<InnerT>)
  nameWithType: ReadableWrappersImpl.wrapPageAsync(PagedFlux<InnerT>)
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(com.azure.core.http.rest.PagedFlux<InnerT>)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)
  name: ReadableWrappersImpl.wrapModel(InnerT)
  nameWithType: ReadableWrappersImpl.wrapModel(InnerT)
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl
  name: ReadableWrappersImpl
  nameWithType: ReadableWrappersImpl
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl
- uid: com.azure.resourcemanager.resources.models.Provider,com.azure.resourcemanager.resources.implementation.ProviderImpl,com.azure.resourcemanager.resources.fluent.models.ProviderInner
  name: Provider,ProviderImpl,ProviderInner
  nameWithType: Provider,ProviderImpl,ProviderInner
  fullName: com.azure.resourcemanager.resources.models.Provider,com.azure.resourcemanager.resources.implementation.ProviderImpl,com.azure.resourcemanager.resources.fluent.models.ProviderInner
- uid: InnerT>)
  name: InnerT>)
  nameWithType: InnerT>)
  fullName: InnerT>)
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.azure.core.http.rest.PagedIterable
  name: ReadableWrappersImpl.wrapList(PagedIterable
  nameWithType: ReadableWrappersImpl.wrapList(PagedIterable
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(com.azure.core.http.rest.PagedFlux
  name: ReadableWrappersImpl.wrapPageAsync(PagedFlux
  nameWithType: ReadableWrappersImpl.wrapPageAsync(PagedFlux
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(com.azure.core.http.rest.PagedFlux
