### YamlMime:JavaType
uid: "com.azure.resourcemanager.redis.models.RedisCache"
fullName: "com.azure.resourcemanager.redis.models.RedisCache"
name: "RedisCache"
nameWithType: "RedisCache"
summary: "An immutable client-side representation of an Azure Redis Cache."
syntax: "public interface RedisCache extends GroupableResource<RedisManager,RedisResourceInner>, Refreshable<RedisCache>, Updatable<RedisCache.Update>, SupportsListingPrivateLinkResource, SupportsListingPrivateEndpointConnection, SupportsUpdatingPrivateEndpointConnection"
methods:
- uid: "com.azure.resourcemanager.redis.models.RedisCache.asPremium()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.asPremium()"
  name: "asPremium()"
  nameWithType: "RedisCache.asPremium()"
  modifiers:
  - "abstract"
  syntax: "public abstract RedisCachePremium asPremium()"
  returns:
    description: "exposes features available only to Premium Sku Redis Cache instances."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisCachePremium?alt=com.azure.resourcemanager.redis.models.RedisCachePremium&text=RedisCachePremium\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.firewallRules()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.firewallRules()"
  name: "firewallRules()"
  nameWithType: "RedisCache.firewallRules()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,RedisFirewallRule> firewallRules()"
  returns:
    description: "Firewall Rules in the Redis Cache, indexed by name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.resourcemanager.redis.models.RedisFirewallRule?alt=com.azure.resourcemanager.redis.models.RedisFirewallRule&text=RedisFirewallRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.forceReboot(com.azure.resourcemanager.redis.models.RebootType)"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.forceReboot(RebootType rebootType)"
  name: "forceReboot(RebootType rebootType)"
  nameWithType: "RedisCache.forceReboot(RebootType rebootType)"
  summary: "Reboot specified Redis node(s)."
  modifiers:
  - "abstract"
  parameters:
  - description: "specifies which Redis node(s) to reboot. Depending on this value data loss is possible.\n     Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'."
    name: "rebootType"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RebootType?alt=com.azure.resourcemanager.redis.models.RebootType&text=RebootType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void forceReboot(RebootType rebootType)"
  desc: "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss."
- uid: "com.azure.resourcemanager.redis.models.RedisCache.hostname()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.hostname()"
  name: "hostname()"
  nameWithType: "RedisCache.hostname()"
  modifiers:
  - "abstract"
  syntax: "public abstract String hostname()"
  returns:
    description: "the hostname value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.isPremium()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.isPremium()"
  name: "isPremium()"
  nameWithType: "RedisCache.isPremium()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isPremium()"
  returns:
    description: "returns true if current Redis Cache instance has Premium Sku."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.keys()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.keys()"
  name: "keys()"
  nameWithType: "RedisCache.keys()"
  modifiers:
  - "abstract"
  syntax: "public abstract RedisAccessKeys keys()"
  returns:
    description: "a Redis Cache's access keys. This operation requires write permission to the Cache resource."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisAccessKeys?alt=com.azure.resourcemanager.redis.models.RedisAccessKeys&text=RedisAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.minimumTlsVersion()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.minimumTlsVersion()"
  name: "minimumTlsVersion()"
  nameWithType: "RedisCache.minimumTlsVersion()"
  modifiers:
  - "abstract"
  syntax: "public abstract TlsVersion minimumTlsVersion()"
  returns:
    description: "the minimum TLS version (or higher) that clients require to use."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.TlsVersion?alt=com.azure.resourcemanager.redis.models.TlsVersion&text=TlsVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.nonSslPort()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.nonSslPort()"
  name: "nonSslPort()"
  nameWithType: "RedisCache.nonSslPort()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean nonSslPort()"
  returns:
    description: "true if non SSL port is enabled, false otherwise"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.patchSchedules()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.patchSchedules()"
  name: "patchSchedules()"
  nameWithType: "RedisCache.patchSchedules()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<ScheduleEntry> patchSchedules()"
  returns:
    description: "List of patch schedules for current Redis Cache."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.redis.models.ScheduleEntry?alt=com.azure.resourcemanager.redis.models.ScheduleEntry&text=ScheduleEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.port()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.port()"
  name: "port()"
  nameWithType: "RedisCache.port()"
  modifiers:
  - "abstract"
  syntax: "public abstract int port()"
  returns:
    description: "the port value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.provisioningState()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.provisioningState()"
  name: "provisioningState()"
  nameWithType: "RedisCache.provisioningState()"
  modifiers:
  - "abstract"
  syntax: "public abstract String provisioningState()"
  returns:
    description: "the provisioningState value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.redisConfiguration()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.redisConfiguration()"
  name: "redisConfiguration()"
  nameWithType: "RedisCache.redisConfiguration()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> redisConfiguration()"
  returns:
    description: "the Redis configuration value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.redisVersion()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.redisVersion()"
  name: "redisVersion()"
  nameWithType: "RedisCache.redisVersion()"
  modifiers:
  - "abstract"
  syntax: "public abstract String redisVersion()"
  returns:
    description: "the Redis version value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.refreshKeys()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.refreshKeys()"
  name: "refreshKeys()"
  nameWithType: "RedisCache.refreshKeys()"
  summary: "Fetch the up-to-date access keys from Azure for this Redis Cache."
  modifiers:
  - "abstract"
  syntax: "public abstract RedisAccessKeys refreshKeys()"
  desc: "Fetch the up-to-date access keys from Azure for this Redis Cache."
  returns:
    description: "the access keys for this Redis Cache"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisAccessKeys?alt=com.azure.resourcemanager.redis.models.RedisAccessKeys&text=RedisAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.regenerateKey(com.azure.resourcemanager.redis.models.RedisKeyType)"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.regenerateKey(RedisKeyType keyType)"
  name: "regenerateKey(RedisKeyType keyType)"
  nameWithType: "RedisCache.regenerateKey(RedisKeyType keyType)"
  summary: "Regenerates the access keys for this Redis Cache."
  modifiers:
  - "abstract"
  parameters:
  - description: "key type to regenerate"
    name: "keyType"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisKeyType?alt=com.azure.resourcemanager.redis.models.RedisKeyType&text=RedisKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RedisAccessKeys regenerateKey(RedisKeyType keyType)"
  desc: "Regenerates the access keys for this Redis Cache."
  returns:
    description: "the generated access keys for this Redis Cache"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.RedisAccessKeys?alt=com.azure.resourcemanager.redis.models.RedisAccessKeys&text=RedisAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.shardCount()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.shardCount()"
  name: "shardCount()"
  nameWithType: "RedisCache.shardCount()"
  modifiers:
  - "abstract"
  syntax: "public abstract int shardCount()"
  returns:
    description: "the shardCount value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.sku()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.sku()"
  name: "sku()"
  nameWithType: "RedisCache.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract Sku sku()"
  returns:
    description: "the sku value"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.sslPort()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.sslPort()"
  name: "sslPort()"
  nameWithType: "RedisCache.sslPort()"
  modifiers:
  - "abstract"
  syntax: "public abstract int sslPort()"
  returns:
    description: "the sslPort value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.staticIp()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.staticIp()"
  name: "staticIp()"
  nameWithType: "RedisCache.staticIp()"
  modifiers:
  - "abstract"
  syntax: "public abstract String staticIp()"
  returns:
    description: "the staticIP value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.redis.models.RedisCache.subnetId()"
  fullName: "com.azure.resourcemanager.redis.models.RedisCache.subnetId()"
  name: "subnetId()"
  nameWithType: "RedisCache.subnetId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String subnetId()"
  returns:
    description: "the subnetId value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "interface"
desc: "An immutable client-side representation of an Azure Redis Cache."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.RedisManager?alt=com.azure.resourcemanager.redis.RedisManager&text=RedisManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisResourceInner?alt=com.azure.resourcemanager.redis.fluent.models.RedisResourceInner&text=RedisResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListingPrivateEndpointConnection?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListingPrivateEndpointConnection&text=SupportsListingPrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListingPrivateLinkResource?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListingPrivateLinkResource&text=SupportsListingPrivateLinkResource\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsUpdatingPrivateEndpointConnection?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsUpdatingPrivateEndpointConnection&text=SupportsUpdatingPrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.models.RedisCache?alt=com.azure.resourcemanager.redis.models.RedisCache&text=RedisCache\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.models.RedisCache.Update?alt=com.azure.resourcemanager.redis.models.RedisCache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.redis.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.19.0
