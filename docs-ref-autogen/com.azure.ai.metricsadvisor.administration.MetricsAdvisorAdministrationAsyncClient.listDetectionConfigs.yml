### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs"
name: "listDetectionConfigs"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs(java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs(String metricId)"
  name: "listDetectionConfigs(String metricId)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs(String metricId)"
  summary: "Given a metric id, retrieve all anomaly detection configurations applied to it.\n\n**Code sample**\n\n```java\nfinal String metricId = \"0b836da8-10e6-46cd-8f4f-28262e113a62\";\n metricsAdvisorAdminAsyncClient.listDetectionConfigs(metricId)\n     .subscribe(detectionConfig -> {\n         System.out.printf(\"Detection config Id: %s%n\", detectionConfig.getId());\n         System.out.printf(\"Name: %s%n\", detectionConfig.getName());\n         System.out.printf(\"Description: %s%n\", detectionConfig.getDescription());\n         System.out.printf(\"MetricId: %s%n\", detectionConfig.getMetricId());\n     });\n```"
  parameters:
  - description: "The metric id."
    name: "metricId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<AnomalyDetectionConfiguration> listDetectionConfigs(String metricId)"
  returns:
    description: "The anomaly detection configurations."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.AnomalyDetectionConfiguration?alt=com.azure.ai.metricsadvisor.administration.models.AnomalyDetectionConfiguration&text=AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs(java.lang.String,com.azure.ai.metricsadvisor.administration.models.ListDetectionConfigsOptions)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs(String metricId, ListDetectionConfigsOptions listDetectionConfigsOptions)"
  name: "listDetectionConfigs(String metricId, ListDetectionConfigsOptions listDetectionConfigsOptions)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.listDetectionConfigs(String metricId, ListDetectionConfigsOptions listDetectionConfigsOptions)"
  summary: "Given a metric id, retrieve all anomaly detection configurations applied to it.\n\n**Code sample**\n\n```java\nfinal String metricId = \"0b836da8-10e6-46cd-8f4f-28262e113a62\";\n metricsAdvisorAdminAsyncClient.listDetectionConfigs(metricId,\n     new ListDetectionConfigsOptions())\n     .subscribe(detectionConfig -> {\n         System.out.printf(\"Detection config Id: %s%n\", detectionConfig.getId());\n         System.out.printf(\"Name: %s%n\", detectionConfig.getName());\n         System.out.printf(\"Description: %s%n\", detectionConfig.getDescription());\n         System.out.printf(\"MetricId: %s%n\", detectionConfig.getMetricId());\n     });\n```"
  parameters:
  - description: "The metric id."
    name: "metricId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the additional configurable options to specify when querying the result."
    name: "listDetectionConfigsOptions"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.ListDetectionConfigsOptions?alt=com.azure.ai.metricsadvisor.administration.models.ListDetectionConfigsOptions&text=ListDetectionConfigsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<AnomalyDetectionConfiguration> listDetectionConfigs(String metricId, ListDetectionConfigsOptions listDetectionConfigsOptions)"
  returns:
    description: "The anomaly detection configurations."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.AnomalyDetectionConfiguration?alt=com.azure.ai.metricsadvisor.administration.models.AnomalyDetectionConfiguration&text=AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.1.1
