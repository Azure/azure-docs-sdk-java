### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask"
fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask"
name: "JobReleaseTask"
nameWithType: "JobReleaseTask"
summary: "A Job Release Task to run on Job completion on any Compute Node where the Job has run."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JobReleaseTask"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.JobReleaseTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.JobReleaseTask()"
  name: "JobReleaseTask()"
  nameWithType: "JobReleaseTask.JobReleaseTask()"
  syntax: "public JobReleaseTask()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.commandLine()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.commandLine()"
  name: "commandLine()"
  nameWithType: "JobReleaseTask.commandLine()"
  summary: "Get the command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion."
  syntax: "public String commandLine()"
  desc: "Get the command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
  returns:
    description: "the commandLine value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.containerSettings()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.containerSettings()"
  name: "containerSettings()"
  nameWithType: "JobReleaseTask.containerSettings()"
  summary: "Get when this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container."
  syntax: "public TaskContainerSettings containerSettings()"
  desc: "Get when this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the containerSettings value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerSettings?alt=com.microsoft.azure.batch.protocol.models.TaskContainerSettings&text=TaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.environmentSettings()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.environmentSettings()"
  name: "environmentSettings()"
  nameWithType: "JobReleaseTask.environmentSettings()"
  summary: "Get the environment<wbr>Settings value."
  syntax: "public List<EnvironmentSetting> environmentSettings()"
  desc: "Get the environmentSettings value."
  returns:
    description: "the environmentSettings value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.id()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.id()"
  name: "id()"
  nameWithType: "JobReleaseTask.id()"
  summary: "Get the ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters."
  syntax: "public String id()"
  desc: "Get the ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobrelease'. No other Task in the Job can have the same ID as the Job Release Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict)."
  returns:
    description: "the id value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.maxWallClockTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.maxWallClockTime()"
  name: "maxWallClockTime()"
  nameWithType: "JobReleaseTask.maxWallClockTime()"
  summary: "Get the max<wbr>Wall<wbr>Clock<wbr>Time value."
  syntax: "public Period maxWallClockTime()"
  desc: "Get the maxWallClockTime value."
  returns:
    description: "the maxWallClockTime value"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.resourceFiles()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.resourceFiles()"
  name: "resourceFiles()"
  nameWithType: "JobReleaseTask.resourceFiles()"
  summary: "Get files listed under this element are located in the Task's working directory."
  syntax: "public List<ResourceFile> resourceFiles()"
  desc: "Get files listed under this element are located in the Task's working directory."
  returns:
    description: "the resourceFiles value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.retentionTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.retentionTime()"
  name: "retentionTime()"
  nameWithType: "JobReleaseTask.retentionTime()"
  summary: "Get the default is 7 days, i.<wbr>e."
  syntax: "public Period retentionTime()"
  desc: "Get the default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted."
  returns:
    description: "the retentionTime value"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.userIdentity()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.userIdentity()"
  name: "userIdentity()"
  nameWithType: "JobReleaseTask.userIdentity()"
  summary: "Get if omitted, the Task runs as a non-administrative user unique to the Task."
  syntax: "public UserIdentity userIdentity()"
  desc: "Get if omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the userIdentity value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.UserIdentity?alt=com.microsoft.azure.batch.protocol.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withCommandLine(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withCommandLine(String commandLine)"
  name: "withCommandLine(String commandLine)"
  nameWithType: "JobReleaseTask.withCommandLine(String commandLine)"
  summary: "Set the command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion."
  parameters:
  - description: "the commandLine value to set"
    name: "commandLine"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTask withCommandLine(String commandLine)"
  desc: "Set the command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
  returns:
    description: "the JobReleaseTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withContainerSettings(com.microsoft.azure.batch.protocol.models.TaskContainerSettings)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withContainerSettings(TaskContainerSettings containerSettings)"
  name: "withContainerSettings(TaskContainerSettings containerSettings)"
  nameWithType: "JobReleaseTask.withContainerSettings(TaskContainerSettings containerSettings)"
  summary: "Set when this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container."
  parameters:
  - description: "the containerSettings value to set"
    name: "containerSettings"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerSettings?alt=com.microsoft.azure.batch.protocol.models.TaskContainerSettings&text=TaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTask withContainerSettings(TaskContainerSettings containerSettings)"
  desc: "Set when this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the JobReleaseTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  name: "withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  nameWithType: "JobReleaseTask.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  summary: "Set the environment<wbr>Settings value."
  parameters:
  - description: "the environmentSettings value to set"
    name: "environmentSettings"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobReleaseTask withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  desc: "Set the environmentSettings value."
  returns:
    description: "the JobReleaseTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withId(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withId(String id)"
  name: "withId(String id)"
  nameWithType: "JobReleaseTask.withId(String id)"
  summary: "Set the ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters."
  parameters:
  - description: "the id value to set"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTask withId(String id)"
  desc: "Set the ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobrelease'. No other Task in the Job can have the same ID as the Job Release Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict)."
  returns:
    description: "the JobReleaseTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withMaxWallClockTime(org.joda.time.Period)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withMaxWallClockTime(Period maxWallClockTime)"
  name: "withMaxWallClockTime(Period maxWallClockTime)"
  nameWithType: "JobReleaseTask.withMaxWallClockTime(Period maxWallClockTime)"
  summary: "Set the max<wbr>Wall<wbr>Clock<wbr>Time value."
  parameters:
  - description: "the maxWallClockTime value to set"
    name: "maxWallClockTime"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTask withMaxWallClockTime(Period maxWallClockTime)"
  desc: "Set the maxWallClockTime value."
  returns:
    description: "the JobReleaseTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withResourceFiles(java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withResourceFiles(List<ResourceFile> resourceFiles)"
  name: "withResourceFiles(List<ResourceFile> resourceFiles)"
  nameWithType: "JobReleaseTask.withResourceFiles(List<ResourceFile> resourceFiles)"
  summary: "Set files listed under this element are located in the Task's working directory."
  parameters:
  - description: "the resourceFiles value to set"
    name: "resourceFiles"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobReleaseTask withResourceFiles(List<ResourceFile> resourceFiles)"
  desc: "Set files listed under this element are located in the Task's working directory."
  returns:
    description: "the JobReleaseTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withRetentionTime(org.joda.time.Period)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withRetentionTime(Period retentionTime)"
  name: "withRetentionTime(Period retentionTime)"
  nameWithType: "JobReleaseTask.withRetentionTime(Period retentionTime)"
  summary: "Set the default is 7 days, i.<wbr>e."
  parameters:
  - description: "the retentionTime value to set"
    name: "retentionTime"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTask withRetentionTime(Period retentionTime)"
  desc: "Set the default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted."
  returns:
    description: "the JobReleaseTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withUserIdentity(com.microsoft.azure.batch.protocol.models.UserIdentity)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobReleaseTask.withUserIdentity(UserIdentity userIdentity)"
  name: "withUserIdentity(UserIdentity userIdentity)"
  nameWithType: "JobReleaseTask.withUserIdentity(UserIdentity userIdentity)"
  summary: "Set if omitted, the Task runs as a non-administrative user unique to the Task."
  parameters:
  - description: "the userIdentity value to set"
    name: "userIdentity"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.UserIdentity?alt=com.microsoft.azure.batch.protocol.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobReleaseTask withUserIdentity(UserIdentity userIdentity)"
  desc: "Set if omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the JobReleaseTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A Job Release Task to run on Job completion on any Compute Node where the Job has run. The Job Release Task runs when the Job ends, because of one of the following: The user calls the Terminate Job API, or the Delete Job API while the Job is still active, the Job's maximum wall clock time constraint is reached, and the Job is still active, or the Job's Job Manager Task completed, and the Job is configured to terminate when the Job Manager completes. The Job Release Task runs on each Node where Tasks of the Job have run and the Job Preparation Task ran and completed. If you reimage a Node after it has run the Job Preparation Task, and the Job ends without any further Tasks of the Job running on that Node (and hence the Job Preparation Task does not re-run), then the Job Release Task does not run on that Compute Node. If a Node reboots while the Job Release Task is still running, the Job Release Task runs again when the Compute Node starts up. The Job is not marked as complete until all Job Release Tasks have completed. The Job Release Task runs in the background. It does not occupy a scheduling slot; that is, it does not count towards the taskSlotsPerNode limit specified on the Pool."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
