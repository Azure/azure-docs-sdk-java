### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  id: "FileSystemsImpl"
  parent: "com.azure.storage.file.datalake.implementation"
  children:
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.FileSystemsImpl(com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync(com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.Integer,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync(com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync(boolean,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync(boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync(com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "FileSystemsImpl"
  nameWithType: "FileSystemsImpl"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  type: "Class"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "An instance of this class provides access to all the operations defined in FileSystems."
  syntax:
    content: "public final class FileSystemsImpl"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.FileSystemsImpl(com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl)"
  id: "FileSystemsImpl(com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "FileSystemsImpl(DataLakeStorageClientImpl client)"
  nameWithType: "FileSystemsImpl.FileSystemsImpl(DataLakeStorageClientImpl client)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.FileSystemsImpl(DataLakeStorageClientImpl client)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.FileSystemsImpl*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Initializes an instance of FileSystemsImpl."
  syntax:
    content: "public FileSystemsImpl(DataLakeStorageClientImpl client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(Context context)"
  nameWithType: "FileSystemsImpl.createWithRestResponseAsync(Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Create FileSystem Create a FileSystem rooted at the specified location. If the FileSystem already exists, the operation fails. This operation does not support conditional HTTP requests."
  syntax:
    content: "public Mono<FileSystemsCreateResponse> createWithRestResponseAsync(Context context)"
    parameters:
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String properties, String requestId, Integer timeout, Context context)"
  nameWithType: "FileSystemsImpl.createWithRestResponseAsync(String properties, String requestId, Integer timeout, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(String properties, String requestId, Integer timeout, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Create FileSystem Create a FileSystem rooted at the specified location. If the FileSystem already exists, the operation fails. This operation does not support conditional HTTP requests."
  syntax:
    content: "public Mono<FileSystemsCreateResponse> createWithRestResponseAsync(String properties, String requestId, Integer timeout, Context context)"
    parameters:
    - id: "properties"
      type: "java.lang.String"
      description: "Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync(com.azure.core.util.Context)"
  id: "deleteWithRestResponseAsync(com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "deleteWithRestResponseAsync(Context context)"
  nameWithType: "FileSystemsImpl.deleteWithRestResponseAsync(Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync(Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Delete FileSystem Marks the FileSystem for deletion. When a FileSystem is deleted, a FileSystem with the same identifier cannot be created for at least 30 seconds. While the filesystem is being deleted, attempts to create a filesystem with the same identifier will fail with status code 409 (Conflict), with the service returning additional error information indicating that the filesystem is being deleted. All other operations, including operations on any files or directories within the filesystem, will fail with status code 404 (Not Found) while the filesystem is being deleted. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
  syntax:
    content: "public Mono<FileSystemsDeleteResponse> deleteWithRestResponseAsync(Context context)"
    parameters:
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsDeleteResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.Integer,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.core.util.Context)"
  id: "deleteWithRestResponseAsync(java.lang.String,java.lang.Integer,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "deleteWithRestResponseAsync(String requestId, Integer timeout, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  nameWithType: "FileSystemsImpl.deleteWithRestResponseAsync(String requestId, Integer timeout, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync(String requestId, Integer timeout, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Delete FileSystem Marks the FileSystem for deletion. When a FileSystem is deleted, a FileSystem with the same identifier cannot be created for at least 30 seconds. While the filesystem is being deleted, attempts to create a filesystem with the same identifier will fail with status code 409 (Conflict), with the service returning additional error information indicating that the filesystem is being deleted. All other operations, including operations on any files or directories within the filesystem, will fail with status code 404 (Not Found) while the filesystem is being deleted. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
  syntax:
    content: "public Mono<FileSystemsDeleteResponse> deleteWithRestResponseAsync(String requestId, Integer timeout, ModifiedAccessConditions modifiedAccessConditions, Context context)"
    parameters:
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "modifiedAccessConditions"
      type: "com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsDeleteResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync(com.azure.core.util.Context)"
  id: "getPropertiesWithRestResponseAsync(com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "getPropertiesWithRestResponseAsync(Context context)"
  nameWithType: "FileSystemsImpl.getPropertiesWithRestResponseAsync(Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync(Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Get FileSystem Properties. All system and user-defined filesystem properties are specified in the response headers."
  syntax:
    content: "public Mono<FileSystemsGetPropertiesResponse> getPropertiesWithRestResponseAsync(Context context)"
    parameters:
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsGetPropertiesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  id: "getPropertiesWithRestResponseAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "getPropertiesWithRestResponseAsync(String requestId, Integer timeout, Context context)"
  nameWithType: "FileSystemsImpl.getPropertiesWithRestResponseAsync(String requestId, Integer timeout, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync(String requestId, Integer timeout, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Get FileSystem Properties. All system and user-defined filesystem properties are specified in the response headers."
  syntax:
    content: "public Mono<FileSystemsGetPropertiesResponse> getPropertiesWithRestResponseAsync(String requestId, Integer timeout, Context context)"
    parameters:
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsGetPropertiesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync(boolean,com.azure.core.util.Context)"
  id: "listPathsWithRestResponseAsync(boolean,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "listPathsWithRestResponseAsync(boolean recursive, Context context)"
  nameWithType: "FileSystemsImpl.listPathsWithRestResponseAsync(boolean recursive, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync(boolean recursive, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "List Paths List FileSystem paths and their properties."
  syntax:
    content: "public Mono<FileSystemsListPathsResponse> listPathsWithRestResponseAsync(boolean recursive, Context context)"
    parameters:
    - id: "recursive"
      type: "boolean"
      description: "Required."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsListPathsResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync(boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  id: "listPathsWithRestResponseAsync(boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "listPathsWithRestResponseAsync(boolean recursive, String continuation, String path, Integer maxResults, Boolean upn, String requestId, Integer timeout, Context context)"
  nameWithType: "FileSystemsImpl.listPathsWithRestResponseAsync(boolean recursive, String continuation, String path, Integer maxResults, Boolean upn, String requestId, Integer timeout, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync(boolean recursive, String continuation, String path, Integer maxResults, Boolean upn, String requestId, Integer timeout, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "List Paths List FileSystem paths and their properties."
  syntax:
    content: "public Mono<FileSystemsListPathsResponse> listPathsWithRestResponseAsync(boolean recursive, String continuation, String path, Integer maxResults, Boolean upn, String requestId, Integer timeout, Context context)"
    parameters:
    - id: "recursive"
      type: "boolean"
      description: "Required."
    - id: "continuation"
      type: "java.lang.String"
      description: "Optional.  When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory."
    - id: "path"
      type: "java.lang.String"
      description: "Optional.  Filters results to paths within the specified directory. An error occurs if the directory does not exist."
    - id: "maxResults"
      type: "java.lang.Integer"
      description: "An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items."
    - id: "upn"
      type: "java.lang.Boolean"
      description: "Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsListPathsResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync(com.azure.core.util.Context)"
  id: "setPropertiesWithRestResponseAsync(com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "setPropertiesWithRestResponseAsync(Context context)"
  nameWithType: "FileSystemsImpl.setPropertiesWithRestResponseAsync(Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync(Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Set FileSystem Properties Set properties for the FileSystem. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
  syntax:
    content: "public Mono<FileSystemsSetPropertiesResponse> setPropertiesWithRestResponseAsync(Context context)"
    parameters:
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsSetPropertiesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.core.util.Context)"
  id: "setPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.FileSystemsImpl"
  langs:
  - "java"
  name: "setPropertiesWithRestResponseAsync(String properties, String requestId, Integer timeout, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  nameWithType: "FileSystemsImpl.setPropertiesWithRestResponseAsync(String properties, String requestId, Integer timeout, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync(String properties, String requestId, Integer timeout, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Set FileSystem Properties Set properties for the FileSystem. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
  syntax:
    content: "public Mono<FileSystemsSetPropertiesResponse> setPropertiesWithRestResponseAsync(String properties, String requestId, Integer timeout, ModifiedAccessConditions modifiedAccessConditions, Context context)"
    parameters:
    - id: "properties"
      type: "java.lang.String"
      description: "Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "modifiedAccessConditions"
      type: "com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsSetPropertiesResponse>"
      description: "a Mono which performs the network request upon subscription."
references:
- uid: "com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl"
  name: "DataLakeStorageClientImpl"
  nameWithType: "DataLakeStorageClientImpl"
  fullName: "com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.FileSystemsImpl*"
  name: "FileSystemsImpl"
  nameWithType: "FileSystemsImpl.FileSystemsImpl"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.FileSystemsImpl"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse"
    name: "FileSystemsCreateResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync*"
  name: "createWithRestResponseAsync"
  nameWithType: "FileSystemsImpl.createWithRestResponseAsync"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsSetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsSetPropertiesResponse"
    name: "FileSystemsSetPropertiesResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsSetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync*"
  name: "setPropertiesWithRestResponseAsync"
  nameWithType: "FileSystemsImpl.setPropertiesWithRestResponseAsync"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.setPropertiesWithRestResponseAsync"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions"
  name: "ModifiedAccessConditions"
  nameWithType: "ModifiedAccessConditions"
  fullName: "com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsGetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsGetPropertiesResponse"
    name: "FileSystemsGetPropertiesResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsGetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync*"
  name: "getPropertiesWithRestResponseAsync"
  nameWithType: "FileSystemsImpl.getPropertiesWithRestResponseAsync"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.getPropertiesWithRestResponseAsync"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsDeleteResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsDeleteResponse"
    name: "FileSystemsDeleteResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsDeleteResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync*"
  name: "deleteWithRestResponseAsync"
  nameWithType: "FileSystemsImpl.deleteWithRestResponseAsync"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.deleteWithRestResponseAsync"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.FileSystemsListPathsResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsListPathsResponse"
    name: "FileSystemsListPathsResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsListPathsResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync*"
  name: "listPathsWithRestResponseAsync"
  nameWithType: "FileSystemsImpl.listPathsWithRestResponseAsync"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.listPathsWithRestResponseAsync"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.FileSystemsService"
  name: "FileSystemsImpl.FileSystemsService"
  nameWithType: "FileSystemsImpl.FileSystemsService"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.FileSystemsService"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse"
  name: "FileSystemsCreateResponse"
  nameWithType: "FileSystemsCreateResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsSetPropertiesResponse"
  name: "FileSystemsSetPropertiesResponse"
  nameWithType: "FileSystemsSetPropertiesResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsSetPropertiesResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsGetPropertiesResponse"
  name: "FileSystemsGetPropertiesResponse"
  nameWithType: "FileSystemsGetPropertiesResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsGetPropertiesResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsDeleteResponse"
  name: "FileSystemsDeleteResponse"
  nameWithType: "FileSystemsDeleteResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsDeleteResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.FileSystemsListPathsResponse"
  name: "FileSystemsListPathsResponse"
  nameWithType: "FileSystemsListPathsResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemsListPathsResponse"
