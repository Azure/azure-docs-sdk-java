### YamlMime:JavaType
uid: "com.azure.cosmos.BridgeInternal"
fullName: "com.azure.cosmos.BridgeInternal"
name: "BridgeInternal"
nameWithType: "BridgeInternal"
summary: "DO NOT USE."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BridgeInternal"
methods:
- uid: "com.azure.cosmos.BridgeInternal.<E>getChannelAcqusitionTimeline(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getChannelAcqusitionTimeline(E e)"
  name: "<E>getChannelAcqusitionTimeline(E e)"
  nameWithType: "BridgeInternal.<E>getChannelAcqusitionTimeline(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RntbdChannelAcquisitionTimeline <E>getChannelAcqusitionTimeline(E e)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdChannelAcquisitionTimeline?alt=com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdChannelAcquisitionTimeline&text=RntbdChannelAcquisitionTimeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getChannelTaskQueueSize(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getChannelTaskQueueSize(E e)"
  name: "<E>getChannelTaskQueueSize(E e)"
  nameWithType: "BridgeInternal.<E>getChannelTaskQueueSize(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int <E>getChannelTaskQueueSize(E e)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getLSN(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getLSN(E e)"
  name: "<E>getLSN(E e)"
  nameWithType: "BridgeInternal.<E>getLSN(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static long <E>getLSN(E e)"
  returns:
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getPartitionKeyRangeId(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getPartitionKeyRangeId(E e)"
  name: "<E>getPartitionKeyRangeId(E e)"
  nameWithType: "BridgeInternal.<E>getPartitionKeyRangeId(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String <E>getPartitionKeyRangeId(E e)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRequestBodyLength(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRequestBodyLength(E e)"
  name: "<E>getRequestBodyLength(E e)"
  nameWithType: "BridgeInternal.<E>getRequestBodyLength(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int <E>getRequestBodyLength(E e)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRequestHeaders(com.azure.cosmos.CosmosException)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRequestHeaders(CosmosException cosmosException)"
  name: "<E>getRequestHeaders(CosmosException cosmosException)"
  nameWithType: "BridgeInternal.<E>getRequestHeaders(CosmosException cosmosException)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosException"
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Map<String,String> <E>getRequestHeaders(CosmosException cosmosException)"
  returns:
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRequestTimeline(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRequestTimeline(E e)"
  name: "<E>getRequestTimeline(E e)"
  nameWithType: "BridgeInternal.<E>getRequestTimeline(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RequestTimeline <E>getRequestTimeline(E e)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.RequestTimeline?alt=com.azure.cosmos.implementation.RequestTimeline&text=RequestTimeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRequestUri(com.azure.cosmos.CosmosException)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRequestUri(CosmosException cosmosException)"
  name: "<E>getRequestUri(CosmosException cosmosException)"
  nameWithType: "BridgeInternal.<E>getRequestUri(CosmosException cosmosException)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosException"
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Uri <E>getRequestUri(CosmosException cosmosException)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.Uri?alt=com.azure.cosmos.implementation.directconnectivity.Uri&text=Uri\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getResourceAddress(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getResourceAddress(E e)"
  name: "<E>getResourceAddress(E e)"
  nameWithType: "BridgeInternal.<E>getResourceAddress(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String <E>getResourceAddress(E e)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRntbdPendingRequestQueueSize(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRntbdPendingRequestQueueSize(E e)"
  name: "<E>getRntbdPendingRequestQueueSize(E e)"
  nameWithType: "BridgeInternal.<E>getRntbdPendingRequestQueueSize(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int <E>getRntbdPendingRequestQueueSize(E e)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRntbdRequestLength(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRntbdRequestLength(E e)"
  name: "<E>getRntbdRequestLength(E e)"
  nameWithType: "BridgeInternal.<E>getRntbdRequestLength(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int <E>getRntbdRequestLength(E e)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getRntbdResponseLength(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getRntbdResponseLength(E e)"
  name: "<E>getRntbdResponseLength(E e)"
  nameWithType: "BridgeInternal.<E>getRntbdResponseLength(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int <E>getRntbdResponseLength(E e)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>getServiceEndpointStatistics(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>getServiceEndpointStatistics(E e)"
  name: "<E>getServiceEndpointStatistics(E e)"
  nameWithType: "BridgeInternal.<E>getServiceEndpointStatistics(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RntbdEndpointStatistics <E>getServiceEndpointStatistics(E e)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdEndpointStatistics?alt=com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdEndpointStatistics&text=RntbdEndpointStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>hasSendingRequestStarted(E)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>hasSendingRequestStarted(E e)"
  name: "<E>hasSendingRequestStarted(E e)"
  nameWithType: "BridgeInternal.<E>hasSendingRequestStarted(E e)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean <E>hasSendingRequestStarted(E e)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setChannelAcquisitionTimeline(E,com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdChannelAcquisitionTimeline)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setChannelAcquisitionTimeline(E e, RntbdChannelAcquisitionTimeline channelAcquisitionTimeline)"
  name: "<E>setChannelAcquisitionTimeline(E e, RntbdChannelAcquisitionTimeline channelAcquisitionTimeline)"
  nameWithType: "BridgeInternal.<E>setChannelAcquisitionTimeline(E e, RntbdChannelAcquisitionTimeline channelAcquisitionTimeline)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "channelAcquisitionTimeline"
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdChannelAcquisitionTimeline?alt=com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdChannelAcquisitionTimeline&text=RntbdChannelAcquisitionTimeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setChannelAcquisitionTimeline(E e, RntbdChannelAcquisitionTimeline channelAcquisitionTimeline)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setChannelTaskQueueSize(E,int)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setChannelTaskQueueSize(E e, int value)"
  name: "<E>setChannelTaskQueueSize(E e, int value)"
  nameWithType: "BridgeInternal.<E>setChannelTaskQueueSize(E e, int value)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setChannelTaskQueueSize(E e, int value)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setLSN(E,long)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setLSN(E e, long lsn)"
  name: "<E>setLSN(E e, long lsn)"
  nameWithType: "BridgeInternal.<E>setLSN(E e, long lsn)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "lsn"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setLSN(E e, long lsn)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setPartitionKeyRangeId(E,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setPartitionKeyRangeId(E e, String partitionKeyRangeId)"
  name: "<E>setPartitionKeyRangeId(E e, String partitionKeyRangeId)"
  nameWithType: "BridgeInternal.<E>setPartitionKeyRangeId(E e, String partitionKeyRangeId)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "partitionKeyRangeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setPartitionKeyRangeId(E e, String partitionKeyRangeId)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setRequestBodyLength(E,int)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setRequestBodyLength(E e, int requestLen)"
  name: "<E>setRequestBodyLength(E e, int requestLen)"
  nameWithType: "BridgeInternal.<E>setRequestBodyLength(E e, int requestLen)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "requestLen"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setRequestBodyLength(E e, int requestLen)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setRequestHeaders(com.azure.cosmos.CosmosException,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setRequestHeaders(CosmosException cosmosException, Map<String,String> requestHeaders)"
  name: "<E>setRequestHeaders(CosmosException cosmosException, Map<String,String> requestHeaders)"
  nameWithType: "BridgeInternal.<E>setRequestHeaders(CosmosException cosmosException, Map<String,String> requestHeaders)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosException"
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
  - name: "requestHeaders"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static void <E>setRequestHeaders(CosmosException cosmosException, Map<String,String> requestHeaders)"
- uid: "com.azure.cosmos.BridgeInternal.<E>setRequestTimeline(E,com.azure.cosmos.implementation.RequestTimeline)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setRequestTimeline(E e, RequestTimeline requestTimeline)"
  name: "<E>setRequestTimeline(E e, RequestTimeline requestTimeline)"
  nameWithType: "BridgeInternal.<E>setRequestTimeline(E e, RequestTimeline requestTimeline)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "requestTimeline"
    type: "<xref href=\"com.azure.cosmos.implementation.RequestTimeline?alt=com.azure.cosmos.implementation.RequestTimeline&text=RequestTimeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setRequestTimeline(E e, RequestTimeline requestTimeline)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setResourceAddress(E,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setResourceAddress(E e, String resourceAddress)"
  name: "<E>setResourceAddress(E e, String resourceAddress)"
  nameWithType: "BridgeInternal.<E>setResourceAddress(E e, String resourceAddress)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "resourceAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setResourceAddress(E e, String resourceAddress)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setRntbdPendingRequestQueueSize(E,int)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setRntbdPendingRequestQueueSize(E e, int value)"
  name: "<E>setRntbdPendingRequestQueueSize(E e, int value)"
  nameWithType: "BridgeInternal.<E>setRntbdPendingRequestQueueSize(E e, int value)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setRntbdPendingRequestQueueSize(E e, int value)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setRntbdRequestLength(E,int)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setRntbdRequestLength(E e, int requestLen)"
  name: "<E>setRntbdRequestLength(E e, int requestLen)"
  nameWithType: "BridgeInternal.<E>setRntbdRequestLength(E e, int requestLen)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "requestLen"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setRntbdRequestLength(E e, int requestLen)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setRntbdResponseLength(E,int)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setRntbdResponseLength(E e, int requestLen)"
  name: "<E>setRntbdResponseLength(E e, int requestLen)"
  nameWithType: "BridgeInternal.<E>setRntbdResponseLength(E e, int requestLen)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "requestLen"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setRntbdResponseLength(E e, int requestLen)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<E>setSendingRequestStarted(E,boolean)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setSendingRequestStarted(E e, boolean hasSendingRequestStarted)"
  name: "<E>setSendingRequestStarted(E e, boolean hasSendingRequestStarted)"
  nameWithType: "BridgeInternal.<E>setSendingRequestStarted(E e, boolean hasSendingRequestStarted)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "hasSendingRequestStarted"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void <E>setSendingRequestStarted(E e, boolean hasSendingRequestStarted)"
- uid: "com.azure.cosmos.BridgeInternal.<E>setServiceEndpointStatistics(E,com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdEndpointStatistics)"
  fullName: "com.azure.cosmos.BridgeInternal.<E>setServiceEndpointStatistics(E e, RntbdEndpointStatistics rntbdEndpointStatistics)"
  name: "<E>setServiceEndpointStatistics(E e, RntbdEndpointStatistics rntbdEndpointStatistics)"
  nameWithType: "BridgeInternal.<E>setServiceEndpointStatistics(E e, RntbdEndpointStatistics rntbdEndpointStatistics)"
  modifiers:
  - "static"
  parameters:
  - name: "e"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "rntbdEndpointStatistics"
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdEndpointStatistics?alt=com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdEndpointStatistics&text=RntbdEndpointStatistics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>setServiceEndpointStatistics(E e, RntbdEndpointStatistics rntbdEndpointStatistics)"
  returns:
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<T>createFeedResponse(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>createFeedResponse(List<T> results, Map<String,String> headers)"
  name: "<T>createFeedResponse(List<T> results, Map<String,String> headers)"
  nameWithType: "BridgeInternal.<T>createFeedResponse(List<T> results, Map<String,String> headers)"
  modifiers:
  - "static"
  parameters:
  - name: "results"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "headers"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static FeedResponse<T> <T>createFeedResponse(List<T> results, Map<String,String> headers)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.<T>createFeedResponseWithQueryMetrics(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>,com.azure.cosmos.implementation.query.QueryInfo.QueryPlanDiagnosticsContext,boolean,boolean,com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>createFeedResponseWithQueryMetrics(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap, QueryInfo.QueryPlanDiagnosticsContext diagnosticsContext, boolean useEtagAsContinuation, boolean isNoChangesResponse, CosmosDiagnostics cosmosDiagnostics)"
  name: "<T>createFeedResponseWithQueryMetrics(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap, QueryInfo.QueryPlanDiagnosticsContext diagnosticsContext, boolean useEtagAsContinuation, boolean isNoChangesResponse, CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.<T>createFeedResponseWithQueryMetrics(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap, QueryInfo.QueryPlanDiagnosticsContext diagnosticsContext, boolean useEtagAsContinuation, boolean isNoChangesResponse, CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "results"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "headers"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "queryMetricsMap"
    type: "<xref href=\"java.util.concurrent.ConcurrentMap?alt=java.util.concurrent.ConcurrentMap&text=ConcurrentMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "diagnosticsContext"
    type: "<xref href=\"com.azure.cosmos.implementation.query.QueryInfo.QueryPlanDiagnosticsContext?alt=com.azure.cosmos.implementation.query.QueryInfo.QueryPlanDiagnosticsContext&text=QueryPlanDiagnosticsContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "useEtagAsContinuation"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "isNoChangesResponse"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static FeedResponse<T> <T>createFeedResponseWithQueryMetrics(List<T> results, Map<String,String> headers, ConcurrentMap<String,QueryMetrics> queryMetricsMap, QueryInfo.QueryPlanDiagnosticsContext diagnosticsContext, boolean useEtagAsContinuation, boolean isNoChangesResponse, CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.<T>getProperties(com.azure.cosmos.models.CosmosItemResponse<T>)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>getProperties(CosmosItemResponse<T> cosmosItemResponse)"
  name: "<T>getProperties(CosmosItemResponse<T> cosmosItemResponse)"
  nameWithType: "BridgeInternal.<T>getProperties(CosmosItemResponse<T> cosmosItemResponse)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosItemResponse"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static InternalObjectNode <T>getProperties(CosmosItemResponse<T> cosmosItemResponse)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.InternalObjectNode?alt=com.azure.cosmos.implementation.InternalObjectNode&text=InternalObjectNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<T>noChanges(com.azure.cosmos.models.FeedResponse<T>)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>noChanges(FeedResponse<T> page)"
  name: "<T>noChanges(FeedResponse<T> page)"
  nameWithType: "BridgeInternal.<T>noChanges(FeedResponse<T> page)"
  modifiers:
  - "static"
  parameters:
  - name: "page"
    type: "<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static boolean <T>noChanges(FeedResponse<T> page)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.<T>putQueryMetricsIntoMap(com.azure.cosmos.models.FeedResponse<T>,java.lang.String,com.azure.cosmos.implementation.QueryMetrics)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)"
  name: "<T>putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)"
  nameWithType: "BridgeInternal.<T>putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)"
  modifiers:
  - "static"
  parameters:
  - name: "response"
    type: "<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "partitionKeyRangeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "queryMetrics"
    type: "<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void <T>putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId, QueryMetrics queryMetrics)"
- uid: "com.azure.cosmos.BridgeInternal.<T>queryMetricsFromFeedResponse(com.azure.cosmos.models.FeedResponse<T>)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>queryMetricsFromFeedResponse(FeedResponse<T> feedResponse)"
  name: "<T>queryMetricsFromFeedResponse(FeedResponse<T> feedResponse)"
  nameWithType: "BridgeInternal.<T>queryMetricsFromFeedResponse(FeedResponse<T> feedResponse)"
  modifiers:
  - "static"
  parameters:
  - name: "feedResponse"
    type: "<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ConcurrentMap<String,QueryMetrics> <T>queryMetricsFromFeedResponse(FeedResponse<T> feedResponse)"
  returns:
    type: "<xref href=\"java.util.concurrent.ConcurrentMap?alt=java.util.concurrent.ConcurrentMap&text=ConcurrentMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.<T>setProperty(com.azure.cosmos.implementation.JsonSerializable,java.lang.String,T)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>setProperty(JsonSerializable jsonSerializable, String propertyName, T value)"
  name: "<T>setProperty(JsonSerializable jsonSerializable, String propertyName, T value)"
  nameWithType: "BridgeInternal.<T>setProperty(JsonSerializable jsonSerializable, String propertyName, T value)"
  modifiers:
  - "static"
  parameters:
  - name: "jsonSerializable"
    type: "<xref href=\"com.azure.cosmos.implementation.JsonSerializable?alt=com.azure.cosmos.implementation.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />"
  - name: "propertyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void <T>setProperty(JsonSerializable jsonSerializable, String propertyName, T value)"
- uid: "com.azure.cosmos.BridgeInternal.<T>toChangeFeedResponsePage(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.util.function.Function<com.fasterxml.jackson.databind.JsonNode,T>,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toChangeFeedResponsePage(RxDocumentServiceResponse response, Function<JsonNode,T> factoryMethod, Class<T> cls)"
  name: "<T>toChangeFeedResponsePage(RxDocumentServiceResponse response, Function<JsonNode,T> factoryMethod, Class<T> cls)"
  nameWithType: "BridgeInternal.<T>toChangeFeedResponsePage(RxDocumentServiceResponse response, Function<JsonNode,T> factoryMethod, Class<T> cls)"
  modifiers:
  - "static"
  parameters:
  - name: "response"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />"
  - name: "factoryMethod"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "cls"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static FeedResponse<T> <T>toChangeFeedResponsePage(RxDocumentServiceResponse response, Function<JsonNode,T> factoryMethod, Class<T> cls)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.util.function.Function<com.fasterxml.jackson.databind.JsonNode,T>,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(RxDocumentServiceResponse response, Function<JsonNode,T> factoryMethod, Class<T> cls)"
  name: "<T>toFeedResponsePage(RxDocumentServiceResponse response, Function<JsonNode,T> factoryMethod, Class<T> cls)"
  nameWithType: "BridgeInternal.<T>toFeedResponsePage(RxDocumentServiceResponse response, Function<JsonNode,T> factoryMethod, Class<T> cls)"
  modifiers:
  - "static"
  parameters:
  - name: "response"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />"
  - name: "factoryMethod"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "cls"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static FeedResponse<T> <T>toFeedResponsePage(RxDocumentServiceResponse response, Function<JsonNode,T> factoryMethod, Class<T> cls)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(java.util.List<T>,java.util.Map<java.lang.String,java.lang.String>,boolean)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toFeedResponsePage(List<T> results, Map<String,String> headers, boolean noChanges)"
  name: "<T>toFeedResponsePage(List<T> results, Map<String,String> headers, boolean noChanges)"
  nameWithType: "BridgeInternal.<T>toFeedResponsePage(List<T> results, Map<String,String> headers, boolean noChanges)"
  modifiers:
  - "static"
  parameters:
  - name: "results"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "headers"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "noChanges"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static FeedResponse<T> <T>toFeedResponsePage(List<T> results, Map<String,String> headers, boolean noChanges)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.<T>toResourceResponse(com.azure.cosmos.implementation.RxDocumentServiceResponse,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.BridgeInternal.<T>toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  name: "<T>toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  nameWithType: "BridgeInternal.<T>toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  modifiers:
  - "static"
  parameters:
  - name: "response"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />"
  - name: "cls"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ResourceResponse<T> <T>toResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.ResourceResponse?alt=com.azure.cosmos.implementation.ResourceResponse&text=ResourceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.addClientSideDiagnosticsToFeed(com.azure.cosmos.CosmosDiagnostics,java.util.List<com.azure.cosmos.implementation.ClientSideRequestStatistics>)"
  fullName: "com.azure.cosmos.BridgeInternal.addClientSideDiagnosticsToFeed(CosmosDiagnostics cosmosDiagnostics, List<ClientSideRequestStatistics> requestStatistics)"
  name: "addClientSideDiagnosticsToFeed(CosmosDiagnostics cosmosDiagnostics, List<ClientSideRequestStatistics> requestStatistics)"
  nameWithType: "BridgeInternal.addClientSideDiagnosticsToFeed(CosmosDiagnostics cosmosDiagnostics, List<ClientSideRequestStatistics> requestStatistics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "requestStatistics"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.ClientSideRequestStatistics?alt=com.azure.cosmos.implementation.ClientSideRequestStatistics&text=ClientSideRequestStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static void addClientSideDiagnosticsToFeed(CosmosDiagnostics cosmosDiagnostics, List<ClientSideRequestStatistics> requestStatistics)"
- uid: "com.azure.cosmos.BridgeInternal.cloneCosmosDiagnostics(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.cloneCosmosDiagnostics(CosmosDiagnostics toBeCloned)"
  name: "cloneCosmosDiagnostics(CosmosDiagnostics toBeCloned)"
  nameWithType: "BridgeInternal.cloneCosmosDiagnostics(CosmosDiagnostics toBeCloned)"
  modifiers:
  - "static"
  parameters:
  - name: "toBeCloned"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosDiagnostics cloneCosmosDiagnostics(CosmosDiagnostics toBeCloned)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncConflict(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncConflict(String id, CosmosAsyncContainer container)"
  name: "createCosmosAsyncConflict(String id, CosmosAsyncContainer container)"
  nameWithType: "BridgeInternal.createCosmosAsyncConflict(String id, CosmosAsyncContainer container)"
  modifiers:
  - "static"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "container"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncContainer?alt=com.azure.cosmos.CosmosAsyncContainer&text=CosmosAsyncContainer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosAsyncConflict createCosmosAsyncConflict(String id, CosmosAsyncContainer container)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncConflict?alt=com.azure.cosmos.CosmosAsyncConflict&text=CosmosAsyncConflict\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncContainer(java.lang.String,com.azure.cosmos.CosmosAsyncDatabase)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncContainer(String id, CosmosAsyncDatabase database)"
  name: "createCosmosAsyncContainer(String id, CosmosAsyncDatabase database)"
  nameWithType: "BridgeInternal.createCosmosAsyncContainer(String id, CosmosAsyncDatabase database)"
  modifiers:
  - "static"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "database"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncDatabase?alt=com.azure.cosmos.CosmosAsyncDatabase&text=CosmosAsyncDatabase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosAsyncContainer createCosmosAsyncContainer(String id, CosmosAsyncDatabase database)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncContainer?alt=com.azure.cosmos.CosmosAsyncContainer&text=CosmosAsyncContainer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncDatabase(java.lang.String,com.azure.cosmos.CosmosAsyncClient)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncDatabase(String id, CosmosAsyncClient client)"
  name: "createCosmosAsyncDatabase(String id, CosmosAsyncClient client)"
  nameWithType: "BridgeInternal.createCosmosAsyncDatabase(String id, CosmosAsyncClient client)"
  modifiers:
  - "static"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "client"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncClient?alt=com.azure.cosmos.CosmosAsyncClient&text=CosmosAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosAsyncDatabase createCosmosAsyncDatabase(String id, CosmosAsyncClient client)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncDatabase?alt=com.azure.cosmos.CosmosAsyncDatabase&text=CosmosAsyncDatabase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncPermission(java.lang.String,com.azure.cosmos.CosmosAsyncUser)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncPermission(String id, CosmosAsyncUser user)"
  name: "createCosmosAsyncPermission(String id, CosmosAsyncUser user)"
  nameWithType: "BridgeInternal.createCosmosAsyncPermission(String id, CosmosAsyncUser user)"
  modifiers:
  - "static"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "user"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncUser?alt=com.azure.cosmos.CosmosAsyncUser&text=CosmosAsyncUser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosAsyncPermission createCosmosAsyncPermission(String id, CosmosAsyncUser user)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncPermission?alt=com.azure.cosmos.CosmosAsyncPermission&text=CosmosAsyncPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUser(java.lang.String,com.azure.cosmos.CosmosAsyncDatabase)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUser(String id, CosmosAsyncDatabase database)"
  name: "createCosmosAsyncUser(String id, CosmosAsyncDatabase database)"
  nameWithType: "BridgeInternal.createCosmosAsyncUser(String id, CosmosAsyncDatabase database)"
  modifiers:
  - "static"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "database"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncDatabase?alt=com.azure.cosmos.CosmosAsyncDatabase&text=CosmosAsyncDatabase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosAsyncUser createCosmosAsyncUser(String id, CosmosAsyncDatabase database)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncUser?alt=com.azure.cosmos.CosmosAsyncUser&text=CosmosAsyncUser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUserDefinedFunction(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosAsyncUserDefinedFunction(String id, CosmosAsyncContainer container)"
  name: "createCosmosAsyncUserDefinedFunction(String id, CosmosAsyncContainer container)"
  nameWithType: "BridgeInternal.createCosmosAsyncUserDefinedFunction(String id, CosmosAsyncContainer container)"
  modifiers:
  - "static"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "container"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncContainer?alt=com.azure.cosmos.CosmosAsyncContainer&text=CosmosAsyncContainer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosAsyncUserDefinedFunction createCosmosAsyncUserDefinedFunction(String id, CosmosAsyncContainer container)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncUserDefinedFunction?alt=com.azure.cosmos.CosmosAsyncUserDefinedFunction&text=CosmosAsyncUserDefinedFunction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosDatabase(java.lang.String,com.azure.cosmos.CosmosClient,com.azure.cosmos.CosmosAsyncDatabase)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosDatabase(String id, CosmosClient client, CosmosAsyncDatabase database)"
  name: "createCosmosDatabase(String id, CosmosClient client, CosmosAsyncDatabase database)"
  nameWithType: "BridgeInternal.createCosmosDatabase(String id, CosmosClient client, CosmosAsyncDatabase database)"
  modifiers:
  - "static"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "client"
    type: "<xref href=\"com.azure.cosmos.CosmosClient?alt=com.azure.cosmos.CosmosClient&text=CosmosClient\" data-throw-if-not-resolved=\"False\" />"
  - name: "database"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncDatabase?alt=com.azure.cosmos.CosmosAsyncDatabase&text=CosmosAsyncDatabase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosDatabase createCosmosDatabase(String id, CosmosClient client, CosmosAsyncDatabase database)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosDatabase?alt=com.azure.cosmos.CosmosDatabase&text=CosmosDatabase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosDiagnostics(com.azure.cosmos.implementation.DiagnosticsClientContext)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosDiagnostics(DiagnosticsClientContext diagnosticsClientContext)"
  name: "createCosmosDiagnostics(DiagnosticsClientContext diagnosticsClientContext)"
  nameWithType: "BridgeInternal.createCosmosDiagnostics(DiagnosticsClientContext diagnosticsClientContext)"
  modifiers:
  - "static"
  parameters:
  - name: "diagnosticsClientContext"
    type: "<xref href=\"com.azure.cosmos.implementation.DiagnosticsClientContext?alt=com.azure.cosmos.implementation.DiagnosticsClientContext&text=DiagnosticsClientContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosDiagnostics createCosmosDiagnostics(DiagnosticsClientContext diagnosticsClientContext)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosDiagnostics(java.util.Map<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosDiagnostics(Map<String,QueryMetrics> queryMetricsMap)"
  name: "createCosmosDiagnostics(Map<String,QueryMetrics> queryMetricsMap)"
  nameWithType: "BridgeInternal.createCosmosDiagnostics(Map<String,QueryMetrics> queryMetricsMap)"
  modifiers:
  - "static"
  parameters:
  - name: "queryMetricsMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static CosmosDiagnostics createCosmosDiagnostics(Map<String,QueryMetrics> queryMetricsMap)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosException(int)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosException(int statusCode)"
  name: "createCosmosException(int statusCode)"
  nameWithType: "BridgeInternal.createCosmosException(int statusCode)"
  modifiers:
  - "static"
  parameters:
  - name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosException createCosmosException(int statusCode)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosException(int,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosException(int statusCode, String errorMessage)"
  name: "createCosmosException(int statusCode, String errorMessage)"
  nameWithType: "BridgeInternal.createCosmosException(int statusCode, String errorMessage)"
  modifiers:
  - "static"
  parameters:
  - name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "errorMessage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosException createCosmosException(int statusCode, String errorMessage)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosException(java.lang.String,int,com.azure.cosmos.implementation.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  name: "createCosmosException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  nameWithType: "BridgeInternal.createCosmosException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  modifiers:
  - "static"
  parameters:
  - name: "resourceAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "cosmosErrorResource"
    type: "<xref href=\"com.azure.cosmos.implementation.CosmosError?alt=com.azure.cosmos.implementation.CosmosError&text=CosmosError\" data-throw-if-not-resolved=\"False\" />"
  - name: "responseHeaders"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static CosmosException createCosmosException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosException(java.lang.String,int,java.lang.Exception)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosException(String resourceAddress, int statusCode, Exception innerException)"
  name: "createCosmosException(String resourceAddress, int statusCode, Exception innerException)"
  nameWithType: "BridgeInternal.createCosmosException(String resourceAddress, int statusCode, Exception innerException)"
  modifiers:
  - "static"
  parameters:
  - name: "resourceAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "innerException"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosException createCosmosException(String resourceAddress, int statusCode, Exception innerException)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosException(java.lang.String,java.lang.Exception,java.util.Map<java.lang.String,java.lang.String>,int,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  name: "createCosmosException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  nameWithType: "BridgeInternal.createCosmosException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  modifiers:
  - "static"
  parameters:
  - name: "message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "exception"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  - name: "responseHeaders"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "resourceAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosException createCosmosException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosStoredProcedureProperties(java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosStoredProcedureProperties(String jsonString)"
  name: "createCosmosStoredProcedureProperties(String jsonString)"
  nameWithType: "BridgeInternal.createCosmosStoredProcedureProperties(String jsonString)"
  modifiers:
  - "static"
  parameters:
  - name: "jsonString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosStoredProcedureProperties createCosmosStoredProcedureProperties(String jsonString)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureProperties?alt=com.azure.cosmos.models.CosmosStoredProcedureProperties&text=CosmosStoredProcedureProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createCosmosUser(com.azure.cosmos.CosmosAsyncUser,com.azure.cosmos.CosmosDatabase,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.createCosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  name: "createCosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  nameWithType: "BridgeInternal.createCosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  modifiers:
  - "static"
  parameters:
  - name: "asyncUser"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncUser?alt=com.azure.cosmos.CosmosAsyncUser&text=CosmosAsyncUser\" data-throw-if-not-resolved=\"False\" />"
  - name: "database"
    type: "<xref href=\"com.azure.cosmos.CosmosDatabase?alt=com.azure.cosmos.CosmosDatabase&text=CosmosDatabase\" data-throw-if-not-resolved=\"False\" />"
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosUser createCosmosUser(CosmosAsyncUser asyncUser, CosmosDatabase database, String id)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosUser?alt=com.azure.cosmos.CosmosUser&text=CosmosUser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromCollection(java.util.Collection<com.azure.cosmos.implementation.QueryMetrics>)"
  fullName: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)"
  name: "createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)"
  nameWithType: "BridgeInternal.createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)"
  modifiers:
  - "static"
  parameters:
  - name: "queryMetricsCollection"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static QueryMetrics createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(java.lang.String,com.azure.cosmos.implementation.query.metrics.ClientSideMetrics,java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId, String indexUtilizationInfoJSONString)"
  name: "createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId, String indexUtilizationInfoJSONString)"
  nameWithType: "BridgeInternal.createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId, String indexUtilizationInfoJSONString)"
  modifiers:
  - "static"
  parameters:
  - name: "queryMetricsDelimitedString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "clientSideMetrics"
    type: "<xref href=\"com.azure.cosmos.implementation.query.metrics.ClientSideMetrics?alt=com.azure.cosmos.implementation.query.metrics.ClientSideMetrics&text=ClientSideMetrics\" data-throw-if-not-resolved=\"False\" />"
  - name: "activityId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "indexUtilizationInfoJSONString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static QueryMetrics createQueryMetricsFromDelimitedStringAndClientSideMetrics(String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId, String indexUtilizationInfoJSONString)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.createServiceUnavailableException(java.lang.Exception)"
  fullName: "com.azure.cosmos.BridgeInternal.createServiceUnavailableException(Exception innerException)"
  name: "createServiceUnavailableException(Exception innerException)"
  nameWithType: "BridgeInternal.createServiceUnavailableException(Exception innerException)"
  modifiers:
  - "static"
  parameters:
  - name: "innerException"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosException createServiceUnavailableException(Exception innerException)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.documentFromObject(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  fullName: "com.azure.cosmos.BridgeInternal.documentFromObject(Object document, ObjectMapper mapper)"
  name: "documentFromObject(Object document, ObjectMapper mapper)"
  nameWithType: "BridgeInternal.documentFromObject(Object document, ObjectMapper mapper)"
  modifiers:
  - "static"
  parameters:
  - name: "document"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "mapper"
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Document documentFromObject(Object document, ObjectMapper mapper)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.Document?alt=com.azure.cosmos.implementation.Document&text=Document\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.extractConfigs(com.azure.cosmos.CosmosClientBuilder)"
  fullName: "com.azure.cosmos.BridgeInternal.extractConfigs(CosmosClientBuilder cosmosClientBuilder)"
  name: "extractConfigs(CosmosClientBuilder cosmosClientBuilder)"
  nameWithType: "BridgeInternal.extractConfigs(CosmosClientBuilder cosmosClientBuilder)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosClientBuilder"
    type: "<xref href=\"com.azure.cosmos.CosmosClientBuilder?alt=com.azure.cosmos.CosmosClientBuilder&text=CosmosClientBuilder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Configs extractConfigs(CosmosClientBuilder cosmosClientBuilder)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.Configs?alt=com.azure.cosmos.implementation.Configs&text=Configs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.extractContainerSelfLink(com.azure.cosmos.CosmosAsyncContainer)"
  fullName: "com.azure.cosmos.BridgeInternal.extractContainerSelfLink(CosmosAsyncContainer container)"
  name: "extractContainerSelfLink(CosmosAsyncContainer container)"
  nameWithType: "BridgeInternal.extractContainerSelfLink(CosmosAsyncContainer container)"
  modifiers:
  - "static"
  parameters:
  - name: "container"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncContainer?alt=com.azure.cosmos.CosmosAsyncContainer&text=CosmosAsyncContainer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String extractContainerSelfLink(CosmosAsyncContainer container)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.extractResourceSelfLink(com.azure.cosmos.implementation.Resource)"
  fullName: "com.azure.cosmos.BridgeInternal.extractResourceSelfLink(Resource resource)"
  name: "extractResourceSelfLink(Resource resource)"
  nameWithType: "BridgeInternal.extractResourceSelfLink(Resource resource)"
  modifiers:
  - "static"
  parameters:
  - name: "resource"
    type: "<xref href=\"com.azure.cosmos.implementation.Resource?alt=com.azure.cosmos.implementation.Resource&text=Resource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String extractResourceSelfLink(Resource resource)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.fromServiceSerializedFormat(java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.fromServiceSerializedFormat(String consistencyLevel)"
  name: "fromServiceSerializedFormat(String consistencyLevel)"
  nameWithType: "BridgeInternal.fromServiceSerializedFormat(String consistencyLevel)"
  modifiers:
  - "static"
  parameters:
  - name: "consistencyLevel"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConsistencyLevel fromServiceSerializedFormat(String consistencyLevel)"
  returns:
    type: "<xref href=\"com.azure.cosmos.ConsistencyLevel?alt=com.azure.cosmos.ConsistencyLevel&text=ConsistencyLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getAltLink(com.azure.cosmos.implementation.Resource)"
  fullName: "com.azure.cosmos.BridgeInternal.getAltLink(Resource resource)"
  name: "getAltLink(Resource resource)"
  nameWithType: "BridgeInternal.getAltLink(Resource resource)"
  modifiers:
  - "static"
  parameters:
  - name: "resource"
    type: "<xref href=\"com.azure.cosmos.implementation.Resource?alt=com.azure.cosmos.implementation.Resource&text=Resource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getAltLink(Resource resource)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getClientSideMetrics(com.azure.cosmos.implementation.QueryMetrics)"
  fullName: "com.azure.cosmos.BridgeInternal.getClientSideMetrics(QueryMetrics queryMetrics)"
  name: "getClientSideMetrics(QueryMetrics queryMetrics)"
  nameWithType: "BridgeInternal.getClientSideMetrics(QueryMetrics queryMetrics)"
  modifiers:
  - "static"
  parameters:
  - name: "queryMetrics"
    type: "<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ClientSideMetrics getClientSideMetrics(QueryMetrics queryMetrics)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.query.metrics.ClientSideMetrics?alt=com.azure.cosmos.implementation.query.metrics.ClientSideMetrics&text=ClientSideMetrics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getClientSideRequestStatics(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getClientSideRequestStatics(CosmosDiagnostics cosmosDiagnostics)"
  name: "getClientSideRequestStatics(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.getClientSideRequestStatics(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ClientSideRequestStatistics getClientSideRequestStatics(CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.ClientSideRequestStatistics?alt=com.azure.cosmos.implementation.ClientSideRequestStatistics&text=ClientSideRequestStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getClientSideRequestStatisticsList(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getClientSideRequestStatisticsList(CosmosDiagnostics cosmosDiagnostics)"
  name: "getClientSideRequestStatisticsList(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.getClientSideRequestStatisticsList(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static List<ClientSideRequestStatistics> getClientSideRequestStatisticsList(CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.ClientSideRequestStatistics?alt=com.azure.cosmos.implementation.ClientSideRequestStatistics&text=ClientSideRequestStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.getContactedReplicas(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getContactedReplicas(CosmosDiagnostics cosmosDiagnostics)"
  name: "getContactedReplicas(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.getContactedReplicas(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static List<URI> getContactedReplicas(CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.getContextClient(com.azure.cosmos.CosmosAsyncClient)"
  fullName: "com.azure.cosmos.BridgeInternal.getContextClient(CosmosAsyncClient cosmosAsyncClient)"
  name: "getContextClient(CosmosAsyncClient cosmosAsyncClient)"
  nameWithType: "BridgeInternal.getContextClient(CosmosAsyncClient cosmosAsyncClient)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosAsyncClient"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncClient?alt=com.azure.cosmos.CosmosAsyncClient&text=CosmosAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AsyncDocumentClient getContextClient(CosmosAsyncClient cosmosAsyncClient)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.AsyncDocumentClient?alt=com.azure.cosmos.implementation.AsyncDocumentClient&text=AsyncDocumentClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getControlContainerFromThroughputGlobalControlConfig(com.azure.cosmos.GlobalThroughputControlConfig)"
  fullName: "com.azure.cosmos.BridgeInternal.getControlContainerFromThroughputGlobalControlConfig(GlobalThroughputControlConfig globalControlConfig)"
  name: "getControlContainerFromThroughputGlobalControlConfig(GlobalThroughputControlConfig globalControlConfig)"
  nameWithType: "BridgeInternal.getControlContainerFromThroughputGlobalControlConfig(GlobalThroughputControlConfig globalControlConfig)"
  modifiers:
  - "static"
  parameters:
  - name: "globalControlConfig"
    type: "<xref href=\"com.azure.cosmos.GlobalThroughputControlConfig?alt=com.azure.cosmos.GlobalThroughputControlConfig&text=GlobalThroughputControlConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosAsyncContainer getControlContainerFromThroughputGlobalControlConfig(GlobalThroughputControlConfig globalControlConfig)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncContainer?alt=com.azure.cosmos.CosmosAsyncContainer&text=CosmosAsyncContainer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getCosmosError(com.azure.cosmos.CosmosException)"
  fullName: "com.azure.cosmos.BridgeInternal.getCosmosError(CosmosException cosmosException)"
  name: "getCosmosError(CosmosException cosmosException)"
  nameWithType: "BridgeInternal.getCosmosError(CosmosException cosmosException)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosException"
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosError getCosmosError(CosmosException cosmosException)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.CosmosError?alt=com.azure.cosmos.implementation.CosmosError&text=CosmosError\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getFailedReplicas(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getFailedReplicas(CosmosDiagnostics cosmosDiagnostics)"
  name: "getFailedReplicas(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.getFailedReplicas(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Set<URI> getFailedReplicas(CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.getInnerErrorMessage(com.azure.cosmos.CosmosException)"
  fullName: "com.azure.cosmos.BridgeInternal.getInnerErrorMessage(CosmosException cosmosException)"
  name: "getInnerErrorMessage(CosmosException cosmosException)"
  nameWithType: "BridgeInternal.getInnerErrorMessage(CosmosException cosmosException)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosException"
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getInnerErrorMessage(CosmosException cosmosException)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getLink(com.azure.cosmos.CosmosAsyncContainer)"
  fullName: "com.azure.cosmos.BridgeInternal.getLink(CosmosAsyncContainer cosmosAsyncContainer)"
  name: "getLink(CosmosAsyncContainer cosmosAsyncContainer)"
  nameWithType: "BridgeInternal.getLink(CosmosAsyncContainer cosmosAsyncContainer)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosAsyncContainer"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncContainer?alt=com.azure.cosmos.CosmosAsyncContainer&text=CosmosAsyncContainer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getLink(CosmosAsyncContainer cosmosAsyncContainer)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getMetaDataDiagnosticContext(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getMetaDataDiagnosticContext(CosmosDiagnostics cosmosDiagnostics)"
  name: "getMetaDataDiagnosticContext(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.getMetaDataDiagnosticContext(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MetadataDiagnosticsContext getMetaDataDiagnosticContext(CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.MetadataDiagnosticsContext?alt=com.azure.cosmos.implementation.MetadataDiagnosticsContext&text=MetadataDiagnosticsContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getNetworkRequestTimeoutFromGatewayConnectionConfig(com.azure.cosmos.GatewayConnectionConfig)"
  fullName: "com.azure.cosmos.BridgeInternal.getNetworkRequestTimeoutFromGatewayConnectionConfig(GatewayConnectionConfig gatewayConnectionConfig)"
  name: "getNetworkRequestTimeoutFromGatewayConnectionConfig(GatewayConnectionConfig gatewayConnectionConfig)"
  nameWithType: "BridgeInternal.getNetworkRequestTimeoutFromGatewayConnectionConfig(GatewayConnectionConfig gatewayConnectionConfig)"
  modifiers:
  - "static"
  parameters:
  - name: "gatewayConnectionConfig"
    type: "<xref href=\"com.azure.cosmos.GatewayConnectionConfig?alt=com.azure.cosmos.GatewayConnectionConfig&text=GatewayConnectionConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Duration getNetworkRequestTimeoutFromGatewayConnectionConfig(GatewayConnectionConfig gatewayConnectionConfig)"
  returns:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getObject(com.azure.cosmos.implementation.JsonSerializable,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.getObject(JsonSerializable jsonSerializable, String propertyName)"
  name: "getObject(JsonSerializable jsonSerializable, String propertyName)"
  nameWithType: "BridgeInternal.getObject(JsonSerializable jsonSerializable, String propertyName)"
  modifiers:
  - "static"
  parameters:
  - name: "jsonSerializable"
    type: "<xref href=\"com.azure.cosmos.implementation.JsonSerializable?alt=com.azure.cosmos.implementation.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />"
  - name: "propertyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ObjectNode getObject(JsonSerializable jsonSerializable, String propertyName)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ObjectNode?alt=com.fasterxml.jackson.databind.node.ObjectNode&text=ObjectNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getOfferQuerySpecFromResourceId(com.azure.cosmos.CosmosAsyncContainer,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.getOfferQuerySpecFromResourceId(CosmosAsyncContainer container, String resourceId)"
  name: "getOfferQuerySpecFromResourceId(CosmosAsyncContainer container, String resourceId)"
  nameWithType: "BridgeInternal.getOfferQuerySpecFromResourceId(CosmosAsyncContainer container, String resourceId)"
  modifiers:
  - "static"
  parameters:
  - name: "container"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncContainer?alt=com.azure.cosmos.CosmosAsyncContainer&text=CosmosAsyncContainer\" data-throw-if-not-resolved=\"False\" />"
  - name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SqlQuerySpec getOfferQuerySpecFromResourceId(CosmosAsyncContainer container, String resourceId)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getPartitionKey(com.azure.cosmos.implementation.routing.PartitionKeyInternal)"
  fullName: "com.azure.cosmos.BridgeInternal.getPartitionKey(PartitionKeyInternal partitionKeyInternal)"
  name: "getPartitionKey(PartitionKeyInternal partitionKeyInternal)"
  nameWithType: "BridgeInternal.getPartitionKey(PartitionKeyInternal partitionKeyInternal)"
  modifiers:
  - "static"
  parameters:
  - name: "partitionKeyInternal"
    type: "<xref href=\"com.azure.cosmos.implementation.routing.PartitionKeyInternal?alt=com.azure.cosmos.implementation.routing.PartitionKeyInternal&text=PartitionKeyInternal\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PartitionKey getPartitionKey(PartitionKeyInternal partitionKeyInternal)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getPartitionKeyInternal(com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.cosmos.BridgeInternal.getPartitionKeyInternal(PartitionKey partitionKey)"
  name: "getPartitionKeyInternal(PartitionKey partitionKey)"
  nameWithType: "BridgeInternal.getPartitionKeyInternal(PartitionKey partitionKey)"
  modifiers:
  - "static"
  parameters:
  - name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PartitionKeyInternal getPartitionKeyInternal(PartitionKey partitionKey)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.routing.PartitionKeyInternal?alt=com.azure.cosmos.implementation.routing.PartitionKeyInternal&text=PartitionKeyInternal\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getRegionsContacted(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getRegionsContacted(CosmosDiagnostics cosmosDiagnostics)"
  name: "getRegionsContacted(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.getRegionsContacted(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Set<String> getRegionsContacted(CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.BridgeInternal.getRetryContext(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getRetryContext(CosmosDiagnostics cosmosDiagnostics)"
  name: "getRetryContext(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.getRetryContext(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RetryContext getRetryContext(CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.RetryContext?alt=com.azure.cosmos.implementation.RetryContext&text=RetryContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getSerializationDiagnosticsContext(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.getSerializationDiagnosticsContext(CosmosDiagnostics cosmosDiagnostics)"
  name: "getSerializationDiagnosticsContext(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.getSerializationDiagnosticsContext(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SerializationDiagnosticsContext getSerializationDiagnosticsContext(CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.SerializationDiagnosticsContext?alt=com.azure.cosmos.implementation.SerializationDiagnosticsContext&text=SerializationDiagnosticsContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getServiceEndpoint(com.azure.cosmos.CosmosAsyncClient)"
  fullName: "com.azure.cosmos.BridgeInternal.getServiceEndpoint(CosmosAsyncClient cosmosAsyncClient)"
  name: "getServiceEndpoint(CosmosAsyncClient cosmosAsyncClient)"
  nameWithType: "BridgeInternal.getServiceEndpoint(CosmosAsyncClient cosmosAsyncClient)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosAsyncClient"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncClient?alt=com.azure.cosmos.CosmosAsyncClient&text=CosmosAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getServiceEndpoint(CosmosAsyncClient cosmosAsyncClient)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getTracerProvider(com.azure.cosmos.CosmosAsyncClient)"
  fullName: "com.azure.cosmos.BridgeInternal.getTracerProvider(CosmosAsyncClient client)"
  name: "getTracerProvider(CosmosAsyncClient client)"
  nameWithType: "BridgeInternal.getTracerProvider(CosmosAsyncClient client)"
  modifiers:
  - "static"
  parameters:
  - name: "client"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncClient?alt=com.azure.cosmos.CosmosAsyncClient&text=CosmosAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TracerProvider getTracerProvider(CosmosAsyncClient client)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.TracerProvider?alt=com.azure.cosmos.implementation.TracerProvider&text=TracerProvider\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.getValue(com.fasterxml.jackson.databind.JsonNode)"
  fullName: "com.azure.cosmos.BridgeInternal.getValue(JsonNode value)"
  name: "getValue(JsonNode value)"
  nameWithType: "BridgeInternal.getValue(JsonNode value)"
  modifiers:
  - "static"
  parameters:
  - name: "value"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Object getValue(JsonNode value)"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.initializeAllAccessors()"
  fullName: "com.azure.cosmos.BridgeInternal.initializeAllAccessors()"
  name: "initializeAllAccessors()"
  nameWithType: "BridgeInternal.initializeAllAccessors()"
  modifiers:
  - "static"
  syntax: "public static void initializeAllAccessors()"
- uid: "com.azure.cosmos.BridgeInternal.injectConfigs(com.azure.cosmos.CosmosClientBuilder,com.azure.cosmos.implementation.Configs)"
  fullName: "com.azure.cosmos.BridgeInternal.injectConfigs(CosmosClientBuilder cosmosClientBuilder, Configs configs)"
  name: "injectConfigs(CosmosClientBuilder cosmosClientBuilder, Configs configs)"
  nameWithType: "BridgeInternal.injectConfigs(CosmosClientBuilder cosmosClientBuilder, Configs configs)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosClientBuilder"
    type: "<xref href=\"com.azure.cosmos.CosmosClientBuilder?alt=com.azure.cosmos.CosmosClientBuilder&text=CosmosClientBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "configs"
    type: "<xref href=\"com.azure.cosmos.implementation.Configs?alt=com.azure.cosmos.implementation.Configs&text=Configs\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosClientBuilder injectConfigs(CosmosClientBuilder cosmosClientBuilder, Configs configs)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosClientBuilder?alt=com.azure.cosmos.CosmosClientBuilder&text=CosmosClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.isClientTelemetryEnabled(com.azure.cosmos.CosmosAsyncClient)"
  fullName: "com.azure.cosmos.BridgeInternal.isClientTelemetryEnabled(CosmosAsyncClient cosmosAsyncClient)"
  name: "isClientTelemetryEnabled(CosmosAsyncClient cosmosAsyncClient)"
  nameWithType: "BridgeInternal.isClientTelemetryEnabled(CosmosAsyncClient cosmosAsyncClient)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosAsyncClient"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncClient?alt=com.azure.cosmos.CosmosAsyncClient&text=CosmosAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isClientTelemetryEnabled(CosmosAsyncClient cosmosAsyncClient)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.isEnableMultipleWriteLocations(com.azure.cosmos.implementation.DatabaseAccount)"
  fullName: "com.azure.cosmos.BridgeInternal.isEnableMultipleWriteLocations(DatabaseAccount account)"
  name: "isEnableMultipleWriteLocations(DatabaseAccount account)"
  nameWithType: "BridgeInternal.isEnableMultipleWriteLocations(DatabaseAccount account)"
  modifiers:
  - "static"
  parameters:
  - name: "account"
    type: "<xref href=\"com.azure.cosmos.implementation.DatabaseAccount?alt=com.azure.cosmos.implementation.DatabaseAccount&text=DatabaseAccount\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isEnableMultipleWriteLocations(DatabaseAccount account)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.monitorTelemetry(io.micrometer.core.instrument.MeterRegistry)"
  fullName: "com.azure.cosmos.BridgeInternal.monitorTelemetry(MeterRegistry registry)"
  name: "monitorTelemetry(MeterRegistry registry)"
  nameWithType: "BridgeInternal.monitorTelemetry(MeterRegistry registry)"
  modifiers:
  - "static"
  parameters:
  - name: "registry"
    type: "<xref href=\"io.micrometer.core.instrument.MeterRegistry?alt=io.micrometer.core.instrument.MeterRegistry&text=MeterRegistry\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void monitorTelemetry(MeterRegistry registry)"
- uid: "com.azure.cosmos.BridgeInternal.recordAddressResolutionEnd(com.azure.cosmos.CosmosDiagnostics,java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.recordAddressResolutionEnd(CosmosDiagnostics cosmosDiagnostics, String identifier, String errorMessage)"
  name: "recordAddressResolutionEnd(CosmosDiagnostics cosmosDiagnostics, String identifier, String errorMessage)"
  nameWithType: "BridgeInternal.recordAddressResolutionEnd(CosmosDiagnostics cosmosDiagnostics, String identifier, String errorMessage)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "identifier"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "errorMessage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void recordAddressResolutionEnd(CosmosDiagnostics cosmosDiagnostics, String identifier, String errorMessage)"
- uid: "com.azure.cosmos.BridgeInternal.recordAddressResolutionStart(com.azure.cosmos.CosmosDiagnostics,java.net.URI,boolean,boolean)"
  fullName: "com.azure.cosmos.BridgeInternal.recordAddressResolutionStart(CosmosDiagnostics cosmosDiagnostics, URI targetEndpoint, boolean forceRefresh, boolean forceCollectionRoutingMapRefresh)"
  name: "recordAddressResolutionStart(CosmosDiagnostics cosmosDiagnostics, URI targetEndpoint, boolean forceRefresh, boolean forceCollectionRoutingMapRefresh)"
  nameWithType: "BridgeInternal.recordAddressResolutionStart(CosmosDiagnostics cosmosDiagnostics, URI targetEndpoint, boolean forceRefresh, boolean forceCollectionRoutingMapRefresh)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "targetEndpoint"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  - name: "forceRefresh"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "forceCollectionRoutingMapRefresh"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String recordAddressResolutionStart(CosmosDiagnostics cosmosDiagnostics, URI targetEndpoint, boolean forceRefresh, boolean forceCollectionRoutingMapRefresh)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.recordGatewayResponse(com.azure.cosmos.CosmosDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.CosmosException,com.azure.cosmos.implementation.GlobalEndpointManager)"
  fullName: "com.azure.cosmos.BridgeInternal.recordGatewayResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, CosmosException cosmosException, GlobalEndpointManager globalEndpointManager)"
  name: "recordGatewayResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, CosmosException cosmosException, GlobalEndpointManager globalEndpointManager)"
  nameWithType: "BridgeInternal.recordGatewayResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, CosmosException cosmosException, GlobalEndpointManager globalEndpointManager)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "rxDocumentServiceRequest"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  - name: "cosmosException"
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
  - name: "globalEndpointManager"
    type: "<xref href=\"com.azure.cosmos.implementation.GlobalEndpointManager?alt=com.azure.cosmos.implementation.GlobalEndpointManager&text=GlobalEndpointManager\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void recordGatewayResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, CosmosException cosmosException, GlobalEndpointManager globalEndpointManager)"
- uid: "com.azure.cosmos.BridgeInternal.recordGatewayResponse(com.azure.cosmos.CosmosDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.directconnectivity.StoreResponse,com.azure.cosmos.implementation.GlobalEndpointManager)"
  fullName: "com.azure.cosmos.BridgeInternal.recordGatewayResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, StoreResponse storeResponse, GlobalEndpointManager globalEndpointManager)"
  name: "recordGatewayResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, StoreResponse storeResponse, GlobalEndpointManager globalEndpointManager)"
  nameWithType: "BridgeInternal.recordGatewayResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, StoreResponse storeResponse, GlobalEndpointManager globalEndpointManager)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "rxDocumentServiceRequest"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  - name: "storeResponse"
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.StoreResponse?alt=com.azure.cosmos.implementation.directconnectivity.StoreResponse&text=StoreResponse\" data-throw-if-not-resolved=\"False\" />"
  - name: "globalEndpointManager"
    type: "<xref href=\"com.azure.cosmos.implementation.GlobalEndpointManager?alt=com.azure.cosmos.implementation.GlobalEndpointManager&text=GlobalEndpointManager\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void recordGatewayResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest rxDocumentServiceRequest, StoreResponse storeResponse, GlobalEndpointManager globalEndpointManager)"
- uid: "com.azure.cosmos.BridgeInternal.recordResponse(com.azure.cosmos.CosmosDiagnostics,com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.directconnectivity.StoreResult,com.azure.cosmos.implementation.GlobalEndpointManager)"
  fullName: "com.azure.cosmos.BridgeInternal.recordResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest request, StoreResult storeResult, GlobalEndpointManager globalEndpointManager)"
  name: "recordResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest request, StoreResult storeResult, GlobalEndpointManager globalEndpointManager)"
  nameWithType: "BridgeInternal.recordResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest request, StoreResult storeResult, GlobalEndpointManager globalEndpointManager)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "request"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  - name: "storeResult"
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.StoreResult?alt=com.azure.cosmos.implementation.directconnectivity.StoreResult&text=StoreResult\" data-throw-if-not-resolved=\"False\" />"
  - name: "globalEndpointManager"
    type: "<xref href=\"com.azure.cosmos.implementation.GlobalEndpointManager?alt=com.azure.cosmos.implementation.GlobalEndpointManager&text=GlobalEndpointManager\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void recordResponse(CosmosDiagnostics cosmosDiagnostics, RxDocumentServiceRequest request, StoreResult storeResult, GlobalEndpointManager globalEndpointManager)"
- uid: "com.azure.cosmos.BridgeInternal.recordRetryContextEndTime(com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.recordRetryContextEndTime(CosmosDiagnostics cosmosDiagnostics)"
  name: "recordRetryContextEndTime(CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.recordRetryContextEndTime(CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void recordRetryContextEndTime(CosmosDiagnostics cosmosDiagnostics)"
- uid: "com.azure.cosmos.BridgeInternal.remove(com.azure.cosmos.implementation.JsonSerializable,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.remove(JsonSerializable jsonSerializable, String propertyName)"
  name: "remove(JsonSerializable jsonSerializable, String propertyName)"
  nameWithType: "BridgeInternal.remove(JsonSerializable jsonSerializable, String propertyName)"
  modifiers:
  - "static"
  parameters:
  - name: "jsonSerializable"
    type: "<xref href=\"com.azure.cosmos.implementation.JsonSerializable?alt=com.azure.cosmos.implementation.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />"
  - name: "propertyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void remove(JsonSerializable jsonSerializable, String propertyName)"
- uid: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer(java.lang.Object,com.fasterxml.jackson.databind.ObjectMapper)"
  fullName: "com.azure.cosmos.BridgeInternal.serializeJsonToByteBuffer(Object document, ObjectMapper mapper)"
  name: "serializeJsonToByteBuffer(Object document, ObjectMapper mapper)"
  nameWithType: "BridgeInternal.serializeJsonToByteBuffer(Object document, ObjectMapper mapper)"
  modifiers:
  - "static"
  parameters:
  - name: "document"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "mapper"
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ByteBuffer serializeJsonToByteBuffer(Object document, ObjectMapper mapper)"
  returns:
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.setAltLink(com.azure.cosmos.implementation.Resource,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.setAltLink(Resource resource, String altLink)"
  name: "setAltLink(Resource resource, String altLink)"
  nameWithType: "BridgeInternal.setAltLink(Resource resource, String altLink)"
  modifiers:
  - "static"
  parameters:
  - name: "resource"
    type: "<xref href=\"com.azure.cosmos.implementation.Resource?alt=com.azure.cosmos.implementation.Resource&text=Resource\" data-throw-if-not-resolved=\"False\" />"
  - name: "altLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void setAltLink(Resource resource, String altLink)"
- uid: "com.azure.cosmos.BridgeInternal.setContactedReplicas(com.azure.cosmos.CosmosDiagnostics,java.util.List<java.net.URI>)"
  fullName: "com.azure.cosmos.BridgeInternal.setContactedReplicas(CosmosDiagnostics cosmosDiagnostics, List<URI> contactedReplicas)"
  name: "setContactedReplicas(CosmosDiagnostics cosmosDiagnostics, List<URI> contactedReplicas)"
  nameWithType: "BridgeInternal.setContactedReplicas(CosmosDiagnostics cosmosDiagnostics, List<URI> contactedReplicas)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "contactedReplicas"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static void setContactedReplicas(CosmosDiagnostics cosmosDiagnostics, List<URI> contactedReplicas)"
- uid: "com.azure.cosmos.BridgeInternal.setCosmosDiagnostics(com.azure.cosmos.CosmosException,com.azure.cosmos.CosmosDiagnostics)"
  fullName: "com.azure.cosmos.BridgeInternal.setCosmosDiagnostics(CosmosException cosmosException, CosmosDiagnostics cosmosDiagnostics)"
  name: "setCosmosDiagnostics(CosmosException cosmosException, CosmosDiagnostics cosmosDiagnostics)"
  nameWithType: "BridgeInternal.setCosmosDiagnostics(CosmosException cosmosException, CosmosDiagnostics cosmosDiagnostics)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosException"
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosException setCosmosDiagnostics(CosmosException cosmosException, CosmosDiagnostics cosmosDiagnostics)"
  returns:
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.BridgeInternal.setFeedResponseDiagnostics(com.azure.cosmos.CosmosDiagnostics,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>)"
  fullName: "com.azure.cosmos.BridgeInternal.setFeedResponseDiagnostics(CosmosDiagnostics cosmosDiagnostics, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  name: "setFeedResponseDiagnostics(CosmosDiagnostics cosmosDiagnostics, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  nameWithType: "BridgeInternal.setFeedResponseDiagnostics(CosmosDiagnostics cosmosDiagnostics, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "queryMetricsMap"
    type: "<xref href=\"java.util.concurrent.ConcurrentMap?alt=java.util.concurrent.ConcurrentMap&text=ConcurrentMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.cosmos.implementation.QueryMetrics?alt=com.azure.cosmos.implementation.QueryMetrics&text=QueryMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static void setFeedResponseDiagnostics(CosmosDiagnostics cosmosDiagnostics, ConcurrentMap<String,QueryMetrics> queryMetricsMap)"
- uid: "com.azure.cosmos.BridgeInternal.setMaxReplicaSetSize(com.azure.cosmos.implementation.ReplicationPolicy,int)"
  fullName: "com.azure.cosmos.BridgeInternal.setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)"
  name: "setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)"
  nameWithType: "BridgeInternal.setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)"
  modifiers:
  - "static"
  parameters:
  - name: "replicationPolicy"
    type: "<xref href=\"com.azure.cosmos.implementation.ReplicationPolicy?alt=com.azure.cosmos.implementation.ReplicationPolicy&text=ReplicationPolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value)"
- uid: "com.azure.cosmos.BridgeInternal.setQueryPlanDiagnosticsContext(com.azure.cosmos.CosmosDiagnostics,com.azure.cosmos.implementation.query.QueryInfo.QueryPlanDiagnosticsContext)"
  fullName: "com.azure.cosmos.BridgeInternal.setQueryPlanDiagnosticsContext(CosmosDiagnostics cosmosDiagnostics, QueryInfo.QueryPlanDiagnosticsContext diagnosticsContext)"
  name: "setQueryPlanDiagnosticsContext(CosmosDiagnostics cosmosDiagnostics, QueryInfo.QueryPlanDiagnosticsContext diagnosticsContext)"
  nameWithType: "BridgeInternal.setQueryPlanDiagnosticsContext(CosmosDiagnostics cosmosDiagnostics, QueryInfo.QueryPlanDiagnosticsContext diagnosticsContext)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosDiagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
  - name: "diagnosticsContext"
    type: "<xref href=\"com.azure.cosmos.implementation.query.QueryInfo.QueryPlanDiagnosticsContext?alt=com.azure.cosmos.implementation.query.QueryInfo.QueryPlanDiagnosticsContext&text=QueryPlanDiagnosticsContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void setQueryPlanDiagnosticsContext(CosmosDiagnostics cosmosDiagnostics, QueryInfo.QueryPlanDiagnosticsContext diagnosticsContext)"
- uid: "com.azure.cosmos.BridgeInternal.setResourceSelfLink(com.azure.cosmos.implementation.Resource,java.lang.String)"
  fullName: "com.azure.cosmos.BridgeInternal.setResourceSelfLink(Resource resource, String selfLink)"
  name: "setResourceSelfLink(Resource resource, String selfLink)"
  nameWithType: "BridgeInternal.setResourceSelfLink(Resource resource, String selfLink)"
  modifiers:
  - "static"
  parameters:
  - name: "resource"
    type: "<xref href=\"com.azure.cosmos.implementation.Resource?alt=com.azure.cosmos.implementation.Resource&text=Resource\" data-throw-if-not-resolved=\"False\" />"
  - name: "selfLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void setResourceSelfLink(Resource resource, String selfLink)"
- uid: "com.azure.cosmos.BridgeInternal.setSubStatusCode(com.azure.cosmos.CosmosException,int)"
  fullName: "com.azure.cosmos.BridgeInternal.setSubStatusCode(CosmosException documentClientException, int subStatusCode)"
  name: "setSubStatusCode(CosmosException documentClientException, int subStatusCode)"
  nameWithType: "BridgeInternal.setSubStatusCode(CosmosException documentClientException, int subStatusCode)"
  modifiers:
  - "static"
  parameters:
  - name: "documentClientException"
    type: "<xref href=\"com.azure.cosmos.CosmosException?alt=com.azure.cosmos.CosmosException&text=CosmosException\" data-throw-if-not-resolved=\"False\" />"
  - name: "subStatusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void setSubStatusCode(CosmosException documentClientException, int subStatusCode)"
- uid: "com.azure.cosmos.BridgeInternal.setTimestamp(com.azure.cosmos.implementation.Resource,java.time.Instant)"
  fullName: "com.azure.cosmos.BridgeInternal.setTimestamp(Resource resource, Instant date)"
  name: "setTimestamp(Resource resource, Instant date)"
  nameWithType: "BridgeInternal.setTimestamp(Resource resource, Instant date)"
  modifiers:
  - "static"
  parameters:
  - name: "resource"
    type: "<xref href=\"com.azure.cosmos.implementation.Resource?alt=com.azure.cosmos.implementation.Resource&text=Resource\" data-throw-if-not-resolved=\"False\" />"
  - name: "date"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void setTimestamp(Resource resource, Instant date)"
- uid: "com.azure.cosmos.BridgeInternal.toStoredProcedureResponse(com.azure.cosmos.implementation.RxDocumentServiceResponse)"
  fullName: "com.azure.cosmos.BridgeInternal.toStoredProcedureResponse(RxDocumentServiceResponse response)"
  name: "toStoredProcedureResponse(RxDocumentServiceResponse response)"
  nameWithType: "BridgeInternal.toStoredProcedureResponse(RxDocumentServiceResponse response)"
  modifiers:
  - "static"
  parameters:
  - name: "response"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static StoredProcedureResponse toStoredProcedureResponse(RxDocumentServiceResponse response)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.StoredProcedureResponse?alt=com.azure.cosmos.implementation.StoredProcedureResponse&text=StoredProcedureResponse\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "DO NOT USE. This is meant to be used only internally as a bridge access to classes in com.azure.cosmos"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.34.0
