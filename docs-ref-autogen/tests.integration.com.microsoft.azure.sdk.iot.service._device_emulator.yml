items:
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  id: _device_emulator
  parent: tests.integration.com.microsoft.azure.sdk.iot.service
  children:
  - tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.clearStatus()
  - tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.DeviceEmulator(String,IotHubClientProtocol)
  - tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.enableDeviceMethod()
  - tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.enableDeviceMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  - tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.getStatusError()
  - tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.getStatusOk()
  - tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.run()
  - tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.stop()
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: DeviceEmulator
  nameWithType: DeviceEmulator
  fullName: tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator
  type: Class
  source:
    remote: &o0
      path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 22
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  summary: <p>Implement a fake device to the end to end test. </p>
  syntax: &o1
    content: public class DeviceEmulator
  inheritance:
  - java.lang.Object
  - Runnable
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.clearStatus()
  id: clearStatus()
  parent: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: clearStatus()
  nameWithType: DeviceEmulator.clearStatus()
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.clearStatus()
  overload: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.clearStatus*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 144
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  summary: <p>Clean all previous state to start a new test. </p>
  syntax:
    content: public void clearStatus()
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.DeviceEmulator(String,IotHubClientProtocol)
  id: DeviceEmulator(String,IotHubClientProtocol)
  parent: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: DeviceEmulator(String connectionString, IotHubClientProtocol protocol)
  nameWithType: DeviceEmulator.DeviceEmulator(String connectionString, IotHubClientProtocol protocol)
  fullName: tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.DeviceEmulator(String connectionString, IotHubClientProtocol protocol)
  overload: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.DeviceEmulator*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 54
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>CONSTRUCTOR Creates a new instance of the device emulator, and connect it to the IoTHub using the provided connectionString and protocol.</p>

    <p></p>
  syntax:
    content: public DeviceEmulator(String connectionString, IotHubClientProtocol protocol)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>is the string that identify the device in the IoTHub </p>
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
      description: <p>is the desired protocol for the transport layer (HTTPS, AMQPS, MQTT, or AMQPS_WS) </p>
  exceptions:
  - type: "44102508"
    description: <p>if the DeviceClient cannot resolve the URI. </p>
  - type: cbf33bbe
    description: <p>if the DeviceClient cannot open the connection with the IoTHub. </p>
  - type: 8256ba40
    description: <p>if the thread had issue to wait for the open connection. </p>
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.enableDeviceMethod()
  id: enableDeviceMethod()
  parent: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: enableDeviceMethod()
  nameWithType: DeviceEmulator.enableDeviceMethod()
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.enableDeviceMethod()
  overload: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.enableDeviceMethod*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 91
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  summary: <p>Enable device method on this device using the local callbacks. </p>
  syntax:
    content: public void enableDeviceMethod()
  exceptions:
  - type: cbf33bbe
    description: <p>if the deviceClient failed to subscribe on the device method. </p>
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.enableDeviceMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  id: enableDeviceMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  parent: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: enableDeviceMethod(DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  nameWithType: DeviceEmulator.enableDeviceMethod(DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.enableDeviceMethod(DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  overload: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.enableDeviceMethod*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 109
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  summary: <p>Enable device method on this device. </p>
  syntax:
    content: public void enableDeviceMethod(DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
    parameters:
    - id: deviceMethodCallback
      type: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback
      description: <p>is the callback called when a service invoke a method on this device. If it is null, the <xref href="tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator" data-throw-if-not-resolved="false"></xref> will take care of it using the <xref href="tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator._method_invoke_callback" data-throw-if-not-resolved="false"></xref>. </p>
    - id: deviceMethodCallbackContext
      type: "79317049"
      description: <p>is the context for the deviceMethodCallback. Only used if the deviceMethodCallback is not null. </p>
    - id: deviceMethodStatusCallback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>is the callback called when the service receive the response for the invoked method. If it is null, the <xref href="tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator" data-throw-if-not-resolved="false"></xref> will take care of it using DeviceMethodStatusCallback. </p>
    - id: deviceMethodStatusCallbackContext
      type: "79317049"
      description: <p>is the context for the deviceMethodStatusCallback.Only used if the deviceMethodStatusCallback is not null. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the deviceClient failed to subscribe on the device method. </p>
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.getStatusError()
  id: getStatusError()
  parent: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: getStatusError()
  nameWithType: DeviceEmulator.getStatusError()
  fullName: int tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.getStatusError()
  overload: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.getStatusError*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 163
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  summary: <p>Get the number of failed invoke answers since the last cleaning. </p>
  syntax:
    content: public int getStatusError()
    return:
      type: f75371fa
      description: <p>Number of failed invoke answers. </p>
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.getStatusOk()
  id: getStatusOk()
  parent: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: getStatusOk()
  nameWithType: DeviceEmulator.getStatusOk()
  fullName: int tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.getStatusOk()
  overload: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.getStatusOk*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 154
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  summary: <p>Get the number of invoke answers with success since the last cleaning. </p>
  syntax:
    content: public int getStatusOk()
    return:
      type: f75371fa
      description: <p>Number of invoke answers with success. </p>
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.run()
  id: run()
  parent: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: run()
  nameWithType: DeviceEmulator.run()
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.run()
  overload: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.run*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 62
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  syntax:
    content: public void run()
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.stop()
  id: stop()
  parent: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  langs:
  - java
  name: stop()
  nameWithType: DeviceEmulator.stop()
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.stop()
  overload: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.stop*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/service/DeviceEmulator.java
    startLine: 81
  package: tests.integration.com.microsoft.azure.sdk.iot.service
  summary: <p>Ends the DeviceClient connection and destroy the thread. </p>
  syntax:
    content: public void stop()
  exceptions:
  - type: cbf33bbe
    description: <p>if the DeviceClient cannot close the connection with the IoTHub. </p>
references:
- uid: "44102508"
  spec.java:
  - name: URISyntaxException
    fullName: URISyntaxException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.DeviceEmulator*
  name: DeviceEmulator
  nameWithType: DeviceEmulator.DeviceEmulator
  fullName: tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.DeviceEmulator
  package: tests.integration.com.microsoft.azure.sdk.iot.service
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.run*
  name: run
  nameWithType: DeviceEmulator.run
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.run
  package: tests.integration.com.microsoft.azure.sdk.iot.service
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.stop*
  name: stop
  nameWithType: DeviceEmulator.stop
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.stop
  package: tests.integration.com.microsoft.azure.sdk.iot.service
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.enableDeviceMethod*
  name: enableDeviceMethod
  nameWithType: DeviceEmulator.enableDeviceMethod
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.enableDeviceMethod
  package: tests.integration.com.microsoft.azure.sdk.iot.service
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.clearStatus*
  name: clearStatus
  nameWithType: DeviceEmulator.clearStatus
  fullName: void tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.clearStatus
  package: tests.integration.com.microsoft.azure.sdk.iot.service
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.getStatusOk*
  name: getStatusOk
  nameWithType: DeviceEmulator.getStatusOk
  fullName: int tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.getStatusOk
  package: tests.integration.com.microsoft.azure.sdk.iot.service
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.getStatusError*
  name: getStatusError
  nameWithType: DeviceEmulator.getStatusError
  fullName: int tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.getStatusError
  package: tests.integration.com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.device._device_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax:
    content: public class DeviceClient
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback.yml
  name: DeviceMethodCallback
  nameWithType: DeviceMethodCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback
  type: Interface
  syntax:
    content: public interface DeviceMethodCallback
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub event callback.</p>

    <p>Developers are expected to create an implementation of this interface, and the transport will call <xref href="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false"></xref> upon receiving a response from an IoT Hub. </p>
  syntax:
    content: public interface IotHubEventCallback
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol.yml
  name: IotHubClientProtocol
  nameWithType: IotHubClientProtocol
  fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
  type: Enum
  summary: <p>The application-layer protocol used by the client to communicate with an IoT Hub. </p>
  syntax:
    content: public enum IotHubClientProtocol
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator
  parent: tests.integration.com.microsoft.azure.sdk.iot.service
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator.yml
  name: DeviceEmulator
  nameWithType: DeviceEmulator
  fullName: tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator
  type: Class
  summary: <p>Implement a fake device to the end to end test. </p>
  syntax: *o1
- uid: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator._method_invoke_callback
  parent: tests.integration.com.microsoft.azure.sdk.iot.service
  href: tests.integration.com.microsoft.azure.sdk.iot.service._device_emulator._method_invoke_callback.yml
  name: DeviceEmulator.MethodInvokeCallback
  nameWithType: DeviceEmulator.MethodInvokeCallback
  fullName: tests.integration.com.microsoft.azure.sdk.iot.service.DeviceEmulator.MethodInvokeCallback
  type: Class
  syntax:
    content: protected class MethodInvokeCallback
