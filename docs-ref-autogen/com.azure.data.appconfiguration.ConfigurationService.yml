### YamlMime:ManagedReference
items:
- uid: "com.azure.data.appconfiguration.ConfigurationService"
  id: "ConfigurationService"
  parent: "com.azure.data.appconfiguration"
  children:
  - "com.azure.data.appconfiguration.ConfigurationService.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.data.appconfiguration.ConfigurationService.getKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.data.appconfiguration.ConfigurationService.listKeyValueRevisions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.data.appconfiguration.ConfigurationService.listKeyValues(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.data.appconfiguration.ConfigurationService.listKeyValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.data.appconfiguration.ConfigurationService.lockKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.data.appconfiguration.ConfigurationService.setKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.data.appconfiguration.models.ConfigurationSetting,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.data.appconfiguration.ConfigurationService.unlockKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "ConfigurationService"
  nameWithType: "ConfigurationService"
  fullName: "com.azure.data.appconfiguration.ConfigurationService"
  type: "Interface"
  package: "com.azure.data.appconfiguration"
  summary: "The interface defining all the services for <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\">ConfigurationAsyncClient</xref> to be used by the proxy service to perform REST calls. This is package-private so that these REST calls are transparent to the user."
  syntax:
    content: " interface ConfigurationService"
- uid: "com.azure.data.appconfiguration.ConfigurationService.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.data.appconfiguration.ConfigurationService"
  langs:
  - "java"
  name: "delete(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  nameWithType: "ConfigurationService.delete(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.delete(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  overload: "com.azure.data.appconfiguration.ConfigurationService.delete*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  syntax:
    content: "public abstract Mono<Response<ConfigurationSetting>> delete(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "key"
      type: "java.lang.String"
    - id: "label"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
- uid: "com.azure.data.appconfiguration.ConfigurationService.getKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.data.appconfiguration.ConfigurationService"
  langs:
  - "java"
  name: "getKeyValue(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, String ifMatch, String ifNoneMatch, Context context)"
  nameWithType: "ConfigurationService.getKeyValue(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, String ifMatch, String ifNoneMatch, Context context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.getKeyValue(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, String ifMatch, String ifNoneMatch, Context context)"
  overload: "com.azure.data.appconfiguration.ConfigurationService.getKeyValue*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  syntax:
    content: "public abstract Mono<Response<ConfigurationSetting>> getKeyValue(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, String ifMatch, String ifNoneMatch, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "key"
      type: "java.lang.String"
    - id: "label"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "fields"
      type: "java.lang.String"
    - id: "acceptDatetime"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
- uid: "com.azure.data.appconfiguration.ConfigurationService.listKeyValueRevisions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listKeyValueRevisions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.data.appconfiguration.ConfigurationService"
  langs:
  - "java"
  name: "listKeyValueRevisions(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, String range, Context context)"
  nameWithType: "ConfigurationService.listKeyValueRevisions(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, String range, Context context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.listKeyValueRevisions(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, String range, Context context)"
  overload: "com.azure.data.appconfiguration.ConfigurationService.listKeyValueRevisions*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  syntax:
    content: "public abstract Mono<PagedResponse<ConfigurationSetting>> listKeyValueRevisions(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, String range, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "key"
      type: "java.lang.String"
    - id: "label"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "fields"
      type: "java.lang.String"
    - id: "acceptDatetime"
      type: "java.lang.String"
    - id: "range"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
- uid: "com.azure.data.appconfiguration.ConfigurationService.listKeyValues(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listKeyValues(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.data.appconfiguration.ConfigurationService"
  langs:
  - "java"
  name: "listKeyValues(String url, String nextUrl, Context context)"
  nameWithType: "ConfigurationService.listKeyValues(String url, String nextUrl, Context context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.listKeyValues(String url, String nextUrl, Context context)"
  overload: "com.azure.data.appconfiguration.ConfigurationService.listKeyValues*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  syntax:
    content: "public abstract Mono<PagedResponse<ConfigurationSetting>> listKeyValues(String url, String nextUrl, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "nextUrl"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
- uid: "com.azure.data.appconfiguration.ConfigurationService.listKeyValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listKeyValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.data.appconfiguration.ConfigurationService"
  langs:
  - "java"
  name: "listKeyValues(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, Context context)"
  nameWithType: "ConfigurationService.listKeyValues(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, Context context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.listKeyValues(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, Context context)"
  overload: "com.azure.data.appconfiguration.ConfigurationService.listKeyValues*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  syntax:
    content: "public abstract Mono<PagedResponse<ConfigurationSetting>> listKeyValues(String url, String key, String label, String apiVersion, String fields, String acceptDatetime, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "key"
      type: "java.lang.String"
    - id: "label"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "fields"
      type: "java.lang.String"
    - id: "acceptDatetime"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
- uid: "com.azure.data.appconfiguration.ConfigurationService.lockKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "lockKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.data.appconfiguration.ConfigurationService"
  langs:
  - "java"
  name: "lockKeyValue(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  nameWithType: "ConfigurationService.lockKeyValue(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.lockKeyValue(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  overload: "com.azure.data.appconfiguration.ConfigurationService.lockKeyValue*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  syntax:
    content: "public abstract Mono<Response<ConfigurationSetting>> lockKeyValue(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "key"
      type: "java.lang.String"
    - id: "label"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
- uid: "com.azure.data.appconfiguration.ConfigurationService.setKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.data.appconfiguration.models.ConfigurationSetting,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.data.appconfiguration.models.ConfigurationSetting,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.data.appconfiguration.ConfigurationService"
  langs:
  - "java"
  name: "setKey(String url, String key, String label, String apiVersion, ConfigurationSetting keyValueParameters, String ifMatch, String ifNoneMatch, Context context)"
  nameWithType: "ConfigurationService.setKey(String url, String key, String label, String apiVersion, ConfigurationSetting keyValueParameters, String ifMatch, String ifNoneMatch, Context context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.setKey(String url, String key, String label, String apiVersion, ConfigurationSetting keyValueParameters, String ifMatch, String ifNoneMatch, Context context)"
  overload: "com.azure.data.appconfiguration.ConfigurationService.setKey*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  syntax:
    content: "public abstract Mono<Response<ConfigurationSetting>> setKey(String url, String key, String label, String apiVersion, ConfigurationSetting keyValueParameters, String ifMatch, String ifNoneMatch, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "key"
      type: "java.lang.String"
    - id: "label"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "keyValueParameters"
      type: "com.azure.data.appconfiguration.models.ConfigurationSetting"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
- uid: "com.azure.data.appconfiguration.ConfigurationService.unlockKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "unlockKeyValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.data.appconfiguration.ConfigurationService"
  langs:
  - "java"
  name: "unlockKeyValue(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  nameWithType: "ConfigurationService.unlockKeyValue(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.unlockKeyValue(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
  overload: "com.azure.data.appconfiguration.ConfigurationService.unlockKeyValue*"
  type: "Method"
  package: "com.azure.data.appconfiguration"
  syntax:
    content: "public abstract Mono<Response<ConfigurationSetting>> unlockKeyValue(String url, String key, String label, String apiVersion, String ifMatch, String ifNoneMatch, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "key"
      type: "java.lang.String"
    - id: "label"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.data.appconfiguration.models.ConfigurationSetting"
    name: "ConfigurationSetting"
    fullName: "com.azure.data.appconfiguration.models.ConfigurationSetting"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.data.appconfiguration.ConfigurationService.getKeyValue*"
  name: "getKeyValue"
  nameWithType: "ConfigurationService.getKeyValue"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.getKeyValue"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.models.ConfigurationSetting"
  name: "ConfigurationSetting"
  nameWithType: "ConfigurationSetting"
  fullName: "com.azure.data.appconfiguration.models.ConfigurationSetting"
- uid: "com.azure.data.appconfiguration.ConfigurationService.setKey*"
  name: "setKey"
  nameWithType: "ConfigurationService.setKey"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.setKey"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationService.delete*"
  name: "delete"
  nameWithType: "ConfigurationService.delete"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.delete"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationService.lockKeyValue*"
  name: "lockKeyValue"
  nameWithType: "ConfigurationService.lockKeyValue"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.lockKeyValue"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationService.unlockKeyValue*"
  name: "unlockKeyValue"
  nameWithType: "ConfigurationService.unlockKeyValue"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.unlockKeyValue"
  package: "com.azure.data.appconfiguration"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.data.appconfiguration.models.ConfigurationSetting>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.data.appconfiguration.models.ConfigurationSetting"
    name: "ConfigurationSetting"
    fullName: "com.azure.data.appconfiguration.models.ConfigurationSetting"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.data.appconfiguration.ConfigurationService.listKeyValues*"
  name: "listKeyValues"
  nameWithType: "ConfigurationService.listKeyValues"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.listKeyValues"
  package: "com.azure.data.appconfiguration"
- uid: "com.azure.data.appconfiguration.ConfigurationService.listKeyValueRevisions*"
  name: "listKeyValueRevisions"
  nameWithType: "ConfigurationService.listKeyValueRevisions"
  fullName: "com.azure.data.appconfiguration.ConfigurationService.listKeyValueRevisions"
  package: "com.azure.data.appconfiguration"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "com.azure.core.http.rest.PagedResponse"
  name: "PagedResponse"
  nameWithType: "PagedResponse"
  fullName: "com.azure.core.http.rest.PagedResponse"
