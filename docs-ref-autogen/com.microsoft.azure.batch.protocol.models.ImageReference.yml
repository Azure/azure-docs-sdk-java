### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.ImageReference
  id: ImageReference
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.ImageReference.ImageReference()
  - com.microsoft.azure.batch.protocol.models.ImageReference.offer()
  - com.microsoft.azure.batch.protocol.models.ImageReference.publisher()
  - com.microsoft.azure.batch.protocol.models.ImageReference.sku()
  - com.microsoft.azure.batch.protocol.models.ImageReference.version()
  - com.microsoft.azure.batch.protocol.models.ImageReference.virtualMachineImageId()
  - com.microsoft.azure.batch.protocol.models.ImageReference.withOffer(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.ImageReference.withPublisher(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.ImageReference.withSku(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.ImageReference.withVersion(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.ImageReference.withVirtualMachineImageId(java.lang.String)
  langs:
  - java
  name: ImageReference
  nameWithType: ImageReference
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: A reference to an Azure Virtual Machines Marketplace Image or a custom Azure Virtual Machine Image. To get the list of all Azure Marketplace Image references verified by Azure Batch, see the 'List supported Images' operation.
  syntax:
    content: public class ImageReference
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.ImageReference()
  id: ImageReference()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: ImageReference()
  nameWithType: ImageReference.ImageReference()
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.ImageReference()
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.ImageReference*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public ImageReference()
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.offer()
  id: offer()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: offer()
  nameWithType: ImageReference.offer()
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.offer()
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.offer*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for example, UbuntuServer or WindowsServer.
  syntax:
    content: public String offer()
    return:
      type: java.lang.String
      description: the offer value
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.publisher()
  id: publisher()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: publisher()
  nameWithType: ImageReference.publisher()
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.publisher()
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.publisher*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for example, Canonical or MicrosoftWindowsServer.
  syntax:
    content: public String publisher()
    return:
      type: java.lang.String
      description: the publisher value
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.sku()
  id: sku()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: sku()
  nameWithType: ImageReference.sku()
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.sku()
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.sku*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for example, 18.04-LTS or 2019-Datacenter.
  syntax:
    content: public String sku()
    return:
      type: java.lang.String
      description: the sku value
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.version()
  id: version()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: version()
  nameWithType: ImageReference.version()
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.version()
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.version*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get a value of 'latest' can be specified to select the latest version of an Image. If omitted, the default is 'latest'.
  syntax:
    content: public String version()
    return:
      type: java.lang.String
      description: the version value
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.virtualMachineImageId()
  id: virtualMachineImageId()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: virtualMachineImageId()
  nameWithType: ImageReference.virtualMachineImageId()
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.virtualMachineImageId()
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.virtualMachineImageId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is mutually exclusive with other ImageReference properties. For Virtual Machine Image it must be in the same region and subscription as the Azure Batch account. The Shared Image Gallery Image must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch Compute Node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics\#virtual-network-vnet-and-firewall-configuration.
  syntax:
    content: public String virtualMachineImageId()
    return:
      type: java.lang.String
      description: the virtualMachineImageId value
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withOffer(java.lang.String)
  id: withOffer(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: withOffer(String offer)
  nameWithType: ImageReference.withOffer(String offer)
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withOffer(String offer)
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.withOffer*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for example, UbuntuServer or WindowsServer.
  syntax:
    content: public ImageReference withOffer(String offer)
    parameters:
    - id: offer
      type: java.lang.String
      description: the offer value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ImageReference
      description: the ImageReference object itself.
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withPublisher(java.lang.String)
  id: withPublisher(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: withPublisher(String publisher)
  nameWithType: ImageReference.withPublisher(String publisher)
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withPublisher(String publisher)
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.withPublisher*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for example, Canonical or MicrosoftWindowsServer.
  syntax:
    content: public ImageReference withPublisher(String publisher)
    parameters:
    - id: publisher
      type: java.lang.String
      description: the publisher value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ImageReference
      description: the ImageReference object itself.
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withSku(java.lang.String)
  id: withSku(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: withSku(String sku)
  nameWithType: ImageReference.withSku(String sku)
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withSku(String sku)
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.withSku*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for example, 18.04-LTS or 2019-Datacenter.
  syntax:
    content: public ImageReference withSku(String sku)
    parameters:
    - id: sku
      type: java.lang.String
      description: the sku value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ImageReference
      description: the ImageReference object itself.
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withVersion(java.lang.String)
  id: withVersion(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: withVersion(String version)
  nameWithType: ImageReference.withVersion(String version)
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withVersion(String version)
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.withVersion*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set a value of 'latest' can be specified to select the latest version of an Image. If omitted, the default is 'latest'.
  syntax:
    content: public ImageReference withVersion(String version)
    parameters:
    - id: version
      type: java.lang.String
      description: the version value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ImageReference
      description: the ImageReference object itself.
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withVirtualMachineImageId(java.lang.String)
  id: withVirtualMachineImageId(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ImageReference
  langs:
  - java
  name: withVirtualMachineImageId(String virtualMachineImageId)
  nameWithType: ImageReference.withVirtualMachineImageId(String virtualMachineImageId)
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withVirtualMachineImageId(String virtualMachineImageId)
  overload: com.microsoft.azure.batch.protocol.models.ImageReference.withVirtualMachineImageId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is mutually exclusive with other ImageReference properties. For Virtual Machine Image it must be in the same region and subscription as the Azure Batch account. The Shared Image Gallery Image must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch Compute Node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics\#virtual-network-vnet-and-firewall-configuration.
  syntax:
    content: public ImageReference withVirtualMachineImageId(String virtualMachineImageId)
    parameters:
    - id: virtualMachineImageId
      type: java.lang.String
      description: the virtualMachineImageId value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ImageReference
      description: the ImageReference object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.ImageReference*
  name: ImageReference
  nameWithType: ImageReference.ImageReference
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.ImageReference
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.publisher*
  name: publisher
  nameWithType: ImageReference.publisher
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.publisher
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withPublisher*
  name: withPublisher
  nameWithType: ImageReference.withPublisher
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withPublisher
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.offer*
  name: offer
  nameWithType: ImageReference.offer
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.offer
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withOffer*
  name: withOffer
  nameWithType: ImageReference.withOffer
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withOffer
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.sku*
  name: sku
  nameWithType: ImageReference.sku
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.sku
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withSku*
  name: withSku
  nameWithType: ImageReference.withSku
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withSku
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.version*
  name: version
  nameWithType: ImageReference.version
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.version
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withVersion*
  name: withVersion
  nameWithType: ImageReference.withVersion
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withVersion
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.virtualMachineImageId*
  name: virtualMachineImageId
  nameWithType: ImageReference.virtualMachineImageId
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.virtualMachineImageId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference.withVirtualMachineImageId*
  name: withVirtualMachineImageId
  nameWithType: ImageReference.withVirtualMachineImageId
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference.withVirtualMachineImageId
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
