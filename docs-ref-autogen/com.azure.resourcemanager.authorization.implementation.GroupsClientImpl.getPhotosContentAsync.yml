### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.implementation.GroupsClientImpl.getPhotosContentAsync*"
fullName: "com.azure.resourcemanager.authorization.implementation.GroupsClientImpl.getPhotosContentAsync"
name: "getPhotosContentAsync"
nameWithType: "GroupsClientImpl.getPhotosContentAsync"
members:
- uid: "com.azure.resourcemanager.authorization.implementation.GroupsClientImpl.getPhotosContentAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.implementation.GroupsClientImpl.getPhotosContentAsync(String groupId, String profilePhotoId)"
  name: "getPhotosContentAsync(String groupId, String profilePhotoId)"
  nameWithType: "GroupsClientImpl.getPhotosContentAsync(String groupId, String profilePhotoId)"
  summary: "Get media content for the navigation property photos from groups."
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<ByteBuffer> getPhotosContentAsync(String groupId, String profilePhotoId)"
  returns:
    description: "media content for the navigation property photos from groups."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.3.0
