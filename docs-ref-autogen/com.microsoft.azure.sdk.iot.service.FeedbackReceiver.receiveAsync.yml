### YamlMime:JavaMember
nameWithType: FeedbackReceiver.receiveAsync
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync()
  name: receiveAsync()
  nameWithType: FeedbackReceiver.receiveAsync()
  returns:
    description: <p>The future object for the requested operation </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.sdk.iot.service.FeedbackBatch?alt=com.microsoft.azure.sdk.iot.service.FeedbackBatch&text=FeedbackBatch" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Async wrapper for receive() operation with default timeout</p>

    <p></p>
  syntax: public CompletableFuture<FeedbackBatch> receiveAsync()
  uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync()
- fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync(long timeoutMs)
  name: receiveAsync(long timeoutMs)
  nameWithType: FeedbackReceiver.receiveAsync(long timeoutMs)
  parameters:
  - name: timeoutMs
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The future object for the requested operation </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.sdk.iot.service.FeedbackBatch?alt=com.microsoft.azure.sdk.iot.service.FeedbackBatch&text=FeedbackBatch" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Async wrapper for receive() operation with specific timeout</p>

    <p></p>
  syntax: public CompletableFuture<FeedbackBatch> receiveAsync(long timeoutMs)
  uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync(long)
uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync*
fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver.receiveAsync()
name: receiveAsync()
package: com.microsoft.azure.sdk.iot.service
metadata: {}
