### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendServerHealth"
fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendServerHealth"
name: "ApplicationGatewayBackendServerHealth"
nameWithType: "ApplicationGatewayBackendServerHealth"
summary: "A client-side representation of the health information of an application gateway backend server."
syntax: "public interface ApplicationGatewayBackendServerHealth extends HasInner<ApplicationGatewayBackendHealthServer>, HasParent<ApplicationGatewayBackendHttpConfigurationHealth>"
methods:
- "com.microsoft.azure.management.network.ApplicationGatewayBackendServerHealth.getNetworkInterfaceIPConfiguration()"
- "com.microsoft.azure.management.network.ApplicationGatewayBackendServerHealth.ipAddress()"
- "com.microsoft.azure.management.network.ApplicationGatewayBackendServerHealth.status()"
type: "interface"
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent&text=HasParent\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfigurationHealth?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfigurationHealth&text=ApplicationGatewayBackendHttpConfigurationHealth\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer&text=ApplicationGatewayBackendHealthServer\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.38.1
