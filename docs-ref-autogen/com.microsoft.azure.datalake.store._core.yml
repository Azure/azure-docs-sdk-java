### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.datalake.store._core
  id: _core
  parent: com.microsoft.azure.datalake.store
  children:
  - com.microsoft.azure.datalake.store._core.append(String,long,byte [],int,int,String,String,SyncFlag,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.checkAccess(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.concat(String,List<String>,ADLStoreClient,boolean,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.concat(String,List<String>,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.concurrentAppend(String,byte [],int,int,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.create(String,boolean,String,byte [],int,int,String,String,boolean,SyncFlag,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.delete(String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.getAclStatus(String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.getAclStatus(String,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.getContentSummary(String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.getFileStatus(String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.getFileStatus(String,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.isValidOctal(String)
  - com.microsoft.azure.datalake.store._core.listStatus(String,String,String,int,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.listStatus(String,String,String,int,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.mkdirs(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.modifyAclEntries(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.modifyAclEntries(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.open(String,long,long,String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.open(String,long,long,String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.removeAcl(String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.removeAclEntries(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.removeAclEntries(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.removeDefaultAcl(String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.rename(String,String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.setAcl(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.setAcl(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.setExpiryTime(String,ExpiryOption,long,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.setOwner(String,String,String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.setPermission(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  - com.microsoft.azure.datalake.store._core.setTimes(String,long,long,ADLStoreClient,RequestOptions,OperationResponse)
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: Core
  nameWithType: Core
  fullName: com.microsoft.azure.datalake.store.Core
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/datalake/store/Core.java
      branch: master
      repo: https://github.com/azure/azure-data-lake-store-java
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 40
  package: com.microsoft.azure.datalake.store
  summary: "<p>protocol.Core class implements the calls for the RESP API. There is one method in Core for every REST API supported by the server. </p>\r\n<p>The methods in this class tend to be lower-level, exposing all the details of the underlying operation. To call the methods, instantiate a <xref uid=\"com.microsoft.azure.datalake.store._request_options\" data-throw-if-not-resolved=\"false\">RequestOptions</xref> object first. Assign any of the member values as needed (e.g., the RetryPolicy). Then create a new <xref uid=\"com.microsoft.azure.datalake.store._operation_response\" data-throw-if-not-resolved=\"false\">OperationResponse</xref> object. The <xref uid=\"com.microsoft.azure.datalake.store._operation_response\" data-throw-if-not-resolved=\"false\">OperationResponse</xref> is used for passing the call results and stats back from the call. </p>\r\n<p>Failures originating in Core methods are communicated back through the <xref uid=\"com.microsoft.azure.datalake.store._operation_response\" data-throw-if-not-resolved=\"false\">OperationResponse</xref> parameter. </p>\r\n<p>\r\n  <b>Thread Safety: </b> all static methods in this class are thread-safe</p>"
  syntax:
    content: public class Core
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.datalake.store._core.append(String,long,byte [],int,int,String,String,SyncFlag,ADLStoreClient,RequestOptions,OperationResponse)
  id: append(String,long,byte [],int,int,String,String,SyncFlag,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: append(String path, long offsetToAppendTo, byte[] contents, int offsetWithinContentsArray, int length, String leaseId, String sessionId, SyncFlag syncFlag, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.append(String path, long offsetToAppendTo, byte[] contents, int offsetWithinContentsArray, int length, String leaseId, String sessionId, SyncFlag syncFlag, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.append(String path, long offsetToAppendTo, byte[] contents, int offsetWithinContentsArray, int length, String leaseId, String sessionId, SyncFlag syncFlag, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.append*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 155
  package: com.microsoft.azure.datalake.store
  summary: "<p>append bytes to an existing file created with</p>\r\n<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">create(String, boolean, String, byte[], int, int, String, String, boolean, SyncFlag, ADLStoreClient, RequestOptions, OperationResponse)</xref> (String, boolean, String, byte[], int, int, String, String, boolean, boolean, ADLStoreClient, RequestOptions, OperationResponse) create}.</p>\r\n<p>\r\nUse <xref uid=\"com.microsoft.azure.datalake.store._sync_flag.METADATA\" data-throw-if-not-resolved=\"false\">SyncFlag#METADATA</xref> when metadata for the file also needs to be updated especially file length retrieved from <xref uid=\"com.microsoft.azure.datalake.store._core.getFileStatus(String,ADLStoreClient,RequestOptions,OperationResponse)\" data-throw-if-not-resolved=\"false\">getFileStatus(String, ADLStoreClient, RequestOptions, OperationResponse)</xref> or <xref uid=\"com.microsoft.azure.datalake.store._core.listStatus(String,String,String,int,ADLStoreClient,RequestOptions,OperationResponse)\" data-throw-if-not-resolved=\"false\">listStatus(String, String, String, int, ADLStoreClient, RequestOptions, OperationResponse)</xref> API call. Has an overhead of updating metadata operation.</p>\r\n<p>Use <xref uid=\"com.microsoft.azure.datalake.store._sync_flag.CLOSE\" data-throw-if-not-resolved=\"false\">SyncFlag#CLOSE</xref> when no more data is expected to be written in this path. Adl backend would update metadata, close the stream handle and release the lease on the path if valid leaseId is passed. Expensive operation and should be used only when last bytes are written. </p>"
  syntax:
    content: public static void append(String path, long offsetToAppendTo, byte[] contents, int offsetWithinContentsArray, int length, String leaseId, String sessionId, SyncFlag syncFlag, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file to append to. The file must already exist. </p>
    - id: offsetToAppendTo
      type: 0364520f
      description: >-
        <p>offset at which to append to to file. To let the server choose offset, pass<code>-1 

            </code> . </p>
    - id: contents
      type: ccd9418d
      description: >-
        <p>byte array containing the contents to be written to the file. Can be<code>null 

            </code></p>
    - id: offsetWithinContentsArray
      type: f75371fa
      description: >-
        <p>offset within the byte array passed in<code>contents 

            </code> . Bytes starting at this offset will be written to server </p>
    - id: length
      type: f75371fa
      description: >-
        <p>number of bytes from<code>contents 

            </code> to be written </p>
    - id: leaseId
      type: "26831127"
      description: <p>a String containing the lease ID (generated by client). Can be null. </p>
    - id: sessionId
      type: "26831127"
      description: <p>a String containing the session ID (generated by client). Can be null. </p>
    - id: syncFlag
      type: com.microsoft.azure.datalake.store._sync_flag
      description: <p>Use <xref uid="com.microsoft.azure.datalake.store._sync_flag.DATA" data-throw-if-not-resolved="false">SyncFlag#DATA</xref> when writing more bytes to same file path. Most performant operation.</p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.checkAccess(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  id: checkAccess(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: checkAccess(String path, String rwx, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.checkAccess(String path, String rwx, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.checkAccess(String path, String rwx, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.checkAccess*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1070
  package: com.microsoft.azure.datalake.store
  summary: "<p>checks whether the calling user has the required permissions for the file. the permissions to check should be specified in the rwx parameter, as a unix permission string.</p>\r\n<p></p>"
  syntax:
    content: public static void checkAccess(String path, String rwx, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file or directory to check </p>
    - id: rwx
      type: "26831127"
      description: >-
        <p>the permission to check for, in rwx string form. The call returns true if the caller has all the requested permissions. For example, specifying<code>"r-x" 

            </code> succeeds if the caller has read and execute permissions. </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.concat(String,List<String>,ADLStoreClient,boolean,RequestOptions,OperationResponse)
  id: concat(String,List<String>,ADLStoreClient,boolean,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: concat(String path, List<String> sources, ADLStoreClient client, boolean deleteSourceDirectory, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.concat(String path, List<String> sources, ADLStoreClient client, boolean deleteSourceDirectory, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.concat(String path, List<String> sources, ADLStoreClient client, boolean deleteSourceDirectory, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.concat*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 580
  package: com.microsoft.azure.datalake.store
  summary: "<p>Concatenate the specified list of files into the target filename. The target should not exist. the source files will be deleted if the concatenate succeeds.</p>\r\n<p></p>"
  syntax:
    content: public static void concat(String path, List<String> sources, ADLStoreClient client, boolean deleteSourceDirectory, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>that full path of the target file to create </p>
    - id: sources
      type: 7d60c20e
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">List</xref> of strings containing full pathnames of the files to concatenate. Cannot be null or empty. </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: deleteSourceDirectory
      type: 4fc6e284
      description: <p>specify whether the directory containing the source files should be deleted. If source files specified in concat include <em>all</em> the files in the directory, then specifying this parameter makes the concat delete the source directory along with all the source files. Since a directory-level operation is faster than deleting all the files one-by-one on the server, this might provide a performance boost for some applications. This is a specific performance optimizations for some apps like bulk upload apps, where the needs match the functionality offered by this flag. </p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.concat(String,List<String>,ADLStoreClient,RequestOptions,OperationResponse)
  id: concat(String,List<String>,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: concat(String path, List<String> sources, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.concat(String path, List<String> sources, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.concat(String path, List<String> sources, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.concat*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 553
  package: com.microsoft.azure.datalake.store
  summary: "<p>Concatenate the specified list of files into the target filename. The target should not exist. the source files will be deleted if the concatenate succeeds. </p>"
  syntax:
    content: public static void concat(String path, List<String> sources, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>that full path of the target file to create </p>
    - id: sources
      type: 7d60c20e
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">List</xref> of strings containing full pathnames of the files to concatenate. Cannot be null or empty. </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.concurrentAppend(String,byte [],int,int,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  id: concurrentAppend(String,byte [],int,int,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: concurrentAppend(String path, byte[] contents, int offsetWithinContentsArray, int length, boolean autoCreate, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.concurrentAppend(String path, byte[] contents, int offsetWithinContentsArray, int length, boolean autoCreate, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.concurrentAppend(String path, byte[] contents, int offsetWithinContentsArray, int length, boolean autoCreate, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.concurrentAppend*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 197
  package: com.microsoft.azure.datalake.store
  summary: "<p>append bytes to a file. The offset is determined by the server. This enables multiple writers to append concurrently to the same file. A file created with<code>concurrentAppend \r\n    </code> can only be appended with<code>concurrentAppend \r\n    </code> .</p>\r\n<p></p>"
  syntax:
    content: public static void concurrentAppend(String path, byte[] contents, int offsetWithinContentsArray, int length, boolean autoCreate, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file to append to. </p>
    - id: contents
      type: ccd9418d
      description: >-
        <p>byte array containing the contents to be written to the file. Can be<code>null 

            </code></p>
    - id: offsetWithinContentsArray
      type: f75371fa
      description: >-
        <p>offset within the byte array passed in<code>contents 

            </code> . Bytes starting at this offset will be written to server </p>
    - id: length
      type: f75371fa
      description: >-
        <p>number of bytes from<code>contents 

            </code> to be written </p>
    - id: autoCreate
      type: 4fc6e284
      description: <p>boolean specifying whether to create the file if it doesn't already exist </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.create(String,boolean,String,byte [],int,int,String,String,boolean,SyncFlag,ADLStoreClient,RequestOptions,OperationResponse)
  id: create(String,boolean,String,byte [],int,int,String,String,boolean,SyncFlag,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: create(String path, boolean overwrite, String octalPermission, byte[] contents, int offsetWithinContentsArray, int length, String leaseId, String sessionId, boolean createParent, SyncFlag syncFlag, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.create(String path, boolean overwrite, String octalPermission, byte[] contents, int offsetWithinContentsArray, int length, String leaseId, String sessionId, boolean createParent, SyncFlag syncFlag, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.create(String path, boolean overwrite, String octalPermission, byte[] contents, int offsetWithinContentsArray, int length, String leaseId, String sessionId, boolean createParent, SyncFlag syncFlag, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.create*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 82
  package: com.microsoft.azure.datalake.store
  summary: "<p>create a file and write to it.</p>\r\n<p>\r\nUse <xref uid=\"com.microsoft.azure.datalake.store._sync_flag.METADATA\" data-throw-if-not-resolved=\"false\">SyncFlag#METADATA</xref> when metadata for the file also needs to be updated especially file length retrieved from <xref uid=\"com.microsoft.azure.datalake.store._core.getFileStatus(String,ADLStoreClient,RequestOptions,OperationResponse)\" data-throw-if-not-resolved=\"false\">getFileStatus(String, ADLStoreClient, RequestOptions, OperationResponse)</xref> or <xref uid=\"com.microsoft.azure.datalake.store._core.listStatus(String,String,String,int,ADLStoreClient,RequestOptions,OperationResponse)\" data-throw-if-not-resolved=\"false\">listStatus(String, String, String, int, ADLStoreClient, RequestOptions, OperationResponse)</xref> API call. Has an overhead of updating metadata operation.</p>\r\n<p>Use <xref uid=\"com.microsoft.azure.datalake.store._sync_flag.CLOSE\" data-throw-if-not-resolved=\"false\">SyncFlag#CLOSE</xref> when no more data is expected to be written in this path. Adl backend would update metadata, close the stream handle and release the lease on the path if valid leaseId is passed. Expensive operation and should be used only when last bytes are written. </p>"
  syntax:
    content: public static void create(String path, boolean overwrite, String octalPermission, byte[] contents, int offsetWithinContentsArray, int length, String leaseId, String sessionId, boolean createParent, SyncFlag syncFlag, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file to create </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>whether to overwrite the file if it already exists </p>
    - id: octalPermission
      type: "26831127"
      description: >-
        <p>permissions for the file, as octal digits (For Example,<code>"755" 

            </code> ). Can be null. </p>
    - id: contents
      type: ccd9418d
      description: >-
        <p>byte array containing the contents to be written to the file. Can be<code>null 

            </code></p>
    - id: offsetWithinContentsArray
      type: f75371fa
      description: >-
        <p>offset within the byte array passed in<code>contents 

            </code> . Bytes starting at this offset will be written to server </p>
    - id: length
      type: f75371fa
      description: >-
        <p>number of bytes from<code>contents 

            </code> to be written </p>
    - id: leaseId
      type: "26831127"
      description: <p>a String containing the lease ID (generated by client). Can be null. </p>
    - id: sessionId
      type: "26831127"
      description: <p>a String containing the session ID (generated by client). Can be null. </p>
    - id: createParent
      type: 4fc6e284
      description: <p>if true, then parent directories of the file are created if they are missing. </p>
    - id: syncFlag
      type: com.microsoft.azure.datalake.store._sync_flag
      description: <p>Use <xref uid="com.microsoft.azure.datalake.store._sync_flag.DATA" data-throw-if-not-resolved="false">SyncFlag#DATA</xref> when writing more bytes to same file path. Most performant operation.</p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.delete(String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  id: delete(String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: delete(String path, boolean recursive, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.delete(String path, boolean recursive, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.delete(String path, boolean recursive, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 301
  package: com.microsoft.azure.datalake.store
  summary: "<p>delete a file or directory from Azure Data Lake.</p>\r\n<p></p>"
  syntax:
    content: public static boolean delete(String path, boolean recursive, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file to delete. The file must already exist. </p>
    - id: recursive
      type: 4fc6e284
      description: <p>if deleting a directory, then whether to delete all files an directories in the directory hierarchy underneath </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
    return:
      type: 4fc6e284
      description: >-
        <p>returns<code>true 

            </code> if the delete was successful. Also check<code>resp.successful 

            </code> . </p>
- uid: com.microsoft.azure.datalake.store._core.getAclStatus(String,ADLStoreClient,RequestOptions,OperationResponse)
  id: getAclStatus(String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: getAclStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.getAclStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.getAclStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.getAclStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1307
  package: com.microsoft.azure.datalake.store
  summary: "<p>Gets the current ACLs and permissions associated with a file or directory. Also returns the current owning user and group for the file or directory.</p>\r\n<p></p>"
  syntax:
    content: public static AclStatus getAclStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file or directory to get ACLs and permissions for </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call</p>
    return:
      type: com.microsoft.azure.datalake.store.acl._acl_status
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">AclStatus</xref> object containing the ACLs, permissions and owners of the file or directory </p>
- uid: com.microsoft.azure.datalake.store._core.getAclStatus(String,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  id: getAclStatus(String,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: getAclStatus(String path, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.getAclStatus(String path, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.getAclStatus(String path, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.getAclStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1327
  package: com.microsoft.azure.datalake.store
  summary: "<p>Gets the current ACLs and permissions associated with a file or directory. Also returns the current owning user and group for the file or directory.</p>\r\n<p></p>"
  syntax:
    content: public static AclStatus getAclStatus(String path, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file or directory to get ACLs and permissions for </p>
    - id: oidOrUpn
      type: com.microsoft.azure.datalake.store._user_group_representation
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store._user_group_representation" data-throw-if-not-resolved="false">UserGroupRepresentation</xref> enum specifying whether to return user and group information as OID or UPN </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call</p>
    return:
      type: com.microsoft.azure.datalake.store.acl._acl_status
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">AclStatus</xref> object containing the ACLs, permissions and owners of the file or directory </p>
- uid: com.microsoft.azure.datalake.store._core.getContentSummary(String,ADLStoreClient,RequestOptions,OperationResponse)
  id: getContentSummary(String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: getContentSummary(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.getContentSummary(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.getContentSummary(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.getContentSummary*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 498
  package: com.microsoft.azure.datalake.store
  summary: "<p>Gets the content summary of a file or directory. </p>"
  syntax:
    content: public static ContentSummary getContentSummary(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>path of the file or directory to query </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
    return:
      type: com.microsoft.azure.datalake.store._content_summary
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store._content_summary" data-throw-if-not-resolved="false">ContentSummary</xref> containing summary of information about the file or directory </p>
- uid: com.microsoft.azure.datalake.store._core.getFileStatus(String,ADLStoreClient,RequestOptions,OperationResponse)
  id: getFileStatus(String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: getFileStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.getFileStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.getFileStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.getFileStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 652
  package: com.microsoft.azure.datalake.store
  summary: "<p>Gets the directory metadata associated with a file or directory.</p>\r\n<p></p>"
  syntax: &o1
    content: public static DirectoryEntry getFileStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the file or directory to get metadata for </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call</p>
    return:
      type: com.microsoft.azure.datalake.store._directory_entry
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store._directory_entry" data-throw-if-not-resolved="false">DirectoryEntry</xref> containing the metadata for the file </p>
- uid: com.microsoft.azure.datalake.store._core.getFileStatus(String,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  id: getFileStatus(String,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: getFileStatus(String path, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.getFileStatus(String path, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.getFileStatus(String path, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.getFileStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 672
  package: com.microsoft.azure.datalake.store
  summary: "<p>Gets the directory metadata associated with a file or directory.</p>\r\n<p></p>"
  syntax:
    content: public static DirectoryEntry getFileStatus(String path, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the file or directory to get metadata for </p>
    - id: oidOrUpn
      type: com.microsoft.azure.datalake.store._user_group_representation
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store._user_group_representation" data-throw-if-not-resolved="false">UserGroupRepresentation</xref> enum specifying whether to return user and group information as OID or UPN </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call</p>
    return:
      type: com.microsoft.azure.datalake.store._directory_entry
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store._directory_entry" data-throw-if-not-resolved="false">DirectoryEntry</xref> containing the metadata for the file </p>
- uid: com.microsoft.azure.datalake.store._core.isValidOctal(String)
  id: isValidOctal(String)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: isValidOctal(String input)
  nameWithType: Core.isValidOctal(String input)
  fullName: com.microsoft.azure.datalake.store.Core.isValidOctal(String input)
  overload: com.microsoft.azure.datalake.store._core.isValidOctal*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1054
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public static boolean isValidOctal(String input)
    parameters:
    - id: input
      type: "26831127"
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.datalake.store._core.listStatus(String,String,String,int,ADLStoreClient,RequestOptions,OperationResponse)
  id: listStatus(String,String,String,int,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: listStatus(String path, String listAfter, String listBefore, int listSize, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.listStatus(String path, String listAfter, String listBefore, int listSize, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.listStatus(String path, String listAfter, String listBefore, int listSize, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.listStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 777
  package: com.microsoft.azure.datalake.store
  summary: "<p>enumerates the contents of a direcotry, returning a <xref uid=\"\" data-throw-if-not-resolved=\"false\">List</xref> of <xref uid=\"com.microsoft.azure.datalake.store._directory_entry\" data-throw-if-not-resolved=\"false\">DirectoryEntry</xref> objects, one per file or directory in the specified directory. </p>\r\n<p>To avoid overwhelming the client or the server, the call may return a partial list, in which case the caller should make the call again with the last entry from the returned list specified as the <code>listAfter \r\n    </code> parameter of the next call. </p>\r\n<p></p>"
  syntax: &o2
    content: public static List<DirectoryEntry> listStatus(String path, String listAfter, String listBefore, int listSize, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the directory to enumerate </p>
    - id: listAfter
      type: "26831127"
      description: <p>the filename after which to begin enumeration </p>
    - id: listBefore
      type: "26831127"
      description: <p>the filename before which to end the enumeration </p>
    - id: listSize
      type: f75371fa
      description: <p>the maximum number of entries in the returned list </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call</p>
    return:
      type: 5618da2dcom.microsoft.azure.datalake.store._directory_entrya08ddfce
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">List</xref>&lt;<xref uid="com.microsoft.azure.datalake.store._directory_entry" data-throw-if-not-resolved="false">DirectoryEntry</xref>&gt; containing the contents of the directory </p>
- uid: com.microsoft.azure.datalake.store._core.listStatus(String,String,String,int,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  id: listStatus(String,String,String,int,UserGroupRepresentation,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: listStatus(String path, String listAfter, String listBefore, int listSize, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.listStatus(String path, String listAfter, String listBefore, int listSize, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.listStatus(String path, String listAfter, String listBefore, int listSize, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.listStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 807
  package: com.microsoft.azure.datalake.store
  summary: "<p>enumerates the contents of a direcotry, returning a <xref uid=\"\" data-throw-if-not-resolved=\"false\">List</xref> of <xref uid=\"com.microsoft.azure.datalake.store._directory_entry\" data-throw-if-not-resolved=\"false\">DirectoryEntry</xref> objects, one per file or directory in the specified directory. </p>\r\n<p>To avoid overwhelming the client or the server, the call may return a partial list, in which case the caller should make the call again with the last entry from the returned list specified as the <code>listAfter \r\n    </code> parameter of the next call. </p>\r\n<p></p>"
  syntax:
    content: public static List<DirectoryEntry> listStatus(String path, String listAfter, String listBefore, int listSize, UserGroupRepresentation oidOrUpn, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the directory to enumerate </p>
    - id: listAfter
      type: "26831127"
      description: <p>the filename after which to begin enumeration </p>
    - id: listBefore
      type: "26831127"
      description: <p>the filename before which to end the enumeration </p>
    - id: listSize
      type: f75371fa
      description: <p>the maximum number of entries in the returned list </p>
    - id: oidOrUpn
      type: com.microsoft.azure.datalake.store._user_group_representation
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store._user_group_representation" data-throw-if-not-resolved="false">UserGroupRepresentation</xref> enum specifying whether to return user and group information as OID or UPN </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call</p>
    return:
      type: 5618da2dcom.microsoft.azure.datalake.store._directory_entrya08ddfce
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">List</xref>&lt;<xref uid="com.microsoft.azure.datalake.store._directory_entry" data-throw-if-not-resolved="false">DirectoryEntry</xref>&gt; containing the contents of the directory </p>
- uid: com.microsoft.azure.datalake.store._core.mkdirs(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  id: mkdirs(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: mkdirs(String path, String octalPermission, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.mkdirs(String path, String octalPermission, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.mkdirs(String path, String octalPermission, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.mkdirs*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 410
  package: com.microsoft.azure.datalake.store
  summary: "<p>creates a directory, and all it's parent directories if they dont exist.</p>\r\n<p></p>"
  syntax:
    content: public static boolean mkdirs(String path, String octalPermission, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the directory to create. Any missing parents in the path will also be created. </p>
    - id: octalPermission
      type: "26831127"
      description: >-
        <p>permissions for the directory, as octal digits (For Example,<code>"755" 

            </code> ). Can be null. </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call</p>
    return:
      type: 4fc6e284
      description: >-
        <p>returns<code>true 

            </code> if the create was successful. Also check<code>resp.successful 

            </code> . </p>
- uid: com.microsoft.azure.datalake.store._core.modifyAclEntries(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  id: modifyAclEntries(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: modifyAclEntries(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.modifyAclEntries(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.modifyAclEntries(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.modifyAclEntries*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1140
  package: com.microsoft.azure.datalake.store
  summary: "<p>Modify the acl entries for a file or directory. This call merges the supplied list with existing ACLs. If an entry with the same scope, type and user already exists, then the permissions are replaced. If not, than an new ACL entry if added.</p>\r\n<p></p>"
  syntax:
    content: public static void modifyAclEntries(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the path of the file or directory whose ACLs should be modified </p>
    - id: aclSpec
      type: 5618da2dcom.microsoft.azure.datalake.store.acl._acl_entrya08ddfce
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">List</xref> of <xref uid="" data-throw-if-not-resolved="false">AclEntry</xref>s, containing the entries to add or modify </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.modifyAclEntries(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  id: modifyAclEntries(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: modifyAclEntries(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.modifyAclEntries(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.modifyAclEntries(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.modifyAclEntries*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1111
  package: com.microsoft.azure.datalake.store
  summary: "<p>Modify the acl entries for a file or directory. This call merges the supplied list with existing ACLs. If an entry with the same scope, type and user already exists, then the permissions are replaced. If not, than an new ACL entry if added.</p>\r\n<p></p>"
  syntax:
    content: public static void modifyAclEntries(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the path of the file or directory whose ACLs should be modified </p>
    - id: aclSpec
      type: "26831127"
      description: <p>aclspec string containing the entries to add or modify </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.open(String,long,long,String,ADLStoreClient,RequestOptions,OperationResponse)
  id: open(String,long,long,String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: open(String path, long offset, long length, String sessionId, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.open(String path, long offset, long length, String sessionId, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.open(String path, long offset, long length, String sessionId, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.open*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 225
  package: com.microsoft.azure.datalake.store
  summary: "<p>read from a file. This is the stateless read method, that reads bytes from an offset in a file.</p>\r\n<p></p>"
  syntax:
    content: public static InputStream open(String path, long offset, long length, String sessionId, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file to read. The file must already exist. </p>
    - id: offset
      type: 0364520f
      description: <p>the offset within the ADL file to read from </p>
    - id: length
      type: 0364520f
      description: <p>the number of bytes to read from file </p>
    - id: sessionId
      type: "26831127"
      description: <p>a String containing the session ID (generated by client). Can be null. </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
    return:
      type: 76fcb9b7
      description: <p>returns an <xref uid="com.microsoft.azure.datalake.store._a_d_l_file_input_stream" data-throw-if-not-resolved="false">com.microsoft.azure.datalake.store.ADLFileInputStream</xref></p>
- uid: com.microsoft.azure.datalake.store._core.open(String,long,long,String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  id: open(String,long,long,String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: open(String path, long offset, long length, String sessionId, boolean speculativeRead, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.open(String path, long offset, long length, String sessionId, boolean speculativeRead, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.open(String path, long offset, long length, String sessionId, boolean speculativeRead, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.open*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 252
  package: com.microsoft.azure.datalake.store
  summary: "<p>read from a file. This is the stateless read method, that reads bytes from an offset in a file.</p>\r\n<p></p>"
  syntax:
    content: public static InputStream open(String path, long offset, long length, String sessionId, boolean speculativeRead, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file to read. The file must already exist. </p>
    - id: offset
      type: 0364520f
      description: <p>the offset within the ADL file to read from </p>
    - id: length
      type: 0364520f
      description: <p>the number of bytes to read from file </p>
    - id: sessionId
      type: "26831127"
      description: <p>a String containing the session ID (generated by client). Can be null. </p>
    - id: speculativeRead
      type: 4fc6e284
      description: <p>indicates if the read is speculative. Currently fails the read - so dont use. </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
    return:
      type: 76fcb9b7
      description: <p>returns an <xref uid="com.microsoft.azure.datalake.store._a_d_l_file_input_stream" data-throw-if-not-resolved="false">com.microsoft.azure.datalake.store.ADLFileInputStream</xref></p>
- uid: com.microsoft.azure.datalake.store._core.removeAcl(String,ADLStoreClient,RequestOptions,OperationResponse)
  id: removeAcl(String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: removeAcl(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.removeAcl(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.removeAcl(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.removeAcl*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1235
  package: com.microsoft.azure.datalake.store
  summary: "<p>removes all acl entries from a file or directory.</p>\r\n<p></p>"
  syntax:
    content: public static void removeAcl(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file or directory from which to remove ACLs </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.removeAclEntries(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  id: removeAclEntries(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: removeAclEntries(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.removeAclEntries(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.removeAclEntries(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.removeAclEntries*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1193
  package: com.microsoft.azure.datalake.store
  summary: "<p>Removes the specified ACL entries from a file or directory.</p>\r\n<p></p>"
  syntax:
    content: public static void removeAclEntries(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the fll path of the file or directory to remove ACLs from </p>
    - id: aclSpec
      type: 5618da2dcom.microsoft.azure.datalake.store.acl._acl_entrya08ddfce
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">List</xref> of <xref uid="" data-throw-if-not-resolved="false">AclEntry</xref>s to remove </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.removeAclEntries(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  id: removeAclEntries(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: removeAclEntries(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.removeAclEntries(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.removeAclEntries(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.removeAclEntries*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1166
  package: com.microsoft.azure.datalake.store
  summary: "<p>Removes the specified ACL entries from a file or directory.</p>\r\n<p></p>"
  syntax:
    content: public static void removeAclEntries(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the fll path of the file or directory to remove ACLs from </p>
    - id: aclSpec
      type: "26831127"
      description: <p>aclspec string containing entries to remove </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.removeDefaultAcl(String,ADLStoreClient,RequestOptions,OperationResponse)
  id: removeDefaultAcl(String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: removeDefaultAcl(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.removeDefaultAcl(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.removeDefaultAcl(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.removeDefaultAcl*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1219
  package: com.microsoft.azure.datalake.store
  summary: "<p>removes all default acl entries from a directory. The access ACLs for the directory itself are not modified.</p>\r\n<p></p>"
  syntax:
    content: public static void removeDefaultAcl(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the directory from which to remove default ACLs </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.rename(String,String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  id: rename(String,String,boolean,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: rename(String path, String destination, boolean overwrite, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.rename(String path, String destination, boolean overwrite, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.rename(String path, String destination, boolean overwrite, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.rename*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 348
  package: com.microsoft.azure.datalake.store
  summary: "<p>rename a file.</p>\r\n<p></p>"
  syntax:
    content: public static boolean rename(String path, String destination, boolean overwrite, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the existing file to rename. (the old name) </p>
    - id: destination
      type: "26831127"
      description: <p>the new name of the file </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>overwrite the destination if it already exists and is a file or an empty directory </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call</p>
    return:
      type: 4fc6e284
      description: >-
        <p>returns<code>true 

            </code> if the rename was successful. Also check<code>resp.successful 

            </code> . </p>
- uid: com.microsoft.azure.datalake.store._core.setAcl(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  id: setAcl(String,List<AclEntry>,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: setAcl(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.setAcl(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.setAcl(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.setAcl*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1282
  package: com.microsoft.azure.datalake.store
  summary: "<p>Sets the ACLs for a file or directory. If the file or directory already has any ACLs associated with it, then all the existing ACLs are removed before adding the specified ACLs.</p>\r\n<p></p>"
  syntax:
    content: public static void setAcl(String path, List<AclEntry> aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path to the file or directory to set ACLs for. </p>
    - id: aclSpec
      type: 5618da2dcom.microsoft.azure.datalake.store.acl._acl_entrya08ddfce
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">List</xref> of <xref uid="" data-throw-if-not-resolved="false">AclEntry</xref>s to set </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.setAcl(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  id: setAcl(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: setAcl(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.setAcl(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.setAcl(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.setAcl*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1254
  package: com.microsoft.azure.datalake.store
  summary: "<p>Sets the ACLs for a file or directory. If the file or directory already has any ACLs associated with it, then all the existing ACLs are removed before adding the specified ACLs.</p>\r\n<p></p>"
  syntax:
    content: public static void setAcl(String path, String aclSpec, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path to the file or directory to set ACLs for. </p>
    - id: aclSpec
      type: "26831127"
      description: <p>posix aclspec string containing the ACLs to set </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.setExpiryTime(String,ExpiryOption,long,ADLStoreClient,RequestOptions,OperationResponse)
  id: setExpiryTime(String,ExpiryOption,long,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: setExpiryTime(String path, ExpiryOption expiryOption, long milliseconds, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.setExpiryTime(String path, ExpiryOption expiryOption, long milliseconds, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.setExpiryTime(String path, ExpiryOption expiryOption, long milliseconds, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.setExpiryTime*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 464
  package: com.microsoft.azure.datalake.store
  summary: "<p>Sets the expiry time on a file.</p>\r\n<p></p>"
  syntax:
    content: public static void setExpiryTime(String path, ExpiryOption expiryOption, long milliseconds, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>path of the file to set expiry on </p>
    - id: expiryOption
      type: com.microsoft.azure.datalake.store._expiry_option
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store._expiry_option" data-throw-if-not-resolved="false">ExpiryOption</xref> value specifying how to interpret the passed in time </p>
    - id: milliseconds
      type: 0364520f
      description: <p>time duration in milliseconds </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.setOwner(String,String,String,ADLStoreClient,RequestOptions,OperationResponse)
  id: setOwner(String,String,String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: setOwner(String path, String user, String group, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.setOwner(String path, String user, String group, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.setOwner(String path, String user, String group, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.setOwner*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 997
  package: com.microsoft.azure.datalake.store
  summary: "<p>sets the owning user and group of the file. If the user or group are<code>null \r\n    </code> , then they are not changed. It is illegal to pass both user and owner as<code>null \r\n    </code> .</p>\r\n<p></p>"
  syntax:
    content: public static void setOwner(String path, String user, String group, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file </p>
    - id: user
      type: "26831127"
      description: >-
        <p>the ID of the user, or<code>null 

            </code></p>
    - id: group
      type: "26831127"
      description: >-
        <p>the ID of the group, or<code>null 

            </code></p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.setPermission(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  id: setPermission(String,String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: setPermission(String path, String octalPermissions, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.setPermission(String path, String octalPermissions, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.setPermission(String path, String octalPermissions, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.setPermission*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 1036
  package: com.microsoft.azure.datalake.store
  summary: "<p>Sets the permissions of the specified file ro directory. This sets the traditional unix read/write/execute permissions for the file/directory. To set Acl's use the <xref uid=\"\" data-throw-if-not-resolved=\"false\">setAcl</xref> call.</p>\r\n<p></p>"
  syntax:
    content: public static void setPermission(String path, String octalPermissions, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: <p>the full path of the file or directory ro set permissions for </p>
    - id: octalPermissions
      type: "26831127"
      description: <p>the permissions to set, in unix octal form. For example, '644'. </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
- uid: com.microsoft.azure.datalake.store._core.setTimes(String,long,long,ADLStoreClient,RequestOptions,OperationResponse)
  id: setTimes(String,long,long,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  langs:
  - java
  name: setTimes(String path, long atime, long mtime, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.setTimes(String path, long atime, long mtime, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.setTimes(String path, long atime, long mtime, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  overload: com.microsoft.azure.datalake.store._core.setTimes*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/Core.java
    startLine: 957
  package: com.microsoft.azure.datalake.store
  summary: "<p>sets one or both of the times (Modified and Access time) of the file or directory</p>\r\n<p></p>"
  syntax:
    content: public static void setTimes(String path, long atime, long mtime, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
    parameters:
    - id: path
      type: "26831127"
      description: >-
        <p>the full path of the file or directory to<code>touch 

            </code></p>
    - id: atime
      type: 0364520f
      description: <p>Access time as a long </p>
    - id: mtime
      type: 0364520f
      description: <p>Modified time as a long </p>
    - id: client
      type: com.microsoft.azure.datalake.store._a_d_l_store_client
      description: <p>the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false">ADLStoreClient</xref></p>
    - id: opts
      type: com.microsoft.azure.datalake.store._request_options
      description: <p>options to change the behavior of the call </p>
    - id: resp
      type: com.microsoft.azure.datalake.store._operation_response
      description: <p>response from the call, and any error info generated by the call </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.datalake.store._core.create*
  name: create
  nameWithType: Core.create
  fullName: com.microsoft.azure.datalake.store.Core.create
  package: com.microsoft.azure.datalake.store
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.datalake.store._core.append*
  name: append
  nameWithType: Core.append
  fullName: com.microsoft.azure.datalake.store.Core.append
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.concurrentAppend*
  name: concurrentAppend
  nameWithType: Core.concurrentAppend
  fullName: com.microsoft.azure.datalake.store.Core.concurrentAppend
  package: com.microsoft.azure.datalake.store
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: com.microsoft.azure.datalake.store._core.open*
  name: open
  nameWithType: Core.open
  fullName: com.microsoft.azure.datalake.store.Core.open
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.delete*
  name: delete
  nameWithType: Core.delete
  fullName: com.microsoft.azure.datalake.store.Core.delete
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.rename*
  name: rename
  nameWithType: Core.rename
  fullName: com.microsoft.azure.datalake.store.Core.rename
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.mkdirs*
  name: mkdirs
  nameWithType: Core.mkdirs
  fullName: com.microsoft.azure.datalake.store.Core.mkdirs
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.setExpiryTime*
  name: setExpiryTime
  nameWithType: Core.setExpiryTime
  fullName: com.microsoft.azure.datalake.store.Core.setExpiryTime
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.getContentSummary*
  name: getContentSummary
  nameWithType: Core.getContentSummary
  fullName: com.microsoft.azure.datalake.store.Core.getContentSummary
  package: com.microsoft.azure.datalake.store
- uid: 7d60c20e
  spec.java:
  - name: List<String>
    fullName: List<String>
- uid: com.microsoft.azure.datalake.store._core.concat*
  name: concat
  nameWithType: Core.concat
  fullName: com.microsoft.azure.datalake.store.Core.concat
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.getFileStatus*
  name: getFileStatus
  nameWithType: Core.getFileStatus
  fullName: com.microsoft.azure.datalake.store.Core.getFileStatus
  package: com.microsoft.azure.datalake.store
- uid: 5618da2dcom.microsoft.azure.datalake.store._directory_entrya08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.datalake.store._directory_entry
    name: DirectoryEntry
    fullName: com.microsoft.azure.datalake.store.DirectoryEntry
    href: com.microsoft.azure.datalake.store._directory_entry.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.datalake.store._core.listStatus*
  name: listStatus
  nameWithType: Core.listStatus
  fullName: com.microsoft.azure.datalake.store.Core.listStatus
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.setTimes*
  name: setTimes
  nameWithType: Core.setTimes
  fullName: com.microsoft.azure.datalake.store.Core.setTimes
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.setOwner*
  name: setOwner
  nameWithType: Core.setOwner
  fullName: com.microsoft.azure.datalake.store.Core.setOwner
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.setPermission*
  name: setPermission
  nameWithType: Core.setPermission
  fullName: com.microsoft.azure.datalake.store.Core.setPermission
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.isValidOctal*
  name: isValidOctal
  nameWithType: Core.isValidOctal
  fullName: com.microsoft.azure.datalake.store.Core.isValidOctal
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.checkAccess*
  name: checkAccess
  nameWithType: Core.checkAccess
  fullName: com.microsoft.azure.datalake.store.Core.checkAccess
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.modifyAclEntries*
  name: modifyAclEntries
  nameWithType: Core.modifyAclEntries
  fullName: com.microsoft.azure.datalake.store.Core.modifyAclEntries
  package: com.microsoft.azure.datalake.store
- uid: 5618da2dcom.microsoft.azure.datalake.store.acl._acl_entrya08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.datalake.store.acl._acl_entry
    name: AclEntry
    fullName: com.microsoft.azure.datalake.store.acl.AclEntry
    href: com.microsoft.azure.datalake.store.acl._acl_entry.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.datalake.store._core.removeAclEntries*
  name: removeAclEntries
  nameWithType: Core.removeAclEntries
  fullName: com.microsoft.azure.datalake.store.Core.removeAclEntries
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.removeDefaultAcl*
  name: removeDefaultAcl
  nameWithType: Core.removeDefaultAcl
  fullName: com.microsoft.azure.datalake.store.Core.removeDefaultAcl
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.removeAcl*
  name: removeAcl
  nameWithType: Core.removeAcl
  fullName: com.microsoft.azure.datalake.store.Core.removeAcl
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.setAcl*
  name: setAcl
  nameWithType: Core.setAcl
  fullName: com.microsoft.azure.datalake.store.Core.setAcl
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._core.getAclStatus*
  name: getAclStatus
  nameWithType: Core.getAclStatus
  fullName: com.microsoft.azure.datalake.store.Core.getAclStatus
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._sync_flag
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._sync_flag.yml
  name: SyncFlag
  nameWithType: SyncFlag
  fullName: com.microsoft.azure.datalake.store.SyncFlag
  type: Enum
  summary: <p>Indicator flags to backend during append. </p>
  syntax:
    content: public enum SyncFlag
- uid: com.microsoft.azure.datalake.store._a_d_l_store_client
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_store_client.yml
  name: ADLStoreClient
  nameWithType: ADLStoreClient
  fullName: com.microsoft.azure.datalake.store.ADLStoreClient
  type: Class
  summary: >-
    <p>

      <code>ADLStoreClient 

        </code> class represents a client to Azure Data Lake. It can be used to perform operations on files and directories. </p>
  syntax:
    content: public class ADLStoreClient
- uid: com.microsoft.azure.datalake.store._request_options
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._request_options.yml
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.microsoft.azure.datalake.store.RequestOptions
  type: Class
  summary: <p>common options to control the behavior of server calls </p>
  syntax:
    content: public class RequestOptions
- uid: com.microsoft.azure.datalake.store._operation_response
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._operation_response.yml
  name: OperationResponse
  nameWithType: OperationResponse
  fullName: com.microsoft.azure.datalake.store.OperationResponse
  type: Class
  summary: >-
    <p>information about a response from a server call.</p>

    <p>This class is a container for all the information from making a server call. </p>
  syntax:
    content: public class OperationResponse
- uid: com.microsoft.azure.datalake.store._sync_flag.DATA
  parent: com.microsoft.azure.datalake.store._sync_flag
  href: com.microsoft.azure.datalake.store._sync_flag.yml
  name: DATA
  nameWithType: SyncFlag.DATA
  fullName: com.microsoft.azure.datalake.store.SyncFlag.DATA
  type: Field
  summary: <p>No update is required, and hold lease. - Performant operation. </p>
  syntax:
    content: public DATA
- uid: com.microsoft.azure.datalake.store._sync_flag.METADATA
  parent: com.microsoft.azure.datalake.store._sync_flag
  href: com.microsoft.azure.datalake.store._sync_flag.yml
  name: METADATA
  nameWithType: SyncFlag.METADATA
  fullName: com.microsoft.azure.datalake.store.SyncFlag.METADATA
  type: Field
  summary: <p>Update metdata of the file after the given data is appended to file. </p>
  syntax:
    content: public METADATA
- uid: com.microsoft.azure.datalake.store._core.getFileStatus(String,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  name: getFileStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.getFileStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.getFileStatus(String path, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  type: Method
  summary: >-
    <p>Gets the directory metadata associated with a file or directory.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.datalake.store._core.listStatus(String,String,String,int,ADLStoreClient,RequestOptions,OperationResponse)
  parent: com.microsoft.azure.datalake.store._core
  href: com.microsoft.azure.datalake.store._core.yml
  name: listStatus(String path, String listAfter, String listBefore, int listSize, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  nameWithType: Core.listStatus(String path, String listAfter, String listBefore, int listSize, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  fullName: com.microsoft.azure.datalake.store.Core.listStatus(String path, String listAfter, String listBefore, int listSize, ADLStoreClient client, RequestOptions opts, OperationResponse resp)
  type: Method
  summary: >-
    <p>enumerates the contents of a direcotry, returning a <xref uid="" data-throw-if-not-resolved="false">List</xref> of <xref uid="com.microsoft.azure.datalake.store._directory_entry" data-throw-if-not-resolved="false">DirectoryEntry</xref> objects, one per file or directory in the specified directory. </p>

    <p>To avoid overwhelming the client or the server, the call may return a partial list, in which case the caller should make the call again with the last entry from the returned list specified as the <code>listAfter 

        </code> parameter of the next call. </p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.datalake.store._sync_flag.CLOSE
  parent: com.microsoft.azure.datalake.store._sync_flag
  href: com.microsoft.azure.datalake.store._sync_flag.yml
  name: CLOSE
  nameWithType: SyncFlag.CLOSE
  fullName: com.microsoft.azure.datalake.store.SyncFlag.CLOSE
  type: Field
  summary: <p>Update metdata of the file after the given data is appended to file. And close file handle. Once the file handle is closed, lease on the file is released if the stream is opened with leaseid. </p>
  syntax:
    content: public CLOSE
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  name: ADLFileInputStream
  nameWithType: ADLFileInputStream
  fullName: com.microsoft.azure.datalake.store.ADLFileInputStream
  type: Class
  summary: >-
    <p>ADLFileInputStream can be used to read data from an open file on ADL. It is a buffering stream, that reads data from the server in bulk, and then satisfies user reads from the buffer. Default buffer size is 4MB.</p>

    <p>

      <b>Thread-safety</b>: Note that methods in this class are NOT thread-safe. </p>
  syntax:
    content: public class ADLFileInputStream
- uid: com.microsoft.azure.datalake.store._expiry_option
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._expiry_option.yml
  name: ExpiryOption
  nameWithType: ExpiryOption
  fullName: com.microsoft.azure.datalake.store.ExpiryOption
  type: Enum
  summary: <p>Enum specifying how to interpret the expiry time specified in setExpiry call. </p>
  syntax:
    content: public enum ExpiryOption
- uid: com.microsoft.azure.datalake.store._content_summary
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._content_summary.yml
  name: ContentSummary
  nameWithType: ContentSummary
  fullName: com.microsoft.azure.datalake.store.ContentSummary
  type: Class
  summary: <p>structure that contains the return values from getContentSummary call. </p>
  syntax:
    content: public class ContentSummary
- uid: com.microsoft.azure.datalake.store._directory_entry
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._directory_entry.yml
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: com.microsoft.azure.datalake.store.DirectoryEntry
  type: Class
  summary: <p>filesystem metadata of a directory enrty (a file or a directory) in ADL. </p>
  syntax:
    content: public class DirectoryEntry
- uid: com.microsoft.azure.datalake.store._user_group_representation
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._user_group_representation.yml
  name: UserGroupRepresentation
  nameWithType: UserGroupRepresentation
  fullName: com.microsoft.azure.datalake.store.UserGroupRepresentation
  type: Enum
  summary: <p>Enum specifying how user and group objects should be represented in calls that return user and group ID. </p>
  syntax:
    content: public enum UserGroupRepresentation
- uid: com.microsoft.azure.datalake.store.acl._acl_entry
  parent: com.microsoft.azure.datalake.store.acl
  href: com.microsoft.azure.datalake.store.acl._acl_entry.yml
  name: AclEntry
  nameWithType: AclEntry
  fullName: com.microsoft.azure.datalake.store.acl.AclEntry
  type: Class
  summary: >-
    <p>Contains one ACL entry. An ACL entry consists of a scope (access or default), the type of the ACL (user, group, other or mask), the name of the user or group associated with this ACL (can be blank to specify the default permissions for users and groups, and must be blank for mask entries), and the action permitted by this ACL entry. </p>

    <p>An ACL for an object consists of a<code>List 

        </code> of Acl entries. </p>

    <p>This class also provides a number of convenience methods for converting ACL entries and ACLs to and back from strings. </p>
  syntax:
    content: public class AclEntry
- uid: com.microsoft.azure.datalake.store.acl._acl_status
  parent: com.microsoft.azure.datalake.store.acl
  href: com.microsoft.azure.datalake.store.acl._acl_status.yml
  name: AclStatus
  nameWithType: AclStatus
  fullName: com.microsoft.azure.datalake.store.acl.AclStatus
  type: Class
  summary: <p>Object returned by the <xref uid="com.microsoft.azure.datalake.store._a_d_l_store_client.getAclStatus(String)" data-throw-if-not-resolved="false">com.microsoft.azure.datalake.store.ADLStoreClient#getAclStatus(String)</xref> getAclStatus} call, that contains the Acl and Permission information for that file or directory. </p>
  syntax:
    content: public class AclStatus
