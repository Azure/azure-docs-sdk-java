### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  id: "EventSubscriptionInner"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  children:
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.EventSubscriptionInner()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.deadLetterDestination()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.destination()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.expirationTimeUtc()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.filter()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.labels()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.provisioningState()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.retryPolicy()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.topic()"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDeadLetterDestination(com.microsoft.azure.management.eventgrid.v2019_06_01.DeadLetterDestination)"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDestination(com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionDestination)"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withExpirationTimeUtc(org.joda.time.DateTime)"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withFilter(com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionFilter)"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withLabels(java.util.List<java.lang.String>)"
  - "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withRetryPolicy(com.microsoft.azure.management.eventgrid.v2019_06_01.RetryPolicy)"
  langs:
  - "java"
  name: "EventSubscriptionInner"
  nameWithType: "EventSubscriptionInner"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  type: "Class"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Event Subscription."
  syntax:
    content: "public class EventSubscriptionInner extends ProxyResource"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.ProxyResource"
  inheritedMembers:
  - "com.microsoft.azure.ProxyResource.id()"
  - "com.microsoft.azure.ProxyResource.name()"
  - "com.microsoft.azure.ProxyResource.type()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.EventSubscriptionInner()"
  id: "EventSubscriptionInner()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "EventSubscriptionInner()"
  nameWithType: "EventSubscriptionInner.EventSubscriptionInner()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.EventSubscriptionInner()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.EventSubscriptionInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  syntax:
    content: "public EventSubscriptionInner()"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.deadLetterDestination()"
  id: "deadLetterDestination()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "deadLetterDestination()"
  nameWithType: "EventSubscriptionInner.deadLetterDestination()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.deadLetterDestination()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.deadLetterDestination*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Get the DeadLetter destination of the event subscription."
  syntax:
    content: "public DeadLetterDestination deadLetterDestination()"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.DeadLetterDestination"
      description: "the deadLetterDestination value"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.destination()"
  id: "destination()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "destination()"
  nameWithType: "EventSubscriptionInner.destination()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.destination()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.destination*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Get information about the destination where events have to be delivered for the event subscription."
  syntax:
    content: "public EventSubscriptionDestination destination()"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionDestination"
      description: "the destination value"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.expirationTimeUtc()"
  id: "expirationTimeUtc()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "expirationTimeUtc()"
  nameWithType: "EventSubscriptionInner.expirationTimeUtc()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.expirationTimeUtc()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.expirationTimeUtc*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Get expiration time of the event subscription."
  syntax:
    content: "public DateTime expirationTimeUtc()"
    return:
      type: "org.joda.time.DateTime"
      description: "the expirationTimeUtc value"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.filter()"
  id: "filter()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "filter()"
  nameWithType: "EventSubscriptionInner.filter()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.filter()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.filter*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Get information about the filter for the event subscription."
  syntax:
    content: "public EventSubscriptionFilter filter()"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionFilter"
      description: "the filter value"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.labels()"
  id: "labels()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "labels()"
  nameWithType: "EventSubscriptionInner.labels()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.labels()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.labels*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Get list of user defined labels."
  syntax:
    content: "public List<String> labels()"
    return:
      type: "java.util.List<java.lang.String>"
      description: "the labels value"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.provisioningState()"
  id: "provisioningState()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "provisioningState()"
  nameWithType: "EventSubscriptionInner.provisioningState()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.provisioningState()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.provisioningState*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Get provisioning state of the event subscription. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed', 'AwaitingManualAction'."
  syntax:
    content: "public EventSubscriptionProvisioningState provisioningState()"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionProvisioningState"
      description: "the provisioningState value"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.retryPolicy()"
  id: "retryPolicy()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "retryPolicy()"
  nameWithType: "EventSubscriptionInner.retryPolicy()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.retryPolicy()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.retryPolicy*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Get the retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events."
  syntax:
    content: "public RetryPolicy retryPolicy()"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.RetryPolicy"
      description: "the retryPolicy value"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.topic()"
  id: "topic()"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "topic()"
  nameWithType: "EventSubscriptionInner.topic()"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.topic()"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.topic*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Get name of the topic of the event subscription."
  syntax:
    content: "public String topic()"
    return:
      type: "java.lang.String"
      description: "the topic value"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDeadLetterDestination(com.microsoft.azure.management.eventgrid.v2019_06_01.DeadLetterDestination)"
  id: "withDeadLetterDestination(com.microsoft.azure.management.eventgrid.v2019_06_01.DeadLetterDestination)"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "withDeadLetterDestination(DeadLetterDestination deadLetterDestination)"
  nameWithType: "EventSubscriptionInner.withDeadLetterDestination(DeadLetterDestination deadLetterDestination)"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDeadLetterDestination(DeadLetterDestination deadLetterDestination)"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDeadLetterDestination*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Set the DeadLetter destination of the event subscription."
  syntax:
    content: "public EventSubscriptionInner withDeadLetterDestination(DeadLetterDestination deadLetterDestination)"
    parameters:
    - id: "deadLetterDestination"
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.DeadLetterDestination"
      description: "the deadLetterDestination value to set"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
      description: "the EventSubscriptionInner object itself."
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDestination(com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionDestination)"
  id: "withDestination(com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionDestination)"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "withDestination(EventSubscriptionDestination destination)"
  nameWithType: "EventSubscriptionInner.withDestination(EventSubscriptionDestination destination)"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDestination(EventSubscriptionDestination destination)"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDestination*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Set information about the destination where events have to be delivered for the event subscription."
  syntax:
    content: "public EventSubscriptionInner withDestination(EventSubscriptionDestination destination)"
    parameters:
    - id: "destination"
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionDestination"
      description: "the destination value to set"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
      description: "the EventSubscriptionInner object itself."
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withExpirationTimeUtc(org.joda.time.DateTime)"
  id: "withExpirationTimeUtc(org.joda.time.DateTime)"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "withExpirationTimeUtc(DateTime expirationTimeUtc)"
  nameWithType: "EventSubscriptionInner.withExpirationTimeUtc(DateTime expirationTimeUtc)"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withExpirationTimeUtc(DateTime expirationTimeUtc)"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withExpirationTimeUtc*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Set expiration time of the event subscription."
  syntax:
    content: "public EventSubscriptionInner withExpirationTimeUtc(DateTime expirationTimeUtc)"
    parameters:
    - id: "expirationTimeUtc"
      type: "org.joda.time.DateTime"
      description: "the expirationTimeUtc value to set"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
      description: "the EventSubscriptionInner object itself."
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withFilter(com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionFilter)"
  id: "withFilter(com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionFilter)"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "withFilter(EventSubscriptionFilter filter)"
  nameWithType: "EventSubscriptionInner.withFilter(EventSubscriptionFilter filter)"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withFilter(EventSubscriptionFilter filter)"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withFilter*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Set information about the filter for the event subscription."
  syntax:
    content: "public EventSubscriptionInner withFilter(EventSubscriptionFilter filter)"
    parameters:
    - id: "filter"
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionFilter"
      description: "the filter value to set"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
      description: "the EventSubscriptionInner object itself."
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withLabels(java.util.List<java.lang.String>)"
  id: "withLabels(java.util.List<java.lang.String>)"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "withLabels(List<String> labels)"
  nameWithType: "EventSubscriptionInner.withLabels(List<String> labels)"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withLabels(List<String> labels)"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withLabels*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Set list of user defined labels."
  syntax:
    content: "public EventSubscriptionInner withLabels(List<String> labels)"
    parameters:
    - id: "labels"
      type: "java.util.List<java.lang.String>"
      description: "the labels value to set"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
      description: "the EventSubscriptionInner object itself."
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withRetryPolicy(com.microsoft.azure.management.eventgrid.v2019_06_01.RetryPolicy)"
  id: "withRetryPolicy(com.microsoft.azure.management.eventgrid.v2019_06_01.RetryPolicy)"
  parent: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
  langs:
  - "java"
  name: "withRetryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "EventSubscriptionInner.withRetryPolicy(RetryPolicy retryPolicy)"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withRetryPolicy(RetryPolicy retryPolicy)"
  overload: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withRetryPolicy*"
  type: "Method"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
  summary: "Set the retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events."
  syntax:
    content: "public EventSubscriptionInner withRetryPolicy(RetryPolicy retryPolicy)"
    parameters:
    - id: "retryPolicy"
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.RetryPolicy"
      description: "the retryPolicy value to set"
    return:
      type: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner"
      description: "the EventSubscriptionInner object itself."
references:
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.EventSubscriptionInner*"
  name: "EventSubscriptionInner"
  nameWithType: "EventSubscriptionInner.EventSubscriptionInner"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.EventSubscriptionInner"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.topic*"
  name: "topic"
  nameWithType: "EventSubscriptionInner.topic"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.topic"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionProvisioningState"
  name: "EventSubscriptionProvisioningState"
  nameWithType: "EventSubscriptionProvisioningState"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionProvisioningState"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.provisioningState*"
  name: "provisioningState"
  nameWithType: "EventSubscriptionInner.provisioningState"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.provisioningState"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionDestination"
  name: "EventSubscriptionDestination"
  nameWithType: "EventSubscriptionDestination"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionDestination"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.destination*"
  name: "destination"
  nameWithType: "EventSubscriptionInner.destination"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.destination"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDestination*"
  name: "withDestination"
  nameWithType: "EventSubscriptionInner.withDestination"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDestination"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionFilter"
  name: "EventSubscriptionFilter"
  nameWithType: "EventSubscriptionFilter"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.EventSubscriptionFilter"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.filter*"
  name: "filter"
  nameWithType: "EventSubscriptionInner.filter"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.filter"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withFilter*"
  name: "withFilter"
  nameWithType: "EventSubscriptionInner.withFilter"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withFilter"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.labels*"
  name: "labels"
  nameWithType: "EventSubscriptionInner.labels"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.labels"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withLabels*"
  name: "withLabels"
  nameWithType: "EventSubscriptionInner.withLabels"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withLabels"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "org.joda.time.DateTime"
  spec.java:
  - uid: "org.joda.time.DateTime"
    name: "DateTime"
    fullName: "org.joda.time.DateTime"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.expirationTimeUtc*"
  name: "expirationTimeUtc"
  nameWithType: "EventSubscriptionInner.expirationTimeUtc"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.expirationTimeUtc"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withExpirationTimeUtc*"
  name: "withExpirationTimeUtc"
  nameWithType: "EventSubscriptionInner.withExpirationTimeUtc"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withExpirationTimeUtc"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.RetryPolicy"
  name: "RetryPolicy"
  nameWithType: "RetryPolicy"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.RetryPolicy"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.retryPolicy*"
  name: "retryPolicy"
  nameWithType: "EventSubscriptionInner.retryPolicy"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.retryPolicy"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withRetryPolicy*"
  name: "withRetryPolicy"
  nameWithType: "EventSubscriptionInner.withRetryPolicy"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withRetryPolicy"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.DeadLetterDestination"
  name: "DeadLetterDestination"
  nameWithType: "DeadLetterDestination"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.DeadLetterDestination"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.deadLetterDestination*"
  name: "deadLetterDestination"
  nameWithType: "EventSubscriptionInner.deadLetterDestination"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.deadLetterDestination"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDeadLetterDestination*"
  name: "withDeadLetterDestination"
  nameWithType: "EventSubscriptionInner.withDeadLetterDestination"
  fullName: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation.EventSubscriptionInner.withDeadLetterDestination"
  package: "com.microsoft.azure.management.eventgrid.v2019_06_01.implementation"
- uid: "com.microsoft.azure.ProxyResource"
  name: "ProxyResource"
  nameWithType: "ProxyResource"
  fullName: "com.microsoft.azure.ProxyResource"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.ProxyResource.type()"
  name: "ProxyResource.type()"
  nameWithType: "ProxyResource.type()"
  fullName: "com.microsoft.azure.ProxyResource.type()"
- uid: "com.microsoft.azure.ProxyResource.name()"
  name: "ProxyResource.name()"
  nameWithType: "ProxyResource.name()"
  fullName: "com.microsoft.azure.ProxyResource.name()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.microsoft.azure.ProxyResource.id()"
  name: "ProxyResource.id()"
  nameWithType: "ProxyResource.id()"
  fullName: "com.microsoft.azure.ProxyResource.id()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
