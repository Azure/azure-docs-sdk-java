### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client.PublicClientApplication
  id: PublicClientApplication
  parent: com.microsoft.identity.client
  children:
  - com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  - com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  - com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode(@Nullable String [],@NonNull final DeviceCodeFlowCallback)
  - com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters(@NonNull final String [],@NonNull final IAccount,@NonNull final String,final boolean,@Nullable final ClaimsRequest,@NonNull final SilentAuthenticationCallback)
  - com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,@NonNull final File,@NonNull final ApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,@NonNull final String,@Nullable final String,@NonNull final String,@NonNull final ApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,final int)
  - com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,final int,@NonNull final ApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File)
  - com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final IMultipleAccountApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final int)
  - com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final IMultipleAccountApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,@Nullable final File)
  - com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,final int)
  - com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final ISingleAccountApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final ISingleAccountApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.getCommandCallback(@NonNull final SilentAuthenticationCallback,@NonNull final TokenParameters)
  - com.microsoft.identity.client.PublicClientApplication.getConfiguration()
  - com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken(@NonNull final String)
  - com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken(@NonNull final String)
  - com.microsoft.identity.client.PublicClientApplication.getSdkVersion()
  - com.microsoft.identity.client.PublicClientApplication.homeAccountMatcher
  - com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  - com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
  - com.microsoft.identity.client.PublicClientApplication.mPublicClientConfiguration
  - com.microsoft.identity.client.PublicClientApplication.mTokenShareUtility
  - com.microsoft.identity.client.PublicClientApplication.postAuthResult(@NonNull final ILocalAuthenticationResult,@NonNull final TokenParameters,@NonNull final SilentAuthenticationCallback)
  - com.microsoft.identity.client.PublicClientApplication.PublicClientApplication(@NonNull final PublicClientApplicationConfiguration)
  - com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken(@NonNull final String)
  - com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken(@NonNull final String)
  - com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo(Activity)
  - com.microsoft.identity.client.PublicClientApplication.usernameMatcher
  - com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters(AcquireTokenParameters)
  - com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters(AcquireTokenSilentParameters)
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: PublicClientApplication
  nameWithType: PublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication
  type: Class
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 191
  package: com.microsoft.identity.client
  summary: "<p>This is the entry point for developer to create public native applications and make API calls to acquire tokens. </p>\r\n<p>\r\n  <b>Client ID:</b> The clientID of your application is a unique identifier which can be obtained from the app registration portal.</p>\r\n<p>\r\n  <b>AuthorityMetadata:</b> A URL indicating a directory that MSAL can use to obtain tokens. In Azure AD it is of the form <a href=\"https://\">https://</a>&lt;[nstance]/[tenant], where [instance] is the directory host (e.g. <a href=\"https://login.microsoftonline.com\">https://login.microsoftonline.com</a>) and [tenant] is an identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory) </p>\r\n<p>For B2C, it is of the form <a href=\"https://\">https://</a>[instance]/tfp/[tenant]/[policy] where instance and tenant are same as Azure AD, and [policy] is a string like signup</p>\r\n<p>MSAL <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> provides three constructors allowing the client id to be set either via AndroidManifest.xml metadata or using constructor parameters. Similarly, if developer chooses not to use the default authority <a href=\"https://login.microsoftonline.com,\">https://login.microsoftonline.com,</a> an alternate can also be configured using the manifest, constructor parameters, or in acquire token calls. </p>\r\n<p>Redirect is auto-generated in the library in the format of msal&lt;client-id&gt;://auth, and it cannot be overridden. </p>\r\n<p>Developer <b>MUST</b> have <xref uid=\"com.microsoft.identity.client.BrowserTabActivity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BrowserTabActivity\"></xref> declared in their manifest, which must have the correct intent-filter configured. If the wrong scheme and host is provided, the sdk will fail the <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> creation. </p>\r\n<p>Expected format will be: <pre>\r\n&lt;activity\r\n    android:name=\"com.microsoft.identity.client.BrowserTabActivity\"&gt;\r\n    &lt;intent-filter&gt;\r\n        &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\r\n        &lt;data android:scheme=\"msal&amp;lt;AppClientId&amp;gt;\"\r\n             android:host=\"auth\" /&gt;\r\n    &lt;/intent-filter&gt;\r\n&lt;/activity&gt;\r\n</pre></p>\r\n<p>Other Terminology:</p>\r\n<p>\r\n  <b>Scopes:</b>Permissions that the developers wants included in the access token received . Not all scopes are guaranteed to be included in the access token returned. </p>\r\n<p>\r\n  <b>Login Hint:</b> Usually an email, to pass to the service at the beginning of the interactive authentication flow. </p>\r\n<p>\r\n  <b>Extra Scopes to Consent:</b> Permissions you want the user to consent to in the same authentication flow, but won't be included in the returned access token. </p>"
  syntax: &o1
    content: public class PublicClientApplication implements IPublicClientApplication,ITokenShare
  inheritance:
  - java.lang.Object
  - com.microsoft.identity.client.IPublicClientApplication
  inheritedMembers:
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  - com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String)
  - com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String)
  - com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String)
  - com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String)
- uid: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  id: acquireToken(@NonNull final AcquireTokenParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  overload: com.microsoft.identity.client.PublicClientApplication.acquireToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1334
  package: com.microsoft.identity.client
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>. </p>\r\n<p>Convey parameters via the AquireTokenParameters object</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
    parameters:
    - id: acquireTokenParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenParameters
  overridden: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
- uid: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  id: acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: PublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  overload: com.microsoft.identity.client.PublicClientApplication.acquireToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1252
  package: com.microsoft.identity.client
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
  overridden: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  id: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: PublicClientApplication.acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  overload: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1606
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
  overridden: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  id: acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  overload: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1418
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
  overridden: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode(@Nullable String [],@NonNull final DeviceCodeFlowCallback)
  id: acquireTokenWithDeviceCode(@Nullable String [],@NonNull final DeviceCodeFlowCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: acquireTokenWithDeviceCode(@Nullable String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  nameWithType: PublicClientApplication.acquireTokenWithDeviceCode(@Nullable String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode(@Nullable String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  overload: com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1655
  package: com.microsoft.identity.client
  syntax:
    content: public void acquireTokenWithDeviceCode(@Nullable String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
    parameters:
    - id: scopes
      type: b1a67a9d
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
- uid: com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters(@NonNull final String [],@NonNull final IAccount,@NonNull final String,final boolean,@Nullable final ClaimsRequest,@NonNull final SilentAuthenticationCallback)
  id: buildAcquireTokenSilentParameters(@NonNull final String [],@NonNull final IAccount,@NonNull final String,final boolean,@Nullable final ClaimsRequest,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: buildAcquireTokenSilentParameters(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, final boolean forceRefresh, @Nullable final ClaimsRequest claimsRequest, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: PublicClientApplication.buildAcquireTokenSilentParameters(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, final boolean forceRefresh, @Nullable final ClaimsRequest claimsRequest, @NonNull final SilentAuthenticationCallback callback)
  fullName: com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, final boolean forceRefresh, @Nullable final ClaimsRequest claimsRequest, @NonNull final SilentAuthenticationCallback callback)
  overload: com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1395
  package: com.microsoft.identity.client
  syntax:
    content: protected AcquireTokenSilentParameters buildAcquireTokenSilentParameters(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, final boolean forceRefresh, @Nullable final ClaimsRequest claimsRequest, @NonNull final SilentAuthenticationCallback callback)
    parameters:
    - id: scopes
      type: e5895f1f
    - id: account
      type: d6b37550com.microsoft.identity.client.IAccount
    - id: authority
      type: 8789feb4
    - id: forceRefresh
      type: 4dda0764
    - id: claimsRequest
      type: 9a7d2fbdcom.microsoft.identity.client.claims.ClaimsRequest
    - id: callback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
    return:
      type: com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,@NonNull final File,@NonNull final ApplicationCreatedListener)
  id: create(@NonNull final Context,@NonNull final File,@NonNull final ApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: create(@NonNull final Context context, @NonNull final File configFile, @NonNull final ApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.create(@NonNull final Context context, @NonNull final File configFile, @NonNull final ApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context context, @NonNull final File configFile, @NonNull final ApplicationCreatedListener listener)
  overload: com.microsoft.identity.client.PublicClientApplication.create*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 300
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#create(Context, File, ApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the specified file.</p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL configuration file, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void create(@NonNull final Context context, @NonNull final File configFile, @NonNull final ApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: af5af513
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,@NonNull final String,@Nullable final String,@NonNull final String,@NonNull final ApplicationCreatedListener)
  id: create(@NonNull final Context,@NonNull final String,@Nullable final String,@NonNull final String,@NonNull final ApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: create(@NonNull final Context context, @NonNull final String clientId, @Nullable final String authority, @NonNull final String redirectUri, @NonNull final ApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.create(@NonNull final Context context, @NonNull final String clientId, @Nullable final String authority, @NonNull final String redirectUri, @NonNull final ApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context context, @NonNull final String clientId, @Nullable final String authority, @NonNull final String redirectUri, @NonNull final ApplicationCreatedListener listener)
  overload: com.microsoft.identity.client.PublicClientApplication.create*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 341
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#create(Context, String, String, ApplicationCreatedListener)\"></xref> allows the client id and authority to be passed instead of providing them through metadata.</p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of an running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p></p>"
  syntax:
    content: public static void create(@NonNull final Context context, @NonNull final String clientId, @Nullable final String authority, @NonNull final String redirectUri, @NonNull final ApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: clientId
      type: 8789feb4
      description: <p>The application client id. Cannot be null. </p>
    - id: authority
      type: b868e8dd
      description: <p>The default authority to be used for the authority. If this is null, the default authority will be used. </p>
    - id: redirectUri
      type: 8789feb4
      description: <p>The redirect URI of the application. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,final int)
  id: create(@NonNull final Context,final int)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: create(@NonNull final Context context, final int configFileResourceId)
  nameWithType: PublicClientApplication.create(@NonNull final Context context, final int configFileResourceId)
  fullName: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context context, final int configFileResourceId)
  overload: com.microsoft.identity.client.PublicClientApplication.create*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 395
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#create(Context, int, ApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static IPublicClientApplication create(@NonNull final Context context, final int configFileResourceId)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication </p>
    return:
      type: com.microsoft.identity.client.IPublicClientApplication
      description: <p>An instance of IPublicClientApplication. </p>
  exceptions:
  - type: 12fe80de
    description: <p>if this function is invoked on the main thread. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,final int,@NonNull final ApplicationCreatedListener)
  id: create(@NonNull final Context,final int,@NonNull final ApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: create(@NonNull final Context context, final int configFileResourceId, @NonNull final ApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.create(@NonNull final Context context, final int configFileResourceId, @NonNull final ApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context context, final int configFileResourceId, @NonNull final ApplicationCreatedListener listener)
  overload: com.microsoft.identity.client.PublicClientApplication.create*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 256
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#create(Context, int, ApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void create(@NonNull final Context context, final int configFileResourceId, @NonNull final ApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File)
  id: createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  overload: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 576
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createMultipleAccountPublicClientApplication(Context, File)\"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"com.microsoft.identity.client.IMultipleAccountPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMultipleAccountPublicClientApplication\"></xref>. For example, when the device is marked as 'shared' (<xref uid=\"com.microsoft.identity.client.PublicClientApplication.isSharedDevice()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#isSharedDevice()\"></xref> is set to true) </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL configuration file, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static IMultipleAccountPublicClientApplication createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: af5af513
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    return:
      type: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  exceptions:
  - type: 12fe80de
    description: <p>if this function is invoked on the main thread. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final IMultipleAccountApplicationCreatedListener)
  id: createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final IMultipleAccountApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  overload: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 484
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createMultipleAccountPublicClientApplication(Context, File, IMultipleAccountApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"com.microsoft.identity.client.IMultipleAccountPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMultipleAccountPublicClientApplication\"></xref>. For example, when the device is marked as 'shared' (<xref uid=\"com.microsoft.identity.client.PublicClientApplication.isSharedDevice()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#isSharedDevice()\"></xref> is set to true) </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: af5af513
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final int)
  id: createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final int)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  overload: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 536
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createMultipleAccountPublicClientApplication(Context, int)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"com.microsoft.identity.client.IMultipleAccountPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMultipleAccountPublicClientApplication\"></xref>. For example, when the device is marked as 'shared' (<xref uid=\"com.microsoft.identity.client.PublicClientApplication.isSharedDevice()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#isSharedDevice()\"></xref> is set to true) </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static IMultipleAccountPublicClientApplication createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: 0f743d23
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    return:
      type: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
      description: <p>An instance of IMultipleAccountPublicClientApplication. </p>
  exceptions:
  - type: 12fe80de
    description: <p>if this function is invoked on the main thread. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final IMultipleAccountApplicationCreatedListener)
  id: createMultipleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final IMultipleAccountApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  overload: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 437
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createMultipleAccountPublicClientApplication(Context, int, IMultipleAccountApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"com.microsoft.identity.client.IMultipleAccountPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMultipleAccountPublicClientApplication\"></xref>. For example, when the device is marked as 'shared' (<xref uid=\"com.microsoft.identity.client.PublicClientApplication.isSharedDevice()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#isSharedDevice()\"></xref> is set to true) </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,@Nullable final File)
  id: createSingleAccountPublicClientApplication(@NonNull final Context,@Nullable final File)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: createSingleAccountPublicClientApplication( @NonNull final Context context, @Nullable final File configFile)
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication( @NonNull final Context context, @Nullable final File configFile)
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication( @NonNull final Context context, @Nullable final File configFile)
  overload: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 763
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createSingleAccountPublicClientApplication(Context, int)\"></xref> will read the client id and other configuration settings from the file included in your applications resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISingleAccountApplicationCreatedListener\"></xref>. For example, AccountMode in configuration is not set to single. </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL configuration file, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static ISingleAccountPublicClientApplication createSingleAccountPublicClientApplication( @NonNull final Context context, @Nullable final File configFile)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: d2084da5
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    return:
      type: com.microsoft.identity.client.ISingleAccountPublicClientApplication
      description: <p>An instance of ISingleAccountPublicClientApplication. </p>
  exceptions:
  - type: 12fe80de
    description: <p>if this function is invoked on the main thread. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,final int)
  id: createSingleAccountPublicClientApplication(@NonNull final Context,final int)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: createSingleAccountPublicClientApplication( @NonNull final Context context, final int configFileResourceId)
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication( @NonNull final Context context, final int configFileResourceId)
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication( @NonNull final Context context, final int configFileResourceId)
  overload: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 721
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createSingleAccountPublicClientApplication(Context, int)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISingleAccountApplicationCreatedListener\"></xref>. For example, AccountMode in configuration is not set to single. </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static ISingleAccountPublicClientApplication createSingleAccountPublicClientApplication( @NonNull final Context context, final int configFileResourceId)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    return:
      type: com.microsoft.identity.client.ISingleAccountPublicClientApplication
      description: <p>An instance of ISingleAccountPublicClientApplication. </p>
  exceptions:
  - type: 12fe80de
    description: <p>if this function is invoked on the main thread. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final ISingleAccountApplicationCreatedListener)
  id: createSingleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final ISingleAccountApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: createSingleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final ISingleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final ISingleAccountApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final ISingleAccountApplicationCreatedListener listener)
  overload: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 669
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createSingleAccountPublicClientApplication(Context, int, ISingleAccountApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISingleAccountApplicationCreatedListener\"></xref>. For example, AccountMode in configuration is not set to single. </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL configuration file, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void createSingleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final ISingleAccountApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: af5af513
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final ISingleAccountApplicationCreatedListener)
  id: createSingleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final ISingleAccountApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: createSingleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final ISingleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final ISingleAccountApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final ISingleAccountApplicationCreatedListener listener)
  overload: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 622
  package: com.microsoft.identity.client
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createSingleAccountPublicClientApplication(Context, int, ISingleAccountApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISingleAccountApplicationCreatedListener\"></xref>. For example, AccountMode in configuration is not set to single. </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void createSingleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final ISingleAccountApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.getCommandCallback(@NonNull final SilentAuthenticationCallback,@NonNull final TokenParameters)
  id: getCommandCallback(@NonNull final SilentAuthenticationCallback,@NonNull final TokenParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: getCommandCallback( @NonNull final SilentAuthenticationCallback authenticationCallback, @NonNull final TokenParameters tokenParameters)
  nameWithType: PublicClientApplication.getCommandCallback( @NonNull final SilentAuthenticationCallback authenticationCallback, @NonNull final TokenParameters tokenParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.getCommandCallback( @NonNull final SilentAuthenticationCallback authenticationCallback, @NonNull final TokenParameters tokenParameters)
  overload: com.microsoft.identity.client.PublicClientApplication.getCommandCallback*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1719
  package: com.microsoft.identity.client
  syntax:
    content: protected CommandCallback getCommandCallback( @NonNull final SilentAuthenticationCallback authenticationCallback, @NonNull final TokenParameters tokenParameters)
    parameters:
    - id: authenticationCallback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
    - id: tokenParameters
      type: d6b37550com.microsoft.identity.client.TokenParameters
    return:
      type: 9bb61ed7
- uid: com.microsoft.identity.client.PublicClientApplication.getConfiguration()
  id: getConfiguration()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: getConfiguration()
  nameWithType: PublicClientApplication.getConfiguration()
  fullName: com.microsoft.identity.client.PublicClientApplication.getConfiguration()
  overload: com.microsoft.identity.client.PublicClientApplication.getConfiguration*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1242
  package: com.microsoft.identity.client
  summary: "<p>Returns the PublicClientConfiguration for this instance of PublicClientApplication.</p>\r\n<p></p>"
  syntax:
    content: public PublicClientApplicationConfiguration getConfiguration()
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
      description: <p>The PublicClientApplicationConfiguration. </p>
  overridden: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
- uid: com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken(@NonNull final String)
  id: getMsaFamilyRefreshToken(@NonNull final String)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: getMsaFamilyRefreshToken(@NonNull final String identifier)
  nameWithType: PublicClientApplication.getMsaFamilyRefreshToken(@NonNull final String identifier)
  fullName: com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken(@NonNull final String identifier)
  overload: com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1166
  package: com.microsoft.identity.client
  syntax:
    content: public String getMsaFamilyRefreshToken(@NonNull final String identifier)
    parameters:
    - id: identifier
      type: 8789feb4
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken(@NonNull final String)
  id: getOrgIdFamilyRefreshToken(@NonNull final String)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: getOrgIdFamilyRefreshToken(@NonNull final String identifier)
  nameWithType: PublicClientApplication.getOrgIdFamilyRefreshToken(@NonNull final String identifier)
  fullName: com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken(@NonNull final String identifier)
  overload: com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1134
  package: com.microsoft.identity.client
  syntax:
    content: public String getOrgIdFamilyRefreshToken(@NonNull final String identifier)
    parameters:
    - id: identifier
      type: 8789feb4
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.PublicClientApplication.getSdkVersion()
  id: getSdkVersion()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: getSdkVersion()
  nameWithType: PublicClientApplication.getSdkVersion()
  fullName: com.microsoft.identity.client.PublicClientApplication.getSdkVersion()
  overload: com.microsoft.identity.client.PublicClientApplication.getSdkVersion*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1228
  package: com.microsoft.identity.client
  syntax:
    content: public static String getSdkVersion()
    return:
      type: "26831127"
      description: <p>The current version for the sdk. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.homeAccountMatcher
  id: homeAccountMatcher
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: homeAccountMatcher
  nameWithType: PublicClientApplication.homeAccountMatcher
  fullName: com.microsoft.identity.client.PublicClientApplication.homeAccountMatcher
  type: Field
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1864
  package: com.microsoft.identity.client
  syntax:
    content: >-
      protected AccountMatcher homeAccountMatcher= new AccountMatcher() {
              @Override
              boolean matches(@NonNull final String homeAccountId,
                              @NonNull final IAccount account) {
                  return homeAccountId.contains(account.getId());
              }
          }
    return:
      type: com.microsoft.identity.client.PublicClientApplication.AccountMatcher
- uid: com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  id: isSharedDevice()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: isSharedDevice()
  nameWithType: PublicClientApplication.isSharedDevice()
  fullName: com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  overload: com.microsoft.identity.client.PublicClientApplication.isSharedDevice*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1247
  package: com.microsoft.identity.client
  summary: "<p>Returns whether the application is being run on a device that is marked as a shared. Only SingleAccountPublicClientApplications may be used on shared devices</p>\r\n<p></p>"
  syntax: &o2
    content: public boolean isSharedDevice()
    return:
      type: 4fc6e284
  overridden: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
- uid: com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
  id: localAccountMatcher
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: localAccountMatcher
  nameWithType: PublicClientApplication.localAccountMatcher
  fullName: com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
  type: Field
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1872
  package: com.microsoft.identity.client
  syntax:
    content: "protected AccountMatcher localAccountMatcher= new AccountMatcher() {\n        @Override\n        boolean matches(@NonNull final String localAccountId,\n                        @NonNull final IAccount account) {\n            \n            if (localAccountId.contains(account.getId())) {\n                return true;\n            } else if (account instanceof MultiTenantAccount) {\n                \n                final MultiTenantAccount multiTenantAccount = (MultiTenantAccount) account;\n                final Map<String, ITenantProfile> tenantProfiles = multiTenantAccount.getTenantProfiles();\n\n                if (null != tenantProfiles && !tenantProfiles.isEmpty()) {\n                    for (final Map.Entry<String, ITenantProfile> profileEntry : tenantProfiles.entrySet()) {\n                        if (!TextUtils.isEmpty(profileEntry.getValue().getId()) &&\n                                localAccountId.contains(profileEntry.getValue().getId())) {\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }"
    return:
      type: com.microsoft.identity.client.PublicClientApplication.AccountMatcher
- uid: com.microsoft.identity.client.PublicClientApplication.mPublicClientConfiguration
  id: mPublicClientConfiguration
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: mPublicClientConfiguration
  nameWithType: PublicClientApplication.mPublicClientConfiguration
  fullName: com.microsoft.identity.client.PublicClientApplication.mPublicClientConfiguration
  type: Field
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 223
  package: com.microsoft.identity.client
  syntax:
    content: protected PublicClientApplicationConfiguration mPublicClientConfiguration
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.PublicClientApplication.mTokenShareUtility
  id: mTokenShareUtility
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: mTokenShareUtility
  nameWithType: PublicClientApplication.mTokenShareUtility
  fullName: com.microsoft.identity.client.PublicClientApplication.mTokenShareUtility
  type: Field
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 224
  package: com.microsoft.identity.client
  syntax:
    content: protected TokenShareUtility mTokenShareUtility
    return:
      type: cca850d3
- uid: com.microsoft.identity.client.PublicClientApplication.postAuthResult(@NonNull final ILocalAuthenticationResult,@NonNull final TokenParameters,@NonNull final SilentAuthenticationCallback)
  id: postAuthResult(@NonNull final ILocalAuthenticationResult,@NonNull final TokenParameters,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: postAuthResult(@NonNull final ILocalAuthenticationResult localAuthenticationResult, @NonNull final TokenParameters requestParameters, @NonNull final SilentAuthenticationCallback authenticationCallback)
  nameWithType: PublicClientApplication.postAuthResult(@NonNull final ILocalAuthenticationResult localAuthenticationResult, @NonNull final TokenParameters requestParameters, @NonNull final SilentAuthenticationCallback authenticationCallback)
  fullName: com.microsoft.identity.client.PublicClientApplication.postAuthResult(@NonNull final ILocalAuthenticationResult localAuthenticationResult, @NonNull final TokenParameters requestParameters, @NonNull final SilentAuthenticationCallback authenticationCallback)
  overload: com.microsoft.identity.client.PublicClientApplication.postAuthResult*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1803
  package: com.microsoft.identity.client
  summary: "<p>Helper method to post authentication result. </p>"
  syntax:
    content: protected void postAuthResult(@NonNull final ILocalAuthenticationResult localAuthenticationResult, @NonNull final TokenParameters requestParameters, @NonNull final SilentAuthenticationCallback authenticationCallback)
    parameters:
    - id: localAuthenticationResult
      type: da368d35
    - id: requestParameters
      type: d6b37550com.microsoft.identity.client.TokenParameters
    - id: authenticationCallback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
- uid: com.microsoft.identity.client.PublicClientApplication.PublicClientApplication(@NonNull final PublicClientApplicationConfiguration)
  id: PublicClientApplication(@NonNull final PublicClientApplicationConfiguration)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: PublicClientApplication(@NonNull final PublicClientApplicationConfiguration configFile)
  nameWithType: PublicClientApplication.PublicClientApplication(@NonNull final PublicClientApplicationConfiguration configFile)
  fullName: com.microsoft.identity.client.PublicClientApplication.PublicClientApplication(@NonNull final PublicClientApplicationConfiguration configFile)
  overload: com.microsoft.identity.client.PublicClientApplication.PublicClientApplication*
  type: Constructor
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1024
  package: com.microsoft.identity.client
  syntax:
    content: protected PublicClientApplication(@NonNull final PublicClientApplicationConfiguration configFile)
    parameters:
    - id: configFile
      type: d6b37550com.microsoft.identity.client.PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken(@NonNull final String)
  id: saveMsaFamilyRefreshToken(@NonNull final String)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: saveMsaFamilyRefreshToken(@NonNull final String refreshToken)
  nameWithType: PublicClientApplication.saveMsaFamilyRefreshToken(@NonNull final String refreshToken)
  fullName: com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken(@NonNull final String refreshToken)
  overload: com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1182
  package: com.microsoft.identity.client
  syntax:
    content: public void saveMsaFamilyRefreshToken(@NonNull final String refreshToken)
    parameters:
    - id: refreshToken
      type: 8789feb4
- uid: com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken(@NonNull final String)
  id: saveOrgIdFamilyRefreshToken(@NonNull final String)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: saveOrgIdFamilyRefreshToken(@NonNull final String ssoStateSerializerBlob)
  nameWithType: PublicClientApplication.saveOrgIdFamilyRefreshToken(@NonNull final String ssoStateSerializerBlob)
  fullName: com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken(@NonNull final String ssoStateSerializerBlob)
  overload: com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1150
  package: com.microsoft.identity.client
  syntax:
    content: public void saveOrgIdFamilyRefreshToken(@NonNull final String ssoStateSerializerBlob)
    parameters:
    - id: ssoStateSerializerBlob
      type: 8789feb4
- uid: com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo(Activity)
  id: showExpectedMsalRedirectUriInfo(Activity)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: showExpectedMsalRedirectUriInfo(Activity activity)
  nameWithType: PublicClientApplication.showExpectedMsalRedirectUriInfo(Activity activity)
  fullName: com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo(Activity activity)
  overload: com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1237
  package: com.microsoft.identity.client
  summary: "<p>Presents an activity that includes the package name, signature, redirect URI and manifest entry required for your application</p>\r\n<p></p>"
  syntax:
    content: public static void showExpectedMsalRedirectUriInfo(Activity activity)
    parameters:
    - id: activity
      type: ff2dfcec
- uid: com.microsoft.identity.client.PublicClientApplication.usernameMatcher
  id: usernameMatcher
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: usernameMatcher
  nameWithType: PublicClientApplication.usernameMatcher
  fullName: com.microsoft.identity.client.PublicClientApplication.usernameMatcher
  type: Field
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1898
  package: com.microsoft.identity.client
  syntax:
    content: protected AccountMatcher usernameMatcher
    return:
      type: com.microsoft.identity.client.PublicClientApplication.AccountMatcher
- uid: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters(AcquireTokenParameters)
  id: validateAcquireTokenParameters(AcquireTokenParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: validateAcquireTokenParameters(AcquireTokenParameters parameters)
  nameWithType: PublicClientApplication.validateAcquireTokenParameters(AcquireTokenParameters parameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters(AcquireTokenParameters parameters)
  overload: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1313
  package: com.microsoft.identity.client
  syntax:
    content: protected void validateAcquireTokenParameters(AcquireTokenParameters parameters)
    parameters:
    - id: parameters
      type: com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters(AcquireTokenSilentParameters)
  id: validateAcquireTokenSilentParameters(AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  langs:
  - java
  name: validateAcquireTokenSilentParameters(AcquireTokenSilentParameters parameters)
  nameWithType: PublicClientApplication.validateAcquireTokenSilentParameters(AcquireTokenSilentParameters parameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters(AcquireTokenSilentParameters parameters)
  overload: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java
    startLine: 1323
  package: com.microsoft.identity.client
  syntax:
    content: protected void validateAcquireTokenSilentParameters(AcquireTokenSilentParameters parameters)
    parameters:
    - id: parameters
      type: com.microsoft.identity.client.AcquireTokenSilentParameters
references:
- uid: cca850d3
  spec.java:
  - name: TokenShareUtility
    fullName: TokenShareUtility
- uid: 3c9b8ebf
  spec.java:
  - name: '@NonNull final Context'
    fullName: '@NonNull final Context'
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: d6b37550com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
    name: IPublicClientApplication.ApplicationCreatedListener
    fullName: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
    href: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener.yml
- uid: com.microsoft.identity.client.PublicClientApplication.create*
  name: create
  nameWithType: PublicClientApplication.create
  fullName: com.microsoft.identity.client.PublicClientApplication.create
  package: com.microsoft.identity.client
- uid: af5af513
  spec.java:
  - name: '@NonNull final File'
    fullName: '@NonNull final File'
- uid: 8789feb4
  spec.java:
  - name: '@NonNull final String'
    fullName: '@NonNull final String'
- uid: b868e8dd
  spec.java:
  - name: '@Nullable final String'
    fullName: '@Nullable final String'
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: d6b37550com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
    name: IPublicClientApplication.IMultipleAccountApplicationCreatedListener
    fullName: com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
    href: com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener.yml
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication*
  name: createMultipleAccountPublicClientApplication
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication
  package: com.microsoft.identity.client
- uid: 0f743d23
  spec.java:
  - name: '@NonNull final int'
    fullName: '@NonNull final int'
- uid: d6b37550com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
    name: IPublicClientApplication.ISingleAccountApplicationCreatedListener
    fullName: com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
    href: com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener.yml
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication*
  name: createSingleAccountPublicClientApplication
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication
  package: com.microsoft.identity.client
- uid: d2084da5
  spec.java:
  - name: '@Nullable final File'
    fullName: '@Nullable final File'
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.identity.client.PublicClientApplication.getSdkVersion*
  name: getSdkVersion
  nameWithType: PublicClientApplication.getSdkVersion
  fullName: com.microsoft.identity.client.PublicClientApplication.getSdkVersion
  package: com.microsoft.identity.client
- uid: ff2dfcec
  spec.java:
  - name: Activity
    fullName: Activity
- uid: com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo*
  name: showExpectedMsalRedirectUriInfo
  nameWithType: PublicClientApplication.showExpectedMsalRedirectUriInfo
  fullName: com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo
  package: com.microsoft.identity.client
- uid: d6b37550com.microsoft.identity.client.PublicClientApplicationConfiguration
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
    name: PublicClientApplicationConfiguration
    fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
    href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
- uid: com.microsoft.identity.client.PublicClientApplication.PublicClientApplication*
  name: PublicClientApplication
  nameWithType: PublicClientApplication.PublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication.PublicClientApplication
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters*
  name: validateAcquireTokenParameters
  nameWithType: PublicClientApplication.validateAcquireTokenParameters
  fullName: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters*
  name: validateAcquireTokenSilentParameters
  nameWithType: PublicClientApplication.validateAcquireTokenSilentParameters
  fullName: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters
  package: com.microsoft.identity.client
- uid: e5895f1f
  spec.java:
  - name: '@NonNull final String []'
    fullName: '@NonNull final String []'
- uid: d6b37550com.microsoft.identity.client.IAccount
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: 9a7d2fbdcom.microsoft.identity.client.claims.ClaimsRequest
  spec.java:
  - name: '@Nullable final '
    fullName: '@Nullable final '
  - uid: com.microsoft.identity.client.claims.ClaimsRequest
    name: ClaimsRequest
    fullName: com.microsoft.identity.client.claims.ClaimsRequest
    href: com.microsoft.identity.client.claims.ClaimsRequest.yml
- uid: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.SilentAuthenticationCallback
    name: SilentAuthenticationCallback
    fullName: com.microsoft.identity.client.SilentAuthenticationCallback
    href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
- uid: com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters*
  name: buildAcquireTokenSilentParameters
  nameWithType: PublicClientApplication.buildAcquireTokenSilentParameters
  fullName: com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters
  package: com.microsoft.identity.client
- uid: d6b37550com.microsoft.identity.client.TokenParameters
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.TokenParameters
    name: TokenParameters
    fullName: com.microsoft.identity.client.TokenParameters
    href: com.microsoft.identity.client.TokenParameters.yml
- uid: 9bb61ed7
  spec.java:
  - name: CommandCallback
    fullName: CommandCallback
- uid: com.microsoft.identity.client.PublicClientApplication.getCommandCallback*
  name: getCommandCallback
  nameWithType: PublicClientApplication.getCommandCallback
  fullName: com.microsoft.identity.client.PublicClientApplication.getCommandCallback
  package: com.microsoft.identity.client
- uid: da368d35
  spec.java:
  - name: '@NonNull final ILocalAuthenticationResult'
    fullName: '@NonNull final ILocalAuthenticationResult'
- uid: com.microsoft.identity.client.PublicClientApplication.postAuthResult*
  name: postAuthResult
  nameWithType: PublicClientApplication.postAuthResult
  fullName: com.microsoft.identity.client.PublicClientApplication.postAuthResult
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken*
  name: getOrgIdFamilyRefreshToken
  nameWithType: PublicClientApplication.getOrgIdFamilyRefreshToken
  fullName: com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken*
  name: saveOrgIdFamilyRefreshToken
  nameWithType: PublicClientApplication.saveOrgIdFamilyRefreshToken
  fullName: com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken*
  name: getMsaFamilyRefreshToken
  nameWithType: PublicClientApplication.getMsaFamilyRefreshToken
  fullName: com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken*
  name: saveMsaFamilyRefreshToken
  nameWithType: PublicClientApplication.saveMsaFamilyRefreshToken
  fullName: com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.getConfiguration*
  name: getConfiguration
  nameWithType: PublicClientApplication.getConfiguration
  fullName: com.microsoft.identity.client.PublicClientApplication.getConfiguration
  package: com.microsoft.identity.client
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.identity.client.PublicClientApplication.isSharedDevice*
  name: isSharedDevice
  nameWithType: PublicClientApplication.isSharedDevice
  fullName: com.microsoft.identity.client.PublicClientApplication.isSharedDevice
  package: com.microsoft.identity.client
- uid: "97576948"
  spec.java:
  - name: '@NonNull final Activity'
    fullName: '@NonNull final Activity'
- uid: d6b37550com.microsoft.identity.client.AuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AuthenticationCallback
    name: AuthenticationCallback
    fullName: com.microsoft.identity.client.AuthenticationCallback
    href: com.microsoft.identity.client.AuthenticationCallback.yml
- uid: com.microsoft.identity.client.PublicClientApplication.acquireToken*
  name: acquireToken
  nameWithType: PublicClientApplication.acquireToken
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireToken
  package: com.microsoft.identity.client
- uid: d6b37550com.microsoft.identity.client.AcquireTokenParameters
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AcquireTokenParameters
    name: AcquireTokenParameters
    fullName: com.microsoft.identity.client.AcquireTokenParameters
    href: com.microsoft.identity.client.AcquireTokenParameters.yml
- uid: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AcquireTokenSilentParameters
    name: AcquireTokenSilentParameters
    fullName: com.microsoft.identity.client.AcquireTokenSilentParameters
    href: com.microsoft.identity.client.AcquireTokenSilentParameters.yml
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync*
  name: acquireTokenSilentAsync
  nameWithType: PublicClientApplication.acquireTokenSilentAsync
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent*
  name: acquireTokenSilent
  nameWithType: PublicClientApplication.acquireTokenSilent
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent
  package: com.microsoft.identity.client
- uid: b1a67a9d
  spec.java:
  - name: '@Nullable String []'
    fullName: '@Nullable String []'
- uid: d6b37550com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
    name: IPublicClientApplication.DeviceCodeFlowCallback
    fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
    href: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.yml
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode*
  name: acquireTokenWithDeviceCode
  nameWithType: PublicClientApplication.acquireTokenWithDeviceCode
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  nameWithType: IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  type: Method
  summary: "<p>Perform the Device Code Flow (DCF) protocol to allow a device without input capability to authenticate and get a new access token. Currently, flow is only supported in local MSAL. No Broker support. </p>"
  syntax:
    content: public void acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
    parameters:
    - id: scopes
      type: 045b2b2f
      description: <p>the desired access scopes </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
      description: <p>callback object used to communicate with the API throughout the protocol </p>
- uid: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  name: getMsaFamilyRefreshToken(String identifier)
  nameWithType: ITokenShare.getMsaFamilyRefreshToken(String identifier)
  fullName: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String identifier)
  type: Method
  syntax:
    content: public String getMsaFamilyRefreshToken(String identifier)
    parameters:
    - id: identifier
      type: "26831127"
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  name: getOrgIdFamilyRefreshToken(String identifier)
  nameWithType: ITokenShare.getOrgIdFamilyRefreshToken(String identifier)
  fullName: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String identifier)
  type: Method
  syntax:
    content: public String getOrgIdFamilyRefreshToken(String identifier)
    parameters:
    - id: identifier
      type: "26831127"
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  name: saveMsaFamilyRefreshToken(String refreshToken)
  nameWithType: ITokenShare.saveMsaFamilyRefreshToken(String refreshToken)
  fullName: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String refreshToken)
  type: Method
  syntax:
    content: public void saveMsaFamilyRefreshToken(String refreshToken)
    parameters:
    - id: refreshToken
      type: "26831127"
- uid: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  name: saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  nameWithType: ITokenShare.saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  fullName: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  type: Method
  syntax:
    content: public void saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
    parameters:
    - id: ssoStateSerializerBlob
      type: "26831127"
- uid: com.microsoft.identity.client.IPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: IPublicClientApplication
  nameWithType: IPublicClientApplication
  fullName: com.microsoft.identity.client.IPublicClientApplication
  type: Interface
  syntax:
    content: public interface IPublicClientApplication
- uid: com.microsoft.identity.client.ITokenShare
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ITokenShare.yml
  name: ITokenShare
  nameWithType: ITokenShare
  fullName: com.microsoft.identity.client.ITokenShare
  type: Interface
  summary: "<p>Interface defining necessary methods for TokenShareLibrary (TSL) integration. </p>"
  syntax:
    content: public interface ITokenShare
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  name: MultipleAccountPublicClientApplication
  nameWithType: MultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  type: Class
  syntax:
    content: public class MultipleAccountPublicClientApplication extends PublicClientApplication implements IMultipleAccountPublicClientApplication
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: SingleAccountPublicClientApplication
  nameWithType: SingleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication
  type: Class
  syntax:
    content: public class SingleAccountPublicClientApplication
- uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
  name: PublicClientApplicationConfiguration
  nameWithType: PublicClientApplicationConfiguration
  fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
  type: Class
  syntax:
    content: public class PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.PublicClientApplication.AccountMatcher
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplication.AccountMatcher.yml
  name: PublicClientApplication.AccountMatcher
  nameWithType: PublicClientApplication.AccountMatcher
  fullName: com.microsoft.identity.client.PublicClientApplication.AccountMatcher
  type: Class
  syntax:
    content: protected class AccountMatcher
- uid: com.microsoft.identity.client.IAccount
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAccount.yml
  name: IAccount
  nameWithType: IAccount
  fullName: com.microsoft.identity.client.IAccount
  type: Interface
  syntax:
    content: public interface IAccount extends IClaimable
- uid: com.microsoft.identity.client.MultiTenantAccount
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.MultiTenantAccount.yml
  name: MultiTenantAccount
  nameWithType: MultiTenantAccount
  fullName: com.microsoft.identity.client.MultiTenantAccount
  type: Class
  syntax:
    content: public class MultiTenantAccount extends Account implements IMultiTenantAccount
- uid: com.microsoft.identity.client.ITenantProfile
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ITenantProfile.yml
  name: ITenantProfile
  nameWithType: ITenantProfile
  fullName: com.microsoft.identity.client.ITenantProfile
  type: Interface
  syntax:
    content: public interface ITenantProfile extends IAccount
- uid: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener.yml
  name: IPublicClientApplication.ApplicationCreatedListener
  nameWithType: IPublicClientApplication.ApplicationCreatedListener
  fullName: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
  type: Interface
  summary: "<p>Listener callback for asynchronous initialization of IPublicClientApplication object. </p>"
  syntax:
    content: public interface ApplicationCreatedListener
- uid: com.microsoft.identity.client.PublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: PublicClientApplication
  nameWithType: PublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication
  type: Class
  summary: "<p>This is the entry point for developer to create public native applications and make API calls to acquire tokens. </p>\r\n<p>\r\n  <b>Client ID:</b> The clientID of your application is a unique identifier which can be obtained from the app registration portal.</p>\r\n<p>\r\n  <b>AuthorityMetadata:</b> A URL indicating a directory that MSAL can use to obtain tokens. In Azure AD it is of the form <a href=\"https://\">https://</a>&lt;[nstance]/[tenant], where [instance] is the directory host (e.g. <a href=\"https://login.microsoftonline.com\">https://login.microsoftonline.com</a>) and [tenant] is an identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory) </p>\r\n<p>For B2C, it is of the form <a href=\"https://\">https://</a>[instance]/tfp/[tenant]/[policy] where instance and tenant are same as Azure AD, and [policy] is a string like signup</p>\r\n<p>MSAL <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> provides three constructors allowing the client id to be set either via AndroidManifest.xml metadata or using constructor parameters. Similarly, if developer chooses not to use the default authority <a href=\"https://login.microsoftonline.com,\">https://login.microsoftonline.com,</a> an alternate can also be configured using the manifest, constructor parameters, or in acquire token calls. </p>\r\n<p>Redirect is auto-generated in the library in the format of msal&lt;client-id&gt;://auth, and it cannot be overridden. </p>\r\n<p>Developer <b>MUST</b> have <xref uid=\"com.microsoft.identity.client.BrowserTabActivity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BrowserTabActivity\"></xref> declared in their manifest, which must have the correct intent-filter configured. If the wrong scheme and host is provided, the sdk will fail the <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> creation. </p>\r\n<p>Expected format will be: <pre>\r\n&lt;activity\r\n    android:name=\"com.microsoft.identity.client.BrowserTabActivity\"&gt;\r\n    &lt;intent-filter&gt;\r\n        &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\r\n        &lt;data android:scheme=\"msal&amp;lt;AppClientId&amp;gt;\"\r\n             android:host=\"auth\" /&gt;\r\n    &lt;/intent-filter&gt;\r\n&lt;/activity&gt;\r\n</pre></p>\r\n<p>Other Terminology:</p>\r\n<p>\r\n  <b>Scopes:</b>Permissions that the developers wants included in the access token received . Not all scopes are guaranteed to be included in the access token returned. </p>\r\n<p>\r\n  <b>Login Hint:</b> Usually an email, to pass to the service at the beginning of the interactive authentication flow. </p>\r\n<p>\r\n  <b>Extra Scopes to Consent:</b> Permissions you want the user to consent to in the same authentication flow, but won't be included in the returned access token. </p>"
  syntax: *o1
- uid: com.microsoft.identity.client.exception.MsalException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalException.yml
  name: MsalException
  nameWithType: MsalException
  fullName: com.microsoft.identity.client.exception.MsalException
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.identity.client.exception.MsalException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalException\"></xref> thrown or sent back via callback, representing the detailed exception thrown by the sdk. It will contain the error code, error description (could be null) or throwable (could be null). </p>"
  syntax:
    content: public class MsalException
- uid: com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener.yml
  name: IPublicClientApplication.IMultipleAccountApplicationCreatedListener
  nameWithType: IPublicClientApplication.IMultipleAccountApplicationCreatedListener
  fullName: com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
  type: Interface
  summary: "<p>Listener callback for asynchronous initialization of IMultipleAccountPublicClientApplication object. </p>"
  syntax:
    content: public interface IMultipleAccountApplicationCreatedListener
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: IMultipleAccountPublicClientApplication
  nameWithType: IMultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  type: Interface
  summary: "<p>An interface that contains list of operations that are available when MSAL is in 'multiple account' mode.<ul><li><p>This mode allows an application to make API calls with more than one accounts.</p></li><li><p>The application will only be able to retrieve/remove accounts that have been used to acquire token interactively in this application</p></li><li><p>API calls' scope is limited to 'the calling app'. (i.e. removeAccount() will not remove credentials of the same account in other apps). </p></li></ul></p>\r\n<p>This is MSAL's default mode. </p>"
  syntax:
    content: public interface IMultipleAccountPublicClientApplication extends IPublicClientApplication
- uid: com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: isSharedDevice()
  nameWithType: PublicClientApplication.isSharedDevice()
  fullName: com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  type: Method
  summary: "<p>Returns whether the application is being run on a device that is marked as a shared. Only SingleAccountPublicClientApplications may be used on shared devices</p>\r\n<p></p>"
  syntax: *o2
- uid: com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener.yml
  name: IPublicClientApplication.ISingleAccountApplicationCreatedListener
  nameWithType: IPublicClientApplication.ISingleAccountApplicationCreatedListener
  fullName: com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
  type: Interface
  summary: "<p>Listener callback for asynchronous initialization of ISingleAccountPublicClientApplication object. </p>"
  syntax:
    content: public interface ISingleAccountApplicationCreatedListener
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  name: ISingleAccountPublicClientApplication
  nameWithType: ISingleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  type: Interface
  summary: "<p>An interface that contains list of operations that are available when MSAL is in 'single account' mode.<ul><li><p>In this mode, one account can be signed-in to the app.</p></li><li><p>If the user wants to acquire a token for another account, the previous account must be signed out first. </p></li></ul></p>\r\n<p>When the device is registered as 'shared', this will be the only available PublicClientApplication the app can obtain. The calling app has to support ISingleAccountPublicClientApplication if it is planning to support shared device mode. </p>\r\n<p>In the shared device mode,<ul><li><p>'Sign-in' means that the user will be signed in to the device - not just this app.</p></li><li><p>Once an account is 'signed-in', every MSAL app on the device that support shared device mode will be able to retrieve this account, and use them to silently perform API calls.</p></li><li><p>'Sign-out' means that user will be signed out from the device - every MSAL apps and the default browser. </p></li></ul></p>"
  syntax:
    content: public interface ISingleAccountPublicClientApplication extends IPublicClientApplication
- uid: com.microsoft.identity.client.exception.MsalClientException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalClientException.yml
  name: MsalClientException
  nameWithType: MsalClientException
  fullName: com.microsoft.identity.client.exception.MsalClientException
  type: Class
  summary: "<p>This exception class represents general errors that are local to the library. Below is the table of proposed codes and a short description of each. </p>\r\n<p>Set of error codes that could be returned from this exception: <ul><li><p>multiple_matching_tokens_detected: There are multiple cache entries found and the sdk cannot identify the correct access or refresh token from the cache. This usually indicates a bug in the sdk for storing tokens or the authority is not provided in the silent request and multiple matching tokens found.  </p></li><li><p>device_network_not_available: No active network is available on the device.  </p></li><li><p>json_parse_failure: The sdk failed to parse the JSON format. </p></li><li><p>io_error: IOException happened, could be the device/network errors.  </p></li><li><p>malformed_url: The url is malformed. Likely caused when constructing the auth request, authority, or redirect URI.  </p></li><li><p>unsupported_encoding: The encoding is not supported by the device.  </p></li><li><p>no_such_algorithm: The algorithm used to generate pkce challenge is not supported.  </p></li><li><p>invalid_jwt: JWT returned by the server is not valid, empty or malformed.  </p></li><li><p>state_mismatch: State from authorization response did not match the state in the authorization request. For authorization requests, the sdk will verify the state returned from redirect and the one sent in the request.  </p></li><li><p>unsupported_url: Unsupported url, cannot perform ADFS authority validation.  </p></li><li><p>authority_validation_not_supported: The authority is not supported for authority validation. The sdk supports b2c authorities, but doesn't support b2c authority validation. Only well-known host will be supported.  </p></li><li><p>chrome_not_installed: Chrome is not installed on the device. The sdk uses chrome custom tab for authorization requests if available, and will fall back to chrome browser.  </p></li><li><p>user_mismatch: The user provided in the acquire token request doesn't match the user returned from server. </p></li></ul></p>"
  syntax:
    content: public class MsalClientException extends MsalException
- uid: com.microsoft.identity.client.AcquireTokenParameters
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AcquireTokenParameters.yml
  name: AcquireTokenParameters
  nameWithType: AcquireTokenParameters
  fullName: com.microsoft.identity.client.AcquireTokenParameters
  type: Class
  summary: "<p>Encapsulates the parameters passed to the acquireToken methods of PublicClientApplication </p>"
  syntax:
    content: public class AcquireTokenParameters extends TokenParameters
- uid: com.microsoft.identity.client.exception.MsalArgumentException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalArgumentException.yml
  name: MsalArgumentException
  nameWithType: MsalArgumentException
  fullName: com.microsoft.identity.client.exception.MsalArgumentException
  type: Class
  syntax:
    content: public class MsalArgumentException extends MsalException
- uid: com.microsoft.identity.client.AcquireTokenSilentParameters
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AcquireTokenSilentParameters.yml
  name: AcquireTokenSilentParameters
  nameWithType: AcquireTokenSilentParameters
  fullName: com.microsoft.identity.client.AcquireTokenSilentParameters
  type: Class
  syntax:
    content: public class AcquireTokenSilentParameters extends TokenParameters
- uid: com.microsoft.identity.client.claims.ClaimsRequest
  parent: com.microsoft.identity.client.claims
  href: com.microsoft.identity.client.claims.ClaimsRequest.yml
  name: ClaimsRequest
  nameWithType: ClaimsRequest
  fullName: com.microsoft.identity.client.claims.ClaimsRequest
  type: Class
  summary: "<p>Represents the claims request parameter as an object</p>\r\n<p></p>"
  syntax:
    content: public class ClaimsRequest
- uid: com.microsoft.identity.client.SilentAuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: SilentAuthenticationCallback
  nameWithType: SilentAuthenticationCallback
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback
  type: Interface
  syntax:
    content: public interface SilentAuthenticationCallback
- uid: com.microsoft.identity.client.TokenParameters
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.TokenParameters.yml
  name: TokenParameters
  nameWithType: TokenParameters
  fullName: com.microsoft.identity.client.TokenParameters
  type: Class
  summary: "<p>Base class for AcquireTokenParameters and AcquireTokenSilentParameters </p>"
  syntax:
    content: public class TokenParameters
- uid: com.microsoft.identity.client.configuration.LoggerConfiguration
  parent: com.microsoft.identity.client.configuration
  href: com.microsoft.identity.client.configuration.LoggerConfiguration.yml
  name: LoggerConfiguration
  nameWithType: LoggerConfiguration
  fullName: com.microsoft.identity.client.configuration.LoggerConfiguration
  type: Class
  syntax:
    content: public class LoggerConfiguration
- uid: com.microsoft.identity.client.configuration.HttpConfiguration
  parent: com.microsoft.identity.client.configuration
  href: com.microsoft.identity.client.configuration.HttpConfiguration.yml
  name: HttpConfiguration
  nameWithType: HttpConfiguration
  fullName: com.microsoft.identity.client.configuration.HttpConfiguration
  type: Class
  syntax:
    content: public class HttpConfiguration
- uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.yml
  name: IPublicClientApplication.DeviceCodeFlowCallback
  nameWithType: IPublicClientApplication.DeviceCodeFlowCallback
  fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
  type: Interface
  summary: "<p>Callback object used in Device Code Flow. This callback provides the following methods for communicating with the protocol. 1). Receiving authentication information (user_code, verification_uri, and instruction message) via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceCodeFlowCallback#onUserCodeReceived(String, String, String)\"></xref>. 2). Receiving a successful authentication result containing a fresh access token via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceCodeFlowCallback#onTokenReceived(AuthenticationResult)\"></xref>. 3). Receiving an exception detailing what went wrong in the protocol via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceCodeFlowCallback#onError(MsalException)\"></xref>.</p>\r\n<p>Refer to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#acquireTokenWithDeviceCode(String[], DeviceCodeFlowCallback)\"></xref>. </p>"
  syntax:
    content: public interface DeviceCodeFlowCallback
- uid: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: getConfiguration()
  nameWithType: IPublicClientApplication.getConfiguration()
  fullName: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  type: Method
  summary: "<p>Returns the PublicClientConfiguration for this instance of PublicClientApplication.</p>\r\n<p></p>"
  syntax:
    content: public PublicClientApplicationConfiguration getConfiguration()
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
      description: <p>The PublicClientApplicationConfiguration. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: isSharedDevice()
  nameWithType: IPublicClientApplication.isSharedDevice()
  fullName: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  type: Method
  summary: "<p>Returns whether the application is being run on a device that is marked as a shared. Only SingleAccountPublicClientApplications may be used on shared devices</p>\r\n<p></p>"
  syntax:
    content: public boolean isSharedDevice()
    return:
      type: 4fc6e284
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: IPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.AuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: AuthenticationCallback
  nameWithType: AuthenticationCallback
  fullName: com.microsoft.identity.client.AuthenticationCallback
  type: Interface
  summary: "<p>Callback passed with token acquisition. <xref uid=\"com.microsoft.identity.client.IAuthenticationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAuthenticationResult\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalException\"></xref> will be returned back via callback. </p>"
  syntax:
    content: public interface AuthenticationCallback extends SilentAuthenticationCallback
- uid: com.microsoft.identity.client.Prompt
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.Prompt.yml
  name: Prompt
  nameWithType: Prompt
  fullName: com.microsoft.identity.client.Prompt
  type: Enum
  summary: "<p>The UI options that developer can pass during interactive token acquisition requests. </p>"
  syntax:
    content: public enum Prompt
- uid: com.microsoft.identity.client.Prompt.SELECT_ACCOUNT
  parent: com.microsoft.identity.client.Prompt
  href: com.microsoft.identity.client.Prompt.yml
  name: SELECT_ACCOUNT
  nameWithType: Prompt.SELECT_ACCOUNT
  fullName: com.microsoft.identity.client.Prompt.SELECT_ACCOUNT
  type: Field
  summary: "<p>acquireToken will send prompt=select_account to the authorize endpoint. Shows a list of users from which can be selected for authentication. </p>"
  syntax:
    content: public SELECT_ACCOUNT
- uid: com.microsoft.identity.client.AuthenticationCallback.onCancel()
  parent: com.microsoft.identity.client.AuthenticationCallback
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: onCancel()
  nameWithType: AuthenticationCallback.onCancel()
  fullName: com.microsoft.identity.client.AuthenticationCallback.onCancel()
  type: Method
  summary: "<p>Will be called if user cancels the flow. </p>"
  syntax:
    content: public void onCancel()
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onSuccess(final IAuthenticationResult authenticationResult)
  nameWithType: SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  type: Method
  summary: "<p>Authentication finishes successfully.</p>\r\n<p></p>"
  syntax:
    content: public void onSuccess(final IAuthenticationResult authenticationResult)
    parameters:
    - id: authenticationResult
      type: 93de0ef9com.microsoft.identity.client.IAuthenticationResult
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="IAuthenticationResult"></xref> that contains the success response. </p>
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onError(final MsalException exception)
  nameWithType: SilentAuthenticationCallback.onError(final MsalException exception)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException exception)
  type: Method
  summary: "<p>Error occurs during the authentication.</p>\r\n<p></p>"
  syntax:
    content: public void onError(final MsalException exception)
    parameters:
    - id: exception
      type: 93de0ef9com.microsoft.identity.client.exception.MsalException
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalException"></xref> contains the error code, error message and cause if applicable. The exception returned in the callback could be <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalClientException"></xref>, <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalServiceException"></xref> or <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalUiRequiredException"></xref>. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>. </p>\r\n<p>Convey parameters via the AquireTokenParameters object</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
    parameters:
    - id: acquireTokenParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.IAuthenticationResult
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAuthenticationResult.yml
  name: IAuthenticationResult
  nameWithType: IAuthenticationResult
  fullName: com.microsoft.identity.client.IAuthenticationResult
  type: Interface
  syntax:
    content: public interface IAuthenticationResult
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback.yml
  name: IPublicClientApplication.LoadAccountsCallback
  nameWithType: IPublicClientApplication.LoadAccountsCallback
  fullName: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
  type: Interface
  syntax:
    content: public interface LoadAccountsCallback
- uid: com.microsoft.identity.client.BrowserTabActivity
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.BrowserTabActivity.yml
  name: BrowserTabActivity
  nameWithType: BrowserTabActivity
  fullName: com.microsoft.identity.client.BrowserTabActivity
  type: Class
  summary: "<p>MSAL activity class (needs to be public in order to be discoverable by the os) to get the browser redirect with auth code from authorize endpoint. This activity has to be exposed by \"android:exported=true\", and intent filter has to be declared in the manifest for the activity. </p>\r\n<p>When the AuthorizationAgent is launched, and we're redirected back with the redirect uri (the redirect must be unique across apps on a device), the os will fire an intent with the redirect, and the BrowserTabActivity will be launched. <pre>\r\n&lt;intent-filter&gt;\r\n    &lt;action android:name=\"android.intent.action.VIEW\" /&gt;</pre></p>\r\n<p>\r\n  <pre>    To receive implicit intents, have to put the activity in the category of default.\r\n    &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;</pre>\r\n</p>\r\n<p>\r\n  <pre>    The target activity allows itself to be started by a web browser to display data.\r\n    &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;</pre>\r\n</p>\r\n<p>\r\n  <pre>    BrowserTabActivity will be launched when matching the custom url scheme.\r\n    &lt;data android:scheme=\"msalclientid\" android:host=\"auth\" /&gt;\r\n&lt;/intent-filter&gt;\r\n</pre>\r\n</p>"
  syntax:
    content: public class BrowserTabActivity
