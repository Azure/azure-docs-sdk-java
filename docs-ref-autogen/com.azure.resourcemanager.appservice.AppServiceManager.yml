### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.AppServiceManager"
fullName: "com.azure.resourcemanager.appservice.AppServiceManager"
name: "AppServiceManager"
nameWithType: "AppServiceManager"
summary: "Entry point to Azure storage resource management."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.Manager?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.Manager?alt=com.azure.resourcemanager.resources.fluentcore.arm.Manager&text=Manager\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.Manager.environment()?alt=com.azure.resourcemanager.resources.fluentcore.arm.Manager.environment&text=environment\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.Manager.httpPipeline()?alt=com.azure.resourcemanager.resources.fluentcore.arm.Manager.httpPipeline&text=httpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.Manager.resourceManager()?alt=com.azure.resourcemanager.resources.fluentcore.arm.Manager.resourceManager&text=resourceManager\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.Manager.serviceClient()?alt=com.azure.resourcemanager.resources.fluentcore.arm.Manager.serviceClient&text=serviceClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.Manager.subscriptionId()?alt=com.azure.resourcemanager.resources.fluentcore.arm.Manager.subscriptionId&text=subscriptionId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.Manager.withResourceManager(com.azure.resourcemanager.resources.ResourceManager)?alt=com.azure.resourcemanager.resources.fluentcore.arm.Manager.withResourceManager&text=withResourceManager\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class AppServiceManager extends Manager<WebSiteManagementClient>"
methods:
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.appServicePlans()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.appServicePlans()"
  name: "appServicePlans()"
  nameWithType: "AppServiceManager.appServicePlans()"
  syntax: "public AppServicePlans appServicePlans()"
  returns:
    description: "the app service plan management API entry point"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.AppServicePlans?alt=com.azure.resourcemanager.appservice.models.AppServicePlans&text=AppServicePlans\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "AppServiceManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Storage<wbr>Manager that exposes storage resource management API entry points."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use"
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the profile to use"
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AppServiceManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of StorageManager that exposes storage resource management API entry points."
  returns:
    description: "the StorageManager"
    type: "<xref href=\"com.azure.resourcemanager.appservice.AppServiceManager?alt=com.azure.resourcemanager.appservice.AppServiceManager&text=AppServiceManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.authenticate(com.azure.core.http.HttpPipeline,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  name: "authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  nameWithType: "AppServiceManager.authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  summary: "Creates an instance of Storage<wbr>Manager that exposes storage resource management API entry points."
  modifiers:
  - "static"
  parameters:
  - description: "the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> configured with Azure authentication credential."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the profile to use"
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AppServiceManager authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  desc: "Creates an instance of StorageManager that exposes storage resource management API entry points."
  returns:
    description: "the StorageManager"
    type: "<xref href=\"com.azure.resourcemanager.appservice.AppServiceManager?alt=com.azure.resourcemanager.appservice.AppServiceManager&text=AppServiceManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.authorizationManager()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.authorizationManager()"
  name: "authorizationManager()"
  nameWithType: "AppServiceManager.authorizationManager()"
  syntax: "public AuthorizationManager authorizationManager()"
  returns:
    description: "the authorization manager instance."
    type: "<xref href=\"com.azure.resourcemanager.authorization.AuthorizationManager?alt=com.azure.resourcemanager.authorization.AuthorizationManager&text=AuthorizationManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.certificateOrders()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.certificateOrders()"
  name: "certificateOrders()"
  nameWithType: "AppServiceManager.certificateOrders()"
  syntax: "public AppServiceCertificateOrders certificateOrders()"
  returns:
    description: "the certificate order management API entry point"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.AppServiceCertificateOrders?alt=com.azure.resourcemanager.appservice.models.AppServiceCertificateOrders&text=AppServiceCertificateOrders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.certificates()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.certificates()"
  name: "certificates()"
  nameWithType: "AppServiceManager.certificates()"
  syntax: "public AppServiceCertificates certificates()"
  returns:
    description: "the certificate management API entry point"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.AppServiceCertificates?alt=com.azure.resourcemanager.appservice.models.AppServiceCertificates&text=AppServiceCertificates\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.configure()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.configure()"
  name: "configure()"
  nameWithType: "AppServiceManager.configure()"
  summary: "Get a Configurable instance that can be used to create Storage<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static AppServiceManager.Configurable configure()"
  desc: "Get a Configurable instance that can be used to create StorageManager with optional configuration."
  returns:
    description: "the instance allowing configurations"
    type: "<xref href=\"com.azure.resourcemanager.appservice.AppServiceManager.Configurable?alt=com.azure.resourcemanager.appservice.AppServiceManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.dnsZoneManager()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.dnsZoneManager()"
  name: "dnsZoneManager()"
  nameWithType: "AppServiceManager.dnsZoneManager()"
  syntax: "public DnsZoneManager dnsZoneManager()"
  returns:
    description: "the DNS zone manager instance."
    type: "<xref href=\"com.azure.resourcemanager.dns.DnsZoneManager?alt=com.azure.resourcemanager.dns.DnsZoneManager&text=DnsZoneManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.domains()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.domains()"
  name: "domains()"
  nameWithType: "AppServiceManager.domains()"
  syntax: "public AppServiceDomains domains()"
  returns:
    description: "the app service plan management API entry point"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.AppServiceDomains?alt=com.azure.resourcemanager.appservice.models.AppServiceDomains&text=AppServiceDomains\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.functionApps()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.functionApps()"
  name: "functionApps()"
  nameWithType: "AppServiceManager.functionApps()"
  syntax: "public FunctionApps functionApps()"
  returns:
    description: "the web app management API entry point"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.FunctionApps?alt=com.azure.resourcemanager.appservice.models.FunctionApps&text=FunctionApps\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.keyVaultManager()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.keyVaultManager()"
  name: "keyVaultManager()"
  nameWithType: "AppServiceManager.keyVaultManager()"
  syntax: "public KeyVaultManager keyVaultManager()"
  returns:
    description: "the key vault manager instance."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.KeyVaultManager?alt=com.azure.resourcemanager.keyvault.KeyVaultManager&text=KeyVaultManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.storageManager()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.storageManager()"
  name: "storageManager()"
  nameWithType: "AppServiceManager.storageManager()"
  syntax: "public StorageManager storageManager()"
  returns:
    description: "the storage manager instance."
    type: "<xref href=\"com.azure.resourcemanager.storage.StorageManager?alt=com.azure.resourcemanager.storage.StorageManager&text=StorageManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.AppServiceManager.webApps()"
  fullName: "com.azure.resourcemanager.appservice.AppServiceManager.webApps()"
  name: "webApps()"
  nameWithType: "AppServiceManager.webApps()"
  syntax: "public WebApps webApps()"
  returns:
    description: "the web app management API entry point"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.WebApps?alt=com.azure.resourcemanager.appservice.models.WebApps&text=WebApps\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to Azure storage resource management."
metadata: {}
package: "com.azure.resourcemanager.appservice"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.19.0
