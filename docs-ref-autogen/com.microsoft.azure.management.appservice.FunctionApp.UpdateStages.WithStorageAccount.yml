### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.appservice.FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
  name: withExistingStorageAccount(StorageAccount storageAccount)
  nameWithType: FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
  parameters:
  - description: <p>the storage account to use </p>
    name: storageAccount
    type: <xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the function app update </p>
    type: <xref href="com.microsoft.azure.management.appservice.FunctionApp.Update?alt=com.microsoft.azure.management.appservice.FunctionApp.Update&text=FunctionApp.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies the storage account to use for the function app. </p>
  syntax: public Update withExistingStorageAccount(StorageAccount storageAccount)
  uid: com.microsoft.azure.management.appservice.FunctionApp.UpdateStages.WithStorageAccount.withExistingStorageAccount(StorageAccount)
- fullName: com.microsoft.azure.management.appservice.FunctionApp.UpdateStages.WithStorageAccount.withNewStorageAccount(String name, com.microsoft.azure.management.storage.SkuName sku)
  name: withNewStorageAccount(String name, com.microsoft.azure.management.storage.SkuName sku)
  nameWithType: FunctionApp.UpdateStages.WithStorageAccount.withNewStorageAccount(String name, com.microsoft.azure.management.storage.SkuName sku)
  parameters:
  - description: <p>the name of the storage account </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the sku of the storage account </p>
    name: sku
    type: <xref href="com.microsoft.azure.management.storage.SkuName?alt=com.microsoft.azure.management.storage.SkuName&text=SkuName" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the function app update </p>
    type: <xref href="com.microsoft.azure.management.appservice.FunctionApp.Update?alt=com.microsoft.azure.management.appservice.FunctionApp.Update&text=FunctionApp.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new storage account to use for the function app. </p>
  syntax: public Update withNewStorageAccount(String name, com.microsoft.azure.management.storage.SkuName sku)
  uid: com.microsoft.azure.management.appservice.FunctionApp.UpdateStages.WithStorageAccount.withNewStorageAccount(String,com.microsoft.azure.management.storage.SkuName)
nameWithType: FunctionApp.UpdateStages.WithStorageAccount
syntax: public interface WithStorageAccount
type: interface
uid: com.microsoft.azure.management.appservice.FunctionApp.UpdateStages.WithStorageAccount
fullName: com.microsoft.azure.management.appservice.FunctionApp.UpdateStages.WithStorageAccount
name: FunctionApp.UpdateStages.WithStorageAccount
package: com.microsoft.azure.management.appservice
summary: <p>A function app definition allowing storage account to be specified. A storage account is required for storing function execution runtime, triggers, and logs. </p>
metadata: {}
