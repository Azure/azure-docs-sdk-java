### YamlMime:JavaMember
uid: "com.azure.resourcemanager.cosmos.models.IndexingPolicy.withCompositeIndexes*"
fullName: "com.azure.resourcemanager.cosmos.models.IndexingPolicy.withCompositeIndexes"
name: "withCompositeIndexes"
nameWithType: "IndexingPolicy.withCompositeIndexes"
members:
- uid: "com.azure.resourcemanager.cosmos.models.IndexingPolicy.withCompositeIndexes(java.util.List<java.util.List<com.azure.resourcemanager.cosmos.models.CompositePath>>)"
  fullName: "com.azure.resourcemanager.cosmos.models.IndexingPolicy.withCompositeIndexes(List<List<CompositePath>> compositeIndexes)"
  name: "withCompositeIndexes(List<List<CompositePath>> compositeIndexes)"
  nameWithType: "IndexingPolicy.withCompositeIndexes(List<List<CompositePath>> compositeIndexes)"
  summary: "Set the compositeIndexes property: List of composite path list."
  parameters:
  - description: "the compositeIndexes value to set."
    name: "compositeIndexes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.models.CompositePath?alt=com.azure.resourcemanager.cosmos.models.CompositePath&text=CompositePath\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public IndexingPolicy withCompositeIndexes(List<List<CompositePath>> compositeIndexes)"
  returns:
    description: "the IndexingPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.IndexingPolicy?alt=com.azure.resourcemanager.cosmos.models.IndexingPolicy&text=IndexingPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.cosmos.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.1.0
