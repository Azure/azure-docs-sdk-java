### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.implementation.models.StorageErrorError"
fullName: "com.azure.storage.file.datalake.implementation.models.StorageErrorError"
name: "StorageErrorError"
nameWithType: "StorageErrorError"
summary: "The service error response object."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StorageErrorError"
constructors:
- "com.azure.storage.file.datalake.implementation.models.StorageErrorError.StorageErrorError()"
methods:
- "com.azure.storage.file.datalake.implementation.models.StorageErrorError.getCode()"
- "com.azure.storage.file.datalake.implementation.models.StorageErrorError.getMessage()"
- "com.azure.storage.file.datalake.implementation.models.StorageErrorError.setCode(java.lang.String)"
- "com.azure.storage.file.datalake.implementation.models.StorageErrorError.setMessage(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.storage.file.datalake.implementation.models"
artifact: com.azure:azure-storage-file-datalake:12.4.1
