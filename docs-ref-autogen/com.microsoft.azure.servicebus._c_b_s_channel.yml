items:
- uid: com.microsoft.azure.servicebus._c_b_s_channel
  id: _c_b_s_channel
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus._c_b_s_channel.CBSChannel(final ISessionProvider,final IAmqpConnection,final String)
  - com.microsoft.azure.servicebus._c_b_s_channel.close(final ReactorDispatcher,final IOperationResult<Void, Exception>)
  - com.microsoft.azure.servicebus._c_b_s_channel.sendToken(final ReactorDispatcher,final String,final String,final IOperationResult<Void, Exception>)
  href: com.microsoft.azure.servicebus._c_b_s_channel.yml
  langs:
  - java
  name: CBSChannel
  nameWithType: CBSChannel
  fullName: com.microsoft.azure.servicebus.CBSChannel
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/CBSChannel.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/CBSChannel.java
    startLine: 25
  package: com.microsoft.azure.servicebus
  syntax:
    content: public class CBSChannel
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - com.microsoft.azure.servicebus._c_b_s_channel.connectionEventDispatcher()
  - com.microsoft.azure.servicebus._c_b_s_channel.innerChannel()
  - com.microsoft.azure.servicebus._c_b_s_channel.sessionProvider()
- uid: com.microsoft.azure.servicebus._c_b_s_channel.CBSChannel(final ISessionProvider,final IAmqpConnection,final String)
  id: CBSChannel(final ISessionProvider,final IAmqpConnection,final String)
  parent: com.microsoft.azure.servicebus._c_b_s_channel
  href: com.microsoft.azure.servicebus._c_b_s_channel.yml
  langs:
  - java
  name: CBSChannel(final ISessionProvider sessionProvider, final IAmqpConnection connection, final String linkName)
  nameWithType: CBSChannel.CBSChannel(final ISessionProvider sessionProvider, final IAmqpConnection connection, final String linkName)
  fullName: com.microsoft.azure.servicebus.CBSChannel.CBSChannel(final ISessionProvider sessionProvider, final IAmqpConnection connection, final String linkName)
  overload: com.microsoft.azure.servicebus._c_b_s_channel.CBSChannel*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/CBSChannel.java
    startLine: 31
  package: com.microsoft.azure.servicebus
  syntax:
    content: public CBSChannel(final ISessionProvider sessionProvider, final IAmqpConnection connection, final String linkName)
    parameters:
    - id: sessionProvider
      type: e85aae42
    - id: connection
      type: 93de0ef9com.microsoft.azure.servicebus.amqp._i_amqp_connection
    - id: linkName
      type: 3d93591e
- uid: com.microsoft.azure.servicebus._c_b_s_channel.close(final ReactorDispatcher,final IOperationResult<Void, Exception>)
  id: close(final ReactorDispatcher,final IOperationResult<Void, Exception>)
  parent: com.microsoft.azure.servicebus._c_b_s_channel
  href: com.microsoft.azure.servicebus._c_b_s_channel.yml
  langs:
  - java
  name: close(final ReactorDispatcher reactorDispatcher, final IOperationResult<Void, Exception> closeCallback)
  nameWithType: CBSChannel.close(final ReactorDispatcher reactorDispatcher, final IOperationResult<Void, Exception> closeCallback)
  fullName: void com.microsoft.azure.servicebus.CBSChannel.close(final ReactorDispatcher reactorDispatcher, final IOperationResult<Void, Exception> closeCallback)
  overload: com.microsoft.azure.servicebus._c_b_s_channel.close*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/CBSChannel.java
    startLine: 92
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void close(final ReactorDispatcher reactorDispatcher, final IOperationResult<Void, Exception> closeCallback)
    parameters:
    - id: reactorDispatcher
      type: 93de0ef9com.microsoft.azure.servicebus.amqp._reactor_dispatcher
    - id: closeCallback
      type: 93de0ef9com.microsoft.azure.servicebus.amqp._i_operation_result372b00f0
- uid: com.microsoft.azure.servicebus._c_b_s_channel.sendToken(final ReactorDispatcher,final String,final String,final IOperationResult<Void, Exception>)
  id: sendToken(final ReactorDispatcher,final String,final String,final IOperationResult<Void, Exception>)
  parent: com.microsoft.azure.servicebus._c_b_s_channel
  href: com.microsoft.azure.servicebus._c_b_s_channel.yml
  langs:
  - java
  name: sendToken(final ReactorDispatcher dispatcher, final String token, final String tokenAudience, final IOperationResult<Void, Exception> sendTokenCallback)
  nameWithType: CBSChannel.sendToken(final ReactorDispatcher dispatcher, final String token, final String tokenAudience, final IOperationResult<Void, Exception> sendTokenCallback)
  fullName: void com.microsoft.azure.servicebus.CBSChannel.sendToken(final ReactorDispatcher dispatcher, final String token, final String tokenAudience, final IOperationResult<Void, Exception> sendTokenCallback)
  overload: com.microsoft.azure.servicebus._c_b_s_channel.sendToken*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/servicebus/CBSChannel.java
    startLine: 44
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void sendToken(final ReactorDispatcher dispatcher, final String token, final String tokenAudience, final IOperationResult<Void, Exception> sendTokenCallback)
    parameters:
    - id: dispatcher
      type: 93de0ef9com.microsoft.azure.servicebus.amqp._reactor_dispatcher
    - id: token
      type: 3d93591e
    - id: tokenAudience
      type: 3d93591e
    - id: sendTokenCallback
      type: 93de0ef9com.microsoft.azure.servicebus.amqp._i_operation_result372b00f0
references:
- uid: e85aae42
  spec.java:
  - name: final ISessionProvider
    fullName: final ISessionProvider
- uid: 93de0ef9com.microsoft.azure.servicebus.amqp._i_amqp_connection
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.servicebus.amqp._i_amqp_connection
    name: IAmqpConnection
    fullName: com.microsoft.azure.servicebus.amqp.IAmqpConnection
    href: com.microsoft.azure.servicebus.amqp._i_amqp_connection.yml
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.servicebus._c_b_s_channel.CBSChannel*
  name: CBSChannel
  nameWithType: CBSChannel.CBSChannel
  fullName: com.microsoft.azure.servicebus.CBSChannel.CBSChannel
  package: com.microsoft.azure.servicebus
- uid: 93de0ef9com.microsoft.azure.servicebus.amqp._reactor_dispatcher
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.servicebus.amqp._reactor_dispatcher
    name: ReactorDispatcher
    fullName: com.microsoft.azure.servicebus.amqp.ReactorDispatcher
    href: com.microsoft.azure.servicebus.amqp._reactor_dispatcher.yml
- uid: 93de0ef9com.microsoft.azure.servicebus.amqp._i_operation_result372b00f0
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.servicebus.amqp._i_operation_result
    name: IOperationResult
    fullName: com.microsoft.azure.servicebus.amqp.IOperationResult
    href: com.microsoft.azure.servicebus.amqp._i_operation_result.yml
  - name: <Void, Exception>
    fullName: <Void, Exception>
- uid: com.microsoft.azure.servicebus._c_b_s_channel.sendToken*
  name: sendToken
  nameWithType: CBSChannel.sendToken
  fullName: void com.microsoft.azure.servicebus.CBSChannel.sendToken
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._c_b_s_channel.close*
  name: close
  nameWithType: CBSChannel.close
  fullName: void com.microsoft.azure.servicebus.CBSChannel.close
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._c_b_s_channel.connectionEventDispatcher()
- uid: com.microsoft.azure.servicebus._c_b_s_channel.innerChannel()
- uid: com.microsoft.azure.servicebus._c_b_s_channel.sessionProvider()
- uid: com.microsoft.azure.servicebus._fault_tolerant_object
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._fault_tolerant_object.yml
  name: FaultTolerantObject<T>
  nameWithType: FaultTolerantObject<T>
  fullName: com.microsoft.azure.servicebus.FaultTolerantObject<T>
  type: Class
  syntax:
    content: public class FaultTolerantObject<T extends IIOObject>
    typeParameters:
    - type: 8ce1ecb9
- uid: com.microsoft.azure.servicebus.amqp._request_response_channel
  parent: com.microsoft.azure.servicebus.amqp
  href: com.microsoft.azure.servicebus.amqp._request_response_channel.yml
  name: RequestResponseChannel
  nameWithType: RequestResponseChannel
  fullName: com.microsoft.azure.servicebus.amqp.RequestResponseChannel
  type: Class
  syntax:
    content: public class RequestResponseChannel
- uid: com.microsoft.azure.servicebus.amqp._i_amqp_connection
  parent: com.microsoft.azure.servicebus.amqp
  href: com.microsoft.azure.servicebus.amqp._i_amqp_connection.yml
  name: IAmqpConnection
  nameWithType: IAmqpConnection
  fullName: com.microsoft.azure.servicebus.amqp.IAmqpConnection
  type: Interface
  syntax:
    content: public interface IAmqpConnection
- uid: com.microsoft.azure.servicebus.amqp._reactor_dispatcher
  parent: com.microsoft.azure.servicebus.amqp
  href: com.microsoft.azure.servicebus.amqp._reactor_dispatcher.yml
  name: ReactorDispatcher
  nameWithType: ReactorDispatcher
  fullName: com.microsoft.azure.servicebus.amqp.ReactorDispatcher
  type: Class
  summary: >-
    <p>

      <ref refid="" kindref="compound">Reactor</ref> is not thread-safe - all calls to <ref refid="" kindref="compound">Proton</ref> API's should be - on the Reactor Thread. <ref refid="" kindref="compound">Reactor</ref> works out-of-box for all event driven API - ex: onReceive - which could raise upon onSocketRead. <ref refid="" kindref="compound">Reactor</ref> didn't support API's like Send() out-of-box - which could potentially run on different thread to that of Reactor. So, the following utility class is used to generate an Event to hook into <ref refid="" kindref="compound">Reactor</ref>'s event delegation pattern. It uses a <ref refid="" kindref="compound">Pipe</ref> as the IO on which Reactor Listens to. Cardinality: multiple <xref href="com.microsoft.azure.servicebus.amqp._reactor_dispatcher" data-throw-if-not-resolved="false"></xref>'s could be attached to 1 <ref refid="" kindref="compound">Reactor</ref>. Each <xref href="com.microsoft.azure.servicebus.amqp._reactor_dispatcher" data-throw-if-not-resolved="false"></xref> should be initialized Synchronously - as it calls API in <ref refid="" kindref="compound">Reactor</ref> which is not thread-safe. </p>
  syntax:
    content: public class ReactorDispatcher
- uid: com.microsoft.azure.servicebus.amqp._i_operation_result
  parent: com.microsoft.azure.servicebus.amqp
  href: com.microsoft.azure.servicebus.amqp._i_operation_result.yml
  name: IOperationResult<T,E>
  nameWithType: IOperationResult<T,E>
  fullName: com.microsoft.azure.servicebus.amqp.IOperationResult<T,E>
  type: Interface
  syntax:
    content: public interface IOperationResult<T,E extends Throwable>
    typeParameters:
    - type: 8ce1ecb9
    - type: 0ca03e3a
