### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.SpeechConfig"
fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig"
name: "SpeechConfig"
nameWithType: "SpeechConfig"
summary: "Speech configuration."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **SpeechConfig**</br> implements <xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.SpeechConfig(long)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.SpeechConfig(long handleValue)"
  name: "SpeechConfig(long handleValue)"
  nameWithType: "SpeechConfig.SpeechConfig(long handleValue)"
  summary: "Creates an instance of speech config."
  modifiers:
  - "protected"
  parameters:
  - description: "PROTECTED"
    name: "handleValue"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected SpeechConfig(long handleValue)"
  desc: "Creates an instance of speech config."
fields:
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.propertyHandle"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.propertyHandle"
  name: "propertyHandle"
  nameWithType: "SpeechConfig.propertyHandle"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected PropertyCollection propertyHandle"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigClass"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigClass"
  name: "speechConfigClass"
  nameWithType: "SpeechConfig.speechConfigClass"
  summary: "Accessor to load the native library."
  modifiers:
  - "static"
  field:
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public static Class<?> speechConfigClass"
  desc: "Accessor to load the native library. Holds the class active so the class GC does not reclaim it (and the local variables!)"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigHandle"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigHandle"
  name: "speechConfigHandle"
  nameWithType: "SpeechConfig.speechConfigHandle"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected SafeHandle speechConfigHandle"
  desc: "PROTECTED"
methods:
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.close()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.close()"
  name: "close()"
  nameWithType: "SpeechConfig.close()"
  summary: "Dispose of associated resources."
  syntax: "public void close()"
  desc: "Dispose of associated resources."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.enableAudioLogging()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.enableAudioLogging()"
  name: "enableAudioLogging()"
  nameWithType: "SpeechConfig.enableAudioLogging()"
  summary: "Enable audio logging in service."
  syntax: "public void enableAudioLogging()"
  desc: "Enable audio logging in service. Added in version 1.5.0."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.enableDictation()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.enableDictation()"
  name: "enableDictation()"
  nameWithType: "SpeechConfig.enableDictation()"
  summary: "Enable dictation."
  syntax: "public void enableDictation()"
  desc: "Enable dictation. Only supported in speech continuous recognition. Added in version 1.5.0."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromAuthorizationToken(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromAuthorizationToken(String authorizationToken, String region)"
  name: "fromAuthorizationToken(String authorizationToken, String region)"
  nameWithType: "SpeechConfig.fromAuthorizationToken(String authorizationToken, String region)"
  summary: "Creates an instance of a speech config with specified authorization token and service region."
  modifiers:
  - "static"
  parameters:
  - description: "The authorization token."
    name: "authorizationToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>)."
    name: "region"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechConfig fromAuthorizationToken(String authorizationToken, String region)"
  desc: "Creates an instance of a speech config with specified authorization token and service region. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created. For recognizers that have been created before, you need to set authorization token of the corresponding recognizer to refresh the token. Otherwise, the recognizers will encounter errors during recognition."
  returns:
    description: "A speech config instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(URI endpoint)"
  name: "fromEndpoint(URI endpoint)"
  nameWithType: "SpeechConfig.fromEndpoint(URI endpoint)"
  summary: "Creates an instance of the speech config with specified endpoint."
  modifiers:
  - "static"
  parameters:
  - description: "The service endpoint to connect to."
    name: "endpoint"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechConfig fromEndpoint(URI endpoint)"
  desc: "Creates an instance of the speech config with specified endpoint. This method is intended only for users who use a non-standard service endpoint or parameters. Note: The query parameters specified in the endpoint URI are not changed, even if they are set by any other APIs. For example, if the recognition language is defined in URI as query parameter \"language=de-DE\", and also set by setSpeechRecognitionLanguage(\"en-US\"), the language setting in URI takes precedence, and the effective language is \"de-DE\". Only the parameters that are not specified in the endpoint URI can be set by other APIs. Note: if the endpoint requires a subscription key for authentication, please use fromEndpoint(java.net.URI, String) to pass the subscription key as parameter. To use an authorization token with fromEndpoint, use this method to create a SpeechConfig instance, and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.5.0."
  returns:
    description: "A speech config instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(URI endpoint, String subscriptionKey)"
  name: "fromEndpoint(URI endpoint, String subscriptionKey)"
  nameWithType: "SpeechConfig.fromEndpoint(URI endpoint, String subscriptionKey)"
  summary: "Creates an instance of the speech config with specified endpoint and subscription key."
  modifiers:
  - "static"
  parameters:
  - description: "The service endpoint to connect to."
    name: "endpoint"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subscription key."
    name: "subscriptionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechConfig fromEndpoint(URI endpoint, String subscriptionKey)"
  desc: "Creates an instance of the speech config with specified endpoint and subscription key. This method is intended only for users who use a non-standard service endpoint or parameters. Note: The query parameters specified in the endpoint URI are not changed, even if they are set by any other APIs. For example, if the recognition language is defined in URI as query parameter \"language=de-DE\", and also set by setSpeechRecognitionLanguage(\"en-US\"), the language setting in URI takes precedence, and the effective language is \"de-DE\". Only the parameters that are not specified in the endpoint URI can be set by other APIs. Note: To use an authorization token with fromEndpoint, please use fromEndpoint(java.net.URI), and then call setAuthorizationToken() on the created SpeechConfig instance."
  returns:
    description: "A speech config instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(URI host)"
  name: "fromHost(URI host)"
  nameWithType: "SpeechConfig.fromHost(URI host)"
  summary: "Creates an instance of the speech config with specified host."
  modifiers:
  - "static"
  parameters:
  - description: "The service host to connect to. Format is \"protocol://host:port\" where \":port\" is optional."
    name: "host"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechConfig fromHost(URI host)"
  desc: "Creates an instance of the speech config with specified host. This method is intended only for users who use a non-default service host. Standard resource path will be assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead. Note: Query parameters are not allowed in the host URI and must be set by other APIs. Note: If the host requires a subscription key for authentication, use fromHost(java.net.URI, String) to pass the subscription key as parameter. To use an authorization token with fromHost, use this method to create a SpeechConfig instance, and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.8.0."
  returns:
    description: "A speech config instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(URI host, String subscriptionKey)"
  name: "fromHost(URI host, String subscriptionKey)"
  nameWithType: "SpeechConfig.fromHost(URI host, String subscriptionKey)"
  summary: "Creates an instance of the speech config with specified host and subscription key."
  modifiers:
  - "static"
  parameters:
  - description: "The service host to connect to. Format is \"protocol://host:port\" where \":port\" is optional."
    name: "host"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subscription key."
    name: "subscriptionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechConfig fromHost(URI host, String subscriptionKey)"
  desc: "Creates an instance of the speech config with specified host and subscription key. This method is intended only for users who use a non-default service host. Standard resource path will be assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead. Note: Query parameters are not allowed in the host URI and must be set by other APIs. Note: To use an authorization token with fromHost, use fromHost(java.net.URI), and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.8.0."
  returns:
    description: "A speech config instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromSubscription(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromSubscription(String subscriptionKey, String region)"
  name: "fromSubscription(String subscriptionKey, String region)"
  nameWithType: "SpeechConfig.fromSubscription(String subscriptionKey, String region)"
  summary: "Creates an instance of a speech config with specified subscription key and service region."
  modifiers:
  - "static"
  parameters:
  - description: "The subscription key."
    name: "subscriptionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>)."
    name: "region"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechConfig fromSubscription(String subscriptionKey, String region)"
  desc: "Creates an instance of a speech config with specified subscription key and service region."
  returns:
    description: "A speech config instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getAuthorizationToken()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getAuthorizationToken()"
  name: "getAuthorizationToken()"
  nameWithType: "SpeechConfig.getAuthorizationToken()"
  summary: "Gets the authorization token."
  syntax: "public String getAuthorizationToken()"
  desc: "Gets the authorization token."
  returns:
    description: "The authorization token."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getEndpointId()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getEndpointId()"
  name: "getEndpointId()"
  nameWithType: "SpeechConfig.getEndpointId()"
  summary: "Gets the endpoint ID of a customized speech model that is used for speech recognition, or a custom voice model for speech synthesis."
  syntax: "public String getEndpointId()"
  desc: "Gets the endpoint ID of a customized speech model that is used for speech recognition, or a custom voice model for speech synthesis."
  returns:
    description: "The endpoint ID."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getImpl()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getImpl()"
  name: "getImpl()"
  nameWithType: "SpeechConfig.getImpl()"
  summary: "protected handle to Speech<wbr>Config"
  syntax: "public SafeHandle getImpl()"
  desc: "protected handle to SpeechConfig"
  returns:
    description: "speechConfigHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getOutputFormat()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getOutputFormat()"
  name: "getOutputFormat()"
  nameWithType: "SpeechConfig.getOutputFormat()"
  summary: "Gets speech recognition output format (simple or detailed)."
  syntax: "public OutputFormat getOutputFormat()"
  desc: "Gets speech recognition output format (simple or detailed). Note: This output format is for speech recognition results, use <xref uid=\"com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpeechConfig#setSpeechSynthesisOutputFormat\"></xref> to set synthesized audio output format."
  returns:
    description: "Returns the speech recognition output format."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.OutputFormat?alt=com.microsoft.cognitiveservices.speech.OutputFormat&text=OutputFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getProperty(com.microsoft.cognitiveservices.speech.PropertyId)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getProperty(PropertyId id)"
  name: "getProperty(PropertyId id)"
  nameWithType: "SpeechConfig.getProperty(PropertyId id)"
  summary: "Gets the property by property<wbr>Id."
  parameters:
  - description: "PropertyId of the property."
    name: "id"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.PropertyId?alt=com.microsoft.cognitiveservices.speech.PropertyId&text=PropertyId\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getProperty(PropertyId id)"
  desc: "Gets the property by propertyId. Added in version 1.3.0."
  returns:
    description: "The value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getProperty(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getProperty(String name)"
  name: "getProperty(String name)"
  nameWithType: "SpeechConfig.getProperty(String name)"
  summary: "Gets a named property as value."
  parameters:
  - description: "the name of the property."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getProperty(String name)"
  desc: "Gets a named property as value."
  returns:
    description: "The value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechRecognitionLanguage()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechRecognitionLanguage()"
  name: "getSpeechRecognitionLanguage()"
  nameWithType: "SpeechConfig.getSpeechRecognitionLanguage()"
  summary: "Gets the speech recognition language"
  syntax: "public String getSpeechRecognitionLanguage()"
  desc: "Gets the speech recognition language"
  returns:
    description: "Returns the recognition language."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisLanguage()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisLanguage()"
  name: "getSpeechSynthesisLanguage()"
  nameWithType: "SpeechConfig.getSpeechSynthesisLanguage()"
  summary: "Gets the speech synthesis language."
  syntax: "public String getSpeechSynthesisLanguage()"
  desc: "Gets the speech synthesis language. Added in version 1.7.0"
  returns:
    description: "Returns the synthesis language."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisOutputFormat()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisOutputFormat()"
  name: "getSpeechSynthesisOutputFormat()"
  nameWithType: "SpeechConfig.getSpeechSynthesisOutputFormat()"
  summary: "Gets the speech synthesis output format."
  syntax: "public String getSpeechSynthesisOutputFormat()"
  desc: "Gets the speech synthesis output format. Added in version 1.7.0"
  returns:
    description: "Returns the synthesis output format."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisVoiceName()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisVoiceName()"
  name: "getSpeechSynthesisVoiceName()"
  nameWithType: "SpeechConfig.getSpeechSynthesisVoiceName()"
  summary: "Gets the speech synthesis voice name."
  syntax: "public String getSpeechSynthesisVoiceName()"
  desc: "Gets the speech synthesis voice name. Added in version 1.7.0"
  returns:
    description: "Returns the synthesis voice name."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.requestWordLevelTimestamps()"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.requestWordLevelTimestamps()"
  name: "requestWordLevelTimestamps()"
  nameWithType: "SpeechConfig.requestWordLevelTimestamps()"
  summary: "Includes word-level timestamps."
  syntax: "public void requestWordLevelTimestamps()"
  desc: "Includes word-level timestamps. Added in version 1.5.0."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setAuthorizationToken(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setAuthorizationToken(String value)"
  name: "setAuthorizationToken(String value)"
  nameWithType: "SpeechConfig.setAuthorizationToken(String value)"
  summary: "Sets the authorization token."
  parameters:
  - description: "the authorization token."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setAuthorizationToken(String value)"
  desc: "Sets the authorization token. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created. For recognizers that have been created before, you need to set authorization token of the corresponding recognizer to refresh the token. Otherwise, the recognizers will encounter errors during recognition."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setEndpointId(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setEndpointId(String value)"
  name: "setEndpointId(String value)"
  nameWithType: "SpeechConfig.setEndpointId(String value)"
  summary: "Sets the endpoint ID of a customized speech model that is used for speech recognition, or a custom voice model for speech synthesis."
  parameters:
  - description: "the endpoint ID."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setEndpointId(String value)"
  desc: "Sets the endpoint ID of a customized speech model that is used for speech recognition, or a custom voice model for speech synthesis."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setOutputFormat(com.microsoft.cognitiveservices.speech.OutputFormat)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setOutputFormat(OutputFormat format)"
  name: "setOutputFormat(OutputFormat format)"
  nameWithType: "SpeechConfig.setOutputFormat(OutputFormat format)"
  summary: "Sets speech recognition output format (simple or detailed)."
  parameters:
  - description: "The speech recognition output format."
    name: "format"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.OutputFormat?alt=com.microsoft.cognitiveservices.speech.OutputFormat&text=OutputFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setOutputFormat(OutputFormat format)"
  desc: "Sets speech recognition output format (simple or detailed). Note: This output format is for speech recognition results, use <xref uid=\"com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpeechConfig#setSpeechSynthesisOutputFormat\"></xref> to set synthesized audio output format."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setProfanity(com.microsoft.cognitiveservices.speech.ProfanityOption)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setProfanity(ProfanityOption profanity)"
  name: "setProfanity(ProfanityOption profanity)"
  nameWithType: "SpeechConfig.setProfanity(ProfanityOption profanity)"
  summary: "Sets profanity option."
  parameters:
  - description: "the property option to set."
    name: "profanity"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.ProfanityOption?alt=com.microsoft.cognitiveservices.speech.ProfanityOption&text=ProfanityOption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setProfanity(ProfanityOption profanity)"
  desc: "Sets profanity option. Added in version 1.5.0."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setProperty(com.microsoft.cognitiveservices.speech.PropertyId,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setProperty(PropertyId id, String value)"
  name: "setProperty(PropertyId id, String value)"
  nameWithType: "SpeechConfig.setProperty(PropertyId id, String value)"
  summary: "Sets the property by property<wbr>Id."
  parameters:
  - description: "PropertyId of the property."
    name: "id"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.PropertyId?alt=com.microsoft.cognitiveservices.speech.PropertyId&text=PropertyId\" data-throw-if-not-resolved=\"False\" />"
  - description: "The value."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setProperty(PropertyId id, String value)"
  desc: "Sets the property by propertyId. Added in version 1.3.0."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setProperty(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setProperty(String name, String value)"
  name: "setProperty(String name, String value)"
  nameWithType: "SpeechConfig.setProperty(String name, String value)"
  summary: "Sets a named property as value."
  parameters:
  - description: "the name of the property."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the value."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setProperty(String name, String value)"
  desc: "Sets a named property as value."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setProxy(java.lang.String,int,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)"
  name: "setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)"
  nameWithType: "SpeechConfig.setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)"
  summary: "Sets proxy configuration Added in version 1.1.0."
  parameters:
  - description: "the host name of the proxy server, without the protocol scheme (http://)"
    name: "proxyHostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the port number of the proxy server."
    name: "proxyPort"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the user name of the proxy server. Use empty string if no user name is needed."
    name: "proxyUserName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the password of the proxy server. Use empty string if no user password is needed."
    name: "proxyPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)"
  desc: "Sets proxy configuration Added in version 1.1.0. Note: Proxy functionality is not available on macOS. This function will have no effect on this platform."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setServiceProperty(java.lang.String,java.lang.String,com.microsoft.cognitiveservices.speech.ServicePropertyChannel)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setServiceProperty(String name, String value, ServicePropertyChannel channel)"
  name: "setServiceProperty(String name, String value, ServicePropertyChannel channel)"
  nameWithType: "SpeechConfig.setServiceProperty(String name, String value, ServicePropertyChannel channel)"
  summary: "Sets a property value that will be passed to service using the specified channel."
  parameters:
  - description: "the property name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the property value."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the channel used to pass the specified property to service."
    name: "channel"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.ServicePropertyChannel?alt=com.microsoft.cognitiveservices.speech.ServicePropertyChannel&text=ServicePropertyChannel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setServiceProperty(String name, String value, ServicePropertyChannel channel)"
  desc: "Sets a property value that will be passed to service using the specified channel. Added in version 1.5.0."
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechRecognitionLanguage(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechRecognitionLanguage(String value)"
  name: "setSpeechRecognitionLanguage(String value)"
  nameWithType: "SpeechConfig.setSpeechRecognitionLanguage(String value)"
  summary: "Sets the speech recognition language"
  parameters:
  - description: "the language identifier in BCP-47 format."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSpeechRecognitionLanguage(String value)"
  desc: "Sets the speech recognition language"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisLanguage(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisLanguage(String value)"
  name: "setSpeechSynthesisLanguage(String value)"
  nameWithType: "SpeechConfig.setSpeechSynthesisLanguage(String value)"
  summary: "Sets the speech synthesis language."
  parameters:
  - description: "the language identifier in BCP-47 format (e.g. en-US)."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSpeechSynthesisLanguage(String value)"
  desc: "Sets the speech synthesis language. Added in version 1.7.0"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat(com.microsoft.cognitiveservices.speech.SpeechSynthesisOutputFormat)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)"
  name: "setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)"
  nameWithType: "SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)"
  summary: "Sets the speech synthesis output format."
  parameters:
  - description: "The synthesis output format ID (e.g. Riff16Khz16BitMonoPcm)."
    name: "value"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechSynthesisOutputFormat?alt=com.microsoft.cognitiveservices.speech.SpeechSynthesisOutputFormat&text=SpeechSynthesisOutputFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)"
  desc: "Sets the speech synthesis output format. Added in version 1.7.0"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisVoiceName(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisVoiceName(String value)"
  name: "setSpeechSynthesisVoiceName(String value)"
  nameWithType: "SpeechConfig.setSpeechSynthesisVoiceName(String value)"
  summary: "Sets the speech synthesis voice name."
  parameters:
  - description: "The speech synthesis voice name."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSpeechSynthesisVoiceName(String value)"
  desc: "Sets the speech synthesis voice name. Added in version 1.7.0"
type: "class"
desc: "Speech configuration. Note: close() must be called in order to release underlying resources held by the object. Changed in version 1.7.0"
implements:
- "<xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.cognitiveservices.speech"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.24.2
