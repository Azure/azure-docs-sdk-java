### YamlMime:JavaType
fields:
- field:
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigClass
  name: speechConfigClass
  nameWithType: SpeechConfig.speechConfigClass
  summary: <p>Accessor to load the native library. Holds the class active so the class GC does not reclaim it (and the local variables!) </p>
  syntax: public static Class<?> speechConfigClass= null
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigClass
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.close()
  name: close()
  nameWithType: SpeechConfig.close()
  summary: <p>Dispose of associated resources. </p>
  syntax: public void close()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.close()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.enableAudioLogging()
  name: enableAudioLogging()
  nameWithType: SpeechConfig.enableAudioLogging()
  summary: <p>Enable audio logging in service. Added in version 1.5.0. </p>
  syntax: public void enableAudioLogging()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.enableAudioLogging()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.enableDictation()
  name: enableDictation()
  nameWithType: SpeechConfig.enableDictation()
  summary: <p>Enable dictation. Only supported in speech continuous recognition. Added in version 1.5.0. </p>
  syntax: public void enableDictation()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.enableDictation()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromAuthorizationToken(String authorizationToken, String region)
  name: fromAuthorizationToken(String authorizationToken, String region)
  nameWithType: SpeechConfig.fromAuthorizationToken(String authorizationToken, String region)
  parameters:
  - description: <p>The authorization token. </p>
    name: authorizationToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>). </p>
    name: region
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of a speech config with specified authorization token and service region. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created. For recognizers that have been created before, you need to set authorization token of the corresponding recognizer to refresh the token. Otherwise, the recognizers will encounter errors during recognition. </p>'
  syntax: public static SpeechConfig fromAuthorizationToken(String authorizationToken, String region)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromAuthorizationToken(String,String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI endpoint)
  name: fromEndpoint(java.net.URI endpoint)
  nameWithType: SpeechConfig.fromEndpoint(java.net.URI endpoint)
  parameters:
  - description: <p>The service endpoint to connect to. </p>
    name: endpoint
    type: <xref href="java.net.URI?alt=java.net.URI&text=java.net.URI" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of the speech config with specified endpoint. This method is intended only for users who use a non-standard service endpoint or parameters. Note: The query parameters specified in the endpoint URI are not changed, even if they are set by any other APIs. For example, if the recognition language is defined in URI as query parameter "language=de-DE", and also set by setSpeechRecognitionLanguage("en-US"), the language setting in URI takes precedence, and the effective language is "de-DE". Only the parameters that are not specified in the endpoint URI can be set by other APIs. Note: if the endpoint requires a subscription key for authentication, please use fromEndpoint(java.net.URI, String) to pass the subscription key as parameter. To use an authorization token with fromEndpoint, use this method to create a SpeechConfig instance, and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.5.0. </p>'
  syntax: public static SpeechConfig fromEndpoint(java.net.URI endpoint)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI endpoint, String subscriptionKey)
  name: fromEndpoint(java.net.URI endpoint, String subscriptionKey)
  nameWithType: SpeechConfig.fromEndpoint(java.net.URI endpoint, String subscriptionKey)
  parameters:
  - description: <p>The service endpoint to connect to. </p>
    name: endpoint
    type: <xref href="java.net.URI?alt=java.net.URI&text=java.net.URI" data-throw-if-not-resolved="False"/>
  - description: <p>The subscription key. </p>
    name: subscriptionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of the speech config with specified endpoint and subscription key. This method is intended only for users who use a non-standard service endpoint or parameters. Note: The query parameters specified in the endpoint URI are not changed, even if they are set by any other APIs. For example, if the recognition language is defined in URI as query parameter "language=de-DE", and also set by setSpeechRecognitionLanguage("en-US"), the language setting in URI takes precedence, and the effective language is "de-DE". Only the parameters that are not specified in the endpoint URI can be set by other APIs. Note: To use an authorization token with fromEndpoint, please use fromEndpoint(java.net.URI), and then call setAuthorizationToken() on the created SpeechConfig instance. </p>'
  syntax: public static SpeechConfig fromEndpoint(java.net.URI endpoint, String subscriptionKey)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI,String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI host)
  name: fromHost(java.net.URI host)
  nameWithType: SpeechConfig.fromHost(java.net.URI host)
  parameters:
  - description: <p>The service host to connect to. Format is "protocol://host:port" where ":port" is optional. </p>
    name: host
    type: <xref href="java.net.URI?alt=java.net.URI&text=java.net.URI" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of the speech config with specified host. This method is intended only for users who use a non-default service host. Standard resource path will be assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead. Note: Query parameters are not allowed in the host URI and must be set by other APIs. Note: If the host requires a subscription key for authentication, use fromHost(java.net.URI, String) to pass the subscription key as parameter. To use an authorization token with fromHost, use this method to create a SpeechConfig instance, and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.8.0. </p>'
  syntax: public static SpeechConfig fromHost(java.net.URI host)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI host, String subscriptionKey)
  name: fromHost(java.net.URI host, String subscriptionKey)
  nameWithType: SpeechConfig.fromHost(java.net.URI host, String subscriptionKey)
  parameters:
  - description: <p>The service host to connect to. Format is "protocol://host:port" where ":port" is optional. </p>
    name: host
    type: <xref href="java.net.URI?alt=java.net.URI&text=java.net.URI" data-throw-if-not-resolved="False"/>
  - description: <p>The subscription key. </p>
    name: subscriptionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of the speech config with specified host and subscription key. This method is intended only for users who use a non-default service host. Standard resource path will be assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead. Note: Query parameters are not allowed in the host URI and must be set by other APIs. Note: To use an authorization token with fromHost, use fromHost(java.net.URI), and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.8.0. </p>'
  syntax: public static SpeechConfig fromHost(java.net.URI host, String subscriptionKey)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI,String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.fromSubscription(String subscriptionKey, String region)
  name: fromSubscription(String subscriptionKey, String region)
  nameWithType: SpeechConfig.fromSubscription(String subscriptionKey, String region)
  parameters:
  - description: <p>The subscription key. </p>
    name: subscriptionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>). </p>
    name: region
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Creates an instance of a speech config with specified subscription key and service region. </p>
  syntax: public static SpeechConfig fromSubscription(String subscriptionKey, String region)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.fromSubscription(String,String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.getAuthorizationToken()
  name: getAuthorizationToken()
  nameWithType: SpeechConfig.getAuthorizationToken()
  returns:
    description: <p>The authorization token. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the authorization token. </p>
  syntax: public String getAuthorizationToken()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.getAuthorizationToken()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.getEndpointId()
  name: getEndpointId()
  nameWithType: SpeechConfig.getEndpointId()
  returns:
    description: <p>The endpoint ID. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the endpoint ID of a customized speech model that is used for speech recognition, or a custom voice model for speech synthesis. </p>
  syntax: public String getEndpointId()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.getEndpointId()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.getOutputFormat()
  name: getOutputFormat()
  nameWithType: SpeechConfig.getOutputFormat()
  returns:
    description: <p>Returns the speech recognition output format. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.OutputFormat?alt=com.microsoft.cognitiveservices.speech.OutputFormat&text=OutputFormat" data-throw-if-not-resolved="False"/>
  summary: '<p>Gets speech recognition output format (simple or detailed). Note: This output format is for speech recognition results, use SpeechConfig.getSpeechSynthesisOutputFormat to get synthesized audio output format. </p>'
  syntax: public OutputFormat getOutputFormat()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.getOutputFormat()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.getProperty(PropertyId id)
  name: getProperty(PropertyId id)
  nameWithType: SpeechConfig.getProperty(PropertyId id)
  parameters:
  - description: <p>PropertyId of the property. </p>
    name: id
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyId?alt=com.microsoft.cognitiveservices.speech.PropertyId&text=PropertyId" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the property by propertyId. Added in version 1.3.0. </p>
  syntax: public String getProperty(PropertyId id)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.getProperty(PropertyId)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.getProperty(String name)
  name: getProperty(String name)
  nameWithType: SpeechConfig.getProperty(String name)
  parameters:
  - description: <p>the name of the property. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets a named property as value. </p>
  syntax: public String getProperty(String name)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.getProperty(String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechRecognitionLanguage()
  name: getSpeechRecognitionLanguage()
  nameWithType: SpeechConfig.getSpeechRecognitionLanguage()
  returns:
    description: <p>Returns the recognition language. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the speech recognition language </p>
  syntax: public String getSpeechRecognitionLanguage()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechRecognitionLanguage()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisLanguage()
  name: getSpeechSynthesisLanguage()
  nameWithType: SpeechConfig.getSpeechSynthesisLanguage()
  returns:
    description: <p>Returns the synthesis language. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the speech synthesis language. Added in version 1.7.0 </p>
  syntax: public String getSpeechSynthesisLanguage()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisLanguage()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisVoiceName()
  name: getSpeechSynthesisVoiceName()
  nameWithType: SpeechConfig.getSpeechSynthesisVoiceName()
  returns:
    description: <p>Returns the synthesis voice name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the speech synthesis voice name. Added in version 1.7.0 </p>
  syntax: public String getSpeechSynthesisVoiceName()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisVoiceName()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.requestWordLevelTimestamps()
  name: requestWordLevelTimestamps()
  nameWithType: SpeechConfig.requestWordLevelTimestamps()
  summary: <p>Includes word-level timestamps. Added in version 1.5.0. </p>
  syntax: public void requestWordLevelTimestamps()
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.requestWordLevelTimestamps()
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setAuthorizationToken(String value)
  name: setAuthorizationToken(String value)
  nameWithType: SpeechConfig.setAuthorizationToken(String value)
  parameters:
  - description: <p>the authorization token. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Sets the authorization token. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created. For recognizers that have been created before, you need to set authorization token of the corresponding recognizer to refresh the token. Otherwise, the recognizers will encounter errors during recognition. </p>'
  syntax: public void setAuthorizationToken(String value)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setAuthorizationToken(String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setEndpointId(String value)
  name: setEndpointId(String value)
  nameWithType: SpeechConfig.setEndpointId(String value)
  parameters:
  - description: <p>the endpoint ID. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the endpoint ID of a customized speech model that is used for speech recognition, or a custom voice model for speech synthesis. </p>
  syntax: public void setEndpointId(String value)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setEndpointId(String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setOutputFormat(OutputFormat format)
  name: setOutputFormat(OutputFormat format)
  nameWithType: SpeechConfig.setOutputFormat(OutputFormat format)
  parameters:
  - description: <p>The speech recognition output format. </p>
    name: format
    type: <xref href="com.microsoft.cognitiveservices.speech.OutputFormat?alt=com.microsoft.cognitiveservices.speech.OutputFormat&text=OutputFormat" data-throw-if-not-resolved="False"/>
  summary: '<p>Sets speech recognition output format (simple or detailed). Note: This output format is for speech recognition results, use <xref uid="com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat)" data-throw-if-not-resolved="false" data-raw-source="SpeechConfig.setSpeechSynthesisOutputFormat"></xref> to set synthesized audio output format. </p>'
  syntax: public void setOutputFormat(OutputFormat format)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setOutputFormat(OutputFormat)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setProfanity(ProfanityOption profanity)
  name: setProfanity(ProfanityOption profanity)
  nameWithType: SpeechConfig.setProfanity(ProfanityOption profanity)
  parameters:
  - description: <p>the property option to set. </p>
    name: profanity
    type: <xref href="com.microsoft.cognitiveservices.speech.ProfanityOption?alt=com.microsoft.cognitiveservices.speech.ProfanityOption&text=ProfanityOption" data-throw-if-not-resolved="False"/>
  summary: <p>Sets profanity option. Added in version 1.5.0. </p>
  syntax: public void setProfanity(ProfanityOption profanity)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setProfanity(ProfanityOption)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setProperty(PropertyId id, String value)
  name: setProperty(PropertyId id, String value)
  nameWithType: SpeechConfig.setProperty(PropertyId id, String value)
  parameters:
  - description: <p>PropertyId of the property. </p>
    name: id
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyId?alt=com.microsoft.cognitiveservices.speech.PropertyId&text=PropertyId" data-throw-if-not-resolved="False"/>
  - description: <p>The value. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the property by propertyId. Added in version 1.3.0. </p>
  syntax: public void setProperty(PropertyId id, String value)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setProperty(PropertyId,String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setProperty(String name, String value)
  name: setProperty(String name, String value)
  nameWithType: SpeechConfig.setProperty(String name, String value)
  parameters:
  - description: <p>the name of the property. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the value. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets a named property as value. </p>
  syntax: public void setProperty(String name, String value)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setProperty(String,String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)
  name: setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)
  nameWithType: SpeechConfig.setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)
  parameters:
  - description: <p>the host name of the proxy server, without the protocol scheme (<a href="http://">http://</a>) </p>
    name: proxyHostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the port number of the proxy server. </p>
    name: proxyPort
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the user name of the proxy server. Use empty string if no user name is needed. </p>
    name: proxyUserName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the password of the proxy server. Use empty string if no user password is needed. </p>
    name: proxyPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Sets proxy configuration Added in version 1.1.0. Note: Proxy functionality is not available on macOS. This function will have no effect on this platform. </p>'
  syntax: public void setProxy(String proxyHostName, int proxyPort, String proxyUserName, String proxyPassword)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setProxy(String,int,String,String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setServiceProperty(String name, String value, ServicePropertyChannel channel)
  name: setServiceProperty(String name, String value, ServicePropertyChannel channel)
  nameWithType: SpeechConfig.setServiceProperty(String name, String value, ServicePropertyChannel channel)
  parameters:
  - description: <p>the property name. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the property value. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the channel used to pass the specified property to service. </p>
    name: channel
    type: <xref href="com.microsoft.cognitiveservices.speech.ServicePropertyChannel?alt=com.microsoft.cognitiveservices.speech.ServicePropertyChannel&text=ServicePropertyChannel" data-throw-if-not-resolved="False"/>
  summary: <p>Sets a property value that will be passed to service using the specified channel. Added in version 1.5.0. </p>
  syntax: public void setServiceProperty(String name, String value, ServicePropertyChannel channel)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setServiceProperty(String,String,ServicePropertyChannel)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechRecognitionLanguage(String value)
  name: setSpeechRecognitionLanguage(String value)
  nameWithType: SpeechConfig.setSpeechRecognitionLanguage(String value)
  parameters:
  - description: <p>the language identifier in BCP-47 format. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the speech recognition language </p>
  syntax: public void setSpeechRecognitionLanguage(String value)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechRecognitionLanguage(String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisLanguage(String value)
  name: setSpeechSynthesisLanguage(String value)
  nameWithType: SpeechConfig.setSpeechSynthesisLanguage(String value)
  parameters:
  - description: <p>the language identifier in BCP-47 format (e.g. en-US). </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the speech synthesis language. Added in version 1.7.0 </p>
  syntax: public void setSpeechSynthesisLanguage(String value)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisLanguage(String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)
  name: setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)
  nameWithType: SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)
  parameters:
  - description: <p>The synthesis output format ID (e.g. Riff16Khz16BitMonoPcm). </p>
    name: value
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechSynthesisOutputFormat?alt=com.microsoft.cognitiveservices.speech.SpeechSynthesisOutputFormat&text=SpeechSynthesisOutputFormat" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the speech synthesis output format. Added in version 1.7.0 </p>
  syntax: public void setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat value)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat)
- fullName: com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisVoiceName(String value)
  name: setSpeechSynthesisVoiceName(String value)
  nameWithType: SpeechConfig.setSpeechSynthesisVoiceName(String value)
  parameters:
  - description: <p>The speech synthesis voice name. </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the speech synthesis voice name. Added in version 1.7.0 </p>
  syntax: public void setSpeechSynthesisVoiceName(String value)
  uid: com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisVoiceName(String)
nameWithType: SpeechConfig
syntax: public class SpeechConfig
type: class
uid: com.microsoft.cognitiveservices.speech.SpeechConfig
fullName: com.microsoft.cognitiveservices.speech.SpeechConfig
name: SpeechConfig
package: com.microsoft.cognitiveservices.speech
summary: '<p>Speech configuration. Note: close() must be called in order to release underlying resources held by the object. Changed in version 1.7.0 </p>'
metadata: {}
