### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  id: DisksClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation
  children:
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDeleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccessAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccessAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.list()
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.listAsync()
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  - com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  langs:
  - java
  name: DisksClientImpl
  nameWithType: DisksClientImpl
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  type: Class
  package: com.azure.resourcemanager.compute.implementation
  summary: An instance of this class provides access to all the operations defined in DisksClient.
  syntax:
    content: public final class DisksClientImpl implements InnerSupportsGet<DiskInner>, InnerSupportsListing<DiskInner>, InnerSupportsDelete<Void>, DisksClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.DiskInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.DiskInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  - com.azure.resourcemanager.compute.fluent.DisksClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.DisksClientImpl(com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl)
  id: DisksClientImpl(com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: DisksClientImpl(ComputeManagementClientImpl client)
  nameWithType: DisksClientImpl.DisksClientImpl(ComputeManagementClientImpl client)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.DisksClientImpl(ComputeManagementClientImpl client)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.DisksClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.compute.implementation
  summary: Initializes an instance of DisksClientImpl.
  syntax:
    content: " DisksClientImpl(ComputeManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String diskName, DiskInner disk)
  nameWithType: DisksClientImpl.beginCreateOrUpdate(String resourceGroupName, String diskName, DiskInner disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate(String resourceGroupName, String diskName, DiskInner disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Creates or updates a disk.
  syntax:
    content: public SyncPoller<PollResult<DiskInner>,DiskInner> beginCreateOrUpdate(String resourceGroupName, String diskName, DiskInner disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: Disk resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String diskName, DiskInner disk, Context context)
  nameWithType: DisksClientImpl.beginCreateOrUpdate(String resourceGroupName, String diskName, DiskInner disk, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate(String resourceGroupName, String diskName, DiskInner disk, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Creates or updates a disk.
  syntax:
    content: public SyncPoller<PollResult<DiskInner>,DiskInner> beginCreateOrUpdate(String resourceGroupName, String diskName, DiskInner disk, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: Disk resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String diskName, DiskInner disk)
  nameWithType: DisksClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String diskName, DiskInner disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String diskName, DiskInner disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Creates or updates a disk.
  syntax:
    content: public PollerFlux<PollResult<DiskInner>,DiskInner> beginCreateOrUpdateAsync(String resourceGroupName, String diskName, DiskInner disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: Disk resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.beginDelete(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a disk.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String diskName, Context context)
  nameWithType: DisksClientImpl.beginDelete(String resourceGroupName, String diskName, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete(String resourceGroupName, String diskName, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a disk.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String diskName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDeleteAsync(java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.beginDeleteAsync(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDeleteAsync(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a disk.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  id: beginGrantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginGrantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  nameWithType: DisksClientImpl.beginGrantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Grants access to a disk.
  syntax:
    content: public SyncPoller<PollResult<AccessUriInner>,AccessUriInner> beginGrantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: grantAccessData
      type: com.azure.resourcemanager.compute.models.GrantAccessData
      description: Data used for requesting a SAS.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.AccessUriInner>,com.azure.resourcemanager.compute.fluent.models.AccessUriInner>
      description: a disk access SAS uri.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData,com.azure.core.util.Context)
  id: beginGrantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginGrantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData, Context context)
  nameWithType: DisksClientImpl.beginGrantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Grants access to a disk.
  syntax:
    content: public SyncPoller<PollResult<AccessUriInner>,AccessUriInner> beginGrantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: grantAccessData
      type: com.azure.resourcemanager.compute.models.GrantAccessData
      description: Data used for requesting a SAS.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.AccessUriInner>,com.azure.resourcemanager.compute.fluent.models.AccessUriInner>
      description: a disk access SAS uri.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccessAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  id: beginGrantAccessAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginGrantAccessAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  nameWithType: DisksClientImpl.beginGrantAccessAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccessAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccessAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Grants access to a disk.
  syntax:
    content: public PollerFlux<PollResult<AccessUriInner>,AccessUriInner> beginGrantAccessAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: grantAccessData
      type: com.azure.resourcemanager.compute.models.GrantAccessData
      description: Data used for requesting a SAS.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.AccessUriInner>,com.azure.resourcemanager.compute.fluent.models.AccessUriInner>
      description: a disk access SAS uri.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess(java.lang.String,java.lang.String)
  id: beginRevokeAccess(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginRevokeAccess(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.beginRevokeAccess(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Revokes access to a disk.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginRevokeAccess(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginRevokeAccess(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginRevokeAccess(String resourceGroupName, String diskName, Context context)
  nameWithType: DisksClientImpl.beginRevokeAccess(String resourceGroupName, String diskName, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess(String resourceGroupName, String diskName, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Revokes access to a disk.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginRevokeAccess(String resourceGroupName, String diskName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccessAsync(java.lang.String,java.lang.String)
  id: beginRevokeAccessAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginRevokeAccessAsync(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.beginRevokeAccessAsync(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccessAsync(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccessAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Revokes access to a disk.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginRevokeAccessAsync(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String diskName, DiskUpdate disk)
  nameWithType: DisksClientImpl.beginUpdate(String resourceGroupName, String diskName, DiskUpdate disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate(String resourceGroupName, String diskName, DiskUpdate disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates (patches) a disk.
  syntax:
    content: public SyncPoller<PollResult<DiskInner>,DiskInner> beginUpdate(String resourceGroupName, String diskName, DiskUpdate disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.models.DiskUpdate
      description: Disk update resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String diskName, DiskUpdate disk, Context context)
  nameWithType: DisksClientImpl.beginUpdate(String resourceGroupName, String diskName, DiskUpdate disk, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate(String resourceGroupName, String diskName, DiskUpdate disk, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates (patches) a disk.
  syntax:
    content: public SyncPoller<PollResult<DiskInner>,DiskInner> beginUpdate(String resourceGroupName, String diskName, DiskUpdate disk, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.models.DiskUpdate
      description: Disk update resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  id: beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  nameWithType: DisksClientImpl.beginUpdateAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdateAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates (patches) a disk.
  syntax:
    content: public PollerFlux<PollResult<DiskInner>,DiskInner> beginUpdateAsync(String resourceGroupName, String diskName, DiskUpdate disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.models.DiskUpdate
      description: Disk update resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String diskName, DiskInner disk)
  nameWithType: DisksClientImpl.createOrUpdate(String resourceGroupName, String diskName, DiskInner disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate(String resourceGroupName, String diskName, DiskInner disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Creates or updates a disk.
  syntax:
    content: public DiskInner createOrUpdate(String resourceGroupName, String diskName, DiskInner disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: Disk resource.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String diskName, DiskInner disk, Context context)
  nameWithType: DisksClientImpl.createOrUpdate(String resourceGroupName, String diskName, DiskInner disk, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate(String resourceGroupName, String diskName, DiskInner disk, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Creates or updates a disk.
  syntax:
    content: public DiskInner createOrUpdate(String resourceGroupName, String diskName, DiskInner disk, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: Disk resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String diskName, DiskInner disk)
  nameWithType: DisksClientImpl.createOrUpdateAsync(String resourceGroupName, String diskName, DiskInner disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateAsync(String resourceGroupName, String diskName, DiskInner disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Creates or updates a disk.
  syntax:
    content: public Mono<DiskInner> createOrUpdateAsync(String resourceGroupName, String diskName, DiskInner disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: Disk resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String diskName, DiskInner disk)
  nameWithType: DisksClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String diskName, DiskInner disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String diskName, DiskInner disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Creates or updates a disk.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String diskName, DiskInner disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: Disk resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.delete(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a disk.
  syntax:
    content: public void delete(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String diskName, Context context)
  nameWithType: DisksClientImpl.delete(String resourceGroupName, String diskName, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete(String resourceGroupName, String diskName, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a disk.
  syntax:
    content: public void delete(String resourceGroupName, String diskName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.deleteAsync(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteAsync(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a disk.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.deleteWithResponseAsync(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteWithResponseAsync(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Deletes a disk.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.getByResourceGroup(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroup(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets information about a disk.
  syntax:
    content: public DiskInner getByResourceGroup(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: information about a disk.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.getByResourceGroupAsync(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupAsync(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets information about a disk.
  syntax:
    content: public Mono<DiskInner> getByResourceGroupAsync(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: information about a disk.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String diskName, Context context)
  nameWithType: DisksClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String diskName, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String diskName, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets information about a disk.
  syntax:
    content: public Response<DiskInner> getByResourceGroupWithResponse(String resourceGroupName, String diskName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: information about a disk.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Gets information about a disk.
  syntax:
    content: public Mono<Response<DiskInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.DiskInner>>
      description: information about a disk.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  id: grantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: grantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  nameWithType: DisksClientImpl.grantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Grants access to a disk.
  syntax:
    content: public AccessUriInner grantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: grantAccessData
      type: com.azure.resourcemanager.compute.models.GrantAccessData
      description: Data used for requesting a SAS.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
      description: a disk access SAS uri.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData,com.azure.core.util.Context)
  id: grantAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: grantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData, Context context)
  nameWithType: DisksClientImpl.grantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Grants access to a disk.
  syntax:
    content: public AccessUriInner grantAccess(String resourceGroupName, String diskName, GrantAccessData grantAccessData, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: grantAccessData
      type: com.azure.resourcemanager.compute.models.GrantAccessData
      description: Data used for requesting a SAS.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
      description: a disk access SAS uri.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  id: grantAccessAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: grantAccessAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  nameWithType: DisksClientImpl.grantAccessAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Grants access to a disk.
  syntax:
    content: public Mono<AccessUriInner> grantAccessAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: grantAccessData
      type: com.azure.resourcemanager.compute.models.GrantAccessData
      description: Data used for requesting a SAS.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.AccessUriInner>
      description: a disk access SAS uri.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  id: grantAccessWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.GrantAccessData)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: grantAccessWithResponseAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  nameWithType: DisksClientImpl.grantAccessWithResponseAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessWithResponseAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Grants access to a disk.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> grantAccessWithResponseAsync(String resourceGroupName, String diskName, GrantAccessData grantAccessData)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: grantAccessData
      type: com.azure.resourcemanager.compute.models.GrantAccessData
      description: Data used for requesting a SAS.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a disk access SAS uri.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: list()
  nameWithType: DisksClientImpl.list()
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.list()
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Lists all the disks under a subscription.
  syntax:
    content: public PagedIterable<DiskInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: the List Disks operation response.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: list(Context context)
  nameWithType: DisksClientImpl.list(Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.list(Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Lists all the disks under a subscription.
  syntax:
    content: public PagedIterable<DiskInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: the List Disks operation response.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: listAsync()
  nameWithType: DisksClientImpl.listAsync()
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listAsync()
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Lists all the disks under a subscription.
  syntax:
    content: public PagedFlux<DiskInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: the List Disks operation response.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: DisksClientImpl.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Lists all the disks under a resource group.
  syntax:
    content: public PagedIterable<DiskInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: the List Disks operation response.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: DisksClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Lists all the disks under a resource group.
  syntax:
    content: public PagedIterable<DiskInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: the List Disks operation response.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: DisksClientImpl.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Lists all the disks under a resource group.
  syntax:
    content: public PagedFlux<DiskInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: the List Disks operation response.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess(java.lang.String,java.lang.String)
  id: revokeAccess(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: revokeAccess(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.revokeAccess(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Revokes access to a disk.
  syntax:
    content: public void revokeAccess(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: revokeAccess(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: revokeAccess(String resourceGroupName, String diskName, Context context)
  nameWithType: DisksClientImpl.revokeAccess(String resourceGroupName, String diskName, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess(String resourceGroupName, String diskName, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Revokes access to a disk.
  syntax:
    content: public void revokeAccess(String resourceGroupName, String diskName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessAsync(java.lang.String,java.lang.String)
  id: revokeAccessAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: revokeAccessAsync(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.revokeAccessAsync(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessAsync(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Revokes access to a disk.
  syntax:
    content: public Mono<Void> revokeAccessAsync(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessWithResponseAsync(java.lang.String,java.lang.String)
  id: revokeAccessWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: revokeAccessWithResponseAsync(String resourceGroupName, String diskName)
  nameWithType: DisksClientImpl.revokeAccessWithResponseAsync(String resourceGroupName, String diskName)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessWithResponseAsync(String resourceGroupName, String diskName)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Revokes access to a disk.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> revokeAccessWithResponseAsync(String resourceGroupName, String diskName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String diskName, DiskUpdate disk)
  nameWithType: DisksClientImpl.update(String resourceGroupName, String diskName, DiskUpdate disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.update(String resourceGroupName, String diskName, DiskUpdate disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates (patches) a disk.
  syntax:
    content: public DiskInner update(String resourceGroupName, String diskName, DiskUpdate disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.models.DiskUpdate
      description: Disk update resource.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String diskName, DiskUpdate disk, Context context)
  nameWithType: DisksClientImpl.update(String resourceGroupName, String diskName, DiskUpdate disk, Context context)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.update(String resourceGroupName, String diskName, DiskUpdate disk, Context context)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates (patches) a disk.
  syntax:
    content: public DiskInner update(String resourceGroupName, String diskName, DiskUpdate disk, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.models.DiskUpdate
      description: Disk update resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskInner
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  nameWithType: DisksClientImpl.updateAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates (patches) a disk.
  syntax:
    content: public Mono<DiskInner> updateAsync(String resourceGroupName, String diskName, DiskUpdate disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.models.DiskUpdate
      description: Disk update resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.DiskInner>
      description: disk resource.
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.implementation.DisksClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  nameWithType: DisksClientImpl.updateWithResponseAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateWithResponseAsync(String resourceGroupName, String diskName, DiskUpdate disk)
  overload: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.implementation
  summary: Updates (patches) a disk.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String diskName, DiskUpdate disk)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskName
      type: java.lang.String
      description: >-
        The name of the managed disk that is being created. The name can't be changed after the disk is
             created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
    - id: disk
      type: com.azure.resourcemanager.compute.models.DiskUpdate
      description: Disk update resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: disk resource.
references:
- uid: com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl
  name: ComputeManagementClientImpl
  nameWithType: ComputeManagementClientImpl
  fullName: com.azure.resourcemanager.compute.implementation.ComputeManagementClientImpl
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.DisksClientImpl*
  name: DisksClientImpl
  nameWithType: DisksClientImpl.DisksClientImpl
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.DisksClientImpl
  package: com.azure.resourcemanager.compute.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
  name: DiskInner
  nameWithType: DiskInner
  fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: DisksClientImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: DisksClientImpl.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: DisksClientImpl.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginCreateOrUpdate
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.DiskInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: DisksClientImpl.createOrUpdateAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdateAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate*
  name: createOrUpdate
  nameWithType: DisksClientImpl.createOrUpdate
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.createOrUpdate
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.models.DiskUpdate
  name: DiskUpdate
  nameWithType: DiskUpdate
  fullName: com.azure.resourcemanager.compute.models.DiskUpdate
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: DisksClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: DisksClientImpl.beginUpdateAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdateAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate*
  name: beginUpdate
  nameWithType: DisksClientImpl.beginUpdate
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginUpdate
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateAsync*
  name: updateAsync
  nameWithType: DisksClientImpl.updateAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.updateAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.update*
  name: update
  nameWithType: DisksClientImpl.update
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.update
  package: com.azure.resourcemanager.compute.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.DiskInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: DisksClientImpl.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: DisksClientImpl.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: DisksClientImpl.getByResourceGroup
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroup
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.DiskInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: DisksClientImpl.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: DisksClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: DisksClientImpl.beginDeleteAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDeleteAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete*
  name: beginDelete
  nameWithType: DisksClientImpl.beginDelete
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginDelete
  package: com.azure.resourcemanager.compute.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: DisksClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.deleteAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete*
  name: delete
  nameWithType: DisksClientImpl.delete
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.delete
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.DiskInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: DisksClientImpl.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroupAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskInner
    name: DiskInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: DisksClientImpl.listByResourceGroup
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listByResourceGroup
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listAsync*
  name: listAsync
  nameWithType: DisksClientImpl.listAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.listAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.list*
  name: list
  nameWithType: DisksClientImpl.list
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.list
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.models.GrantAccessData
  name: GrantAccessData
  nameWithType: GrantAccessData
  fullName: com.azure.resourcemanager.compute.models.GrantAccessData
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessWithResponseAsync*
  name: grantAccessWithResponseAsync
  nameWithType: DisksClientImpl.grantAccessWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.AccessUriInner>,com.azure.resourcemanager.compute.fluent.models.AccessUriInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
    name: AccessUriInner
    fullName: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
    name: AccessUriInner
    fullName: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccessAsync*
  name: beginGrantAccessAsync
  nameWithType: DisksClientImpl.beginGrantAccessAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccessAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.AccessUriInner>,com.azure.resourcemanager.compute.fluent.models.AccessUriInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
    name: AccessUriInner
    fullName: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
    name: AccessUriInner
    fullName: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess*
  name: beginGrantAccess
  nameWithType: DisksClientImpl.beginGrantAccess
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginGrantAccess
  package: com.azure.resourcemanager.compute.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.AccessUriInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
    name: AccessUriInner
    fullName: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessAsync*
  name: grantAccessAsync
  nameWithType: DisksClientImpl.grantAccessAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccessAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
  name: AccessUriInner
  nameWithType: AccessUriInner
  fullName: com.azure.resourcemanager.compute.fluent.models.AccessUriInner
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess*
  name: grantAccess
  nameWithType: DisksClientImpl.grantAccess
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.grantAccess
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessWithResponseAsync*
  name: revokeAccessWithResponseAsync
  nameWithType: DisksClientImpl.revokeAccessWithResponseAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessWithResponseAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccessAsync*
  name: beginRevokeAccessAsync
  nameWithType: DisksClientImpl.beginRevokeAccessAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccessAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess*
  name: beginRevokeAccess
  nameWithType: DisksClientImpl.beginRevokeAccess
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.beginRevokeAccess
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessAsync*
  name: revokeAccessAsync
  nameWithType: DisksClientImpl.revokeAccessAsync
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccessAsync
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess*
  name: revokeAccess
  nameWithType: DisksClientImpl.revokeAccess
  fullName: com.azure.resourcemanager.compute.implementation.DisksClientImpl.revokeAccess
  package: com.azure.resourcemanager.compute.implementation
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.DiskInner>
  name: InnerSupportsGet<DiskInner>
  nameWithType: InnerSupportsGet<DiskInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.DiskInner>
- uid: com.azure.resourcemanager.compute.fluent.DisksClient
  name: DisksClient
  nameWithType: DisksClient
  fullName: com.azure.resourcemanager.compute.fluent.DisksClient
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.DiskInner>
  name: InnerSupportsListing<DiskInner>
  nameWithType: InnerSupportsListing<DiskInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.DiskInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner
  name: DiskInner>,DiskInner
  nameWithType: DiskInner>,DiskInner
  fullName: com.azure.resourcemanager.compute.fluent.models.DiskInner>,com.azure.resourcemanager.compute.fluent.models.DiskInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.compute.fluent.models.AccessUriInner>,com.azure.resourcemanager.compute.fluent.models.AccessUriInner
  name: AccessUriInner>,AccessUriInner
  nameWithType: AccessUriInner>,AccessUriInner
  fullName: com.azure.resourcemanager.compute.fluent.models.AccessUriInner>,com.azure.resourcemanager.compute.fluent.models.AccessUriInner
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
