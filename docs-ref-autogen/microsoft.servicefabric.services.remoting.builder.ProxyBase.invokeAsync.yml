### YamlMime:JavaMember
nameWithType: ProxyBase.invokeAsync
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  name: invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  nameWithType: ProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  parameters:
  - description: <p>Id of the remote interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the remote method to be invokved. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Request body. </p>
    name: requestMsgBodyBytes
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>Cancellation token </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous operation async call to remote object. </p>
    type: <xref href="abstract+CompletableFuture%3Cbyte%5B%5D%3E?alt=abstract CompletableFuture<byte[]>&text=abstract+CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to send the request to the remote object and get the response back. </p>
  syntax: protected abstract CompletableFuture<byte[]> invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int,int,byte [],CancellationToken)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  name: invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  nameWithType: ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  parameters:
  - description: <p>Id of the remote interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the remote method to be invoked. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Request body. </p>
    name: requestMsgBodyValue
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation async call to remote object. </p>
    type: <xref href="CompletableFuture%3CObject%3E?alt=CompletableFuture<Object>&text=CompletableFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to send the request to the remote object and get the response back. </p>
  syntax: protected CompletableFuture<Object> invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int,int,Object,CancellationToken)
uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync*
fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
name: invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
package: microsoft.servicefabric.services.remoting.builder
metadata: {}
