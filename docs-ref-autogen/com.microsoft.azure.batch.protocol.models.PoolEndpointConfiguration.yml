### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration
  id: PoolEndpointConfiguration
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.PoolEndpointConfiguration()
  - com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.inboundNATPools()
  - com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.withInboundNATPools(java.util.List<com.microsoft.azure.batch.protocol.models.InboundNATPool>)
  langs:
  - java
  name: PoolEndpointConfiguration
  nameWithType: PoolEndpointConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: The endpoint configuration for a Pool.
  syntax:
    content: public class PoolEndpointConfiguration
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.PoolEndpointConfiguration()
  id: PoolEndpointConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration
  langs:
  - java
  name: PoolEndpointConfiguration()
  nameWithType: PoolEndpointConfiguration.PoolEndpointConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.PoolEndpointConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.PoolEndpointConfiguration*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public PoolEndpointConfiguration()
- uid: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.inboundNATPools()
  id: inboundNATPools()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration
  langs:
  - java
  name: inboundNATPools()
  nameWithType: PoolEndpointConfiguration.inboundNATPools()
  fullName: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.inboundNATPools()
  overload: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.inboundNATPools*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the maximum number of inbound NAT Pools per Batch Pool is 5. If the maximum number of inbound NAT Pools is exceeded the request fails with HTTP status code 400.
  syntax:
    content: public List<InboundNATPool> inboundNATPools()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.InboundNATPool>
      description: the inboundNATPools value
- uid: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.withInboundNATPools(java.util.List<com.microsoft.azure.batch.protocol.models.InboundNATPool>)
  id: withInboundNATPools(java.util.List<com.microsoft.azure.batch.protocol.models.InboundNATPool>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration
  langs:
  - java
  name: withInboundNATPools(List<InboundNATPool> inboundNATPools)
  nameWithType: PoolEndpointConfiguration.withInboundNATPools(List<InboundNATPool> inboundNATPools)
  fullName: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.withInboundNATPools(List<InboundNATPool> inboundNATPools)
  overload: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.withInboundNATPools*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the maximum number of inbound NAT Pools per Batch Pool is 5. If the maximum number of inbound NAT Pools is exceeded the request fails with HTTP status code 400.
  syntax:
    content: public PoolEndpointConfiguration withInboundNATPools(List<InboundNATPool> inboundNATPools)
    parameters:
    - id: inboundNATPools
      type: java.util.List<com.microsoft.azure.batch.protocol.models.InboundNATPool>
      description: the inboundNATPools value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration
      description: the PoolEndpointConfiguration object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.PoolEndpointConfiguration*
  name: PoolEndpointConfiguration
  nameWithType: PoolEndpointConfiguration.PoolEndpointConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.PoolEndpointConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.InboundNATPool>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.InboundNATPool
    name: InboundNATPool
    fullName: com.microsoft.azure.batch.protocol.models.InboundNATPool
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.inboundNATPools*
  name: inboundNATPools
  nameWithType: PoolEndpointConfiguration.inboundNATPools
  fullName: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.inboundNATPools
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.withInboundNATPools*
  name: withInboundNATPools
  nameWithType: PoolEndpointConfiguration.withInboundNATPools
  fullName: com.microsoft.azure.batch.protocol.models.PoolEndpointConfiguration.withInboundNATPools
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.InboundNATPool
  name: InboundNATPool
  nameWithType: InboundNATPool
  fullName: com.microsoft.azure.batch.protocol.models.InboundNATPool
