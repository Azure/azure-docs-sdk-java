### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.createIfNotExists*"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.createIfNotExists"
name: "createIfNotExists"
nameWithType: "DataLakeFileSystemAsyncClient.createIfNotExists"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.createIfNotExists()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.createIfNotExists()"
  name: "createIfNotExists()"
  nameWithType: "DataLakeFileSystemAsyncClient.createIfNotExists()"
  summary: "Creates a new file system within a storage account if it does not exist."
  syntax: "public Mono<Boolean> createIfNotExists()"
  desc: "Creates a new file system within a storage account if it does not exist. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nclient.createIfNotExists().subscribe(created -> {\n     if (created) {\n         System.out.println(\"Successfully created.\");\n     } else {\n         System.out.println(\"Already exists.\");\n     }\n });\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/create-container"
  returns:
    description: "A reactive response signalling completion. <code>true</code> indicates that a new file system was created.\n <code>false</code> indicates that a file system already existed at this location."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.11.0
