### YamlMime:JavaType
uid: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient"
fullName: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient"
name: "KeyEncryptionKeyAsyncClient"
nameWithType: "KeyEncryptionKeyAsyncClient"
summary: "A key client which is used to asynchronously wrap or unwrap another key."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.decrypt(com.azure.security.keyvault.keys.cryptography.models.DecryptParameters)"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.decrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.encrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptParameters)"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.encrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.getKey()"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.getKeyWithResponse()"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.sign(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.signData(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.unwrapKey(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.verify(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.verifyData(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.wrapKey(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class KeyEncryptionKeyAsyncClient extends CryptographyAsyncClient implements AsyncKeyEncryptionKey"
methods:
- uid: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient.getKeyId()"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient.getKeyId()"
  name: "getKeyId()"
  nameWithType: "KeyEncryptionKeyAsyncClient.getKeyId()"
  summary: "Get the identifier of the key to use for cryptography operations."
  syntax: "public Mono<String> getKeyId()"
  desc: "Get the identifier of the key to use for cryptography operations."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the key identifier."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient.unwrapKey(java.lang.String,byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient.unwrapKey(String algorithm, byte[] encryptedKey)"
  name: "unwrapKey(String algorithm, byte[] encryptedKey)"
  nameWithType: "KeyEncryptionKeyAsyncClient.unwrapKey(String algorithm, byte[] encryptedKey)"
  parameters:
  - name: "algorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "encryptedKey"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Mono<byte[]> unwrapKey(String algorithm, byte[] encryptedKey)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
- uid: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient.wrapKey(java.lang.String,byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.KeyEncryptionKeyAsyncClient.wrapKey(String algorithm, byte[] key)"
  name: "wrapKey(String algorithm, byte[] key)"
  nameWithType: "KeyEncryptionKeyAsyncClient.wrapKey(String algorithm, byte[] key)"
  parameters:
  - name: "algorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "key"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Mono<byte[]> wrapKey(String algorithm, byte[] key)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
type: "class"
desc: "A key client which is used to asynchronously wrap or unwrap another key."
implements:
- "<xref href=\"com.azure.core.cryptography.AsyncKeyEncryptionKey?alt=com.azure.core.cryptography.AsyncKeyEncryptionKey&text=AsyncKeyEncryptionKey\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.security.keyvault.keys.cryptography"
artifact: com.azure:azure-security-keyvault-keys:4.4.6
