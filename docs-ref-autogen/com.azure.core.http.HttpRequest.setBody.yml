### YamlMime:JavaMember
uid: "com.azure.core.http.HttpRequest.setBody*"
fullName: "com.azure.core.http.HttpRequest.setBody"
name: "setBody"
nameWithType: "HttpRequest.setBody"
members:
- uid: "com.azure.core.http.HttpRequest.setBody(byte[])"
  fullName: "com.azure.core.http.HttpRequest.setBody(byte[] content)"
  name: "setBody(byte[] content)"
  nameWithType: "HttpRequest.setBody(byte[] content)"
  summary: "Set the request content.\n\nThe Content-Length header will be set based on the given content's length."
  parameters:
  - description: "the request content"
    name: "content"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public HttpRequest setBody(byte[] content)"
  returns:
    description: "this HttpRequest"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpRequest.setBody(com.azure.core.util.BinaryData)"
  fullName: "com.azure.core.http.HttpRequest.setBody(BinaryData content)"
  name: "setBody(BinaryData content)"
  nameWithType: "HttpRequest.setBody(BinaryData content)"
  summary: "Set request content.\n\nIf provided content has known length, i.e. <xref uid=\"com.azure.core.util.BinaryData.getLength()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData#getLength()\"></xref> returns non-null then Content-Length header is updated. Otherwise, if provided content has unknown length, i.e. <xref uid=\"com.azure.core.util.BinaryData.getLength()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData#getLength()\"></xref> returns null then the caller must set the Content-Length header to indicate the length of the content, or use Transfer-Encoding: chunked."
  parameters:
  - description: "the request content"
    name: "content"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpRequest setBody(BinaryData content)"
  returns:
    description: "this HttpRequest"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpRequest.setBody(java.lang.String)"
  fullName: "com.azure.core.http.HttpRequest.setBody(String content)"
  name: "setBody(String content)"
  nameWithType: "HttpRequest.setBody(String content)"
  summary: "Set the request content.\n\nThe Content-Length header will be set based on the given content's length."
  parameters:
  - description: "the request content"
    name: "content"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpRequest setBody(String content)"
  returns:
    description: "this HttpRequest"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpRequest.setBody(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  fullName: "com.azure.core.http.HttpRequest.setBody(Flux<ByteBuffer> content)"
  name: "setBody(Flux<ByteBuffer> content)"
  nameWithType: "HttpRequest.setBody(Flux<ByteBuffer> content)"
  summary: "Set request content.\n\nCaller must set the Content-Length header to indicate the length of the content, or use Transfer-Encoding: chunked."
  parameters:
  - description: "the request content"
    name: "content"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HttpRequest setBody(Flux<ByteBuffer> content)"
  returns:
    description: "this HttpRequest"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.http"
artifact: com.azure:azure-core:1.31.0
