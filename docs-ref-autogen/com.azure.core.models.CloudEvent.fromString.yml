### YamlMime:JavaMember
uid: "com.azure.core.models.CloudEvent.fromString*"
fullName: "com.azure.core.models.CloudEvent.fromString"
name: "fromString"
nameWithType: "CloudEvent.fromString"
members:
- uid: "com.azure.core.models.CloudEvent.fromString(java.lang.String)"
  fullName: "com.azure.core.models.CloudEvent.fromString(String cloudEventsJson)"
  name: "fromString(String cloudEventsJson)"
  nameWithType: "CloudEvent.fromString(String cloudEventsJson)"
  summary: "Deserialize <xref uid=\"com.azure.core.models.CloudEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudEvent\"></xref> JSON string representation that has one CloudEvent object or an array of CloudEvent objects into a list of CloudEvents, and validate whether any CloudEvents have null `id`, `source`, or `type`. If you want to skip this validation, use <xref uid=\"com.azure.core.models.CloudEvent.fromString(java.lang.String,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#fromString(String, boolean)\"></xref>.\n\n**Deserialize CloudEvent Samples**\n\n```java\nList<CloudEvent> cloudEventList = CloudEvent.fromString(cloudEventJsonString);\n CloudEvent cloudEvent = cloudEventList.get(0);\n BinaryData cloudEventData = cloudEvent.getData();\n \n byte[] bytesValue = cloudEventData.toBytes();  // If data payload is in bytes (data_base64 is not null).\n User objectValue = cloudEventData.toObject(User.class);  // If data payload is a User object.\n int intValue = cloudEventData.toObject(Integer.class);  // If data payload is an int.\n boolean boolValue = cloudEventData.toObject(Boolean.class);  // If data payload is boolean.\n String stringValue = cloudEventData.toObject(String.class);  // If data payload is String.\n String jsonStringValue = cloudEventData.toString();  // The data payload represented in Json String.\n```"
  parameters:
  - description: "the JSON payload containing one or more events."
    name: "cloudEventsJson"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static List<CloudEvent> fromString(String cloudEventsJson)"
  returns:
    description: "all of the events in the payload deserialized as <xref uid=\"com.azure.core.models.CloudEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudEvents\"></xref>."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.models.CloudEvent?alt=com.azure.core.models.CloudEvent&text=CloudEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.models.CloudEvent.fromString(java.lang.String,boolean)"
  fullName: "com.azure.core.models.CloudEvent.fromString(String cloudEventsJson, boolean skipValidation)"
  name: "fromString(String cloudEventsJson, boolean skipValidation)"
  nameWithType: "CloudEvent.fromString(String cloudEventsJson, boolean skipValidation)"
  summary: "Deserialize <xref uid=\"com.azure.core.models.CloudEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudEvents\"></xref> JSON string representation that has one CloudEvent object or an array of CloudEvent objects into a list of CloudEvents."
  parameters:
  - description: "the JSON payload containing one or more events."
    name: "cloudEventsJson"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "set to true if you'd like to skip the validation for the deserialized CloudEvents. A valid\n                       CloudEvent should have 'id', 'source' and 'type' not null."
    name: "skipValidation"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static List<CloudEvent> fromString(String cloudEventsJson, boolean skipValidation)"
  returns:
    description: "all of the events in the payload deserialized as <xref uid=\"com.azure.core.models.CloudEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudEvents\"></xref>."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.models.CloudEvent?alt=com.azure.core.models.CloudEvent&text=CloudEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.models"
artifact: com.azure:azure-core:1.15.0
