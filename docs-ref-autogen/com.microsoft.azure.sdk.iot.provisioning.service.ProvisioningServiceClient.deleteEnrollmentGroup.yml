### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup*"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup"
name: "deleteEnrollmentGroup"
nameWithType: "ProvisioningServiceClient.deleteEnrollmentGroup"
members:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  name: "deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  nameWithType: "ProvisioningServiceClient.deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  summary: "Delete the enrollmentGroup information.\n\nThis method will remove the enrollmentGroup from the Device Provisioning Service using the provided <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref> information. The Device Provisioning Service will care about the enrollmentGroupId and the eTag on the enrollmentGroup. If you want to delete the enrollment regardless the eTag, you can set the `eTag=\"*\"` into the enrollmentGroup, or use the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteEnrollmentGroup(String)\"></xref> passing only the enrollmentGroupId.\n\nNote that delete the enrollmentGroup will not remove the Devices itself from the IotHub.\n\nIf the enrollmentGroupId does not exists or the eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the enrollmentGroup \"enrollmentGroupId-1\".\n\n```java\n// EnrollmentGroup information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String ENROLLMENT_GROUP_ID = \"enrollmentGroupId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the enrollmentGroup information.\n     EnrollmentGroup enrollmentGroupResult =  deviceProvisioningServiceClient.getEnrollmentGroup(ENROLLMENT_GROUP_ID);\n\n     // Delete the enrollmentGroup information.\n     deviceProvisioningServiceClient.deleteEnrollmentGroup(enrollmentResult);\n }\n```"
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref> that identifies the enrollmentGroup. It cannot be <code>null</code>."
    name: "enrollmentGroup"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup&text=EnrollmentGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            enrollmentGroup information for the provided enrollmentGroup."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId)"
  name: "deleteEnrollmentGroup(String enrollmentGroupId)"
  nameWithType: "ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId)"
  summary: "Delete the enrollmentGroup information.\n\nThis method will remove the enrollmentGroup from the Device Provisioning Service using the provided enrollmentGroupId. It will delete the enrollmentGroup regardless the eTag. It means that this API correspond to the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteEnrollmentGroup(String, String)\"></xref> with the `eTag=\"*\"`.\n\nNote that delete the enrollmentGroup will not remove the Devices itself from the IotHub.\n\nIf the enrollmentGroupId does not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the enrollmentGroup \"enrollmentGroupId-1\".\n\n```java\n// EnrollmentGroup information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String ENROLLMENT_GROUP_ID = \"enrollmentGroupId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the enrollmentGroup information.\n     deviceProvisioningServiceClient.deleteEnrollmentGroup(ENROLLMENT_GROUP_ID);\n }\n```"
  parameters:
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteEnrollmentGroup(String enrollmentGroupId)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            enrollmentGroup information for the provided enrollmentGroupId."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId, String eTag)"
  name: "deleteEnrollmentGroup(String enrollmentGroupId, String eTag)"
  nameWithType: "ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId, String eTag)"
  summary: "Delete the enrollmentGroup information.\n\nThis method will remove the enrollmentGroup from the Device Provisioning Service using the provided enrollmentGroupId and eTag. If you want to delete the enrollmentGroup regardless the eTag, you can use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteEnrollmentGroup(String)\"></xref> or you can pass the eTag as `null`, empty, or `\"*\"`.\n\nNote that delete the enrollmentGroup will not remove the Device itself from the IotHub.\n\nIf the enrollmentGroupId does not exists or eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the enrollmentGroup \"enrollmentGroupId-1\" regardless the eTag.\n\n```java\n// enrollmentGroup information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String ENROLLMENT_GROUP_ID = \"enrollmentGroupId-1\";\n private Static final String ANY_ETAG = \"*\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the enrollmentGroup information.\n     deviceProvisioningServiceClient.deleteEnrollmentGroup(ENROLLMENT_GROUP_ID, ANY_ETAG);\n }\n```"
  parameters:
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> with the enrollmentGroup eTag. It can be <code>null</code> or empty.\n             The Device Provisioning Service will ignore it in all of these cases."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteEnrollmentGroup(String enrollmentGroupId, String eTag)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            enrollmentGroup information for the provided enrollmentGroupId and eTag."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
