### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  id: "ConnectionSettings"
  parent: "com.azure.storage.common.implementation.connectionstring"
  children:
  - "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.clone()"
  - "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.fromConnectionString(java.lang.String,com.azure.core.util.logging.ClientLogger)"
  - "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.getSettingValue(java.lang.String)"
  - "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.hasSetting(java.lang.String)"
  - "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.isEmpty()"
  - "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.removeSetting(java.lang.String)"
  - "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.setSetting(java.lang.String,java.lang.String)"
  langs:
  - "java"
  name: "ConnectionSettings"
  nameWithType: "ConnectionSettings"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  type: "Class"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "A dictionary representation of all settings in a connection string."
  syntax:
    content: "final class ConnectionSettings implements Cloneable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.Cloneable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.ConnectionSettings(java.util.Map<java.lang.String,java.lang.String>)"
  id: "ConnectionSettings(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  langs:
  - "java"
  name: "ConnectionSettings(Map<String,String> settings)"
  nameWithType: "ConnectionSettings.ConnectionSettings(Map<String,String> settings)"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.ConnectionSettings(Map<String,String> settings)"
  overload: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.ConnectionSettings*"
  type: "Constructor"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "Creates ConnectionSettings."
  syntax:
    content: "private ConnectionSettings(Map<String,String> settings)"
    parameters:
    - id: "settings"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the settings as a map"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.clone()"
  id: "clone()"
  parent: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  langs:
  - "java"
  name: "clone()"
  nameWithType: "ConnectionSettings.clone()"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.clone()"
  overload: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.clone*"
  type: "Method"
  package: "com.azure.storage.common.implementation.connectionstring"
  syntax:
    content: "public ConnectionSettings clone()"
    return:
      type: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.fromConnectionString(java.lang.String,com.azure.core.util.logging.ClientLogger)"
  id: "fromConnectionString(java.lang.String,com.azure.core.util.logging.ClientLogger)"
  parent: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  langs:
  - "java"
  name: "fromConnectionString(String connString, ClientLogger logger)"
  nameWithType: "ConnectionSettings.fromConnectionString(String connString, ClientLogger logger)"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.fromConnectionString(String connString, ClientLogger logger)"
  overload: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.fromConnectionString*"
  type: "Method"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "Creates <xref uid=\"com.azure.storage.common.implementation.connectionstring.ConnectionSettings\" data-throw-if-not-resolved=\"false\">ConnectionSettings</xref> from the given connection string."
  syntax:
    content: "public static ConnectionSettings fromConnectionString(String connString, ClientLogger logger)"
    parameters:
    - id: "connString"
      type: "java.lang.String"
      description: "the connection string"
    - id: "logger"
      type: "com.azure.core.util.logging.ClientLogger"
      description: "the logger"
    return:
      type: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
      description: "the ConnectionSettings"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.getSettingValue(java.lang.String)"
  id: "getSettingValue(java.lang.String)"
  parent: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  langs:
  - "java"
  name: "getSettingValue(String name)"
  nameWithType: "ConnectionSettings.getSettingValue(String name)"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.getSettingValue(String name)"
  overload: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.getSettingValue*"
  type: "Method"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "Get value of the setting with given name."
  syntax:
    content: "public String getSettingValue(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the setting name"
    return:
      type: "java.lang.String"
      description: "the setting value if exists"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.hasSetting(java.lang.String)"
  id: "hasSetting(java.lang.String)"
  parent: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  langs:
  - "java"
  name: "hasSetting(String name)"
  nameWithType: "ConnectionSettings.hasSetting(String name)"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.hasSetting(String name)"
  overload: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.hasSetting*"
  type: "Method"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "Checks a given settings exists."
  syntax:
    content: "public boolean hasSetting(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the setting name"
    return:
      type: "boolean"
      description: "true if setting exists, false otherwise"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.isEmpty()"
  id: "isEmpty()"
  parent: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  langs:
  - "java"
  name: "isEmpty()"
  nameWithType: "ConnectionSettings.isEmpty()"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.isEmpty()"
  overload: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.isEmpty*"
  type: "Method"
  package: "com.azure.storage.common.implementation.connectionstring"
  syntax:
    content: "public boolean isEmpty()"
    return:
      type: "boolean"
      description: "true if there no settings exists, false otherwise."
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.removeSetting(java.lang.String)"
  id: "removeSetting(java.lang.String)"
  parent: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  langs:
  - "java"
  name: "removeSetting(String name)"
  nameWithType: "ConnectionSettings.removeSetting(String name)"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.removeSetting(String name)"
  overload: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.removeSetting*"
  type: "Method"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "Remove a setting with given name if exists."
  syntax:
    content: "public void removeSetting(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the setting name"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.setSetting(java.lang.String,java.lang.String)"
  id: "setSetting(java.lang.String,java.lang.String)"
  parent: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  langs:
  - "java"
  name: "setSetting(String name, String value)"
  nameWithType: "ConnectionSettings.setSetting(String name, String value)"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.setSetting(String name, String value)"
  overload: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.setSetting*"
  type: "Method"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "Set a setting."
  syntax:
    content: "public void setSetting(String name, String value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the setting name"
    - id: "value"
      type: "java.lang.String"
      description: "the setting value"
references:
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.ConnectionSettings*"
  name: "ConnectionSettings"
  nameWithType: "ConnectionSettings.ConnectionSettings"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.ConnectionSettings"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.hasSetting*"
  name: "hasSetting"
  nameWithType: "ConnectionSettings.hasSetting"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.hasSetting"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.removeSetting*"
  name: "removeSetting"
  nameWithType: "ConnectionSettings.removeSetting"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.removeSetting"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.getSettingValue*"
  name: "getSettingValue"
  nameWithType: "ConnectionSettings.getSettingValue"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.getSettingValue"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.isEmpty*"
  name: "isEmpty"
  nameWithType: "ConnectionSettings.isEmpty"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.isEmpty"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.setSetting*"
  name: "setSetting"
  nameWithType: "ConnectionSettings.setSetting"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.setSetting"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "com.azure.core.util.logging.ClientLogger"
  spec.java:
  - uid: "com.azure.core.util.logging.ClientLogger"
    name: "ClientLogger"
    fullName: "com.azure.core.util.logging.ClientLogger"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.fromConnectionString*"
  name: "fromConnectionString"
  nameWithType: "ConnectionSettings.fromConnectionString"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.fromConnectionString"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.clone*"
  name: "clone"
  nameWithType: "ConnectionSettings.clone"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings.clone"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "java.lang.Cloneable"
  name: "Cloneable"
  nameWithType: "Cloneable"
  fullName: "java.lang.Cloneable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
