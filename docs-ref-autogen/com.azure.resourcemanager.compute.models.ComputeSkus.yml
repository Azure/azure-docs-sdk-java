### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.models.ComputeSkus"
fullName: "com.azure.resourcemanager.compute.models.ComputeSkus"
name: "ComputeSkus"
nameWithType: "ComputeSkus"
summary: "Entry point to compute service SKUs."
syntax: "public interface ComputeSkus extends SupportsListing<ComputeSku>, SupportsListingByRegion<ComputeSku>, HasManager<ComputeManager>"
methods:
- uid: "com.azure.resourcemanager.compute.models.ComputeSkus.listByRegionAndResourceType(com.azure.core.management.Region,com.azure.resourcemanager.compute.models.ComputeResourceType)"
  fullName: "com.azure.resourcemanager.compute.models.ComputeSkus.listByRegionAndResourceType(Region region, ComputeResourceType resourceType)"
  name: "listByRegionAndResourceType(Region region, ComputeResourceType resourceType)"
  nameWithType: "ComputeSkus.listByRegionAndResourceType(Region region, ComputeResourceType resourceType)"
  summary: "Lists all the skus with the specified resource type in the given region."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  - description: "the resource type"
    name: "resourceType"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ComputeResourceType?alt=com.azure.resourcemanager.compute.models.ComputeResourceType&text=ComputeResourceType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ComputeSku> listByRegionAndResourceType(Region region, ComputeResourceType resourceType)"
  desc: "Lists all the skus with the specified resource type in the given region."
  returns:
    description: "the skus list"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.models.ComputeSku?alt=com.azure.resourcemanager.compute.models.ComputeSku&text=ComputeSku\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.compute.models.ComputeSkus.listByRegionAndResourceTypeAsync(com.azure.core.management.Region,com.azure.resourcemanager.compute.models.ComputeResourceType)"
  fullName: "com.azure.resourcemanager.compute.models.ComputeSkus.listByRegionAndResourceTypeAsync(Region region, ComputeResourceType resourceType)"
  name: "listByRegionAndResourceTypeAsync(Region region, ComputeResourceType resourceType)"
  nameWithType: "ComputeSkus.listByRegionAndResourceTypeAsync(Region region, ComputeResourceType resourceType)"
  summary: "Lists all the skus with the specified resource type in the given region."
  modifiers:
  - "abstract"
  parameters:
  - description: "the region"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  - description: "the resource type"
    name: "resourceType"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ComputeResourceType?alt=com.azure.resourcemanager.compute.models.ComputeResourceType&text=ComputeResourceType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<ComputeSku> listByRegionAndResourceTypeAsync(Region region, ComputeResourceType resourceType)"
  desc: "Lists all the skus with the specified resource type in the given region."
  returns:
    description: "an observable that emits skus"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.models.ComputeSku?alt=com.azure.resourcemanager.compute.models.ComputeSku&text=ComputeSku\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.compute.models.ComputeSkus.listByResourceType(com.azure.resourcemanager.compute.models.ComputeResourceType)"
  fullName: "com.azure.resourcemanager.compute.models.ComputeSkus.listByResourceType(ComputeResourceType resourceType)"
  name: "listByResourceType(ComputeResourceType resourceType)"
  nameWithType: "ComputeSkus.listByResourceType(ComputeResourceType resourceType)"
  summary: "Lists all the skus with the specified resource type."
  modifiers:
  - "abstract"
  parameters:
  - description: "the compute resource type"
    name: "resourceType"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ComputeResourceType?alt=com.azure.resourcemanager.compute.models.ComputeResourceType&text=ComputeResourceType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ComputeSku> listByResourceType(ComputeResourceType resourceType)"
  desc: "Lists all the skus with the specified resource type."
  returns:
    description: "the skus list"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.models.ComputeSku?alt=com.azure.resourcemanager.compute.models.ComputeSku&text=ComputeSku\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.compute.models.ComputeSkus.listByResourceTypeAsync(com.azure.resourcemanager.compute.models.ComputeResourceType)"
  fullName: "com.azure.resourcemanager.compute.models.ComputeSkus.listByResourceTypeAsync(ComputeResourceType resourceType)"
  name: "listByResourceTypeAsync(ComputeResourceType resourceType)"
  nameWithType: "ComputeSkus.listByResourceTypeAsync(ComputeResourceType resourceType)"
  summary: "Lists all the skus with the specified resource type."
  modifiers:
  - "abstract"
  parameters:
  - description: "the compute resource type"
    name: "resourceType"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ComputeResourceType?alt=com.azure.resourcemanager.compute.models.ComputeResourceType&text=ComputeResourceType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<ComputeSku> listByResourceTypeAsync(ComputeResourceType resourceType)"
  desc: "Lists all the skus with the specified resource type."
  returns:
    description: "an observable that emits skus"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.models.ComputeSku?alt=com.azure.resourcemanager.compute.models.ComputeSku&text=ComputeSku\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point to compute service SKUs."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.ComputeManager?alt=com.azure.resourcemanager.compute.ComputeManager&text=ComputeManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.models.ComputeSku?alt=com.azure.resourcemanager.compute.models.ComputeSku&text=ComputeSku\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListingByRegion?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListingByRegion&text=SupportsListingByRegion\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.compute.models.ComputeSku?alt=com.azure.resourcemanager.compute.models.ComputeSku&text=ComputeSku\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.19.0
