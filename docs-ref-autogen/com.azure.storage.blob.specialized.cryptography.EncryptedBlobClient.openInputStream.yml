### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream*"
fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream"
name: "openInputStream"
nameWithType: "EncryptedBlobClient.openInputStream"
members:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream()"
  name: "openInputStream()"
  nameWithType: "EncryptedBlobClient.openInputStream()"
  overridden: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream()"
  syntax: "public BlobInputStream openInputStream()"
  returns:
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobInputStream?alt=com.azure.storage.blob.specialized.BlobInputStream&text=BlobInputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream(BlobRange range, BlobRequestConditions requestConditions)"
  name: "openInputStream(BlobRange range, BlobRequestConditions requestConditions)"
  nameWithType: "EncryptedBlobClient.openInputStream(BlobRange range, BlobRequestConditions requestConditions)"
  overridden: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)"
  parameters:
  - name: "range"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobInputStream openInputStream(BlobRange range, BlobRequestConditions requestConditions)"
  returns:
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobInputStream?alt=com.azure.storage.blob.specialized.BlobInputStream&text=BlobInputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream(com.azure.storage.blob.options.BlobInputStreamOptions)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream(BlobInputStreamOptions options)"
  name: "openInputStream(BlobInputStreamOptions options)"
  nameWithType: "EncryptedBlobClient.openInputStream(BlobInputStreamOptions options)"
  overridden: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.options.BlobInputStreamOptions)"
  parameters:
  - name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobInputStreamOptions?alt=com.azure.storage.blob.options.BlobInputStreamOptions&text=BlobInputStreamOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobInputStream openInputStream(BlobInputStreamOptions options)"
  returns:
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobInputStream?alt=com.azure.storage.blob.specialized.BlobInputStream&text=BlobInputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream(com.azure.storage.blob.options.BlobInputStreamOptions,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.openInputStream(BlobInputStreamOptions options, Context context)"
  name: "openInputStream(BlobInputStreamOptions options, Context context)"
  nameWithType: "EncryptedBlobClient.openInputStream(BlobInputStreamOptions options, Context context)"
  overridden: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.options.BlobInputStreamOptions,com.azure.core.util.Context)"
  parameters:
  - name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobInputStreamOptions?alt=com.azure.storage.blob.options.BlobInputStreamOptions&text=BlobInputStreamOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobInputStream openInputStream(BlobInputStreamOptions options, Context context)"
  returns:
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobInputStream?alt=com.azure.storage.blob.specialized.BlobInputStream&text=BlobInputStream\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized.cryptography"
artifact: com.azure:azure-storage-blob-cryptography:12.18.0
