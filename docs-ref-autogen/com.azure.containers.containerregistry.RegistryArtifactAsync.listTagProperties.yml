### YamlMime:JavaMember
uid: "com.azure.containers.containerregistry.RegistryArtifactAsync.listTagProperties*"
fullName: "com.azure.containers.containerregistry.RegistryArtifactAsync.listTagProperties"
name: "listTagProperties"
nameWithType: "RegistryArtifactAsync.listTagProperties"
members:
- uid: "com.azure.containers.containerregistry.RegistryArtifactAsync.listTagProperties()"
  fullName: "com.azure.containers.containerregistry.RegistryArtifactAsync.listTagProperties()"
  name: "listTagProperties()"
  nameWithType: "RegistryArtifactAsync.listTagProperties()"
  summary: "Fetches all the tags associated with the given <xref uid=\"com.azure.containers.containerregistry.RegistryArtifactAsync.getRepositoryName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>.\n\nIf you would like to specify the order in which the tags are returned please use the overload that takes in the options parameter <xref uid=\"com.azure.containers.containerregistry.RegistryArtifactAsync.listTagProperties(com.azure.containers.containerregistry.models.ArtifactTagOrder)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#listTagProperties(ArtifactTagOrder)\"></xref> listTagProperties\\} No assumptions on the order can be made if no options are provided to the service.\n\n**Code Samples**\n\nRetrieve all the tags associated with the given repository.\n\n```java\nclient.listTagProperties().byPage(10)\n     .subscribe(tagPropertiesPagedResponse -> {\n         tagPropertiesPagedResponse.getValue().stream().forEach(\n             tagProperties -> System.out.println(tagProperties.getDigest()));\n     });\n```"
  syntax: "public PagedFlux<ArtifactTagProperties> listTagProperties()"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> of the artifacts for the given repository in the order specified by the options."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.ArtifactTagProperties?alt=com.azure.containers.containerregistry.models.ArtifactTagProperties&text=ArtifactTagProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.RegistryArtifactAsync.listTagProperties(com.azure.containers.containerregistry.models.ArtifactTagOrder)"
  fullName: "com.azure.containers.containerregistry.RegistryArtifactAsync.listTagProperties(ArtifactTagOrder order)"
  name: "listTagProperties(ArtifactTagOrder order)"
  nameWithType: "RegistryArtifactAsync.listTagProperties(ArtifactTagOrder order)"
  summary: "Fetches all the tags associated with the given <xref uid=\"com.azure.containers.containerregistry.RegistryArtifactAsync.getRepositoryName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>.\n\nThe method supports options to select the order in which the tags are returned by the service. Currently the service supports an ascending or descending order based on the last updated time of the tag. No assumptions on the order can be made if no options are provided to the service.\n\n**Code Samples**\n\nRetrieve all the tags associated with the given repository from the most recently updated to the last.\n\n```java\nclient.listTagProperties(ArtifactTagOrder.LAST_UPDATED_ON_DESCENDING)\n     .byPage(10)\n     .subscribe(tagPropertiesPagedResponse -> {\n         tagPropertiesPagedResponse.getValue()\n             .stream()\n             .forEach(tagProperties -> System.out.println(tagProperties.getDigest()));\n     });\n```"
  parameters:
  - description: "The order in which the tags should be returned by the service."
    name: "order"
    type: "<xref href=\"com.azure.containers.containerregistry.models.ArtifactTagOrder?alt=com.azure.containers.containerregistry.models.ArtifactTagOrder&text=ArtifactTagOrder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<ArtifactTagProperties> listTagProperties(ArtifactTagOrder order)"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> of the artifacts for the given repository in the order specified by the options."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.ArtifactTagProperties?alt=com.azure.containers.containerregistry.models.ArtifactTagProperties&text=ArtifactTagProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.containers.containerregistry"
artifact: com.azure:azure-containers-containerregistry:1.0.2
