### YamlMime:JavaType
uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts"
fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts"
name: "Accounts"
nameWithType: "Accounts"
summary: "Resource collection API of Accounts."
syntax: "public interface **Accounts**"
methods:
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.checkNameAvailability(com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.checkNameAvailability(CheckNameAvailabilityRequest body)"
  name: "checkNameAvailability(CheckNameAvailabilityRequest body)"
  nameWithType: "Accounts.checkNameAvailability(CheckNameAvailabilityRequest body)"
  summary: "Adds check global name availability operation, normally used if a resource name must be globally unique."
  modifiers:
  - "abstract"
  parameters:
  - description: "The CheckAvailability request."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResponse checkNameAvailability(CheckNameAvailabilityRequest body)"
  desc: "Adds check global name availability operation, normally used if a resource name must be globally unique."
  returns:
    description: "the check availability result."
    type: "<xref href=\"com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityResponse?alt=com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityResponse&text=CheckNameAvailabilityResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.checkNameAvailabilityWithResponse(com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest body, Context context)"
  name: "checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest body, Context context)"
  nameWithType: "Accounts.checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest body, Context context)"
  summary: "Adds check global name availability operation, normally used if a resource name must be globally unique."
  modifiers:
  - "abstract"
  parameters:
  - description: "The CheckAvailability request."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityResponse> checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest body, Context context)"
  desc: "Adds check global name availability operation, normally used if a resource name must be globally unique."
  returns:
    description: "the check availability result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityResponse?alt=com.azure.resourcemanager.playwrighttesting.models.CheckNameAvailabilityResponse&text=CheckNameAvailabilityResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.define(String name)"
  name: "define(String name)"
  nameWithType: "Accounts.define(String name)"
  summary: "Begins definition for a new Account resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Account.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new Account resource."
  returns:
    description: "the first stage of the new Account definition."
    type: "<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account.DefinitionStages.Blank?alt=com.azure.resourcemanager.playwrighttesting.models.Account.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.delete(String resourceGroupName, String accountName, Context context)"
  name: "delete(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Accounts.delete(String resourceGroupName, String accountName, Context context)"
  summary: "Delete a Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of account."
    name: "accountName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String accountName, Context context)"
  desc: "Delete a Account."
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Accounts.deleteById(String id)"
  summary: "Delete a Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteById(String id)"
  desc: "Delete a Account."
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Accounts.deleteByIdWithResponse(String id, Context context)"
  summary: "Delete a Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByIdWithResponse(String id, Context context)"
  desc: "Delete a Account."
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.deleteByResourceGroup(String resourceGroupName, String accountName)"
  name: "deleteByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "Accounts.deleteByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Delete a Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of account."
    name: "accountName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Delete a Account."
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Accounts.getById(String id)"
  summary: "Get a Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Account getById(String id)"
  desc: "Get a Account."
  returns:
    description: "a Account along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account?alt=com.azure.resourcemanager.playwrighttesting.models.Account&text=Account\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Accounts.getByIdWithResponse(String id, Context context)"
  summary: "Get a Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Account> getByIdWithResponse(String id, Context context)"
  desc: "Get a Account."
  returns:
    description: "a Account along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account?alt=com.azure.resourcemanager.playwrighttesting.models.Account&text=Account\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.getByResourceGroup(String resourceGroupName, String accountName)"
  name: "getByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "Accounts.getByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Get a Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of account."
    name: "accountName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Account getByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Get a Account."
  returns:
    description: "a Account."
    type: "<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account?alt=com.azure.resourcemanager.playwrighttesting.models.Account&text=Account\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Accounts.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Get a Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of account."
    name: "accountName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Account> getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Get a Account."
  returns:
    description: "a Account along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account?alt=com.azure.resourcemanager.playwrighttesting.models.Account&text=Account\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.list()"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.list()"
  name: "list()"
  nameWithType: "Accounts.list()"
  summary: "List Account resources by subscription ID."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Account> list()"
  desc: "List Account resources by subscription ID."
  returns:
    description: "the response of a Account list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account?alt=com.azure.resourcemanager.playwrighttesting.models.Account&text=Account\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Accounts.list(Context context)"
  summary: "List Account resources by subscription ID."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Account> list(Context context)"
  desc: "List Account resources by subscription ID."
  returns:
    description: "the response of a Account list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account?alt=com.azure.resourcemanager.playwrighttesting.models.Account&text=Account\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Accounts.listByResourceGroup(String resourceGroupName)"
  summary: "List Account resources by resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<Account> listByResourceGroup(String resourceGroupName)"
  desc: "List Account resources by resource group."
  returns:
    description: "the response of a Account list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account?alt=com.azure.resourcemanager.playwrighttesting.models.Account&text=Account\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.playwrighttesting.models.Accounts.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.playwrighttesting.models.Accounts.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "Accounts.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "List Account resources by resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Account> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "List Account resources by resource group."
  returns:
    description: "the response of a Account list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.playwrighttesting.models.Account?alt=com.azure.resourcemanager.playwrighttesting.models.Account&text=Account\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Accounts."
metadata: {}
package: "com.azure.resourcemanager.playwrighttesting.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-playwrighttesting:1.0.0
