### YamlMime:JavaType
uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager"
fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager"
name: "NeonPostgresManager"
nameWithType: "NeonPostgresManager"
summary: "Entry point to Neon<wbr>Postgres<wbr>Manager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **NeonPostgresManager**"
methods:
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.authenticate(com.azure.core.http.HttpPipeline,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  name: "authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  nameWithType: "NeonPostgresManager.authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  summary: "Creates an instance of Neon Postgres service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> configured with Azure authentication credential."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static NeonPostgresManager authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  desc: "Creates an instance of Neon Postgres service API entry point."
  returns:
    description: "the Neon Postgres service API instance."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.NeonPostgresManager?alt=com.azure.resourcemanager.neonpostgres.NeonPostgresManager&text=NeonPostgresManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "NeonPostgresManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Neon Postgres service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static NeonPostgresManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of Neon Postgres service API entry point."
  returns:
    description: "the Neon Postgres service API instance."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.NeonPostgresManager?alt=com.azure.resourcemanager.neonpostgres.NeonPostgresManager&text=NeonPostgresManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.branches()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.branches()"
  name: "branches()"
  nameWithType: "NeonPostgresManager.branches()"
  summary: "Gets the resource collection API of Branches."
  syntax: "public Branches branches()"
  desc: "Gets the resource collection API of Branches. It manages Branch."
  returns:
    description: "Resource collection API of Branches."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.models.Branches?alt=com.azure.resourcemanager.neonpostgres.models.Branches&text=Branches\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.computes()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.computes()"
  name: "computes()"
  nameWithType: "NeonPostgresManager.computes()"
  summary: "Gets the resource collection API of Computes."
  syntax: "public Computes computes()"
  desc: "Gets the resource collection API of Computes. It manages Compute."
  returns:
    description: "Resource collection API of Computes."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.models.Computes?alt=com.azure.resourcemanager.neonpostgres.models.Computes&text=Computes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.configure()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.configure()"
  name: "configure()"
  nameWithType: "NeonPostgresManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Neon<wbr>Postgres<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static NeonPostgresManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create NeonPostgresManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.NeonPostgresManager.Configurable?alt=com.azure.resourcemanager.neonpostgres.NeonPostgresManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.endpoints()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.endpoints()"
  name: "endpoints()"
  nameWithType: "NeonPostgresManager.endpoints()"
  summary: "Gets the resource collection API of Endpoints."
  syntax: "public Endpoints endpoints()"
  desc: "Gets the resource collection API of Endpoints. It manages Endpoint."
  returns:
    description: "Resource collection API of Endpoints."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.models.Endpoints?alt=com.azure.resourcemanager.neonpostgres.models.Endpoints&text=Endpoints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.neonDatabases()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.neonDatabases()"
  name: "neonDatabases()"
  nameWithType: "NeonPostgresManager.neonDatabases()"
  summary: "Gets the resource collection API of Neon<wbr>Databases."
  syntax: "public NeonDatabases neonDatabases()"
  desc: "Gets the resource collection API of NeonDatabases. It manages NeonDatabase."
  returns:
    description: "Resource collection API of NeonDatabases."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.models.NeonDatabases?alt=com.azure.resourcemanager.neonpostgres.models.NeonDatabases&text=NeonDatabases\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.neonRoles()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.neonRoles()"
  name: "neonRoles()"
  nameWithType: "NeonPostgresManager.neonRoles()"
  summary: "Gets the resource collection API of Neon<wbr>Roles."
  syntax: "public NeonRoles neonRoles()"
  desc: "Gets the resource collection API of NeonRoles. It manages NeonRole."
  returns:
    description: "Resource collection API of NeonRoles."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.models.NeonRoles?alt=com.azure.resourcemanager.neonpostgres.models.NeonRoles&text=NeonRoles\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.operations()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.operations()"
  name: "operations()"
  nameWithType: "NeonPostgresManager.operations()"
  summary: "Gets the resource collection API of Operations."
  syntax: "public Operations operations()"
  desc: "Gets the resource collection API of Operations."
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.models.Operations?alt=com.azure.resourcemanager.neonpostgres.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.organizations()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.organizations()"
  name: "organizations()"
  nameWithType: "NeonPostgresManager.organizations()"
  summary: "Gets the resource collection API of Organizations."
  syntax: "public Organizations organizations()"
  desc: "Gets the resource collection API of Organizations. It manages OrganizationResource."
  returns:
    description: "Resource collection API of Organizations."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.models.Organizations?alt=com.azure.resourcemanager.neonpostgres.models.Organizations&text=Organizations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.projects()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.projects()"
  name: "projects()"
  nameWithType: "NeonPostgresManager.projects()"
  summary: "Gets the resource collection API of Projects."
  syntax: "public Projects projects()"
  desc: "Gets the resource collection API of Projects. It manages Project."
  returns:
    description: "Resource collection API of Projects."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.models.Projects?alt=com.azure.resourcemanager.neonpostgres.models.Projects&text=Projects\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.serviceClient()"
  fullName: "com.azure.resourcemanager.neonpostgres.NeonPostgresManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "NeonPostgresManager.serviceClient()"
  summary: "Gets wrapped service client Neon<wbr>Postgres<wbr>Management<wbr>Client providing direct access to the underlying auto-generated API implementation, based on Azure REST API."
  syntax: "public NeonPostgresManagementClient serviceClient()"
  desc: "Gets wrapped service client NeonPostgresManagementClient providing direct access to the underlying auto-generated API implementation, based on Azure REST API."
  returns:
    description: "Wrapped service client NeonPostgresManagementClient."
    type: "<xref href=\"com.azure.resourcemanager.neonpostgres.fluent.NeonPostgresManagementClient?alt=com.azure.resourcemanager.neonpostgres.fluent.NeonPostgresManagementClient&text=NeonPostgresManagementClient\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to NeonPostgresManager."
metadata: {}
package: "com.azure.resourcemanager.neonpostgres"
artifact: com.azure.resourcemanager:azure-resourcemanager-neonpostgres:1.0.0
