### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.ReactorSession"
  id: "ReactorSession"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.ReactorSession.ReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,com.azure.core.amqp.implementation.TokenManagerProvider,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration)"
  - "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  - "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[])"
  - "com.azure.core.amqp.implementation.ReactorSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  - "com.azure.core.amqp.implementation.ReactorSession.dispose()"
  - "com.azure.core.amqp.implementation.ReactorSession.getEndpointStates()"
  - "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()"
  - "com.azure.core.amqp.implementation.ReactorSession.getSessionName()"
  - "com.azure.core.amqp.implementation.ReactorSession.isDisposed()"
  - "com.azure.core.amqp.implementation.ReactorSession.removeLink(java.lang.String)"
  - "com.azure.core.amqp.implementation.ReactorSession.session()"
  langs:
  - "java"
  name: "ReactorSession"
  nameWithType: "ReactorSession"
  fullName: "com.azure.core.amqp.implementation.ReactorSession"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  summary: "Represents an AMQP session using proton-j reactor."
  syntax:
    content: "public class ReactorSession implements AmqpSession"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.amqp.AmqpSession"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.ReactorSession.ReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,com.azure.core.amqp.implementation.TokenManagerProvider,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration)"
  id: "ReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,com.azure.core.amqp.implementation.TokenManagerProvider,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration)"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "ReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<ClaimsBasedSecurityNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, MessageSerializer messageSerializer, Duration openTimeout)"
  nameWithType: "ReactorSession.ReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<ClaimsBasedSecurityNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, MessageSerializer messageSerializer, Duration openTimeout)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.ReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<ClaimsBasedSecurityNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, MessageSerializer messageSerializer, Duration openTimeout)"
  overload: "com.azure.core.amqp.implementation.ReactorSession.ReactorSession*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  summary: "Creates a new AMQP session using proton-j."
  syntax:
    content: "public ReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<ClaimsBasedSecurityNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, MessageSerializer messageSerializer, Duration openTimeout)"
    parameters:
    - id: "session"
      type: "org.apache.qpid.proton.engine.Session"
      description: "Proton-j session for this AMQP session."
    - id: "sessionHandler"
      type: "com.azure.core.amqp.implementation.handler.SessionHandler"
      description: "Handler for events that occur in the session."
    - id: "sessionName"
      type: "java.lang.String"
      description: "Name of the session."
    - id: "provider"
      type: "com.azure.core.amqp.implementation.ReactorProvider"
      description: "Provides reactor instances for messages to sent with."
    - id: "handlerProvider"
      type: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
      description: "Providers reactor handlers for listening to proton-j reactor events."
    - id: "cbsNodeSupplier"
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>"
      description: "Mono that returns a reference to the <xref uid=\"com.azure.core.amqp.ClaimsBasedSecurityNode\" data-throw-if-not-resolved=\"false\">ClaimsBasedSecurityNode</xref>."
    - id: "tokenManagerProvider"
      type: "com.azure.core.amqp.implementation.TokenManagerProvider"
      description: "Provides <xref uid=\"com.azure.core.amqp.implementation.TokenManager\" data-throw-if-not-resolved=\"false\">TokenManager</xref> that authorizes the client when performing\n     operations on the message broker."
    - id: "messageSerializer"
      type: "com.azure.core.amqp.implementation.MessageSerializer"
    - id: "openTimeout"
      type: "java.time.Duration"
      description: "Timeout to wait for the session operation to complete."
- uid: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  id: "createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry)"
  nameWithType: "ReactorSession.createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry)"
  overload: "com.azure.core.amqp.implementation.ReactorSession.createConsumer*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<AmqpLink> createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.time.Duration"
    - id: "retry"
      type: "com.azure.core.amqp.AmqpRetryPolicy"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.AmqpLink>"
- uid: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[])"
  id: "createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[])"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry, Map<Symbol,UnknownDescribedType> sourceFilters, Map<Symbol,Object> receiverProperties, Symbol[] receiverDesiredCapabilities)"
  nameWithType: "ReactorSession.createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry, Map<Symbol,UnknownDescribedType> sourceFilters, Map<Symbol,Object> receiverProperties, Symbol[] receiverDesiredCapabilities)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry, Map<Symbol,UnknownDescribedType> sourceFilters, Map<Symbol,Object> receiverProperties, Symbol[] receiverDesiredCapabilities)"
  overload: "com.azure.core.amqp.implementation.ReactorSession.createConsumer*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "Creates an <xref uid=\"com.azure.core.amqp.implementation.AmqpReceiveLink\" data-throw-if-not-resolved=\"false\">AmqpReceiveLink</xref> that has AMQP specific capabilities set. Filters can be applied to the source when receiving to inform the source to filter the items sent to the consumer. See [Filtering Messages][] and [AMQP Filters][] for more information.\n\n\n[Filtering Messages]: http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#doc-idp326640\n[AMQP Filters]: https://www.amqp.org/specification/1.0/filters"
  syntax:
    content: "protected Mono<AmqpReceiveLink> createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry, Map<Symbol,UnknownDescribedType> sourceFilters, Map<Symbol,Object> receiverProperties, Symbol[] receiverDesiredCapabilities)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "Name of the receive link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "Address in the message broker for the link."
    - id: "timeout"
      type: "java.time.Duration"
      description: "Operation timeout when creating the link."
    - id: "retry"
      type: "com.azure.core.amqp.AmqpRetryPolicy"
      description: "Retry policy to apply when link creation times out."
    - id: "sourceFilters"
      type: "java.util.Map<org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>"
      description: "Add any filters to the source when creating the receive link."
    - id: "receiverProperties"
      type: "java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>"
      description: "Any properties to associate with the receive link when attaching to message\n     broker."
    - id: "receiverDesiredCapabilities"
      type: "org.apache.qpid.proton.amqp.Symbol[]"
      description: "Capabilities that the receiver link supports."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
      description: "A new instance of an <xref uid=\"com.azure.core.amqp.implementation.AmqpReceiveLink\" data-throw-if-not-resolved=\"false\">AmqpReceiveLink</xref> with the correct properties set."
- uid: "com.azure.core.amqp.implementation.ReactorSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  id: "createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry)"
  nameWithType: "ReactorSession.createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry)"
  overload: "com.azure.core.amqp.implementation.ReactorSession.createProducer*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<AmqpLink> createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retry)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.time.Duration"
    - id: "retry"
      type: "com.azure.core.amqp.AmqpRetryPolicy"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.AmqpLink>"
- uid: "com.azure.core.amqp.implementation.ReactorSession.dispose()"
  id: "dispose()"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "dispose()"
  nameWithType: "ReactorSession.dispose()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.dispose()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.dispose*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public void dispose()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.getEndpointStates()"
  id: "getEndpointStates()"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "getEndpointStates()"
  nameWithType: "ReactorSession.getEndpointStates()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.getEndpointStates()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.getEndpointStates*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Flux<AmqpEndpointState> getEndpointStates()"
    return:
      type: "reactor.core.publisher.Flux<com.azure.core.amqp.AmqpEndpointState>"
- uid: "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()"
  id: "getOperationTimeout()"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "getOperationTimeout()"
  nameWithType: "ReactorSession.getOperationTimeout()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Duration getOperationTimeout()"
    return:
      type: "java.time.Duration"
- uid: "com.azure.core.amqp.implementation.ReactorSession.getSessionName()"
  id: "getSessionName()"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "getSessionName()"
  nameWithType: "ReactorSession.getSessionName()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.getSessionName()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.getSessionName*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public String getSessionName()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorSession.isDisposed()"
  id: "isDisposed()"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "isDisposed()"
  nameWithType: "ReactorSession.isDisposed()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.isDisposed()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.isDisposed*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public boolean isDisposed()"
    return:
      type: "boolean"
- uid: "com.azure.core.amqp.implementation.ReactorSession.removeLink(java.lang.String)"
  id: "removeLink(java.lang.String)"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "removeLink(String linkName)"
  nameWithType: "ReactorSession.removeLink(String linkName)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.removeLink(String linkName)"
  overload: "com.azure.core.amqp.implementation.ReactorSession.removeLink*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public boolean removeLink(String linkName)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.azure.core.amqp.implementation.ReactorSession.session()"
  id: "session()"
  parent: "com.azure.core.amqp.implementation.ReactorSession"
  langs:
  - "java"
  name: "session()"
  nameWithType: "ReactorSession.session()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.session()"
  overload: "com.azure.core.amqp.implementation.ReactorSession.session*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " Session session()"
    return:
      type: "org.apache.qpid.proton.engine.Session"
references:
- uid: "org.apache.qpid.proton.engine.Session"
  spec.java:
  - uid: "org.apache.qpid.proton.engine.Session"
    name: "Session"
    fullName: "org.apache.qpid.proton.engine.Session"
- uid: "com.azure.core.amqp.implementation.handler.SessionHandler"
  name: "SessionHandler"
  nameWithType: "SessionHandler"
  fullName: "com.azure.core.amqp.implementation.handler.SessionHandler"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorProvider"
  name: "ReactorProvider"
  nameWithType: "ReactorProvider"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider"
- uid: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
  name: "ReactorHandlerProvider"
  nameWithType: "ReactorHandlerProvider"
  fullName: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.ClaimsBasedSecurityNode"
    name: "ClaimsBasedSecurityNode"
    fullName: "com.azure.core.amqp.ClaimsBasedSecurityNode"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.TokenManagerProvider"
  name: "TokenManagerProvider"
  nameWithType: "TokenManagerProvider"
  fullName: "com.azure.core.amqp.implementation.TokenManagerProvider"
- uid: "com.azure.core.amqp.implementation.MessageSerializer"
  name: "MessageSerializer"
  nameWithType: "MessageSerializer"
  fullName: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.amqp.implementation.ReactorSession.ReactorSession*"
  name: "ReactorSession"
  nameWithType: "ReactorSession.ReactorSession"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.ReactorSession"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.session*"
  name: "session"
  nameWithType: "ReactorSession.session"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.session"
  package: "com.azure.core.amqp.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.core.amqp.AmqpEndpointState>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.AmqpEndpointState"
    name: "AmqpEndpointState"
    fullName: "com.azure.core.amqp.AmqpEndpointState"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ReactorSession.getEndpointStates*"
  name: "getEndpointStates"
  nameWithType: "ReactorSession.getEndpointStates"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.getEndpointStates"
  package: "com.azure.core.amqp.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.amqp.implementation.ReactorSession.isDisposed*"
  name: "isDisposed"
  nameWithType: "ReactorSession.isDisposed"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.isDisposed"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.dispose*"
  name: "dispose"
  nameWithType: "ReactorSession.dispose"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.dispose"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.getSessionName*"
  name: "getSessionName"
  nameWithType: "ReactorSession.getSessionName"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.getSessionName"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout*"
  name: "getOperationTimeout"
  nameWithType: "ReactorSession.getOperationTimeout"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.AmqpRetryPolicy"
  name: "AmqpRetryPolicy"
  nameWithType: "AmqpRetryPolicy"
  fullName: "com.azure.core.amqp.AmqpRetryPolicy"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.AmqpLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.AmqpLink"
    name: "AmqpLink"
    fullName: "com.azure.core.amqp.AmqpLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ReactorSession.createProducer*"
  name: "createProducer"
  nameWithType: "ReactorSession.createProducer"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createProducer"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.createConsumer*"
  name: "createConsumer"
  nameWithType: "ReactorSession.createConsumer"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createConsumer"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession.removeLink*"
  name: "removeLink"
  nameWithType: "ReactorSession.removeLink"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.removeLink"
  package: "com.azure.core.amqp.implementation"
- uid: "java.util.Map<org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "org.apache.qpid.proton.amqp.Symbol"
    name: "Symbol"
    fullName: "org.apache.qpid.proton.amqp.Symbol"
  - name: ","
    fullName: ","
  - uid: "org.apache.qpid.proton.amqp.UnknownDescribedType"
    name: "UnknownDescribedType"
    fullName: "org.apache.qpid.proton.amqp.UnknownDescribedType"
  - name: ">"
    fullName: ">"
- uid: "java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "org.apache.qpid.proton.amqp.Symbol"
    name: "Symbol"
    fullName: "org.apache.qpid.proton.amqp.Symbol"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "org.apache.qpid.proton.amqp.Symbol[]"
  spec.java:
  - uid: "org.apache.qpid.proton.amqp.Symbol"
    name: "Symbol"
    fullName: "org.apache.qpid.proton.amqp.Symbol"
  - name: "[]"
    fullName: "[]"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
    name: "AmqpReceiveLink"
    fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.AmqpSession"
  name: "AmqpSession"
  nameWithType: "AmqpSession"
  fullName: "com.azure.core.amqp.AmqpSession"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription"
  name: "ReactorSession.LinkSubscription<T>"
  nameWithType: "ReactorSession.LinkSubscription<T>"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.LinkSubscription<T>"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.amqp.ClaimsBasedSecurityNode"
  name: "ClaimsBasedSecurityNode"
  nameWithType: "ClaimsBasedSecurityNode"
  fullName: "com.azure.core.amqp.ClaimsBasedSecurityNode"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.core.amqp.AmqpEndpointState"
  name: "AmqpEndpointState"
  nameWithType: "AmqpEndpointState"
  fullName: "com.azure.core.amqp.AmqpEndpointState"
- uid: "com.azure.core.amqp.AmqpLink"
  name: "AmqpLink"
  nameWithType: "AmqpLink"
  fullName: "com.azure.core.amqp.AmqpLink"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType"
  name: "Symbol,UnknownDescribedType"
  nameWithType: "Symbol,UnknownDescribedType"
  fullName: "org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType"
- uid: "org.apache.qpid.proton.amqp.Symbol,java.lang.Object"
  name: "Symbol,Object"
  nameWithType: "Symbol,Object"
  fullName: "org.apache.qpid.proton.amqp.Symbol,java.lang.Object"
- uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  name: "AmqpReceiveLink"
  nameWithType: "AmqpReceiveLink"
  fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
