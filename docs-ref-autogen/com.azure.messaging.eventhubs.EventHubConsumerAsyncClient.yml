### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient"
fullName: "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient"
name: "EventHubConsumerAsyncClient"
nameWithType: "EventHubConsumerAsyncClient"
summary: "An **asynchronous** consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> from either a specific Event Hub partition or all partitions in the context of a specific consumer group.\n\n**Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubConsumerAsyncClient\"></xref>**\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventhubconsumerasyncclient.instantiation\\}\n\n**Consuming events a single partition from Event Hub**\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventhubconsumerasyncclient.receive\\#string-eventposition\\}\n\n**Viewing latest partition information**\n\nLatest partition information as events are received can by setting <xref uid=\"com.azure.messaging.eventhubs.models.ReceiveOptions.setTrackLastEnqueuedEventProperties(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setTrackLastEnqueuedEventProperties\"></xref> to `true`. As events come in, explore the <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PartitionEvent\"></xref> object. \\{@codesnippet com.azure.messaging.eventhubs.eventhubconsumerasyncclient.receiveFromPartition\\#string-eventposition-receiveoptions\\}\n\n**Rate limiting consumption of events from Event Hub**\n\nFor event consumers that need to limit the number of events they receive at a given time, they can use <xref uid=\"reactor.core.publisher.BaseSubscriber.request(long)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BaseSubscriber#request(long)\"></xref>.\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventhubconsumerasyncclient.receive\\#string-eventposition-basesubscriber\\}\n\n**Receiving from all partitions**\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventhubconsumerasyncclient.receive\\#boolean\\}"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EventHubConsumerAsyncClient implements Closeable"
methods:
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.close()"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.getConsumerGroup()"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.getEventHubName()"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.getEventHubProperties()"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.getFullyQualifiedNamespace()"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.getPartitionIds()"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.getPartitionProperties(java.lang.String)"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.receive()"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.receive(boolean)"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.receive(boolean,com.azure.messaging.eventhubs.models.ReceiveOptions)"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.receiveFromPartition(java.lang.String,com.azure.messaging.eventhubs.models.EventPosition)"
- "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient.receiveFromPartition(java.lang.String,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.models.ReceiveOptions)"
type: "class"
implements:
- "<xref href=\"java.io.Closeable?alt=java.io.Closeable&text=Closeable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.messaging.eventhubs"
artifact: com.azure:azure-messaging-eventhubs:5.8.0
