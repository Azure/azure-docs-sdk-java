items:
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options
  id: _a_d_l_store_options
  parent: com.microsoft.azure.datalake.store
  children:
  - com.microsoft.azure.datalake.store._a_d_l_store_options.ADLStoreOptions()
  - com.microsoft.azure.datalake.store._a_d_l_store_options.enableThrowingRemoteExceptions()
  - com.microsoft.azure.datalake.store._a_d_l_store_options.setFilePathPrefix(String)
  - com.microsoft.azure.datalake.store._a_d_l_store_options.setInsecureTransport()
  - com.microsoft.azure.datalake.store._a_d_l_store_options.setUserAgentSuffix(String)
  href: com.microsoft.azure.datalake.store._a_d_l_store_options.yml
  langs:
  - java
  name: ADLStoreOptions
  nameWithType: ADLStoreOptions
  fullName: com.microsoft.azure.datalake.store.ADLStoreOptions
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLStoreOptions.java
      branch: master
      repo: https://github.com/azure/azure-data-lake-store-java
    path: src/main/java/com/microsoft/azure/datalake/store/ADLStoreOptions.java
    startLine: 11
  package: com.microsoft.azure.datalake.store
  summary: <p>Options to configure the behavior of <xref href="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false"></xref></p>
  syntax: &o1
    content: public class ADLStoreOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - com.microsoft.azure.datalake.store._a_d_l_store_options.getFilePathPrefix()
  - com.microsoft.azure.datalake.store._a_d_l_store_options.getUserAgentSuffix()
  - com.microsoft.azure.datalake.store._a_d_l_store_options.isThrowingRemoteExceptionsEnabled()
  - com.microsoft.azure.datalake.store._a_d_l_store_options.isUsingInsecureTransport()
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.ADLStoreOptions()
  id: ADLStoreOptions()
  parent: com.microsoft.azure.datalake.store._a_d_l_store_options
  href: com.microsoft.azure.datalake.store._a_d_l_store_options.yml
  langs:
  - java
  name: ADLStoreOptions()
  nameWithType: ADLStoreOptions.ADLStoreOptions()
  fullName: com.microsoft.azure.datalake.store.ADLStoreOptions.ADLStoreOptions()
  overload: com.microsoft.azure.datalake.store._a_d_l_store_options.ADLStoreOptions*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLStoreOptions.java
    startLine: 18
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public ADLStoreOptions()
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.enableThrowingRemoteExceptions()
  id: enableThrowingRemoteExceptions()
  parent: com.microsoft.azure.datalake.store._a_d_l_store_options
  href: com.microsoft.azure.datalake.store._a_d_l_store_options.yml
  langs:
  - java
  name: enableThrowingRemoteExceptions()
  nameWithType: ADLStoreOptions.enableThrowingRemoteExceptions()
  fullName: ADLStoreOptions com.microsoft.azure.datalake.store.ADLStoreOptions.enableThrowingRemoteExceptions()
  overload: com.microsoft.azure.datalake.store._a_d_l_store_options.enableThrowingRemoteExceptions*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLStoreOptions.java
    startLine: 80
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>Throw server-returned exception name instead of ADLExcetption. </p>

    <p>

      <xref href="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false"></xref> methods throw <xref href="com.microsoft.azure.datalake.store._a_d_l_exception" data-throw-if-not-resolved="false"></xref> on failure. <xref href="com.microsoft.azure.datalake.store._a_d_l_exception" data-throw-if-not-resolved="false"></xref> contains additional fields that have details on the error that occurred, like the HTTP response code and the server request ID, etc. </p>

    <p>However, in some cases, server returns an exception name in it's HTTP error stream. Calling this method causes the <xref href="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false"></xref> methods to throw the exception name returned by the server rather than <xref href="com.microsoft.azure.datalake.store._a_d_l_exception" data-throw-if-not-resolved="false"></xref>. </p>

    <p>In general, this is not recommended, since the name of the remote exception can also be retrieved from <xref href="com.microsoft.azure.datalake.store._a_d_l_exception" data-throw-if-not-resolved="false"></xref>. This method exists to enable usage within Hadoop as a file system. </p>

    <p></p>
  syntax:
    content: public ADLStoreOptions enableThrowingRemoteExceptions()
    return:
      type: com.microsoft.azure.datalake.store._a_d_l_store_options
      description: >-
        <p>

          <programlisting>

            <codeline>

              <highlight class="normal">this<sp></sp></highlight>

            </codeline>

          </programlisting>

        </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.setFilePathPrefix(String)
  id: setFilePathPrefix(String)
  parent: com.microsoft.azure.datalake.store._a_d_l_store_options
  href: com.microsoft.azure.datalake.store._a_d_l_store_options.yml
  langs:
  - java
  name: setFilePathPrefix(String prefix)
  nameWithType: ADLStoreOptions.setFilePathPrefix(String prefix)
  fullName: ADLStoreOptions com.microsoft.azure.datalake.store.ADLStoreOptions.setFilePathPrefix(String prefix)
  overload: com.microsoft.azure.datalake.store._a_d_l_store_options.setFilePathPrefix*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLStoreOptions.java
    startLine: 100
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>Set a prefix that will be prepended to all file paths from this client. This allows the client to be scoped to a subset of the directory Azure Data Lake Store tree.</p>

    <p></p>
  syntax:
    content: public ADLStoreOptions setFilePathPrefix(String prefix)
    parameters:
    - id: prefix
      type: "26831127"
    return:
      type: com.microsoft.azure.datalake.store._a_d_l_store_options
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.setInsecureTransport()
  id: setInsecureTransport()
  parent: com.microsoft.azure.datalake.store._a_d_l_store_options
  href: com.microsoft.azure.datalake.store._a_d_l_store_options.yml
  langs:
  - java
  name: setInsecureTransport()
  nameWithType: ADLStoreOptions.setInsecureTransport()
  fullName: ADLStoreOptions com.microsoft.azure.datalake.store.ADLStoreOptions.setInsecureTransport()
  overload: com.microsoft.azure.datalake.store._a_d_l_store_options.setInsecureTransport*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLStoreOptions.java
    startLine: 50
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>Use http as transport for back-end calls, instead of https. This is to allow unit testing using mock or fake web servers. </p>

    <p>

      <bold>Warning: Do not</bold> use this for talking to real Azure Data Lake service, since https is the only supported protocol on the server. </p>

    <p></p>
  syntax:
    content: public ADLStoreOptions setInsecureTransport()
    return:
      type: com.microsoft.azure.datalake.store._a_d_l_store_options
      description: >-
        <p>

          <programlisting>

            <codeline>

              <highlight class="normal">this<sp></sp></highlight>

            </codeline>

          </programlisting>

        </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.setUserAgentSuffix(String)
  id: setUserAgentSuffix(String)
  parent: com.microsoft.azure.datalake.store._a_d_l_store_options
  href: com.microsoft.azure.datalake.store._a_d_l_store_options.yml
  langs:
  - java
  name: setUserAgentSuffix(String userAgentSuffix)
  nameWithType: ADLStoreOptions.setUserAgentSuffix(String userAgentSuffix)
  fullName: ADLStoreOptions com.microsoft.azure.datalake.store.ADLStoreOptions.setUserAgentSuffix(String userAgentSuffix)
  overload: com.microsoft.azure.datalake.store._a_d_l_store_options.setUserAgentSuffix*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLStoreOptions.java
    startLine: 28
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>sets the user agent suffix to be added to the User-Agent header in all HTTP requests made to the server. This suffix is appended to the end of the User-Agent string constructed by the SDK.</p>

    <p></p>
  syntax:
    content: public ADLStoreOptions setUserAgentSuffix(String userAgentSuffix)
    parameters:
    - id: userAgentSuffix
      type: "26831127"
      description: <p>the suffix </p>
    return:
      type: com.microsoft.azure.datalake.store._a_d_l_store_options
      description: >-
        <p>

          <programlisting>

            <codeline>

              <highlight class="normal">this<sp></sp></highlight>

            </codeline>

          </programlisting>

        </p>
references:
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.ADLStoreOptions*
  name: ADLStoreOptions
  nameWithType: ADLStoreOptions.ADLStoreOptions
  fullName: com.microsoft.azure.datalake.store.ADLStoreOptions.ADLStoreOptions
  package: com.microsoft.azure.datalake.store
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.setUserAgentSuffix*
  name: setUserAgentSuffix
  nameWithType: ADLStoreOptions.setUserAgentSuffix
  fullName: ADLStoreOptions com.microsoft.azure.datalake.store.ADLStoreOptions.setUserAgentSuffix
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.setInsecureTransport*
  name: setInsecureTransport
  nameWithType: ADLStoreOptions.setInsecureTransport
  fullName: ADLStoreOptions com.microsoft.azure.datalake.store.ADLStoreOptions.setInsecureTransport
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.enableThrowingRemoteExceptions*
  name: enableThrowingRemoteExceptions
  nameWithType: ADLStoreOptions.enableThrowingRemoteExceptions
  fullName: ADLStoreOptions com.microsoft.azure.datalake.store.ADLStoreOptions.enableThrowingRemoteExceptions
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.setFilePathPrefix*
  name: setFilePathPrefix
  nameWithType: ADLStoreOptions.setFilePathPrefix
  fullName: ADLStoreOptions com.microsoft.azure.datalake.store.ADLStoreOptions.setFilePathPrefix
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.getFilePathPrefix()
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.getUserAgentSuffix()
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.isThrowingRemoteExceptionsEnabled()
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options.isUsingInsecureTransport()
- uid: com.microsoft.azure.datalake.store._a_d_l_store_options
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_store_options.yml
  name: ADLStoreOptions
  nameWithType: ADLStoreOptions
  fullName: com.microsoft.azure.datalake.store.ADLStoreOptions
  type: Class
  summary: <p>Options to configure the behavior of <xref href="com.microsoft.azure.datalake.store._a_d_l_store_client" data-throw-if-not-resolved="false"></xref></p>
  syntax: *o1
- uid: com.microsoft.azure.datalake.store._a_d_l_store_client
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_store_client.yml
  name: ADLStoreClient
  nameWithType: ADLStoreClient
  fullName: com.microsoft.azure.datalake.store.ADLStoreClient
  type: Class
  summary: >-
    <p>

      <programlisting>

        <codeline>

          <highlight class="normal">ADLStoreClient<sp></sp></highlight>

        </codeline>

      </programlisting> class represents a client to Azure Data Lake. It can be used to perform operations on files and directories. </p>
  syntax:
    content: public class ADLStoreClient
- uid: com.microsoft.azure.datalake.store._a_d_l_exception
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_exception.yml
  name: ADLException
  nameWithType: ADLException
  fullName: com.microsoft.azure.datalake.store.ADLException
  type: Class
  summary: <p>Exception type returned by Azure Data Lake SDK methods. Derives from <ref refid="" kindref="compound">IOException</ref>. Contains a number of additional fields that contain information about the success or failure of a server call. </p>
  syntax:
    content: public class ADLException
