### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeeds*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeeds"
name: "listDataFeeds"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.listDataFeeds"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeeds()"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeeds()"
  name: "listDataFeeds()"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.listDataFeeds()"
  summary: "List information of all data feeds on the metrics advisor account.\n\n**Code sample**\n\n```java\nmetricsAdvisorAdminAsyncClient.listDataFeeds()\n     .subscribe(dataFeed -> {\n         System.out.printf(\"Data feed Id: %s%n\", dataFeed.getId());\n         System.out.printf(\"Data feed description: %s%n\", dataFeed.getOptions().getDescription());\n         System.out.printf(\"Data feed source type: %s%n\", dataFeed.getSourceType());\n         System.out.printf(\"Data feed creator: %s%n\", dataFeed.getCreator());\n     });\n```"
  syntax: "public PagedFlux<DataFeed> listDataFeeds()"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing information of all the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataFeed\" data-throw-if-not-resolved=\"false\" data-raw-source=\"data feeds\"></xref> in the account."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataFeed?alt=com.azure.ai.metricsadvisor.administration.models.DataFeed&text=DataFeed\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeeds(com.azure.ai.metricsadvisor.administration.models.ListDataFeedOptions)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeeds(ListDataFeedOptions listDataFeedOptions)"
  name: "listDataFeeds(ListDataFeedOptions listDataFeedOptions)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.listDataFeeds(ListDataFeedOptions listDataFeedOptions)"
  summary: "List information of all data feeds on the metrics advisor account.\n\n**Code sample**\n\n```java\nmetricsAdvisorAdminAsyncClient.listDataFeeds(\n     new ListDataFeedOptions()\n         .setListDataFeedFilter(\n             new ListDataFeedFilter()\n                 .setDataFeedStatus(DataFeedStatus.ACTIVE)\n                 .setDataFeedGranularityType(DataFeedGranularityType.DAILY))\n         .setMaxPageSize(3))\n     .subscribe(dataFeed -> {\n         System.out.printf(\"Data feed Id: %s%n\", dataFeed.getId());\n         System.out.printf(\"Data feed description: %s%n\", dataFeed.getOptions().getDescription());\n         System.out.printf(\"Data feed source type: %s%n\", dataFeed.getSourceType());\n         System.out.printf(\"Data feed creator: %s%n\", dataFeed.getCreator());\n         System.out.printf(\"Data feed status: %s%n\", dataFeed.getStatus());\n         System.out.printf(\"Data feed granularity type: %s%n\", dataFeed.getGranularity().getGranularityType());\n     });\n```"
  parameters:
  - description: "The configurable <xref uid=\"com.azure.ai.metricsadvisor.administration.models.ListDataFeedOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to pass for filtering the output result."
    name: "listDataFeedOptions"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.ListDataFeedOptions?alt=com.azure.ai.metricsadvisor.administration.models.ListDataFeedOptions&text=ListDataFeedOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<DataFeed> listDataFeeds(ListDataFeedOptions listDataFeedOptions)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing information of all the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataFeed\" data-throw-if-not-resolved=\"false\" data-raw-source=\"data feeds\"></xref> in the account."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataFeed?alt=com.azure.ai.metricsadvisor.administration.models.DataFeed&text=DataFeed\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.1.1
