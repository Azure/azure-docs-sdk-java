### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task
  id: _job_preparation_task
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.commandLine()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.constraints()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.containerSettings()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.environmentSettings()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.id()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.rerunOnNodeRebootAfterSuccess()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.resourceFiles()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.userIdentity()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.waitForSuccess()
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withCommandLine(String)
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withConstraints(TaskConstraints)
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withContainerSettings(TaskContainerSettings)
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withEnvironmentSettings(List<EnvironmentSetting>)
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withId(String)
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withRerunOnNodeRebootAfterSuccess(Boolean)
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withResourceFiles(List<ResourceFile>)
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withUserIdentity(UserIdentity)
  - com.microsoft.azure.batch.protocol.models._job_preparation_task.withWaitForSuccess(Boolean)
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: JobPreparationTask
  nameWithType: JobPreparationTask
  fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTask
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 46
  package: com.microsoft.azure.batch.protocol.models
  summary: '<p>A Job Preparation task to run before any tasks of the job on any given compute node. You can use Job Preparation to prepare a compute node to run tasks for the job. Activities commonly performed in Job Preparation include: Downloading common resource files used by all the tasks in the job. The Job Preparation task can download these common resource files to the shared location on the compute node. (AZ_BATCH_NODE_ROOT_DIR), or starting a local service on the compute node so that all tasks of that job can communicate with it. If the Job Preparation task fails (that is, exhausts its retry count before exiting with exit code 0), Batch will not run tasks of this job on the compute node. The node remains ineligible to run tasks of this job until it is reimaged. The node remains active and can be used for other jobs. The Job Preparation task can run multiple times on the same compute node. Therefore, you should write the Job Preparation task to handle re-execution. If the compute node is rebooted, the Job Preparation task is run again on the node before scheduling any other task of the job, if rerunOnNodeRebootAfterSuccess is true or if the Job Preparation task did not previously complete. If the compute node is reimaged, the Job Preparation task is run again before scheduling any task of the job. Batch will retry tasks when a recovery operation is triggered on a compute node. Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all tasks should be idempotent. This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running tasks is to use some form of checkpointing. </p>'
  syntax: &o1
    content: public class JobPreparationTask
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.commandLine()
  id: commandLine()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: commandLine()
  nameWithType: JobPreparationTask.commandLine()
  fullName: String com.microsoft.azure.batch.protocol.models.JobPreparationTask.commandLine()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.commandLine*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 175
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the commandLine value.</p>

    <p></p>
  syntax:
    content: public String commandLine()
    return:
      type: "26831127"
      description: <p>the commandLine value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.constraints()
  id: constraints()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: constraints()
  nameWithType: JobPreparationTask.constraints()
  fullName: TaskConstraints com.microsoft.azure.batch.protocol.models.JobPreparationTask.constraints()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.constraints*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 255
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the constraints value.</p>

    <p></p>
  syntax:
    content: public TaskConstraints constraints()
    return:
      type: com.microsoft.azure.batch.protocol.models._task_constraints
      description: <p>the constraints value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.containerSettings()
  id: containerSettings()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: containerSettings()
  nameWithType: JobPreparationTask.containerSettings()
  fullName: TaskContainerSettings com.microsoft.azure.batch.protocol.models.JobPreparationTask.containerSettings()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.containerSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 195
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the containerSettings value.</p>

    <p></p>
  syntax:
    content: public TaskContainerSettings containerSettings()
    return:
      type: com.microsoft.azure.batch.protocol.models._task_container_settings
      description: <p>the containerSettings value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.environmentSettings()
  id: environmentSettings()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: environmentSettings()
  nameWithType: JobPreparationTask.environmentSettings()
  fullName: List<EnvironmentSetting> com.microsoft.azure.batch.protocol.models.JobPreparationTask.environmentSettings()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.environmentSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 235
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the environmentSettings value.</p>

    <p></p>
  syntax:
    content: public List<EnvironmentSetting> environmentSettings()
    return:
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._environment_settinga08ddfce
      description: <p>the environmentSettings value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.id()
  id: id()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: id()
  nameWithType: JobPreparationTask.id()
  fullName: String com.microsoft.azure.batch.protocol.models.JobPreparationTask.id()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.id*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 155
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the id value.</p>

    <p></p>
  syntax:
    content: public String id()
    return:
      type: "26831127"
      description: <p>the id value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.rerunOnNodeRebootAfterSuccess()
  id: rerunOnNodeRebootAfterSuccess()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: rerunOnNodeRebootAfterSuccess()
  nameWithType: JobPreparationTask.rerunOnNodeRebootAfterSuccess()
  fullName: Boolean com.microsoft.azure.batch.protocol.models.JobPreparationTask.rerunOnNodeRebootAfterSuccess()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.rerunOnNodeRebootAfterSuccess*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 315
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the rerunOnNodeRebootAfterSuccess value.</p>

    <p></p>
  syntax:
    content: public Boolean rerunOnNodeRebootAfterSuccess()
    return:
      type: 866c2227
      description: <p>the rerunOnNodeRebootAfterSuccess value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.resourceFiles()
  id: resourceFiles()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: resourceFiles()
  nameWithType: JobPreparationTask.resourceFiles()
  fullName: List<ResourceFile> com.microsoft.azure.batch.protocol.models.JobPreparationTask.resourceFiles()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.resourceFiles*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 215
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the resourceFiles value.</p>

    <p></p>
  syntax:
    content: public List<ResourceFile> resourceFiles()
    return:
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._resource_filea08ddfce
      description: <p>the resourceFiles value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.userIdentity()
  id: userIdentity()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: userIdentity()
  nameWithType: JobPreparationTask.userIdentity()
  fullName: UserIdentity com.microsoft.azure.batch.protocol.models.JobPreparationTask.userIdentity()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.userIdentity*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 295
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the userIdentity value.</p>

    <p></p>
  syntax:
    content: public UserIdentity userIdentity()
    return:
      type: com.microsoft.azure.batch.protocol.models._user_identity
      description: <p>the userIdentity value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.waitForSuccess()
  id: waitForSuccess()
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: waitForSuccess()
  nameWithType: JobPreparationTask.waitForSuccess()
  fullName: Boolean com.microsoft.azure.batch.protocol.models.JobPreparationTask.waitForSuccess()
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.waitForSuccess*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 275
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Get the waitForSuccess value.</p>

    <p></p>
  syntax:
    content: public Boolean waitForSuccess()
    return:
      type: 866c2227
      description: <p>the waitForSuccess value </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withCommandLine(String)
  id: withCommandLine(String)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withCommandLine(String commandLine)
  nameWithType: JobPreparationTask.withCommandLine(String commandLine)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withCommandLine(String commandLine)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withCommandLine*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 185
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the commandLine value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withCommandLine(String commandLine)
    parameters:
    - id: commandLine
      type: "26831127"
      description: <p>the commandLine value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withConstraints(TaskConstraints)
  id: withConstraints(TaskConstraints)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withConstraints(TaskConstraints constraints)
  nameWithType: JobPreparationTask.withConstraints(TaskConstraints constraints)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withConstraints(TaskConstraints constraints)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withConstraints*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 265
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the constraints value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withConstraints(TaskConstraints constraints)
    parameters:
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models._task_constraints
      description: <p>the constraints value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withContainerSettings(TaskContainerSettings)
  id: withContainerSettings(TaskContainerSettings)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withContainerSettings(TaskContainerSettings containerSettings)
  nameWithType: JobPreparationTask.withContainerSettings(TaskContainerSettings containerSettings)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withContainerSettings(TaskContainerSettings containerSettings)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withContainerSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 205
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the containerSettings value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withContainerSettings(TaskContainerSettings containerSettings)
    parameters:
    - id: containerSettings
      type: com.microsoft.azure.batch.protocol.models._task_container_settings
      description: <p>the containerSettings value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withEnvironmentSettings(List<EnvironmentSetting>)
  id: withEnvironmentSettings(List<EnvironmentSetting>)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  nameWithType: JobPreparationTask.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withEnvironmentSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 245
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the environmentSettings value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
    parameters:
    - id: environmentSettings
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._environment_settinga08ddfce
      description: <p>the environmentSettings value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withId(String)
  id: withId(String)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withId(String id)
  nameWithType: JobPreparationTask.withId(String id)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withId(String id)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withId*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 165
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the id value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withId(String id)
    parameters:
    - id: id
      type: "26831127"
      description: <p>the id value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withRerunOnNodeRebootAfterSuccess(Boolean)
  id: withRerunOnNodeRebootAfterSuccess(Boolean)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
  nameWithType: JobPreparationTask.withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withRerunOnNodeRebootAfterSuccess*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 325
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the rerunOnNodeRebootAfterSuccess value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
    parameters:
    - id: rerunOnNodeRebootAfterSuccess
      type: 866c2227
      description: <p>the rerunOnNodeRebootAfterSuccess value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withResourceFiles(List<ResourceFile>)
  id: withResourceFiles(List<ResourceFile>)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withResourceFiles(List<ResourceFile> resourceFiles)
  nameWithType: JobPreparationTask.withResourceFiles(List<ResourceFile> resourceFiles)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withResourceFiles(List<ResourceFile> resourceFiles)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withResourceFiles*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 225
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the resourceFiles value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withResourceFiles(List<ResourceFile> resourceFiles)
    parameters:
    - id: resourceFiles
      type: 5618da2dcom.microsoft.azure.batch.protocol.models._resource_filea08ddfce
      description: <p>the resourceFiles value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withUserIdentity(UserIdentity)
  id: withUserIdentity(UserIdentity)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withUserIdentity(UserIdentity userIdentity)
  nameWithType: JobPreparationTask.withUserIdentity(UserIdentity userIdentity)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withUserIdentity(UserIdentity userIdentity)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withUserIdentity*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 305
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the userIdentity value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withUserIdentity(UserIdentity userIdentity)
    parameters:
    - id: userIdentity
      type: com.microsoft.azure.batch.protocol.models._user_identity
      description: <p>the userIdentity value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withWaitForSuccess(Boolean)
  id: withWaitForSuccess(Boolean)
  parent: com.microsoft.azure.batch.protocol.models._job_preparation_task
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  langs:
  - java
  name: withWaitForSuccess(Boolean waitForSuccess)
  nameWithType: JobPreparationTask.withWaitForSuccess(Boolean waitForSuccess)
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withWaitForSuccess(Boolean waitForSuccess)
  overload: com.microsoft.azure.batch.protocol.models._job_preparation_task.withWaitForSuccess*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/models/JobPreparationTask.java
    startLine: 285
  package: com.microsoft.azure.batch.protocol.models
  summary: >-
    <p>Set the waitForSuccess value.</p>

    <p></p>
  syntax:
    content: public JobPreparationTask withWaitForSuccess(Boolean waitForSuccess)
    parameters:
    - id: waitForSuccess
      type: 866c2227
      description: <p>the waitForSuccess value to set </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._job_preparation_task
      description: <p>the <xref uid="com.microsoft.azure.batch.protocol.models._job_preparation_task" data-throw-if-not-resolved="false">JobPreparationTask</xref> object itself. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.id*
  name: id
  nameWithType: JobPreparationTask.id
  fullName: String com.microsoft.azure.batch.protocol.models.JobPreparationTask.id
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withId*
  name: withId
  nameWithType: JobPreparationTask.withId
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.commandLine*
  name: commandLine
  nameWithType: JobPreparationTask.commandLine
  fullName: String com.microsoft.azure.batch.protocol.models.JobPreparationTask.commandLine
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withCommandLine*
  name: withCommandLine
  nameWithType: JobPreparationTask.withCommandLine
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withCommandLine
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.containerSettings*
  name: containerSettings
  nameWithType: JobPreparationTask.containerSettings
  fullName: TaskContainerSettings com.microsoft.azure.batch.protocol.models.JobPreparationTask.containerSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withContainerSettings*
  name: withContainerSettings
  nameWithType: JobPreparationTask.withContainerSettings
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withContainerSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: 5618da2dcom.microsoft.azure.batch.protocol.models._resource_filea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.batch.protocol.models._resource_file
    name: ResourceFile
    fullName: com.microsoft.azure.batch.protocol.models.ResourceFile
    href: com.microsoft.azure.batch.protocol.models._resource_file.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.resourceFiles*
  name: resourceFiles
  nameWithType: JobPreparationTask.resourceFiles
  fullName: List<ResourceFile> com.microsoft.azure.batch.protocol.models.JobPreparationTask.resourceFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withResourceFiles*
  name: withResourceFiles
  nameWithType: JobPreparationTask.withResourceFiles
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withResourceFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: 5618da2dcom.microsoft.azure.batch.protocol.models._environment_settinga08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.batch.protocol.models._environment_setting
    name: EnvironmentSetting
    fullName: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
    href: com.microsoft.azure.batch.protocol.models._environment_setting.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.environmentSettings*
  name: environmentSettings
  nameWithType: JobPreparationTask.environmentSettings
  fullName: List<EnvironmentSetting> com.microsoft.azure.batch.protocol.models.JobPreparationTask.environmentSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withEnvironmentSettings*
  name: withEnvironmentSettings
  nameWithType: JobPreparationTask.withEnvironmentSettings
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withEnvironmentSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.constraints*
  name: constraints
  nameWithType: JobPreparationTask.constraints
  fullName: TaskConstraints com.microsoft.azure.batch.protocol.models.JobPreparationTask.constraints
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withConstraints*
  name: withConstraints
  nameWithType: JobPreparationTask.withConstraints
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withConstraints
  package: com.microsoft.azure.batch.protocol.models
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.waitForSuccess*
  name: waitForSuccess
  nameWithType: JobPreparationTask.waitForSuccess
  fullName: Boolean com.microsoft.azure.batch.protocol.models.JobPreparationTask.waitForSuccess
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withWaitForSuccess*
  name: withWaitForSuccess
  nameWithType: JobPreparationTask.withWaitForSuccess
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withWaitForSuccess
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.userIdentity*
  name: userIdentity
  nameWithType: JobPreparationTask.userIdentity
  fullName: UserIdentity com.microsoft.azure.batch.protocol.models.JobPreparationTask.userIdentity
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withUserIdentity*
  name: withUserIdentity
  nameWithType: JobPreparationTask.withUserIdentity
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withUserIdentity
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.rerunOnNodeRebootAfterSuccess*
  name: rerunOnNodeRebootAfterSuccess
  nameWithType: JobPreparationTask.rerunOnNodeRebootAfterSuccess
  fullName: Boolean com.microsoft.azure.batch.protocol.models.JobPreparationTask.rerunOnNodeRebootAfterSuccess
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task.withRerunOnNodeRebootAfterSuccess*
  name: withRerunOnNodeRebootAfterSuccess
  nameWithType: JobPreparationTask.withRerunOnNodeRebootAfterSuccess
  fullName: JobPreparationTask com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models._task_container_settings
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_container_settings.yml
  name: TaskContainerSettings
  nameWithType: TaskContainerSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
  type: Class
  summary: <p>The container settings for a task. </p>
  syntax:
    content: public class TaskContainerSettings
- uid: com.microsoft.azure.batch.protocol.models._resource_file
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._resource_file.yml
  name: ResourceFile
  nameWithType: ResourceFile
  fullName: com.microsoft.azure.batch.protocol.models.ResourceFile
  type: Class
  summary: <p>A file to be downloaded from Azure blob storage to a compute node. </p>
  syntax:
    content: public class ResourceFile
- uid: com.microsoft.azure.batch.protocol._files
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._files.yml
  name: Files
  nameWithType: Files
  fullName: com.microsoft.azure.batch.protocol.Files
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false">Files</xref>. </p>
  syntax:
    content: public interface Files
- uid: com.microsoft.azure.batch.protocol.models._environment_setting
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._environment_setting.yml
  name: EnvironmentSetting
  nameWithType: EnvironmentSetting
  fullName: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
  type: Class
  summary: <p>An environment variable to be set on a task process. </p>
  syntax:
    content: public class EnvironmentSetting
- uid: com.microsoft.azure.batch.protocol.models._task_constraints
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._task_constraints.yml
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints
  type: Class
  summary: <p>Execution constraints to apply to a task. </p>
  syntax:
    content: public class TaskConstraints
- uid: com.microsoft.azure.batch.protocol.models._user_identity
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._user_identity.yml
  name: UserIdentity
  nameWithType: UserIdentity
  fullName: com.microsoft.azure.batch.protocol.models.UserIdentity
  type: Class
  summary: <p>The definition of the user identity under which the task is run. Specify either the userName or autoUser property, but not both. On <xref uid="com.microsoft.azure.batch.protocol.models._cloud_service_configuration" data-throw-if-not-resolved="false">CloudServiceConfiguration</xref> pools, this user is logged in with the INTERACTIVE flag. On Windows <xref uid="com.microsoft.azure.batch.protocol.models._virtual_machine_configuration" data-throw-if-not-resolved="false">VirtualMachineConfiguration</xref> pools, this user is logged in with the BATCH flag. </p>
  syntax:
    content: public class UserIdentity
- uid: com.microsoft.azure.batch.protocol.models._job_preparation_task
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._job_preparation_task.yml
  name: JobPreparationTask
  nameWithType: JobPreparationTask
  fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTask
  type: Class
  summary: '<p>A Job Preparation task to run before any tasks of the job on any given compute node. You can use Job Preparation to prepare a compute node to run tasks for the job. Activities commonly performed in Job Preparation include: Downloading common resource files used by all the tasks in the job. The Job Preparation task can download these common resource files to the shared location on the compute node. (AZ_BATCH_NODE_ROOT_DIR), or starting a local service on the compute node so that all tasks of that job can communicate with it. If the Job Preparation task fails (that is, exhausts its retry count before exiting with exit code 0), Batch will not run tasks of this job on the compute node. The node remains ineligible to run tasks of this job until it is reimaged. The node remains active and can be used for other jobs. The Job Preparation task can run multiple times on the same compute node. Therefore, you should write the Job Preparation task to handle re-execution. If the compute node is rebooted, the Job Preparation task is run again on the node before scheduling any other task of the job, if rerunOnNodeRebootAfterSuccess is true or if the Job Preparation task did not previously complete. If the compute node is reimaged, the Job Preparation task is run again before scheduling any task of the job. Batch will retry tasks when a recovery operation is triggered on a compute node. Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all tasks should be idempotent. This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running tasks is to use some form of checkpointing. </p>'
  syntax: *o1
