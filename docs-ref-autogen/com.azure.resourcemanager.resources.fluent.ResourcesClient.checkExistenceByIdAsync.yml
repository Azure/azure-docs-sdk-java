### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.ResourcesClient.checkExistenceByIdAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.ResourcesClient.checkExistenceByIdAsync"
name: "checkExistenceByIdAsync"
nameWithType: "ResourcesClient.checkExistenceByIdAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.ResourcesClient.checkExistenceByIdAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ResourcesClient.checkExistenceByIdAsync(String resourceId, String apiVersion)"
  name: "checkExistenceByIdAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesClient.checkExistenceByIdAsync(String resourceId, String apiVersion)"
  summary: "Checks by ID whether a resource exists."
  parameters:
  - description: "The fully qualified ID of the resource, including the resource name and resource type. Use the\n     format,\n     /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The API version to use for the operation."
    name: "apiVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Boolean> checkExistenceByIdAsync(String resourceId, String apiVersion)"
  returns:
    description: "whether resource exists."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
