### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin"
fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin"
name: "BasicDigitalTwin"
nameWithType: "BasicDigitalTwin"
summary: "An optional, helper class for deserializing a digital twin. Only properties with non-null values are included."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BasicDigitalTwin"
constructors:
- "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin.BasicDigitalTwin()"
methods:
- "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin.addCustomProperty(java.lang.String,java.lang.Object)"
- "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin.getCustomProperties()"
- "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin.getId()"
- "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin.getMetadata()"
- "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin.setId(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.BasicDigitalTwin.setMetadata(com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.DigitalTwinMetadata)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.26.0
