### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized
  id: WithIsPlanAuthorized
  parent: com.microsoft.azure.management.labservices.v2018_10_15
  children:
  - com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized.withIsPlanAuthorized(Boolean)
  href: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized.yml
  langs:
  - java
  name: GalleryImage.DefinitionStages.WithIsPlanAuthorized
  nameWithType: GalleryImage.DefinitionStages.WithIsPlanAuthorized
  fullName: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized
  type: Interface
  source:
    remote: &o0
      path: sdk/labservices/mgmt-v2018_10_15/src/main/java/com/microsoft/azure/management/labservices/v2018_10_15/GalleryImage.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/labservices/mgmt-v2018_10_15/src/main/java/com/microsoft/azure/management/labservices/v2018_10_15/GalleryImage.java
    startLine: 167
  package: com.microsoft.azure.management.labservices.v2018_10_15
  summary: "<p>The stage of the galleryimage definition allowing to specify IsPlanAuthorized. </p>"
  syntax:
    content: public interface WithIsPlanAuthorized
- uid: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized.withIsPlanAuthorized(Boolean)
  id: withIsPlanAuthorized(Boolean)
  parent: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized
  href: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized.yml
  langs:
  - java
  name: withIsPlanAuthorized(Boolean isPlanAuthorized)
  nameWithType: GalleryImage.DefinitionStages.WithIsPlanAuthorized.withIsPlanAuthorized(Boolean isPlanAuthorized)
  fullName: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized.withIsPlanAuthorized(Boolean isPlanAuthorized)
  overload: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized.withIsPlanAuthorized*
  type: Method
  source:
    remote: *o0
    path: sdk/labservices/mgmt-v2018_10_15/src/main/java/com/microsoft/azure/management/labservices/v2018_10_15/GalleryImage.java
    startLine: 173
  package: com.microsoft.azure.management.labservices.v2018_10_15
  summary: "<p>Specifies isPlanAuthorized. </p>"
  syntax:
    content: public WithCreate withIsPlanAuthorized(Boolean isPlanAuthorized)
    parameters:
    - id: isPlanAuthorized
      type: 866c2227
      description: <p>Indicates if the plan has been authorized for programmatic deployment </p>
    return:
      type: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithCreate
      description: <p>the next definition stage </p>
references:
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized.withIsPlanAuthorized*
  name: withIsPlanAuthorized
  nameWithType: GalleryImage.DefinitionStages.WithIsPlanAuthorized.withIsPlanAuthorized
  fullName: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithIsPlanAuthorized.withIsPlanAuthorized
  package: com.microsoft.azure.management.labservices.v2018_10_15
- uid: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithCreate
  parent: com.microsoft.azure.management.labservices.v2018_10_15
  href: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithCreate.yml
  name: GalleryImage.DefinitionStages.WithCreate
  nameWithType: GalleryImage.DefinitionStages.WithCreate
  fullName: com.microsoft.azure.management.labservices.v2018_10_15.GalleryImage.DefinitionStages.WithCreate
  type: Interface
  summary: "<p>The stage of the definition which contains all the minimum required inputs for the resource to be created (via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WithCreate#create()\"></xref>), but also allows for any other optional settings to be specified. </p>"
  syntax:
    content: public interface WithCreate extends GalleryImage.DefinitionStages.WithIsEnabled,GalleryImage.DefinitionStages.WithIsOverride,GalleryImage.DefinitionStages.WithIsPlanAuthorized,GalleryImage.DefinitionStages.WithLocation,GalleryImage.DefinitionStages.WithProvisioningState,GalleryImage.DefinitionStages.WithTags,GalleryImage.DefinitionStages.WithUniqueIdentifier
