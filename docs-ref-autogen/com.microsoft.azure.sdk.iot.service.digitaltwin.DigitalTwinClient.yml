### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  id: DigitalTwinClient
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin
  children:
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.createFromConnectionString(String)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwin(String,Class<T>)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwinWithResponse(String,Class<T>)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand(String,String)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand(String,String,String)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommandWithResponse(String,String,String,DigitalTwinInvokeCommandRequestOptions)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand(String,String,String)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand(String,String,String,String)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommandWithResponse(String,String,String,String,DigitalTwinInvokeCommandRequestOptions)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwin(String,List<Object>)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse(String,List<Object>)
  - com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse(String,List<Object>,DigitalTwinUpdateRequestOptions)
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: DigitalTwinClient
  nameWithType: DigitalTwinClient
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 20
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>The Digital Twins Service Client contains methods to retrieve and update digital twin information, and invoke commands on a digital twin device. </p>"
  syntax: &o1
    content: public class DigitalTwinClient
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.createFromConnectionString(String)
  id: createFromConnectionString(String)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: DigitalTwinClient.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.createFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 32
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Creates an implementation instance of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DigitalTwins\"></xref> that is used to invoke the Digital Twin features </p>"
  syntax:
    content: public static DigitalTwinClient createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>The IoTHub connection string </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
      description: <p>DigitalTwinClient </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwin(String,Class<T>)
  id: getDigitalTwin(String,Class<T>)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: getDigitalTwin(String digitalTwinId, Class<T> clazz)
  nameWithType: DigitalTwinClient.getDigitalTwin(String digitalTwinId, Class<T> clazz)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwin(String digitalTwinId, Class<T> clazz)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwin*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 44
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Gets a digital twin. </p>"
  syntax:
    content: public <T> T getDigitalTwin(String digitalTwinId, Class<T> clazz)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: clazz
      type: ffb09d2d
      description: <p>The class to deserialize the application/json into. </p>
    return:
      type: "34698212"
      description: <p>The application/json of the digital twin. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwinWithResponse(String,Class<T>)
  id: getDigitalTwinWithResponse(String,Class<T>)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: getDigitalTwinWithResponse(String digitalTwinId, Class<T> clazz)
  nameWithType: DigitalTwinClient.getDigitalTwinWithResponse(String digitalTwinId, Class<T> clazz)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwinWithResponse(String digitalTwinId, Class<T> clazz)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwinWithResponse*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 56
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Gets a digital twin. </p>"
  syntax:
    content: public <T> ServiceResponseWithHeaders<T, DigitalTwinGetHeaders> getDigitalTwinWithResponse(String digitalTwinId, Class<T> clazz)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: clazz
      type: ffb09d2d
      description: <p>The class to deserialize the application/json into. </p>
    return:
      type: f6d8a7abcom.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeadersa08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> representing deserialized application/json of the digital twin with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinGetHeaders"></xref>. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand(String,String)
  id: invokeCommand(String,String)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: invokeCommand(String digitalTwinId, String commandName)
  nameWithType: DigitalTwinClient.invokeCommand(String digitalTwinId, String commandName)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand(String digitalTwinId, String commandName)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 105
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Invoke a command on a digital twin. </p>"
  syntax:
    content: public DigitalTwinCommandResponse invokeCommand(String digitalTwinId, String commandName)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: commandName
      type: "26831127"
      description: <p>The command to be invoked. </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>can be thrown if the provided payload cannot be deserialized into a valid Json object. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand(String,String,String)
  id: invokeCommand(String,String,String)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: invokeCommand(String digitalTwinId, String commandName, String payload)
  nameWithType: DigitalTwinClient.invokeCommand(String digitalTwinId, String commandName, String payload)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand(String digitalTwinId, String commandName, String payload)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 117
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Invoke a command on a digital twin. </p>"
  syntax:
    content: public DigitalTwinCommandResponse invokeCommand(String digitalTwinId, String commandName, String payload)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: commandName
      type: "26831127"
      description: <p>The command to be invoked. </p>
    - id: payload
      type: "26831127"
      description: <p>The command payload. </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>can be thrown if the provided payload cannot be deserialized into a valid Json object. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommandWithResponse(String,String,String,DigitalTwinInvokeCommandRequestOptions)
  id: invokeCommandWithResponse(String,String,String,DigitalTwinInvokeCommandRequestOptions)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: invokeCommandWithResponse(String digitalTwinId, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  nameWithType: DigitalTwinClient.invokeCommandWithResponse(String digitalTwinId, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommandWithResponse(String digitalTwinId, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommandWithResponse*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 131
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Invoke a command on a digital twin. </p>"
  syntax:
    content: public ServiceResponseWithHeaders<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders> invokeCommandWithResponse(String digitalTwinId, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: commandName
      type: "26831127"
      description: <p>The command to be invoked. </p>
    - id: payload
      type: "26831127"
      description: <p>The command payload. </p>
    - id: options
      type: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions
      description: <p>The optional settings for this request. </p>
    return:
      type: 5104b848com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponseb33c76fccom.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeadersa08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinInvokeRootLevelCommandHeaders"></xref> and <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>can be thrown if the provided payload cannot be deserialized into a valid Json object. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand(String,String,String)
  id: invokeComponentCommand(String,String,String)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  nameWithType: DigitalTwinClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 145
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Invoke a command on a digital twin component. </p>"
  syntax:
    content: public DigitalTwinCommandResponse invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: componentName
      type: "26831127"
      description: <p>The component name under which the command is defined. </p>
    - id: commandName
      type: "26831127"
      description: <p>The command to be invoked. </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>can be thrown if the provided payload cannot be deserialized into a valid Json object. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand(String,String,String,String)
  id: invokeComponentCommand(String,String,String,String)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  nameWithType: DigitalTwinClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 158
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Invoke a command on a digital twin component. </p>"
  syntax:
    content: public DigitalTwinCommandResponse invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: componentName
      type: "26831127"
      description: <p>The component name under which the command is defined. </p>
    - id: commandName
      type: "26831127"
      description: <p>The command to be invoked. </p>
    - id: payload
      type: "26831127"
      description: <p>The command payload. </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>can be thrown if the provided payload cannot be deserialized into a valid Json object. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommandWithResponse(String,String,String,String,DigitalTwinInvokeCommandRequestOptions)
  id: invokeComponentCommandWithResponse(String,String,String,String,DigitalTwinInvokeCommandRequestOptions)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: invokeComponentCommandWithResponse(String digitalTwinId, String componentName, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  nameWithType: DigitalTwinClient.invokeComponentCommandWithResponse(String digitalTwinId, String componentName, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommandWithResponse(String digitalTwinId, String componentName, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommandWithResponse*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 173
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Invoke a command on a digital twin component. </p>"
  syntax:
    content: public ServiceResponseWithHeaders<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders> invokeComponentCommandWithResponse(String digitalTwinId, String componentName, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: componentName
      type: "26831127"
      description: <p>The component name under which the command is defined. </p>
    - id: commandName
      type: "26831127"
      description: <p>The command to be invoked. </p>
    - id: payload
      type: "26831127"
      description: <p>The command payload. </p>
    - id: options
      type: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions
      description: <p>The optional settings for this request. </p>
    return:
      type: 5104b848com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponseb33c76fccom.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeadersa08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinInvokeRootLevelCommandHeaders"></xref> and <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>can be thrown if the provided payload cannot be deserialized into a valid Json object. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwin(String,List<Object>)
  id: updateDigitalTwin(String,List<Object>)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  nameWithType: DigitalTwinClient.updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwin*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 68
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Updates a digital twin. </p>"
  syntax:
    content: public Void updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: digitalTwinUpdateOperations
      type: df85f1b7
      description: <p>The JSON patch to apply to the specified digital twin. This argument can be created using <xref uid="com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility" data-throw-if-not-resolved="false" data-raw-source="UpdateOperationUtility"></xref>. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse(String,List<Object>)
  id: updateDigitalTwinWithResponse(String,List<Object>)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  nameWithType: DigitalTwinClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 80
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Updates a digital twin. </p>"
  syntax:
    content: public ServiceResponseWithHeaders<Void, DigitalTwinUpdateHeaders> updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: digitalTwinUpdateOperations
      type: df85f1b7
      description: <p>The JSON patch to apply to the specified digital twin. This argument can be created using <xref uid="com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility" data-throw-if-not-resolved="false" data-raw-source="UpdateOperationUtility"></xref>. </p>
    return:
      type: c6b65ceecom.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeadersa08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinUpdateHeaders"></xref>. </p>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse(String,List<Object>,DigitalTwinUpdateRequestOptions)
  id: updateDigitalTwinWithResponse(String,List<Object>,DigitalTwinUpdateRequestOptions)
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  langs:
  - java
  name: updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)
  nameWithType: DigitalTwinClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)
  overload: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java
    startLine: 92
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
  summary: "<p>Updates a digital twin. </p>"
  syntax:
    content: public ServiceResponseWithHeaders<Void, DigitalTwinUpdateHeaders> updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)
    parameters:
    - id: digitalTwinId
      type: "26831127"
      description: <p>The Id of the digital twin. </p>
    - id: digitalTwinUpdateOperations
      type: df85f1b7
      description: <p>The JSON patch to apply to the specified digital twin. This argument can be created using <xref uid="com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility" data-throw-if-not-resolved="false" data-raw-source="UpdateOperationUtility"></xref>. </p>
    - id: options
      type: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinUpdateRequestOptions
      description: <p>The optional settings for this request. </p>
    return:
      type: c6b65ceecom.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeadersa08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinUpdateHeaders"></xref>. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: DigitalTwinClient.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: df85f1b7
  spec.java:
  - name: List<Object>
    fullName: List<Object>
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwin*
  name: updateDigitalTwin
  nameWithType: DigitalTwinClient.updateDigitalTwin
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwin
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: c6b65ceecom.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeadersa08ddfce
  spec.java:
  - name: 'ServiceResponseWithHeaders<Void, '
    fullName: 'ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders
    name: DigitalTwinUpdateHeaders
    fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders
    href: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse*
  name: updateDigitalTwinWithResponse
  nameWithType: DigitalTwinClient.updateDigitalTwinWithResponse
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.updateDigitalTwinWithResponse
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand*
  name: invokeCommand
  nameWithType: DigitalTwinClient.invokeCommand
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommand
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: 5104b848com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponseb33c76fccom.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeadersa08ddfce
  spec.java:
  - name: ServiceResponseWithHeaders<
    fullName: ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse
    name: DigitalTwinCommandResponse
    fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse
    href: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders
    name: DigitalTwinInvokeCommandHeaders
    fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders
    href: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommandWithResponse*
  name: invokeCommandWithResponse
  nameWithType: DigitalTwinClient.invokeCommandWithResponse
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeCommandWithResponse
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand*
  name: invokeComponentCommand
  nameWithType: DigitalTwinClient.invokeComponentCommand
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommand
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommandWithResponse*
  name: invokeComponentCommandWithResponse
  nameWithType: DigitalTwinClient.invokeComponentCommandWithResponse
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.invokeComponentCommandWithResponse
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: ffb09d2d
  spec.java:
  - name: Class<T>
    fullName: Class<T>
- uid: "34698212"
  spec.java:
  - name: <T> T
    fullName: <T> T
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwin*
  name: getDigitalTwin
  nameWithType: DigitalTwinClient.getDigitalTwin
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwin
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: f6d8a7abcom.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeadersa08ddfce
  spec.java:
  - name: '<T> ServiceResponseWithHeaders<T, '
    fullName: '<T> ServiceResponseWithHeaders<T, '
  - uid: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders
    name: DigitalTwinGetHeaders
    fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders
    href: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwinWithResponse*
  name: getDigitalTwinWithResponse
  nameWithType: DigitalTwinClient.getDigitalTwinWithResponse
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwinWithResponse
  package: com.microsoft.azure.sdk.iot.service.digitaltwin
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.yml
  name: DigitalTwinAsyncClient
  nameWithType: DigitalTwinAsyncClient
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient
  type: Class
  summary: "<p>The Digital Twins Service Client contains asynchronous methods to retrieve and update digital twin information, and invoke commands on a digital twin device. </p>"
  syntax:
    content: public class DigitalTwinAsyncClient
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.yml
  name: DigitalTwinClient
  nameWithType: DigitalTwinClient
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient
  type: Class
  summary: "<p>The Digital Twins Service Client contains methods to retrieve and update digital twin information, and invoke commands on a digital twin device. </p>"
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility.yml
  name: UpdateOperationUtility
  nameWithType: UpdateOperationUtility
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility
  type: Class
  summary: "<p>A utility to create the JSON patch payload required for update operations such as update digital twin </p>"
  syntax:
    content: public class UpdateOperationUtility
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.customized
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders.yml
  name: DigitalTwinUpdateHeaders
  nameWithType: DigitalTwinUpdateHeaders
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders
  type: Class
  summary: "<p>Defines headers for UpdateDigitalTwin operation. </p>"
  syntax:
    content: public class DigitalTwinUpdateHeaders
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinUpdateRequestOptions
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.models
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinUpdateRequestOptions.yml
  name: DigitalTwinUpdateRequestOptions
  nameWithType: DigitalTwinUpdateRequestOptions
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinUpdateRequestOptions
  type: Class
  syntax:
    content: public class DigitalTwinUpdateRequestOptions
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.models
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse.yml
  name: DigitalTwinCommandResponse
  nameWithType: DigitalTwinCommandResponse
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse
  type: Class
  summary: "<p>Represents the device command invocation results. </p>"
  syntax:
    content: public class DigitalTwinCommandResponse
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.models
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders.yml
  name: DigitalTwinInvokeCommandHeaders
  nameWithType: DigitalTwinInvokeCommandHeaders
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders
  type: Class
  summary: "<p>Represents the headers for InvokeCommandAsync and InvokeComponentCommandAsync operation. </p>"
  syntax:
    content: public class DigitalTwinInvokeCommandHeaders
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.models
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions.yml
  name: DigitalTwinInvokeCommandRequestOptions
  nameWithType: DigitalTwinInvokeCommandRequestOptions
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions
  type: Class
  summary: "<p>General request options that are applicable, but optional, for invoke command APIs. </p>"
  syntax:
    content: public class DigitalTwinInvokeCommandRequestOptions
- uid: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders
  parent: com.microsoft.azure.sdk.iot.service.digitaltwin.customized
  href: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders.yml
  name: DigitalTwinGetHeaders
  nameWithType: DigitalTwinGetHeaders
  fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders
  type: Class
  summary: "<p>Defines headers for GetDigitalTwin operation. </p>"
  syntax:
    content: public class DigitalTwinGetHeaders
