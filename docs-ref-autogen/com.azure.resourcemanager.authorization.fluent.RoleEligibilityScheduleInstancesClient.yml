### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient"
fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient"
name: "RoleEligibilityScheduleInstancesClient"
nameWithType: "RoleEligibilityScheduleInstancesClient"
summary: "An instance of this class provides access to all the operations defined in Role<wbr>Eligibility<wbr>Schedule<wbr>Instances<wbr>Client."
syntax: "public interface RoleEligibilityScheduleInstancesClient"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.get(String scope, String roleEligibilityScheduleInstanceName)"
  name: "get(String scope, String roleEligibilityScheduleInstanceName)"
  nameWithType: "RoleEligibilityScheduleInstancesClient.get(String scope, String roleEligibilityScheduleInstanceName)"
  summary: "Gets the specified role eligibility schedule instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role eligibility schedules."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (hash of schedule name + time) of the role eligibility\n     schedule to get."
    name: "roleEligibilityScheduleInstanceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RoleEligibilityScheduleInstanceInner get(String scope, String roleEligibilityScheduleInstanceName)"
  desc: "Gets the specified role eligibility schedule instance."
  returns:
    description: "the specified role eligibility schedule instance."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner&text=RoleEligibilityScheduleInstanceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.getAsync(String scope, String roleEligibilityScheduleInstanceName)"
  name: "getAsync(String scope, String roleEligibilityScheduleInstanceName)"
  nameWithType: "RoleEligibilityScheduleInstancesClient.getAsync(String scope, String roleEligibilityScheduleInstanceName)"
  summary: "Gets the specified role eligibility schedule instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role eligibility schedules."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (hash of schedule name + time) of the role eligibility\n     schedule to get."
    name: "roleEligibilityScheduleInstanceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<RoleEligibilityScheduleInstanceInner> getAsync(String scope, String roleEligibilityScheduleInstanceName)"
  desc: "Gets the specified role eligibility schedule instance."
  returns:
    description: "the specified role eligibility schedule instance on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner&text=RoleEligibilityScheduleInstanceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.getWithResponse(String scope, String roleEligibilityScheduleInstanceName, Context context)"
  name: "getWithResponse(String scope, String roleEligibilityScheduleInstanceName, Context context)"
  nameWithType: "RoleEligibilityScheduleInstancesClient.getWithResponse(String scope, String roleEligibilityScheduleInstanceName, Context context)"
  summary: "Gets the specified role eligibility schedule instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role eligibility schedules."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (hash of schedule name + time) of the role eligibility\n     schedule to get."
    name: "roleEligibilityScheduleInstanceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleEligibilityScheduleInstanceInner> getWithResponse(String scope, String roleEligibilityScheduleInstanceName, Context context)"
  desc: "Gets the specified role eligibility schedule instance."
  returns:
    description: "the specified role eligibility schedule instance along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner&text=RoleEligibilityScheduleInstanceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.getWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.getWithResponseAsync(String scope, String roleEligibilityScheduleInstanceName)"
  name: "getWithResponseAsync(String scope, String roleEligibilityScheduleInstanceName)"
  nameWithType: "RoleEligibilityScheduleInstancesClient.getWithResponseAsync(String scope, String roleEligibilityScheduleInstanceName)"
  summary: "Gets the specified role eligibility schedule instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role eligibility schedules."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (hash of schedule name + time) of the role eligibility\n     schedule to get."
    name: "roleEligibilityScheduleInstanceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<RoleEligibilityScheduleInstanceInner>> getWithResponseAsync(String scope, String roleEligibilityScheduleInstanceName)"
  desc: "Gets the specified role eligibility schedule instance."
  returns:
    description: "the specified role eligibility schedule instance along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n     <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner&text=RoleEligibilityScheduleInstanceInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.listForScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.listForScope(String scope)"
  name: "listForScope(String scope)"
  nameWithType: "RoleEligibilityScheduleInstancesClient.listForScope(String scope)"
  summary: "Gets role eligibility schedule instances of a role eligibility schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role eligibility schedule."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<RoleEligibilityScheduleInstanceInner> listForScope(String scope)"
  desc: "Gets role eligibility schedule instances of a role eligibility schedule."
  returns:
    description: "role eligibility schedule instances of a role eligibility schedule as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner&text=RoleEligibilityScheduleInstanceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.listForScope(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.listForScope(String scope, String filter, Context context)"
  name: "listForScope(String scope, String filter, Context context)"
  nameWithType: "RoleEligibilityScheduleInstancesClient.listForScope(String scope, String filter, Context context)"
  summary: "Gets role eligibility schedule instances of a role eligibility schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role eligibility schedule."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules\n     at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or\n     below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role\n     eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created\n     for the current user."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RoleEligibilityScheduleInstanceInner> listForScope(String scope, String filter, Context context)"
  desc: "Gets role eligibility schedule instances of a role eligibility schedule."
  returns:
    description: "role eligibility schedule instances of a role eligibility schedule as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner&text=RoleEligibilityScheduleInstanceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.listForScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.listForScopeAsync(String scope)"
  name: "listForScopeAsync(String scope)"
  nameWithType: "RoleEligibilityScheduleInstancesClient.listForScopeAsync(String scope)"
  summary: "Gets role eligibility schedule instances of a role eligibility schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role eligibility schedule."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleEligibilityScheduleInstanceInner> listForScopeAsync(String scope)"
  desc: "Gets role eligibility schedule instances of a role eligibility schedule."
  returns:
    description: "role eligibility schedule instances of a role eligibility schedule as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner&text=RoleEligibilityScheduleInstanceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.listForScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleEligibilityScheduleInstancesClient.listForScopeAsync(String scope, String filter)"
  name: "listForScopeAsync(String scope, String filter)"
  nameWithType: "RoleEligibilityScheduleInstancesClient.listForScopeAsync(String scope, String filter)"
  summary: "Gets role eligibility schedule instances of a role eligibility schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role eligibility schedule."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules\n     at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or\n     below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role\n     eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created\n     for the current user."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleEligibilityScheduleInstanceInner> listForScopeAsync(String scope, String filter)"
  desc: "Gets role eligibility schedule instances of a role eligibility schedule."
  returns:
    description: "role eligibility schedule instances of a role eligibility schedule as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleInstanceInner&text=RoleEligibilityScheduleInstanceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in RoleEligibilityScheduleInstancesClient."
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.19.0
