### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner"
fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner"
name: "FunctionEnvelopeInner"
nameWithType: "FunctionEnvelopeInner"
summary: "Function information."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.appservice.models.ProxyOnlyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.kind()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.validate()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.withKind(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FunctionEnvelopeInner extends ProxyOnlyResource"
constructors:
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.FunctionEnvelopeInner()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.FunctionEnvelopeInner()"
  name: "FunctionEnvelopeInner()"
  nameWithType: "FunctionEnvelopeInner.FunctionEnvelopeInner()"
  syntax: "public FunctionEnvelopeInner()"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.config()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.config()"
  name: "config()"
  nameWithType: "FunctionEnvelopeInner.config()"
  summary: "Get the config property: Config information."
  syntax: "public Object config()"
  desc: "Get the config property: Config information."
  returns:
    description: "the config value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.configHref()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.configHref()"
  name: "configHref()"
  nameWithType: "FunctionEnvelopeInner.configHref()"
  summary: "Get the config<wbr>Href property: Config URI."
  syntax: "public String configHref()"
  desc: "Get the configHref property: Config URI."
  returns:
    description: "the configHref value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.files()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.files()"
  name: "files()"
  nameWithType: "FunctionEnvelopeInner.files()"
  summary: "Get the files property: File list."
  syntax: "public Map<String,String> files()"
  desc: "Get the files property: File list."
  returns:
    description: "the files value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.functionAppId()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.functionAppId()"
  name: "functionAppId()"
  nameWithType: "FunctionEnvelopeInner.functionAppId()"
  summary: "Get the function<wbr>App<wbr>Id property: Function App ID."
  syntax: "public String functionAppId()"
  desc: "Get the functionAppId property: Function App ID."
  returns:
    description: "the functionAppId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.href()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.href()"
  name: "href()"
  nameWithType: "FunctionEnvelopeInner.href()"
  summary: "Get the href property: Function URI."
  syntax: "public String href()"
  desc: "Get the href property: Function URI."
  returns:
    description: "the href value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.invokeUrlTemplate()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.invokeUrlTemplate()"
  name: "invokeUrlTemplate()"
  nameWithType: "FunctionEnvelopeInner.invokeUrlTemplate()"
  summary: "Get the invoke<wbr>Url<wbr>Template property: The invocation URL."
  syntax: "public String invokeUrlTemplate()"
  desc: "Get the invokeUrlTemplate property: The invocation URL."
  returns:
    description: "the invokeUrlTemplate value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.isDisabled()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.isDisabled()"
  name: "isDisabled()"
  nameWithType: "FunctionEnvelopeInner.isDisabled()"
  summary: "Get the is<wbr>Disabled property: Gets or sets a value indicating whether the function is disabled."
  syntax: "public Boolean isDisabled()"
  desc: "Get the isDisabled property: Gets or sets a value indicating whether the function is disabled."
  returns:
    description: "the isDisabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.language()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.language()"
  name: "language()"
  nameWithType: "FunctionEnvelopeInner.language()"
  summary: "Get the language property: The function language."
  syntax: "public String language()"
  desc: "Get the language property: The function language."
  returns:
    description: "the language value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.scriptHref()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.scriptHref()"
  name: "scriptHref()"
  nameWithType: "FunctionEnvelopeInner.scriptHref()"
  summary: "Get the script<wbr>Href property: Script URI."
  syntax: "public String scriptHref()"
  desc: "Get the scriptHref property: Script URI."
  returns:
    description: "the scriptHref value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.scriptRootPathHref()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.scriptRootPathHref()"
  name: "scriptRootPathHref()"
  nameWithType: "FunctionEnvelopeInner.scriptRootPathHref()"
  summary: "Get the script<wbr>Root<wbr>Path<wbr>Href property: Script root path URI."
  syntax: "public String scriptRootPathHref()"
  desc: "Get the scriptRootPathHref property: Script root path URI."
  returns:
    description: "the scriptRootPathHref value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.secretsFileHref()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.secretsFileHref()"
  name: "secretsFileHref()"
  nameWithType: "FunctionEnvelopeInner.secretsFileHref()"
  summary: "Get the secrets<wbr>File<wbr>Href property: Secrets file URI."
  syntax: "public String secretsFileHref()"
  desc: "Get the secretsFileHref property: Secrets file URI."
  returns:
    description: "the secretsFileHref value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.testData()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.testData()"
  name: "testData()"
  nameWithType: "FunctionEnvelopeInner.testData()"
  summary: "Get the test<wbr>Data property: Test data used when testing via the Azure Portal."
  syntax: "public String testData()"
  desc: "Get the testData property: Test data used when testing via the Azure Portal."
  returns:
    description: "the testData value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.testDataHref()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.testDataHref()"
  name: "testDataHref()"
  nameWithType: "FunctionEnvelopeInner.testDataHref()"
  summary: "Get the test<wbr>Data<wbr>Href property: Test data URI."
  syntax: "public String testDataHref()"
  desc: "Get the testDataHref property: Test data URI."
  returns:
    description: "the testDataHref value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.validate()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.validate()"
  name: "validate()"
  nameWithType: "FunctionEnvelopeInner.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withConfig(java.lang.Object)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withConfig(Object config)"
  name: "withConfig(Object config)"
  nameWithType: "FunctionEnvelopeInner.withConfig(Object config)"
  summary: "Set the config property: Config information."
  parameters:
  - description: "the config value to set."
    name: "config"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withConfig(Object config)"
  desc: "Set the config property: Config information."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withConfigHref(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withConfigHref(String configHref)"
  name: "withConfigHref(String configHref)"
  nameWithType: "FunctionEnvelopeInner.withConfigHref(String configHref)"
  summary: "Set the config<wbr>Href property: Config URI."
  parameters:
  - description: "the configHref value to set."
    name: "configHref"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withConfigHref(String configHref)"
  desc: "Set the configHref property: Config URI."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withFiles(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withFiles(Map<String,String> files)"
  name: "withFiles(Map<String,String> files)"
  nameWithType: "FunctionEnvelopeInner.withFiles(Map<String,String> files)"
  summary: "Set the files property: File list."
  parameters:
  - description: "the files value to set."
    name: "files"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FunctionEnvelopeInner withFiles(Map<String,String> files)"
  desc: "Set the files property: File list."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withFunctionAppId(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withFunctionAppId(String functionAppId)"
  name: "withFunctionAppId(String functionAppId)"
  nameWithType: "FunctionEnvelopeInner.withFunctionAppId(String functionAppId)"
  summary: "Set the function<wbr>App<wbr>Id property: Function App ID."
  parameters:
  - description: "the functionAppId value to set."
    name: "functionAppId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withFunctionAppId(String functionAppId)"
  desc: "Set the functionAppId property: Function App ID."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withHref(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withHref(String href)"
  name: "withHref(String href)"
  nameWithType: "FunctionEnvelopeInner.withHref(String href)"
  summary: "Set the href property: Function URI."
  parameters:
  - description: "the href value to set."
    name: "href"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withHref(String href)"
  desc: "Set the href property: Function URI."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withInvokeUrlTemplate(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withInvokeUrlTemplate(String invokeUrlTemplate)"
  name: "withInvokeUrlTemplate(String invokeUrlTemplate)"
  nameWithType: "FunctionEnvelopeInner.withInvokeUrlTemplate(String invokeUrlTemplate)"
  summary: "Set the invoke<wbr>Url<wbr>Template property: The invocation URL."
  parameters:
  - description: "the invokeUrlTemplate value to set."
    name: "invokeUrlTemplate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withInvokeUrlTemplate(String invokeUrlTemplate)"
  desc: "Set the invokeUrlTemplate property: The invocation URL."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withIsDisabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withIsDisabled(Boolean isDisabled)"
  name: "withIsDisabled(Boolean isDisabled)"
  nameWithType: "FunctionEnvelopeInner.withIsDisabled(Boolean isDisabled)"
  summary: "Set the is<wbr>Disabled property: Gets or sets a value indicating whether the function is disabled."
  parameters:
  - description: "the isDisabled value to set."
    name: "isDisabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withIsDisabled(Boolean isDisabled)"
  desc: "Set the isDisabled property: Gets or sets a value indicating whether the function is disabled."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withKind(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withKind(String kind)"
  name: "withKind(String kind)"
  nameWithType: "FunctionEnvelopeInner.withKind(String kind)"
  summary: "Set the kind property: Kind of resource."
  overridden: "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.withKind(java.lang.String)"
  parameters:
  - name: "kind"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withKind(String kind)"
  desc: "Set the kind property: Kind of resource."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withLanguage(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withLanguage(String language)"
  name: "withLanguage(String language)"
  nameWithType: "FunctionEnvelopeInner.withLanguage(String language)"
  summary: "Set the language property: The function language."
  parameters:
  - description: "the language value to set."
    name: "language"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withLanguage(String language)"
  desc: "Set the language property: The function language."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withScriptHref(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withScriptHref(String scriptHref)"
  name: "withScriptHref(String scriptHref)"
  nameWithType: "FunctionEnvelopeInner.withScriptHref(String scriptHref)"
  summary: "Set the script<wbr>Href property: Script URI."
  parameters:
  - description: "the scriptHref value to set."
    name: "scriptHref"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withScriptHref(String scriptHref)"
  desc: "Set the scriptHref property: Script URI."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withScriptRootPathHref(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withScriptRootPathHref(String scriptRootPathHref)"
  name: "withScriptRootPathHref(String scriptRootPathHref)"
  nameWithType: "FunctionEnvelopeInner.withScriptRootPathHref(String scriptRootPathHref)"
  summary: "Set the script<wbr>Root<wbr>Path<wbr>Href property: Script root path URI."
  parameters:
  - description: "the scriptRootPathHref value to set."
    name: "scriptRootPathHref"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withScriptRootPathHref(String scriptRootPathHref)"
  desc: "Set the scriptRootPathHref property: Script root path URI."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withSecretsFileHref(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withSecretsFileHref(String secretsFileHref)"
  name: "withSecretsFileHref(String secretsFileHref)"
  nameWithType: "FunctionEnvelopeInner.withSecretsFileHref(String secretsFileHref)"
  summary: "Set the secrets<wbr>File<wbr>Href property: Secrets file URI."
  parameters:
  - description: "the secretsFileHref value to set."
    name: "secretsFileHref"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withSecretsFileHref(String secretsFileHref)"
  desc: "Set the secretsFileHref property: Secrets file URI."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withTestData(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withTestData(String testData)"
  name: "withTestData(String testData)"
  nameWithType: "FunctionEnvelopeInner.withTestData(String testData)"
  summary: "Set the test<wbr>Data property: Test data used when testing via the Azure Portal."
  parameters:
  - description: "the testData value to set."
    name: "testData"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withTestData(String testData)"
  desc: "Set the testData property: Test data used when testing via the Azure Portal."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withTestDataHref(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner.withTestDataHref(String testDataHref)"
  name: "withTestDataHref(String testDataHref)"
  nameWithType: "FunctionEnvelopeInner.withTestDataHref(String testDataHref)"
  summary: "Set the test<wbr>Data<wbr>Href property: Test data URI."
  parameters:
  - description: "the testDataHref value to set."
    name: "testDataHref"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FunctionEnvelopeInner withTestDataHref(String testDataHref)"
  desc: "Set the testDataHref property: Test data URI."
  returns:
    description: "the FunctionEnvelopeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionEnvelopeInner&text=FunctionEnvelopeInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Function information."
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.16.0
