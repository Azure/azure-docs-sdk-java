### YamlMime:JavaType
uid: "com.azure.search.documents.util.SearchPagedIterable"
fullName: "com.azure.search.documents.util.SearchPagedIterable"
name: "SearchPagedIterable"
nameWithType: "SearchPagedIterable"
summary: "Implementation of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePagedIterable\"></xref> where the continuation token type is <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchRequest\"></xref>, the element type is <xref uid=\"com.azure.search.documents.models.SearchResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchResult\"></xref>, and the page type is <xref uid=\"com.azure.search.documents.util.SearchPagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPagedResponse\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.IterableStream?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.http.rest.PagedIterableBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)?alt=com.azure.core.util.IterableStream.<T>of&text=<T>of\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable?alt=com.azure.core.util.paging.ContinuablePagedIterable&text=ContinuablePagedIterable\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage&text=iterableByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage&text=iterableByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage&text=iterableByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage&text=iterableByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterator()?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterator&text=iterator\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.stream()?alt=com.azure.core.util.paging.ContinuablePagedIterable.stream&text=stream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()?alt=com.azure.core.util.paging.ContinuablePagedIterable.streamByPage&text=streamByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)?alt=com.azure.core.util.paging.ContinuablePagedIterable.streamByPage&text=streamByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)?alt=com.azure.core.util.paging.ContinuablePagedIterable.streamByPage&text=streamByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)?alt=com.azure.core.util.paging.ContinuablePagedIterable.streamByPage&text=streamByPage\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SearchPagedIterable**</br> extends <xref href=\"com.azure.core.http.rest.PagedIterableBase?alt=com.azure.core.http.rest.PagedIterableBase&text=PagedIterableBase\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.models.SearchResult?alt=com.azure.search.documents.models.SearchResult&text=SearchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.search.documents.util.SearchPagedResponse?alt=com.azure.search.documents.util.SearchPagedResponse&text=SearchPagedResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.search.documents.util.SearchPagedIterable.SearchPagedIterable(com.azure.search.documents.util.SearchPagedFlux)"
  fullName: "com.azure.search.documents.util.SearchPagedIterable.SearchPagedIterable(SearchPagedFlux pagedFlux)"
  name: "SearchPagedIterable(SearchPagedFlux pagedFlux)"
  nameWithType: "SearchPagedIterable.SearchPagedIterable(SearchPagedFlux pagedFlux)"
  summary: "Creates an instance of <xref uid=\"com.azure.search.documents.util.SearchPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPagedIterable\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.search.documents.util.SearchPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPagedFlux\"></xref> that will be consumed as an iterable."
    name: "pagedFlux"
    type: "<xref href=\"com.azure.search.documents.util.SearchPagedFlux?alt=com.azure.search.documents.util.SearchPagedFlux&text=SearchPagedFlux\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchPagedIterable(SearchPagedFlux pagedFlux)"
  desc: "Creates an instance of <xref uid=\"com.azure.search.documents.util.SearchPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPagedIterable\"></xref>."
methods:
- uid: "com.azure.search.documents.util.SearchPagedIterable.getCoverage()"
  fullName: "com.azure.search.documents.util.SearchPagedIterable.getCoverage()"
  name: "getCoverage()"
  nameWithType: "SearchPagedIterable.getCoverage()"
  summary: "The percentage of the index covered in the search request."
  syntax: "public Double getCoverage()"
  desc: "The percentage of the index covered in the search request.\n\nIf `minimumCoverage` wasn't supplied in the request this will be `null`."
  returns:
    description: "The percentage of the index covered in the search request if <code>minimumCoverage</code> was set in the\n request, otherwise <code>null</code>."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Double</a>"
- uid: "com.azure.search.documents.util.SearchPagedIterable.getFacets()"
  fullName: "com.azure.search.documents.util.SearchPagedIterable.getFacets()"
  name: "getFacets()"
  nameWithType: "SearchPagedIterable.getFacets()"
  summary: "The facet query results based on the search request."
  syntax: "public Map<String,List<FacetResult>> getFacets()"
  desc: "The facet query results based on the search request.\n\nIf `facets` weren't supplied in the request this will be `null`."
  returns:
    description: "The facet query results if <code>facets</code> were supplied in the request, otherwise <code>null</code>."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.models.FacetResult?alt=com.azure.search.documents.models.FacetResult&text=FacetResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.search.documents.util.SearchPagedIterable.getTotalCount()"
  fullName: "com.azure.search.documents.util.SearchPagedIterable.getTotalCount()"
  name: "getTotalCount()"
  nameWithType: "SearchPagedIterable.getTotalCount()"
  summary: "The approximate number of documents that matched the search and filter parameters in the request."
  syntax: "public Long getTotalCount()"
  desc: "The approximate number of documents that matched the search and filter parameters in the request.\n\nIf `count` is set to `false` in the request this will be `null`."
  returns:
    description: "The approximate number of documents that match the request if <code>count</code> is <code>true</code>, otherwise\n <code>null</code>."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
type: "class"
desc: "Implementation of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePagedIterable\"></xref> where the continuation token type is <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchRequest\"></xref>, the element type is <xref uid=\"com.azure.search.documents.models.SearchResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchResult\"></xref>, and the page type is <xref uid=\"com.azure.search.documents.util.SearchPagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchPagedResponse\"></xref>."
metadata: {}
package: "com.azure.search.documents.util"
artifact: com.azure:azure-search-documents:11.5.6
