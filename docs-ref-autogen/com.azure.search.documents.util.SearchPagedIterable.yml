### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.util.SearchPagedIterable
  id: SearchPagedIterable
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.util
  children:
  - com.azure.search.documents.util.SearchPagedIterable.SearchPagedIterable(com.azure.search.documents.util.SearchPagedFlux)
  - com.azure.search.documents.util.SearchPagedIterable.getCoverage()
  - com.azure.search.documents.util.SearchPagedIterable.getFacets()
  - com.azure.search.documents.util.SearchPagedIterable.getTotalCount()
  langs:
  - java
  name: SearchPagedIterable
  nameWithType: SearchPagedIterable
  fullName: com.azure.search.documents.util.SearchPagedIterable
  type: Class
  package: com.azure.search.documents.util
  summary: Implementation of <xref uid="" data-throw-if-not-resolved="false">ContinuablePagedIterable</xref> where the continuation token type is <xref uid="com.azure.search.documents.implementation.models.SearchRequest" data-throw-if-not-resolved="false">SearchRequest</xref>, the element type is <xref uid="com.azure.search.documents.models.SearchResult" data-throw-if-not-resolved="false">SearchResult</xref>, and the page type is <xref uid="com.azure.search.documents.util.SearchPagedResponse" data-throw-if-not-resolved="false">SearchPagedResponse</xref>.
  syntax:
    content: public final class SearchPagedIterable extends PagedIterableBase<SearchResult,SearchPagedResponse>
  inheritance:
  - java.lang.Object
  - com.azure.core.util.IterableStream
  - com.azure.core.util.paging.ContinuablePagedIterable
  - com.azure.core.http.rest.PagedIterableBase
  inheritedMembers:
  - com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
  - com.azure.core.util.IterableStream.iterator()
  - com.azure.core.util.IterableStream.stream()
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.util.SearchPagedIterable.SearchPagedIterable(com.azure.search.documents.util.SearchPagedFlux)
  id: SearchPagedIterable(com.azure.search.documents.util.SearchPagedFlux)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.util.SearchPagedIterable
  langs:
  - java
  name: SearchPagedIterable(SearchPagedFlux pagedFlux)
  nameWithType: SearchPagedIterable.SearchPagedIterable(SearchPagedFlux pagedFlux)
  fullName: com.azure.search.documents.util.SearchPagedIterable.SearchPagedIterable(SearchPagedFlux pagedFlux)
  overload: com.azure.search.documents.util.SearchPagedIterable.SearchPagedIterable*
  type: Constructor
  package: com.azure.search.documents.util
  summary: Creates an instance of <xref uid="com.azure.search.documents.util.SearchPagedIterable" data-throw-if-not-resolved="false">SearchPagedIterable</xref>.
  syntax:
    content: public SearchPagedIterable(SearchPagedFlux pagedFlux)
    parameters:
    - id: pagedFlux
      type: com.azure.search.documents.util.SearchPagedFlux
      description: The <xref uid="com.azure.search.documents.util.SearchPagedFlux" data-throw-if-not-resolved="false">SearchPagedFlux</xref> that will be consumed as an iterable.
- uid: com.azure.search.documents.util.SearchPagedIterable.getCoverage()
  id: getCoverage()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.util.SearchPagedIterable
  langs:
  - java
  name: getCoverage()
  nameWithType: SearchPagedIterable.getCoverage()
  fullName: com.azure.search.documents.util.SearchPagedIterable.getCoverage()
  overload: com.azure.search.documents.util.SearchPagedIterable.getCoverage*
  type: Method
  package: com.azure.search.documents.util
  summary: >-
    The percentage of the index covered in the search request.


    If `minimumCoverage` wasn't supplied in the request this will be `null`.
  syntax:
    content: public Double getCoverage()
    return:
      type: java.lang.Double
      description: >-
        The percentage of the index covered in the search request if <code>minimumCoverage</code> was set in the
         request, otherwise <code>null</code>.
- uid: com.azure.search.documents.util.SearchPagedIterable.getFacets()
  id: getFacets()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.util.SearchPagedIterable
  langs:
  - java
  name: getFacets()
  nameWithType: SearchPagedIterable.getFacets()
  fullName: com.azure.search.documents.util.SearchPagedIterable.getFacets()
  overload: com.azure.search.documents.util.SearchPagedIterable.getFacets*
  type: Method
  package: com.azure.search.documents.util
  summary: >-
    The facet query results based on the search request.


    If `facets` weren't supplied in the request this will be `null`.
  syntax:
    content: public Map<String,List<FacetResult>> getFacets()
    return:
      type: java.util.Map<java.lang.String,java.util.List<com.azure.search.documents.models.FacetResult>>
      description: The facet query results if <code>facets</code> were supplied in the request, otherwise <code>null</code>.
- uid: com.azure.search.documents.util.SearchPagedIterable.getTotalCount()
  id: getTotalCount()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.util.SearchPagedIterable
  langs:
  - java
  name: getTotalCount()
  nameWithType: SearchPagedIterable.getTotalCount()
  fullName: com.azure.search.documents.util.SearchPagedIterable.getTotalCount()
  overload: com.azure.search.documents.util.SearchPagedIterable.getTotalCount*
  type: Method
  package: com.azure.search.documents.util
  summary: >-
    The approximate number of documents that matched the search and filter parameters in the request.


    If `count` is set to `false` in the request this will be `null`.
  syntax:
    content: public Long getTotalCount()
    return:
      type: java.lang.Long
      description: >-
        The approximate number of documents that match the request if <code>count</code> is <code>true</code>, otherwise
         <code>null</code>.
references:
- uid: com.azure.search.documents.util.SearchPagedFlux
  name: SearchPagedFlux
  nameWithType: SearchPagedFlux
  fullName: com.azure.search.documents.util.SearchPagedFlux
- uid: com.azure.search.documents.util.SearchPagedIterable.SearchPagedIterable*
  name: SearchPagedIterable
  nameWithType: SearchPagedIterable.SearchPagedIterable
  fullName: com.azure.search.documents.util.SearchPagedIterable.SearchPagedIterable
  package: com.azure.search.documents.util
- uid: java.lang.Double
  spec.java:
  - uid: java.lang.Double
    name: Double
    fullName: java.lang.Double
- uid: com.azure.search.documents.util.SearchPagedIterable.getCoverage*
  name: getCoverage
  nameWithType: SearchPagedIterable.getCoverage
  fullName: com.azure.search.documents.util.SearchPagedIterable.getCoverage
  package: com.azure.search.documents.util
- uid: java.util.Map<java.lang.String,java.util.List<com.azure.search.documents.models.FacetResult>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.models.FacetResult
    name: FacetResult
    fullName: com.azure.search.documents.models.FacetResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.util.SearchPagedIterable.getFacets*
  name: getFacets
  nameWithType: SearchPagedIterable.getFacets
  fullName: com.azure.search.documents.util.SearchPagedIterable.getFacets
  package: com.azure.search.documents.util
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: com.azure.search.documents.util.SearchPagedIterable.getTotalCount*
  name: getTotalCount
  nameWithType: SearchPagedIterable.getTotalCount
  fullName: com.azure.search.documents.util.SearchPagedIterable.getTotalCount
  package: com.azure.search.documents.util
- uid: com.azure.core.http.rest.PagedIterableBase<com.azure.search.documents.models.SearchResult,com.azure.search.documents.util.SearchPagedResponse>
  name: PagedIterableBase<SearchResult,SearchPagedResponse>
  nameWithType: PagedIterableBase<SearchResult,SearchPagedResponse>
  fullName: com.azure.core.http.rest.PagedIterableBase<com.azure.search.documents.models.SearchResult,com.azure.search.documents.util.SearchPagedResponse>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
  name: ContinuablePagedIterable.streamByPage(C)
  nameWithType: ContinuablePagedIterable.streamByPage(C)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
  name: ContinuablePagedIterable.iterableByPage(C,int)
  nameWithType: ContinuablePagedIterable.iterableByPage(C,int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
  name: ContinuablePagedIterable.streamByPage(C,int)
  nameWithType: ContinuablePagedIterable.streamByPage(C,int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
  name: ContinuablePagedIterable.iterableByPage(C)
  nameWithType: ContinuablePagedIterable.iterableByPage(C)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
  name: ContinuablePagedIterable.streamByPage()
  nameWithType: ContinuablePagedIterable.streamByPage()
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.core.util.IterableStream.iterator()
  name: IterableStream.iterator()
  nameWithType: IterableStream.iterator()
  fullName: com.azure.core.util.IterableStream.iterator()
- uid: com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
  name: IterableStream.<T>of(Iterable<T>)
  nameWithType: IterableStream.<T>of(Iterable<T>)
  fullName: com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
  name: ContinuablePagedIterable.streamByPage(int)
  nameWithType: ContinuablePagedIterable.streamByPage(int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
  name: ContinuablePagedIterable.iterableByPage(int)
  nameWithType: ContinuablePagedIterable.iterableByPage(int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.util.IterableStream.stream()
  name: IterableStream.stream()
  nameWithType: IterableStream.stream()
  fullName: com.azure.core.util.IterableStream.stream()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
  name: ContinuablePagedIterable.iterableByPage()
  nameWithType: ContinuablePagedIterable.iterableByPage()
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: com.azure.search.documents.models.FacetResult
  name: FacetResult
  nameWithType: FacetResult
  fullName: com.azure.search.documents.models.FacetResult
- uid: java.lang.String,java.util.List
  name: String,List
  nameWithType: String,List
  fullName: java.lang.String,java.util.List
- uid: com.azure.search.documents.models.SearchResult,com.azure.search.documents.util.SearchPagedResponse
  name: SearchResult,SearchPagedResponse
  nameWithType: SearchResult,SearchPagedResponse
  fullName: com.azure.search.documents.models.SearchResult,com.azure.search.documents.util.SearchPagedResponse
- uid: com.azure.core.http.rest.PagedIterableBase
  name: PagedIterableBase
  nameWithType: PagedIterableBase
  fullName: com.azure.core.http.rest.PagedIterableBase
- uid: com.azure.core.util.IterableStream.
  name: IterableStream.
  nameWithType: IterableStream.
  fullName: com.azure.core.util.IterableStream.
- uid: T>of(java.lang.Iterable
  name: T>of(Iterable
  nameWithType: T>of(Iterable
  fullName: T>of(java.lang.Iterable
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
