### YamlMime:JavaType
uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource"
fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource"
name: "AzureLogAnalyticsDataFeedSource"
nameWithType: "AzureLogAnalyticsDataFeedSource"
summary: "The Azure<wbr>Log<wbr>Analytics<wbr>Data<wbr>Feed<wbr>Source model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataFeedSource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureLogAnalyticsDataFeedSource extends DataFeedSource"
methods:
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.fromBasicCredential(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.fromBasicCredential(String tenantId, String clientId, String clientSecret, String workspaceId, String query)"
  name: "fromBasicCredential(String tenantId, String clientId, String clientSecret, String workspaceId, String query)"
  nameWithType: "AzureLogAnalyticsDataFeedSource.fromBasicCredential(String tenantId, String clientId, String clientSecret, String workspaceId, String query)"
  summary: "Create a Azure<wbr>Log<wbr>Analytics<wbr>Data<wbr>Feed<wbr>Source with the given `tenantId`, `clientId` and `clientSecret` for authentication."
  modifiers:
  - "static"
  parameters:
  - description: "The tenant id of service principal that have access to this Log Analytics."
    name: "tenantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The client id of service principal that have access to this Log Analytics."
    name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The client secret of service principal that have access to this Log Analytics."
    name: "clientSecret"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the query script."
    name: "workspaceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the KQL (Kusto Query Language) query to fetch data from this Log\n Analytics."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AzureLogAnalyticsDataFeedSource fromBasicCredential(String tenantId, String clientId, String clientSecret, String workspaceId, String query)"
  desc: "Create a AzureLogAnalyticsDataFeedSource with the given `tenantId`, `clientId` and `clientSecret` for authentication."
  returns:
    description: "The AzureLogAnalyticsDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource&text=AzureLogAnalyticsDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.fromServicePrincipalCredential(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.fromServicePrincipalCredential(String workspaceId, String query, String credentialId)"
  name: "fromServicePrincipalCredential(String workspaceId, String query, String credentialId)"
  nameWithType: "AzureLogAnalyticsDataFeedSource.fromServicePrincipalCredential(String workspaceId, String query, String credentialId)"
  summary: "Create a Azure<wbr>Log<wbr>Analytics<wbr>Data<wbr>Feed<wbr>Source with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipal\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipal\"></xref>, the entity contains details of the Key<wbr>Vault holding the Service Principal to access the Data Lake storage."
  modifiers:
  - "static"
  parameters:
  - description: "the query script."
    name: "workspaceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the KQL (Kusto Query Language) query to fetch data from this Log Analytics."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The unique id of a credential entity of type"
    name: "credentialId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AzureLogAnalyticsDataFeedSource fromServicePrincipalCredential(String workspaceId, String query, String credentialId)"
  desc: "Create a AzureLogAnalyticsDataFeedSource with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipal\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipal\"></xref>, the entity contains details of the KeyVault holding the Service Principal to access the Data Lake storage."
  returns:
    description: "The AzureLogAnalyticsDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource&text=AzureLogAnalyticsDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.fromServicePrincipalInKeyVaultCredential(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.fromServicePrincipalInKeyVaultCredential(String workspaceId, String query, String credentialId)"
  name: "fromServicePrincipalInKeyVaultCredential(String workspaceId, String query, String credentialId)"
  nameWithType: "AzureLogAnalyticsDataFeedSource.fromServicePrincipalInKeyVaultCredential(String workspaceId, String query, String credentialId)"
  summary: "Create a Azure<wbr>Log<wbr>Analytics<wbr>Data<wbr>Feed<wbr>Source with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipalInKeyVault\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipalInKeyVault\"></xref>, the entity contains details of the Key<wbr>Vault holding the Service Principal to access the Data Lake storage."
  modifiers:
  - "static"
  parameters:
  - description: "the query script."
    name: "workspaceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the KQL (Kusto Query Language) query to fetch data from this Log Analytics."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The unique id of a credential entity of type"
    name: "credentialId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AzureLogAnalyticsDataFeedSource fromServicePrincipalInKeyVaultCredential(String workspaceId, String query, String credentialId)"
  desc: "Create a AzureLogAnalyticsDataFeedSource with the `credentialId` identifying a credential entity of type <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceServicePrincipalInKeyVault\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceServicePrincipalInKeyVault\"></xref>, the entity contains details of the KeyVault holding the Service Principal to access the Data Lake storage."
  returns:
    description: "The AzureLogAnalyticsDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource&text=AzureLogAnalyticsDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getAuthenticationType()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getAuthenticationType()"
  name: "getAuthenticationType()"
  nameWithType: "AzureLogAnalyticsDataFeedSource.getAuthenticationType()"
  summary: "Gets the authentication type to access the data source."
  syntax: "public DataSourceAuthenticationType getAuthenticationType()"
  desc: "Gets the authentication type to access the data source."
  returns:
    description: "The authentication type."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataSourceAuthenticationType?alt=com.azure.ai.metricsadvisor.administration.models.DataSourceAuthenticationType&text=DataSourceAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getClientId()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getClientId()"
  name: "getClientId()"
  nameWithType: "AzureLogAnalyticsDataFeedSource.getClientId()"
  summary: "Get the client<wbr>Id property: The client id of service principal that have access to this Log Analytics."
  syntax: "public String getClientId()"
  desc: "Get the clientId property: The client id of service principal that have access to this Log Analytics."
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getCredentialId()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getCredentialId()"
  name: "getCredentialId()"
  nameWithType: "AzureLogAnalyticsDataFeedSource.getCredentialId()"
  summary: "Gets the id of the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"credential resource\"></xref> to authenticate the data source."
  syntax: "public String getCredentialId()"
  desc: "Gets the id of the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"credential resource\"></xref> to authenticate the data source."
  returns:
    description: "The credential resource id."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getQuery()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getQuery()"
  name: "getQuery()"
  nameWithType: "AzureLogAnalyticsDataFeedSource.getQuery()"
  summary: "Get the query property: The KQL (Kusto Query Language) query to fetch data from this Log Analytics."
  syntax: "public String getQuery()"
  desc: "Get the query property: The KQL (Kusto Query Language) query to fetch data from this Log Analytics."
  returns:
    description: "the query value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getTenantId()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getTenantId()"
  name: "getTenantId()"
  nameWithType: "AzureLogAnalyticsDataFeedSource.getTenantId()"
  summary: "Get the tenant<wbr>Id property: The tenant id of service principal that have access to this Log Analytics."
  syntax: "public String getTenantId()"
  desc: "Get the tenantId property: The tenant id of service principal that have access to this Log Analytics."
  returns:
    description: "the tenantId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getWorkspaceId()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureLogAnalyticsDataFeedSource.getWorkspaceId()"
  name: "getWorkspaceId()"
  nameWithType: "AzureLogAnalyticsDataFeedSource.getWorkspaceId()"
  summary: "Get the workspace<wbr>Id property: The workspace id of this Log Analytics."
  syntax: "public String getWorkspaceId()"
  desc: "Get the workspaceId property: The workspace id of this Log Analytics."
  returns:
    description: "the workspaceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The AzureLogAnalyticsDataFeedSource model."
metadata: {}
package: "com.azure.ai.metricsadvisor.administration.models"
artifact: com.azure:azure-ai-metricsadvisor:1.1.6
