### YamlMime:JavaMember
nameWithType: Trainings.getDomainAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync(UUID domainId)
  name: getDomainAsync(UUID domainId)
  nameWithType: Trainings.getDomainAsync(UUID domainId)
  parameters:
  - description: <p>The id of the domain to get information about. </p>
    name: domainId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Domain object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain&text=Domain" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get information about a specific domain.</p>

    <p></p>
  syntax: public Observable<Domain> getDomainAsync(UUID domainId)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync(UUID)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync(UUID domainId)
name: getDomainAsync(UUID domainId)
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
