### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.batchai.PyTorchSettings
  id: PyTorchSettings
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai
  children:
  - com.microsoft.azure.management.batchai.PyTorchSettings.PyTorchSettings()
  - com.microsoft.azure.management.batchai.PyTorchSettings.commandLineArgs()
  - com.microsoft.azure.management.batchai.PyTorchSettings.communicationBackend()
  - com.microsoft.azure.management.batchai.PyTorchSettings.processCount()
  - com.microsoft.azure.management.batchai.PyTorchSettings.pythonInterpreterPath()
  - com.microsoft.azure.management.batchai.PyTorchSettings.pythonScriptFilePath()
  - com.microsoft.azure.management.batchai.PyTorchSettings.withCommandLineArgs(java.lang.String)
  - com.microsoft.azure.management.batchai.PyTorchSettings.withCommunicationBackend(java.lang.String)
  - com.microsoft.azure.management.batchai.PyTorchSettings.withProcessCount(java.lang.Integer)
  - com.microsoft.azure.management.batchai.PyTorchSettings.withPythonInterpreterPath(java.lang.String)
  - com.microsoft.azure.management.batchai.PyTorchSettings.withPythonScriptFilePath(java.lang.String)
  langs:
  - java
  name: PyTorchSettings
  nameWithType: PyTorchSettings
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings
  type: Class
  package: com.microsoft.azure.management.batchai
  summary: pyTorch job settings.
  syntax:
    content: public class PyTorchSettings
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.PyTorchSettings()
  id: PyTorchSettings()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: PyTorchSettings()
  nameWithType: PyTorchSettings.PyTorchSettings()
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.PyTorchSettings()
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.PyTorchSettings*
  type: Constructor
  package: com.microsoft.azure.management.batchai
  syntax:
    content: public PyTorchSettings()
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.commandLineArgs()
  id: commandLineArgs()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: commandLineArgs()
  nameWithType: PyTorchSettings.commandLineArgs()
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.commandLineArgs()
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.commandLineArgs*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get command line arguments that need to be passed to the python script.
  syntax:
    content: public String commandLineArgs()
    return:
      type: java.lang.String
      description: the commandLineArgs value
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.communicationBackend()
  id: communicationBackend()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: communicationBackend()
  nameWithType: PyTorchSettings.communicationBackend()
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.communicationBackend()
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.communicationBackend*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get type of the communication backend for distributed jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for non-distributed jobs.
  syntax:
    content: public String communicationBackend()
    return:
      type: java.lang.String
      description: the communicationBackend value
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.processCount()
  id: processCount()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: processCount()
  nameWithType: PyTorchSettings.processCount()
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.processCount()
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.processCount*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get number of processes to launch for the job execution. The default value for this property is equal to nodeCount property.
  syntax:
    content: public Integer processCount()
    return:
      type: java.lang.Integer
      description: the processCount value
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.pythonInterpreterPath()
  id: pythonInterpreterPath()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: pythonInterpreterPath()
  nameWithType: PyTorchSettings.pythonInterpreterPath()
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.pythonInterpreterPath()
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.pythonInterpreterPath*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get the path to the Python interpreter.
  syntax:
    content: public String pythonInterpreterPath()
    return:
      type: java.lang.String
      description: the pythonInterpreterPath value
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.pythonScriptFilePath()
  id: pythonScriptFilePath()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: pythonScriptFilePath()
  nameWithType: PyTorchSettings.pythonScriptFilePath()
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.pythonScriptFilePath()
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.pythonScriptFilePath*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get the python script to execute.
  syntax:
    content: public String pythonScriptFilePath()
    return:
      type: java.lang.String
      description: the pythonScriptFilePath value
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withCommandLineArgs(java.lang.String)
  id: withCommandLineArgs(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: withCommandLineArgs(String commandLineArgs)
  nameWithType: PyTorchSettings.withCommandLineArgs(String commandLineArgs)
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withCommandLineArgs(String commandLineArgs)
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.withCommandLineArgs*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set command line arguments that need to be passed to the python script.
  syntax:
    content: public PyTorchSettings withCommandLineArgs(String commandLineArgs)
    parameters:
    - id: commandLineArgs
      type: java.lang.String
      description: the commandLineArgs value to set
    return:
      type: com.microsoft.azure.management.batchai.PyTorchSettings
      description: the PyTorchSettings object itself.
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withCommunicationBackend(java.lang.String)
  id: withCommunicationBackend(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: withCommunicationBackend(String communicationBackend)
  nameWithType: PyTorchSettings.withCommunicationBackend(String communicationBackend)
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withCommunicationBackend(String communicationBackend)
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.withCommunicationBackend*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set type of the communication backend for distributed jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for non-distributed jobs.
  syntax:
    content: public PyTorchSettings withCommunicationBackend(String communicationBackend)
    parameters:
    - id: communicationBackend
      type: java.lang.String
      description: the communicationBackend value to set
    return:
      type: com.microsoft.azure.management.batchai.PyTorchSettings
      description: the PyTorchSettings object itself.
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withProcessCount(java.lang.Integer)
  id: withProcessCount(java.lang.Integer)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: withProcessCount(Integer processCount)
  nameWithType: PyTorchSettings.withProcessCount(Integer processCount)
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withProcessCount(Integer processCount)
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.withProcessCount*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set number of processes to launch for the job execution. The default value for this property is equal to nodeCount property.
  syntax:
    content: public PyTorchSettings withProcessCount(Integer processCount)
    parameters:
    - id: processCount
      type: java.lang.Integer
      description: the processCount value to set
    return:
      type: com.microsoft.azure.management.batchai.PyTorchSettings
      description: the PyTorchSettings object itself.
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonInterpreterPath(java.lang.String)
  id: withPythonInterpreterPath(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: withPythonInterpreterPath(String pythonInterpreterPath)
  nameWithType: PyTorchSettings.withPythonInterpreterPath(String pythonInterpreterPath)
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonInterpreterPath(String pythonInterpreterPath)
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonInterpreterPath*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set the path to the Python interpreter.
  syntax:
    content: public PyTorchSettings withPythonInterpreterPath(String pythonInterpreterPath)
    parameters:
    - id: pythonInterpreterPath
      type: java.lang.String
      description: the pythonInterpreterPath value to set
    return:
      type: com.microsoft.azure.management.batchai.PyTorchSettings
      description: the PyTorchSettings object itself.
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonScriptFilePath(java.lang.String)
  id: withPythonScriptFilePath(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.PyTorchSettings
  langs:
  - java
  name: withPythonScriptFilePath(String pythonScriptFilePath)
  nameWithType: PyTorchSettings.withPythonScriptFilePath(String pythonScriptFilePath)
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonScriptFilePath(String pythonScriptFilePath)
  overload: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonScriptFilePath*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set the python script to execute.
  syntax:
    content: public PyTorchSettings withPythonScriptFilePath(String pythonScriptFilePath)
    parameters:
    - id: pythonScriptFilePath
      type: java.lang.String
      description: the pythonScriptFilePath value to set
    return:
      type: com.microsoft.azure.management.batchai.PyTorchSettings
      description: the PyTorchSettings object itself.
references:
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.PyTorchSettings*
  name: PyTorchSettings
  nameWithType: PyTorchSettings.PyTorchSettings
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.PyTorchSettings
  package: com.microsoft.azure.management.batchai
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.pythonScriptFilePath*
  name: pythonScriptFilePath
  nameWithType: PyTorchSettings.pythonScriptFilePath
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.pythonScriptFilePath
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonScriptFilePath*
  name: withPythonScriptFilePath
  nameWithType: PyTorchSettings.withPythonScriptFilePath
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonScriptFilePath
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.pythonInterpreterPath*
  name: pythonInterpreterPath
  nameWithType: PyTorchSettings.pythonInterpreterPath
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.pythonInterpreterPath
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonInterpreterPath*
  name: withPythonInterpreterPath
  nameWithType: PyTorchSettings.withPythonInterpreterPath
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withPythonInterpreterPath
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.commandLineArgs*
  name: commandLineArgs
  nameWithType: PyTorchSettings.commandLineArgs
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.commandLineArgs
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withCommandLineArgs*
  name: withCommandLineArgs
  nameWithType: PyTorchSettings.withCommandLineArgs
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withCommandLineArgs
  package: com.microsoft.azure.management.batchai
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.processCount*
  name: processCount
  nameWithType: PyTorchSettings.processCount
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.processCount
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withProcessCount*
  name: withProcessCount
  nameWithType: PyTorchSettings.withProcessCount
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withProcessCount
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.communicationBackend*
  name: communicationBackend
  nameWithType: PyTorchSettings.communicationBackend
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.communicationBackend
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.PyTorchSettings.withCommunicationBackend*
  name: withCommunicationBackend
  nameWithType: PyTorchSettings.withCommunicationBackend
  fullName: com.microsoft.azure.management.batchai.PyTorchSettings.withCommunicationBackend
  package: com.microsoft.azure.management.batchai
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
