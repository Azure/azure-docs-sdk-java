### YamlMime:JavaType
uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec"
fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec"
name: "VolumeClaimSpec"
nameWithType: "VolumeClaimSpec"
summary: "Volume<wbr>Claim<wbr>Spec properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **VolumeClaimSpec**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.VolumeClaimSpec()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.VolumeClaimSpec()"
  name: "VolumeClaimSpec()"
  nameWithType: "VolumeClaimSpec.VolumeClaimSpec()"
  summary: "Creates an instance of Volume<wbr>Claim<wbr>Spec class."
  syntax: "public VolumeClaimSpec()"
  desc: "Creates an instance of VolumeClaimSpec class."
methods:
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.accessModes()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.accessModes()"
  name: "accessModes()"
  nameWithType: "VolumeClaimSpec.accessModes()"
  summary: "Get the access<wbr>Modes property: Access<wbr>Modes contains the desired access modes the volume should have."
  syntax: "public List<String> accessModes()"
  desc: "Get the accessModes property: AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes\\#access-modes-1."
  returns:
    description: "the accessModes value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.dataSource()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.dataSource()"
  name: "dataSource()"
  nameWithType: "VolumeClaimSpec.dataSource()"
  summary: "Get the data<wbr>Source property: This field can be used to specify either: \\* An existing Volume<wbr>Snapshot object (snapshot.<wbr>storage.<wbr>k8s.<wbr>io/Volume<wbr>Snapshot) \\* An existing PVC (Persistent<wbr>Volume<wbr>Claim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source."
  syntax: "public LocalKubernetesReference dataSource()"
  desc: "Get the dataSource property: This field can be used to specify either: \\* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) \\* An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field."
  returns:
    description: "the dataSource value."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.LocalKubernetesReference?alt=com.azure.resourcemanager.iotoperations.models.LocalKubernetesReference&text=LocalKubernetesReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.dataSourceRef()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.dataSourceRef()"
  name: "dataSourceRef()"
  nameWithType: "VolumeClaimSpec.dataSourceRef()"
  summary: "Get the data<wbr>Source<wbr>Ref property: Specifies the object from which to populate the volume with data, if a non-empty volume is desired."
  syntax: "public KubernetesReference dataSourceRef()"
  desc: "Get the dataSourceRef property: Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: \\* While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. \\* While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled."
  returns:
    description: "the dataSourceRef value."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.KubernetesReference?alt=com.azure.resourcemanager.iotoperations.models.KubernetesReference&text=KubernetesReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "VolumeClaimSpec.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Volume<wbr>Claim<wbr>Spec from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static VolumeClaimSpec fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the VolumeClaimSpec."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of VolumeClaimSpec from the JsonReader."
  returns:
    description: "An instance of VolumeClaimSpec if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.resources()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.resources()"
  name: "resources()"
  nameWithType: "VolumeClaimSpec.resources()"
  summary: "Get the resources property: Resources represents the minimum resources the volume should have."
  syntax: "public VolumeClaimResourceRequirements resources()"
  desc: "Get the resources property: Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes\\#resources."
  returns:
    description: "the resources value."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimResourceRequirements?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimResourceRequirements&text=VolumeClaimResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.selector()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.selector()"
  name: "selector()"
  nameWithType: "VolumeClaimSpec.selector()"
  summary: "Get the selector property: A label query over volumes to consider for binding."
  syntax: "public VolumeClaimSpecSelector selector()"
  desc: "Get the selector property: A label query over volumes to consider for binding."
  returns:
    description: "the selector value."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpecSelector?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpecSelector&text=VolumeClaimSpecSelector\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.storageClassName()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.storageClassName()"
  name: "storageClassName()"
  nameWithType: "VolumeClaimSpec.storageClassName()"
  summary: "Get the storage<wbr>Class<wbr>Name property: Name of the Storage<wbr>Class required by the claim."
  syntax: "public String storageClassName()"
  desc: "Get the storageClassName property: Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes\\#class-1."
  returns:
    description: "the storageClassName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "VolumeClaimSpec.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.validate()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.validate()"
  name: "validate()"
  nameWithType: "VolumeClaimSpec.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.volumeMode()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.volumeMode()"
  name: "volumeMode()"
  nameWithType: "VolumeClaimSpec.volumeMode()"
  summary: "Get the volume<wbr>Mode property: volume<wbr>Mode defines what type of volume is required by the claim."
  syntax: "public String volumeMode()"
  desc: "Get the volumeMode property: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
  returns:
    description: "the volumeMode value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.volumeName()"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.volumeName()"
  name: "volumeName()"
  nameWithType: "VolumeClaimSpec.volumeName()"
  summary: "Get the volume<wbr>Name property: Volume<wbr>Name is the binding reference to the Persistent<wbr>Volume backing this claim."
  syntax: "public String volumeName()"
  desc: "Get the volumeName property: VolumeName is the binding reference to the PersistentVolume backing this claim."
  returns:
    description: "the volumeName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withAccessModes(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withAccessModes(List<String> accessModes)"
  name: "withAccessModes(List<String> accessModes)"
  nameWithType: "VolumeClaimSpec.withAccessModes(List<String> accessModes)"
  summary: "Set the access<wbr>Modes property: Access<wbr>Modes contains the desired access modes the volume should have."
  parameters:
  - description: "the accessModes value to set."
    name: "accessModes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public VolumeClaimSpec withAccessModes(List<String> accessModes)"
  desc: "Set the accessModes property: AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes\\#access-modes-1."
  returns:
    description: "the VolumeClaimSpec object itself."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withDataSource(com.azure.resourcemanager.iotoperations.models.LocalKubernetesReference)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withDataSource(LocalKubernetesReference dataSource)"
  name: "withDataSource(LocalKubernetesReference dataSource)"
  nameWithType: "VolumeClaimSpec.withDataSource(LocalKubernetesReference dataSource)"
  summary: "Set the data<wbr>Source property: This field can be used to specify either: \\* An existing Volume<wbr>Snapshot object (snapshot.<wbr>storage.<wbr>k8s.<wbr>io/Volume<wbr>Snapshot) \\* An existing PVC (Persistent<wbr>Volume<wbr>Claim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source."
  parameters:
  - description: "the dataSource value to set."
    name: "dataSource"
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.LocalKubernetesReference?alt=com.azure.resourcemanager.iotoperations.models.LocalKubernetesReference&text=LocalKubernetesReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VolumeClaimSpec withDataSource(LocalKubernetesReference dataSource)"
  desc: "Set the dataSource property: This field can be used to specify either: \\* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) \\* An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field."
  returns:
    description: "the VolumeClaimSpec object itself."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withDataSourceRef(com.azure.resourcemanager.iotoperations.models.KubernetesReference)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withDataSourceRef(KubernetesReference dataSourceRef)"
  name: "withDataSourceRef(KubernetesReference dataSourceRef)"
  nameWithType: "VolumeClaimSpec.withDataSourceRef(KubernetesReference dataSourceRef)"
  summary: "Set the data<wbr>Source<wbr>Ref property: Specifies the object from which to populate the volume with data, if a non-empty volume is desired."
  parameters:
  - description: "the dataSourceRef value to set."
    name: "dataSourceRef"
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.KubernetesReference?alt=com.azure.resourcemanager.iotoperations.models.KubernetesReference&text=KubernetesReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VolumeClaimSpec withDataSourceRef(KubernetesReference dataSourceRef)"
  desc: "Set the dataSourceRef property: Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: \\* While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. \\* While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled."
  returns:
    description: "the VolumeClaimSpec object itself."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withResources(com.azure.resourcemanager.iotoperations.models.VolumeClaimResourceRequirements)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withResources(VolumeClaimResourceRequirements resources)"
  name: "withResources(VolumeClaimResourceRequirements resources)"
  nameWithType: "VolumeClaimSpec.withResources(VolumeClaimResourceRequirements resources)"
  summary: "Set the resources property: Resources represents the minimum resources the volume should have."
  parameters:
  - description: "the resources value to set."
    name: "resources"
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimResourceRequirements?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimResourceRequirements&text=VolumeClaimResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VolumeClaimSpec withResources(VolumeClaimResourceRequirements resources)"
  desc: "Set the resources property: Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes\\#resources."
  returns:
    description: "the VolumeClaimSpec object itself."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withSelector(com.azure.resourcemanager.iotoperations.models.VolumeClaimSpecSelector)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withSelector(VolumeClaimSpecSelector selector)"
  name: "withSelector(VolumeClaimSpecSelector selector)"
  nameWithType: "VolumeClaimSpec.withSelector(VolumeClaimSpecSelector selector)"
  summary: "Set the selector property: A label query over volumes to consider for binding."
  parameters:
  - description: "the selector value to set."
    name: "selector"
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpecSelector?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpecSelector&text=VolumeClaimSpecSelector\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VolumeClaimSpec withSelector(VolumeClaimSpecSelector selector)"
  desc: "Set the selector property: A label query over volumes to consider for binding."
  returns:
    description: "the VolumeClaimSpec object itself."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withStorageClassName(java.lang.String)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withStorageClassName(String storageClassName)"
  name: "withStorageClassName(String storageClassName)"
  nameWithType: "VolumeClaimSpec.withStorageClassName(String storageClassName)"
  summary: "Set the storage<wbr>Class<wbr>Name property: Name of the Storage<wbr>Class required by the claim."
  parameters:
  - description: "the storageClassName value to set."
    name: "storageClassName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VolumeClaimSpec withStorageClassName(String storageClassName)"
  desc: "Set the storageClassName property: Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes\\#class-1."
  returns:
    description: "the VolumeClaimSpec object itself."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withVolumeMode(java.lang.String)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withVolumeMode(String volumeMode)"
  name: "withVolumeMode(String volumeMode)"
  nameWithType: "VolumeClaimSpec.withVolumeMode(String volumeMode)"
  summary: "Set the volume<wbr>Mode property: volume<wbr>Mode defines what type of volume is required by the claim."
  parameters:
  - description: "the volumeMode value to set."
    name: "volumeMode"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VolumeClaimSpec withVolumeMode(String volumeMode)"
  desc: "Set the volumeMode property: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
  returns:
    description: "the VolumeClaimSpec object itself."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withVolumeName(java.lang.String)"
  fullName: "com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec.withVolumeName(String volumeName)"
  name: "withVolumeName(String volumeName)"
  nameWithType: "VolumeClaimSpec.withVolumeName(String volumeName)"
  summary: "Set the volume<wbr>Name property: Volume<wbr>Name is the binding reference to the Persistent<wbr>Volume backing this claim."
  parameters:
  - description: "the volumeName value to set."
    name: "volumeName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VolumeClaimSpec withVolumeName(String volumeName)"
  desc: "Set the volumeName property: VolumeName is the binding reference to the PersistentVolume backing this claim."
  returns:
    description: "the VolumeClaimSpec object itself."
    type: "<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "VolumeClaimSpec properties."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec?alt=com.azure.resourcemanager.iotoperations.models.VolumeClaimSpec&text=VolumeClaimSpec\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.iotoperations.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-iotoperations:1.0.0
