### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.registerConnectionStatusChangeCallback*"
fullName: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.registerConnectionStatusChangeCallback"
name: "registerConnectionStatusChangeCallback"
nameWithType: "MultiplexingClient.registerConnectionStatusChangeCallback"
members:
- uid: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.registerConnectionStatusChangeCallback(com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)"
  name: "registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)"
  nameWithType: "MultiplexingClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)"
  summary: "Registers a callback to be executed when the connection status of the multiplexed connection as a whole changes."
  parameters:
  - description: "The callback to be fired when the connection status of the multiplexed connection changes.\n                 Can be null to unset this listener as long as the provided callbackContext is also null."
    name: "callback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback&text=IotHubConnectionStatusChangeCallback\" data-throw-if-not-resolved=\"False\" />"
  - description: "a context to be passed to the callback. Can be <code>null</code>."
    name: "callbackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)"
  desc: "Registers a callback to be executed when the connection status of the multiplexed connection as a whole changes. The callback will be fired with a status and a reason why the multiplexed connection's status changed. When the callback is fired, the provided context will be provided alongside the status and reason.\n\nNote that this callback will not be fired for device specific connection status changes. In order to be notified when a particular device's connection status changes, you will need to register a connection status change callback on that device client instance using <xref uid=\"com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStatusChangeCallback*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceClient#registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback, Object)\"></xref>.\n\nNote that the thread used to deliver this callback should not be used to call open()/closeNow() on the client that this callback belongs to. All open()/closeNow() operations should be done on a separate thread"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device"
artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.30.1
