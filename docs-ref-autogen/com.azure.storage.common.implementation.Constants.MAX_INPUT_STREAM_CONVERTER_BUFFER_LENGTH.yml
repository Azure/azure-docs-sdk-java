### YamlMime:JavaMember
uid: "com.azure.storage.common.implementation.Constants.MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH*"
fullName: "com.azure.storage.common.implementation.Constants.MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH"
name: "MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH"
nameWithType: "Constants.MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH"
members:
- uid: "com.azure.storage.common.implementation.Constants.MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH"
  fullName: "com.azure.storage.common.implementation.Constants.MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH"
  name: "MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH"
  nameWithType: "Constants.MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH"
  summary: "This constant is used to cap Stream->Flux converter's block size considering that: - Integer.MAX (or near) leads to java.lang.OutOfMemoryError: Requested array size exceeds VM limit - Allocating arrays that are very large can be less successful on busy heap and put extra pressure on GC to de-fragment. - Going to small on the other hand might be harmful to large upload scenarios. Max block size is 4000MB so chunking that into blocks that are smaller produces a lot of garbage to just wrap this into ByteBuffers."
  syntax: "public static final int MAX_INPUT_STREAM_CONVERTER_BUFFER_LENGTH"
type: "field"
metadata: {}
package: "com.azure.storage.common.implementation"
artifact: com.azure:azure-storage-common:12.14.1
