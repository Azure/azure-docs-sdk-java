### YamlMime:JavaMember
nameWithType: FunctionApp.DefinitionStages.WithStorageAccount.withExistingStorageAccount
type: method
members:
- fullName: com.microsoft.azure.management.appservice.FunctionApp.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
  name: withExistingStorageAccount(StorageAccount storageAccount)
  nameWithType: FunctionApp.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
  parameters:
  - description: <p>the storage account to use </p>
    name: storageAccount
    type: <xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.FunctionApp.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.appservice.FunctionApp.DefinitionStages.WithCreate&text=FunctionApp.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies the storage account to use for the function app. </p>
  syntax: public WithCreate withExistingStorageAccount(StorageAccount storageAccount)
  uid: com.microsoft.azure.management.appservice.FunctionApp.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount)
uid: com.microsoft.azure.management.appservice.FunctionApp.DefinitionStages.WithStorageAccount.withExistingStorageAccount*
fullName: com.microsoft.azure.management.appservice.FunctionApp.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
name: withExistingStorageAccount(StorageAccount storageAccount)
package: com.microsoft.azure.management.appservice
metadata: {}
