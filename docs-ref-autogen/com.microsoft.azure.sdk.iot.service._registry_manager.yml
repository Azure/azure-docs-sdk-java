### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service._registry_manager
  id: _registry_manager
  parent: com.microsoft.azure.sdk.iot.service
  children:
  - com.microsoft.azure.sdk.iot.service._registry_manager.addDevice(Device)
  - com.microsoft.azure.sdk.iot.service._registry_manager.addDeviceAsync(Device)
  - com.microsoft.azure.sdk.iot.service._registry_manager.close()
  - com.microsoft.azure.sdk.iot.service._registry_manager.createFromConnectionString(String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.exportDevices(String,Boolean)
  - com.microsoft.azure.sdk.iot.service._registry_manager.exportDevicesAsync(String,Boolean)
  - com.microsoft.azure.sdk.iot.service._registry_manager.getDevice(String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.getDeviceAsync(String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.getDeviceConnectionString(Device)
  - com.microsoft.azure.sdk.iot.service._registry_manager.getDevices(Integer)
  - com.microsoft.azure.sdk.iot.service._registry_manager.getDevicesAsync(Integer)
  - com.microsoft.azure.sdk.iot.service._registry_manager.getJob(String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.getJobAsync(String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.getStatistics()
  - com.microsoft.azure.sdk.iot.service._registry_manager.getStatisticsAsync()
  - com.microsoft.azure.sdk.iot.service._registry_manager.importDevices(String,String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.importDevicesAsync(String,String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.open()
  - com.microsoft.azure.sdk.iot.service._registry_manager.removeDevice(String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.removeDeviceAsync(String)
  - com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice(Device)
  - com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice(Device,Boolean)
  - com.microsoft.azure.sdk.iot.service._registry_manager.updateDeviceAsync(Device)
  - com.microsoft.azure.sdk.iot.service._registry_manager.updateDeviceAsync(Device,Boolean)
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: RegistryManager
  nameWithType: RegistryManager
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 34
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Use the <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager" data-throw-if-not-resolved="false">RegistryManager</xref> class to manage the identity registry in IoT Hubs. </p>
  syntax: &o1
    content: public class RegistryManager
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.addDevice(Device)
  id: addDevice(Device)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: addDevice(Device device)
  nameWithType: RegistryManager.addDevice(Device device)
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(Device device)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.addDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 82
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Add device using the given <xref uid="com.microsoft.azure.sdk.iot.service._device" data-throw-if-not-resolved="false">Device</xref> object Return with the response device object from IotHub</p>

    <p></p>
  syntax:
    content: public Device addDevice(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The device object to add </p>
    return:
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.addDeviceAsync(Device)
  id: addDeviceAsync(Device)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: addDeviceAsync(Device device)
  nameWithType: RegistryManager.addDeviceAsync(Device device)
  fullName: CompletableFuture<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(Device device)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.addDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 123
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for add() operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Device> addDeviceAsync(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The device object to add </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._devicea08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: close()
  nameWithType: RegistryManager.close()
  fullName: void com.microsoft.azure.sdk.iot.service.RegistryManager.close()
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.close*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 71
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Placeholder for close registry operations </p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.createFromConnectionString(String)
  id: createFromConnectionString(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: RegistryManager.createFromConnectionString(String connectionString)
  fullName: static RegistryManager com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.createFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 47
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Static constructor to create instance from connection string</p>

    <p></p>
  syntax:
    content: public static RegistryManager createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>The iot hub connection string </p>
    return:
      type: com.microsoft.azure.sdk.iot.service._registry_manager
      description: <p>The instance of <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager" data-throw-if-not-resolved="false">RegistryManager</xref></p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the object creation failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.exportDevices(String,Boolean)
  id: exportDevices(String,Boolean)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  nameWithType: RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.exportDevices*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 587
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Create a bulk export job.</p>

    <p></p>
  syntax: &o7
    content: public JobProperties exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
    parameters:
    - id: exportBlobContainerUri
      type: "26831127"
      description: <p>URI containing SAS token to a blob container where export data will be placed </p>
    - id: excludeKeys
      type: 866c2227
      description: <p>Whether the devices keys should be excluded from the exported data or not</p>
    return:
      type: com.microsoft.azure.sdk.iot.service._job_properties
      description: <p>A <xref uid="com.microsoft.azure.sdk.iot.service._job_properties" data-throw-if-not-resolved="false">JobProperties</xref> object for the newly created bulk export job</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.exportDevicesAsync(String,Boolean)
  id: exportDevicesAsync(String,Boolean)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  nameWithType: RegistryManager.exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  fullName: CompletableFuture<JobProperties> com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.exportDevicesAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 625
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.exportDevices(String,Boolean)" data-throw-if-not-resolved="false">exportDevices()</xref> operation </p>
  syntax:
    content: public CompletableFuture<JobProperties> exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
    parameters:
    - id: exportBlobContainerUri
      type: "26831127"
      description: <p>the blob storage container URI to store at. </p>
    - id: excludeKeys
      type: 866c2227
      description: <p>if to exclude keys or not </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._job_propertiesa08ddfce
      description: <p>The future object for the requested operation</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDevice(String)
  id: getDevice(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getDevice(String deviceId)
  nameWithType: RegistryManager.getDevice(String deviceId)
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 156
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Get device data by device Id from IotHub</p>

    <p></p>
  syntax: &o2
    content: public Device getDevice(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The id of requested device </p>
    return:
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The device object of requested device </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDeviceAsync(String)
  id: getDeviceAsync(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getDeviceAsync(String deviceId)
  nameWithType: RegistryManager.getDeviceAsync(String deviceId)
  fullName: CompletableFuture<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 193
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.getDevice(String)" data-throw-if-not-resolved="false">getDevice()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Device> getDeviceAsync(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The id of requested device </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._devicea08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDeviceConnectionString(Device)
  id: getDeviceConnectionString(Device)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getDeviceConnectionString(Device device)
  nameWithType: RegistryManager.getDeviceConnectionString(Device device)
  fullName: String com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(Device device)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getDeviceConnectionString*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 303
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Return the iothub device connection string for a provided device. </p>
  syntax:
    content: public String getDeviceConnectionString(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The device object to get the connectionString </p>
    return:
      type: "26831127"
      description: <p>The iothub device connection string </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDevices(Integer)
  id: getDevices(Integer)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getDevices(Integer maxCount)
  nameWithType: RegistryManager.getDevices(Integer maxCount)
  fullName: ArrayList<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(Integer maxCount)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getDevices*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 226
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Get list of devices</p>

    <p></p>
  syntax: &o3
    content: public ArrayList<Device> getDevices(Integer maxCount)
    parameters:
    - id: maxCount
      type: 08effaa0
      description: <p>The requested count of devices </p>
    return:
      type: 573b1e0bcom.microsoft.azure.sdk.iot.service._devicea08ddfce
      description: <p>The array of requested device objects </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDevicesAsync(Integer)
  id: getDevicesAsync(Integer)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getDevicesAsync(Integer maxCount)
  nameWithType: RegistryManager.getDevicesAsync(Integer maxCount)
  fullName: CompletableFuture<ArrayList<Device>> com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(Integer maxCount)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getDevicesAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 273
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.getDevices(Integer)" data-throw-if-not-resolved="false">getDevices()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ArrayList<Device>> getDevicesAsync(Integer maxCount)
    parameters:
    - id: maxCount
      type: 08effaa0
      description: <p>The requested count of devices </p>
    return:
      type: 293e9e1acom.microsoft.azure.sdk.iot.service._devicee7daa122
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getJob(String)
  id: getJob(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getJob(String jobId)
  nameWithType: RegistryManager.getJob(String jobId)
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(String jobId)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getJob*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 728
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Get the properties of an existing job.</p>

    <p></p>
  syntax: &o9
    content: public JobProperties getJob(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job to be retrieved.</p>
    return:
      type: com.microsoft.azure.sdk.iot.service._job_properties
      description: <p>A <xref uid="com.microsoft.azure.sdk.iot.service._job_properties" data-throw-if-not-resolved="false">JobProperties</xref> object for the requested job id</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the jobId parameter is null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getJobAsync(String)
  id: getJobAsync(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getJobAsync(String jobId)
  nameWithType: RegistryManager.getJobAsync(String jobId)
  fullName: CompletableFuture<JobProperties> com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(String jobId)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getJobAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 762
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.getJob(String)" data-throw-if-not-resolved="false">getJob()</xref> operation </p>
  syntax:
    content: public CompletableFuture<JobProperties> getJobAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>jobID as String </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._job_propertiesa08ddfce
      description: <p>The future object for the requested operation</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the jobId parameter is null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getStatistics()
  id: getStatistics()
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getStatistics()
  nameWithType: RegistryManager.getStatistics()
  fullName: RegistryStatistics com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getStatistics*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 526
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Get device statistics</p>

    <p></p>
  syntax: &o6
    content: public RegistryStatistics getStatistics()
    return:
      type: com.microsoft.azure.sdk.iot.service._registry_statistics
      description: >-
        <p>

          <xref uid="com.microsoft.azure.sdk.iot.service._registry_statistics" data-throw-if-not-resolved="false">RegistryStatistics</xref> object containing the requested data </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getStatisticsAsync()
  id: getStatisticsAsync()
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: getStatisticsAsync()
  nameWithType: RegistryManager.getStatisticsAsync()
  fullName: CompletableFuture<RegistryStatistics> com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.getStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 556
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.getStatistics()" data-throw-if-not-resolved="false">getStatistics()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<RegistryStatistics> getStatisticsAsync()
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._registry_statisticsa08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.importDevices(String,String)
  id: importDevices(String,String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  nameWithType: RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.importDevices*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 658
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Create a bulk import job.</p>

    <p></p>
  syntax: &o8
    content: public JobProperties importDevices(String importBlobContainerUri, String outputBlobContainerUri)
    parameters:
    - id: importBlobContainerUri
      type: "26831127"
      description: <p>URI containing SAS token to a blob container that contains registry data to sync </p>
    - id: outputBlobContainerUri
      type: "26831127"
      description: <p>URI containing SAS token to a blob container where the result of the bulk import operation will be placed</p>
    return:
      type: com.microsoft.azure.sdk.iot.service._job_properties
      description: <p>A <xref uid="com.microsoft.azure.sdk.iot.service._job_properties" data-throw-if-not-resolved="false">JobProperties</xref> object for the newly created bulk import job</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.importDevicesAsync(String,String)
  id: importDevicesAsync(String,String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  nameWithType: RegistryManager.importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  fullName: CompletableFuture<JobProperties> com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.importDevicesAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 696
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.importDevices(String,String)" data-throw-if-not-resolved="false">importDevices()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<JobProperties> importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
    parameters:
    - id: importBlobContainerUri
      type: "26831127"
      description: <p>Uri for importBlobContainer </p>
    - id: outputBlobContainerUri
      type: "26831127"
      description: <p>Uri for outputBlobContainer </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._job_propertiesa08ddfce
      description: <p>The future object for the requested operation</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: open()
  nameWithType: RegistryManager.open()
  fullName: void com.microsoft.azure.sdk.iot.service.RegistryManager.open()
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.open*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 66
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Placeholder for open registry operations </p>
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.removeDevice(String)
  id: removeDevice(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: removeDevice(String deviceId)
  nameWithType: RegistryManager.removeDevice(String deviceId)
  fullName: void com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.removeDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 459
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Remove device</p>

    <p></p>
  syntax: &o5
    content: public void removeDevice(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device name to remove </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.removeDeviceAsync(String)
  id: removeDeviceAsync(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: removeDeviceAsync(String deviceId)
  nameWithType: RegistryManager.removeDeviceAsync(String deviceId)
  fullName: CompletableFuture<Boolean> com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.removeDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 494
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.removeDevice(String)" data-throw-if-not-resolved="false">removeDevice()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> removeDeviceAsync(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device object to remove </p>
    return:
      type: 7e53ac82
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice(Device)
  id: updateDevice(Device)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: updateDevice(Device device)
  nameWithType: RegistryManager.updateDevice(Device device)
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 334
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Update device not forced</p>

    <p></p>
  syntax: &o4
    content: public Device updateDevice(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The device object containing updated data </p>
    return:
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The updated device object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice(Device,Boolean)
  id: updateDevice(Device,Boolean)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: updateDevice(Device device, Boolean forceUpdate)
  nameWithType: RegistryManager.updateDevice(Device device, Boolean forceUpdate)
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 354
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Update device with forceUpdate input parameter</p>

    <p></p>
  syntax:
    content: public Device updateDevice(Device device, Boolean forceUpdate)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The device object containing updated data </p>
    - id: forceUpdate
      type: 866c2227
      description: <p>True if the update has to be forced regardless of the device state </p>
    return:
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The updated device object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.updateDeviceAsync(Device)
  id: updateDeviceAsync(Device)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: updateDeviceAsync(Device device)
  nameWithType: RegistryManager.updateDeviceAsync(Device device)
  fullName: CompletableFuture<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.updateDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 395
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice(Device)" data-throw-if-not-resolved="false">updateDevice()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Device> updateDeviceAsync(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The device object containing updated data </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._devicea08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.updateDeviceAsync(Device,Boolean)
  id: updateDeviceAsync(Device,Boolean)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  langs:
  - java
  name: updateDeviceAsync(Device device, Boolean forceUpdate)
  nameWithType: RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)
  fullName: CompletableFuture<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service._registry_manager.updateDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 428
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Async wrapper for forced <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice(Device)" data-throw-if-not-resolved="false">updateDevice()</xref> operation</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Device> updateDeviceAsync(Device device, Boolean forceUpdate)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service._device
      description: <p>The device object containing updated data </p>
    - id: forceUpdate
      type: 866c2227
      description: <p>True is the update has to be forced regardless if the device state </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service._devicea08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: RegistryManager.createFromConnectionString
  fullName: static RegistryManager com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.open*
  name: open
  nameWithType: RegistryManager.open
  fullName: void com.microsoft.azure.sdk.iot.service.RegistryManager.open
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.close*
  name: close
  nameWithType: RegistryManager.close
  fullName: void com.microsoft.azure.sdk.iot.service.RegistryManager.close
  package: com.microsoft.azure.sdk.iot.service
- uid: 0d494ee6
  spec.java:
  - name: IotHubException
    fullName: IotHubException
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.addDevice*
  name: addDevice
  nameWithType: RegistryManager.addDevice
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: 9cdf14d0com.microsoft.azure.sdk.iot.service._devicea08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.sdk.iot.service._device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
    href: com.microsoft.azure.sdk.iot.service._device.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.addDeviceAsync*
  name: addDeviceAsync
  nameWithType: RegistryManager.addDeviceAsync
  fullName: CompletableFuture<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDevice*
  name: getDevice
  nameWithType: RegistryManager.getDevice
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDeviceAsync*
  name: getDeviceAsync
  nameWithType: RegistryManager.getDeviceAsync
  fullName: CompletableFuture<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 573b1e0bcom.microsoft.azure.sdk.iot.service._devicea08ddfce
  spec.java:
  - name: ArrayList<
    fullName: ArrayList<
  - uid: com.microsoft.azure.sdk.iot.service._device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
    href: com.microsoft.azure.sdk.iot.service._device.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDevices*
  name: getDevices
  nameWithType: RegistryManager.getDevices
  fullName: ArrayList<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: 293e9e1acom.microsoft.azure.sdk.iot.service._devicee7daa122
  spec.java:
  - name: CompletableFuture<ArrayList<
    fullName: CompletableFuture<ArrayList<
  - uid: com.microsoft.azure.sdk.iot.service._device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
    href: com.microsoft.azure.sdk.iot.service._device.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDevicesAsync*
  name: getDevicesAsync
  nameWithType: RegistryManager.getDevicesAsync
  fullName: CompletableFuture<ArrayList<Device>> com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDeviceConnectionString*
  name: getDeviceConnectionString
  nameWithType: RegistryManager.getDeviceConnectionString
  fullName: String com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice*
  name: updateDevice
  nameWithType: RegistryManager.updateDevice
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.updateDeviceAsync*
  name: updateDeviceAsync
  nameWithType: RegistryManager.updateDeviceAsync
  fullName: CompletableFuture<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.removeDevice*
  name: removeDevice
  nameWithType: RegistryManager.removeDevice
  fullName: void com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.removeDeviceAsync*
  name: removeDeviceAsync
  nameWithType: RegistryManager.removeDeviceAsync
  fullName: CompletableFuture<Boolean> com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getStatistics*
  name: getStatistics
  nameWithType: RegistryManager.getStatistics
  fullName: RegistryStatistics com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics
  package: com.microsoft.azure.sdk.iot.service
- uid: 9cdf14d0com.microsoft.azure.sdk.iot.service._registry_statisticsa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.sdk.iot.service._registry_statistics
    name: RegistryStatistics
    fullName: com.microsoft.azure.sdk.iot.service.RegistryStatistics
    href: com.microsoft.azure.sdk.iot.service._registry_statistics.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getStatisticsAsync*
  name: getStatisticsAsync
  nameWithType: RegistryManager.getStatisticsAsync
  fullName: CompletableFuture<RegistryStatistics> com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.exportDevices*
  name: exportDevices
  nameWithType: RegistryManager.exportDevices
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: 9cdf14d0com.microsoft.azure.sdk.iot.service._job_propertiesa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.sdk.iot.service._job_properties
    name: JobProperties
    fullName: com.microsoft.azure.sdk.iot.service.JobProperties
    href: com.microsoft.azure.sdk.iot.service._job_properties.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.exportDevicesAsync*
  name: exportDevicesAsync
  nameWithType: RegistryManager.exportDevicesAsync
  fullName: CompletableFuture<JobProperties> com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.importDevices*
  name: importDevices
  nameWithType: RegistryManager.importDevices
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.importDevicesAsync*
  name: importDevicesAsync
  nameWithType: RegistryManager.importDevicesAsync
  fullName: CompletableFuture<JobProperties> com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getJob*
  name: getJob
  nameWithType: RegistryManager.getJob
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.getJob
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getJobAsync*
  name: getJobAsync
  nameWithType: RegistryManager.getJobAsync
  fullName: CompletableFuture<JobProperties> com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string.yml
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  type: Class
  summary: <p>Expose all connections string properties and methods for user, device and connection string serialization. </p>
  syntax:
    content: public class IotHubConnectionString extends IotHubConnectionStringBuilder
- uid: com.microsoft.azure.sdk.iot.service._registry_manager
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: RegistryManager
  nameWithType: RegistryManager
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager
  type: Class
  summary: <p>Use the <xref uid="com.microsoft.azure.sdk.iot.service._registry_manager" data-throw-if-not-resolved="false">RegistryManager</xref> class to manage the identity registry in IoT Hubs. </p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.service._device
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._device.yml
  name: Device
  nameWithType: Device
  fullName: com.microsoft.azure.sdk.iot.service.Device
  type: Class
  summary: <p>The <xref uid="com.microsoft.azure.sdk.iot.service._device" data-throw-if-not-resolved="false">Device</xref> class extends the <xref uid="com.microsoft.azure.sdk.iot.service._device" data-throw-if-not-resolved="false">Device</xref> class implementing constructors and serialization functionality. </p>
  syntax:
    content: public class Device
- uid: com.microsoft.azure.sdk.iot.service.exceptions._iot_hub_exception
  parent: com.microsoft.azure.sdk.iot.service.exceptions
  href: com.microsoft.azure.sdk.iot.service.exceptions._iot_hub_exception.yml
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  type: Class
  summary: <p>Super class for IotHub exceptions </p>
  syntax:
    content: public class IotHubException
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDevice(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: getDevice(String deviceId)
  nameWithType: RegistryManager.getDevice(String deviceId)
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(String deviceId)
  type: Method
  summary: >-
    <p>Get device data by device Id from IotHub</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getDevices(Integer)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: getDevices(Integer maxCount)
  nameWithType: RegistryManager.getDevices(Integer maxCount)
  fullName: ArrayList<Device> com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(Integer maxCount)
  type: Method
  summary: >-
    <p>Get list of devices</p>

    <p></p>
  syntax: *o3
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.updateDevice(Device)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: updateDevice(Device device)
  nameWithType: RegistryManager.updateDevice(Device device)
  fullName: Device com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device)
  type: Method
  summary: >-
    <p>Update device not forced</p>

    <p></p>
  syntax: *o4
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.removeDevice(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: removeDevice(String deviceId)
  nameWithType: RegistryManager.removeDevice(String deviceId)
  fullName: void com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(String deviceId)
  type: Method
  summary: >-
    <p>Remove device</p>

    <p></p>
  syntax: *o5
- uid: com.microsoft.azure.sdk.iot.service._registry_statistics
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._registry_statistics.yml
  name: RegistryStatistics
  nameWithType: RegistryStatistics
  fullName: com.microsoft.azure.sdk.iot.service.RegistryStatistics
  type: Class
  syntax:
    content: public class RegistryStatistics
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getStatistics()
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: getStatistics()
  nameWithType: RegistryManager.getStatistics()
  fullName: RegistryStatistics com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()
  type: Method
  summary: >-
    <p>Get device statistics</p>

    <p></p>
  syntax: *o6
- uid: com.microsoft.azure.sdk.iot.service._job_properties
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._job_properties.yml
  name: JobProperties
  nameWithType: JobProperties
  fullName: com.microsoft.azure.sdk.iot.service.JobProperties
  type: Class
  syntax:
    content: public class JobProperties
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.exportDevices(String,Boolean)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  nameWithType: RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  type: Method
  summary: >-
    <p>Create a bulk export job.</p>

    <p></p>
  syntax: *o7
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.importDevices(String,String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  nameWithType: RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  type: Method
  summary: >-
    <p>Create a bulk import job.</p>

    <p></p>
  syntax: *o8
- uid: com.microsoft.azure.sdk.iot.service._registry_manager.getJob(String)
  parent: com.microsoft.azure.sdk.iot.service._registry_manager
  href: com.microsoft.azure.sdk.iot.service._registry_manager.yml
  name: getJob(String jobId)
  nameWithType: RegistryManager.getJob(String jobId)
  fullName: JobProperties com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(String jobId)
  type: Method
  summary: >-
    <p>Get the properties of an existing job.</p>

    <p></p>
  syntax: *o9
- uid: com.microsoft.azure.sdk.iot.service.transport.http._http_response
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http._http_response.yml
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse
  type: Class
  summary: <p>An HTTPS response. Contains the status code, body, header fields, and error reason (if any). </p>
  syntax:
    content: public class HttpResponse
- uid: com.microsoft.azure.sdk.iot.service.transport.http._http_request
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http._http_request.yml
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest
  type: Class
  syntax:
    content: public class HttpRequest
- uid: com.microsoft.azure.sdk.iot.service.transport.http._http_method
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http._http_method.yml
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
  type: Enum
  summary: <p>The HTTPS request method (i.e. GET). </p>
  syntax:
    content: public enum HttpMethod
