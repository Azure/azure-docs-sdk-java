### YamlMime:JavaMember
uid: "com.azure.security.attestation.AttestationAdministrationClient.calculatePolicyTokenHash*"
fullName: "com.azure.security.attestation.AttestationAdministrationClient.calculatePolicyTokenHash"
name: "calculatePolicyTokenHash"
nameWithType: "AttestationAdministrationClient.calculatePolicyTokenHash"
members:
- uid: "com.azure.security.attestation.AttestationAdministrationClient.calculatePolicyTokenHash(java.lang.String,com.azure.security.attestation.models.AttestationSigningKey)"
  fullName: "com.azure.security.attestation.AttestationAdministrationClient.calculatePolicyTokenHash(String policy, AttestationSigningKey signer)"
  name: "calculatePolicyTokenHash(String policy, AttestationSigningKey signer)"
  nameWithType: "AttestationAdministrationClient.calculatePolicyTokenHash(String policy, AttestationSigningKey signer)"
  summary: "Calculates the PolicyTokenHash for a given policy string. The policyTokenHash claim in the <xref uid=\"com.azure.security.attestation.models.PolicyResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolicyResult\"></xref> class is the SHA-256 hash of the underlying policy set JSON Web Token sent to the attestation service. This helper API allows the caller to independently calculate SHA-256 hash of an attestation token corresponding to the value which would be sent to the attestation service. The value returned by this API must always match the value in the <xref uid=\"com.azure.security.attestation.models.PolicyResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolicyResult\"></xref> object, if it does not, it means that the attestation policy received by the service is NOT the one which the customer specified. For an example of how to check the policy token hash:\n\n```java\nBinaryData expectedHash = client.calculatePolicyTokenHash(policyToSet, null);\n BinaryData actualHash = result.getPolicyTokenHash();\n String expectedString = Hex.toHexString(expectedHash.toBytes());\n String actualString = Hex.toHexString(actualHash.toBytes());\n if (!expectedString.equals(actualString)) {\n     throw new RuntimeException(\"Policy was set but not received!!!\");\n }\n```"
  parameters:
  - description: "AttestationPolicy document use in the underlying JWT."
    name: "policy"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional signing key used to sign the underlying JWT."
    name: "signer"
    type: "<xref href=\"com.azure.security.attestation.models.AttestationSigningKey?alt=com.azure.security.attestation.models.AttestationSigningKey&text=AttestationSigningKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData calculatePolicyTokenHash(String policy, AttestationSigningKey signer)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> containing the SHA-256 hash of the attestation policy token generated\n using the specified policy and signer."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.attestation"
artifact: com.azure:azure-security-attestation:1.1.0
