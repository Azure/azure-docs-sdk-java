### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.models.SearchIndex
  id: SearchIndex
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models
  children:
  - com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(java.lang.String)
  - com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(java.lang.String,java.util.List<com.azure.search.documents.indexes.models.SearchField>)
  - com.azure.search.documents.indexes.models.SearchIndex.getAnalyzers()
  - com.azure.search.documents.indexes.models.SearchIndex.getCharFilters()
  - com.azure.search.documents.indexes.models.SearchIndex.getCorsOptions()
  - com.azure.search.documents.indexes.models.SearchIndex.getDefaultScoringProfile()
  - com.azure.search.documents.indexes.models.SearchIndex.getETag()
  - com.azure.search.documents.indexes.models.SearchIndex.getEncryptionKey()
  - com.azure.search.documents.indexes.models.SearchIndex.getFields()
  - com.azure.search.documents.indexes.models.SearchIndex.getName()
  - com.azure.search.documents.indexes.models.SearchIndex.getScoringProfiles()
  - com.azure.search.documents.indexes.models.SearchIndex.getSimilarity()
  - com.azure.search.documents.indexes.models.SearchIndex.getSuggesters()
  - com.azure.search.documents.indexes.models.SearchIndex.getTokenFilters()
  - com.azure.search.documents.indexes.models.SearchIndex.getTokenizers()
  - com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(com.azure.search.documents.indexes.models.LexicalAnalyzer...)
  - com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(java.util.List<com.azure.search.documents.indexes.models.LexicalAnalyzer>)
  - com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(com.azure.search.documents.indexes.models.CharFilter...)
  - com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(java.util.List<com.azure.search.documents.indexes.models.CharFilter>)
  - com.azure.search.documents.indexes.models.SearchIndex.setCorsOptions(com.azure.search.documents.indexes.models.CorsOptions)
  - com.azure.search.documents.indexes.models.SearchIndex.setDefaultScoringProfile(java.lang.String)
  - com.azure.search.documents.indexes.models.SearchIndex.setETag(java.lang.String)
  - com.azure.search.documents.indexes.models.SearchIndex.setEncryptionKey(com.azure.search.documents.indexes.models.SearchResourceEncryptionKey)
  - com.azure.search.documents.indexes.models.SearchIndex.setFields(com.azure.search.documents.indexes.models.SearchField...)
  - com.azure.search.documents.indexes.models.SearchIndex.setFields(java.util.List<com.azure.search.documents.indexes.models.SearchField>)
  - com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(com.azure.search.documents.indexes.models.ScoringProfile...)
  - com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(java.util.List<com.azure.search.documents.indexes.models.ScoringProfile>)
  - com.azure.search.documents.indexes.models.SearchIndex.setSimilarity(com.azure.search.documents.indexes.models.SimilarityAlgorithm)
  - com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(com.azure.search.documents.indexes.models.SearchSuggester...)
  - com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(java.util.List<com.azure.search.documents.indexes.models.SearchSuggester>)
  - com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(com.azure.search.documents.indexes.models.TokenFilter...)
  - com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(java.util.List<com.azure.search.documents.indexes.models.TokenFilter>)
  - com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(com.azure.search.documents.indexes.models.LexicalTokenizer...)
  - com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(java.util.List<com.azure.search.documents.indexes.models.LexicalTokenizer>)
  langs:
  - java
  name: SearchIndex
  nameWithType: SearchIndex
  fullName: com.azure.search.documents.indexes.models.SearchIndex
  type: Class
  package: com.azure.search.documents.indexes.models
  summary: Represents a search index definition, which describes the fields and search behavior of an index.
  syntax:
    content: public final class SearchIndex
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(java.lang.String)
  id: SearchIndex(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: SearchIndex(String name)
  nameWithType: SearchIndex.SearchIndex(String name)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(String name)
  overload: com.azure.search.documents.indexes.models.SearchIndex.SearchIndex*
  type: Constructor
  package: com.azure.search.documents.indexes.models
  summary: Constructor of <xref uid="com.azure.search.documents.indexes.models.SearchIndex" data-throw-if-not-resolved="false">SearchIndex</xref>.
  syntax:
    content: public SearchIndex(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name of the index.
- uid: com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(java.lang.String,java.util.List<com.azure.search.documents.indexes.models.SearchField>)
  id: SearchIndex(java.lang.String,java.util.List<com.azure.search.documents.indexes.models.SearchField>)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: SearchIndex(String name, List<SearchField> fields)
  nameWithType: SearchIndex.SearchIndex(String name, List<SearchField> fields)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(String name, List<SearchField> fields)
  overload: com.azure.search.documents.indexes.models.SearchIndex.SearchIndex*
  type: Constructor
  package: com.azure.search.documents.indexes.models
  summary: Constructor of <xref uid="com.azure.search.documents.indexes.models.SearchIndex" data-throw-if-not-resolved="false">SearchIndex</xref>.
  syntax:
    content: public SearchIndex(String name, List<SearchField> fields)
    parameters:
    - id: name
      type: java.lang.String
      description: The name of the index.
    - id: fields
      type: java.util.List<com.azure.search.documents.indexes.models.SearchField>
      description: The fields of the index.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getAnalyzers()
  id: getAnalyzers()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getAnalyzers()
  nameWithType: SearchIndex.getAnalyzers()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getAnalyzers()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getAnalyzers*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the analyzers property: The analyzers for the index.'
  syntax:
    content: public List<LexicalAnalyzer> getAnalyzers()
    return:
      type: java.util.List<com.azure.search.documents.indexes.models.LexicalAnalyzer>
      description: the analyzers value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getCharFilters()
  id: getCharFilters()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getCharFilters()
  nameWithType: SearchIndex.getCharFilters()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getCharFilters()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getCharFilters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the charFilters property: The character filters for the index.'
  syntax:
    content: public List<CharFilter> getCharFilters()
    return:
      type: java.util.List<com.azure.search.documents.indexes.models.CharFilter>
      description: the charFilters value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getCorsOptions()
  id: getCorsOptions()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getCorsOptions()
  nameWithType: SearchIndex.getCorsOptions()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getCorsOptions()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getCorsOptions*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the corsOptions property: Options to control Cross-Origin Resource Sharing (CORS) for the index.'
  syntax:
    content: public CorsOptions getCorsOptions()
    return:
      type: com.azure.search.documents.indexes.models.CorsOptions
      description: the corsOptions value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getDefaultScoringProfile()
  id: getDefaultScoringProfile()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getDefaultScoringProfile()
  nameWithType: SearchIndex.getDefaultScoringProfile()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getDefaultScoringProfile()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getDefaultScoringProfile*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the defaultScoringProfile property: The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used.'
  syntax:
    content: public String getDefaultScoringProfile()
    return:
      type: java.lang.String
      description: the defaultScoringProfile value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getETag()
  id: getETag()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getETag()
  nameWithType: SearchIndex.getETag()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getETag()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getETag*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the eTag property: The ETag of the index.'
  syntax:
    content: public String getETag()
    return:
      type: java.lang.String
      description: the eTag value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getEncryptionKey()
  id: getEncryptionKey()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getEncryptionKey()
  nameWithType: SearchIndex.getEncryptionKey()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getEncryptionKey()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getEncryptionKey*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the encryptionKey property: A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019.'
  syntax:
    content: public SearchResourceEncryptionKey getEncryptionKey()
    return:
      type: com.azure.search.documents.indexes.models.SearchResourceEncryptionKey
      description: the encryptionKey value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getFields()
  id: getFields()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getFields()
  nameWithType: SearchIndex.getFields()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getFields()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getFields*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the fields property: The fields of the index.'
  syntax:
    content: public List<SearchField> getFields()
    return:
      type: java.util.List<com.azure.search.documents.indexes.models.SearchField>
      description: the fields value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getName()
  id: getName()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getName()
  nameWithType: SearchIndex.getName()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getName()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getName*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the name property: The name of the index.'
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
      description: the name value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getScoringProfiles()
  id: getScoringProfiles()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getScoringProfiles()
  nameWithType: SearchIndex.getScoringProfiles()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getScoringProfiles()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getScoringProfiles*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the scoringProfiles property: The scoring profiles for the index.'
  syntax:
    content: public List<ScoringProfile> getScoringProfiles()
    return:
      type: java.util.List<com.azure.search.documents.indexes.models.ScoringProfile>
      description: the scoringProfiles value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getSimilarity()
  id: getSimilarity()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getSimilarity()
  nameWithType: SearchIndex.getSimilarity()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getSimilarity()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getSimilarity*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the similarity property: The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used.'
  syntax:
    content: public SimilarityAlgorithm getSimilarity()
    return:
      type: com.azure.search.documents.indexes.models.SimilarityAlgorithm
      description: the similarity value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getSuggesters()
  id: getSuggesters()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getSuggesters()
  nameWithType: SearchIndex.getSuggesters()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getSuggesters()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getSuggesters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the suggesters property: The suggesters for the index.'
  syntax:
    content: public List<SearchSuggester> getSuggesters()
    return:
      type: java.util.List<com.azure.search.documents.indexes.models.SearchSuggester>
      description: the suggesters value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getTokenFilters()
  id: getTokenFilters()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getTokenFilters()
  nameWithType: SearchIndex.getTokenFilters()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getTokenFilters()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getTokenFilters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the tokenFilters property: The token filters for the index.'
  syntax:
    content: public List<TokenFilter> getTokenFilters()
    return:
      type: java.util.List<com.azure.search.documents.indexes.models.TokenFilter>
      description: the tokenFilters value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.getTokenizers()
  id: getTokenizers()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: getTokenizers()
  nameWithType: SearchIndex.getTokenizers()
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getTokenizers()
  overload: com.azure.search.documents.indexes.models.SearchIndex.getTokenizers*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the tokenizers property: The tokenizers for the index.'
  syntax:
    content: public List<LexicalTokenizer> getTokenizers()
    return:
      type: java.util.List<com.azure.search.documents.indexes.models.LexicalTokenizer>
      description: the tokenizers value.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(com.azure.search.documents.indexes.models.LexicalAnalyzer...)
  id: setAnalyzers(com.azure.search.documents.indexes.models.LexicalAnalyzer...)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setAnalyzers(LexicalAnalyzer[] analyzers)
  nameWithType: SearchIndex.setAnalyzers(LexicalAnalyzer[] analyzers)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(LexicalAnalyzer[] analyzers)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the analyzers property: The analyzers for the index.'
  syntax:
    content: public SearchIndex setAnalyzers(LexicalAnalyzer[] analyzers)
    parameters:
    - id: analyzers
      type: com.azure.search.documents.indexes.models.LexicalAnalyzer[]
      description: the analyzers value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(java.util.List<com.azure.search.documents.indexes.models.LexicalAnalyzer>)
  id: setAnalyzers(java.util.List<com.azure.search.documents.indexes.models.LexicalAnalyzer>)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setAnalyzers(List<LexicalAnalyzer> analyzers)
  nameWithType: SearchIndex.setAnalyzers(List<LexicalAnalyzer> analyzers)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(List<LexicalAnalyzer> analyzers)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the analyzers property: The analyzers for the index.'
  syntax:
    content: public SearchIndex setAnalyzers(List<LexicalAnalyzer> analyzers)
    parameters:
    - id: analyzers
      type: java.util.List<com.azure.search.documents.indexes.models.LexicalAnalyzer>
      description: the analyzers value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(com.azure.search.documents.indexes.models.CharFilter...)
  id: setCharFilters(com.azure.search.documents.indexes.models.CharFilter...)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setCharFilters(CharFilter[] charFilters)
  nameWithType: SearchIndex.setCharFilters(CharFilter[] charFilters)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(CharFilter[] charFilters)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setCharFilters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the charFilters property: The character filters for the index.'
  syntax:
    content: public SearchIndex setCharFilters(CharFilter[] charFilters)
    parameters:
    - id: charFilters
      type: com.azure.search.documents.indexes.models.CharFilter[]
      description: the charFilters value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(java.util.List<com.azure.search.documents.indexes.models.CharFilter>)
  id: setCharFilters(java.util.List<com.azure.search.documents.indexes.models.CharFilter>)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setCharFilters(List<CharFilter> charFilters)
  nameWithType: SearchIndex.setCharFilters(List<CharFilter> charFilters)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(List<CharFilter> charFilters)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setCharFilters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the charFilters property: The character filters for the index.'
  syntax:
    content: public SearchIndex setCharFilters(List<CharFilter> charFilters)
    parameters:
    - id: charFilters
      type: java.util.List<com.azure.search.documents.indexes.models.CharFilter>
      description: the charFilters value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setCorsOptions(com.azure.search.documents.indexes.models.CorsOptions)
  id: setCorsOptions(com.azure.search.documents.indexes.models.CorsOptions)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setCorsOptions(CorsOptions corsOptions)
  nameWithType: SearchIndex.setCorsOptions(CorsOptions corsOptions)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setCorsOptions(CorsOptions corsOptions)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setCorsOptions*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the corsOptions property: Options to control Cross-Origin Resource Sharing (CORS) for the index.'
  syntax:
    content: public SearchIndex setCorsOptions(CorsOptions corsOptions)
    parameters:
    - id: corsOptions
      type: com.azure.search.documents.indexes.models.CorsOptions
      description: the corsOptions value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setDefaultScoringProfile(java.lang.String)
  id: setDefaultScoringProfile(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setDefaultScoringProfile(String defaultScoringProfile)
  nameWithType: SearchIndex.setDefaultScoringProfile(String defaultScoringProfile)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setDefaultScoringProfile(String defaultScoringProfile)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setDefaultScoringProfile*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the defaultScoringProfile property: The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used.'
  syntax:
    content: public SearchIndex setDefaultScoringProfile(String defaultScoringProfile)
    parameters:
    - id: defaultScoringProfile
      type: java.lang.String
      description: the defaultScoringProfile value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setETag(java.lang.String)
  id: setETag(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setETag(String eTag)
  nameWithType: SearchIndex.setETag(String eTag)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setETag(String eTag)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setETag*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the eTag property: The ETag of the index.'
  syntax:
    content: public SearchIndex setETag(String eTag)
    parameters:
    - id: eTag
      type: java.lang.String
      description: the eTag value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setEncryptionKey(com.azure.search.documents.indexes.models.SearchResourceEncryptionKey)
  id: setEncryptionKey(com.azure.search.documents.indexes.models.SearchResourceEncryptionKey)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setEncryptionKey(SearchResourceEncryptionKey encryptionKey)
  nameWithType: SearchIndex.setEncryptionKey(SearchResourceEncryptionKey encryptionKey)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setEncryptionKey(SearchResourceEncryptionKey encryptionKey)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setEncryptionKey*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the encryptionKey property: A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019.'
  syntax:
    content: public SearchIndex setEncryptionKey(SearchResourceEncryptionKey encryptionKey)
    parameters:
    - id: encryptionKey
      type: com.azure.search.documents.indexes.models.SearchResourceEncryptionKey
      description: the encryptionKey value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setFields(com.azure.search.documents.indexes.models.SearchField...)
  id: setFields(com.azure.search.documents.indexes.models.SearchField...)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setFields(SearchField[] fields)
  nameWithType: SearchIndex.setFields(SearchField[] fields)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setFields(SearchField[] fields)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setFields*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the fields property: The fields of the index.'
  syntax:
    content: public SearchIndex setFields(SearchField[] fields)
    parameters:
    - id: fields
      type: com.azure.search.documents.indexes.models.SearchField[]
      description: the fields value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setFields(java.util.List<com.azure.search.documents.indexes.models.SearchField>)
  id: setFields(java.util.List<com.azure.search.documents.indexes.models.SearchField>)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setFields(List<SearchField> fields)
  nameWithType: SearchIndex.setFields(List<SearchField> fields)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setFields(List<SearchField> fields)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setFields*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the fields property: The fields of the index.'
  syntax:
    content: public SearchIndex setFields(List<SearchField> fields)
    parameters:
    - id: fields
      type: java.util.List<com.azure.search.documents.indexes.models.SearchField>
      description: the fields value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(com.azure.search.documents.indexes.models.ScoringProfile...)
  id: setScoringProfiles(com.azure.search.documents.indexes.models.ScoringProfile...)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setScoringProfiles(ScoringProfile[] scoringProfiles)
  nameWithType: SearchIndex.setScoringProfiles(ScoringProfile[] scoringProfiles)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(ScoringProfile[] scoringProfiles)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the scoringProfiles property: The scoring profiles for the index.'
  syntax:
    content: public SearchIndex setScoringProfiles(ScoringProfile[] scoringProfiles)
    parameters:
    - id: scoringProfiles
      type: com.azure.search.documents.indexes.models.ScoringProfile[]
      description: the scoringProfiles value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(java.util.List<com.azure.search.documents.indexes.models.ScoringProfile>)
  id: setScoringProfiles(java.util.List<com.azure.search.documents.indexes.models.ScoringProfile>)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setScoringProfiles(List<ScoringProfile> scoringProfiles)
  nameWithType: SearchIndex.setScoringProfiles(List<ScoringProfile> scoringProfiles)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(List<ScoringProfile> scoringProfiles)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the scoringProfiles property: The scoring profiles for the index.'
  syntax:
    content: public SearchIndex setScoringProfiles(List<ScoringProfile> scoringProfiles)
    parameters:
    - id: scoringProfiles
      type: java.util.List<com.azure.search.documents.indexes.models.ScoringProfile>
      description: the scoringProfiles value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setSimilarity(com.azure.search.documents.indexes.models.SimilarityAlgorithm)
  id: setSimilarity(com.azure.search.documents.indexes.models.SimilarityAlgorithm)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setSimilarity(SimilarityAlgorithm similarity)
  nameWithType: SearchIndex.setSimilarity(SimilarityAlgorithm similarity)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setSimilarity(SimilarityAlgorithm similarity)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setSimilarity*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the similarity property: The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used.'
  syntax:
    content: public SearchIndex setSimilarity(SimilarityAlgorithm similarity)
    parameters:
    - id: similarity
      type: com.azure.search.documents.indexes.models.SimilarityAlgorithm
      description: the similarity value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(com.azure.search.documents.indexes.models.SearchSuggester...)
  id: setSuggesters(com.azure.search.documents.indexes.models.SearchSuggester...)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setSuggesters(SearchSuggester[] suggesters)
  nameWithType: SearchIndex.setSuggesters(SearchSuggester[] suggesters)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(SearchSuggester[] suggesters)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setSuggesters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the suggesters property: The suggesters for the index.'
  syntax:
    content: public SearchIndex setSuggesters(SearchSuggester[] suggesters)
    parameters:
    - id: suggesters
      type: com.azure.search.documents.indexes.models.SearchSuggester[]
      description: the suggesters value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(java.util.List<com.azure.search.documents.indexes.models.SearchSuggester>)
  id: setSuggesters(java.util.List<com.azure.search.documents.indexes.models.SearchSuggester>)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setSuggesters(List<SearchSuggester> suggesters)
  nameWithType: SearchIndex.setSuggesters(List<SearchSuggester> suggesters)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(List<SearchSuggester> suggesters)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setSuggesters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the suggesters property: The suggesters for the index.'
  syntax:
    content: public SearchIndex setSuggesters(List<SearchSuggester> suggesters)
    parameters:
    - id: suggesters
      type: java.util.List<com.azure.search.documents.indexes.models.SearchSuggester>
      description: the suggesters value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(com.azure.search.documents.indexes.models.TokenFilter...)
  id: setTokenFilters(com.azure.search.documents.indexes.models.TokenFilter...)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setTokenFilters(TokenFilter[] tokenFilters)
  nameWithType: SearchIndex.setTokenFilters(TokenFilter[] tokenFilters)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(TokenFilter[] tokenFilters)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the tokenFilters property: The token filters for the index.'
  syntax:
    content: public SearchIndex setTokenFilters(TokenFilter[] tokenFilters)
    parameters:
    - id: tokenFilters
      type: com.azure.search.documents.indexes.models.TokenFilter[]
      description: the tokenFilters value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(java.util.List<com.azure.search.documents.indexes.models.TokenFilter>)
  id: setTokenFilters(java.util.List<com.azure.search.documents.indexes.models.TokenFilter>)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setTokenFilters(List<TokenFilter> tokenFilters)
  nameWithType: SearchIndex.setTokenFilters(List<TokenFilter> tokenFilters)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(List<TokenFilter> tokenFilters)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the tokenFilters property: The token filters for the index.'
  syntax:
    content: public SearchIndex setTokenFilters(List<TokenFilter> tokenFilters)
    parameters:
    - id: tokenFilters
      type: java.util.List<com.azure.search.documents.indexes.models.TokenFilter>
      description: the tokenFilters value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(com.azure.search.documents.indexes.models.LexicalTokenizer...)
  id: setTokenizers(com.azure.search.documents.indexes.models.LexicalTokenizer...)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setTokenizers(LexicalTokenizer[] tokenizers)
  nameWithType: SearchIndex.setTokenizers(LexicalTokenizer[] tokenizers)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(LexicalTokenizer[] tokenizers)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setTokenizers*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the tokenizers property: The tokenizers for the index.'
  syntax:
    content: public SearchIndex setTokenizers(LexicalTokenizer[] tokenizers)
    parameters:
    - id: tokenizers
      type: com.azure.search.documents.indexes.models.LexicalTokenizer[]
      description: the tokenizers value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
- uid: com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(java.util.List<com.azure.search.documents.indexes.models.LexicalTokenizer>)
  id: setTokenizers(java.util.List<com.azure.search.documents.indexes.models.LexicalTokenizer>)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.models.SearchIndex
  langs:
  - java
  name: setTokenizers(List<LexicalTokenizer> tokenizers)
  nameWithType: SearchIndex.setTokenizers(List<LexicalTokenizer> tokenizers)
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(List<LexicalTokenizer> tokenizers)
  overload: com.azure.search.documents.indexes.models.SearchIndex.setTokenizers*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the tokenizers property: The tokenizers for the index.'
  syntax:
    content: public SearchIndex setTokenizers(List<LexicalTokenizer> tokenizers)
    parameters:
    - id: tokenizers
      type: java.util.List<com.azure.search.documents.indexes.models.LexicalTokenizer>
      description: the tokenizers value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndex
      description: the SearchIndex object itself.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.models.SearchIndex.SearchIndex*
  name: SearchIndex
  nameWithType: SearchIndex.SearchIndex
  fullName: com.azure.search.documents.indexes.models.SearchIndex.SearchIndex
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<com.azure.search.documents.indexes.models.SearchField>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchField
    name: SearchField
    fullName: com.azure.search.documents.indexes.models.SearchField
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.SearchIndex.getName*
  name: getName
  nameWithType: SearchIndex.getName
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getName
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchIndex.getFields*
  name: getFields
  nameWithType: SearchIndex.getFields
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getFields
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchField[]
  spec.java:
  - uid: com.azure.search.documents.indexes.models.SearchField
    name: SearchField
    fullName: com.azure.search.documents.indexes.models.SearchField
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.SearchIndex.setFields*
  name: setFields
  nameWithType: SearchIndex.setFields
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setFields
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<com.azure.search.documents.indexes.models.ScoringProfile>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.ScoringProfile
    name: ScoringProfile
    fullName: com.azure.search.documents.indexes.models.ScoringProfile
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.SearchIndex.getScoringProfiles*
  name: getScoringProfiles
  nameWithType: SearchIndex.getScoringProfiles
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getScoringProfiles
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.ScoringProfile[]
  spec.java:
  - uid: com.azure.search.documents.indexes.models.ScoringProfile
    name: ScoringProfile
    fullName: com.azure.search.documents.indexes.models.ScoringProfile
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles*
  name: setScoringProfiles
  nameWithType: SearchIndex.setScoringProfiles
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchIndex.getDefaultScoringProfile*
  name: getDefaultScoringProfile
  nameWithType: SearchIndex.getDefaultScoringProfile
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getDefaultScoringProfile
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchIndex.setDefaultScoringProfile*
  name: setDefaultScoringProfile
  nameWithType: SearchIndex.setDefaultScoringProfile
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setDefaultScoringProfile
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.CorsOptions
  name: CorsOptions
  nameWithType: CorsOptions
  fullName: com.azure.search.documents.indexes.models.CorsOptions
- uid: com.azure.search.documents.indexes.models.SearchIndex.getCorsOptions*
  name: getCorsOptions
  nameWithType: SearchIndex.getCorsOptions
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getCorsOptions
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchIndex.setCorsOptions*
  name: setCorsOptions
  nameWithType: SearchIndex.setCorsOptions
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setCorsOptions
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<com.azure.search.documents.indexes.models.SearchSuggester>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchSuggester
    name: SearchSuggester
    fullName: com.azure.search.documents.indexes.models.SearchSuggester
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.SearchIndex.getSuggesters*
  name: getSuggesters
  nameWithType: SearchIndex.getSuggesters
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getSuggesters
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchSuggester[]
  spec.java:
  - uid: com.azure.search.documents.indexes.models.SearchSuggester
    name: SearchSuggester
    fullName: com.azure.search.documents.indexes.models.SearchSuggester
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.SearchIndex.setSuggesters*
  name: setSuggesters
  nameWithType: SearchIndex.setSuggesters
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setSuggesters
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<com.azure.search.documents.indexes.models.LexicalAnalyzer>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.LexicalAnalyzer
    name: LexicalAnalyzer
    fullName: com.azure.search.documents.indexes.models.LexicalAnalyzer
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.SearchIndex.getAnalyzers*
  name: getAnalyzers
  nameWithType: SearchIndex.getAnalyzers
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getAnalyzers
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.LexicalAnalyzer[]
  spec.java:
  - uid: com.azure.search.documents.indexes.models.LexicalAnalyzer
    name: LexicalAnalyzer
    fullName: com.azure.search.documents.indexes.models.LexicalAnalyzer
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers*
  name: setAnalyzers
  nameWithType: SearchIndex.setAnalyzers
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<com.azure.search.documents.indexes.models.LexicalTokenizer>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.LexicalTokenizer
    name: LexicalTokenizer
    fullName: com.azure.search.documents.indexes.models.LexicalTokenizer
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.SearchIndex.getTokenizers*
  name: getTokenizers
  nameWithType: SearchIndex.getTokenizers
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getTokenizers
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.LexicalTokenizer[]
  spec.java:
  - uid: com.azure.search.documents.indexes.models.LexicalTokenizer
    name: LexicalTokenizer
    fullName: com.azure.search.documents.indexes.models.LexicalTokenizer
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.SearchIndex.setTokenizers*
  name: setTokenizers
  nameWithType: SearchIndex.setTokenizers
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setTokenizers
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<com.azure.search.documents.indexes.models.TokenFilter>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.TokenFilter
    name: TokenFilter
    fullName: com.azure.search.documents.indexes.models.TokenFilter
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.SearchIndex.getTokenFilters*
  name: getTokenFilters
  nameWithType: SearchIndex.getTokenFilters
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getTokenFilters
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.TokenFilter[]
  spec.java:
  - uid: com.azure.search.documents.indexes.models.TokenFilter
    name: TokenFilter
    fullName: com.azure.search.documents.indexes.models.TokenFilter
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters*
  name: setTokenFilters
  nameWithType: SearchIndex.setTokenFilters
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<com.azure.search.documents.indexes.models.CharFilter>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.CharFilter
    name: CharFilter
    fullName: com.azure.search.documents.indexes.models.CharFilter
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.SearchIndex.getCharFilters*
  name: getCharFilters
  nameWithType: SearchIndex.getCharFilters
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getCharFilters
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.CharFilter[]
  spec.java:
  - uid: com.azure.search.documents.indexes.models.CharFilter
    name: CharFilter
    fullName: com.azure.search.documents.indexes.models.CharFilter
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.SearchIndex.setCharFilters*
  name: setCharFilters
  nameWithType: SearchIndex.setCharFilters
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setCharFilters
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchResourceEncryptionKey
  name: SearchResourceEncryptionKey
  nameWithType: SearchResourceEncryptionKey
  fullName: com.azure.search.documents.indexes.models.SearchResourceEncryptionKey
- uid: com.azure.search.documents.indexes.models.SearchIndex.getEncryptionKey*
  name: getEncryptionKey
  nameWithType: SearchIndex.getEncryptionKey
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getEncryptionKey
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchIndex.setEncryptionKey*
  name: setEncryptionKey
  nameWithType: SearchIndex.setEncryptionKey
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setEncryptionKey
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SimilarityAlgorithm
  name: SimilarityAlgorithm
  nameWithType: SimilarityAlgorithm
  fullName: com.azure.search.documents.indexes.models.SimilarityAlgorithm
- uid: com.azure.search.documents.indexes.models.SearchIndex.getSimilarity*
  name: getSimilarity
  nameWithType: SearchIndex.getSimilarity
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getSimilarity
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchIndex.setSimilarity*
  name: setSimilarity
  nameWithType: SearchIndex.setSimilarity
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setSimilarity
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchIndex.getETag*
  name: getETag
  nameWithType: SearchIndex.getETag
  fullName: com.azure.search.documents.indexes.models.SearchIndex.getETag
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchIndex.setETag*
  name: setETag
  nameWithType: SearchIndex.setETag
  fullName: com.azure.search.documents.indexes.models.SearchIndex.setETag
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.search.documents.indexes.models.SearchField
  name: SearchField
  nameWithType: SearchField
  fullName: com.azure.search.documents.indexes.models.SearchField
- uid: com.azure.search.documents.indexes.models.ScoringProfile
  name: ScoringProfile
  nameWithType: ScoringProfile
  fullName: com.azure.search.documents.indexes.models.ScoringProfile
- uid: com.azure.search.documents.indexes.models.SearchSuggester
  name: SearchSuggester
  nameWithType: SearchSuggester
  fullName: com.azure.search.documents.indexes.models.SearchSuggester
- uid: com.azure.search.documents.indexes.models.LexicalAnalyzer
  name: LexicalAnalyzer
  nameWithType: LexicalAnalyzer
  fullName: com.azure.search.documents.indexes.models.LexicalAnalyzer
- uid: com.azure.search.documents.indexes.models.LexicalTokenizer
  name: LexicalTokenizer
  nameWithType: LexicalTokenizer
  fullName: com.azure.search.documents.indexes.models.LexicalTokenizer
- uid: com.azure.search.documents.indexes.models.TokenFilter
  name: TokenFilter
  nameWithType: TokenFilter
  fullName: com.azure.search.documents.indexes.models.TokenFilter
- uid: com.azure.search.documents.indexes.models.CharFilter
  name: CharFilter
  nameWithType: CharFilter
  fullName: com.azure.search.documents.indexes.models.CharFilter
