### YamlMime:JavaMember
nameWithType: InboundNATPool.withFrontendPortRangeStart
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.InboundNATPool.withFrontendPortRangeStart(int frontendPortRangeStart)
  name: withFrontendPortRangeStart(int frontendPortRangeStart)
  nameWithType: InboundNATPool.withFrontendPortRangeStart(int frontendPortRangeStart)
  parameters:
  - description: <p>the frontendPortRangeStart value to set </p>
    name: frontendPortRangeStart
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the InboundNATPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.InboundNATPool?alt=com.microsoft.azure.batch.protocol.models.InboundNATPool&text=InboundNATPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400.</p>

    <p></p>
  syntax: public InboundNATPool withFrontendPortRangeStart(int frontendPortRangeStart)
  uid: com.microsoft.azure.batch.protocol.models.InboundNATPool.withFrontendPortRangeStart(int)
uid: com.microsoft.azure.batch.protocol.models.InboundNATPool.withFrontendPortRangeStart*
fullName: com.microsoft.azure.batch.protocol.models.InboundNATPool.withFrontendPortRangeStart(int frontendPortRangeStart)
name: withFrontendPortRangeStart(int frontendPortRangeStart)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
