### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.model.AppliableWithTags"
fullName: "com.microsoft.azure.management.network.model.AppliableWithTags<T>"
name: "AppliableWithTags<T>"
nameWithType: "AppliableWithTags<T>"
summary: "The base interface for all template interfaces that support update tags operations."
syntax: "public interface AppliableWithTags<T> extends UpdatableWithTags.UpdateWithTags<T>"
methods:
- uid: "com.microsoft.azure.management.network.model.AppliableWithTags.applyTags()"
  fullName: "com.microsoft.azure.management.network.model.AppliableWithTags<T>.applyTags()"
  name: "applyTags()"
  nameWithType: "AppliableWithTags<T>.applyTags()"
  summary: "Execute the update request."
  modifiers:
  - "abstract"
  syntax: "public abstract T applyTags()"
  desc: "Execute the update request."
  returns:
    description: "the updated resource"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.model.AppliableWithTags.applyTagsAsync()"
  fullName: "com.microsoft.azure.management.network.model.AppliableWithTags<T>.applyTagsAsync()"
  name: "applyTagsAsync()"
  nameWithType: "AppliableWithTags<T>.applyTagsAsync()"
  summary: "Execute the update request asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<T> applyTagsAsync()"
  desc: "Execute the update request asynchronously."
  returns:
    description: "the handle to the REST call"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.model.AppliableWithTags.applyTagsAsync(com.microsoft.rest.ServiceCallback<T>)"
  fullName: "com.microsoft.azure.management.network.model.AppliableWithTags<T>.applyTagsAsync(ServiceCallback<T> callback)"
  name: "applyTagsAsync(ServiceCallback<T> callback)"
  nameWithType: "AppliableWithTags<T>.applyTagsAsync(ServiceCallback<T> callback)"
  summary: "Execute the update request asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the callback for success and failure"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<T> applyTagsAsync(ServiceCallback<T> callback)"
  desc: "Execute the update request asynchronously."
  returns:
    description: "the handle to the REST call"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the type of the resource returned from the update."
  name: "T"
desc: "The base interface for all template interfaces that support update tags operations."
implements:
- "<xref href=\"com.microsoft.azure.management.network.model.UpdatableWithTags.UpdateWithTags?alt=com.microsoft.azure.management.network.model.UpdatableWithTags.UpdateWithTags&text=UpdateWithTags\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.network.model"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
