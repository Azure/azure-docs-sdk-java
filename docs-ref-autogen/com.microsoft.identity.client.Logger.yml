### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.identity.client.Logger.getInstance()
- com.microsoft.identity.client.Logger.setEnableLogcatLog(final boolean)
- com.microsoft.identity.client.Logger.setEnablePII(final boolean)
- com.microsoft.identity.client.Logger.setExternalLogger(final ILoggerCallback)
- com.microsoft.identity.client.Logger.setLogLevel(final LogLevel)
nameWithType: Logger
syntax: public class Logger
type: class
uid: com.microsoft.identity.client.Logger
fullName: com.microsoft.identity.client.Logger
name: Logger
package: com.microsoft.identity.client
summary: >-
  <p>Override public void log(String tag, Logger.LogLevel logLevel, String message, boolean containsPII) { } });   Loglevel can be specified at <xref uid="com.microsoft.identity.client.Logger.LogLevel.ERROR" data-throw-if-not-resolved="false">LogLevel#ERROR</xref>, <xref uid="com.microsoft.identity.client.Logger.LogLevel.WARNING" data-throw-if-not-resolved="false">LogLevel#WARNING</xref>, <xref uid="com.microsoft.identity.client.Logger.LogLevel.INFO" data-throw-if-not-resolved="false">LogLevel#INFO</xref> and <xref uid="com.microsoft.identity.client.Logger.LogLevel.VERBOSE" data-throw-if-not-resolved="false">LogLevel#VERBOSE</xref>. The sdk enables the verbose level logging by default, to set different level logging: <pre><code>Logger.getInstance().setLogLevel(Loglevel)

      </code></pre> By default, the sdk doesn't send any log messages that contain PII (personal identifiable information) info. To enable PII logging: <pre><code>Logger.getInstance().setEnablePII(true);

      </code></pre></p>
metadata: {}
