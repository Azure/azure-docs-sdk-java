### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client.Logger
  id: Logger
  parent: com.microsoft.identity.client
  children:
  - com.microsoft.identity.client.Logger.getInstance()
  - com.microsoft.identity.client.Logger.setEnableLogcatLog(final boolean)
  - com.microsoft.identity.client.Logger.setEnablePII(final boolean)
  - com.microsoft.identity.client.Logger.setExternalLogger(final ILoggerCallback)
  - com.microsoft.identity.client.Logger.setLogLevel(final LogLevel)
  href: com.microsoft.identity.client.Logger.yml
  langs:
  - java
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.identity.client.Logger
  type: Class
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/Logger.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 62
  package: com.microsoft.identity.client
  summary: "<p>Override public void log(String tag, Logger.LogLevel logLevel, String message, boolean containsPII) { } });   Loglevel can be specified at <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.ERROR\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#ERROR\"></xref>, <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.WARNING\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#WARNING\"></xref>, <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.INFO\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#INFO\"></xref> and <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.VERBOSE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#VERBOSE\"></xref>. The sdk enables the verbose level logging by default, to set different level logging: <pre><code>Logger.getInstance().setLogLevel(Loglevel)\r\n    </code></pre> By default, the sdk doesn't send any log messages that contain PII (personal identifiable information) info. To enable PII logging: <pre><code>Logger.getInstance().setEnablePII(true);\r\n    </code></pre></p>"
  syntax: &o1
    content: public class Logger
  inheritance:
  - java.lang.Object
- uid: com.microsoft.identity.client.Logger.getInstance()
  id: getInstance()
  parent: com.microsoft.identity.client.Logger
  href: com.microsoft.identity.client.Logger.yml
  langs:
  - java
  name: getInstance()
  nameWithType: Logger.getInstance()
  fullName: com.microsoft.identity.client.Logger.getInstance()
  overload: com.microsoft.identity.client.Logger.getInstance*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 70
  package: com.microsoft.identity.client
  syntax:
    content: public static Logger getInstance()
    return:
      type: com.microsoft.identity.client.Logger
      description: <p>The single instance of <xref uid="com.microsoft.identity.client.Logger" data-throw-if-not-resolved="false" data-raw-source="Logger"></xref>. </p>
- uid: com.microsoft.identity.client.Logger.setEnableLogcatLog(final boolean)
  id: setEnableLogcatLog(final boolean)
  parent: com.microsoft.identity.client.Logger
  href: com.microsoft.identity.client.Logger.yml
  langs:
  - java
  name: setEnableLogcatLog(final boolean enableLogcatLog)
  nameWithType: Logger.setEnableLogcatLog(final boolean enableLogcatLog)
  fullName: com.microsoft.identity.client.Logger.setEnableLogcatLog(final boolean enableLogcatLog)
  overload: com.microsoft.identity.client.Logger.setEnableLogcatLog*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 182
  package: com.microsoft.identity.client
  summary: "<p>Enable/Disable the Android logcat logging. By default, the sdk enables it.</p>\r\n<p></p>"
  syntax:
    content: public void setEnableLogcatLog(final boolean enableLogcatLog)
    parameters:
    - id: enableLogcatLog
      type: 4dda0764
      description: <p>True if enabling the logcat logging, false otherwise. </p>
- uid: com.microsoft.identity.client.Logger.setEnablePII(final boolean)
  id: setEnablePII(final boolean)
  parent: com.microsoft.identity.client.Logger
  href: com.microsoft.identity.client.Logger.yml
  langs:
  - java
  name: setEnablePII(final boolean enablePII)
  nameWithType: Logger.setEnablePII(final boolean enablePII)
  fullName: com.microsoft.identity.client.Logger.setEnablePII(final boolean enablePII)
  overload: com.microsoft.identity.client.Logger.setEnablePII*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 192
  package: com.microsoft.identity.client
  summary: "<p>Enable log message with PII (personal identifiable information) info. By default, MSAL doesn't log any PII.</p>\r\n<p></p>"
  syntax:
    content: public void setEnablePII(final boolean enablePII)
    parameters:
    - id: enablePII
      type: 4dda0764
      description: <p>True if enabling PII info to be logged, false otherwise. </p>
- uid: com.microsoft.identity.client.Logger.setExternalLogger(final ILoggerCallback)
  id: setExternalLogger(final ILoggerCallback)
  parent: com.microsoft.identity.client.Logger
  href: com.microsoft.identity.client.Logger.yml
  langs:
  - java
  name: setExternalLogger(final ILoggerCallback externalLogger)
  nameWithType: Logger.setExternalLogger(final ILoggerCallback externalLogger)
  fullName: com.microsoft.identity.client.Logger.setExternalLogger(final ILoggerCallback externalLogger)
  overload: com.microsoft.identity.client.Logger.setExternalLogger*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 135
  package: com.microsoft.identity.client
  summary: "<p>Set the custom logger. Configures external logging to configure a callback that the sdk will use to pass each log message. Overriding the logger callback is not allowed.</p>\r\n<p></p>"
  syntax:
    content: public synchronized void setExternalLogger(final ILoggerCallback externalLogger)
    parameters:
    - id: externalLogger
      type: 93de0ef9com.microsoft.identity.client.ILoggerCallback
      description: <p>The reference to the <xref uid="com.microsoft.identity.client.ILoggerCallback" data-throw-if-not-resolved="false" data-raw-source="ILoggerCallback"></xref> that can output the logs to the designated places. </p>
    return:
      type: 5c0b90ca
  exceptions:
  - type: 12fe80de
    description: <p>if external logger is already set, and the caller is trying to set it again. </p>
- uid: com.microsoft.identity.client.Logger.setLogLevel(final LogLevel)
  id: setLogLevel(final LogLevel)
  parent: com.microsoft.identity.client.Logger
  href: com.microsoft.identity.client.Logger.yml
  langs:
  - java
  name: setLogLevel(final LogLevel logLevel)
  nameWithType: Logger.setLogLevel(final LogLevel logLevel)
  fullName: com.microsoft.identity.client.Logger.setLogLevel(final LogLevel logLevel)
  overload: com.microsoft.identity.client.Logger.setLogLevel*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 101
  package: com.microsoft.identity.client
  summary: "<p>Set the log level for diagnostic purpose. By default, the sdk enables the verbose level logging.</p>\r\n<p></p>"
  syntax:
    content: public void setLogLevel(final LogLevel logLevel)
    parameters:
    - id: logLevel
      type: 93de0ef9com.microsoft.identity.client.Logger.LogLevel
      description: <p>The <xref uid="com.microsoft.identity.client.Logger.LogLevel" data-throw-if-not-resolved="false" data-raw-source="LogLevel"></xref> to be enabled for the diagnostic logging. </p>
references:
- uid: com.microsoft.identity.client.Logger.getInstance*
  name: getInstance
  nameWithType: Logger.getInstance
  fullName: com.microsoft.identity.client.Logger.getInstance
  package: com.microsoft.identity.client
- uid: 93de0ef9com.microsoft.identity.client.Logger.LogLevel
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.identity.client.Logger.LogLevel
    name: Logger.LogLevel
    fullName: com.microsoft.identity.client.Logger.LogLevel
    href: com.microsoft.identity.client.Logger.LogLevel.yml
- uid: com.microsoft.identity.client.Logger.setLogLevel*
  name: setLogLevel
  nameWithType: Logger.setLogLevel
  fullName: com.microsoft.identity.client.Logger.setLogLevel
  package: com.microsoft.identity.client
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: 93de0ef9com.microsoft.identity.client.ILoggerCallback
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.identity.client.ILoggerCallback
    name: ILoggerCallback
    fullName: com.microsoft.identity.client.ILoggerCallback
    href: com.microsoft.identity.client.ILoggerCallback.yml
- uid: 5c0b90ca
  spec.java:
  - name: synchronized void
    fullName: synchronized void
- uid: com.microsoft.identity.client.Logger.setExternalLogger*
  name: setExternalLogger
  nameWithType: Logger.setExternalLogger
  fullName: com.microsoft.identity.client.Logger.setExternalLogger
  package: com.microsoft.identity.client
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.identity.client.Logger.setEnableLogcatLog*
  name: setEnableLogcatLog
  nameWithType: Logger.setEnableLogcatLog
  fullName: com.microsoft.identity.client.Logger.setEnableLogcatLog
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.Logger.setEnablePII*
  name: setEnablePII
  nameWithType: Logger.setEnablePII
  fullName: com.microsoft.identity.client.Logger.setEnablePII
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.Logger
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.Logger.yml
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.identity.client.Logger
  type: Class
  summary: "<p>Override public void log(String tag, Logger.LogLevel logLevel, String message, boolean containsPII) { } });   Loglevel can be specified at <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.ERROR\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#ERROR\"></xref>, <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.WARNING\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#WARNING\"></xref>, <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.INFO\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#INFO\"></xref> and <xref uid=\"com.microsoft.identity.client.Logger.LogLevel.VERBOSE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel#VERBOSE\"></xref>. The sdk enables the verbose level logging by default, to set different level logging: <pre><code>Logger.getInstance().setLogLevel(Loglevel)\r\n    </code></pre> By default, the sdk doesn't send any log messages that contain PII (personal identifiable information) info. To enable PII logging: <pre><code>Logger.getInstance().setEnablePII(true);\r\n    </code></pre></p>"
  syntax: *o1
- uid: com.microsoft.identity.client.ILoggerCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ILoggerCallback.yml
  name: ILoggerCallback
  nameWithType: ILoggerCallback
  fullName: com.microsoft.identity.client.ILoggerCallback
  type: Interface
  summary: "<p>Interface for apps to configure the external logging and implement the callback to designate the output of the log messages. </p>"
  syntax:
    content: public interface ILoggerCallback
- uid: com.microsoft.identity.client.Logger.LogLevel
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.Logger.LogLevel.yml
  name: Logger.LogLevel
  nameWithType: Logger.LogLevel
  fullName: com.microsoft.identity.client.Logger.LogLevel
  type: Enum
  summary: "<p>Enum class for LogLevel that the sdk recognizes. </p>"
  syntax:
    content: public enum LogLevel
- uid: com.microsoft.identity.client.Logger.LogLevel.ERROR
  parent: com.microsoft.identity.client.Logger.LogLevel
  href: com.microsoft.identity.client.Logger.LogLevel.yml
  name: ERROR
  nameWithType: Logger.LogLevel.ERROR
  fullName: com.microsoft.identity.client.Logger.LogLevel.ERROR
  type: Field
  summary: "<p>Error level logging. </p>"
  syntax:
    content: public ERROR
- uid: com.microsoft.identity.client.Logger.LogLevel.WARNING
  parent: com.microsoft.identity.client.Logger.LogLevel
  href: com.microsoft.identity.client.Logger.LogLevel.yml
  name: WARNING
  nameWithType: Logger.LogLevel.WARNING
  fullName: com.microsoft.identity.client.Logger.LogLevel.WARNING
  type: Field
  summary: "<p>Warning level logging. </p>"
  syntax:
    content: public WARNING
- uid: com.microsoft.identity.client.Logger.LogLevel.INFO
  parent: com.microsoft.identity.client.Logger.LogLevel
  href: com.microsoft.identity.client.Logger.LogLevel.yml
  name: INFO
  nameWithType: Logger.LogLevel.INFO
  fullName: com.microsoft.identity.client.Logger.LogLevel.INFO
  type: Field
  summary: "<p>Info level logging. </p>"
  syntax:
    content: public INFO
- uid: com.microsoft.identity.client.Logger.LogLevel.VERBOSE
  parent: com.microsoft.identity.client.Logger.LogLevel
  href: com.microsoft.identity.client.Logger.LogLevel.yml
  name: VERBOSE
  nameWithType: Logger.LogLevel.VERBOSE
  fullName: com.microsoft.identity.client.Logger.LogLevel.VERBOSE
  type: Field
  summary: "<p>Verbose level logging. </p>"
  syntax:
    content: public VERBOSE
