### YamlMime:JavaType
uid: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost"
fullName: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost"
name: "LabServicesSkuCost"
nameWithType: "LabServicesSkuCost"
summary: "The array of costs of a lab services SKU."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **LabServicesSkuCost**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.labservices.models.LabServicesSkuCost?alt=com.azure.resourcemanager.labservices.models.LabServicesSkuCost&text=LabServicesSkuCost\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.LabServicesSkuCost()"
  fullName: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.LabServicesSkuCost()"
  name: "LabServicesSkuCost()"
  nameWithType: "LabServicesSkuCost.LabServicesSkuCost()"
  summary: "Creates an instance of Lab<wbr>Services<wbr>Sku<wbr>Cost class."
  syntax: "public LabServicesSkuCost()"
  desc: "Creates an instance of LabServicesSkuCost class."
methods:
- uid: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.extendedUnit()"
  fullName: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.extendedUnit()"
  name: "extendedUnit()"
  nameWithType: "LabServicesSkuCost.extendedUnit()"
  summary: "Get the extended<wbr>Unit property: The extended unit."
  syntax: "public String extendedUnit()"
  desc: "Get the extendedUnit property: The extended unit."
  returns:
    description: "the extendedUnit value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "LabServicesSkuCost.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Lab<wbr>Services<wbr>Sku<wbr>Cost from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static LabServicesSkuCost fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the LabServicesSkuCost."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of LabServicesSkuCost from the JsonReader."
  returns:
    description: "An instance of LabServicesSkuCost if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.LabServicesSkuCost?alt=com.azure.resourcemanager.labservices.models.LabServicesSkuCost&text=LabServicesSkuCost\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.meterId()"
  fullName: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.meterId()"
  name: "meterId()"
  nameWithType: "LabServicesSkuCost.meterId()"
  summary: "Get the meter<wbr>Id property: The meter id."
  syntax: "public String meterId()"
  desc: "Get the meterId property: The meter id."
  returns:
    description: "the meterId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.quantity()"
  fullName: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.quantity()"
  name: "quantity()"
  nameWithType: "LabServicesSkuCost.quantity()"
  summary: "Get the quantity property: The quantity of units charged."
  syntax: "public Float quantity()"
  desc: "Get the quantity property: The quantity of units charged."
  returns:
    description: "the quantity value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "LabServicesSkuCost.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.validate()"
  fullName: "com.azure.resourcemanager.labservices.models.LabServicesSkuCost.validate()"
  name: "validate()"
  nameWithType: "LabServicesSkuCost.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
type: "class"
desc: "The array of costs of a lab services SKU."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.labservices.models.LabServicesSkuCost?alt=com.azure.resourcemanager.labservices.models.LabServicesSkuCost&text=LabServicesSkuCost\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.labservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-labservices:1.0.0
