### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService"
  id: "BlockBlobsService"
  parent: "com.azure.storage.blob.implementation"
  children:
  - "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.commitBlockList(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlockLookupList,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.getBlockList(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlockListType,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlock(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlockFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.net.URL,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.upload(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,long,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "BlockBlobsImpl.BlockBlobsService"
  nameWithType: "BlockBlobsImpl.BlockBlobsService"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService"
  type: "Interface"
  package: "com.azure.storage.blob.implementation"
  summary: "The interface defining all the services for AzureBlobStorageBlockBlobs to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface BlockBlobsImpl.BlockBlobsService"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.commitBlockList(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlockLookupList,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "commitBlockList(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlockLookupList,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService"
  langs:
  - "java"
  name: "commitBlockList(String containerName, String blob, String url, Integer timeout, String transactionalContentMD5, String transactionalContentCrc64, Map<String,String> metadata, String leaseId, AccessTier tier, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, BlockLookupList blocks, String version, String requestId, String comp, String cacheControl, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.commitBlockList(String containerName, String blob, String url, Integer timeout, String transactionalContentMD5, String transactionalContentCrc64, Map<String,String> metadata, String leaseId, AccessTier tier, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, BlockLookupList blocks, String version, String requestId, String comp, String cacheControl, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.commitBlockList(String containerName, String blob, String url, Integer timeout, String transactionalContentMD5, String transactionalContentCrc64, Map<String,String> metadata, String leaseId, AccessTier tier, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, BlockLookupList blocks, String version, String requestId, String comp, String cacheControl, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.commitBlockList*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlockBlobsCommitBlockListResponse> commitBlockList(String containerName, String blob, String url, Integer timeout, String transactionalContentMD5, String transactionalContentCrc64, Map<String,String> metadata, String leaseId, AccessTier tier, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, BlockLookupList blocks, String version, String requestId, String comp, String cacheControl, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "transactionalContentMD5"
      type: "java.lang.String"
    - id: "transactionalContentCrc64"
      type: "java.lang.String"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "tier"
      type: "com.azure.storage.blob.models.AccessTier"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "blocks"
      type: "com.azure.storage.blob.models.BlockLookupList"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsCommitBlockListResponse>"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.getBlockList(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlockListType,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getBlockList(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.BlockListType,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService"
  langs:
  - "java"
  name: "getBlockList(String containerName, String blob, String url, String snapshot, BlockListType listType, Integer timeout, String leaseId, String version, String requestId, String comp, Context context)"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.getBlockList(String containerName, String blob, String url, String snapshot, BlockListType listType, Integer timeout, String leaseId, String version, String requestId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.getBlockList(String containerName, String blob, String url, String snapshot, BlockListType listType, Integer timeout, String leaseId, String version, String requestId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.getBlockList*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlockBlobsGetBlockListResponse> getBlockList(String containerName, String blob, String url, String snapshot, BlockListType listType, Integer timeout, String leaseId, String version, String requestId, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "snapshot"
      type: "java.lang.String"
    - id: "listType"
      type: "com.azure.storage.blob.models.BlockListType"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsGetBlockListResponse>"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlock(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "stageBlock(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService"
  langs:
  - "java"
  name: "stageBlock(String containerName, String blob, String url, String blockId, long contentLength, String transactionalContentMD5, String transactionalContentCrc64, Flux<ByteBuffer> body, Integer timeout, String leaseId, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.stageBlock(String containerName, String blob, String url, String blockId, long contentLength, String transactionalContentMD5, String transactionalContentCrc64, Flux<ByteBuffer> body, Integer timeout, String leaseId, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlock(String containerName, String blob, String url, String blockId, long contentLength, String transactionalContentMD5, String transactionalContentCrc64, Flux<ByteBuffer> body, Integer timeout, String leaseId, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlock*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlockBlobsStageBlockResponse> stageBlock(String containerName, String blob, String url, String blockId, long contentLength, String transactionalContentMD5, String transactionalContentCrc64, Flux<ByteBuffer> body, Integer timeout, String leaseId, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "blockId"
      type: "java.lang.String"
    - id: "contentLength"
      type: "long"
    - id: "transactionalContentMD5"
      type: "java.lang.String"
    - id: "transactionalContentCrc64"
      type: "java.lang.String"
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsStageBlockResponse>"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlockFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.net.URL,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "stageBlockFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.net.URL,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService"
  langs:
  - "java"
  name: "stageBlockFromURL(String containerName, String blob, String url, String blockId, long contentLength, URL copySource, String sourceRange, String sourceContentMD5, String sourceContentcrc64, Integer timeout, String leaseId, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.stageBlockFromURL(String containerName, String blob, String url, String blockId, long contentLength, URL copySource, String sourceRange, String sourceContentMD5, String sourceContentcrc64, Integer timeout, String leaseId, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlockFromURL(String containerName, String blob, String url, String blockId, long contentLength, URL copySource, String sourceRange, String sourceContentMD5, String sourceContentcrc64, Integer timeout, String leaseId, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlockFromURL*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlockBlobsStageBlockFromURLResponse> stageBlockFromURL(String containerName, String blob, String url, String blockId, long contentLength, URL copySource, String sourceRange, String sourceContentMD5, String sourceContentcrc64, Integer timeout, String leaseId, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "blockId"
      type: "java.lang.String"
    - id: "contentLength"
      type: "long"
    - id: "copySource"
      type: "java.net.URL"
    - id: "sourceRange"
      type: "java.lang.String"
    - id: "sourceContentMD5"
      type: "java.lang.String"
    - id: "sourceContentcrc64"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "sourceIfModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfMatch"
      type: "java.lang.String"
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsStageBlockFromURLResponse>"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.upload(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,long,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "upload(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,long,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService"
  langs:
  - "java"
  name: "upload(String containerName, String blob, String url, Flux<ByteBuffer> body, Integer timeout, String transactionalContentMD5, long contentLength, Map<String,String> metadata, String leaseId, AccessTier tier, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String blobType, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String cacheControl, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.upload(String containerName, String blob, String url, Flux<ByteBuffer> body, Integer timeout, String transactionalContentMD5, long contentLength, Map<String,String> metadata, String leaseId, AccessTier tier, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String blobType, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String cacheControl, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.upload(String containerName, String blob, String url, Flux<ByteBuffer> body, Integer timeout, String transactionalContentMD5, long contentLength, Map<String,String> metadata, String leaseId, AccessTier tier, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String blobType, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String cacheControl, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.upload*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlockBlobsUploadResponse> upload(String containerName, String blob, String url, Flux<ByteBuffer> body, Integer timeout, String transactionalContentMD5, long contentLength, Map<String,String> metadata, String leaseId, AccessTier tier, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String blobType, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String cacheControl, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "transactionalContentMD5"
      type: "java.lang.String"
    - id: "contentLength"
      type: "long"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "tier"
      type: "com.azure.storage.blob.models.AccessTier"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "blobType"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsUploadResponse>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.models.AccessTier"
  name: "AccessTier"
  nameWithType: "AccessTier"
  fullName: "com.azure.storage.blob.models.AccessTier"
- uid: "com.azure.core.util.DateTimeRfc1123"
  spec.java:
  - uid: "com.azure.core.util.DateTimeRfc1123"
    name: "DateTimeRfc1123"
    fullName: "com.azure.core.util.DateTimeRfc1123"
- uid: "com.azure.storage.blob.models.EncryptionAlgorithmType"
  name: "EncryptionAlgorithmType"
  nameWithType: "EncryptionAlgorithmType"
  fullName: "com.azure.storage.blob.models.EncryptionAlgorithmType"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsUploadResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlockBlobsUploadResponse"
    name: "BlockBlobsUploadResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlockBlobsUploadResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.upload*"
  name: "upload"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.upload"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.upload"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsStageBlockResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlockBlobsStageBlockResponse"
    name: "BlockBlobsStageBlockResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlockBlobsStageBlockResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlock*"
  name: "stageBlock"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.stageBlock"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlock"
  package: "com.azure.storage.blob.implementation"
- uid: "java.net.URL"
  spec.java:
  - uid: "java.net.URL"
    name: "URL"
    fullName: "java.net.URL"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsStageBlockFromURLResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlockBlobsStageBlockFromURLResponse"
    name: "BlockBlobsStageBlockFromURLResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlockBlobsStageBlockFromURLResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlockFromURL*"
  name: "stageBlockFromURL"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.stageBlockFromURL"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.stageBlockFromURL"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.BlockLookupList"
  name: "BlockLookupList"
  nameWithType: "BlockLookupList"
  fullName: "com.azure.storage.blob.models.BlockLookupList"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsCommitBlockListResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlockBlobsCommitBlockListResponse"
    name: "BlockBlobsCommitBlockListResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlockBlobsCommitBlockListResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.commitBlockList*"
  name: "commitBlockList"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.commitBlockList"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.commitBlockList"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.BlockListType"
  name: "BlockListType"
  nameWithType: "BlockListType"
  fullName: "com.azure.storage.blob.models.BlockListType"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlockBlobsGetBlockListResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlockBlobsGetBlockListResponse"
    name: "BlockBlobsGetBlockListResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlockBlobsGetBlockListResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.getBlockList*"
  name: "getBlockList"
  nameWithType: "BlockBlobsImpl.BlockBlobsService.getBlockList"
  fullName: "com.azure.storage.blob.implementation.BlockBlobsImpl.BlockBlobsService.getBlockList"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.azure.storage.blob.implementation.models.BlockBlobsUploadResponse"
  name: "BlockBlobsUploadResponse"
  nameWithType: "BlockBlobsUploadResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlockBlobsUploadResponse"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.blob.implementation.models.BlockBlobsStageBlockResponse"
  name: "BlockBlobsStageBlockResponse"
  nameWithType: "BlockBlobsStageBlockResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlockBlobsStageBlockResponse"
- uid: "com.azure.storage.blob.implementation.models.BlockBlobsStageBlockFromURLResponse"
  name: "BlockBlobsStageBlockFromURLResponse"
  nameWithType: "BlockBlobsStageBlockFromURLResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlockBlobsStageBlockFromURLResponse"
- uid: "com.azure.storage.blob.implementation.models.BlockBlobsCommitBlockListResponse"
  name: "BlockBlobsCommitBlockListResponse"
  nameWithType: "BlockBlobsCommitBlockListResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlockBlobsCommitBlockListResponse"
- uid: "com.azure.storage.blob.implementation.models.BlockBlobsGetBlockListResponse"
  name: "BlockBlobsGetBlockListResponse"
  nameWithType: "BlockBlobsGetBlockListResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlockBlobsGetBlockListResponse"
