### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.functions.annotation.EventGridTrigger
  id: EventGridTrigger
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation
  children:
  - com.microsoft.azure.functions.annotation.EventGridTrigger.dataType()
  - com.microsoft.azure.functions.annotation.EventGridTrigger.name()
  langs:
  - java
  name: EventGridTrigger
  nameWithType: EventGridTrigger
  fullName: com.microsoft.azure.functions.annotation.EventGridTrigger
  type: Interface
  package: com.microsoft.azure.functions.annotation
  summary: >-
    Place this on a parameter whose value would come from EventGrid, and causing the method to run when an event is arrived. The parameter type can be one of the following:

     *  Any native Java types such as int, String, byte\[\]
     *  Nullable values using Optional<T>
     *  Any POJO type

    The following example shows a Java function that prints out an event:


    ```java

    @FunctionName("eventGridMonitor")
     public void logEvent(
        @EventGridTrigger(name = "event") String content,
         final ExecutionContext context
     ) {
         context.getLogger().info(content);
     }
    ```
  syntax:
    content: public interface EventGridTrigger implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.microsoft.azure.functions.annotation.EventGridTrigger.dataType()
  id: dataType()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.EventGridTrigger
  langs:
  - java
  name: dataType()
  nameWithType: EventGridTrigger.dataType()
  fullName: com.microsoft.azure.functions.annotation.EventGridTrigger.dataType()
  overload: com.microsoft.azure.functions.annotation.EventGridTrigger.dataType*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: >-
    Defines how Functions runtime should treat the parameter value. Possible values are:

     *  "": get the value as a string, and try to deserialize to actual parameter type like POJO
     *  string: always get the value as a string
     *  binary: get the value as a binary data, and try to deserialize to actual parameter type byte\[\]
  syntax:
    content: public abstract String dataType()
    return:
      type: java.lang.String
      description: The dataType which will be used by the Functions runtime.
- uid: com.microsoft.azure.functions.annotation.EventGridTrigger.name()
  id: name()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.EventGridTrigger
  langs:
  - java
  name: name()
  nameWithType: EventGridTrigger.name()
  fullName: com.microsoft.azure.functions.annotation.EventGridTrigger.name()
  overload: com.microsoft.azure.functions.annotation.EventGridTrigger.name*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: The variable name used in function.json.
  syntax:
    content: public abstract String name()
    return:
      type: java.lang.String
      description: The variable name used in function.json.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.functions.annotation.EventGridTrigger.name*
  name: name
  nameWithType: EventGridTrigger.name
  fullName: com.microsoft.azure.functions.annotation.EventGridTrigger.name
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.EventGridTrigger.dataType*
  name: dataType
  nameWithType: EventGridTrigger.dataType
  fullName: com.microsoft.azure.functions.annotation.EventGridTrigger.dataType
  package: com.microsoft.azure.functions.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
