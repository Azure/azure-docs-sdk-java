### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer"
  id: "EventHubMessageSerializer"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.EventHubMessageSerializer.<T>deserialize(org.apache.qpid.proton.message.Message,java.lang.Class<T>)"
  - "com.azure.messaging.eventhubs.EventHubMessageSerializer.<T>serialize(T)"
  - "com.azure.messaging.eventhubs.EventHubMessageSerializer.EventHubMessageSerializer()"
  - "com.azure.messaging.eventhubs.EventHubMessageSerializer.getSize(org.apache.qpid.proton.message.Message)"
  langs:
  - "java"
  name: "EventHubMessageSerializer"
  nameWithType: "EventHubMessageSerializer"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "Utility class for converting <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> to <xref uid=\"\" data-throw-if-not-resolved=\"false\">Message</xref>."
  syntax:
    content: " class EventHubMessageSerializer implements MessageSerializer"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.amqp.implementation.MessageSerializer"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer.<T>deserialize(org.apache.qpid.proton.message.Message,java.lang.Class<T>)"
  id: "<T>deserialize(org.apache.qpid.proton.message.Message,java.lang.Class<T>)"
  parent: "com.azure.messaging.eventhubs.EventHubMessageSerializer"
  langs:
  - "java"
  name: "<T>deserialize(Message message, Class<T> clazz)"
  nameWithType: "EventHubMessageSerializer.<T>deserialize(Message message, Class<T> clazz)"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer.<T>deserialize(Message message, Class<T> clazz)"
  overload: "com.azure.messaging.eventhubs.EventHubMessageSerializer.deserialize*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public T <T>deserialize(Message message, Class<T> clazz)"
    parameters:
    - id: "message"
      type: "org.apache.qpid.proton.message.Message"
    - id: "clazz"
      type: "java.lang.Class<T>"
    return:
      type: "T"
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer.<T>serialize(T)"
  id: "<T>serialize(T)"
  parent: "com.azure.messaging.eventhubs.EventHubMessageSerializer"
  langs:
  - "java"
  name: "<T>serialize(T object)"
  nameWithType: "EventHubMessageSerializer.<T>serialize(T object)"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer.<T>serialize(T object)"
  overload: "com.azure.messaging.eventhubs.EventHubMessageSerializer.serialize*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates the AMQP message represented by this `object`. Currently, only supports serializing <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>."
  syntax:
    content: "public Message <T>serialize(T object)"
    parameters:
    - id: "object"
      type: "T"
      description: "Concrete object to deserialize."
    return:
      type: "org.apache.qpid.proton.message.Message"
      description: "A new AMQP message for this <code>object</code>."
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer.EventHubMessageSerializer()"
  id: "EventHubMessageSerializer()"
  parent: "com.azure.messaging.eventhubs.EventHubMessageSerializer"
  langs:
  - "java"
  name: "EventHubMessageSerializer()"
  nameWithType: "EventHubMessageSerializer.EventHubMessageSerializer()"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer.EventHubMessageSerializer()"
  overload: "com.azure.messaging.eventhubs.EventHubMessageSerializer.EventHubMessageSerializer*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: " EventHubMessageSerializer()"
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer.getSize(org.apache.qpid.proton.message.Message)"
  id: "getSize(org.apache.qpid.proton.message.Message)"
  parent: "com.azure.messaging.eventhubs.EventHubMessageSerializer"
  langs:
  - "java"
  name: "getSize(Message amqpMessage)"
  nameWithType: "EventHubMessageSerializer.getSize(Message amqpMessage)"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer.getSize(Message amqpMessage)"
  overload: "com.azure.messaging.eventhubs.EventHubMessageSerializer.getSize*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Gets the serialized size of the AMQP message."
  syntax:
    content: "public int getSize(Message amqpMessage)"
    parameters:
    - id: "amqpMessage"
      type: "org.apache.qpid.proton.message.Message"
    return:
      type: "int"
references:
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer.EventHubMessageSerializer*"
  name: "EventHubMessageSerializer"
  nameWithType: "EventHubMessageSerializer.EventHubMessageSerializer"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer.EventHubMessageSerializer"
  package: "com.azure.messaging.eventhubs"
- uid: "org.apache.qpid.proton.message.Message"
  spec.java:
  - uid: "org.apache.qpid.proton.message.Message"
    name: "Message"
    fullName: "org.apache.qpid.proton.message.Message"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer.getSize*"
  name: "getSize"
  nameWithType: "EventHubMessageSerializer.getSize"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer.getSize"
  package: "com.azure.messaging.eventhubs"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer.serialize*"
  name: "<T>serialize"
  nameWithType: "EventHubMessageSerializer.<T>serialize"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer.<T>serialize"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.EventHubMessageSerializer.deserialize*"
  name: "<T>deserialize"
  nameWithType: "EventHubMessageSerializer.<T>deserialize"
  fullName: "com.azure.messaging.eventhubs.EventHubMessageSerializer.<T>deserialize"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.core.amqp.implementation.MessageSerializer"
  name: "MessageSerializer"
  nameWithType: "MessageSerializer"
  fullName: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
