### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  id: _computer_vision
  parent: com.microsoft.azure.cognitiveservices.vision.computervision
  children:
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImage(String,AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomain()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImage(String,DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageAsync(String,DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnail()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.getTextOperationResult(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.getTextOperationResultAsync(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.listModels()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.listModelsAsync()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedText()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeText(String,TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextAsync(String,TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextInStream(byte [],TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextInStreamAsync(byte [],TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImage(String,TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageAsync(String,TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: ComputerVision
  nameWithType: ComputerVision
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  type: Interface
  source:
    remote: &o0
      path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 43
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>An instance of this class provides access to all the operations defined in ComputerVision. </p>"
  syntax:
    content: public interface ComputerVision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImage()
  id: analyzeImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImage()
  nameWithType: ComputerVision.analyzeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1427
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageDefinitionStages.WithUrl analyzeImage()
    return:
      type: 8c7df68d
      description: <p>the first stage of the analyzeImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImage(String,AnalyzeImageOptionalParameter)
  id: analyzeImage(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVision.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1403
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public ImageAnalysis analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._analyze_image_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysis
      description: <p>the ImageAnalysis object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  id: analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVision.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1417
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._analyze_image_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysisa08ddfce
      description: <p>the observable to the ImageAnalysis object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomain()
  id: analyzeImageByDomain()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageByDomain()
  nameWithType: ComputerVision.analyzeImageByDomain()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomain*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 858
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel analyzeImageByDomain()
    return:
      type: 45c47c42
      description: <p>the first stage of the analyzeImageByDomain call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomain*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 829
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public DomainModelResults analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._an0a96108eee688240be2dcc8dbc18a1d4
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_results
      description: <p>the DomainModelResults object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 846
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._an0a96108eee688240be2dcc8dbc18a1d4
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_resultsa08ddfce
      description: <p>the observable to the DomainModelResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStream()
  id: analyzeImageByDomainInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageByDomainInStream()
  nameWithType: ComputerVision.analyzeImageByDomainInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 117
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel analyzeImageByDomainInStream()
    return:
      type: 3609dfc8
      description: <p>the first stage of the analyzeImageByDomainInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 88
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public DomainModelResults analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ana65eb0b8c2ae14fe6b258bf38237e791
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_results
      description: <p>the DomainModelResults object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 105
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ana65eb0b8c2ae14fe6b258bf38237e791
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_resultsa08ddfce
      description: <p>the observable to the DomainModelResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStream()
  id: analyzeImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageInStream()
  nameWithType: ComputerVision.analyzeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 677
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage analyzeImageInStream()
    return:
      type: 9ad9f102
      description: <p>the first stage of the analyzeImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 659
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public ImageAnalysis analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._anea8a9961fccae10aeb73399294e24001
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysis
      description: <p>the ImageAnalysis object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 670
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._anea8a9961fccae10aeb73399294e24001
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysisa08ddfce
      description: <p>the observable to the ImageAnalysis object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImage()
  id: describeImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: describeImage()
  nameWithType: ComputerVision.describeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1077
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionDescribeImageDefinitionStages.WithUrl describeImage()
    return:
      type: a37ccca7
      description: <p>the first stage of the describeImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImage(String,DescribeImageOptionalParameter)
  id: describeImage(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVision.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1049
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ImageDescription describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._describe_image_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_description
      description: <p>the ImageDescription object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageAsync(String,DescribeImageOptionalParameter)
  id: describeImageAsync(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVision.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1065
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageDescription> describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._describe_image_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._image_descriptiona08ddfce
      description: <p>the observable to the ImageDescription object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStream()
  id: describeImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: describeImageInStream()
  nameWithType: ComputerVision.describeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 336
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionDescribeImageInStreamDefinitionStages.WithImage describeImageInStream()
    return:
      type: "70169043"
      description: <p>the first stage of the describeImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  id: describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 308
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ImageDescription describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._de9c5bd2563bc6989cc836abe41b4bab75
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_description
      description: <p>the ImageDescription object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  id: describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 324
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageDescription> describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._de9c5bd2563bc6989cc836abe41b4bab75
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._image_descriptiona08ddfce
      description: <p>the observable to the ImageDescription object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnail()
  id: generateThumbnail()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: generateThumbnail()
  nameWithType: ComputerVision.generateThumbnail()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnail*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1306
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionGenerateThumbnailDefinitionStages.WithWidth generateThumbnail()
    return:
      type: ffe38203
      description: <p>the first stage of the generateThumbnail call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  id: generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVision.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnail*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1278
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public InputStream generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._gecebea7d588ea99033b6d2bfffd25caa6
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  id: generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1295
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<InputStream> generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._gecebea7d588ea99033b6d2bfffd25caa6
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStream()
  id: generateThumbnailInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: generateThumbnailInStream()
  nameWithType: ComputerVision.generateThumbnailInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 565
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth generateThumbnailInStream()
    return:
      type: 012fc9a6
      description: <p>the first stage of the generateThumbnailInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 537
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public InputStream generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ge156acd5f4d918373322dba517894c033
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 554
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<InputStream> generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ge156acd5f4d918373322dba517894c033
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.getTextOperationResult(String)
  id: getTextOperationResult(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: getTextOperationResult(String operationId)
  nameWithType: ComputerVision.getTextOperationResult(String operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResult(String operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.getTextOperationResult*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 772
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This interface is used for getting text operation result. The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</p>\r\n<p></p>"
  syntax:
    content: public TextOperationResult getTextOperationResult(String operationId)
    parameters:
    - id: operationId
      type: "26831127"
      description: <p>Id of the text operation returned in the response of the 'Recognize Text'. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_operation_result
      description: <p>the TextOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.getTextOperationResultAsync(String)
  id: getTextOperationResultAsync(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: getTextOperationResultAsync(String operationId)
  nameWithType: ComputerVision.getTextOperationResultAsync(String operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResultAsync(String operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.getTextOperationResultAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 782
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This interface is used for getting text operation result. The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TextOperationResult> getTextOperationResultAsync(String operationId)
    parameters:
    - id: operationId
      type: "26831127"
      description: <p>Id of the text operation returned in the response of the 'Recognize Text'. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._text_operation_resulta08ddfce
      description: <p>the observable to the TextOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.listModels()
  id: listModels()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: listModels()
  nameWithType: ComputerVision.listModels()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.listModels*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1522
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API only supports one domain-specific model: a celebrity recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ListModelsResult listModels()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._list_models_result
      description: <p>the ListModelsResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.listModelsAsync()
  id: listModelsAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: listModelsAsync()
  nameWithType: ComputerVision.listModelsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.listModelsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1533
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API only supports one domain-specific model: a celebrity recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ListModelsResult> listModelsAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._list_models_resulta08ddfce
      description: <p>the observable to the ListModelsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedText()
  id: recognizePrintedText()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizePrintedText()
  nameWithType: ComputerVision.recognizePrintedText()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1187
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation recognizePrintedText()
    return:
      type: f16201ec
      description: <p>the first stage of the recognizePrintedText call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  id: recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1161
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public OcrResult recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._reb61292139f8bf7eafc7c5b5d756f7167
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_result
      description: <p>the OcrResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  id: recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 1177
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._reb61292139f8bf7eafc7c5b5d756f7167
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_resulta08ddfce
      description: <p>the observable to the OcrResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStream()
  id: recognizePrintedTextInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizePrintedTextInStream()
  nameWithType: ComputerVision.recognizePrintedTextInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 446
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation recognizePrintedTextInStream()
    return:
      type: 02bbc546
      description: <p>the first stage of the recognizePrintedTextInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 420
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public OcrResult recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ree1820d0a8f28041f2ac3c23f0ca90e0a
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_result
      description: <p>the OcrResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 436
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ree1820d0a8f28041f2ac3c23f0ca90e0a
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_resulta08ddfce
      description: <p>the observable to the OcrResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeText(String,TextRecognitionMode)
  id: recognizeText(String,TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizeText(String url, TextRecognitionMode mode)
  nameWithType: ComputerVision.recognizeText(String url, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeText(String url, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 797
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public void recognizeText(String url, TextRecognitionMode mode)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_recognition_mode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed'. </p>"
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextAsync(String,TextRecognitionMode)
  id: recognizeTextAsync(String,TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizeTextAsync(String url, TextRecognitionMode mode)
  nameWithType: ComputerVision.recognizeTextAsync(String url, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextAsync(String url, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 809
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> recognizeTextAsync(String url, TextRecognitionMode mode)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_recognition_mode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed'. </p>"
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextInStream(byte [],TextRecognitionMode)
  id: recognizeTextInStream(byte [],TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  nameWithType: ComputerVision.recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 56
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public void recognizeTextInStream(byte[] image, TextRecognitionMode mode)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_recognition_mode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed'. </p>"
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextInStreamAsync(byte [],TextRecognitionMode)
  id: recognizeTextInStreamAsync(byte [],TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  nameWithType: ComputerVision.recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 68
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_recognition_mode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed'. </p>"
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImage()
  id: tagImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: tagImage()
  nameWithType: ComputerVision.tagImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 972
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionTagImageDefinitionStages.WithUrl tagImage()
    return:
      type: a1018f3d
      description: <p>the first stage of the tagImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImage(String,TagImageOptionalParameter)
  id: tagImage(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 946
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public TagResult tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_image_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_result
      description: <p>the TagResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageAsync(String,TagImageOptionalParameter)
  id: tagImageAsync(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVision.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 961
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TagResult> tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_image_optional_parameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_resulta08ddfce
      description: <p>the observable to the TagResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStream()
  id: tagImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: tagImageInStream()
  nameWithType: ComputerVision.tagImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 231
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionTagImageInStreamDefinitionStages.WithImage tagImageInStream()
    return:
      type: 4a4d316f
      description: <p>the first stage of the tagImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  id: tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVision.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 205
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public TagResult tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ta90aa6ba72502bed1760c8403dc734d5f
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_result
      description: <p>the TagResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  id: tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision
  href: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.yml
  langs:
  - java
  name: tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVision.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/ComputerVision.java
    startLine: 220
  package: com.microsoft.azure.cognitiveservices.vision.computervision
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TagResult> tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models._ta90aa6ba72502bed1760c8403dc734d5f
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_resulta08ddfce
      description: <p>the observable to the TagResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 16da869d
  spec.java:
  - name: ComputerVisionErrorException
    fullName: ComputerVisionErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextInStream*
  name: recognizeTextInStream
  nameWithType: ComputerVision.recognizeTextInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextInStreamAsync*
  name: recognizeTextInStreamAsync
  nameWithType: ComputerVision.recognizeTextInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStream*
  name: analyzeImageByDomainInStream
  nameWithType: ComputerVision.analyzeImageByDomainInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_resultsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_results
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_results.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainInStreamAsync*
  name: analyzeImageByDomainInStreamAsync
  nameWithType: ComputerVision.analyzeImageByDomainInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 3609dfc8
  spec.java:
  - name: ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel
    fullName: ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStream*
  name: tagImageInStream
  nameWithType: ComputerVision.tagImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_result
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageInStreamAsync*
  name: tagImageInStreamAsync
  nameWithType: ComputerVision.tagImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 4a4d316f
  spec.java:
  - name: ComputerVisionTagImageInStreamDefinitionStages.WithImage
    fullName: ComputerVisionTagImageInStreamDefinitionStages.WithImage
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStream*
  name: describeImageInStream
  nameWithType: ComputerVision.describeImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._image_descriptiona08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_description
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_description.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageInStreamAsync*
  name: describeImageInStreamAsync
  nameWithType: ComputerVision.describeImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: "70169043"
  spec.java:
  - name: ComputerVisionDescribeImageInStreamDefinitionStages.WithImage
    fullName: ComputerVisionDescribeImageInStreamDefinitionStages.WithImage
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStream*
  name: recognizePrintedTextInStream
  nameWithType: ComputerVision.recognizePrintedTextInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_result
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextInStreamAsync*
  name: recognizePrintedTextInStreamAsync
  nameWithType: ComputerVision.recognizePrintedTextInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 02bbc546
  spec.java:
  - name: ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation
    fullName: ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation
- uid: dc385fd4
  spec.java:
  - name: CloudException
    fullName: CloudException
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStream*
  name: generateThumbnailInStream
  nameWithType: ComputerVision.generateThumbnailInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 3ab19265
  spec.java:
  - name: Observable<InputStream>
    fullName: Observable<InputStream>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailInStreamAsync*
  name: generateThumbnailInStreamAsync
  nameWithType: ComputerVision.generateThumbnailInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 012fc9a6
  spec.java:
  - name: ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth
    fullName: ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStream*
  name: analyzeImageInStream
  nameWithType: ComputerVision.analyzeImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysisa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysis.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageInStreamAsync*
  name: analyzeImageInStreamAsync
  nameWithType: ComputerVision.analyzeImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 9ad9f102
  spec.java:
  - name: ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage
    fullName: ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.getTextOperationResult*
  name: getTextOperationResult
  nameWithType: ComputerVision.getTextOperationResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResult
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._text_operation_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_operation_result
    name: TextOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_operation_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.getTextOperationResultAsync*
  name: getTextOperationResultAsync
  nameWithType: ComputerVision.getTextOperationResultAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResultAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeText*
  name: recognizeText
  nameWithType: ComputerVision.recognizeText
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeText
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizeTextAsync*
  name: recognizeTextAsync
  nameWithType: ComputerVision.recognizeTextAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomain*
  name: analyzeImageByDomain
  nameWithType: ComputerVision.analyzeImageByDomain
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageByDomainAsync*
  name: analyzeImageByDomainAsync
  nameWithType: ComputerVision.analyzeImageByDomainAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 45c47c42
  spec.java:
  - name: ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel
    fullName: ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImage*
  name: tagImage
  nameWithType: ComputerVision.tagImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.tagImageAsync*
  name: tagImageAsync
  nameWithType: ComputerVision.tagImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: a1018f3d
  spec.java:
  - name: ComputerVisionTagImageDefinitionStages.WithUrl
    fullName: ComputerVisionTagImageDefinitionStages.WithUrl
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImage*
  name: describeImage
  nameWithType: ComputerVision.describeImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.describeImageAsync*
  name: describeImageAsync
  nameWithType: ComputerVision.describeImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: a37ccca7
  spec.java:
  - name: ComputerVisionDescribeImageDefinitionStages.WithUrl
    fullName: ComputerVisionDescribeImageDefinitionStages.WithUrl
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedText*
  name: recognizePrintedText
  nameWithType: ComputerVision.recognizePrintedText
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.recognizePrintedTextAsync*
  name: recognizePrintedTextAsync
  nameWithType: ComputerVision.recognizePrintedTextAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: f16201ec
  spec.java:
  - name: ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation
    fullName: ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnail*
  name: generateThumbnail
  nameWithType: ComputerVision.generateThumbnail
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.generateThumbnailAsync*
  name: generateThumbnailAsync
  nameWithType: ComputerVision.generateThumbnailAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: ffe38203
  spec.java:
  - name: ComputerVisionGenerateThumbnailDefinitionStages.WithWidth
    fullName: ComputerVisionGenerateThumbnailDefinitionStages.WithWidth
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImage*
  name: analyzeImage
  nameWithType: ComputerVision.analyzeImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.analyzeImageAsync*
  name: analyzeImageAsync
  nameWithType: ComputerVision.analyzeImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: 8c7df68d
  spec.java:
  - name: ComputerVisionAnalyzeImageDefinitionStages.WithUrl
    fullName: ComputerVisionAnalyzeImageDefinitionStages.WithUrl
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.listModels*
  name: listModels
  nameWithType: ComputerVision.listModels
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models._list_models_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._list_models_result
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models._list_models_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision._computer_vision.listModelsAsync*
  name: listModelsAsync
  nameWithType: ComputerVision.listModelsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_recognition_mode
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_recognition_mode.yml
  name: TextRecognitionMode
  nameWithType: TextRecognitionMode
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
  type: Enum
  summary: <p>Defines values for TextRecognitionMode. </p>
  syntax:
    content: public enum TextRecognitionMode
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_results
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._domain_model_results.yml
  name: DomainModelResults
  nameWithType: DomainModelResults
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  type: Class
  summary: <p>Result of image analysis using a specific domain model including additional metadata. </p>
  syntax:
    content: public class DomainModelResults
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._ana65eb0b8c2ae14fe6b258bf38237e791
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._ana65eb0b8c2ae14fe6b258bf38237e791.yml
  name: AnalyzeImageByDomainInStreamOptionalParameter
  nameWithType: AnalyzeImageByDomainInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
  type: Class
  summary: <p>The AnalyzeImageByDomainInStreamOptionalParameter model. </p>
  syntax:
    content: public class AnalyzeImageByDomainInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_result
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_result.yml
  name: TagResult
  nameWithType: TagResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  type: Class
  summary: <p>The results of a image tag operation, including any tags and image metadata. </p>
  syntax:
    content: public class TagResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._ta90aa6ba72502bed1760c8403dc734d5f
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._ta90aa6ba72502bed1760c8403dc734d5f.yml
  name: TagImageInStreamOptionalParameter
  nameWithType: TagImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
  type: Class
  summary: <p>The TagImageInStreamOptionalParameter model. </p>
  syntax:
    content: public class TagImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_description
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_description.yml
  name: ImageDescription
  nameWithType: ImageDescription
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  type: Class
  summary: <p>A collection of content tags, along with a list of captions sorted by confidence level, and image metadata. </p>
  syntax:
    content: public class ImageDescription
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._de9c5bd2563bc6989cc836abe41b4bab75
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._de9c5bd2563bc6989cc836abe41b4bab75.yml
  name: DescribeImageInStreamOptionalParameter
  nameWithType: DescribeImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
  type: Class
  summary: <p>The DescribeImageInStreamOptionalParameter model. </p>
  syntax:
    content: public class DescribeImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_result
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._ocr_result.yml
  name: OcrResult
  nameWithType: OcrResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  type: Class
  summary: <p>The OcrResult model. </p>
  syntax:
    content: public class OcrResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._ree1820d0a8f28041f2ac3c23f0ca90e0a
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._ree1820d0a8f28041f2ac3c23f0ca90e0a.yml
  name: RecognizePrintedTextInStreamOptionalParameter
  nameWithType: RecognizePrintedTextInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
  type: Class
  summary: <p>The RecognizePrintedTextInStreamOptionalParameter model. </p>
  syntax:
    content: public class RecognizePrintedTextInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._ge156acd5f4d918373322dba517894c033
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._ge156acd5f4d918373322dba517894c033.yml
  name: GenerateThumbnailInStreamOptionalParameter
  nameWithType: GenerateThumbnailInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
  type: Class
  summary: <p>The GenerateThumbnailInStreamOptionalParameter model. </p>
  syntax:
    content: public class GenerateThumbnailInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysis
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._image_analysis.yml
  name: ImageAnalysis
  nameWithType: ImageAnalysis
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  type: Class
  summary: <p>Result of AnalyzeImage operation. </p>
  syntax:
    content: public class ImageAnalysis
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._anea8a9961fccae10aeb73399294e24001
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._anea8a9961fccae10aeb73399294e24001.yml
  name: AnalyzeImageInStreamOptionalParameter
  nameWithType: AnalyzeImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
  type: Class
  summary: <p>The AnalyzeImageInStreamOptionalParameter model. </p>
  syntax:
    content: public class AnalyzeImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_operation_result
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._text_operation_result.yml
  name: TextOperationResult
  nameWithType: TextOperationResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
  type: Class
  summary: <p>The TextOperationResult model. </p>
  syntax:
    content: public class TextOperationResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._an0a96108eee688240be2dcc8dbc18a1d4
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._an0a96108eee688240be2dcc8dbc18a1d4.yml
  name: AnalyzeImageByDomainOptionalParameter
  nameWithType: AnalyzeImageByDomainOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
  type: Class
  summary: <p>The AnalyzeImageByDomainOptionalParameter model. </p>
  syntax:
    content: public class AnalyzeImageByDomainOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_image_optional_parameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._tag_image_optional_parameter.yml
  name: TagImageOptionalParameter
  nameWithType: TagImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
  type: Class
  summary: <p>The TagImageOptionalParameter model. </p>
  syntax:
    content: public class TagImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._describe_image_optional_parameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._describe_image_optional_parameter.yml
  name: DescribeImageOptionalParameter
  nameWithType: DescribeImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
  type: Class
  summary: <p>The DescribeImageOptionalParameter model. </p>
  syntax:
    content: public class DescribeImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._reb61292139f8bf7eafc7c5b5d756f7167
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._reb61292139f8bf7eafc7c5b5d756f7167.yml
  name: RecognizePrintedTextOptionalParameter
  nameWithType: RecognizePrintedTextOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
  type: Class
  summary: <p>The RecognizePrintedTextOptionalParameter model. </p>
  syntax:
    content: public class RecognizePrintedTextOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._gecebea7d588ea99033b6d2bfffd25caa6
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._gecebea7d588ea99033b6d2bfffd25caa6.yml
  name: GenerateThumbnailOptionalParameter
  nameWithType: GenerateThumbnailOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
  type: Class
  summary: <p>The GenerateThumbnailOptionalParameter model. </p>
  syntax:
    content: public class GenerateThumbnailOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._analyze_image_optional_parameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._analyze_image_optional_parameter.yml
  name: AnalyzeImageOptionalParameter
  nameWithType: AnalyzeImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
  type: Class
  summary: <p>The AnalyzeImageOptionalParameter model. </p>
  syntax:
    content: public class AnalyzeImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models._list_models_result
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models._list_models_result.yml
  name: ListModelsResult
  nameWithType: ListModelsResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  type: Class
  summary: <p>Result of the List Domain Models operation. </p>
  syntax:
    content: public class ListModelsResult
