### YamlMime:JavaType
uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient"
fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient"
name: "ServiceBusReceiverClient"
nameWithType: "ServiceBusReceiverClient"
summary: "A **synchronous** receiver responsible for receiving <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> from a specific queue or topic on Azure Service Bus."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceBusReceiverClient implements AutoCloseable"
methods:
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.abandon(com.azure.messaging.servicebus.ServiceBusReceivedMessage)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.abandon(ServiceBusReceivedMessage message)"
  name: "abandon(ServiceBusReceivedMessage message)"
  nameWithType: "ServiceBusReceiverClient.abandon(ServiceBusReceivedMessage message)"
  summary: "Abandons a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void abandon(ServiceBusReceivedMessage message)"
  desc: "Abandons a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.abandon(com.azure.messaging.servicebus.ServiceBusReceivedMessage,com.azure.messaging.servicebus.models.AbandonOptions)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.abandon(ServiceBusReceivedMessage message, AbandonOptions options)"
  name: "abandon(ServiceBusReceivedMessage message, AbandonOptions options)"
  nameWithType: "ServiceBusReceiverClient.abandon(ServiceBusReceivedMessage message, AbandonOptions options)"
  summary: "Abandons a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> and updates the message's properties."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to set while abandoning the message."
    name: "options"
    type: "<xref href=\"com.azure.messaging.servicebus.models.AbandonOptions?alt=com.azure.messaging.servicebus.models.AbandonOptions&text=AbandonOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void abandon(ServiceBusReceivedMessage message, AbandonOptions options)"
  desc: "Abandons a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> and updates the message's properties. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.close()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.close()"
  name: "close()"
  nameWithType: "ServiceBusReceiverClient.close()"
  summary: "Disposes of the consumer by closing the underlying links to the service."
  syntax: "public void close()"
  desc: "Disposes of the consumer by closing the underlying links to the service."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.commitTransaction(com.azure.messaging.servicebus.ServiceBusTransactionContext)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.commitTransaction(ServiceBusTransactionContext transactionContext)"
  name: "commitTransaction(ServiceBusTransactionContext transactionContext)"
  nameWithType: "ServiceBusReceiverClient.commitTransaction(ServiceBusTransactionContext transactionContext)"
  summary: "Commits the transaction and all the operations associated with it."
  parameters:
  - description: "The transaction to be commit."
    name: "transactionContext"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusTransactionContext?alt=com.azure.messaging.servicebus.ServiceBusTransactionContext&text=ServiceBusTransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void commitTransaction(ServiceBusTransactionContext transactionContext)"
  desc: "Commits the transaction and all the operations associated with it.\n\n**Creating and using a transaction**\n\n```java\nServiceBusTransactionContext transaction = receiver.createTransaction();\n\n // Process messages and associate operations with the transaction.\n ServiceBusReceivedMessage deferredMessage = receiver.receiveDeferredMessage(sequenceNumber);\n receiver.complete(deferredMessage, new CompleteOptions().setTransactionContext(transaction));\n receiver.abandon(receivedMessage, new AbandonOptions().setTransactionContext(transaction));\n receiver.commitTransaction(transaction);\n```"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.complete(com.azure.messaging.servicebus.ServiceBusReceivedMessage)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.complete(ServiceBusReceivedMessage message)"
  name: "complete(ServiceBusReceivedMessage message)"
  nameWithType: "ServiceBusReceiverClient.complete(ServiceBusReceivedMessage message)"
  summary: "Completes a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void complete(ServiceBusReceivedMessage message)"
  desc: "Completes a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>. This will delete the message from the service."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.complete(com.azure.messaging.servicebus.ServiceBusReceivedMessage,com.azure.messaging.servicebus.models.CompleteOptions)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.complete(ServiceBusReceivedMessage message, CompleteOptions options)"
  name: "complete(ServiceBusReceivedMessage message, CompleteOptions options)"
  nameWithType: "ServiceBusReceiverClient.complete(ServiceBusReceivedMessage message, CompleteOptions options)"
  summary: "Completes a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options used to complete the message."
    name: "options"
    type: "<xref href=\"com.azure.messaging.servicebus.models.CompleteOptions?alt=com.azure.messaging.servicebus.models.CompleteOptions&text=CompleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void complete(ServiceBusReceivedMessage message, CompleteOptions options)"
  desc: "Completes a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>. This will delete the message from the service."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.createTransaction()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.createTransaction()"
  name: "createTransaction()"
  nameWithType: "ServiceBusReceiverClient.createTransaction()"
  summary: "Starts a new transaction on Service Bus."
  syntax: "public ServiceBusTransactionContext createTransaction()"
  desc: "Starts a new transaction on Service Bus. The <xref uid=\"com.azure.messaging.servicebus.ServiceBusTransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusTransactionContext\"></xref> should be passed along to all operations that need to be in this transaction.\n\n**Creating and using a transaction**\n\n```java\nServiceBusTransactionContext transaction = receiver.createTransaction();\n\n // Process messages and associate operations with the transaction.\n ServiceBusReceivedMessage deferredMessage = receiver.receiveDeferredMessage(sequenceNumber);\n receiver.complete(deferredMessage, new CompleteOptions().setTransactionContext(transaction));\n receiver.abandon(receivedMessage, new AbandonOptions().setTransactionContext(transaction));\n receiver.commitTransaction(transaction);\n```"
  returns:
    description: "A new <xref uid=\"com.azure.messaging.servicebus.ServiceBusTransactionContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusTransactionContext\"></xref>."
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusTransactionContext?alt=com.azure.messaging.servicebus.ServiceBusTransactionContext&text=ServiceBusTransactionContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.deadLetter(com.azure.messaging.servicebus.ServiceBusReceivedMessage)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.deadLetter(ServiceBusReceivedMessage message)"
  name: "deadLetter(ServiceBusReceivedMessage message)"
  nameWithType: "ServiceBusReceiverClient.deadLetter(ServiceBusReceivedMessage message)"
  summary: "Moves a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> to the dead-letter sub-queue."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deadLetter(ServiceBusReceivedMessage message)"
  desc: "Moves a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> to the dead-letter sub-queue."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.deadLetter(com.azure.messaging.servicebus.ServiceBusReceivedMessage,com.azure.messaging.servicebus.models.DeadLetterOptions)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.deadLetter(ServiceBusReceivedMessage message, DeadLetterOptions options)"
  name: "deadLetter(ServiceBusReceivedMessage message, DeadLetterOptions options)"
  nameWithType: "ServiceBusReceiverClient.deadLetter(ServiceBusReceivedMessage message, DeadLetterOptions options)"
  summary: "Moves a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> to the dead-letter sub-queue with dead-letter reason, error description, and/or modified properties."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options used to dead-letter the message."
    name: "options"
    type: "<xref href=\"com.azure.messaging.servicebus.models.DeadLetterOptions?alt=com.azure.messaging.servicebus.models.DeadLetterOptions&text=DeadLetterOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deadLetter(ServiceBusReceivedMessage message, DeadLetterOptions options)"
  desc: "Moves a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> to the dead-letter sub-queue with dead-letter reason, error description, and/or modified properties."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.defer(com.azure.messaging.servicebus.ServiceBusReceivedMessage)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.defer(ServiceBusReceivedMessage message)"
  name: "defer(ServiceBusReceivedMessage message)"
  nameWithType: "ServiceBusReceiverClient.defer(ServiceBusReceivedMessage message)"
  summary: "Defers a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void defer(ServiceBusReceivedMessage message)"
  desc: "Defers a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>. This will move message into the deferred subqueue."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.defer(com.azure.messaging.servicebus.ServiceBusReceivedMessage,com.azure.messaging.servicebus.models.DeferOptions)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.defer(ServiceBusReceivedMessage message, DeferOptions options)"
  name: "defer(ServiceBusReceivedMessage message, DeferOptions options)"
  nameWithType: "ServiceBusReceiverClient.defer(ServiceBusReceivedMessage message, DeferOptions options)"
  summary: "Defers a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> using its lock token with modified message property."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options used to defer the message."
    name: "options"
    type: "<xref href=\"com.azure.messaging.servicebus.models.DeferOptions?alt=com.azure.messaging.servicebus.models.DeferOptions&text=DeferOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void defer(ServiceBusReceivedMessage message, DeferOptions options)"
  desc: "Defers a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> using its lock token with modified message property. This will move message into the deferred sub-queue."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.getEntityPath()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.getEntityPath()"
  name: "getEntityPath()"
  nameWithType: "ServiceBusReceiverClient.getEntityPath()"
  summary: "Gets the Service Bus resource this client interacts with."
  syntax: "public String getEntityPath()"
  desc: "Gets the Service Bus resource this client interacts with."
  returns:
    description: "The Service Bus resource this client interacts with."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.getFullyQualifiedNamespace()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.getFullyQualifiedNamespace()"
  name: "getFullyQualifiedNamespace()"
  nameWithType: "ServiceBusReceiverClient.getFullyQualifiedNamespace()"
  summary: "Gets the fully qualified Service Bus namespace that the connection is associated with."
  syntax: "public String getFullyQualifiedNamespace()"
  desc: "Gets the fully qualified Service Bus namespace that the connection is associated with. This is likely similar to `{yournamespace}.servicebus.windows.net`."
  returns:
    description: "The fully qualified Service Bus namespace that the connection is associated with."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.getSessionId()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.getSessionId()"
  name: "getSessionId()"
  nameWithType: "ServiceBusReceiverClient.getSessionId()"
  summary: "Gets the Session<wbr>Id of the session if this receiver is a session receiver."
  syntax: "public String getSessionId()"
  desc: "Gets the SessionId of the session if this receiver is a session receiver."
  returns:
    description: "The SessionId or null if this is not a session receiver."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.getSessionState()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.getSessionState()"
  name: "getSessionState()"
  nameWithType: "ServiceBusReceiverClient.getSessionState()"
  summary: "Gets the state of the session if this receiver is a session receiver."
  syntax: "public byte[] getSessionState()"
  desc: "Gets the state of the session if this receiver is a session receiver."
  returns:
    description: "The session state or null if there is no state set for the session."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.peekMessage()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.peekMessage()"
  name: "peekMessage()"
  nameWithType: "ServiceBusReceiverClient.peekMessage()"
  summary: "Reads the next active message without changing the state of the receiver or the message source."
  syntax: "public ServiceBusReceivedMessage peekMessage()"
  desc: "Reads the next active message without changing the state of the receiver or the message source. The first call to `peekMessage()` fetches the first active message for this receiver. Each subsequent call fetches the subsequent message in the entity."
  returns:
    description: "A peeked <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref>."
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.peekMessage(long)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.peekMessage(long sequenceNumber)"
  name: "peekMessage(long sequenceNumber)"
  nameWithType: "ServiceBusReceiverClient.peekMessage(long sequenceNumber)"
  summary: "Starting from the given sequence number, reads next the active message without changing the state of the receiver or the message source."
  parameters:
  - description: "The sequence number from where to read the message."
    name: "sequenceNumber"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceBusReceivedMessage peekMessage(long sequenceNumber)"
  desc: "Starting from the given sequence number, reads next the active message without changing the state of the receiver or the message source."
  returns:
    description: "A peeked <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref>."
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.peekMessages(int)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.peekMessages(int maxMessages)"
  name: "peekMessages(int maxMessages)"
  nameWithType: "ServiceBusReceiverClient.peekMessages(int maxMessages)"
  summary: "Reads the next batch of active messages without changing the state of the receiver or the message source."
  parameters:
  - description: "The maximum number of messages to peek."
    name: "maxMessages"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<ServiceBusReceivedMessage> peekMessages(int maxMessages)"
  desc: "Reads the next batch of active messages without changing the state of the receiver or the message source."
  returns:
    description: "An <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> of <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref> that are peeked."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.peekMessages(int,long)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.peekMessages(int maxMessages, long sequenceNumber)"
  name: "peekMessages(int maxMessages, long sequenceNumber)"
  nameWithType: "ServiceBusReceiverClient.peekMessages(int maxMessages, long sequenceNumber)"
  summary: "Starting from the given sequence number, reads the next batch of active messages without changing the state of the receiver or the message source."
  parameters:
  - description: "The number of messages."
    name: "maxMessages"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The sequence number from where to start reading messages."
    name: "sequenceNumber"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<ServiceBusReceivedMessage> peekMessages(int maxMessages, long sequenceNumber)"
  desc: "Starting from the given sequence number, reads the next batch of active messages without changing the state of the receiver or the message source."
  returns:
    description: "An <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> of <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref> peeked."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveDeferredMessage(long)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveDeferredMessage(long sequenceNumber)"
  name: "receiveDeferredMessage(long sequenceNumber)"
  nameWithType: "ServiceBusReceiverClient.receiveDeferredMessage(long sequenceNumber)"
  summary: "Receives a deferred <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"sequence number\"></xref> of the\n     message."
    name: "sequenceNumber"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceBusReceivedMessage receiveDeferredMessage(long sequenceNumber)"
  desc: "Receives a deferred <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>. Deferred messages can only be received by using sequence number."
  returns:
    description: "A deferred message with the matching <code>sequenceNumber</code>."
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveDeferredMessageBatch(java.lang.Iterable<java.lang.Long>)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveDeferredMessageBatch(Iterable<Long> sequenceNumbers)"
  name: "receiveDeferredMessageBatch(Iterable<Long> sequenceNumbers)"
  nameWithType: "ServiceBusReceiverClient.receiveDeferredMessageBatch(Iterable<Long> sequenceNumbers)"
  summary: "Receives a batch of deferred <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref>."
  parameters:
  - description: "The sequence numbers of the deferred messages."
    name: "sequenceNumbers"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public IterableStream<ServiceBusReceivedMessage> receiveDeferredMessageBatch(Iterable<Long> sequenceNumbers)"
  desc: "Receives a batch of deferred <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref>. Deferred messages can only be received by using sequence number."
  returns:
    description: "An <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> of deferred <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref>."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveMessages(int)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveMessages(int maxMessages)"
  name: "receiveMessages(int maxMessages)"
  nameWithType: "ServiceBusReceiverClient.receiveMessages(int maxMessages)"
  summary: "Receives an iterable stream of <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref> from the Service Bus entity."
  parameters:
  - description: "The maximum number of messages to receive."
    name: "maxMessages"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<ServiceBusReceivedMessage> receiveMessages(int maxMessages)"
  desc: "Receives an iterable stream of <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref> from the Service Bus entity. The receive operation will wait for a default 1 minute for receiving a message before it times out. You can override it by using <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveMessages(int,java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#receiveMessages(int, Duration)\"></xref>."
  returns:
    description: "An <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> of at most <code>maxMessages</code> messages from the Service Bus entity."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveMessages(int,java.time.Duration)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.receiveMessages(int maxMessages, Duration maxWaitTime)"
  name: "receiveMessages(int maxMessages, Duration maxWaitTime)"
  nameWithType: "ServiceBusReceiverClient.receiveMessages(int maxMessages, Duration maxWaitTime)"
  summary: "Receives an iterable stream of <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref> from the Service Bus entity."
  parameters:
  - description: "The maximum number of messages to receive."
    name: "maxMessages"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The time the client waits for receiving a message before it times out."
    name: "maxWaitTime"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<ServiceBusReceivedMessage> receiveMessages(int maxMessages, Duration maxWaitTime)"
  desc: "Receives an iterable stream of <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messages\"></xref> from the Service Bus entity. The default receive mode is <xref uid=\"com.azure.messaging.servicebus.models.ServiceBusReceiveMode.PEEK_LOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiveMode#PEEK_LOCK\"></xref> unless it is changed during creation of <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClientBuilder#receiveMode(ServiceBusReceiveMode)\"></xref>."
  returns:
    description: "An <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> of at most <code>maxMessages</code> messages from the Service Bus entity."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.renewMessageLock(com.azure.messaging.servicebus.ServiceBusReceivedMessage)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.renewMessageLock(ServiceBusReceivedMessage message)"
  name: "renewMessageLock(ServiceBusReceivedMessage message)"
  nameWithType: "ServiceBusReceiverClient.renewMessageLock(ServiceBusReceivedMessage message)"
  summary: "Renews the lock on the specified message."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform lock renewal."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OffsetDateTime renewMessageLock(ServiceBusReceivedMessage message)"
  desc: "Renews the lock on the specified message. The lock will be renewed based on the setting specified on the entity. When a message is received in <xref uid=\"com.azure.messaging.servicebus.models.ServiceBusReceiveMode.PEEK_LOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiveMode#PEEK_LOCK\"></xref> mode, the message is locked on the server for this receiver instance for a duration as specified during the Queue creation (LockDuration). If processing of the message requires longer than this duration, the lock needs to be renewed. For each renewal, the lock is reset to the entity's LockDuration value."
  returns:
    description: "The new expiration time for the message."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.renewMessageLock(com.azure.messaging.servicebus.ServiceBusReceivedMessage,java.time.Duration,java.util.function.Consumer<java.lang.Throwable>)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.renewMessageLock(ServiceBusReceivedMessage message, Duration maxLockRenewalDuration, Consumer<Throwable> onError)"
  name: "renewMessageLock(ServiceBusReceivedMessage message, Duration maxLockRenewalDuration, Consumer<Throwable> onError)"
  nameWithType: "ServiceBusReceiverClient.renewMessageLock(ServiceBusReceivedMessage message, Duration maxLockRenewalDuration, Consumer<Throwable> onError)"
  summary: "Starts the auto lock renewal for a message with the given lock."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform auto-lock renewal."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum duration to keep renewing the lock token."
    name: "maxLockRenewalDuration"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "A function to call when an error occurs during lock renewal."
    name: "onError"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void renewMessageLock(ServiceBusReceivedMessage message, Duration maxLockRenewalDuration, Consumer<Throwable> onError)"
  desc: "Starts the auto lock renewal for a message with the given lock."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.renewSessionLock()"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.renewSessionLock()"
  name: "renewSessionLock()"
  nameWithType: "ServiceBusReceiverClient.renewSessionLock()"
  summary: "Sets the state of the session if this receiver is a session receiver."
  syntax: "public OffsetDateTime renewSessionLock()"
  desc: "Sets the state of the session if this receiver is a session receiver."
  returns:
    description: "The next expiration time for the session lock."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.renewSessionLock(java.time.Duration,java.util.function.Consumer<java.lang.Throwable>)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.renewSessionLock(Duration maxLockRenewalDuration, Consumer<Throwable> onError)"
  name: "renewSessionLock(Duration maxLockRenewalDuration, Consumer<Throwable> onError)"
  nameWithType: "ServiceBusReceiverClient.renewSessionLock(Duration maxLockRenewalDuration, Consumer<Throwable> onError)"
  summary: "Starts the auto lock renewal for the session that this receiver works for."
  parameters:
  - description: "Maximum duration to keep renewing the session."
    name: "maxLockRenewalDuration"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "A function to call when an error occurs during lock renewal."
    name: "onError"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void renewSessionLock(Duration maxLockRenewalDuration, Consumer<Throwable> onError)"
  desc: "Starts the auto lock renewal for the session that this receiver works for."
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.rollbackTransaction(com.azure.messaging.servicebus.ServiceBusTransactionContext)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.rollbackTransaction(ServiceBusTransactionContext transactionContext)"
  name: "rollbackTransaction(ServiceBusTransactionContext transactionContext)"
  nameWithType: "ServiceBusReceiverClient.rollbackTransaction(ServiceBusTransactionContext transactionContext)"
  summary: "Rollbacks the transaction given and all operations associated with it."
  parameters:
  - description: "The transaction to be rollback."
    name: "transactionContext"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusTransactionContext?alt=com.azure.messaging.servicebus.ServiceBusTransactionContext&text=ServiceBusTransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void rollbackTransaction(ServiceBusTransactionContext transactionContext)"
  desc: "Rollbacks the transaction given and all operations associated with it.\n\n**Creating and using a transaction**\n\n```java\nServiceBusTransactionContext transaction = receiver.createTransaction();\n\n // Process messages and associate operations with the transaction.\n ServiceBusReceivedMessage deferredMessage = receiver.receiveDeferredMessage(sequenceNumber);\n receiver.complete(deferredMessage, new CompleteOptions().setTransactionContext(transaction));\n receiver.abandon(receivedMessage, new AbandonOptions().setTransactionContext(transaction));\n receiver.commitTransaction(transaction);\n```"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverClient.setSessionState(byte[])"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverClient.setSessionState(byte[] sessionState)"
  name: "setSessionState(byte[] sessionState)"
  nameWithType: "ServiceBusReceiverClient.setSessionState(byte[] sessionState)"
  summary: "Sets the state of the session if this receiver is a session receiver."
  parameters:
  - description: "State to set on the session."
    name: "sessionState"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void setSessionState(byte[] sessionState)"
  desc: "Sets the state of the session if this receiver is a session receiver."
type: "class"
desc: "A **synchronous** receiver responsible for receiving <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> from a specific queue or topic on Azure Service Bus.\n\n**Create an instance of receiver**\n\n```java\n// The required parameters is connectionString, a way to authenticate with Service Bus using credentials.\n // The connectionString/queueName must be set by the application. The 'connectionString' format is shown below.\n // \"Endpoint={fully-qualified-namespace};SharedAccessKeyName={policy-name};SharedAccessKey={key}\"\n ServiceBusReceiverClient receiver = new ServiceBusClientBuilder()\n     .connectionString(connectionString)\n     .receiver()\n     .queueName(queueName)\n     .buildClient();\n\n // Use the receiver and finally close it.\n receiver.close();\n```"
implements:
- "<xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.messaging.servicebus"
artifact: com.azure:azure-messaging-servicebus:7.10.1
