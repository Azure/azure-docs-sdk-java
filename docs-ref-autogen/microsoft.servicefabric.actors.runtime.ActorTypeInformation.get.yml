### YamlMime:JavaMember
nameWithType: ActorTypeInformation.get
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.get(Class<?> actorClass)
  name: get(Class<?> actorClass)
  nameWithType: ActorTypeInformation.get(Class<?> actorClass)
  parameters:
  - description: <p>Type of class implementing the actor to create ActorTypeInforamtion for. </p>
    name: actorClass
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <xref uid="microsoft.servicefabric.actors.runtime.ActorTypeInformation" data-throw-if-not-resolved="false" data-raw-source="ActorTypeInformation"></xref> created from actorType. </p>
    type: <xref href="microsoft.servicefabric.actors.runtime.ActorTypeInformation?alt=microsoft.servicefabric.actors.runtime.ActorTypeInformation&text=ActorTypeInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates <xref uid="microsoft.servicefabric.actors.runtime.ActorTypeInformation" data-throw-if-not-resolved="false" data-raw-source="ActorTypeInformation"></xref> from actorType.</p>

    <p>

    When base type for actorType is not of type <xref uid="microsoft.servicefabric.actors.runtime.ActorBase" data-throw-if-not-resolved="false" data-raw-source="ActorBase"></xref>. </p>

    <p>When actorType does not implement an interface deriving from <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="Actor"></xref> and is not marked as abstract. </p>

    <p>When actorType implements more than one interface which derives from <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="Actor"></xref> but doesn't have <xref uid="microsoft.servicefabric.actors.runtime.ActorServiceAttribute" data-throw-if-not-resolved="false" data-raw-source="ActorServiceAttribute"></xref>. </p>
  syntax: public static ActorTypeInformation get(Class<?> actorClass)
  uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.get(Class<?>)
uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation.get*
fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.get
name: get(Class<?> actorClass)
package: microsoft.servicefabric.actors.runtime
metadata: {}
