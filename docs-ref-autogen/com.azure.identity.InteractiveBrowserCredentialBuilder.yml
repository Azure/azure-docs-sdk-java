### YamlMime:JavaType
uid: "com.azure.identity.InteractiveBrowserCredentialBuilder"
fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder"
name: "InteractiveBrowserCredentialBuilder"
nameWithType: "InteractiveBrowserCredentialBuilder"
summary: "Fluent credential builder for instantiating a <xref uid=\"com.azure.identity.InteractiveBrowserCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.identity.CredentialBuilderBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.identity.AadCredentialBuilderBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.identity.AadCredentialBuilderBase?alt=com.azure.identity.AadCredentialBuilderBase&text=AadCredentialBuilderBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.identity.AadCredentialBuilderBase.additionallyAllowedTenants(java.lang.String...)?alt=com.azure.identity.AadCredentialBuilderBase.additionallyAllowedTenants&text=additionallyAllowedTenants\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.AadCredentialBuilderBase.additionallyAllowedTenants(java.util.List<java.lang.String>)?alt=com.azure.identity.AadCredentialBuilderBase.additionallyAllowedTenants&text=additionallyAllowedTenants\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.AadCredentialBuilderBase.authorityHost(java.lang.String)?alt=com.azure.identity.AadCredentialBuilderBase.authorityHost&text=authorityHost\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.AadCredentialBuilderBase.clientId(java.lang.String)?alt=com.azure.identity.AadCredentialBuilderBase.clientId&text=clientId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.AadCredentialBuilderBase.executorService(java.util.concurrent.ExecutorService)?alt=com.azure.identity.AadCredentialBuilderBase.executorService&text=executorService\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.AadCredentialBuilderBase.tenantId(java.lang.String)?alt=com.azure.identity.AadCredentialBuilderBase.tenantId&text=tenantId\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.identity.CredentialBuilderBase?alt=com.azure.identity.CredentialBuilderBase&text=CredentialBuilderBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.configuration(com.azure.core.util.Configuration)?alt=com.azure.identity.CredentialBuilderBase.configuration&text=configuration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.enableAccountIdentifierLogging()?alt=com.azure.identity.CredentialBuilderBase.enableAccountIdentifierLogging&text=enableAccountIdentifierLogging\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.httpClient(com.azure.core.http.HttpClient)?alt=com.azure.identity.CredentialBuilderBase.httpClient&text=httpClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.httpPipeline(com.azure.core.http.HttpPipeline)?alt=com.azure.identity.CredentialBuilderBase.httpPipeline&text=httpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.maxRetry(int)?alt=com.azure.identity.CredentialBuilderBase.maxRetry&text=maxRetry\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.proxyOptions(com.azure.core.http.ProxyOptions)?alt=com.azure.identity.CredentialBuilderBase.proxyOptions&text=proxyOptions\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.retryTimeout(java.util.function.Function<java.time.Duration,java.time.Duration>)?alt=com.azure.identity.CredentialBuilderBase.retryTimeout&text=retryTimeout\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **InteractiveBrowserCredentialBuilder**</br> extends <xref href=\"com.azure.identity.AadCredentialBuilderBase?alt=com.azure.identity.AadCredentialBuilderBase&text=AadCredentialBuilderBase\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.InteractiveBrowserCredentialBuilder()"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.InteractiveBrowserCredentialBuilder()"
  name: "InteractiveBrowserCredentialBuilder()"
  nameWithType: "InteractiveBrowserCredentialBuilder.InteractiveBrowserCredentialBuilder()"
  syntax: "public InteractiveBrowserCredentialBuilder()"
methods:
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.additionallyAllowedTenants(java.lang.String...)"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.additionallyAllowedTenants(String[] additionallyAllowedTenants)"
  name: "additionallyAllowedTenants(String[] additionallyAllowedTenants)"
  nameWithType: "InteractiveBrowserCredentialBuilder.additionallyAllowedTenants(String[] additionallyAllowedTenants)"
  summary: "For multi-tenant applications, specifies additional tenants for which the credential may acquire tokens."
  overridden: "com.azure.identity.AadCredentialBuilderBase.additionallyAllowedTenants(java.lang.String...)"
  parameters:
  - description: "the additionally allowed tenants."
    name: "additionallyAllowedTenants"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
  syntax: "public InteractiveBrowserCredentialBuilder additionallyAllowedTenants(String[] additionallyAllowedTenants)"
  desc: "For multi-tenant applications, specifies additional tenants for which the credential may acquire tokens. Add the wildcard value \"\\*\" to allow the credential to acquire tokens for any tenant on which the application is installed. If no value is specified for TenantId this option will have no effect, and the credential will acquire tokens for any requested tenant."
  returns:
    description: "An updated instance of this builder with the additional tenants configured."
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.additionallyAllowedTenants(java.util.List<java.lang.String>)"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.additionallyAllowedTenants(List<String> additionallyAllowedTenants)"
  name: "additionallyAllowedTenants(List<String> additionallyAllowedTenants)"
  nameWithType: "InteractiveBrowserCredentialBuilder.additionallyAllowedTenants(List<String> additionallyAllowedTenants)"
  summary: "For multi-tenant applications, specifies additional tenants for which the credential may acquire tokens."
  overridden: "com.azure.identity.AadCredentialBuilderBase.additionallyAllowedTenants(java.util.List<java.lang.String>)"
  parameters:
  - description: "the additionally allowed tenants."
    name: "additionallyAllowedTenants"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public InteractiveBrowserCredentialBuilder additionallyAllowedTenants(List<String> additionallyAllowedTenants)"
  desc: "For multi-tenant applications, specifies additional tenants for which the credential may acquire tokens. Add the wildcard value \"\\*\" to allow the credential to acquire tokens for any tenant on which the application is installed. If no value is specified for TenantId this option will have no effect, and the credential will acquire tokens for any requested tenant."
  returns:
    description: "An updated instance of this builder with the additional tenants configured."
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.authenticationRecord(com.azure.identity.AuthenticationRecord)"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.authenticationRecord(AuthenticationRecord authenticationRecord)"
  name: "authenticationRecord(AuthenticationRecord authenticationRecord)"
  nameWithType: "InteractiveBrowserCredentialBuilder.authenticationRecord(AuthenticationRecord authenticationRecord)"
  summary: "Sets the <xref uid=\"com.azure.identity.AuthenticationRecord\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationRecord\"></xref> captured from a previous authentication."
  parameters:
  - description: "The Authentication record to be configured."
    name: "authenticationRecord"
    type: "<xref href=\"com.azure.identity.AuthenticationRecord?alt=com.azure.identity.AuthenticationRecord&text=AuthenticationRecord\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public InteractiveBrowserCredentialBuilder authenticationRecord(AuthenticationRecord authenticationRecord)"
  desc: "Sets the <xref uid=\"com.azure.identity.AuthenticationRecord\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationRecord\"></xref> captured from a previous authentication."
  returns:
    description: "An updated instance of this builder with the configured authentication record."
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.build()"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.build()"
  name: "build()"
  nameWithType: "InteractiveBrowserCredentialBuilder.build()"
  summary: "Creates a new <xref uid=\"com.azure.identity.InteractiveBrowserCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential\"></xref> with the current configurations."
  syntax: "public InteractiveBrowserCredential build()"
  desc: "Creates a new <xref uid=\"com.azure.identity.InteractiveBrowserCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential\"></xref> with the current configurations."
  returns:
    description: "a <xref uid=\"com.azure.identity.InteractiveBrowserCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential\"></xref> with the current configurations."
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredential?alt=com.azure.identity.InteractiveBrowserCredential&text=InteractiveBrowserCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.disableAutomaticAuthentication()"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.disableAutomaticAuthentication()"
  name: "disableAutomaticAuthentication()"
  nameWithType: "InteractiveBrowserCredentialBuilder.disableAutomaticAuthentication()"
  summary: "Disables the automatic authentication and prevents the <xref uid=\"com.azure.identity.InteractiveBrowserCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential\"></xref> from automatically prompting the user."
  syntax: "public InteractiveBrowserCredentialBuilder disableAutomaticAuthentication()"
  desc: "Disables the automatic authentication and prevents the <xref uid=\"com.azure.identity.InteractiveBrowserCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential\"></xref> from automatically prompting the user. If automatic authentication is disabled a <xref uid=\"com.azure.identity.AuthenticationRequiredException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationRequiredException\"></xref> will be thrown from <xref uid=\"com.azure.identity.InteractiveBrowserCredential.getToken(com.azure.core.credential.TokenRequestContext)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential#getToken(TokenRequestContext)\"></xref> in the case that user interaction is necessary. The application is responsible for handling this exception, and calling <xref uid=\"com.azure.identity.InteractiveBrowserCredential.authenticate()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential#authenticate()\"></xref> or <xref uid=\"com.azure.identity.InteractiveBrowserCredential.authenticate(com.azure.core.credential.TokenRequestContext)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential#authenticate(TokenRequestContext)\"></xref> to authenticate the user interactively."
  returns:
    description: "An updated instance of this builder with automatic authentication disabled."
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.loginHint(java.lang.String)"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.loginHint(String loginHint)"
  name: "loginHint(String loginHint)"
  nameWithType: "InteractiveBrowserCredentialBuilder.loginHint(String loginHint)"
  summary: "Sets the username suggestion to pre-fill the login page's username/email address field."
  parameters:
  - description: "the username suggestion to pre-fill the login page's username/email address field."
    name: "loginHint"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public InteractiveBrowserCredentialBuilder loginHint(String loginHint)"
  desc: "Sets the username suggestion to pre-fill the login page's username/email address field. A user may still log in with a different username."
  returns:
    description: "An updated instance of this builder with login hint configured."
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.port(int)"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.port(int port)"
  name: "port(int port)"
  nameWithType: "InteractiveBrowserCredentialBuilder.port(int port)"
  summary: "Sets the port for the local HTTP server, for which `http://localhost:{port}` must be registered as a valid reply URL on the application."
  deprecatedTag: "Configure the redirect URL as `http://localhost:{port}` via <xref uid=\"com.azure.identity.InteractiveBrowserCredentialBuilder.redirectUrl(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredentialBuilder#redirectUrl(String)\"></xref> instead."
  parameters:
  - description: "the port on which the credential will listen for the browser authentication result"
    name: "port"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>public InteractiveBrowserCredentialBuilder port(int port)"
  desc: "Sets the port for the local HTTP server, for which `http://localhost:{port}` must be registered as a valid reply URL on the application."
  hasDeprecatedTag: true
  returns:
    description: "the InteractiveBrowserCredentialBuilder itself"
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.redirectUrl(java.lang.String)"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.redirectUrl(String redirectUrl)"
  name: "redirectUrl(String redirectUrl)"
  nameWithType: "InteractiveBrowserCredentialBuilder.redirectUrl(String redirectUrl)"
  summary: "Sets the Redirect URL where STS will callback the application with the security code."
  parameters:
  - description: "the redirect URL to listen on and receive security code."
    name: "redirectUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public InteractiveBrowserCredentialBuilder redirectUrl(String redirectUrl)"
  desc: "Sets the Redirect URL where STS will callback the application with the security code. It is required if a custom client id is specified via <xref uid=\"com.azure.identity.InteractiveBrowserCredentialBuilder.clientId*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredentialBuilder#clientId(String)\"></xref> and must match the redirect URL specified during the application registration."
  returns:
    description: "An updated instance of this builder with the configured redirect URL."
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.InteractiveBrowserCredentialBuilder.tokenCachePersistenceOptions(com.azure.identity.TokenCachePersistenceOptions)"
  fullName: "com.azure.identity.InteractiveBrowserCredentialBuilder.tokenCachePersistenceOptions(TokenCachePersistenceOptions tokenCachePersistenceOptions)"
  name: "tokenCachePersistenceOptions(TokenCachePersistenceOptions tokenCachePersistenceOptions)"
  nameWithType: "InteractiveBrowserCredentialBuilder.tokenCachePersistenceOptions(TokenCachePersistenceOptions tokenCachePersistenceOptions)"
  summary: "Configures the persistent shared token cache options and enables the persistent token cache which is disabled by default."
  parameters:
  - description: "the token cache configuration options"
    name: "tokenCachePersistenceOptions"
    type: "<xref href=\"com.azure.identity.TokenCachePersistenceOptions?alt=com.azure.identity.TokenCachePersistenceOptions&text=TokenCachePersistenceOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public InteractiveBrowserCredentialBuilder tokenCachePersistenceOptions(TokenCachePersistenceOptions tokenCachePersistenceOptions)"
  desc: "Configures the persistent shared token cache options and enables the persistent token cache which is disabled by default. If configured, the credential will store tokens in a cache persisted to the machine, protected to the current user, which can be shared by other credentials and processes."
  returns:
    description: "An updated instance of this builder with the token cache options configured."
    type: "<xref href=\"com.azure.identity.InteractiveBrowserCredentialBuilder?alt=com.azure.identity.InteractiveBrowserCredentialBuilder&text=InteractiveBrowserCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Fluent credential builder for instantiating a <xref uid=\"com.azure.identity.InteractiveBrowserCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential\"></xref>."
metadata: {}
package: "com.azure.identity"
artifact: com.azure:azure-identity:1.7.2
