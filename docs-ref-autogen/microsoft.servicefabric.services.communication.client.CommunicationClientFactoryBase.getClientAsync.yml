### YamlMime:JavaMember
nameWithType: CommunicationClientFactoryBase<T>.getClientAsync
type: method
members:
- fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactoryBase<T extends CommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactoryBase<T>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  parameters:
  - description: <p>previous <xref uid="" data-throw-if-not-resolved="false">ResolvedServicePartition</xref></p>
    name: previousRsp
    type: <xref href="system.fabric.ResolvedServicePartition?alt=system.fabric.ResolvedServicePartition&text=ResolvedServicePartition" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="microsoft.servicefabric.services.communication.client.TargetReplicaSelector" data-throw-if-not-resolved="false">TargetReplicaSelector</xref>

      </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  - description: <p>Listener name </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>retry settings </p>
    name: retrySettings
    type: <xref href="microsoft.servicefabric.services.communication.client.OperationRetrySettings?alt=microsoft.servicefabric.services.communication.client.OperationRetrySettings&text=OperationRetrySettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A CompletableFuture that represents outstanding operation. The result of the Task is the CommunicationClient(<xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false">CommunicationClient</xref>) object. </p>
    type: <xref href="CompletableFuture%3CT%3E?alt=CompletableFuture<T>&text=CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax: public CompletableFuture<T> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactoryBase.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
- fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactoryBase<T extends CommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  name: getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactoryBase<T>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  parameters:
  - description: <p>Uri of the service to resolve </p>
    name: serviceUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>Key that identifies the partition to resolve </p>
    name: partitionKey
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="microsoft.servicefabric.services.communication.client.TargetReplicaSelector" data-throw-if-not-resolved="false">TargetReplicaSelector</xref>

      </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  - description: <p>Listener name </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>retry settings </p>
    name: retrySettings
    type: <xref href="microsoft.servicefabric.services.communication.client.OperationRetrySettings?alt=microsoft.servicefabric.services.communication.client.OperationRetrySettings&text=OperationRetrySettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A CompletableFuture that represents outstanding operation. The result of the Task is the CommunicationClient(<xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false">CommunicationClient</xref>) object. </p>
    type: <xref href="CompletableFuture%3CT%3E?alt=CompletableFuture<T>&text=CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax: public CompletableFuture<T> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactoryBase.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactoryBase.getClientAsync*
fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactoryBase<T extends CommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
package: microsoft.servicefabric.services.communication.client
metadata: {}
