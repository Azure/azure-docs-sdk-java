### YamlMime:JavaMember
uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enableRbacAuthorization*"
fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enableRbacAuthorization"
name: "enableRbacAuthorization"
nameWithType: "VaultPatchProperties.enableRbacAuthorization"
members:
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enableRbacAuthorization()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enableRbacAuthorization()"
  name: "enableRbacAuthorization()"
  nameWithType: "VaultPatchProperties.enableRbacAuthorization()"
  summary: "Get the enableRbacAuthorization property: Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the value of this property will not change."
  syntax: "public Boolean enableRbacAuthorization()"
  returns:
    description: "the enableRbacAuthorization value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.keyvault.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.13.0
