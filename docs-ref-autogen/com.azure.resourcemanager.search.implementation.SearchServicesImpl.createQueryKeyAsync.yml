### YamlMime:JavaMember
uid: "com.azure.resourcemanager.search.implementation.SearchServicesImpl.createQueryKeyAsync*"
fullName: "com.azure.resourcemanager.search.implementation.SearchServicesImpl.createQueryKeyAsync"
name: "createQueryKeyAsync"
nameWithType: "SearchServicesImpl.createQueryKeyAsync"
members:
- uid: "com.azure.resourcemanager.search.implementation.SearchServicesImpl.createQueryKeyAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.search.implementation.SearchServicesImpl.createQueryKeyAsync(String resourceGroupName, String searchServiceName, String name)"
  name: "createQueryKeyAsync(String resourceGroupName, String searchServiceName, String name)"
  nameWithType: "SearchServicesImpl.createQueryKeyAsync(String resourceGroupName, String searchServiceName, String name)"
  summary: "Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "searchServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<QueryKey> createQueryKeyAsync(String resourceGroupName, String searchServiceName, String name)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.search.models.QueryKey?alt=com.azure.resourcemanager.search.models.QueryKey&text=QueryKey\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.search.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-search:2.3.0
