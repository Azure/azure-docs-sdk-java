### YamlMime:JavaType
uid: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions"
fullName: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions"
name: "MetricAnomalyAlertConditions"
nameWithType: "MetricAnomalyAlertConditions"
summary: "Defines conditions to decide whether the detected anomalies should be included in an alert or not."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MetricAnomalyAlertConditions"
constructors:
- uid: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.MetricAnomalyAlertConditions()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.MetricAnomalyAlertConditions()"
  name: "MetricAnomalyAlertConditions()"
  nameWithType: "MetricAnomalyAlertConditions.MetricAnomalyAlertConditions()"
  syntax: "public MetricAnomalyAlertConditions()"
methods:
- uid: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.getMetricBoundaryCondition()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.getMetricBoundaryCondition()"
  name: "getMetricBoundaryCondition()"
  nameWithType: "MetricAnomalyAlertConditions.getMetricBoundaryCondition()"
  summary: "Gets the boundary condition, an anomaly will be included in the alert if it's value is not within the boundary."
  syntax: "public MetricBoundaryCondition getMetricBoundaryCondition()"
  desc: "Gets the boundary condition, an anomaly will be included in the alert if it's value is not within the boundary."
  returns:
    description: "The boundary condition."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.MetricBoundaryCondition?alt=com.azure.ai.metricsadvisor.administration.models.MetricBoundaryCondition&text=MetricBoundaryCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.getSeverityCondition()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.getSeverityCondition()"
  name: "getSeverityCondition()"
  nameWithType: "MetricAnomalyAlertConditions.getSeverityCondition()"
  summary: "Gets the severity range based condition, an anomaly will be included in the alert only if it's severity falls in the range."
  syntax: "public SeverityCondition getSeverityCondition()"
  desc: "Gets the severity range based condition, an anomaly will be included in the alert only if it's severity falls in the range."
  returns:
    description: "The severity condition."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.SeverityCondition?alt=com.azure.ai.metricsadvisor.administration.models.SeverityCondition&text=SeverityCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.setMetricBoundaryCondition(com.azure.ai.metricsadvisor.administration.models.MetricBoundaryCondition)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.setMetricBoundaryCondition(MetricBoundaryCondition boundaryCondition)"
  name: "setMetricBoundaryCondition(MetricBoundaryCondition boundaryCondition)"
  nameWithType: "MetricAnomalyAlertConditions.setMetricBoundaryCondition(MetricBoundaryCondition boundaryCondition)"
  summary: "Gets the boundary condition, an anomaly will be included in the alert only if it's value is not within the boundary."
  parameters:
  - description: "The boundary condition."
    name: "boundaryCondition"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.MetricBoundaryCondition?alt=com.azure.ai.metricsadvisor.administration.models.MetricBoundaryCondition&text=MetricBoundaryCondition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricAnomalyAlertConditions setMetricBoundaryCondition(MetricBoundaryCondition boundaryCondition)"
  desc: "Gets the boundary condition, an anomaly will be included in the alert only if it's value is not within the boundary."
  returns:
    description: "The MetricAnomalyAlertConditions object itself."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions?alt=com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions&text=MetricAnomalyAlertConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.setSeverityCondition(com.azure.ai.metricsadvisor.administration.models.AnomalySeverity,com.azure.ai.metricsadvisor.administration.models.AnomalySeverity)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.setSeverityCondition(AnomalySeverity min, AnomalySeverity max)"
  name: "setSeverityCondition(AnomalySeverity min, AnomalySeverity max)"
  nameWithType: "MetricAnomalyAlertConditions.setSeverityCondition(AnomalySeverity min, AnomalySeverity max)"
  summary: "Sets the severity range based condition, an anomaly will be included in the alert only if it's severity falls in the range."
  parameters:
  - description: "The lower bound of severity range."
    name: "min"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AnomalySeverity?alt=com.azure.ai.metricsadvisor.administration.models.AnomalySeverity&text=AnomalySeverity\" data-throw-if-not-resolved=\"False\" />"
  - description: "The upper bound of severity range."
    name: "max"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AnomalySeverity?alt=com.azure.ai.metricsadvisor.administration.models.AnomalySeverity&text=AnomalySeverity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricAnomalyAlertConditions setSeverityCondition(AnomalySeverity min, AnomalySeverity max)"
  desc: "Sets the severity range based condition, an anomaly will be included in the alert only if it's severity falls in the range."
  returns:
    description: "The MetricAnomalyAlertConditions object itself."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions?alt=com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions&text=MetricAnomalyAlertConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.setSeverityRangeCondition(com.azure.ai.metricsadvisor.administration.models.SeverityCondition)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions.setSeverityRangeCondition(SeverityCondition severityCondition)"
  name: "setSeverityRangeCondition(SeverityCondition severityCondition)"
  nameWithType: "MetricAnomalyAlertConditions.setSeverityRangeCondition(SeverityCondition severityCondition)"
  summary: "Sets the severity range based condition, an anomaly will be included in the alert only if it's severity falls in the range."
  parameters:
  - description: "The condition based on severity of anomalies."
    name: "severityCondition"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.SeverityCondition?alt=com.azure.ai.metricsadvisor.administration.models.SeverityCondition&text=SeverityCondition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricAnomalyAlertConditions setSeverityRangeCondition(SeverityCondition severityCondition)"
  desc: "Sets the severity range based condition, an anomaly will be included in the alert only if it's severity falls in the range."
  returns:
    description: "The MetricAnomalyAlertConditions object itself."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions?alt=com.azure.ai.metricsadvisor.administration.models.MetricAnomalyAlertConditions&text=MetricAnomalyAlertConditions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines conditions to decide whether the detected anomalies should be included in an alert or not."
metadata: {}
package: "com.azure.ai.metricsadvisor.administration.models"
artifact: com.azure:azure-ai-metricsadvisor:1.1.6
