### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.list()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.listAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroup(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroupAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.failoverPriorityChange(String groupName, String accountName, List<Location> failoverPolicies)
  name: failoverPriorityChange(String groupName, String accountName, List<Location> failoverPolicies)
  nameWithType: CosmosDBAccounts.failoverPriorityChange(String groupName, String accountName, List<Location> failoverPolicies)
  parameters:
  - description: <p>the group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the account name </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the list of failover policies </p>
    name: failoverPolicies
    type: List&lt;<xref href="com.microsoft.azure.management.cosmosdb.Location?alt=com.microsoft.azure.management.cosmosdb.Location&text=Location" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Changes the failover priority for the Azure CosmosDB database account. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. </p>
  syntax: public void failoverPriorityChange(String groupName, String accountName, List<Location> failoverPolicies)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.failoverPriorityChange(String,String,List<Location>)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.failoverPriorityChangeAsync(String groupName, String accountName, List<Location> failoverPolicies)
  name: failoverPriorityChangeAsync(String groupName, String accountName, List<Location> failoverPolicies)
  nameWithType: CosmosDBAccounts.failoverPriorityChangeAsync(String groupName, String accountName, List<Location> failoverPolicies)
  parameters:
  - description: <p>the group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the account name </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the list of failover policies </p>
    name: failoverPolicies
    type: List&lt;<xref href="com.microsoft.azure.management.cosmosdb.Location?alt=com.microsoft.azure.management.cosmosdb.Location&text=Location" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the ServiceResponse object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Changes the failover priority for the Azure CosmosDB database account. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. </p>
  syntax: public Observable<Void> failoverPriorityChangeAsync(String groupName, String accountName, List<Location> failoverPolicies)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.failoverPriorityChangeAsync(String,String,List<Location>)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.listConnectionStrings(String groupName, String accountName)
  name: listConnectionStrings(String groupName, String accountName)
  nameWithType: CosmosDBAccounts.listConnectionStrings(String groupName, String accountName)
  parameters:
  - description: <p>the group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the account name </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a list of connection strings </p>
    type: <xref href="DatabaseAccountListConnectionStringsResult?alt=DatabaseAccountListConnectionStringsResult&text=DatabaseAccountListConnectionStringsResult" data-throw-if-not-resolved="False"/>
  summary: <p>Lists the connection strings for the specified Azure CosmosDB database account. </p>
  syntax: public DatabaseAccountListConnectionStringsResult listConnectionStrings(String groupName, String accountName)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.listConnectionStrings(String,String)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.listConnectionStringsAsync(String groupName, String accountName)
  name: listConnectionStringsAsync(String groupName, String accountName)
  nameWithType: CosmosDBAccounts.listConnectionStringsAsync(String groupName, String accountName)
  parameters:
  - description: <p>the group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the account name </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a list of connection strings </p>
    type: <xref href="Observable%3CDatabaseAccountListConnectionStringsResult%3E?alt=Observable%3CDatabaseAccountListConnectionStringsResult%3E&text=Observable%3CDatabaseAccountListConnectionStringsResult%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Lists the connection strings for the specified Azure CosmosDB database account. </p>
  syntax: public Observable<DatabaseAccountListConnectionStringsResult> listConnectionStringsAsync(String groupName, String accountName)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.listConnectionStringsAsync(String,String)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.listKeys(String groupName, String accountName)
  name: listKeys(String groupName, String accountName)
  nameWithType: CosmosDBAccounts.listKeys(String groupName, String accountName)
  parameters:
  - description: <p>the group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the account name </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a list of keys </p>
    type: <xref href="DatabaseAccountListKeysResult?alt=DatabaseAccountListKeysResult&text=DatabaseAccountListKeysResult" data-throw-if-not-resolved="False"/>
  summary: <p>Lists the access keys for the specified Azure CosmosDB database account. </p>
  syntax: public DatabaseAccountListKeysResult listKeys(String groupName, String accountName)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.listKeys(String,String)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.listKeysAsync(String groupName, String accountName)
  name: listKeysAsync(String groupName, String accountName)
  nameWithType: CosmosDBAccounts.listKeysAsync(String groupName, String accountName)
  parameters:
  - description: <p>the group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the account name </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a list of keys </p>
    type: <xref href="Observable%3CDatabaseAccountListKeysResult%3E?alt=Observable%3CDatabaseAccountListKeysResult%3E&text=Observable%3CDatabaseAccountListKeysResult%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Lists the access keys for the specified Azure CosmosDB database account. </p>
  syntax: public Observable<DatabaseAccountListKeysResult> listKeysAsync(String groupName, String accountName)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.listKeysAsync(String,String)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.regenerateKey(String groupName, String accountName, KeyKind keyKind)
  name: regenerateKey(String groupName, String accountName, KeyKind keyKind)
  nameWithType: CosmosDBAccounts.regenerateKey(String groupName, String accountName, KeyKind keyKind)
  parameters:
  - description: <p>the group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the account name </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the key kind </p>
    name: keyKind
    type: <xref href="com.microsoft.azure.management.cosmosdb.KeyKind?alt=com.microsoft.azure.management.cosmosdb.KeyKind&text=KeyKind" data-throw-if-not-resolved="False"/>
  summary: <p>Regenerates an access key for the specified Azure CosmosDB database account. </p>
  syntax: public void regenerateKey(String groupName, String accountName, KeyKind keyKind)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.regenerateKey(String,String,KeyKind)
- fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.regenerateKeyAsync(String groupName, String accountName, KeyKind keyKind)
  name: regenerateKeyAsync(String groupName, String accountName, KeyKind keyKind)
  nameWithType: CosmosDBAccounts.regenerateKeyAsync(String groupName, String accountName, KeyKind keyKind)
  parameters:
  - description: <p>the group name </p>
    name: groupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the account name </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the key kind </p>
    name: keyKind
    type: <xref href="com.microsoft.azure.management.cosmosdb.KeyKind?alt=com.microsoft.azure.management.cosmosdb.KeyKind&text=KeyKind" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ServiceResponse object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Regenerates an access key for the specified Azure CosmosDB database account. </p>
  syntax: public Observable<Void> regenerateKeyAsync(String groupName, String accountName, KeyKind keyKind)
  uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts.regenerateKeyAsync(String,String,KeyKind)
nameWithType: CosmosDBAccounts
syntax: public interface CosmosDBAccounts extends SupportsCreating<CosmosDBAccount.DefinitionStages.Blank>,HasManager<CosmosDBManager>,HasInner<DatabaseAccountsInner>,SupportsBatchCreation<CosmosDBAccount>,SupportsGettingById<CosmosDBAccount>,SupportsDeletingById,SupportsDeletingByResourceGroup,SupportsListing<CosmosDBAccount>,SupportsListingByResourceGroup<CosmosDBAccount>,SupportsGettingByResourceGroup<CosmosDBAccount>
type: interface
uid: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts
fullName: com.microsoft.azure.management.cosmosdb.CosmosDBAccounts
name: CosmosDBAccounts
package: com.microsoft.azure.management.cosmosdb
summary: <p>Entry point to Cosmos DB management API. </p>
metadata: {}
