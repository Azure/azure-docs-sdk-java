### YamlMime:JavaType
uid: "com.azure.resourcemanager.appplatform.models.SpringService"
fullName: "com.azure.resourcemanager.appplatform.models.SpringService"
name: "SpringService"
nameWithType: "SpringService"
summary: "An immutable client-side representation of an Azure Spring Service."
syntax: "public interface SpringService extends GroupableResource<AppPlatformManager,ServiceResourceInner>, Refreshable<SpringService>, Updatable<SpringService.Update>"
methods:
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.apps()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.apps()"
  name: "apps()"
  nameWithType: "SpringService.apps()"
  modifiers:
  - "abstract"
  syntax: "public abstract SpringApps apps()"
  returns:
    description: "the entry point of the spring app"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.SpringApps?alt=com.azure.resourcemanager.appplatform.models.SpringApps&text=SpringApps\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.certificates()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.certificates()"
  name: "certificates()"
  nameWithType: "SpringService.certificates()"
  modifiers:
  - "abstract"
  syntax: "public abstract SpringServiceCertificates certificates()"
  returns:
    description: "the entry point of the spring service certificate"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.SpringServiceCertificates?alt=com.azure.resourcemanager.appplatform.models.SpringServiceCertificates&text=SpringServiceCertificates\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.disableTestEndpoint()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.disableTestEndpoint()"
  name: "disableTestEndpoint()"
  nameWithType: "SpringService.disableTestEndpoint()"
  summary: "Disables the test endpoint for the service."
  modifiers:
  - "abstract"
  syntax: "public abstract void disableTestEndpoint()"
  desc: "Disables the test endpoint for the service."
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.disableTestEndpointAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.disableTestEndpointAsync()"
  name: "disableTestEndpointAsync()"
  nameWithType: "SpringService.disableTestEndpointAsync()"
  summary: "Disables the test endpoint for the service."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Void> disableTestEndpointAsync()"
  desc: "Disables the test endpoint for the service."
  returns:
    description: "null"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.enableTestEndpoint()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.enableTestEndpoint()"
  name: "enableTestEndpoint()"
  nameWithType: "SpringService.enableTestEndpoint()"
  summary: "Enables the test endpoint for the service."
  modifiers:
  - "abstract"
  syntax: "public abstract TestKeys enableTestEndpoint()"
  desc: "Enables the test endpoint for the service."
  returns:
    description: "all test keys"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.enableTestEndpointAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.enableTestEndpointAsync()"
  name: "enableTestEndpointAsync()"
  nameWithType: "SpringService.enableTestEndpointAsync()"
  summary: "Enables the test endpoint for the service."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<TestKeys> enableTestEndpointAsync()"
  desc: "Enables the test endpoint for the service."
  returns:
    description: "all test keys"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.getDefaultConfigurationService()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.getDefaultConfigurationService()"
  name: "getDefaultConfigurationService()"
  nameWithType: "SpringService.getDefaultConfigurationService()"
  modifiers:
  - "abstract"
  syntax: "public abstract SpringConfigurationService getDefaultConfigurationService()"
  returns:
    description: "default Configuration Service for Enterprise Tier"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.SpringConfigurationService?alt=com.azure.resourcemanager.appplatform.models.SpringConfigurationService&text=SpringConfigurationService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.getDefaultServiceRegistry()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.getDefaultServiceRegistry()"
  name: "getDefaultServiceRegistry()"
  nameWithType: "SpringService.getDefaultServiceRegistry()"
  modifiers:
  - "abstract"
  syntax: "public abstract SpringServiceRegistry getDefaultServiceRegistry()"
  returns:
    description: "default Service Registry for Enterprise Tier"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.SpringServiceRegistry?alt=com.azure.resourcemanager.appplatform.models.SpringServiceRegistry&text=SpringServiceRegistry\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.getMonitoringSetting()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.getMonitoringSetting()"
  name: "getMonitoringSetting()"
  nameWithType: "SpringService.getMonitoringSetting()"
  modifiers:
  - "abstract"
  syntax: "public abstract MonitoringSettingProperties getMonitoringSetting()"
  returns:
    description: "Monitoring Setting properties of the service"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.MonitoringSettingProperties?alt=com.azure.resourcemanager.appplatform.models.MonitoringSettingProperties&text=MonitoringSettingProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.getMonitoringSettingAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.getMonitoringSettingAsync()"
  name: "getMonitoringSettingAsync()"
  nameWithType: "SpringService.getMonitoringSettingAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<MonitoringSettingProperties> getMonitoringSettingAsync()"
  returns:
    description: "Monitoring Setting properties of the service"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.MonitoringSettingProperties?alt=com.azure.resourcemanager.appplatform.models.MonitoringSettingProperties&text=MonitoringSettingProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.getServerProperties()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.getServerProperties()"
  name: "getServerProperties()"
  nameWithType: "SpringService.getServerProperties()"
  modifiers:
  - "abstract"
  syntax: "public abstract ConfigServerProperties getServerProperties()"
  returns:
    description: "server properties of the service"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.ConfigServerProperties?alt=com.azure.resourcemanager.appplatform.models.ConfigServerProperties&text=ConfigServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.getServerPropertiesAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.getServerPropertiesAsync()"
  name: "getServerPropertiesAsync()"
  nameWithType: "SpringService.getServerPropertiesAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<ConfigServerProperties> getServerPropertiesAsync()"
  returns:
    description: "server properties of the service"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.ConfigServerProperties?alt=com.azure.resourcemanager.appplatform.models.ConfigServerProperties&text=ConfigServerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.listTestKeys()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.listTestKeys()"
  name: "listTestKeys()"
  nameWithType: "SpringService.listTestKeys()"
  summary: "Lists test keys for the service."
  modifiers:
  - "abstract"
  syntax: "public abstract TestKeys listTestKeys()"
  desc: "Lists test keys for the service."
  returns:
    description: "all test keys"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.listTestKeysAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.listTestKeysAsync()"
  name: "listTestKeysAsync()"
  nameWithType: "SpringService.listTestKeysAsync()"
  summary: "Lists test keys for the service."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<TestKeys> listTestKeysAsync()"
  desc: "Lists test keys for the service."
  returns:
    description: "all test keys"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.regenerateTestKeys(com.azure.resourcemanager.appplatform.models.TestKeyType)"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.regenerateTestKeys(TestKeyType keyType)"
  name: "regenerateTestKeys(TestKeyType keyType)"
  nameWithType: "SpringService.regenerateTestKeys(TestKeyType keyType)"
  summary: "Regenerates a test key for the Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the type of the regenerated key"
    name: "keyType"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeyType?alt=com.azure.resourcemanager.appplatform.models.TestKeyType&text=TestKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TestKeys regenerateTestKeys(TestKeyType keyType)"
  desc: "Regenerates a test key for the Service."
  returns:
    description: "all test keys"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.regenerateTestKeysAsync(com.azure.resourcemanager.appplatform.models.TestKeyType)"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.regenerateTestKeysAsync(TestKeyType keyType)"
  name: "regenerateTestKeysAsync(TestKeyType keyType)"
  nameWithType: "SpringService.regenerateTestKeysAsync(TestKeyType keyType)"
  summary: "Regenerates a test key for the Service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the type of the regenerated key"
    name: "keyType"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeyType?alt=com.azure.resourcemanager.appplatform.models.TestKeyType&text=TestKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<TestKeys> regenerateTestKeysAsync(TestKeyType keyType)"
  desc: "Regenerates a test key for the Service."
  returns:
    description: "all test keys"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.TestKeys?alt=com.azure.resourcemanager.appplatform.models.TestKeys&text=TestKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringService.sku()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringService.sku()"
  name: "sku()"
  nameWithType: "SpringService.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract Sku sku()"
  returns:
    description: "Sku of the service"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.Sku?alt=com.azure.resourcemanager.appplatform.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of an Azure Spring Service."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.AppPlatformManager?alt=com.azure.resourcemanager.appplatform.AppPlatformManager&text=AppPlatformManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ServiceResourceInner&text=ServiceResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringService?alt=com.azure.resourcemanager.appplatform.models.SpringService&text=SpringService\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringService.Update?alt=com.azure.resourcemanager.appplatform.models.SpringService.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.appplatform.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.19.0
