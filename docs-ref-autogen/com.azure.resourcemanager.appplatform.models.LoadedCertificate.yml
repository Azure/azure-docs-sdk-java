### YamlMime:JavaType
uid: "com.azure.resourcemanager.appplatform.models.LoadedCertificate"
fullName: "com.azure.resourcemanager.appplatform.models.LoadedCertificate"
name: "LoadedCertificate"
nameWithType: "LoadedCertificate"
summary: "Loaded certificate payload."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LoadedCertificate"
constructors:
- uid: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.LoadedCertificate()"
  fullName: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.LoadedCertificate()"
  name: "LoadedCertificate()"
  nameWithType: "LoadedCertificate.LoadedCertificate()"
  syntax: "public LoadedCertificate()"
methods:
- uid: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.loadTrustStore()"
  fullName: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.loadTrustStore()"
  name: "loadTrustStore()"
  nameWithType: "LoadedCertificate.loadTrustStore()"
  summary: "Get the load<wbr>Trust<wbr>Store property: Indicate whether the certificate will be loaded into default trust store, only work for Java runtime."
  syntax: "public Boolean loadTrustStore()"
  desc: "Get the loadTrustStore property: Indicate whether the certificate will be loaded into default trust store, only work for Java runtime."
  returns:
    description: "the loadTrustStore value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.resourceId()"
  fullName: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.resourceId()"
  name: "resourceId()"
  nameWithType: "LoadedCertificate.resourceId()"
  summary: "Get the resource<wbr>Id property: Resource Id of loaded certificate."
  syntax: "public String resourceId()"
  desc: "Get the resourceId property: Resource Id of loaded certificate."
  returns:
    description: "the resourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.validate()"
  fullName: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.validate()"
  name: "validate()"
  nameWithType: "LoadedCertificate.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.withLoadTrustStore(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.withLoadTrustStore(Boolean loadTrustStore)"
  name: "withLoadTrustStore(Boolean loadTrustStore)"
  nameWithType: "LoadedCertificate.withLoadTrustStore(Boolean loadTrustStore)"
  summary: "Set the load<wbr>Trust<wbr>Store property: Indicate whether the certificate will be loaded into default trust store, only work for Java runtime."
  parameters:
  - description: "the loadTrustStore value to set."
    name: "loadTrustStore"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoadedCertificate withLoadTrustStore(Boolean loadTrustStore)"
  desc: "Set the loadTrustStore property: Indicate whether the certificate will be loaded into default trust store, only work for Java runtime."
  returns:
    description: "the LoadedCertificate object itself."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.LoadedCertificate?alt=com.azure.resourcemanager.appplatform.models.LoadedCertificate&text=LoadedCertificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.withResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.models.LoadedCertificate.withResourceId(String resourceId)"
  name: "withResourceId(String resourceId)"
  nameWithType: "LoadedCertificate.withResourceId(String resourceId)"
  summary: "Set the resource<wbr>Id property: Resource Id of loaded certificate."
  parameters:
  - description: "the resourceId value to set."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoadedCertificate withResourceId(String resourceId)"
  desc: "Set the resourceId property: Resource Id of loaded certificate."
  returns:
    description: "the LoadedCertificate object itself."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.LoadedCertificate?alt=com.azure.resourcemanager.appplatform.models.LoadedCertificate&text=LoadedCertificate\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Loaded certificate payload."
metadata: {}
package: "com.azure.resourcemanager.appplatform.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.16.0
