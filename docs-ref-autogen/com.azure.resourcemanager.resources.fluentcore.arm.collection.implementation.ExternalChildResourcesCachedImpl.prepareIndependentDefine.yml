### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ExternalChildResourcesCachedImpl.prepareIndependentDefine*"
fullName: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ExternalChildResourcesCachedImpl<FluentModelTImpl,FluentModelT,InnerModelT,ParentImplT,ParentT>.prepareIndependentDefine"
name: "prepareIndependentDefine"
nameWithType: "ExternalChildResourcesCachedImpl<FluentModelTImpl,FluentModelT,InnerModelT,ParentImplT,ParentT>.prepareIndependentDefine"
members:
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ExternalChildResourcesCachedImpl.prepareIndependentDefine(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ExternalChildResourcesCachedImpl<FluentModelTImpl,FluentModelT,InnerModelT,ParentImplT,ParentT>.prepareIndependentDefine(String name)"
  name: "prepareIndependentDefine(String name)"
  nameWithType: "ExternalChildResourcesCachedImpl<FluentModelTImpl,FluentModelT,InnerModelT,ParentImplT,ParentT>.prepareIndependentDefine(String name)"
  summary: "Prepare for independent definition of a new external child resource (without the parent context)."
  parameters:
  - description: "the name of the new external child resource"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final FluentModelTImpl prepareIndependentDefine(String name)"
  returns:
    description: "the external child resource prepared for create"
    type: "<xref href=\"FluentModelTImpl?alt=FluentModelTImpl&text=FluentModelTImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
