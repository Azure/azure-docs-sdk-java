### YamlMime:JavaMember
uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync*"
fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync"
name: "uploadRangeFromURLWithRestResponseAsync"
nameWithType: "FilesImpl.uploadRangeFromURLWithRestResponseAsync"
members:
- uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Context context)"
  name: "uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Context context)"
  nameWithType: "FilesImpl.uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Context context)"
  summary: "Upload a range of bytes to a file where the contents are read from a URL."
  parameters:
  - description: "The name of the target share."
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path of the target file."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Writes data to the specified byte range in the file."
    name: "range"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source."
    name: "copySource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<FilesUploadRangeFromURLResponse> uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse?alt=com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse&text=FilesUploadRangeFromURLResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,byte[],java.lang.String,com.azure.storage.file.share.models.SourceModifiedAccessConditions,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Integer timeout, String sourceRange, byte[] sourceContentCrc64, String leaseId, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  name: "uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Integer timeout, String sourceRange, byte[] sourceContentCrc64, String leaseId, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  nameWithType: "FilesImpl.uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Integer timeout, String sourceRange, byte[] sourceContentCrc64, String leaseId, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  summary: "Upload a range of bytes to a file where the contents are read from a URL."
  parameters:
  - description: "The name of the target share."
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path of the target file."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Writes data to the specified byte range in the file."
    name: "range"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source."
    name: "copySource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Bytes of source data in the specified range."
    name: "sourceRange"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specify the crc64 calculated for the range of bytes that must be read from the copy source."
    name: "sourceContentCrc64"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "sourceModifiedAccessConditions"
    type: "<xref href=\"com.azure.storage.file.share.models.SourceModifiedAccessConditions?alt=com.azure.storage.file.share.models.SourceModifiedAccessConditions&text=SourceModifiedAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<FilesUploadRangeFromURLResponse> uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Integer timeout, String sourceRange, byte[] sourceContentCrc64, String leaseId, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse?alt=com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse&text=FilesUploadRangeFromURLResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share.implementation"
artifact: com.azure:azure-storage-file-share:12.8.0
