### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment*"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment"
name: "deleteIndividualEnrollment"
nameWithType: "ProvisioningServiceClient.deleteIndividualEnrollment"
members:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  name: "deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  nameWithType: "ProvisioningServiceClient.deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  summary: "Delete the individualEnrollment information.\n\nThis method will remove the individualEnrollment from the Device Provisioning Service using the provided <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> information. The Device Provisioning Service will care about the registrationId and the eTag on the individualEnrollment. If you want to delete the individualEnrollment regardless the eTag, you can set the `eTag=\"*\"` into the individualEnrollment, or use the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteIndividualEnrollment(String)\"></xref> passing only the registrationId.\n\nNote that delete the individualEnrollment will not remove the Device itself from the IotHub.\n\nIf the registrationId does not exists or the eTag not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the individualEnrollment \"registrationId-1\".\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the individualEnrollment information.\n     IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);\n\n     // Delete the individualEnrollment information.\n     deviceProvisioningServiceClient.deleteIndividualEnrollment(enrollmentResult);\n }\n```"
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> that identifies the individualEnrollment. It cannot be <code>null</code>."
    name: "individualEnrollment"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment&text=IndividualEnrollment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  exceptions:
  - description: "if the provided parameter is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId)"
  name: "deleteIndividualEnrollment(String registrationId)"
  nameWithType: "ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId)"
  summary: "Delete the individualEnrollment information.\n\nThis method will remove the individualEnrollment from the Device Provisioning Service using the provided registrationId. It will delete the enrollment regardless the eTag. It means that this API correspond to the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteIndividualEnrollment(String, String)\"></xref> with the `eTag=\"*\"`.\n\nNote that delete the enrollment will not remove the Device itself from the IotHub.\n\nIf the registrationId does not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the individualEnrollment \"registrationId-1\".\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the individualEnrollment information.\n     deviceProvisioningServiceClient.deleteIndividualEnrollment(REGISTRATION_ID);\n }\n```"
  parameters:
  - description: "the <code>String</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty."
    name: "registrationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteIndividualEnrollment(String registrationId)"
  exceptions:
  - description: "if the provided registrationId is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId, String eTag)"
  name: "deleteIndividualEnrollment(String registrationId, String eTag)"
  nameWithType: "ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId, String eTag)"
  summary: "Delete the individualEnrollment information.\n\nThis method will remove the individualEnrollment from the Device Provisioning Service using the provided registrationId and eTag. If you want to delete the enrollment regardless the eTag, you can use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteIndividualEnrollment(String)\"></xref> or you can pass the eTag as `null`, empty, or `\"*\"`.\n\nNote that delete the enrollment will not remove the Device itself from the IotHub.\n\nIf the registrationId does not exists or the eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the individualEnrollment \"registrationId-1\" regardless the eTag.\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n private Static final String ANY_ETAG = \"*\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the individualEnrollment information.\n     deviceProvisioningServiceClient.deleteIndividualEnrollment(REGISTRATION_ID, ANY_ETAG);\n }\n```"
  parameters:
  - description: "the <code>String</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty."
    name: "registrationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> with the IndividualEnrollment eTag. It can be <code>null</code> or empty.\n             The Device Provisioning Service will ignore it in all of these cases."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteIndividualEnrollment(String registrationId, String eTag)"
  exceptions:
  - description: "if the provided registrationId is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
