### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  id: "ReadableWrappersImpl"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  children:
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertListToInnerAsync(rx.Observable<java.util.List<InnerT>>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertPageToInnerAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertToPagedList(java.util.List<InnerT>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.ReadableWrappersImpl()"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.microsoft.azure.PagedList<InnerT>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(java.util.List<InnerT>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync(rx.Observable<java.util.List<InnerT>>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  langs:
  - "java"
  name: "ReadableWrappersImpl<T,ImplT,InnerT>"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>"
  type: "Class"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  summary: "Base class for readable wrapper collections, i.e. those whose models can only be read, not created. (Internal use only)"
  syntax:
    content: "public abstract class ReadableWrappersImpl<T,ImplT,InnerT>"
    typeParameters:
    - id: "T"
    - id: "ImplT"
    - id: "InnerT"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertListToInnerAsync(rx.Observable<java.util.List<InnerT>>)"
  id: "<InnerT>convertListToInnerAsync(rx.Observable<java.util.List<InnerT>>)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "<InnerT>convertListToInnerAsync(Observable<List<InnerT>> innerList)"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertListToInnerAsync(Observable<List<InnerT>> innerList)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertListToInnerAsync(Observable<List<InnerT>> innerList)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.convertListToInnerAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  summary: "Converts Observable of list to Observable of Inner."
  syntax:
    content: "public static Observable<InnerT> <InnerT>convertListToInnerAsync(Observable<List<InnerT>> innerList)"
    parameters:
    - id: "innerList"
      type: "rx.Observable<java.util.List<InnerT>>"
      description: "list to be converted."
    return:
      type: "rx.Observable<InnerT>"
      description: "Observable for list of inner."
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertPageToInnerAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  id: "<InnerT>convertPageToInnerAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "<InnerT>convertPageToInnerAsync(Observable<Page<InnerT>> innerPage)"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertPageToInnerAsync(Observable<Page<InnerT>> innerPage)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertPageToInnerAsync(Observable<Page<InnerT>> innerPage)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.convertPageToInnerAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  summary: "Converts Observable of page to Observable of Inner."
  syntax:
    content: "public static Observable<InnerT> <InnerT>convertPageToInnerAsync(Observable<Page<InnerT>> innerPage)"
    parameters:
    - id: "innerPage"
      type: "rx.Observable<com.microsoft.azure.Page<InnerT>>"
      description: "Page to be converted."
    return:
      type: "rx.Observable<InnerT>"
      description: "Observable for list of inner."
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertToPagedList(java.util.List<InnerT>)"
  id: "<InnerT>convertToPagedList(java.util.List<InnerT>)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "<InnerT>convertToPagedList(List<InnerT> list)"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertToPagedList(List<InnerT> list)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertToPagedList(List<InnerT> list)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.convertToPagedList*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  summary: "Converts the List to PagedList."
  syntax:
    content: "public static PagedList<InnerT> <InnerT>convertToPagedList(List<InnerT> list)"
    parameters:
    - id: "list"
      type: "java.util.List<InnerT>"
      description: "list to be converted in to paged list"
    return:
      type: "com.microsoft.azure.PagedList<InnerT>"
      description: "the Paged list for the inner type."
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.ReadableWrappersImpl()"
  id: "ReadableWrappersImpl()"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "ReadableWrappersImpl()"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.ReadableWrappersImpl()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.ReadableWrappersImpl()"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.ReadableWrappersImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  syntax:
    content: "protected ReadableWrappersImpl()"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.microsoft.azure.PagedList<InnerT>)"
  id: "wrapList(com.microsoft.azure.PagedList<InnerT>)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "wrapList(PagedList<InnerT> pagedList)"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapList(PagedList<InnerT> pagedList)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapList(PagedList<InnerT> pagedList)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  syntax:
    content: "protected PagedList<T> wrapList(PagedList<InnerT> pagedList)"
    parameters:
    - id: "pagedList"
      type: "com.microsoft.azure.PagedList<InnerT>"
    return:
      type: "com.microsoft.azure.PagedList<T>"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(java.util.List<InnerT>)"
  id: "wrapList(java.util.List<InnerT>)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "wrapList(List<InnerT> list)"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapList(List<InnerT> list)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapList(List<InnerT> list)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  syntax:
    content: "protected PagedList<T> wrapList(List<InnerT> list)"
    parameters:
    - id: "list"
      type: "java.util.List<InnerT>"
    return:
      type: "com.microsoft.azure.PagedList<T>"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync(rx.Observable<java.util.List<InnerT>>)"
  id: "wrapListAsync(rx.Observable<java.util.List<InnerT>>)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "wrapListAsync(Observable<List<InnerT>> innerList)"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapListAsync(Observable<List<InnerT>> innerList)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapListAsync(Observable<List<InnerT>> innerList)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  syntax:
    content: "protected Observable<T> wrapListAsync(Observable<List<InnerT>> innerList)"
    parameters:
    - id: "innerList"
      type: "rx.Observable<java.util.List<InnerT>>"
    return:
      type: "rx.Observable<T>"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)"
  id: "wrapModel(InnerT)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "wrapModel(InnerT inner)"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapModel(InnerT inner)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapModel(InnerT inner)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  syntax:
    content: "protected abstract ImplT wrapModel(InnerT inner)"
    parameters:
    - id: "inner"
      type: "InnerT"
    return:
      type: "ImplT"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  id: "wrapPageAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  parent: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  langs:
  - "java"
  name: "wrapPageAsync(Observable<Page<InnerT>> innerPage)"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapPageAsync(Observable<Page<InnerT>> innerPage)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapPageAsync(Observable<Page<InnerT>> innerPage)"
  overload: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
  syntax:
    content: "protected Observable<T> wrapPageAsync(Observable<Page<InnerT>> innerPage)"
    parameters:
    - id: "innerPage"
      type: "rx.Observable<com.microsoft.azure.Page<InnerT>>"
    return:
      type: "rx.Observable<T>"
references:
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.ReadableWrappersImpl*"
  name: "ReadableWrappersImpl"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.ReadableWrappersImpl"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.ReadableWrappersImpl"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
- uid: "InnerT"
  spec.java:
  - uid: "InnerT"
    name: "InnerT"
    fullName: "InnerT"
- uid: "ImplT"
  spec.java:
  - uid: "ImplT"
    name: "ImplT"
    fullName: "ImplT"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel*"
  name: "wrapModel"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapModel"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapModel"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
- uid: "com.microsoft.azure.PagedList<InnerT>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "InnerT"
    name: "InnerT"
    fullName: "InnerT"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.PagedList<T>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList*"
  name: "wrapList"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapList"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapList"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
- uid: "java.util.List<InnerT>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "InnerT"
    name: "InnerT"
    fullName: "InnerT"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.convertToPagedList*"
  name: "<InnerT>convertToPagedList"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertToPagedList"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertToPagedList"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
- uid: "rx.Observable<com.microsoft.azure.Page<InnerT>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "InnerT"
    name: "InnerT"
    fullName: "InnerT"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<T>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync*"
  name: "wrapPageAsync"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapPageAsync"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapPageAsync"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
- uid: "rx.Observable<java.util.List<InnerT>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "InnerT"
    name: "InnerT"
    fullName: "InnerT"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync*"
  name: "wrapListAsync"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.wrapListAsync"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.wrapListAsync"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
- uid: "rx.Observable<InnerT>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "InnerT"
    name: "InnerT"
    fullName: "InnerT"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.convertListToInnerAsync*"
  name: "<InnerT>convertListToInnerAsync"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertListToInnerAsync"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertListToInnerAsync"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.convertPageToInnerAsync*"
  name: "<InnerT>convertPageToInnerAsync"
  nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertPageToInnerAsync"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>.<InnerT>convertPageToInnerAsync"
  package: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.PagedList"
  name: "PagedList"
  nameWithType: "PagedList"
  fullName: "com.microsoft.azure.PagedList"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.Page"
  name: "Page"
  nameWithType: "Page"
  fullName: "com.microsoft.azure.Page"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
