items:
- uid: microsoft.servicefabric.services.runtime._stateful_service_base
  id: _stateful_service_base
  parent: microsoft.servicefabric.services.runtime
  children:
  - microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription)
  - microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription,Duration)
  - microsoft.servicefabric.services.runtime._stateful_service_base.createServiceReplicaListeners()
  - microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses()
  - microsoft.servicefabric.services.runtime._stateful_service_base.getPartition()
  - microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext()
  - microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica()
  - microsoft.servicefabric.services.runtime._stateful_service_base.onAbort()
  - microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync(ReplicaRole,CancellationToken)
  - microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync(CancellationToken)
  - microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync(RestoreContext,CancellationToken)
  - microsoft.servicefabric.services.runtime._stateful_service_base.onOpenAsync(ReplicaOpenMode,CancellationToken)
  - microsoft.servicefabric.services.runtime._stateful_service_base.runAsync(CancellationToken)
  - microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses(Map<String, String>)
  - microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 26
  package: microsoft.servicefabric.services.runtime
  summary: <p>Represents base class for Microsoft Service Fabric based stateful reliable service. </p>
  syntax: &o1
    content: public class StatefulServiceBase
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - microsoft.servicefabric.services.runtime._stateful_service_base.createStateProviderReplica()
  - microsoft.servicefabric.services.runtime._stateful_service_base.setPartition(StatefulServicePartition)
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription)
  id: backupAsync(BackupDescription)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: backupAsync(BackupDescription backupDescription)
  nameWithType: StatefulServiceBase.backupAsync(BackupDescription backupDescription)
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 237
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Performs a backup of all reliable state managed by this <xref href="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupDescription backupDescription)
    parameters:
    - id: backupDescription
      type: microsoft.servicefabric.data._backup_description
      description: <p>A <ref refid="" kindref="compound">BackupDescription</ref> describing the backup request. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription,Duration)
  id: backupAsync(BackupDescription,Duration)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: backupAsync(BackupDescription backupDescription, Duration timeout)
  nameWithType: StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout)
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 252
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Performs a backup of all reliable state managed by this <xref href="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupDescription backupDescription, Duration timeout)
    parameters:
    - id: backupDescription
      type: microsoft.servicefabric.data._backup_description
      description: <p>A <ref refid="" kindref="compound">BackupDescription</ref> describing the backup request. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.createServiceReplicaListeners()
  id: createServiceReplicaListeners()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: createServiceReplicaListeners()
  nameWithType: StatefulServiceBase.createServiceReplicaListeners()
  fullName: List<ServiceReplicaListener> microsoft.servicefabric.services.runtime.StatefulServiceBase.createServiceReplicaListeners()
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.createServiceReplicaListeners*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 122
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Override this method to supply the communication listeners for the service replica. The endpoints returned by the communication listener's are stored as a JSON string of ListenerName, Endpoint string pairs like {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax:
    content: protected List<ServiceReplicaListener> createServiceReplicaListeners()
    return:
      type: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_replica_listenera08ddfce
      description: <p>List of ServiceReplicaListeners </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses()
  id: getAddresses()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: getAddresses()
  nameWithType: StatefulServiceBase.getAddresses()
  fullName: Map<String, String> microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses()
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 77
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Gets list of all the addresses for this service replica as (ListenerName, Endpoint) key-value pair.</p>

    <p></p>
  syntax:
    content: protected Map<String, String> getAddresses()
    return:
      type: 689c8cb5
      description: <p>An <ref refid="" kindref="compound">Map</ref> containing list of addresses as (ListenerName, Endpoint) key-value pair. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getPartition()
  id: getPartition()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: getPartition()
  nameWithType: StatefulServiceBase.getPartition()
  fullName: StatefulServicePartition microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition()
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.getPartition*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 99
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Service partition to which current service replica belongs.</p>

    <p></p>
  syntax:
    content: protected StatefulServicePartition getPartition()
    return:
      type: system.fabric._stateful_service_partition
      description: <p>An <ref refid="" kindref="compound">StatefulServicePartition</ref> that represents the partition to which this service replica belongs. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext()
  id: getServiceContext()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: getServiceContext()
  nameWithType: StatefulServiceBase.getServiceContext()
  fullName: StatefulServiceContext microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext()
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 66
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Gets the service context that this stateful service is operating under. It provides information like ReplicaId, PartitionId, ServiceName etc.</p>

    <p></p>
  syntax:
    content: public StatefulServiceContext getServiceContext()
    return:
      type: system.fabric._stateful_service_context
      description: <p>A <ref refid="" kindref="compound">StatefulServiceContext</ref> that describes the service context. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica()
  id: getStateProviderReplica()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: getStateProviderReplica()
  nameWithType: StatefulServiceBase.getStateProviderReplica()
  fullName: StateProviderReplica microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica()
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 55
  package: microsoft.servicefabric.services.runtime
  syntax:
    content: protected StateProviderReplica getStateProviderReplica()
    return:
      type: microsoft.servicefabric.data._state_provider_replica
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onAbort()
  id: onAbort()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: onAbort()
  nameWithType: StatefulServiceBase.onAbort()
  fullName: void microsoft.servicefabric.services.runtime.StatefulServiceBase.onAbort()
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.onAbort*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 203
  package: microsoft.servicefabric.services.runtime
  summary: <p>Notification that the service is being aborted. RunAsync MAY be running concurrently with the execution of this method, as cancellation is not awaited on the abort path. </p>
  syntax:
    content: protected void onAbort()
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync(ReplicaRole,CancellationToken)
  id: onChangeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 159
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>This method is called as the final step before completing <xref href="system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)" data-throw-if-not-resolved="false"></xref> . Override this method to be notified that ChangeRole has completed for this replica's internal components.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>for this service replica. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <ref refid="" kindref="compound">CompletableFuture</ref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync(CancellationToken)
  id: onCloseAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: onCloseAsync(CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 192
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>This method is called as the final step of closing the service. Override this method to be notified that Close has completed for this replica's internal components.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> onCloseAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <ref refid="" kindref="compound">CompletableFuture</ref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync(RestoreContext,CancellationToken)
  id: onDataLossAsync(RestoreContext,CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 219
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>This method is called during suspected data loss. You can override this method to restore the service in case of data loss.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<Boolean> onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
    parameters:
    - id: context
      type: microsoft.servicefabric.data._restore_context
      description: <p>A <ref refid="" kindref="compound">RestoreContext</ref> to be used to restore the service. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A Task that represents the asynchronous restore operation. True indicates that the state has been restored. False indicates that the replica's state has not been modified. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onOpenAsync(ReplicaOpenMode,CancellationToken)
  id: onOpenAsync(ReplicaOpenMode,CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.onOpenAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 139
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>This method is called as the final step of opening the service. Override this method to be notified that Open has completed for this replica's internal components.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>for this service replica. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <ref refid="" kindref="compound">CompletableFuture</ref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.runAsync(CancellationToken)
  id: runAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: runAsync(CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.runAsync(CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.runAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 175
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Services that want to implement a processing loop which runs when it is primary and has write status, just override this method with their logic.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <ref refid="" kindref="compound">CompletableFuture</ref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses(Map<String, String>)
  id: setAddresses(Map<String, String>)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: setAddresses(Map<String, String> addresses)
  nameWithType: StatefulServiceBase.setAddresses(Map<String, String> addresses)
  fullName: void microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses(Map<String, String> addresses)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 89
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Sets list of all the addresses for this service replica as (ListenerName, Endpoint) key-value pair.</p>

    <p></p>
  syntax:
    content: protected void setAddresses(Map<String, String> addresses)
    parameters:
    - id: addresses
      type: 689c8cb5
      description: <p>An <ref refid="" kindref="compound">Map</ref> containing list of addresses as (ListenerName, Endpoint) key-value pair. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)
  id: StatefulServiceBase(StatefulServiceContext,StateProviderReplica)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  langs:
  - java
  name: StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  nameWithType: StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  overload: microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulServiceBase.java
    startLine: 47
  package: microsoft.servicefabric.services.runtime
  summary: >-
    <p>Creates a new StatefulService.</p>

    <p></p>
  syntax:
    content: protected StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
    parameters:
    - id: serviceContext
      type: system.fabric._stateful_service_context
      description: <p>A <ref refid="" kindref="compound">StatefulServiceContext</ref> that describes the service context. </p>
    - id: stateProviderReplica
      type: microsoft.servicefabric.data._state_provider_replica
      description: <p>A <ref refid="" kindref="compound">StateProviderReplica</ref> that represents a reliable state provider replica. </p>
references:
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase*
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase.StatefulServiceBase
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica*
  name: getStateProviderReplica
  nameWithType: StatefulServiceBase.getStateProviderReplica
  fullName: StateProviderReplica microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica
  package: microsoft.servicefabric.services.runtime
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses*
  name: getAddresses
  nameWithType: StatefulServiceBase.getAddresses
  fullName: Map<String, String> microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses*
  name: setAddresses
  nameWithType: StatefulServiceBase.setAddresses
  fullName: void microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getPartition*
  name: getPartition
  nameWithType: StatefulServiceBase.getPartition
  fullName: StatefulServicePartition microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition
  package: microsoft.servicefabric.services.runtime
- uid: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_replica_listenera08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: microsoft.servicefabric.services.communication.runtime._service_replica_listener
    name: ServiceReplicaListener
    fullName: microsoft.servicefabric.services.communication.runtime.ServiceReplicaListener
    href: microsoft.servicefabric.services.communication.runtime._service_replica_listener.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.createServiceReplicaListeners*
  name: createServiceReplicaListeners
  nameWithType: StatefulServiceBase.createServiceReplicaListeners
  fullName: List<ServiceReplicaListener> microsoft.servicefabric.services.runtime.StatefulServiceBase.createServiceReplicaListeners
  package: microsoft.servicefabric.services.runtime
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onOpenAsync*
  name: onOpenAsync
  nameWithType: StatefulServiceBase.onOpenAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onOpenAsync
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync*
  name: onChangeRoleAsync
  nameWithType: StatefulServiceBase.onChangeRoleAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onChangeRoleAsync
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.runAsync*
  name: runAsync
  nameWithType: StatefulServiceBase.runAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync*
  name: onCloseAsync
  nameWithType: StatefulServiceBase.onCloseAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onCloseAsync
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onAbort*
  name: onAbort
  nameWithType: StatefulServiceBase.onAbort
  fullName: void microsoft.servicefabric.services.runtime.StatefulServiceBase.onAbort
  package: microsoft.servicefabric.services.runtime
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync*
  name: onDataLossAsync
  nameWithType: StatefulServiceBase.onDataLossAsync
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext*
  name: getServiceContext
  nameWithType: StatefulServiceBase.getServiceContext
  fullName: StatefulServiceContext microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync*
  name: backupAsync
  nameWithType: StatefulServiceBase.backupAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync
  package: microsoft.servicefabric.services.runtime
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.createStateProviderReplica()
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.setPartition(StatefulServicePartition)
- uid: microsoft.servicefabric.actors._fabric_actor_service
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._fabric_actor_service.yml
  name: FabricActorService
  nameWithType: FabricActorService
  fullName: microsoft.servicefabric.actors.FabricActorService
  type: Class
  summary: >-
    <p>Represents the base class for Microsoft Service Fabric based reliable actors service. </p>

    <p>

      <bold>Remarks:</bold>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors. </p>
  syntax:
    content: public class FabricActorService extends StatefulServiceBase implements ActorService
- uid: microsoft.servicefabric.data._restore_context
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._restore_context.yml
  name: RestoreContext
  nameWithType: RestoreContext
  fullName: microsoft.servicefabric.data.RestoreContext
  type: Class
  summary: >-
    <p>

      <xref href="microsoft.servicefabric.data._restore_context" data-throw-if-not-resolved="false"></xref> contains the <xref href="microsoft.servicefabric.data._restore_context.restoreAsync(RestoreDescription)" data-throw-if-not-resolved="false"></xref> that can be used to restore the state of the replica from a backup. </p>
  syntax:
    content: public class RestoreContext
- uid: system.fabric._stateful_service_context
  parent: system.fabric
  href: system.fabric._stateful_service_context.yml
  name: StatefulServiceContext
  nameWithType: StatefulServiceContext
  fullName: system.fabric.StatefulServiceContext
  type: Class
  syntax:
    content: public class StatefulServiceContext
- uid: microsoft.servicefabric.data._state_provider_replica
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: StateProviderReplica
  nameWithType: StateProviderReplica
  fullName: microsoft.servicefabric.data.StateProviderReplica
  type: Interface
  summary: <p>Defines methods a reliable state provider replica must implement for Service Fabric to interact with it. </p>
  syntax:
    content: public interface StateProviderReplica
- uid: system.fabric._stateful_service_partition
  parent: system.fabric
  href: system.fabric._stateful_service_partition.yml
  name: StatefulServicePartition
  nameWithType: StatefulServicePartition
  fullName: system.fabric.StatefulServicePartition
  type: Interface
  syntax:
    content: public interface StatefulServicePartition
- uid: microsoft.servicefabric.services.communication.runtime._service_replica_listener
  parent: microsoft.servicefabric.services.communication.runtime
  href: microsoft.servicefabric.services.communication.runtime._service_replica_listener.yml
  name: ServiceReplicaListener
  nameWithType: ServiceReplicaListener
  fullName: microsoft.servicefabric.services.communication.runtime.ServiceReplicaListener
  type: Class
  summary: <p>Represents the communication listener and its properties for a Stateful Service Replica. Endpoints given out by the communication listener are associated with name of the communication listener. </p>
  syntax:
    content: public class ServiceReplicaListener
- uid: system.fabric._replica_open_mode
  parent: system.fabric
  href: system.fabric._replica_open_mode.yml
  name: ReplicaOpenMode
  nameWithType: ReplicaOpenMode
  fullName: system.fabric.ReplicaOpenMode
  type: Enum
  syntax:
    content: public enum ReplicaOpenMode
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> object, which manages cancellation tokens retrieved from its <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: system.fabric._replica_role
  parent: system.fabric
  href: system.fabric._replica_role.yml
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: system.fabric.ReplicaRole
  type: Enum
  syntax:
    content: public enum ReplicaRole
- uid: system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)
  parent: system.fabric._stateful_service_replica
  href: system.fabric._stateful_service_replica.yml
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: CompletableFuture<String> system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Changes the role of a Primary or Secondary replica.</p>

    <p>

      <bold>Remarks:</bold>The new role is indicated as a parameter. When the service transitions to the new role, the service has a chance to update its current listening address. The listening address is the address where clients connect to it. This enables the service when it is a Primary replica to only claim some resources such as ports when communication from clients is expected. </p>
  syntax:
    content: public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The updated <xref href="system.fabric._replica_role" data-throw-if-not-resolved="false"></xref> that this replica should transition to. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 06be942d
      description: <p>Returns <ref refid="" kindref="compound">CompletableFuture</ref> of type <ref refid="" kindref="compound">java.lang.String</ref>, the serviceâ€™s new connection address that is to be associated with the replica via Service Fabric Naming. </p>
- uid: microsoft.servicefabric.data._backup_description
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._backup_description.yml
  name: BackupDescription
  nameWithType: BackupDescription
  fullName: microsoft.servicefabric.data.BackupDescription
  type: Class
  summary: <p>A <xref href="microsoft.servicefabric.data._backup_description" data-throw-if-not-resolved="false"></xref> contains all of the information necessary to backup a stateful service replica. </p>
  syntax:
    content: public class BackupDescription
- uid: microsoft.servicefabric.services.runtime._stateful_service_base
  parent: microsoft.servicefabric.services.runtime
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase
  type: Class
  summary: <p>Represents base class for Microsoft Service Fabric based stateful reliable service. </p>
  syntax: *o1
