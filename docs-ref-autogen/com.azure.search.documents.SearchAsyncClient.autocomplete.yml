### YamlMime:JavaMember
uid: "com.azure.search.documents.SearchAsyncClient.autocomplete*"
fullName: "com.azure.search.documents.SearchAsyncClient.autocomplete"
name: "autocomplete"
nameWithType: "SearchAsyncClient.autocomplete"
members:
- uid: "com.azure.search.documents.SearchAsyncClient.autocomplete(java.lang.String,java.lang.String)"
  fullName: "com.azure.search.documents.SearchAsyncClient.autocomplete(String searchText, String suggesterName)"
  name: "autocomplete(String searchText, String suggesterName)"
  nameWithType: "SearchAsyncClient.autocomplete(String searchText, String suggesterName)"
  summary: "Autocompletes incomplete query terms based on input text and matching terms in the index.\n\n**Code Sample**\n\nAutocomplete text from documents in service.\n\n```java\nsearchAsyncClient.autocomplete(\"searchText\", \"sg\")\n     .subscribe(result -> {\n         System.out.printf(\"The complete term is %s\", result.getText());\n     });\n```"
  parameters:
  - description: "search text"
    name: "searchText"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "suggester name"
    name: "suggesterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompletePagedFlux autocomplete(String searchText, String suggesterName)"
  returns:
    description: "auto complete result."
    type: "<xref href=\"com.azure.search.documents.util.AutocompletePagedFlux?alt=com.azure.search.documents.util.AutocompletePagedFlux&text=AutocompletePagedFlux\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.SearchAsyncClient.autocomplete(java.lang.String,java.lang.String,com.azure.search.documents.models.AutocompleteOptions)"
  fullName: "com.azure.search.documents.SearchAsyncClient.autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions)"
  name: "autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions)"
  nameWithType: "SearchAsyncClient.autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions)"
  summary: "Autocompletes incomplete query terms based on input text and matching terms in the index.\n\n**Code Sample**\n\nAutocomplete text from documents in service with option.\n\n```java\nsearchAsyncClient.autocomplete(\"searchText\", \"sg\",\n     new AutocompleteOptions().setAutocompleteMode(AutocompleteMode.ONE_TERM_WITH_CONTEXT))\n     .subscribe(result ->\n         System.out.printf(\"The complete term is %s\", result.getText())\n     );\n```"
  parameters:
  - description: "search text"
    name: "searchText"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "suggester name"
    name: "suggesterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "autocomplete options"
    name: "autocompleteOptions"
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompletePagedFlux autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions)"
  returns:
    description: "auto complete result."
    type: "<xref href=\"com.azure.search.documents.util.AutocompletePagedFlux?alt=com.azure.search.documents.util.AutocompletePagedFlux&text=AutocompletePagedFlux\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.search.documents"
artifact: com.azure:azure-search-documents:11.1.3
