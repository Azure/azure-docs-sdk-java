### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  id: TransferManagerUploadToBlockBlobOptions
  parent: com.microsoft.azure.storage.blob
  children:
  - com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.accessConditions()
  - com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.httpHeaders()
  - com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.metadata()
  - com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.parallelism()
  - com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.progressReceiver()
  - com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions()
  - com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions(IProgressReceiver,BlobHTTPHeaders,Metadata,BlobAccessConditions,Integer)
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  langs:
  - java
  name: TransferManagerUploadToBlockBlobOptions
  nameWithType: TransferManagerUploadToBlockBlobOptions
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
    startLine: 22
  package: com.microsoft.azure.storage.blob
  summary: "<p>Configures the parallel upload behavior for methods on the <xref uid=\"com.microsoft.azure.storage.blob.TransferManager\" data-throw-if-not-resolved=\"false\">TransferManager</xref>. </p>"
  syntax:
    content: public class TransferManagerUploadToBlockBlobOptions
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.accessConditions()
  id: accessConditions()
  parent: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  langs:
  - java
  name: accessConditions()
  nameWithType: TransferManagerUploadToBlockBlobOptions.accessConditions()
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.accessConditions()
  overload: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.accessConditions*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
    startLine: 95
  package: com.microsoft.azure.storage.blob
  summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.storage.blob.BlobAccessConditions\" data-throw-if-not-resolved=\"false\">BlobAccessConditions</xref>\r\n</p>"
  syntax:
    content: public BlobAccessConditions accessConditions()
    return:
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.httpHeaders()
  id: httpHeaders()
  parent: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  langs:
  - java
  name: httpHeaders()
  nameWithType: TransferManagerUploadToBlockBlobOptions.httpHeaders()
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.httpHeaders()
  overload: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.httpHeaders*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
    startLine: 81
  package: com.microsoft.azure.storage.blob
  summary: "<p>Most often used when creating a blob or setting its properties, this class contains fields for typical HTTP properties, which, if specified, will be attached to the target blob. Null may be passed to any API. </p>"
  syntax:
    content: public BlobHTTPHeaders httpHeaders()
    return:
      type: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.metadata()
  id: metadata()
  parent: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  langs:
  - java
  name: metadata()
  nameWithType: TransferManagerUploadToBlockBlobOptions.metadata()
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.metadata()
  overload: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.metadata*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
    startLine: 88
  package: com.microsoft.azure.storage.blob
  summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.storage.blob.Metadata\" data-throw-if-not-resolved=\"false\">Metadata</xref>\r\n</p>"
  syntax:
    content: public Metadata metadata()
    return:
      type: com.microsoft.azure.storage.blob.Metadata
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.parallelism()
  id: parallelism()
  parent: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  langs:
  - java
  name: parallelism()
  nameWithType: TransferManagerUploadToBlockBlobOptions.parallelism()
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.parallelism()
  overload: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.parallelism*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
    startLine: 103
  package: com.microsoft.azure.storage.blob
  summary: "<p>A<code>intÂ \r\n    </code> that indicates the maximum number of blocks to upload in parallel. Must be greater than 0. May be null to accept default behavior. </p>"
  syntax:
    content: public int parallelism()
    return:
      type: f75371fa
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.progressReceiver()
  id: progressReceiver()
  parent: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  langs:
  - java
  name: progressReceiver()
  nameWithType: TransferManagerUploadToBlockBlobOptions.progressReceiver()
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.progressReceiver()
  overload: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.progressReceiver*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
    startLine: 73
  package: com.microsoft.azure.storage.blob
  summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.storage.blob.IProgressReceiver\" data-throw-if-not-resolved=\"false\">IProgressReceiver</xref>\r\n</p>"
  syntax:
    content: public IProgressReceiver progressReceiver()
    return:
      type: com.microsoft.azure.storage.blob.IProgressReceiver
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions()
  id: TransferManagerUploadToBlockBlobOptions()
  parent: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  langs:
  - java
  name: TransferManagerUploadToBlockBlobOptions()
  nameWithType: TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions()
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions()
  overload: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
    startLine: 34
  package: com.microsoft.azure.storage.blob
  syntax:
    content: public TransferManagerUploadToBlockBlobOptions()
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions(IProgressReceiver,BlobHTTPHeaders,Metadata,BlobAccessConditions,Integer)
  id: TransferManagerUploadToBlockBlobOptions(IProgressReceiver,BlobHTTPHeaders,Metadata,BlobAccessConditions,Integer)
  parent: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions
  href: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.yml
  langs:
  - java
  name: TransferManagerUploadToBlockBlobOptions(IProgressReceiver progressReceiver, BlobHTTPHeaders httpHeaders, Metadata metadata, BlobAccessConditions accessConditions, Integer parallelism)
  nameWithType: TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions(IProgressReceiver progressReceiver, BlobHTTPHeaders httpHeaders, Metadata metadata, BlobAccessConditions accessConditions, Integer parallelism)
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions(IProgressReceiver progressReceiver, BlobHTTPHeaders httpHeaders, Metadata metadata, BlobAccessConditions accessConditions, Integer parallelism)
  overload: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/TransferManagerUploadToBlockBlobOptions.java
    startLine: 55
  package: com.microsoft.azure.storage.blob
  summary: "<p>Creates a new object that configures the parallel upload behavior. Null may be passed to accept the default behavior.</p>\r\n<p></p>"
  syntax:
    content: public TransferManagerUploadToBlockBlobOptions(IProgressReceiver progressReceiver, BlobHTTPHeaders httpHeaders, Metadata metadata, BlobAccessConditions accessConditions, Integer parallelism)
    parameters:
    - id: progressReceiver
      type: com.microsoft.azure.storage.blob.IProgressReceiver
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.IProgressReceiver" data-throw-if-not-resolved="false">IProgressReceiver</xref>

        </p>
    - id: httpHeaders
      type: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
      description: <p>Most often used when creating a blob or setting its properties, this class contains fields for typical HTTP properties, which, if specified, will be attached to the target blob. Null may be passed to any API. </p>
    - id: metadata
      type: com.microsoft.azure.storage.blob.Metadata
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.Metadata" data-throw-if-not-resolved="false">Metadata</xref>

        </p>
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: parallelism
      type: 08effaa0
      description: <p>Indicates the maximum number of blocks to upload in parallel. Must be greater than 0. May be null to accept default behavior. </p>
references:
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions*
  name: TransferManagerUploadToBlockBlobOptions
  nameWithType: TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.TransferManagerUploadToBlockBlobOptions
  package: com.microsoft.azure.storage.blob
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.progressReceiver*
  name: progressReceiver
  nameWithType: TransferManagerUploadToBlockBlobOptions.progressReceiver
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.progressReceiver
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.httpHeaders*
  name: httpHeaders
  nameWithType: TransferManagerUploadToBlockBlobOptions.httpHeaders
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.httpHeaders
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.metadata*
  name: metadata
  nameWithType: TransferManagerUploadToBlockBlobOptions.metadata
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.metadata
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.accessConditions*
  name: accessConditions
  nameWithType: TransferManagerUploadToBlockBlobOptions.accessConditions
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.accessConditions
  package: com.microsoft.azure.storage.blob
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.parallelism*
  name: parallelism
  nameWithType: TransferManagerUploadToBlockBlobOptions.parallelism
  fullName: com.microsoft.azure.storage.blob.TransferManagerUploadToBlockBlobOptions.parallelism
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob.IProgressReceiver
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.IProgressReceiver.yml
  name: IProgressReceiver
  nameWithType: IProgressReceiver
  fullName: com.microsoft.azure.storage.blob.IProgressReceiver
  type: Interface
  summary: "<p>An<code>IProgressReceiverÂ \r\n    </code> is an object that can be used to report progress on network transfers. When specified on transfer operations, the<code>reportProgressÂ \r\n    </code> method will be called periodically with the total number of bytes transferred. The user may configure this method to report progress in whatever format desired. It is recommended that this type be used in conjunction with <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProgressReporter#addProgressReporting(Flowable, IProgressReceiver)</xref>. </p>"
  syntax:
    content: public interface IProgressReceiver
- uid: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders.yml
  name: BlobHTTPHeaders
  nameWithType: BlobHTTPHeaders
  fullName: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
  type: Class
  summary: "<p>Additional parameters for a set of operations. </p>"
  syntax:
    content: public class BlobHTTPHeaders
- uid: com.microsoft.azure.storage.blob.Metadata
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.Metadata.yml
  name: Metadata
  nameWithType: Metadata
  fullName: com.microsoft.azure.storage.blob.Metadata
  type: Class
  summary: "<p>Contains metadata key/value pairs to be associated with a storage resource. The user may store any additional information about the resource that they like using this map. It is passed to create and setMetadata methods on any URL type. Null may be passed to set no metadata. </p>"
  syntax:
    content: public class Metadata
- uid: com.microsoft.azure.storage.blob.BlobAccessConditions
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlobAccessConditions.yml
  name: BlobAccessConditions
  nameWithType: BlobAccessConditions
  fullName: com.microsoft.azure.storage.blob.BlobAccessConditions
  type: Class
  summary: "<p>This class contains values which will restrict the successful operation of a variety of requests to the conditions present. These conditions are entirely optional. The entire object or any of its properties may be set to null when passed to a method to indicate that those conditions are not desired. Please refer to the type of each field for more information on those particular access conditions. </p>"
  syntax:
    content: public class BlobAccessConditions
- uid: com.microsoft.azure.storage.blob.TransferManager
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.TransferManager.yml
  name: TransferManager
  nameWithType: TransferManager
  fullName: com.microsoft.azure.storage.blob.TransferManager
  type: Class
  summary: "<p>This class contains a collection of methods (and structures associated with those methods) which perform higher-level operations. Whereas operations on the URL types guarantee a single REST request and make no assumptions on desired behavior, these methods will often compose several requests to provide a convenient way of performing more complex operations. Further, we will make our own assumptions and optimizations for common cases that may not be ideal for rarer cases. </p>"
  syntax:
    content: public class TransferManager
