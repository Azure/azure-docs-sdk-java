### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.anger()
  name: anger()
  nameWithType: Emotion.anger()
  returns:
    description: <p>the anger value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the anger value.</p>

    <p></p>
  syntax: public double anger()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.anger()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.contempt()
  name: contempt()
  nameWithType: Emotion.contempt()
  returns:
    description: <p>the contempt value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the contempt value.</p>

    <p></p>
  syntax: public double contempt()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.contempt()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.disgust()
  name: disgust()
  nameWithType: Emotion.disgust()
  returns:
    description: <p>the disgust value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the disgust value.</p>

    <p></p>
  syntax: public double disgust()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.disgust()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.fear()
  name: fear()
  nameWithType: Emotion.fear()
  returns:
    description: <p>the fear value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the fear value.</p>

    <p></p>
  syntax: public double fear()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.fear()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.happiness()
  name: happiness()
  nameWithType: Emotion.happiness()
  returns:
    description: <p>the happiness value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the happiness value.</p>

    <p></p>
  syntax: public double happiness()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.happiness()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.neutral()
  name: neutral()
  nameWithType: Emotion.neutral()
  returns:
    description: <p>the neutral value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the neutral value.</p>

    <p></p>
  syntax: public double neutral()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.neutral()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.sadness()
  name: sadness()
  nameWithType: Emotion.sadness()
  returns:
    description: <p>the sadness value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the sadness value.</p>

    <p></p>
  syntax: public double sadness()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.sadness()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.surprise()
  name: surprise()
  nameWithType: Emotion.surprise()
  returns:
    description: <p>the surprise value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the surprise value.</p>

    <p></p>
  syntax: public double surprise()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.surprise()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withAnger(double anger)
  name: withAnger(double anger)
  nameWithType: Emotion.withAnger(double anger)
  parameters:
  - description: <p>the anger value to set </p>
    name: anger
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Emotion object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion&text=Emotion" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the anger value.</p>

    <p></p>
  syntax: public Emotion withAnger(double anger)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withAnger(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withContempt(double contempt)
  name: withContempt(double contempt)
  nameWithType: Emotion.withContempt(double contempt)
  parameters:
  - description: <p>the contempt value to set </p>
    name: contempt
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Emotion object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion&text=Emotion" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the contempt value.</p>

    <p></p>
  syntax: public Emotion withContempt(double contempt)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withContempt(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withDisgust(double disgust)
  name: withDisgust(double disgust)
  nameWithType: Emotion.withDisgust(double disgust)
  parameters:
  - description: <p>the disgust value to set </p>
    name: disgust
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Emotion object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion&text=Emotion" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the disgust value.</p>

    <p></p>
  syntax: public Emotion withDisgust(double disgust)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withDisgust(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withFear(double fear)
  name: withFear(double fear)
  nameWithType: Emotion.withFear(double fear)
  parameters:
  - description: <p>the fear value to set </p>
    name: fear
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Emotion object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion&text=Emotion" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the fear value.</p>

    <p></p>
  syntax: public Emotion withFear(double fear)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withFear(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withHappiness(double happiness)
  name: withHappiness(double happiness)
  nameWithType: Emotion.withHappiness(double happiness)
  parameters:
  - description: <p>the happiness value to set </p>
    name: happiness
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Emotion object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion&text=Emotion" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the happiness value.</p>

    <p></p>
  syntax: public Emotion withHappiness(double happiness)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withHappiness(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withNeutral(double neutral)
  name: withNeutral(double neutral)
  nameWithType: Emotion.withNeutral(double neutral)
  parameters:
  - description: <p>the neutral value to set </p>
    name: neutral
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Emotion object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion&text=Emotion" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the neutral value.</p>

    <p></p>
  syntax: public Emotion withNeutral(double neutral)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withNeutral(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withSadness(double sadness)
  name: withSadness(double sadness)
  nameWithType: Emotion.withSadness(double sadness)
  parameters:
  - description: <p>the sadness value to set </p>
    name: sadness
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Emotion object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion&text=Emotion" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the sadness value.</p>

    <p></p>
  syntax: public Emotion withSadness(double sadness)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withSadness(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withSurprise(double surprise)
  name: withSurprise(double surprise)
  nameWithType: Emotion.withSurprise(double surprise)
  parameters:
  - description: <p>the surprise value to set </p>
    name: surprise
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Emotion object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion&text=Emotion" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the surprise value.</p>

    <p></p>
  syntax: public Emotion withSurprise(double surprise)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion.withSurprise(double)
nameWithType: Emotion
syntax: public class Emotion
type: class
uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion
fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Emotion
name: Emotion
package: com.microsoft.azure.cognitiveservices.vision.faceapi.models
summary: <p>Properties describing facial emotion in form of confidence ranging from 0 to 1. </p>
metadata: {}
