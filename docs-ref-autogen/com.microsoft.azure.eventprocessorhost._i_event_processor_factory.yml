### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory
  id: _i_event_processor_factory
  parent: com.microsoft.azure.eventprocessorhost
  children:
  - com.microsoft.azure.eventprocessorhost._i_event_processor_factory.createEventProcessor(PartitionContext)
  href: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.yml
  langs:
  - java
  name: IEventProcessorFactory<T>
  nameWithType: IEventProcessorFactory<T>
  fullName: com.microsoft.azure.eventprocessorhost.IEventProcessorFactory<T>
  type: Interface
  source:
    remote: &o0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessorFactory.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessorFactory.java
    startLine: 16
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Interface that must be implemented by an event processor factory class.</p>

    <p>User-provided factories are needed if creating an event processor object requires more work than just a new with a parameterless constructor.</p>

    <p></p>
  syntax:
    content: public interface IEventProcessorFactory<T extends IEventProcessor>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>The type of event processor objects produced by this factory, which must implement <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false">IEventProcessor</xref></p>
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.createEventProcessor(PartitionContext)
  id: createEventProcessor(PartitionContext)
  parent: com.microsoft.azure.eventprocessorhost._i_event_processor_factory
  href: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.yml
  langs:
  - java
  name: createEventProcessor(PartitionContext context)
  nameWithType: IEventProcessorFactory<T>.createEventProcessor(PartitionContext context)
  fullName: T com.microsoft.azure.eventprocessorhost.IEventProcessorFactory<T extends IEventProcessor>.createEventProcessor(PartitionContext context)
  overload: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.createEventProcessor*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessorFactory.java
    startLine: 25
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Called to create an event processor for the given partition.</p>

    <p></p>
  syntax:
    content: public T createEventProcessor(PartitionContext context)
    parameters:
    - id: context
      type: com.microsoft.azure.eventprocessorhost._partition_context
      description: <p>Information about the partition that the event processor will handle events from. </p>
    return:
      type: 8ce1ecb9
      description: <p>The event processor object. </p>
  exceptions:
  - type: 8a99d4b0
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: 8a99d4b0
  spec.java:
  - name: Exception
    fullName: Exception
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.createEventProcessor*
  name: createEventProcessor
  nameWithType: IEventProcessorFactory<T>.createEventProcessor
  fullName: T com.microsoft.azure.eventprocessorhost.IEventProcessorFactory<T extends IEventProcessor>.createEventProcessor
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: com.microsoft.azure.eventprocessorhost.IEventProcessor
  type: Interface
  summary: >-
    <p>Interface that must be implemented by event processor classes.</p>

    <p>Any given instance of an event processor class will only process events from one partition of one Event Hub. A <xref uid="com.microsoft.azure.eventprocessorhost._partition_context" data-throw-if-not-resolved="false">PartitionContext</xref> is provided with each call to the event processor because some parameters could change, but it will always be the same partition. </p>

    <p>Although <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> is multithreaded, calls to a given instance of an event processor class are serialized, except for <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)" data-throw-if-not-resolved="false">onError()</xref>. <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen(PartitionContext)" data-throw-if-not-resolved="false">onOpen()</xref> is called first, then <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">onEvents()</xref> will be called zero or more times. When the event processor needs to be shut down, whether because there was a failure somewhere, or the lease for the partition has been lost, or because the entire processor host is being shut down, <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)" data-throw-if-not-resolved="false">onClose()</xref> is called after the last <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">onEvents()</xref> call returns. </p>

    <p>

      <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)" data-throw-if-not-resolved="false">onError()</xref> could be called while <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">onEvents()</xref> or <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)" data-throw-if-not-resolved="false">onClose()</xref> is executing. No synchronization is attempted in order to avoid possibly deadlocking. </p>
  syntax:
    content: public interface IEventProcessor
- uid: com.microsoft.azure.eventprocessorhost._partition_context
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._partition_context.yml
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: com.microsoft.azure.eventprocessorhost.PartitionContext
  type: Class
  syntax:
    content: public class PartitionContext
