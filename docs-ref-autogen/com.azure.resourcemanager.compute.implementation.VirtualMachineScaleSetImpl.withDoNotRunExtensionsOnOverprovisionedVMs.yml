### YamlMime:JavaMember
uid: "com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetImpl.withDoNotRunExtensionsOnOverprovisionedVMs*"
fullName: "com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetImpl.withDoNotRunExtensionsOnOverprovisionedVMs"
name: "withDoNotRunExtensionsOnOverprovisionedVMs"
nameWithType: "VirtualMachineScaleSetImpl.withDoNotRunExtensionsOnOverprovisionedVMs"
members:
- uid: "com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetImpl.withDoNotRunExtensionsOnOverprovisionedVMs(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetImpl.withDoNotRunExtensionsOnOverprovisionedVMs(Boolean doNotRunExtensionsOnOverprovisionedVMs)"
  name: "withDoNotRunExtensionsOnOverprovisionedVMs(Boolean doNotRunExtensionsOnOverprovisionedVMs)"
  nameWithType: "VirtualMachineScaleSetImpl.withDoNotRunExtensionsOnOverprovisionedVMs(Boolean doNotRunExtensionsOnOverprovisionedVMs)"
  summary: "Set when Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs."
  parameters:
  - name: "doNotRunExtensionsOnOverprovisionedVMs"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineScaleSetImpl withDoNotRunExtensionsOnOverprovisionedVMs(Boolean doNotRunExtensionsOnOverprovisionedVMs)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetImpl?alt=com.azure.resourcemanager.compute.implementation.VirtualMachineScaleSetImpl&text=VirtualMachineScaleSetImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.compute.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
