### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionStringBuilder?alt=com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionStringBuilder&text=IotHubConnectionStringBuilder" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionStringBuilder.createIotHubConnectionString(String)
- com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionStringBuilder.createIotHubConnectionString(String,AuthenticationMethod)
methods:
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getAuthenticationMethod()
  name: getAuthenticationMethod()
  nameWithType: IotHubConnectionString.getAuthenticationMethod()
  returns:
    description: <p>The authenticationMethod object </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.auth.AuthenticationMethod?alt=com.microsoft.azure.sdk.iot.service.auth.AuthenticationMethod&text=AuthenticationMethod" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for authenticationMethod</p>

    <p></p>
  syntax: public AuthenticationMethod getAuthenticationMethod()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getAuthenticationMethod()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getHostName()
  name: getHostName()
  nameWithType: IotHubConnectionString.getHostName()
  returns:
    description: <p>The hostName string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for hostName</p>

    <p></p>
  syntax: public String getHostName()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getHostName()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getIotHubName()
  name: getIotHubName()
  nameWithType: IotHubConnectionString.getIotHubName()
  returns:
    description: <p>The iot hub name string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for iotHubName</p>

    <p></p>
  syntax: public String getIotHubName()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getIotHubName()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getSharedAccessKey()
  name: getSharedAccessKey()
  nameWithType: IotHubConnectionString.getSharedAccessKey()
  returns:
    description: <p>The sharedAccessKey string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for sharedAccessKey</p>

    <p></p>
  syntax: public String getSharedAccessKey()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getSharedAccessKey()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getSharedAccessKeyName()
  name: getSharedAccessKeyName()
  nameWithType: IotHubConnectionString.getSharedAccessKeyName()
  returns:
    description: <p>The sharedAccessKeyName string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for sharedAccessKeyName</p>

    <p></p>
  syntax: public String getSharedAccessKeyName()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getSharedAccessKeyName()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getSharedAccessSignature()
  name: getSharedAccessSignature()
  nameWithType: IotHubConnectionString.getSharedAccessSignature()
  returns:
    description: <p>The sharedAccessSignature string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for sharedAccessSignature</p>

    <p></p>
  syntax: public String getSharedAccessSignature()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getSharedAccessSignature()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent(String deviceId)
  name: getUrlApplyConfigurationContent(String deviceId)
  nameWithType: IotHubConnectionString.getUrlApplyConfigurationContent(String deviceId)
  parameters:
  - description: <p>The device to apply the configuration content to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>if the deviceId contains unexpected characters, and a URL cannot be constructed using it </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if deviceId is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:[hostname]/devices/[deviceId]/applyConfigurationContent?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: <p>Create the url needed to apply some configuration content to a device </p>
  syntax: public URL getUrlApplyConfigurationContent(String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent(String hostName, String deviceId)
  name: getUrlApplyConfigurationContent(String hostName, String deviceId)
  nameWithType: IotHubConnectionString.getUrlApplyConfigurationContent(String hostName, String deviceId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The device to apply the configuration content to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>if the deviceId contains unexpected characters, and a URL cannot be constructed using it </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if deviceId is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:[hostname]/devices/[deviceId]/applyConfigurationContent?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create the url needed to apply some configuration content to a device</p>

    <p></p>
  syntax: public static URL getUrlApplyConfigurationContent(String hostName, String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlApplyConfigurationContent(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlConfiguration(String configurationId)
  name: getUrlConfiguration(String configurationId)
  nameWithType: IotHubConnectionString.getUrlConfiguration(String configurationId)
  parameters:
  - description: <p>The name of the configuration </p>
    name: configurationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:hostname/configurations/configurationId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting configuration data</p>

    <p></p>
  syntax: public URL getUrlConfiguration(String configurationId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlConfiguration(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlConfiguration(String hostName, String configurationId)
  name: getUrlConfiguration(String hostName, String configurationId)
  nameWithType: IotHubConnectionString.getUrlConfiguration(String hostName, String configurationId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the configuration </p>
    name: configurationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:hostname/configurations/configurationId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting configuration data</p>

    <p></p>
  syntax: public static URL getUrlConfiguration(String hostName, String configurationId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlConfiguration(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlConfigurationsList(Integer maxCount)
  name: getUrlConfigurationsList(Integer maxCount)
  nameWithType: IotHubConnectionString.getUrlConfigurationsList(Integer maxCount)
  parameters:
  - description: <p>The maximum number of configuration data to return </p>
    name: maxCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/configurations/?top=maxcount{@literal &amp;}api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting configuration data</p>

    <p></p>
  syntax: public URL getUrlConfigurationsList(Integer maxCount)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlConfigurationsList(Integer)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlConfigurationsList(String hostName, Integer maxCount)
  name: getUrlConfigurationsList(String hostName, Integer maxCount)
  nameWithType: IotHubConnectionString.getUrlConfigurationsList(String hostName, Integer maxCount)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of configuration data to return </p>
    name: maxCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/configurations/?top=maxcount{@literal &amp;}api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting configuration data</p>

    <p></p>
  syntax: public static URL getUrlConfigurationsList(String hostName, Integer maxCount)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlConfigurationsList(String,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlCreateExportImportJob()
  name: getUrlCreateExportImportJob()
  nameWithType: IotHubConnectionString.getUrlCreateExportImportJob()
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>The import/export job URL in the following format: "https:hostname/jobs/create?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for processing a bulk import/export job</p>

    <p></p>
  syntax: public URL getUrlCreateExportImportJob()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlCreateExportImportJob()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlCreateExportImportJob(String hostName)
  name: getUrlCreateExportImportJob(String hostName)
  nameWithType: IotHubConnectionString.getUrlCreateExportImportJob(String hostName)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>The import/export job URL in the following format: "https:hostname/jobs/create?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for processing a bulk import/export job</p>

    <p></p>
  syntax: public static URL getUrlCreateExportImportJob(String hostName)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlCreateExportImportJob(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDevice(String deviceId)
  name: getUrlDevice(String deviceId)
  nameWithType: IotHubConnectionString.getUrlDevice(String deviceId)
  parameters:
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:hostname/devices/deviceId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device data</p>

    <p></p>
  syntax: public URL getUrlDevice(String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDevice(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDevice(String hostName, String deviceId)
  name: getUrlDevice(String hostName, String deviceId)
  nameWithType: IotHubConnectionString.getUrlDevice(String hostName, String deviceId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:hostname/devices/deviceId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device data</p>

    <p></p>
  syntax: public static URL getUrlDevice(String hostName, String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDevice(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDeviceList(Integer maxCount)
  name: getUrlDeviceList(Integer maxCount)
  nameWithType: IotHubConnectionString.getUrlDeviceList(Integer maxCount)
  parameters:
  - description: <p>The number of requested devices </p>
    name: maxCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if maxCount is null or empty </p>
  returns:
    description: <p>URL string to get the device list from IotHub </p>
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device list</p>

    <p></p>
  syntax: public URL getUrlDeviceList(Integer maxCount)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDeviceList(Integer)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDeviceList(String hostName, Integer maxCount)
  name: getUrlDeviceList(String hostName, Integer maxCount)
  nameWithType: IotHubConnectionString.getUrlDeviceList(String hostName, Integer maxCount)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The number of requested devices </p>
    name: maxCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if maxCount is null or empty </p>
  returns:
    description: <p>URL string to get the device list from IotHub </p>
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device list</p>

    <p></p>
  syntax: public static URL getUrlDeviceList(String hostName, Integer maxCount)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDeviceList(String,Integer)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDeviceStatistics()
  name: getUrlDeviceStatistics()
  nameWithType: IotHubConnectionString.getUrlDeviceStatistics()
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>The device statistics Url in the following format: "https:hostname/statistics/devices?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device statistics</p>

    <p></p>
  syntax: public URL getUrlDeviceStatistics()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDeviceStatistics()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDeviceStatistics(String hostName)
  name: getUrlDeviceStatistics(String hostName)
  nameWithType: IotHubConnectionString.getUrlDeviceStatistics(String hostName)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>The device statistics Url in the following format: "https:hostname/statistics/devices?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device statistics</p>

    <p></p>
  syntax: public static URL getUrlDeviceStatistics(String hostName)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlDeviceStatistics(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlImportExportJob(String jobId)
  name: getUrlImportExportJob(String jobId)
  nameWithType: IotHubConnectionString.getUrlImportExportJob(String jobId)
  parameters:
  - description: <p>Create url for retrieving a bulk import/export job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>The import/export job URL in the following format: "https:hostname/jobs/jobId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  syntax: public URL getUrlImportExportJob(String jobId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlImportExportJob(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlImportExportJob(String hostName, String jobId)
  name: getUrlImportExportJob(String hostName, String jobId)
  nameWithType: IotHubConnectionString.getUrlImportExportJob(String hostName, String jobId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Create url for retrieving a bulk import/export job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>The import/export job URL in the following format: "https:hostname/jobs/jobId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  syntax: public static URL getUrlImportExportJob(String hostName, String jobId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlImportExportJob(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlJobs(String jobId)
  name: getUrlJobs(String jobId)
  nameWithType: IotHubConnectionString.getUrlJobs(String jobId)
  parameters:
  - description: <p>is the name of the job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if job id is null or empty </p>
  returns:
    description: '<p>the URL in the follow format: "https:[hostname]/jobs/v2/[jobId]?api-version=2016-11-14" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting jobs</p>

    <p></p>
  syntax: public URL getUrlJobs(String jobId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlJobs(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlJobs(String hostName, String jobId)
  name: getUrlJobs(String hostName, String jobId)
  nameWithType: IotHubConnectionString.getUrlJobs(String hostName, String jobId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>is the name of the job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if job id is null or empty </p>
  returns:
    description: '<p>the URL in the follow format: "https:[hostname]/jobs/v2/[jobId]?api-version=2016-11-14" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting jobs</p>

    <p></p>
  syntax: public static URL getUrlJobs(String hostName, String jobId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlJobs(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlJobsCancel(String jobId)
  name: getUrlJobsCancel(String jobId)
  nameWithType: IotHubConnectionString.getUrlJobsCancel(String jobId)
  parameters:
  - description: <p>is the name of the job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if job id is null or empty </p>
  returns:
    description: '<p>the URL in the follow format: "https:[hostname]/jobs/v2/[jobId]/cancel?api-version=2016-11-14" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for cancelling jobs</p>

    <p></p>
  syntax: public URL getUrlJobsCancel(String jobId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlJobsCancel(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlJobsCancel(String hostName, String jobId)
  name: getUrlJobsCancel(String hostName, String jobId)
  nameWithType: IotHubConnectionString.getUrlJobsCancel(String hostName, String jobId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>is the name of the job </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if job id is null or empty </p>
  returns:
    description: '<p>the URL in the follow format: "https:[hostname]/jobs/v2/[jobId]/cancel?api-version=2016-11-14" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for cancelling jobs</p>

    <p></p>
  syntax: public static URL getUrlJobsCancel(String hostName, String jobId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlJobsCancel(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlMethod(String deviceId)
  name: getUrlMethod(String deviceId)
  nameWithType: IotHubConnectionString.getUrlMethod(String deviceId)
  parameters:
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/twins/deviceId/methods/" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device method</p>

    <p></p>
  syntax: public URL getUrlMethod(String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlMethod(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlMethod(String hostName, String deviceId)
  name: getUrlMethod(String hostName, String deviceId)
  nameWithType: IotHubConnectionString.getUrlMethod(String hostName, String deviceId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/twins/deviceId/methods/" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device method</p>

    <p></p>
  syntax: public static URL getUrlMethod(String hostName, String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlMethod(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModule(String deviceId, String moduleId)
  name: getUrlModule(String deviceId, String moduleId)
  nameWithType: IotHubConnectionString.getUrlModule(String deviceId, String moduleId)
  parameters:
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:hostname/devices/deviceId/modules/moduleId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting module data</p>

    <p></p>
  syntax: public URL getUrlModule(String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModule(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModule(String hostName, String deviceId, String moduleId)
  name: getUrlModule(String hostName, String deviceId, String moduleId)
  nameWithType: IotHubConnectionString.getUrlModule(String hostName, String deviceId, String moduleId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:hostname/devices/deviceId/modules/moduleId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting module data</p>

    <p></p>
  syntax: public static URL getUrlModule(String hostName, String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModule(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModuleMethod(String deviceId, String moduleId)
  name: getUrlModuleMethod(String deviceId, String moduleId)
  nameWithType: IotHubConnectionString.getUrlModuleMethod(String deviceId, String moduleId)
  parameters:
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the module </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/twins/deviceId/methods/" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device method for module</p>

    <p></p>
  syntax: public URL getUrlModuleMethod(String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModuleMethod(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModuleMethod(String hostName, String deviceId, String moduleId)
  name: getUrlModuleMethod(String hostName, String deviceId, String moduleId)
  nameWithType: IotHubConnectionString.getUrlModuleMethod(String hostName, String deviceId, String moduleId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the module </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/twins/deviceId/methods/" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device method for module</p>

    <p></p>
  syntax: public static URL getUrlModuleMethod(String hostName, String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModuleMethod(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModulesOnDevice(String deviceId)
  name: getUrlModulesOnDevice(String deviceId)
  nameWithType: IotHubConnectionString.getUrlModulesOnDevice(String deviceId)
  parameters:
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:hostname/devices/deviceId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting all modules data on a device</p>

    <p></p>
  syntax: public URL getUrlModulesOnDevice(String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModulesOnDevice(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModulesOnDevice(String hostName, String deviceId)
  name: getUrlModulesOnDevice(String hostName, String deviceId)
  nameWithType: IotHubConnectionString.getUrlModulesOnDevice(String hostName, String deviceId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The device Url in the following format: "https:hostname/devices/deviceId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting all modules data on a device</p>

    <p></p>
  syntax: public static URL getUrlModulesOnDevice(String hostName, String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModulesOnDevice(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModuleTwin(String deviceId, String moduleId)
  name: getUrlModuleTwin(String deviceId, String moduleId)
  nameWithType: IotHubConnectionString.getUrlModuleTwin(String deviceId, String moduleId)
  parameters:
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/twins/deviceId/modules/moduleId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting module twin</p>

    <p></p>
  syntax: public URL getUrlModuleTwin(String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModuleTwin(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModuleTwin(String hostName, String deviceId, String moduleId)
  name: getUrlModuleTwin(String hostName, String deviceId, String moduleId)
  nameWithType: IotHubConnectionString.getUrlModuleTwin(String hostName, String deviceId, String moduleId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/twins/deviceId/modules/moduleId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting module twin</p>

    <p></p>
  syntax: public static URL getUrlModuleTwin(String hostName, String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlModuleTwin(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlQuery(String jobType, String jobStatus)
  name: getUrlQuery(String jobType, String jobStatus)
  nameWithType: IotHubConnectionString.getUrlQuery(String jobType, String jobStatus)
  parameters:
  - description: <p>jobType as String </p>
    name: jobType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>jobStatus as String </p>
    name: jobStatus
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>the URL in the follow format: "https:[hostname]/jobs/v2/query?jobType=jobTypeValue&amp;amp;jobStatus=jobStatusValue&amp;amp;api-version=2016-11-14" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: <p>Create url for querying </p>
  syntax: public URL getUrlQuery(String jobType, String jobStatus)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlQuery(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlQuery(String hostName, String jobType, String jobStatus)
  name: getUrlQuery(String hostName, String jobType, String jobStatus)
  nameWithType: IotHubConnectionString.getUrlQuery(String hostName, String jobType, String jobStatus)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>jobType as String </p>
    name: jobType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>jobStatus as String </p>
    name: jobStatus
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>the URL in the follow format: "https:[hostname]/jobs/v2/query?jobType=jobTypeValue&amp;amp;jobStatus=jobStatusValue&amp;amp;api-version=2016-11-14" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: <p>Create url for querying </p>
  syntax: public static URL getUrlQuery(String hostName, String jobType, String jobStatus)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlQuery(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlTwin(String deviceId)
  name: getUrlTwin(String deviceId)
  nameWithType: IotHubConnectionString.getUrlTwin(String deviceId)
  parameters:
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/twins/deviceId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device twin</p>

    <p></p>
  syntax: public URL getUrlTwin(String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlTwin(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlTwin(String hostName, String deviceId)
  name: getUrlTwin(String hostName, String deviceId)
  nameWithType: IotHubConnectionString.getUrlTwin(String hostName, String deviceId)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the device </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if device id is null or empty </p>
  returns:
    description: '<p>The Url in the following format: "https:hostname/twins/deviceId?api-version=201X-XX-XX" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for requesting device twin</p>

    <p></p>
  syntax: public static URL getUrlTwin(String hostName, String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlTwin(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlTwinQuery()
  name: getUrlTwinQuery()
  nameWithType: IotHubConnectionString.getUrlTwinQuery()
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>the URL in the follow format: "https:[hostname]/devices/query?api-version=2016-11-14" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for querying twin</p>

    <p></p>
  syntax: public URL getUrlTwinQuery()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlTwinQuery()
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlTwinQuery(String hostName)
  name: getUrlTwinQuery(String hostName)
  nameWithType: IotHubConnectionString.getUrlTwinQuery(String hostName)
  parameters:
  - description: <p>The hostname of the IoT Hub </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the URL creation failed due to malformed string </p>
  returns:
    description: '<p>the URL in the follow format: "https:[hostname]/devices/query?api-version=2016-11-14" </p>'
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create url for querying twin</p>

    <p></p>
  syntax: public static URL getUrlTwinQuery(String hostName)
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.getUrlTwinQuery(String)
- fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.toString()
  name: toString()
  nameWithType: IotHubConnectionString.toString()
  returns:
    description: <p>Iot Hub connection string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Serialize connection string</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString.toString()
nameWithType: IotHubConnectionString
syntax: public class IotHubConnectionString extends IotHubConnectionStringBuilder
type: class
uid: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString
fullName: com.microsoft.azure.sdk.iot.service.auth.IotHubConnectionString
name: IotHubConnectionString
package: com.microsoft.azure.sdk.iot.service.auth
summary: <p>Expose all connections string properties and methods for user, device and connection string serialization. </p>
metadata: {}
