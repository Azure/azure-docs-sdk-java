### YamlMime:JavaType
uid: "com.azure.core.http.rest.PagedIterableBase"
fullName: "com.azure.core.http.rest.PagedIterableBase<T,P>"
name: "PagedIterableBase<T,P>"
nameWithType: "PagedIterableBase<T,P>"
summary: "This class provides utility to iterate over responses that extend <xref uid=\"com.azure.core.http.rest.PagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedResponse\"></xref> using <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> and <xref uid=\"java.lang.Iterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterable\"></xref> interfaces."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.IterableStream?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)?alt=com.azure.core.util.IterableStream.<T>of&text=<T>of\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable?alt=com.azure.core.util.paging.ContinuablePagedIterable&text=ContinuablePagedIterable\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage&text=iterableByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage&text=iterableByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage&text=iterableByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage&text=iterableByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.iterator()?alt=com.azure.core.util.paging.ContinuablePagedIterable.iterator&text=iterator\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.stream()?alt=com.azure.core.util.paging.ContinuablePagedIterable.stream&text=stream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()?alt=com.azure.core.util.paging.ContinuablePagedIterable.streamByPage&text=streamByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)?alt=com.azure.core.util.paging.ContinuablePagedIterable.streamByPage&text=streamByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)?alt=com.azure.core.util.paging.ContinuablePagedIterable.streamByPage&text=streamByPage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)?alt=com.azure.core.util.paging.ContinuablePagedIterable.streamByPage&text=streamByPage\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **PagedIterableBase<T,P>**</br> extends <xref href=\"com.azure.core.util.paging.ContinuablePagedIterable?alt=com.azure.core.util.paging.ContinuablePagedIterable&text=ContinuablePagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"P?alt=P&text=P\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.core.http.rest.PagedIterableBase.PagedIterableBase(com.azure.core.http.rest.PagedFluxBase<T,P>)"
  fullName: "com.azure.core.http.rest.PagedIterableBase<T,P>.PagedIterableBase(PagedFluxBase<T,P> pagedFluxBase)"
  name: "PagedIterableBase(PagedFluxBase<T,P> pagedFluxBase)"
  nameWithType: "PagedIterableBase<T,P>.PagedIterableBase(PagedFluxBase<T,P> pagedFluxBase)"
  summary: "Creates instance given <xref uid=\"com.azure.core.http.rest.PagedFluxBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFluxBase\"></xref>."
  parameters:
  - description: "to use as iterable"
    name: "pagedFluxBase"
    type: "<xref href=\"com.azure.core.http.rest.PagedFluxBase?alt=com.azure.core.http.rest.PagedFluxBase&text=PagedFluxBase\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"P?alt=P&text=P\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PagedIterableBase(PagedFluxBase<T,P> pagedFluxBase)"
  desc: "Creates instance given <xref uid=\"com.azure.core.http.rest.PagedFluxBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFluxBase\"></xref>."
type: "class"
typeParameters:
- description: "The type of value contained in this <xref uid=\"IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref>."
  name: "T"
- description: "The response extending from <xref uid=\"PagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedResponse\"></xref>"
  name: "P"
desc: "This class provides utility to iterate over responses that extend <xref uid=\"com.azure.core.http.rest.PagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedResponse\"></xref> using <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> and <xref uid=\"java.lang.Iterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterable\"></xref> interfaces.\n\n**Code sample using <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> by page**\n\n```java\n// process the streamByPage\n CustomPagedFlux<String> customPagedFlux = createCustomInstance();\n PagedIterableBase<String, PagedResponse<String>> customPagedIterableResponse =\n     new PagedIterableBase<>(customPagedFlux);\n customPagedIterableResponse.streamByPage().forEach(resp -> {\n     System.out.printf(\"Response headers are %s. Url %s  and status code %d %n\", resp.getHeaders(),\n         resp.getRequest().getUrl(), resp.getStatusCode());\n     resp.getElements().forEach(value -> System.out.printf(\"Response value is %s %n\", value));\n });\n```\n\n**Code sample using <xref uid=\"java.lang.Iterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterable\"></xref> by page**\n\n```java\n// process the iterableByPage\n customPagedIterableResponse.iterableByPage().forEach(resp -> {\n     System.out.printf(\"Response headers are %s. Url %s  and status code %d %n\", resp.getHeaders(),\n         resp.getRequest().getUrl(), resp.getStatusCode());\n     resp.getElements().forEach(value -> System.out.printf(\"Response value is %s %n\", value));\n });\n```\n\n**Code sample using <xref uid=\"java.lang.Iterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterable\"></xref> by page and while loop**\n\n```java\n// iterate over each page\n for (PagedResponse<String> resp : customPagedIterableResponse.iterableByPage()) {\n     System.out.printf(\"Response headers are %s. Url %s  and status code %d %n\", resp.getHeaders(),\n         resp.getRequest().getUrl(), resp.getStatusCode());\n     resp.getElements().forEach(value -> System.out.printf(\"Response value is %s %n\", value));\n }\n```"
metadata: {}
package: "com.azure.core.http.rest"
artifact: com.azure:azure-core:1.34.0
