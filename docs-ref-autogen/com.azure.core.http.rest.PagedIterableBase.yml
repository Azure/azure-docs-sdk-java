### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.rest.PagedIterableBase
  id: PagedIterableBase
  artifact: com.azure:azure-core:1.7.0
  parent: com.azure.core.http.rest
  children:
  - com.azure.core.http.rest.PagedIterableBase.PagedIterableBase(com.azure.core.http.rest.PagedFluxBase<T,P>)
  langs:
  - java
  name: PagedIterableBase<T,P>
  nameWithType: PagedIterableBase<T,P>
  fullName: com.azure.core.http.rest.PagedIterableBase<T,P>
  type: Class
  package: com.azure.core.http.rest
  summary: >-
    This class provides utility to iterate over responses that extend <xref uid="com.azure.core.http.rest.PagedResponse" data-throw-if-not-resolved="false">PagedResponse</xref> using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> and <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> interfaces.


    **Code sample using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> by page**


    ```java

    // process the streamByPage
     CustomPagedFlux<String> customPagedFlux = createCustomInstance();
     PagedIterableBase<String, PagedResponse<String>> customPagedIterableResponse =
         new PagedIterableBase<>(customPagedFlux);
     customPagedIterableResponse.streamByPage().forEach(resp -> {
         System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
             resp.getRequest().getUrl(), resp.getStatusCode());
         resp.getItems().forEach(value -> {
             System.out.printf("Response value is %s %n", value);
         });
     });
    ```


    **Code sample using <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> by page**


    ```java

    // process the iterableByPage
     customPagedIterableResponse.iterableByPage().forEach(resp -> {
         System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
             resp.getRequest().getUrl(), resp.getStatusCode());
         resp.getItems().forEach(value -> {
             System.out.printf("Response value is %s %n", value);
         });
     });
    ```


    **Code sample using <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> by page and while loop**


    ```java

    // iterate over each page
     Iterator<PagedResponse<String>> iterator = customPagedIterableResponse.iterableByPage().iterator();
     while (iterator.hasNext()) {
         PagedResponse<String> resp = iterator.next();
         System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
             resp.getRequest().getUrl(), resp.getStatusCode());
         resp.getItems().forEach(value -> {
             System.out.printf("Response value is %s %n", value);
         });
     }
    ```
  syntax:
    content: public class PagedIterableBase<T,P> extends ContinuablePagedIterable<String,T,P>
    typeParameters:
    - id: T
    - id: P
  inheritance:
  - java.lang.Object
  - com.azure.core.util.IterableStream
  - com.azure.core.util.paging.ContinuablePagedIterable
  inheritedMembers:
  - com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
  - com.azure.core.util.IterableStream.iterator()
  - com.azure.core.util.IterableStream.stream()
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
  - com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
  - com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.http.rest.PagedIterableBase.PagedIterableBase(com.azure.core.http.rest.PagedFluxBase<T,P>)
  id: PagedIterableBase(com.azure.core.http.rest.PagedFluxBase<T,P>)
  artifact: com.azure:azure-core:1.7.0
  parent: com.azure.core.http.rest.PagedIterableBase
  langs:
  - java
  name: PagedIterableBase(PagedFluxBase<T,P> pagedFluxBase)
  nameWithType: PagedIterableBase<T,P>.PagedIterableBase(PagedFluxBase<T,P> pagedFluxBase)
  fullName: com.azure.core.http.rest.PagedIterableBase<T,P>.PagedIterableBase(PagedFluxBase<T,P> pagedFluxBase)
  overload: com.azure.core.http.rest.PagedIterableBase.PagedIterableBase*
  type: Constructor
  package: com.azure.core.http.rest
  summary: Creates instance given <xref uid="com.azure.core.http.rest.PagedFluxBase" data-throw-if-not-resolved="false">PagedFluxBase</xref>.
  syntax:
    content: public PagedIterableBase(PagedFluxBase<T,P> pagedFluxBase)
    parameters:
    - id: pagedFluxBase
      type: com.azure.core.http.rest.PagedFluxBase<T,P>
      description: to use as iterable
references:
- uid: com.azure.core.http.rest.PagedFluxBase<T,P>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFluxBase
    name: PagedFluxBase
    fullName: com.azure.core.http.rest.PagedFluxBase
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: P
    name: P
    fullName: P
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.rest.PagedIterableBase.PagedIterableBase*
  name: PagedIterableBase
  nameWithType: PagedIterableBase<T,P>.PagedIterableBase
  fullName: com.azure.core.http.rest.PagedIterableBase<T,P>.PagedIterableBase
  package: com.azure.core.http.rest
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: P
  name: P
  nameWithType: P
  fullName: P
- uid: com.azure.core.util.paging.ContinuablePagedIterable<java.lang.String,T,P>
  name: ContinuablePagedIterable<String,T,P>
  nameWithType: ContinuablePagedIterable<String,T,P>
  fullName: com.azure.core.util.paging.ContinuablePagedIterable<java.lang.String,T,P>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
  name: ContinuablePagedIterable.streamByPage(C)
  nameWithType: ContinuablePagedIterable.streamByPage(C)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
  name: ContinuablePagedIterable.iterableByPage(C,int)
  nameWithType: ContinuablePagedIterable.iterableByPage(C,int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
  name: ContinuablePagedIterable.streamByPage(C,int)
  nameWithType: ContinuablePagedIterable.streamByPage(C,int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
  name: ContinuablePagedIterable.iterableByPage(C)
  nameWithType: ContinuablePagedIterable.iterableByPage(C)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
  name: ContinuablePagedIterable.streamByPage()
  nameWithType: ContinuablePagedIterable.streamByPage()
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.core.util.IterableStream.iterator()
  name: IterableStream.iterator()
  nameWithType: IterableStream.iterator()
  fullName: com.azure.core.util.IterableStream.iterator()
- uid: com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
  name: IterableStream.<T>of(Iterable<T>)
  nameWithType: IterableStream.<T>of(Iterable<T>)
  fullName: com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
  name: ContinuablePagedIterable.streamByPage(int)
  nameWithType: ContinuablePagedIterable.streamByPage(int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
  name: ContinuablePagedIterable.iterableByPage(int)
  nameWithType: ContinuablePagedIterable.iterableByPage(int)
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.util.IterableStream.stream()
  name: IterableStream.stream()
  nameWithType: IterableStream.stream()
  fullName: com.azure.core.util.IterableStream.stream()
- uid: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
  name: ContinuablePagedIterable.iterableByPage()
  nameWithType: ContinuablePagedIterable.iterableByPage()
  fullName: com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
- uid: com.azure.core.http.rest.PagedFluxBase
  name: PagedFluxBase
  nameWithType: PagedFluxBase
  fullName: com.azure.core.http.rest.PagedFluxBase
- uid: T,P
  name: T,P
  nameWithType: T,P
  fullName: T,P
- uid: com.azure.core.util.paging.ContinuablePagedIterable
  name: ContinuablePagedIterable
  nameWithType: ContinuablePagedIterable
  fullName: com.azure.core.util.paging.ContinuablePagedIterable
- uid: java.lang.String,T,P
  name: String,T,P
  nameWithType: String,T,P
  fullName: java.lang.String,T,P
- uid: com.azure.core.util.IterableStream.
  name: IterableStream.
  nameWithType: IterableStream.
  fullName: com.azure.core.util.IterableStream.
- uid: T>of(java.lang.Iterable
  name: T>of(Iterable
  nameWithType: T>of(Iterable
  fullName: T>of(java.lang.Iterable
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
