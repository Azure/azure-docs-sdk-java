### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.models.Subscription"
fullName: "com.azure.resourcemanager.resources.models.Subscription"
name: "Subscription"
nameWithType: "Subscription"
summary: "An immutable client-side representation of an Azure subscription."
syntax: "public interface Subscription extends Indexable, HasInnerModel<SubscriptionInner>"
methods:
- uid: "com.azure.resourcemanager.resources.models.Subscription.displayName()"
  fullName: "com.azure.resourcemanager.resources.models.Subscription.displayName()"
  name: "displayName()"
  nameWithType: "Subscription.displayName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String displayName()"
  returns:
    description: "the name of the subscription for humans to read"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.resources.models.Subscription.getLocationByRegion(com.azure.core.management.Region)"
  fullName: "com.azure.resourcemanager.resources.models.Subscription.getLocationByRegion(Region region)"
  name: "getLocationByRegion(Region region)"
  nameWithType: "Subscription.getLocationByRegion(Region region)"
  summary: "Gets the data center location for the specified region, if the selected subscription has access to it."
  modifiers:
  - "abstract"
  parameters:
  - description: "an Azure region"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Location getLocationByRegion(Region region)"
  desc: "Gets the data center location for the specified region, if the selected subscription has access to it."
  returns:
    description: "an Azure data center location, or null if the location is not accessible to this subscription"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.Location?alt=com.azure.resourcemanager.resources.models.Location&text=Location\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.models.Subscription.listLocations()"
  fullName: "com.azure.resourcemanager.resources.models.Subscription.listLocations()"
  name: "listLocations()"
  nameWithType: "Subscription.listLocations()"
  summary: "List the locations the subscription has access to."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Location> listLocations()"
  desc: "List the locations the subscription has access to."
  returns:
    description: "the lazy list of locations"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.Location?alt=com.azure.resourcemanager.resources.models.Location&text=Location\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.models.Subscription.state()"
  fullName: "com.azure.resourcemanager.resources.models.Subscription.state()"
  name: "state()"
  nameWithType: "Subscription.state()"
  modifiers:
  - "abstract"
  syntax: "public abstract SubscriptionState state()"
  returns:
    description: "the state of the subscription."
    type: "<xref href=\"com.azure.resourcemanager.resources.models.SubscriptionState?alt=com.azure.resourcemanager.resources.models.SubscriptionState&text=SubscriptionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.models.Subscription.subscriptionId()"
  fullName: "com.azure.resourcemanager.resources.models.Subscription.subscriptionId()"
  name: "subscriptionId()"
  nameWithType: "Subscription.subscriptionId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String subscriptionId()"
  returns:
    description: "the UUID of the subscription"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.resources.models.Subscription.subscriptionPolicies()"
  fullName: "com.azure.resourcemanager.resources.models.Subscription.subscriptionPolicies()"
  name: "subscriptionPolicies()"
  nameWithType: "Subscription.subscriptionPolicies()"
  modifiers:
  - "abstract"
  syntax: "public abstract SubscriptionPolicies subscriptionPolicies()"
  returns:
    description: "the policies defined in the subscription"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.SubscriptionPolicies?alt=com.azure.resourcemanager.resources.models.SubscriptionPolicies&text=SubscriptionPolicies\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of an Azure subscription."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.SubscriptionInner?alt=com.azure.resourcemanager.resources.fluent.models.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.resources.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
