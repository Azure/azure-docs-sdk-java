### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient"
fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient"
name: "ContractsContractsClient"
nameWithType: "ContractsContractsClient"
summary: "An instance of this class provides access to all the operations defined in ContractsContractsClient."
syntax: "public interface ContractsContractsClient"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.createContract(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.createContract(MicrosoftGraphContractInner body)"
  name: "createContract(MicrosoftGraphContractInner body)"
  nameWithType: "ContractsContractsClient.createContract(MicrosoftGraphContractInner body)"
  summary: "Add new entity to contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphContractInner createContract(MicrosoftGraphContractInner body)"
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.createContractAsync(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.createContractAsync(MicrosoftGraphContractInner body)"
  name: "createContractAsync(MicrosoftGraphContractInner body)"
  nameWithType: "ContractsContractsClient.createContractAsync(MicrosoftGraphContractInner body)"
  summary: "Add new entity to contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphContractInner> createContractAsync(MicrosoftGraphContractInner body)"
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.createContractWithResponse(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.createContractWithResponse(MicrosoftGraphContractInner body, Context context)"
  name: "createContractWithResponse(MicrosoftGraphContractInner body, Context context)"
  nameWithType: "ContractsContractsClient.createContractWithResponse(MicrosoftGraphContractInner body, Context context)"
  summary: "Add new entity to contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphContractInner> createContractWithResponse(MicrosoftGraphContractInner body, Context context)"
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.createContractWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.createContractWithResponseAsync(MicrosoftGraphContractInner body)"
  name: "createContractWithResponseAsync(MicrosoftGraphContractInner body)"
  nameWithType: "ContractsContractsClient.createContractWithResponseAsync(MicrosoftGraphContractInner body)"
  summary: "Add new entity to contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphContractInner>> createContractWithResponseAsync(MicrosoftGraphContractInner body)"
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContract(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContract(String contractId)"
  name: "deleteContract(String contractId)"
  nameWithType: "ContractsContractsClient.deleteContract(String contractId)"
  summary: "Delete entity from contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteContract(String contractId)"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContractAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContractAsync(String contractId)"
  name: "deleteContractAsync(String contractId)"
  nameWithType: "ContractsContractsClient.deleteContractAsync(String contractId)"
  summary: "Delete entity from contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteContractAsync(String contractId)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContractAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContractAsync(String contractId, String ifMatch)"
  name: "deleteContractAsync(String contractId, String ifMatch)"
  nameWithType: "ContractsContractsClient.deleteContractAsync(String contractId, String ifMatch)"
  summary: "Delete entity from contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteContractAsync(String contractId, String ifMatch)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContractWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContractWithResponse(String contractId, String ifMatch, Context context)"
  name: "deleteContractWithResponse(String contractId, String ifMatch, Context context)"
  nameWithType: "ContractsContractsClient.deleteContractWithResponse(String contractId, String ifMatch, Context context)"
  summary: "Delete entity from contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteContractWithResponse(String contractId, String ifMatch, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContractWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.deleteContractWithResponseAsync(String contractId, String ifMatch)"
  name: "deleteContractWithResponseAsync(String contractId, String ifMatch)"
  nameWithType: "ContractsContractsClient.deleteContractWithResponseAsync(String contractId, String ifMatch)"
  summary: "Delete entity from contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteContractWithResponseAsync(String contractId, String ifMatch)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContract(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContract(String contractId)"
  name: "getContract(String contractId)"
  nameWithType: "ContractsContractsClient.getContract(String contractId)"
  summary: "Get entity from contracts by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphContractInner getContract(String contractId)"
  returns:
    description: "entity from contracts by key."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContractAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContractAsync(String contractId)"
  name: "getContractAsync(String contractId)"
  nameWithType: "ContractsContractsClient.getContractAsync(String contractId)"
  summary: "Get entity from contracts by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphContractInner> getContractAsync(String contractId)"
  returns:
    description: "entity from contracts by key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContractAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContractAsync(String contractId, List<ContractsContractSelect> select, List<String> expand)"
  name: "getContractAsync(String contractId, List<ContractsContractSelect> select, List<String> expand)"
  nameWithType: "ContractsContractsClient.getContractAsync(String contractId, List<ContractsContractSelect> select, List<String> expand)"
  summary: "Get entity from contracts by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect&text=ContractsContractSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphContractInner> getContractAsync(String contractId, List<ContractsContractSelect> select, List<String> expand)"
  returns:
    description: "entity from contracts by key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContractWithResponse(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContractWithResponse(String contractId, List<ContractsContractSelect> select, List<String> expand, Context context)"
  name: "getContractWithResponse(String contractId, List<ContractsContractSelect> select, List<String> expand, Context context)"
  nameWithType: "ContractsContractsClient.getContractWithResponse(String contractId, List<ContractsContractSelect> select, List<String> expand, Context context)"
  summary: "Get entity from contracts by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect&text=ContractsContractSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphContractInner> getContractWithResponse(String contractId, List<ContractsContractSelect> select, List<String> expand, Context context)"
  returns:
    description: "entity from contracts by key."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContractWithResponseAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.getContractWithResponseAsync(String contractId, List<ContractsContractSelect> select, List<String> expand)"
  name: "getContractWithResponseAsync(String contractId, List<ContractsContractSelect> select, List<String> expand)"
  nameWithType: "ContractsContractsClient.getContractWithResponseAsync(String contractId, List<ContractsContractSelect> select, List<String> expand)"
  summary: "Get entity from contracts by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect&text=ContractsContractSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphContractInner>> getContractWithResponseAsync(String contractId, List<ContractsContractSelect> select, List<String> expand)"
  returns:
    description: "entity from contracts by key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.listContract()"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.listContract()"
  name: "listContract()"
  nameWithType: "ContractsContractsClient.listContract()"
  summary: "Get entities from contracts."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MicrosoftGraphContractInner> listContract()"
  returns:
    description: "entities from contracts."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.listContract(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.Get5ItemsItem>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.listContract(Integer top, Integer skip, String search, String filter, Boolean count, List<Get5ItemsItem> orderby, List<ContractsContractSelect> select, List<String> expand, Context context)"
  name: "listContract(Integer top, Integer skip, String search, String filter, Boolean count, List<Get5ItemsItem> orderby, List<ContractsContractSelect> select, List<String> expand, Context context)"
  nameWithType: "ContractsContractsClient.listContract(Integer top, Integer skip, String search, String filter, Boolean count, List<Get5ItemsItem> orderby, List<ContractsContractSelect> select, List<String> expand, Context context)"
  summary: "Get entities from contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.Get5ItemsItem?alt=com.azure.resourcemanager.authorization.fluent.models.Get5ItemsItem&text=Get5ItemsItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect&text=ContractsContractSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphContractInner> listContract(Integer top, Integer skip, String search, String filter, Boolean count, List<Get5ItemsItem> orderby, List<ContractsContractSelect> select, List<String> expand, Context context)"
  returns:
    description: "entities from contracts."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.listContractAsync()"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.listContractAsync()"
  name: "listContractAsync()"
  nameWithType: "ContractsContractsClient.listContractAsync()"
  summary: "Get entities from contracts."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<MicrosoftGraphContractInner> listContractAsync()"
  returns:
    description: "entities from contracts."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.listContractAsync(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.Get5ItemsItem>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.listContractAsync(Integer top, Integer skip, String search, String filter, Boolean count, List<Get5ItemsItem> orderby, List<ContractsContractSelect> select, List<String> expand)"
  name: "listContractAsync(Integer top, Integer skip, String search, String filter, Boolean count, List<Get5ItemsItem> orderby, List<ContractsContractSelect> select, List<String> expand)"
  nameWithType: "ContractsContractsClient.listContractAsync(Integer top, Integer skip, String search, String filter, Boolean count, List<Get5ItemsItem> orderby, List<ContractsContractSelect> select, List<String> expand)"
  summary: "Get entities from contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.Get5ItemsItem?alt=com.azure.resourcemanager.authorization.fluent.models.Get5ItemsItem&text=Get5ItemsItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ContractsContractSelect&text=ContractsContractSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphContractInner> listContractAsync(Integer top, Integer skip, String search, String filter, Boolean count, List<Get5ItemsItem> orderby, List<ContractsContractSelect> select, List<String> expand)"
  returns:
    description: "entities from contracts."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.updateContract(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.updateContract(String contractId, MicrosoftGraphContractInner body)"
  name: "updateContract(String contractId, MicrosoftGraphContractInner body)"
  nameWithType: "ContractsContractsClient.updateContract(String contractId, MicrosoftGraphContractInner body)"
  summary: "Update entity in contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateContract(String contractId, MicrosoftGraphContractInner body)"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.updateContractAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.updateContractAsync(String contractId, MicrosoftGraphContractInner body)"
  name: "updateContractAsync(String contractId, MicrosoftGraphContractInner body)"
  nameWithType: "ContractsContractsClient.updateContractAsync(String contractId, MicrosoftGraphContractInner body)"
  summary: "Update entity in contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateContractAsync(String contractId, MicrosoftGraphContractInner body)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.updateContractWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.updateContractWithResponse(String contractId, MicrosoftGraphContractInner body, Context context)"
  name: "updateContractWithResponse(String contractId, MicrosoftGraphContractInner body, Context context)"
  nameWithType: "ContractsContractsClient.updateContractWithResponse(String contractId, MicrosoftGraphContractInner body, Context context)"
  summary: "Update entity in contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateContractWithResponse(String contractId, MicrosoftGraphContractInner body, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.updateContractWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ContractsContractsClient.updateContractWithResponseAsync(String contractId, MicrosoftGraphContractInner body)"
  name: "updateContractWithResponseAsync(String contractId, MicrosoftGraphContractInner body)"
  nameWithType: "ContractsContractsClient.updateContractWithResponseAsync(String contractId, MicrosoftGraphContractInner body)"
  summary: "Update entity in contracts."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of contract."
    name: "contractId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphContractInner&text=MicrosoftGraphContractInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateContractWithResponseAsync(String contractId, MicrosoftGraphContractInner body)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.14.0
