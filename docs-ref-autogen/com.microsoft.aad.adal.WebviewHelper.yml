### YamlMime:JavaType
constructors:
- fullName: com.microsoft.aad.adal.WebviewHelper.WebviewHelper(Intent requestIntent)
  name: WebviewHelper(Intent requestIntent)
  nameWithType: WebviewHelper.WebviewHelper(Intent requestIntent)
  parameters:
  - description: <p>Intent that has request information. </p>
    name: requestIntent
    type: <xref href="Intent?alt=Intent&text=Intent" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Construct with incoming requestIntent that you receive at startActivityForResult.</p>

    <p></p>
  syntax: public WebviewHelper(Intent requestIntent)
  uid: com.microsoft.aad.adal.WebviewHelper.WebviewHelper(Intent)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.aad.adal.WebviewHelper.getPreKeyAuthInfo(String challengeUrl)
  name: getPreKeyAuthInfo(String challengeUrl)
  nameWithType: WebviewHelper.getPreKeyAuthInfo(String challengeUrl)
  parameters:
  - description: <p>URL from which challenge response is received </p>
    name: challengeUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="UnsupportedEncodingException?alt=UnsupportedEncodingException&text=UnsupportedEncodingException" data-throw-if-not-resolved="False"/>
    description: <p>on malformed exception </p>
  - type: <xref href="AuthenticationException?alt=AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
    description: <p>on parameter validation failure </p>
  returns:
    description: <p>PreKeyAuth class filled in </p>
    type: <xref href="PreKeyAuthInfo?alt=PreKeyAuthInfo&text=PreKeyAuthInfo" data-throw-if-not-resolved="False"/>
  syntax: public PreKeyAuthInfo getPreKeyAuthInfo(String challengeUrl)
  uid: com.microsoft.aad.adal.WebviewHelper.getPreKeyAuthInfo(String)
- fullName: com.microsoft.aad.adal.WebviewHelper.getRedirectUrl()
  name: getRedirectUrl()
  nameWithType: WebviewHelper.getRedirectUrl()
  returns:
    description: <p>Url </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets redirect url to tell the webview to stop before navigating.</p>

    <p></p>
  syntax: public String getRedirectUrl()
  uid: com.microsoft.aad.adal.WebviewHelper.getRedirectUrl()
- fullName: com.microsoft.aad.adal.WebviewHelper.getResultIntent(final String finalUrl)
  name: getResultIntent(final String finalUrl)
  nameWithType: WebviewHelper.getResultIntent(final String finalUrl)
  parameters:
  - description: <p>url to be passed to the intent </p>
    name: finalUrl
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Intent </p>
    type: <xref href="Intent?alt=Intent&text=Intent" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates result intent to pass into onActivityResult method.</p>

    <p></p>
  syntax: public Intent getResultIntent(final String finalUrl)
  uid: com.microsoft.aad.adal.WebviewHelper.getResultIntent(final String)
- fullName: com.microsoft.aad.adal.WebviewHelper.getStartUrl()
  name: getStartUrl()
  nameWithType: WebviewHelper.getStartUrl()
  exceptions:
  - type: <xref href="UnsupportedEncodingException?alt=UnsupportedEncodingException&text=UnsupportedEncodingException" data-throw-if-not-resolved="False"/>
    description: <p>if the url is malformed </p>
  returns:
    description: <p>Url </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets startUrl to use as url to start webview.</p>

    <p></p>
  syntax: public String getStartUrl()
  uid: com.microsoft.aad.adal.WebviewHelper.getStartUrl()
- fullName: com.microsoft.aad.adal.WebviewHelper.validateRequestIntent()
  name: validateRequestIntent()
  nameWithType: WebviewHelper.validateRequestIntent()
  summary: <p>Check request intent fields. </p>
  syntax: public void validateRequestIntent()
  uid: com.microsoft.aad.adal.WebviewHelper.validateRequestIntent()
nameWithType: WebviewHelper
syntax: public class WebviewHelper
type: class
uid: com.microsoft.aad.adal.WebviewHelper
fullName: com.microsoft.aad.adal.WebviewHelper
name: WebviewHelper
package: com.microsoft.aad.adal
summary: <p>Wrapper class to handle internals for request intent and response for custom webview usage. </p>
metadata: {}
