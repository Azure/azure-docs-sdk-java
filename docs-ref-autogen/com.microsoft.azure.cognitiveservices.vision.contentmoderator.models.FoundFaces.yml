### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.advancedInfo()
  name: advancedInfo()
  nameWithType: FoundFaces.advancedInfo()
  returns:
    description: <p>the advancedInfo value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.KeyValuePair?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.KeyValuePair&text=KeyValuePair" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the advancedInfo value.</p>

    <p></p>
  syntax: public List<KeyValuePair> advancedInfo()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.advancedInfo()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.cacheId()
  name: cacheId()
  nameWithType: FoundFaces.cacheId()
  returns:
    description: <p>the cacheId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the cacheId value.</p>

    <p></p>
  syntax: public String cacheId()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.cacheId()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.count()
  name: count()
  nameWithType: FoundFaces.count()
  returns:
    description: <p>the count value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the count value.</p>

    <p></p>
  syntax: public Integer count()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.count()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.faces()
  name: faces()
  nameWithType: FoundFaces.faces()
  returns:
    description: <p>the faces value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Face?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Face&text=Face" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the faces value.</p>

    <p></p>
  syntax: public List<Face> faces()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.faces()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.result()
  name: result()
  nameWithType: FoundFaces.result()
  returns:
    description: <p>the result value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the result value.</p>

    <p></p>
  syntax: public Boolean result()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.result()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.status()
  name: status()
  nameWithType: FoundFaces.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status&text=Status" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the status value.</p>

    <p></p>
  syntax: public Status status()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.status()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.trackingId()
  name: trackingId()
  nameWithType: FoundFaces.trackingId()
  returns:
    description: <p>the trackingId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the trackingId value.</p>

    <p></p>
  syntax: public String trackingId()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.trackingId()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withAdvancedInfo(List<KeyValuePair> advancedInfo)
  name: withAdvancedInfo(List<KeyValuePair> advancedInfo)
  nameWithType: FoundFaces.withAdvancedInfo(List<KeyValuePair> advancedInfo)
  parameters:
  - description: <p>the advancedInfo value to set </p>
    name: advancedInfo
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.KeyValuePair?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.KeyValuePair&text=KeyValuePair" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the FoundFaces object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the advancedInfo value.</p>

    <p></p>
  syntax: public FoundFaces withAdvancedInfo(List<KeyValuePair> advancedInfo)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withAdvancedInfo(List<KeyValuePair>)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withCacheId(String cacheId)
  name: withCacheId(String cacheId)
  nameWithType: FoundFaces.withCacheId(String cacheId)
  parameters:
  - description: <p>the cacheId value to set </p>
    name: cacheId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FoundFaces object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the cacheId value.</p>

    <p></p>
  syntax: public FoundFaces withCacheId(String cacheId)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withCacheId(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withCount(Integer count)
  name: withCount(Integer count)
  nameWithType: FoundFaces.withCount(Integer count)
  parameters:
  - description: <p>the count value to set </p>
    name: count
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FoundFaces object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the count value.</p>

    <p></p>
  syntax: public FoundFaces withCount(Integer count)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withCount(Integer)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withFaces(List<Face> faces)
  name: withFaces(List<Face> faces)
  nameWithType: FoundFaces.withFaces(List<Face> faces)
  parameters:
  - description: <p>the faces value to set </p>
    name: faces
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Face?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Face&text=Face" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the FoundFaces object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the faces value.</p>

    <p></p>
  syntax: public FoundFaces withFaces(List<Face> faces)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withFaces(List<Face>)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withResult(Boolean result)
  name: withResult(Boolean result)
  nameWithType: FoundFaces.withResult(Boolean result)
  parameters:
  - description: <p>the result value to set </p>
    name: result
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FoundFaces object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the result value.</p>

    <p></p>
  syntax: public FoundFaces withResult(Boolean result)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withResult(Boolean)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withStatus(Status status)
  name: withStatus(Status status)
  nameWithType: FoundFaces.withStatus(Status status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status&text=Status" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FoundFaces object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the status value.</p>

    <p></p>
  syntax: public FoundFaces withStatus(Status status)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withStatus(Status)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withTrackingId(String trackingId)
  name: withTrackingId(String trackingId)
  nameWithType: FoundFaces.withTrackingId(String trackingId)
  parameters:
  - description: <p>the trackingId value to set </p>
    name: trackingId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FoundFaces object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the trackingId value.</p>

    <p></p>
  syntax: public FoundFaces withTrackingId(String trackingId)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces.withTrackingId(String)
nameWithType: FoundFaces
syntax: public class FoundFaces
type: class
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces
name: FoundFaces
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models
summary: <p>Request object the contains found faces. </p>
metadata: {}
