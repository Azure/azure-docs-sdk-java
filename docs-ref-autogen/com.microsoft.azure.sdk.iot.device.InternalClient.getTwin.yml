### YamlMime:JavaMember
nameWithType: InternalClient.getTwin
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.InternalClient.getTwin()
  name: getTwin()
  nameWithType: InternalClient.getTwin()
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>if the service fails to acknowledge the getTwin request within the default timeout. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the operation is interrupted while waiting on the getTwin request to be acknowledged by the service. </p>
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if this client is not open or if this client has not subscribed to desired properties yet. </p>
  returns:
    description: <p>The twin for this client </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.Twin?alt=com.microsoft.azure.sdk.iot.device.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the twin for this client. This client must have subscribed to desired properties before this method can be called.</p>

    <p></p>
  syntax: public Twin getTwin()
  uid: com.microsoft.azure.sdk.iot.device.InternalClient.getTwin()
- fullName: com.microsoft.azure.sdk.iot.device.InternalClient.getTwin(int timeoutMilliseconds)
  name: getTwin(int timeoutMilliseconds)
  nameWithType: InternalClient.getTwin(int timeoutMilliseconds)
  parameters:
  - description: <p>The maximum number of milliseconds this call will wait for the service to return the twin. If 0, then it will wait indefinitely. </p>
    name: timeoutMilliseconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>if the service fails to acknowledge the getTwin request within the provided timeout. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the operation is interrupted while waiting on the getTwin request to be acknowledged by the service. </p>
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if this client is not open or if this client has not subscribed to desired properties yet. </p>
  returns:
    description: <p>The twin for this client </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.Twin?alt=com.microsoft.azure.sdk.iot.device.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the twin for this client. This client must have subscribed to desired properties before this method can be called.</p>

    <p></p>
  syntax: public Twin getTwin(int timeoutMilliseconds)
  uid: com.microsoft.azure.sdk.iot.device.InternalClient.getTwin(int)
uid: com.microsoft.azure.sdk.iot.device.InternalClient.getTwin*
fullName: com.microsoft.azure.sdk.iot.device.InternalClient.getTwin
name: getTwin()
package: com.microsoft.azure.sdk.iot.device
metadata: {}
