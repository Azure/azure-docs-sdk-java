### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources
  id: SearchIndexerDataSources
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes
  children:
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataChangeDetectionPolicy,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  langs:
  - java
  name: SearchIndexerDataSources
  nameWithType: SearchIndexerDataSources
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources
  type: Class
  package: com.azure.search.documents.indexes
  summary: Utility class that aids in the creation of <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnections</xref>.
  syntax:
    content: public final class SearchIndexerDataSources
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.SearchIndexerDataSources()
  id: SearchIndexerDataSources()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: SearchIndexerDataSources()
  nameWithType: SearchIndexerDataSources.SearchIndexerDataSources()
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.SearchIndexerDataSources()
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.SearchIndexerDataSources*
  type: Constructor
  package: com.azure.search.documents.indexes
  syntax:
    content: private SearchIndexerDataSources()
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage(java.lang.String,java.lang.String,java.lang.String)
  id: createFromAzureBlobStorage(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromAzureBlobStorage(String dataSourceName, String storageConnectionString, String containerName)
  nameWithType: SearchIndexerDataSources.createFromAzureBlobStorage(String dataSourceName, String storageConnectionString, String containerName)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage(String dataSourceName, String storageConnectionString, String containerName)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to an Azure Blob container.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromAzureBlobStorage(String dataSourceName, String storageConnectionString, String containerName)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: storageConnectionString
      type: java.lang.String
      description: >-
        The connection string for the Azure Storage account. The Storage connection string
         must use this format:
         <p>
         <code>"DefaultEndpointsProtocol=https;AccountName=[your storage account];AccountKey=[your account key]:</code>
         <p>
         <em> Note: The connection string must use HTTPS. </em>
    - id: containerName
      type: java.lang.String
      description: The name of the container from which to read blobs.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Azure Blob <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  id: createFromAzureBlobStorage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromAzureBlobStorage(String dataSourceName, String storageConnectionString, String containerName, String pathPrefix, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  nameWithType: SearchIndexerDataSources.createFromAzureBlobStorage(String dataSourceName, String storageConnectionString, String containerName, String pathPrefix, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage(String dataSourceName, String storageConnectionString, String containerName, String pathPrefix, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to an Azure Blob container.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromAzureBlobStorage(String dataSourceName, String storageConnectionString, String containerName, String pathPrefix, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: storageConnectionString
      type: java.lang.String
      description: >-
        The connection string for the Azure Storage account. The Storage connection string
         must use this format:
         <p>
         <code>"DefaultEndpointsProtocol=https;AccountName=[your storage account];AccountKey=[your account key]:</code>
         <p>
         <em> Note: The connection string must use HTTPS. </em>
    - id: containerName
      type: java.lang.String
      description: The name of the container from which to read blobs.
    - id: pathPrefix
      type: java.lang.String
      description: >-
        Optional. Limits the data source to only include blobs starting with the specified prefix, this
         is useful when blobs are organized into "virtual folders".
    - id: description
      type: java.lang.String
      description: Optional. Description of the data source
    - id: deletionDetectionPolicy
      type: com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy
      description: Optional. The data deletion detection policy for the data source
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Azure Blob <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql(java.lang.String,java.lang.String,java.lang.String)
  id: createFromAzureSql(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromAzureSql(String dataSourceName, String sqlConnectionString, String tableOrViewName)
  nameWithType: SearchIndexerDataSources.createFromAzureSql(String dataSourceName, String sqlConnectionString, String tableOrViewName)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql(String dataSourceName, String sqlConnectionString, String tableOrViewName)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to an Azure SQL database.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromAzureSql(String dataSourceName, String sqlConnectionString, String tableOrViewName)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: sqlConnectionString
      type: java.lang.String
      description: The connection string for the Azure SQL database.
    - id: tableOrViewName
      type: java.lang.String
      description: The name of the table or view from which to read rows.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Azure SQL <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataChangeDetectionPolicy,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  id: createFromAzureSql(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataChangeDetectionPolicy,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromAzureSql(String dataSourceName, String sqlConnectionString, String tableOrViewName, String description, DataChangeDetectionPolicy changeDetectionPolicy, DataDeletionDetectionPolicy deletionDetectionPolicy)
  nameWithType: SearchIndexerDataSources.createFromAzureSql(String dataSourceName, String sqlConnectionString, String tableOrViewName, String description, DataChangeDetectionPolicy changeDetectionPolicy, DataDeletionDetectionPolicy deletionDetectionPolicy)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql(String dataSourceName, String sqlConnectionString, String tableOrViewName, String description, DataChangeDetectionPolicy changeDetectionPolicy, DataDeletionDetectionPolicy deletionDetectionPolicy)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to an Azure SQL database.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromAzureSql(String dataSourceName, String sqlConnectionString, String tableOrViewName, String description, DataChangeDetectionPolicy changeDetectionPolicy, DataDeletionDetectionPolicy deletionDetectionPolicy)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: sqlConnectionString
      type: java.lang.String
      description: The connection string for the Azure SQL database.
    - id: tableOrViewName
      type: java.lang.String
      description: The name of the table or view from which to read rows.
    - id: description
      type: java.lang.String
      description: Optional. Description of the data source.
    - id: changeDetectionPolicy
      type: com.azure.search.documents.indexes.models.DataChangeDetectionPolicy
      description: >-
        The change detection policy for the data source. Note that only high watermark
         change detection is allowed for Azure SQL when deletion detection is enabled.
    - id: deletionDetectionPolicy
      type: com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy
      description: Optional. The data deletion detection policy for the data source.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Azure SQL <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage(java.lang.String,java.lang.String,java.lang.String)
  id: createFromAzureTableStorage(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromAzureTableStorage(String dataSourceName, String storageConnectionString, String tableName)
  nameWithType: SearchIndexerDataSources.createFromAzureTableStorage(String dataSourceName, String storageConnectionString, String tableName)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage(String dataSourceName, String storageConnectionString, String tableName)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to an Azure Table.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromAzureTableStorage(String dataSourceName, String storageConnectionString, String tableName)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: storageConnectionString
      type: java.lang.String
      description: >-
        The connection string for the Azure Storage account. The Storage connection string
         must use this format:
         <p>
         <code>"DefaultEndpointsProtocol=https;AccountName=[your storage account];AccountKey=[your account key]:</code>
         <p>
         <em> Note: The connection string must use HTTPS. </em>
    - id: tableName
      type: java.lang.String
      description: The name of the Azure table from which to read rows.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Azure Table <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  id: createFromAzureTableStorage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromAzureTableStorage(String dataSourceName, String storageConnectionString, String tableName, String query, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  nameWithType: SearchIndexerDataSources.createFromAzureTableStorage(String dataSourceName, String storageConnectionString, String tableName, String query, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage(String dataSourceName, String storageConnectionString, String tableName, String query, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to an Azure Table.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromAzureTableStorage(String dataSourceName, String storageConnectionString, String tableName, String query, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: storageConnectionString
      type: java.lang.String
      description: >-
        The connection string for the Azure Storage account. The Storage connection string
         must use this format:
         <p>
         <code>"DefaultEndpointsProtocol=https;AccountName=[your storage account];AccountKey=[your account key]:</code>
         <p>
         <em> Note: The connection string must use HTTPS. </em>
    - id: tableName
      type: java.lang.String
      description: The name of the Azure table from which to read rows.
    - id: query
      type: java.lang.String
      description: Optional. A query that is applied to the table when reading rows.
    - id: description
      type: java.lang.String
      description: Optional. Description of the data source
    - id: deletionDetectionPolicy
      type: com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy
      description: Optional. The data deletion detection policy for the data source.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Azure Table <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(java.lang.String,java.lang.String,java.lang.String)
  id: createFromCosmos(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName)
  nameWithType: SearchIndexerDataSources.createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to a Cosmos database with change detection set to true.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: cosmosConnectionString
      type: java.lang.String
      description: >-
        The connection string for the Cosmos database. It must follow this format:
         <p>
         <code>AccountName|AccountEndpoint=[your account name or endpoint]; AccountKey=[your account key];Database=[your
         database name]"</code>
    - id: collectionName
      type: java.lang.String
      description: The name of the collection from which to read documents
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Cosmos <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: createFromCosmos(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName, Boolean useChangeDetection)
  nameWithType: SearchIndexerDataSources.createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName, Boolean useChangeDetection)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName, Boolean useChangeDetection)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to a Cosmos database.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName, Boolean useChangeDetection)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: cosmosConnectionString
      type: java.lang.String
      description: >-
        The connection string for the Cosmos database. It must follow this format:
         <p>
         <code>AccountName|AccountEndpoint=[your account name or endpoint]; AccountKey=[your account key];Database=[your
         database name]"</code>
    - id: collectionName
      type: java.lang.String
      description: The name of the collection from which to read documents
    - id: useChangeDetection
      type: java.lang.Boolean
      description: Optional. Indicates whether to use change detection when indexing. Default is true.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Cosmos <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  id: createFromCosmos(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerDataSources
  langs:
  - java
  name: createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName, String query, Boolean useChangeDetection, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  nameWithType: SearchIndexerDataSources.createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName, String query, Boolean useChangeDetection, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName, String query, Boolean useChangeDetection, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
  overload: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Creates a new <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to connect to a Cosmos database.
  syntax:
    content: public static SearchIndexerDataSourceConnection createFromCosmos(String dataSourceName, String cosmosConnectionString, String collectionName, String query, Boolean useChangeDetection, String description, DataDeletionDetectionPolicy deletionDetectionPolicy)
    parameters:
    - id: dataSourceName
      type: java.lang.String
      description: The name of the data source.
    - id: cosmosConnectionString
      type: java.lang.String
      description: >-
        The connection string for the Cosmos database. It must follow this format:
         <p>
         <code>AccountName|AccountEndpoint=[your account name or endpoint]; AccountKey=[your account key];Database=[your
         database name]"</code>
    - id: collectionName
      type: java.lang.String
      description: The name of the collection from which to read documents.
    - id: query
      type: java.lang.String
      description: Optional. A query that is applied to the collection when reading documents.
    - id: useChangeDetection
      type: java.lang.Boolean
      description: Optional. Indicates whether to use change detection when indexing. Default is true.
    - id: description
      type: java.lang.String
      description: Optional. Description of the data source
    - id: deletionDetectionPolicy
      type: com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy
      description: Optional. The data deletion detection policy for the data source.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: A new Cosmos <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> instance.
references:
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.SearchIndexerDataSources*
  name: SearchIndexerDataSources
  nameWithType: SearchIndexerDataSources.SearchIndexerDataSources
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.SearchIndexerDataSources
  package: com.azure.search.documents.indexes
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.models.DataChangeDetectionPolicy
  name: DataChangeDetectionPolicy
  nameWithType: DataChangeDetectionPolicy
  fullName: com.azure.search.documents.indexes.models.DataChangeDetectionPolicy
- uid: com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy
  name: DataDeletionDetectionPolicy
  nameWithType: DataDeletionDetectionPolicy
  fullName: com.azure.search.documents.indexes.models.DataDeletionDetectionPolicy
- uid: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
  name: SearchIndexerDataSourceConnection
  nameWithType: SearchIndexerDataSourceConnection
  fullName: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql*
  name: createFromAzureSql
  nameWithType: SearchIndexerDataSources.createFromAzureSql
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureSql
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage*
  name: createFromAzureBlobStorage
  nameWithType: SearchIndexerDataSources.createFromAzureBlobStorage
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureBlobStorage
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage*
  name: createFromAzureTableStorage
  nameWithType: SearchIndexerDataSources.createFromAzureTableStorage
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromAzureTableStorage
  package: com.azure.search.documents.indexes
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos*
  name: createFromCosmos
  nameWithType: SearchIndexerDataSources.createFromCosmos
  fullName: com.azure.search.documents.indexes.SearchIndexerDataSources.createFromCosmos
  package: com.azure.search.documents.indexes
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
