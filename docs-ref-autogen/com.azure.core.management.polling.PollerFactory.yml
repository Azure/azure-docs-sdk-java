### YamlMime:JavaType
uid: "com.azure.core.management.polling.PollerFactory"
fullName: "com.azure.core.management.polling.PollerFactory"
name: "PollerFactory"
nameWithType: "PollerFactory"
summary: "Factory to create Poller<wbr>Flux for Azure resource manager (ARM) long-running-operation (LRO)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **PollerFactory**"
methods:
- uid: "com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.lang.String)"
  fullName: "com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr)"
  name: "<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr)"
  nameWithType: "PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr)"
  summary: "Dehydrate a Poller<wbr>Flux from a string."
  modifiers:
  - "static"
  parameters:
  - description: "the serializer for any encoding and decoding"
    name: "serializerAdapter"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerAdapter?alt=com.azure.core.util.serializer.SerializerAdapter&text=SerializerAdapter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HttpPipeline for making any Http request (e.g. poll)"
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type of the poll result, if no result is expecting then this should be Void.class"
    name: "pollResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the type of the final result, if no result is expecting then this should be Void.class"
    name: "finalResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the default poll interval to use if service does not return retry-after"
    name: "defaultPollInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "the string to dehydrate PollerFlux from"
    name: "pollingStateStr"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr)"
  desc: "Dehydrate a PollerFlux from a string."
  returns:
    description: "PollerFlux"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr, Context context)"
  name: "<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr, Context context)"
  nameWithType: "PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr, Context context)"
  summary: "Dehydrate a Poller<wbr>Flux from a string."
  modifiers:
  - "static"
  parameters:
  - description: "the serializer for any encoding and decoding"
    name: "serializerAdapter"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerAdapter?alt=com.azure.core.util.serializer.SerializerAdapter&text=SerializerAdapter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HttpPipeline for making any Http request (e.g. poll)"
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type of the poll result, if no result is expecting then this should be Void.class"
    name: "pollResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the type of the final result, if no result is expecting then this should be Void.class"
    name: "finalResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the default poll interval to use if service does not return retry-after"
    name: "defaultPollInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "the string to dehydrate PollerFlux from"
    name: "pollingStateStr"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the context shared by all requests"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr, Context context)"
  desc: "Dehydrate a PollerFlux from a string."
  returns:
    description: "PollerFlux"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>)"
  fullName: "com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation)"
  name: "<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation)"
  nameWithType: "PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation)"
  summary: "Creates a Poller<wbr>Flux."
  modifiers:
  - "static"
  parameters:
  - description: "the serializer for any encoding and decoding"
    name: "serializerAdapter"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerAdapter?alt=com.azure.core.util.serializer.SerializerAdapter&text=SerializerAdapter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HttpPipeline for making any Http request (e.g. poll)"
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type of the poll result, if no result is expecting then this should be Void.class"
    name: "pollResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the type of the final result, if no result is expecting then this should be Void.class"
    name: "finalResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the default poll interval to use if service does not return retry-after"
    name: "defaultPollInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "the function upon invoking should initiate the long-running-operation"
    name: "lroInitOperation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html\">Function</a>&lt;<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;,<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  syntax: "public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation)"
  desc: "Creates a PollerFlux."
  returns:
    description: "PollerFlux"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>,com.azure.core.util.Context)"
  fullName: "com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation, Context context)"
  name: "<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation, Context context)"
  nameWithType: "PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation, Context context)"
  summary: "Creates a Poller<wbr>Flux."
  modifiers:
  - "static"
  parameters:
  - description: "the serializer for any encoding and decoding"
    name: "serializerAdapter"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerAdapter?alt=com.azure.core.util.serializer.SerializerAdapter&text=SerializerAdapter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HttpPipeline for making any Http request (e.g. poll)"
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type of the poll result, if no result is expecting then this should be Void.class"
    name: "pollResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the type of the final result, if no result is expecting then this should be Void.class"
    name: "finalResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the default poll interval to use if service does not return retry-after"
    name: "defaultPollInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "the function upon invoking should initiate the long-running-operation"
    name: "lroInitOperation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html\">Function</a>&lt;<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;,<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  - description: "the context shared by all requests"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation, Context context)"
  desc: "Creates a PollerFlux."
  returns:
    description: "PollerFlux"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>)"
  fullName: "com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono)"
  name: "<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono)"
  nameWithType: "PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono)"
  summary: "Creates a Poller<wbr>Flux with default ARM LRO init operation."
  modifiers:
  - "static"
  parameters:
  - description: "the serializer for any encoding and decoding"
    name: "serializerAdapter"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerAdapter?alt=com.azure.core.util.serializer.SerializerAdapter&text=SerializerAdapter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HttpPipeline for making any Http request (e.g. poll)"
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type of the poll result, if no result is expecting then this should be Void.class"
    name: "pollResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the type of the final result, if no result is expecting then this should be Void.class"
    name: "finalResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the default poll interval to use if service does not return retry-after"
    name: "defaultPollInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "the Mono on subscribe send the service request to initiate the long-running-operation"
    name: "lroInitMono"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
  syntax: "public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono)"
  desc: "Creates a PollerFlux with default ARM LRO init operation."
  returns:
    description: "PollerFlux"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.util.Context)"
  fullName: "com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono, Context context)"
  name: "<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono, Context context)"
  nameWithType: "PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono, Context context)"
  summary: "Creates a Poller<wbr>Flux with default ARM LRO init operation."
  modifiers:
  - "static"
  parameters:
  - description: "the serializer for any encoding and decoding"
    name: "serializerAdapter"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerAdapter?alt=com.azure.core.util.serializer.SerializerAdapter&text=SerializerAdapter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the HttpPipeline for making any Http request (e.g. poll)"
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type of the poll result, if no result is expecting then this should be Void.class"
    name: "pollResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the type of the final result, if no result is expecting then this should be Void.class"
    name: "finalResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the default poll interval to use if service does not return retry-after"
    name: "defaultPollInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "the Mono on subscribe send the service request to initiate the long-running-operation"
    name: "lroInitMono"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
  - description: "the context shared by all requests"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono, Context context)"
  desc: "Creates a PollerFlux with default ARM LRO init operation."
  returns:
    description: "PollerFlux"
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Factory to create PollerFlux for Azure resource manager (ARM) long-running-operation (LRO)."
metadata: {}
package: "com.azure.core.management.polling"
artifact: com.azure:azure-core-management:1.9.0
