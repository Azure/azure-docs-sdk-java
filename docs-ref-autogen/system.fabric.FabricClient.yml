### YamlMime:JavaType
constructors:
- system.fabric.FabricClient.FabricClient()
- system.fabric.FabricClient.FabricClient(FabricClientRole)
- system.fabric.FabricClient.FabricClient(FabricClientSettings)
- system.fabric.FabricClient.FabricClient(FabricClientSettings,String [])
- system.fabric.FabricClient.FabricClient(SecurityCredentials,FabricClientSettings,String [])
- system.fabric.FabricClient.FabricClient(SecurityCredentials,String [])
- system.fabric.FabricClient.FabricClient(String [])
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
methods:
- system.fabric.FabricClient.close()
- system.fabric.FabricClient.createNativeClient(String [])
- system.fabric.FabricClient.getClientConnectionObservable()
- system.fabric.FabricClient.getClientDisconnectionObservable()
- system.fabric.FabricClient.getCredential()
- system.fabric.FabricClient.getHostEndpoints()
- system.fabric.FabricClient.getSettings()
- system.fabric.FabricClient.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String>)
- system.fabric.FabricClient.updateSecurityCredentials(SecurityCredentials)
- system.fabric.FabricClient.UpdateSettings(FabricClientSettings)
nameWithType: FabricClient
syntax: public class FabricClient
type: class
uid: system.fabric.FabricClient
fullName: system.fabric.FabricClient
name: FabricClient
package: system.fabric
summary: >-
  <p>Client for a Service Fabric cluster. </p>

  <p>

    <b>Remarks:</b>It is highly recommended that you share FabricClients as much as possible. This is because the FabricClient has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>
metadata: {}
