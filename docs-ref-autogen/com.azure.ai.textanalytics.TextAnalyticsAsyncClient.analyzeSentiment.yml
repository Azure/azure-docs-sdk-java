### YamlMime:JavaMember
uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment*"
fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment"
name: "analyzeSentiment"
nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment"
members:
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.lang.String)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(String document)"
  name: "analyzeSentiment(String document)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment(String document)"
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and Neutral) for the document and each sentence within it. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TextAnalyticsClientBuilder#defaultLanguage(String)\"></xref>. If none is specified, service will use 'en' as the language.\n\nAnalyze sentiment in a list of documents. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n```java\nString document = \"The hotel was dark and unclean.\";\n textAnalyticsAsyncClient.analyzeSentiment(document).subscribe(documentSentiment -> {\n     System.out.printf(\"Recognized document sentiment: %s.%n\", documentSentiment.getSentiment());\n \n     for (SentenceSentiment sentenceSentiment : documentSentiment.getSentences()) {\n         System.out.printf(\n             \"Recognized sentence sentiment: %s, positive score: %.2f, neutral score: %.2f, \"\n                 + \"negative score: %.2f.%n\",\n             sentenceSentiment.getSentiment(),\n             sentenceSentiment.getConfidenceScores().getPositive(),\n             sentenceSentiment.getConfidenceScores().getNeutral(),\n             sentenceSentiment.getConfidenceScores().getNegative());\n     }\n });\n```"
  parameters:
  - description: "The document to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\">data limits</a>."
    name: "document"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DocumentSentiment> analyzeSentiment(String document)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> contains the <xref uid=\"com.azure.ai.textanalytics.models.DocumentSentiment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"analyzed document sentiment\"></xref> of the document."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.models.DocumentSentiment?alt=com.azure.ai.textanalytics.models.DocumentSentiment&text=DocumentSentiment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(String document, String language)"
  name: "analyzeSentiment(String document, String language)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment(String document, String language)"
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of documents. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n```java\nString document = \"The hotel was dark and unclean.\";\n textAnalyticsAsyncClient.analyzeSentiment(document, \"en\")\n     .subscribe(documentSentiment -> {\n         System.out.printf(\"Recognized sentiment label: %s.%n\", documentSentiment.getSentiment());\n \n         for (SentenceSentiment sentenceSentiment : documentSentiment.getSentences()) {\n             System.out.printf(\"Recognized sentence sentiment: %s, positive score: %.2f, neutral score: %.2f, \"\n                     + \"negative score: %.2f.%n\",\n                 sentenceSentiment.getSentiment(),\n                 sentenceSentiment.getConfidenceScores().getPositive(),\n                 sentenceSentiment.getConfidenceScores().getNeutral(),\n                 sentenceSentiment.getConfidenceScores().getNegative());\n         }\n     });\n```"
  parameters:
  - description: "The document to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\">data limits</a>."
    name: "document"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    name: "language"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DocumentSentiment> analyzeSentiment(String document, String language)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> contains the <xref uid=\"com.azure.ai.textanalytics.models.DocumentSentiment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"analyzed document sentiment\"></xref> of the document."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.models.DocumentSentiment?alt=com.azure.ai.textanalytics.models.DocumentSentiment&text=DocumentSentiment\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.textanalytics"
artifact: com.azure:azure-ai-textanalytics:5.0.2
