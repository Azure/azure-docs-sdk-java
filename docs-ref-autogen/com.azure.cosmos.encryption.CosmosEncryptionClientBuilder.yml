### YamlMime:JavaType
uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder"
fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder"
name: "CosmosEncryptionClientBuilder"
nameWithType: "CosmosEncryptionClientBuilder"
summary: "Helper class to build <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosEncryptionAsyncClient\"></xref> and <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosEncryptionClient\"></xref> instances as logical representation of the Azure Cosmos database service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CosmosEncryptionClientBuilder"
constructors:
- uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.CosmosEncryptionClientBuilder()"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.CosmosEncryptionClientBuilder()"
  name: "CosmosEncryptionClientBuilder()"
  nameWithType: "CosmosEncryptionClientBuilder.CosmosEncryptionClientBuilder()"
  summary: "Instantiates a new Cosmos encryption client builder."
  syntax: "public CosmosEncryptionClientBuilder()"
  desc: "Instantiates a new Cosmos encryption client builder."
fields:
- uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.KEY_RESOLVER_NAME_AZURE_KEY_VAULT"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.KEY_RESOLVER_NAME_AZURE_KEY_VAULT"
  name: "KEY_RESOLVER_NAME_AZURE_KEY_VAULT"
  nameWithType: "CosmosEncryptionClientBuilder.KEY_RESOLVER_NAME_AZURE_KEY_VAULT"
  summary: "Key<wbr>Encryption<wbr>Key<wbr>Resolver name for <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolverName(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#keyEncryptionKeyResolverName(String)\"></xref> if Azure key vault resolver is being used in <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolver(com.azure.core.cryptography.KeyEncryptionKeyResolver)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#keyEncryptionKeyResolver(KeyEncryptionKeyResolver)\"></xref>."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_KEY_VAULT"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String KEY_RESOLVER_NAME_AZURE_KEY_VAULT"
  desc: "KeyEncryptionKeyResolver name for <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolverName(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#keyEncryptionKeyResolverName(String)\"></xref> if Azure key vault resolver is being used in <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolver(com.azure.core.cryptography.KeyEncryptionKeyResolver)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#keyEncryptionKeyResolver(KeyEncryptionKeyResolver)\"></xref>."
methods:
- uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.buildAsyncClient()"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "CosmosEncryptionClientBuilder.buildAsyncClient()"
  summary: "Builds a cosmos encryption async client."
  syntax: "public CosmosEncryptionAsyncClient buildAsyncClient()"
  desc: "Builds a cosmos encryption async client."
  returns:
    description: "CosmosEncryptionAsyncClient Cosmos encryption async client"
    type: "<xref href=\"com.azure.cosmos.encryption.CosmosEncryptionAsyncClient?alt=com.azure.cosmos.encryption.CosmosEncryptionAsyncClient&text=CosmosEncryptionAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.buildClient()"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "CosmosEncryptionClientBuilder.buildClient()"
  summary: "Builds a cosmos encryption async client."
  syntax: "public CosmosEncryptionClient buildClient()"
  desc: "Builds a cosmos encryption async client."
  returns:
    description: "CosmosEncryptionAsyncClient Cosmos encryption async client"
    type: "<xref href=\"com.azure.cosmos.encryption.CosmosEncryptionClient?alt=com.azure.cosmos.encryption.CosmosEncryptionClient&text=CosmosEncryptionClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.cosmosAsyncClient(com.azure.cosmos.CosmosAsyncClient)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.cosmosAsyncClient(CosmosAsyncClient cosmosAsyncClient)"
  name: "cosmosAsyncClient(CosmosAsyncClient cosmosAsyncClient)"
  nameWithType: "CosmosEncryptionClientBuilder.cosmosAsyncClient(CosmosAsyncClient cosmosAsyncClient)"
  summary: "Sets the cosmos core async client to be used."
  parameters:
  - description: "cosmos async client"
    name: "cosmosAsyncClient"
    type: "<xref href=\"com.azure.cosmos.CosmosAsyncClient?alt=com.azure.cosmos.CosmosAsyncClient&text=CosmosAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosEncryptionClientBuilder cosmosAsyncClient(CosmosAsyncClient cosmosAsyncClient)"
  desc: "Sets the cosmos core async client to be used."
  returns:
    description: "current CosmosEncryptionClientBuilder"
    type: "<xref href=\"com.azure.cosmos.encryption.CosmosEncryptionClientBuilder?alt=com.azure.cosmos.encryption.CosmosEncryptionClientBuilder&text=CosmosEncryptionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.cosmosClient(com.azure.cosmos.CosmosClient)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.cosmosClient(CosmosClient cosmosClient)"
  name: "cosmosClient(CosmosClient cosmosClient)"
  nameWithType: "CosmosEncryptionClientBuilder.cosmosClient(CosmosClient cosmosClient)"
  summary: "Sets the cosmos core sync client to be used."
  parameters:
  - description: "cosmos sync client"
    name: "cosmosClient"
    type: "<xref href=\"com.azure.cosmos.CosmosClient?alt=com.azure.cosmos.CosmosClient&text=CosmosClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosEncryptionClientBuilder cosmosClient(CosmosClient cosmosClient)"
  desc: "Sets the cosmos core sync client to be used."
  returns:
    description: "current CosmosEncryptionClientBuilder"
    type: "<xref href=\"com.azure.cosmos.encryption.CosmosEncryptionClientBuilder?alt=com.azure.cosmos.encryption.CosmosEncryptionClientBuilder&text=CosmosEncryptionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolver(com.azure.core.cryptography.KeyEncryptionKeyResolver)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolver(KeyEncryptionKeyResolver keyEncryptionKeyResolver)"
  name: "keyEncryptionKeyResolver(KeyEncryptionKeyResolver keyEncryptionKeyResolver)"
  nameWithType: "CosmosEncryptionClientBuilder.keyEncryptionKeyResolver(KeyEncryptionKeyResolver keyEncryptionKeyResolver)"
  summary: "Sets the key wrap provider"
  parameters:
  - description: "custom keyEncryptionKeyResolver implementation of <xref uid=\"com.azure.core.cryptography.KeyEncryptionKeyResolver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyEncryptionKeyResolver\"></xref>"
    name: "keyEncryptionKeyResolver"
    type: "<xref href=\"com.azure.core.cryptography.KeyEncryptionKeyResolver?alt=com.azure.core.cryptography.KeyEncryptionKeyResolver&text=KeyEncryptionKeyResolver\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosEncryptionClientBuilder keyEncryptionKeyResolver(KeyEncryptionKeyResolver keyEncryptionKeyResolver)"
  desc: "Sets the key wrap provider"
  returns:
    description: "current CosmosEncryptionClientBuilder"
    type: "<xref href=\"com.azure.cosmos.encryption.CosmosEncryptionClientBuilder?alt=com.azure.cosmos.encryption.CosmosEncryptionClientBuilder&text=CosmosEncryptionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolverName(java.lang.String)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolverName(String keyEncryptionKeyResolverName)"
  name: "keyEncryptionKeyResolverName(String keyEncryptionKeyResolverName)"
  nameWithType: "CosmosEncryptionClientBuilder.keyEncryptionKeyResolverName(String keyEncryptionKeyResolverName)"
  summary: "Sets the key encryption key resolver name"
  parameters:
  - description: "custom <xref uid=\"com.azure.core.cryptography.KeyEncryptionKeyResolver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyEncryptionKeyResolver\"></xref> name"
    name: "keyEncryptionKeyResolverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosEncryptionClientBuilder keyEncryptionKeyResolverName(String keyEncryptionKeyResolverName)"
  desc: "Sets the key encryption key resolver name"
  returns:
    description: "current CosmosEncryptionClientBuilder"
    type: "<xref href=\"com.azure.cosmos.encryption.CosmosEncryptionClientBuilder?alt=com.azure.cosmos.encryption.CosmosEncryptionClientBuilder&text=CosmosEncryptionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Helper class to build <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosEncryptionAsyncClient\"></xref> and <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosEncryptionClient\"></xref> instances as logical representation of the Azure Cosmos database service.\n\nWhen building client, cosmosAsyncClient()/cosmosClient(), keyEncryptionKeyResolver() and keyEncryptionKeyResolverName() are mandatory APIs, without these the initialization will fail.\n\n```java\nBuilding Cosmos Encryption Async Client APIs.\n     If Azure key vault is used in , we can input  in \n\n \n CosmosEncryptionAsyncClient cosmosEncryptionAsyncClient = new CosmosEncryptionClientBuilder()\n         .cosmosAsyncClient(cosmosAsyncClient)\n         .keyEncryptionKeyResolver(keyEncryptionKeyResolver)\n         .keyEncryptionKeyResolverName(keyEncryptionKeyResolverName)\n         .buildAsyncClient();\n```\n\n```java\nBuilding Cosmos Encryption Sync Client minimal APIs\n     If Azure key vault is used in , we can input  in \n  * \n CosmosEncryptionClient client = new CosmosEncryptionClientBuilder()\n         .cosmosClient(cosmosClient)\n         .keyEncryptionKeyResolver(keyEncryptionKeyResolver)\n         .keyEncryptionKeyResolverName(keyEncryptionKeyResolverName)\n         .buildClient();\n```"
metadata: {}
package: "com.azure.cosmos.encryption"
artifact: com.azure:azure-cosmos-encryption:1.5.0
