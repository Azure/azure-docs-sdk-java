### YamlMime:JavaMember
uid: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.getModel*"
fullName: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.getModel"
name: "getModel"
nameWithType: "DigitalTwinsAsyncClient.getModel"
members:
- uid: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.getModel(java.lang.String)"
  fullName: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.getModel(String modelId)"
  name: "getModel(String modelId)"
  nameWithType: "DigitalTwinsAsyncClient.getModel(String modelId)"
  summary: "Gets a model, including the model metadata and the model definition.\n\n**Code Samples**\n\n```java\ndigitalTwinsAsyncClient.getModel(\"dtmi:com:samples:Building;1\")\n     .subscribe(model -> System.out.println(\"Retrieved model with Id: \" + model.getModelId()));\n```"
  parameters:
  - description: "The Id of the model."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DigitalTwinsModelData> getModel(String modelId)"
  returns:
    description: "A <xref uid=\"com.azure.digitaltwins.core.models.DigitalTwinsModelData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DigitalTwinsModelData\"></xref> instance that contains the model and its metadata."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.digitaltwins.core.models.DigitalTwinsModelData?alt=com.azure.digitaltwins.core.models.DigitalTwinsModelData&text=DigitalTwinsModelData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.digitaltwins.core"
artifact: com.azure:azure-digitaltwins-core:1.0.1
