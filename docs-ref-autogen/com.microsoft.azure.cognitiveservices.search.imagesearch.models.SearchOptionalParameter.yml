### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter"
fullName: "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter"
name: "SearchOptionalParameter"
nameWithType: "SearchOptionalParameter"
summary: "The SearchOptionalParameter model."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SearchOptionalParameter"
constructors:
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.SearchOptionalParameter()"
methods:
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.acceptLanguage()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.aspect()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.clientId()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.clientIp()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.color()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.count()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.countryCode()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.freshness()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.height()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.id()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.imageContent()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.imageType()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.license()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.location()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.market()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.maxFileSize()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.maxHeight()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.maxWidth()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.minFileSize()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.minHeight()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.minWidth()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.offset()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.safeSearch()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.setLang()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.size()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.userAgent()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.width()"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withAcceptLanguage(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withAspect(com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageAspect)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withClientId(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withClientIp(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withColor(com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageColor)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withCount(java.lang.Integer)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withCountryCode(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withFreshness(com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withHeight(java.lang.Integer)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withId(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withImageContent(com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageContent)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withImageType(com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageType)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withLicense(com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageLicense)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withLocation(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withMarket(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withMaxFileSize(java.lang.Long)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withMaxHeight(java.lang.Long)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withMaxWidth(java.lang.Long)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withMinFileSize(java.lang.Long)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withMinHeight(java.lang.Long)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withMinWidth(java.lang.Long)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withOffset(java.lang.Long)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withSafeSearch(com.microsoft.azure.cognitiveservices.search.imagesearch.models.SafeSearch)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withSetLang(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withSize(com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageSize)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withUserAgent(java.lang.String)"
- "com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter.withWidth(java.lang.Integer)"
type: "class"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.search.imagesearch.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-imagesearch:1.0.2
