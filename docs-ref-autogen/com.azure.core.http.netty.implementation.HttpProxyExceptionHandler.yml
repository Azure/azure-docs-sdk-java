### YamlMime:JavaType
uid: "com.azure.core.http.netty.implementation.HttpProxyExceptionHandler"
fullName: "com.azure.core.http.netty.implementation.HttpProxyExceptionHandler"
name: "HttpProxyExceptionHandler"
nameWithType: "HttpProxyExceptionHandler"
summary: "This class handles removing <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SSLExceptions\"></xref> from being propagated when connecting to the proxy fails.\n\nThe <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SSLException\"></xref> is removed since the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SslHandler\"></xref> processes in the pipeline after the <xref uid=\"io.netty.handler.proxy.ProxyHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProxyHandler\"></xref> and if there is a failure to connect to the proxy it may bubble up as an issue with SSL. This will remove the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SSLException\"></xref> if its cause is a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProxyConnectException\"></xref>, if this happens the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProxyConnectException\"></xref> will be bubbled up instead."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.channel.ChannelHandlerAdapter\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.channel.ChannelInboundHandlerAdapter\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.channel.ChannelDuplexHandler\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "io.netty.channel.ChannelDuplexHandler.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.flush(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelDuplexHandler.read(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelDuplexHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
- "io.netty.channel.ChannelHandlerAdapter.handlerAdded(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelHandlerAdapter.isSharable()"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelActive(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelReadComplete(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelRegistered(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
- "io.netty.channel.ChannelInboundHandlerAdapter.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HttpProxyExceptionHandler extends ChannelDuplexHandler"
constructors:
- "com.azure.core.http.netty.implementation.HttpProxyExceptionHandler.HttpProxyExceptionHandler()"
methods:
- "com.azure.core.http.netty.implementation.HttpProxyExceptionHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
type: "class"
metadata: {}
package: "com.azure.core.http.netty.implementation"
artifact: com.azure:azure-core-http-netty:1.9.1
