### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.PatternTokenizer"
fullName: "com.azure.search.documents.indexes.models.PatternTokenizer"
name: "PatternTokenizer"
nameWithType: "PatternTokenizer"
summary: "Tokenizer that uses regex pattern matching to construct distinct tokens. This tokenizer is implemented using Apache Lucene."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.LexicalTokenizer.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PatternTokenizer extends LexicalTokenizer"
constructors:
- "com.azure.search.documents.indexes.models.PatternTokenizer.PatternTokenizer(java.lang.String)"
methods:
- "com.azure.search.documents.indexes.models.PatternTokenizer.getFlags()"
- "com.azure.search.documents.indexes.models.PatternTokenizer.getGroup()"
- "com.azure.search.documents.indexes.models.PatternTokenizer.getPattern()"
- "com.azure.search.documents.indexes.models.PatternTokenizer.setFlags(com.azure.search.documents.indexes.models.RegexFlags...)"
- "com.azure.search.documents.indexes.models.PatternTokenizer.setFlags(java.util.List<com.azure.search.documents.indexes.models.RegexFlags>)"
- "com.azure.search.documents.indexes.models.PatternTokenizer.setGroup(java.lang.Integer)"
- "com.azure.search.documents.indexes.models.PatternTokenizer.setPattern(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.1.3
