### YamlMime:JavaMember
uid: "com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithVirtualMachine.toExistingVirtualMachines*"
fullName: "com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines"
name: "toExistingVirtualMachines"
nameWithType: "LoadBalancingRule.DefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines"
members:
- uid: "com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithVirtualMachine.toExistingVirtualMachines(com.microsoft.azure.management.network.model.HasNetworkInterfaces...)"
  fullName: "com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines(HasNetworkInterfaces[] vms)"
  name: "toExistingVirtualMachines(HasNetworkInterfaces[] vms)"
  nameWithType: "LoadBalancingRule.DefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines(HasNetworkInterfaces[] vms)"
  summary: "Adds the specified set of virtual machines, assuming they are from the same availability set, to a new back end address pool to be associated with this load balancing rule.\n\nThis will add references to the primary IP configurations of the primary network interfaces of the provided set of virtual machines.\n\nIf the virtual machines are not in the same availability set, they will not be associated with the backend.\n\nOnly those virtual machines will be associated with the load balancer that already have an existing network interface. Virtual machines without a network interface will be skipped."
  parameters:
  - description: "existing virtual machines"
    name: "vms"
    type: "<xref href=\"com.microsoft.azure.management.network.model.HasNetworkInterfaces?alt=com.microsoft.azure.management.network.model.HasNetworkInterfaces&text=HasNetworkInterfaces\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract LoadBalancingRule.DefinitionStages.WithBackendPort<ReturnT> toExistingVirtualMachines(HasNetworkInterfaces[] vms)"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithBackendPort?alt=com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithBackendPort&text=WithBackendPort\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ReturnT?alt=ReturnT&text=ReturnT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithVirtualMachine.toExistingVirtualMachines(java.util.Collection<com.microsoft.azure.management.network.model.HasNetworkInterfaces>)"
  fullName: "com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines(Collection<HasNetworkInterfaces> vms)"
  name: "toExistingVirtualMachines(Collection<HasNetworkInterfaces> vms)"
  nameWithType: "LoadBalancingRule.DefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines(Collection<HasNetworkInterfaces> vms)"
  summary: "Adds the specified set of virtual machines, assuming they are from the same availability set, to a new back end address pool to be associated with this load balancing rule.\n\nThis will add references to the primary IP configurations of the primary network interfaces of the provided set of virtual machines.\n\nIf the virtual machines are not in the same availability set, they will not be associated with the backend.\n\nOnly those virtual machines will be associated with the load balancer that already have an existing network interface. Virtual machines without a network interface will be skipped."
  parameters:
  - description: "existing virtual machines"
    name: "vms"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.model.HasNetworkInterfaces?alt=com.microsoft.azure.management.network.model.HasNetworkInterfaces&text=HasNetworkInterfaces\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract LoadBalancingRule.DefinitionStages.WithBackendPort<ReturnT> toExistingVirtualMachines(Collection<HasNetworkInterfaces> vms)"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithBackendPort?alt=com.microsoft.azure.management.network.LoadBalancingRule.DefinitionStages.WithBackendPort&text=WithBackendPort\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ReturnT?alt=ReturnT&text=ReturnT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.38.1
