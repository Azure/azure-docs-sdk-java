### YamlMime:JavaMember
uid: "com.azure.search.documents.SearchAsyncClient.mergeOrUploadDocuments*"
fullName: "com.azure.search.documents.SearchAsyncClient.mergeOrUploadDocuments"
name: "mergeOrUploadDocuments"
nameWithType: "SearchAsyncClient.mergeOrUploadDocuments"
members:
- uid: "com.azure.search.documents.SearchAsyncClient.mergeOrUploadDocuments(java.lang.Iterable<?>)"
  fullName: "com.azure.search.documents.SearchAsyncClient.mergeOrUploadDocuments(Iterable<?> documents)"
  name: "mergeOrUploadDocuments(Iterable<?> documents)"
  nameWithType: "SearchAsyncClient.mergeOrUploadDocuments(Iterable<?> documents)"
  summary: "This action behaves like merge if a document with the given key already exists in the index. If the document does not exist, it behaves like upload with a new document.\n\nIf the type of the document contains non-nullable primitive-typed properties, these properties may not merge correctly. If you do not set such a property, it will automatically take its default value (for example, `0` for `int` or `false` for `boolean`), which will override the value of the property currently stored in the index, even if this was not your intent. For this reason, it is strongly recommended that you always declare primitive-typed properties with their class equivalents (for example, an integer property should be of type `Integer` instead of `int`).\n\n**Code Sample**\n\nMerge or upload dynamic SearchDocument.\n\n```java\nSearchDocument searchDocument = new SearchDocument();\n searchDocument.put(\"hotelId\", \"1\");\n searchDocument.put(\"hotelName\", \"test\");\n searchAsyncClient.mergeOrUploadDocuments(Collections.singletonList(searchDocument))\n     .subscribe(result -> {\n         for (IndexingResult indexingResult : result.getResults()) {\n             System.out.printf(\"Does document with key %s mergeOrUpload successfully? %b%n\",\n                 indexingResult.getKey(), indexingResult.isSucceeded());\n         }\n     });\n```"
  parameters:
  - description: "collection of documents to be merged, if exists, otherwise uploaded"
    name: "documents"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public Mono<IndexDocumentsResult> mergeOrUploadDocuments(Iterable<?> documents)"
  returns:
    description: "document index result"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.models.IndexDocumentsResult?alt=com.azure.search.documents.models.IndexDocumentsResult&text=IndexDocumentsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents"
artifact: com.azure:azure-search-documents:11.1.3
