### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
  id: ActorTypeExtensions
  parent: microsoft.servicefabric.actors.runtime
  children:
  - microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorEventInterfaces(Class<?>)
  - microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorInterfaces(Class<?>)
  - microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActor(Class<?>)
  - microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActorInterface(Class<?>)
  - microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isRemindableActor(Class<?>)
  href: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.yml
  langs:
  - java
  name: ActorTypeExtensions
  nameWithType: ActorTypeExtensions
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeExtensions.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeExtensions.java
    startLine: 15
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Contains extension method for Actor types. </p>"
  syntax:
    content: public class ActorTypeExtensions
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorEventInterfaces(Class<?>)
  id: getActorEventInterfaces(Class<?>)
  parent: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
  href: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.yml
  langs:
  - java
  name: getActorEventInterfaces(Class<?> cls)
  nameWithType: ActorTypeExtensions.getActorEventInterfaces(Class<?> cls)
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorEventInterfaces(Class<?> cls)
  overload: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorEventInterfaces*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeExtensions.java
    startLine: 73
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets the actor event interfaces implemented by the actor class. </p>"
  syntax:
    content: public static Class<?> [] getActorEventInterfaces(Class<?> cls)
    parameters:
    - id: cls
      type: a19781f8
      description: <p>The type of class implementing actor. </p>
    return:
      type: 1d64dc59
      description: <p>An array containing actor event interface which the type implements. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorInterfaces(Class<?>)
  id: getActorInterfaces(Class<?>)
  parent: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
  href: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.yml
  langs:
  - java
  name: getActorInterfaces(Class<?> cls)
  nameWithType: ActorTypeExtensions.getActorInterfaces(Class<?> cls)
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorInterfaces(Class<?> cls)
  overload: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorInterfaces*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeExtensions.java
    startLine: 59
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets the actor interfaces implemented by the actor class. </p>"
  syntax:
    content: public static Class<?> [] getActorInterfaces(Class<?> cls)
    parameters:
    - id: cls
      type: a19781f8
      description: <p>The type of class implementing actor. </p>
    return:
      type: 1d64dc59
      description: <p>An array containing actor interface which the type implements. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActor(Class<?>)
  id: isActor(Class<?>)
  parent: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
  href: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.yml
  langs:
  - java
  name: isActor(Class<?> actorClass)
  nameWithType: ActorTypeExtensions.isActor(Class<?> actorClass)
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActor(Class<?> actorClass)
  overload: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActor*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeExtensions.java
    startLine: 35
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Indicates a value whether the actorType is an actor. </p>"
  syntax:
    content: public static boolean isActor(Class<?> actorClass)
    parameters:
    - id: actorClass
      type: a19781f8
      description: <p>The type implementing actor. </p>
    return:
      type: 4fc6e284
      description: <p>true, if the actorClass is an <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.Actor"></xref>; otherwise, false. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActorInterface(Class<?>)
  id: isActorInterface(Class<?>)
  parent: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
  href: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.yml
  langs:
  - java
  name: isActorInterface(Class<?> actorInterfaceClass)
  nameWithType: ActorTypeExtensions.isActorInterface(Class<?> actorInterfaceClass)
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActorInterface(Class<?> actorInterfaceClass)
  overload: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActorInterface*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeExtensions.java
    startLine: 105
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Indicates whether the interface type is an actor interface. </p>"
  syntax:
    content: public static boolean isActorInterface(Class<?> actorInterfaceClass)
    parameters:
    - id: actorInterfaceClass
      type: a19781f8
      description: <p>The interface type of the actor. </p>
    return:
      type: 4fc6e284
      description: <p>true, if the actorInterfaceClass is an interface only implements <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.Actor"></xref> or <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.Actor"></xref> and <xref uid="microsoft.servicefabric.actors.ActorEventPublisher" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.ActorEventPublisher"></xref>; otherwise, false. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isRemindableActor(Class<?>)
  id: isRemindableActor(Class<?>)
  parent: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
  href: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.yml
  langs:
  - java
  name: isRemindableActor(Class<?> actorClass)
  nameWithType: ActorTypeExtensions.isRemindableActor(Class<?> actorClass)
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isRemindableActor(Class<?> actorClass)
  overload: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isRemindableActor*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeExtensions.java
    startLine: 24
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Indicates a value whether an actor type implements <xref uid=\"microsoft.servicefabric.actors.runtime.Remindable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.actors.runtime.Remindable\"></xref> interface. </p>"
  syntax:
    content: public static boolean isRemindableActor(Class<?> actorClass)
    parameters:
    - id: actorClass
      type: a19781f8
      description: <p>The type implementing actor. </p>
    return:
      type: 4fc6e284
      description: <p>true, if the actorClass implements an <xref uid="microsoft.servicefabric.actors.runtime.Remindable" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.runtime.Remindable"></xref> interface; otherwise, false. </p>
references:
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isRemindableActor*
  name: isRemindableActor
  nameWithType: ActorTypeExtensions.isRemindableActor
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isRemindableActor
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActor*
  name: isActor
  nameWithType: ActorTypeExtensions.isActor
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActor
  package: microsoft.servicefabric.actors.runtime
- uid: 1d64dc59
  spec.java:
  - name: Class<?> []
    fullName: Class<?> []
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorInterfaces*
  name: getActorInterfaces
  nameWithType: ActorTypeExtensions.getActorInterfaces
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorInterfaces
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorEventInterfaces*
  name: getActorEventInterfaces
  nameWithType: ActorTypeExtensions.getActorEventInterfaces
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorEventInterfaces
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActorInterface*
  name: isActorInterface
  nameWithType: ActorTypeExtensions.isActorInterface
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActorInterface
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.Remindable
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime.Remindable.yml
  name: Remindable
  nameWithType: Remindable
  fullName: microsoft.servicefabric.actors.runtime.Remindable
  type: Interface
  summary: "<p>Interface which actors that use reminders must implement. </p>"
  syntax:
    content: public interface Remindable
- uid: microsoft.servicefabric.actors.Actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.Actor.yml
  name: Actor
  nameWithType: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: "<p>Base interface for inheriting reliable actor interfaces. </p>"
  syntax:
    content: public interface Actor
- uid: microsoft.servicefabric.actors.ActorEventPublisher
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.ActorEventPublisher.yml
  name: ActorEventPublisher<TActorEvents>
  nameWithType: ActorEventPublisher<TActorEvents>
  fullName: microsoft.servicefabric.actors.ActorEventPublisher<TActorEvents>
  type: Interface
  summary: "<p>Represents publisher of actor events. Publishers of actor events must implement this interface</p>\r\n<p></p>"
  syntax:
    content: public interface ActorEventPublisher<TActorEvents extends ActorEvents>
    typeParameters:
    - id: TActorEvents
      type: 6e1c167f
      description: <p>Actor event interface type derived from <xref uid="microsoft.servicefabric.actors.ActorEvents" data-throw-if-not-resolved="false" data-raw-source="ActorEvents"></xref>. </p>
