### YamlMime:ManagedReference
items:
- uid: system.fabric.NodeContext
  id: NodeContext
  parent: system.fabric
  children:
  - system.fabric.NodeContext.getIpAddressOrFQDN()
  - system.fabric.NodeContext.getNodeId()
  - system.fabric.NodeContext.getNodeInstanceId()
  - system.fabric.NodeContext.getNodeName()
  - system.fabric.NodeContext.getNodeType()
  - system.fabric.NodeContext.NodeContext(String,NodeId,BigInteger,String,String)
  - system.fabric.NodeContext.toString()
  href: system.fabric.NodeContext.yml
  langs:
  - java
  name: NodeContext
  nameWithType: NodeContext
  fullName: system.fabric.NodeContext
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
    startLine: 5
  package: system.fabric
  summary: "<p>Class to encapsulate a node context. </p>"
  syntax:
    content: public class NodeContext
  inheritance:
  - java.lang.Object
- uid: system.fabric.NodeContext.getIpAddressOrFQDN()
  id: getIpAddressOrFQDN()
  parent: system.fabric.NodeContext
  href: system.fabric.NodeContext.yml
  langs:
  - java
  name: getIpAddressOrFQDN()
  nameWithType: NodeContext.getIpAddressOrFQDN()
  fullName: system.fabric.NodeContext.getIpAddressOrFQDN()
  overload: system.fabric.NodeContext.getIpAddressOrFQDN*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
    startLine: 87
  package: system.fabric
  summary: "<p>Gets the IP address or the fully qualified domain name of the node.</p>\r\n<p></p>"
  syntax:
    content: public String getIpAddressOrFQDN()
    return:
      type: "26831127"
      description: <p>Returns String. </p>
- uid: system.fabric.NodeContext.getNodeId()
  id: getNodeId()
  parent: system.fabric.NodeContext
  href: system.fabric.NodeContext.yml
  langs:
  - java
  name: getNodeId()
  nameWithType: NodeContext.getNodeId()
  fullName: system.fabric.NodeContext.getNodeId()
  overload: system.fabric.NodeContext.getNodeId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
    startLine: 60
  package: system.fabric
  summary: "<p>Gets the node ID.</p>\r\n<p></p>"
  syntax:
    content: public NodeId getNodeId()
    return:
      type: system.fabric.NodeId
      description: <p>Returns <xref uid="system.fabric.NodeId" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref>. </p>
- uid: system.fabric.NodeContext.getNodeInstanceId()
  id: getNodeInstanceId()
  parent: system.fabric.NodeContext
  href: system.fabric.NodeContext.yml
  langs:
  - java
  name: getNodeInstanceId()
  nameWithType: NodeContext.getNodeInstanceId()
  fullName: system.fabric.NodeContext.getNodeInstanceId()
  overload: system.fabric.NodeContext.getNodeInstanceId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
    startLine: 69
  package: system.fabric
  summary: "<p>Gets the node instance ID.</p>\r\n<p></p>"
  syntax:
    content: public BigInteger getNodeInstanceId()
    return:
      type: e20633d1
      description: <p>Returns BigInteger. </p>
- uid: system.fabric.NodeContext.getNodeName()
  id: getNodeName()
  parent: system.fabric.NodeContext
  href: system.fabric.NodeContext.yml
  langs:
  - java
  name: getNodeName()
  nameWithType: NodeContext.getNodeName()
  fullName: system.fabric.NodeContext.getNodeName()
  overload: system.fabric.NodeContext.getNodeName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
    startLine: 51
  package: system.fabric
  summary: "<p>Gets the node name.</p>\r\n<p></p>"
  syntax:
    content: public String getNodeName()
    return:
      type: "26831127"
      description: <p>Returns String. </p>
- uid: system.fabric.NodeContext.getNodeType()
  id: getNodeType()
  parent: system.fabric.NodeContext
  href: system.fabric.NodeContext.yml
  langs:
  - java
  name: getNodeType()
  nameWithType: NodeContext.getNodeType()
  fullName: system.fabric.NodeContext.getNodeType()
  overload: system.fabric.NodeContext.getNodeType*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
    startLine: 78
  package: system.fabric
  summary: "<p>Gets the node type.</p>\r\n<p></p>"
  syntax:
    content: public String getNodeType()
    return:
      type: "26831127"
      description: <p>Returns String. </p>
- uid: system.fabric.NodeContext.NodeContext(String,NodeId,BigInteger,String,String)
  id: NodeContext(String,NodeId,BigInteger,String,String)
  parent: system.fabric.NodeContext
  href: system.fabric.NodeContext.yml
  langs:
  - java
  name: NodeContext(String nodeName, NodeId nodeId, BigInteger nodeInstanceId, String nodeType, String ipAddressOrFQDN)
  nameWithType: NodeContext.NodeContext(String nodeName, NodeId nodeId, BigInteger nodeInstanceId, String nodeType, String ipAddressOrFQDN)
  fullName: system.fabric.NodeContext.NodeContext(String nodeName, NodeId nodeId, BigInteger nodeInstanceId, String nodeType, String ipAddressOrFQDN)
  overload: system.fabric.NodeContext.NodeContext*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
    startLine: 20
  package: system.fabric
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.NodeContext\"></xref> class. </p>"
  syntax:
    content: public NodeContext(String nodeName, NodeId nodeId, BigInteger nodeInstanceId, String nodeType, String ipAddressOrFQDN)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The node name. </p>
    - id: nodeId
      type: system.fabric.NodeId
      description: <p>The node id. </p>
    - id: nodeInstanceId
      type: e20633d1
      description: <p>The node instance id. </p>
    - id: nodeType
      type: "26831127"
      description: <p>The node type. </p>
    - id: ipAddressOrFQDN
      type: "26831127"
      description: <p>The IP address or FQDN of the node. </p>
- uid: system.fabric.NodeContext.toString()
  id: toString()
  parent: system.fabric.NodeContext
  href: system.fabric.NodeContext.yml
  langs:
  - java
  name: toString()
  nameWithType: NodeContext.toString()
  fullName: system.fabric.NodeContext.toString()
  overload: system.fabric.NodeContext.toString*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/NodeContext.java
    startLine: 95
  package: system.fabric
  summary: "<p>Prints nodeName, nodeId, nodeInstanceId, nodeType, ipAddressOrFQDN. </p>"
  syntax:
    content: public String toString()
    return:
      type: "26831127"
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: e20633d1
  spec.java:
  - name: BigInteger
    fullName: BigInteger
- uid: system.fabric.NodeContext.NodeContext*
  name: NodeContext
  nameWithType: NodeContext.NodeContext
  fullName: system.fabric.NodeContext.NodeContext
  package: system.fabric
- uid: system.fabric.NodeContext.getNodeName*
  name: getNodeName
  nameWithType: NodeContext.getNodeName
  fullName: system.fabric.NodeContext.getNodeName
  package: system.fabric
- uid: system.fabric.NodeContext.getNodeId*
  name: getNodeId
  nameWithType: NodeContext.getNodeId
  fullName: system.fabric.NodeContext.getNodeId
  package: system.fabric
- uid: system.fabric.NodeContext.getNodeInstanceId*
  name: getNodeInstanceId
  nameWithType: NodeContext.getNodeInstanceId
  fullName: system.fabric.NodeContext.getNodeInstanceId
  package: system.fabric
- uid: system.fabric.NodeContext.getNodeType*
  name: getNodeType
  nameWithType: NodeContext.getNodeType
  fullName: system.fabric.NodeContext.getNodeType
  package: system.fabric
- uid: system.fabric.NodeContext.getIpAddressOrFQDN*
  name: getIpAddressOrFQDN
  nameWithType: NodeContext.getIpAddressOrFQDN
  fullName: system.fabric.NodeContext.getIpAddressOrFQDN
  package: system.fabric
- uid: system.fabric.NodeContext.toString*
  name: toString
  nameWithType: NodeContext.toString
  fullName: system.fabric.NodeContext.toString
  package: system.fabric
- uid: system.fabric.NodeId
  parent: system.fabric
  href: system.fabric.NodeId.yml
  name: NodeId
  nameWithType: NodeId
  fullName: system.fabric.NodeId
  type: Class
  summary: "<p>Class to encapsulate a node ID </p>"
  syntax:
    content: public class NodeId
