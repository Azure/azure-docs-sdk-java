### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer
  id: WithLoadBalancer
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network
  children:
  - com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend(com.microsoft.azure.management.network.LoadBalancer,java.lang.String)
  - com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule(com.microsoft.azure.management.network.LoadBalancer,java.lang.String)
  - com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends()
  - com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules()
  langs:
  - java
  name: NetworkInterface.UpdateStages.WithLoadBalancer
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer
  type: Interface
  package: com.microsoft.azure.management.network
  summary: The stage of the network interface update allowing to associate it with a load balancer.
  syntax:
    content: public static interface NetworkInterface.UpdateStages.WithLoadBalancer
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend(com.microsoft.azure.management.network.LoadBalancer,java.lang.String)
  id: withExistingLoadBalancerBackend(com.microsoft.azure.management.network.LoadBalancer,java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer
  langs:
  - java
  name: withExistingLoadBalancerBackend(LoadBalancer loadBalancer, String backendName)
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend(LoadBalancer loadBalancer, String backendName)
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend(LoadBalancer loadBalancer, String backendName)
  overload: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Associates the network interface's primary IP configuration with a backend of an existing load balancer.
  syntax:
    content: public abstract NetworkInterface.Update withExistingLoadBalancerBackend(LoadBalancer loadBalancer, String backendName)
    parameters:
    - id: loadBalancer
      type: com.microsoft.azure.management.network.LoadBalancer
      description: an existing load balancer
    - id: backendName
      type: java.lang.String
      description: the name of an existing backend on that load balancer
    return:
      type: com.microsoft.azure.management.network.NetworkInterface.Update
      description: the next stage of the update
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule(com.microsoft.azure.management.network.LoadBalancer,java.lang.String)
  id: withExistingLoadBalancerInboundNatRule(com.microsoft.azure.management.network.LoadBalancer,java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer
  langs:
  - java
  name: withExistingLoadBalancerInboundNatRule(LoadBalancer loadBalancer, String inboundNatRuleName)
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule(LoadBalancer loadBalancer, String inboundNatRuleName)
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule(LoadBalancer loadBalancer, String inboundNatRuleName)
  overload: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Associates the network interface's primary IP configuration with an inbound NAT rule of an existing load balancer.
  syntax:
    content: public abstract NetworkInterface.Update withExistingLoadBalancerInboundNatRule(LoadBalancer loadBalancer, String inboundNatRuleName)
    parameters:
    - id: loadBalancer
      type: com.microsoft.azure.management.network.LoadBalancer
      description: an existing load balancer
    - id: inboundNatRuleName
      type: java.lang.String
      description: the name of an existing inbound NAT rule on the selected load balancer
    return:
      type: com.microsoft.azure.management.network.NetworkInterface.Update
      description: the next stage of the update
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends()
  id: withoutLoadBalancerBackends()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer
  langs:
  - java
  name: withoutLoadBalancerBackends()
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends()
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends()
  overload: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Removes all the existing associations with any load balancer backends.
  syntax:
    content: public abstract NetworkInterface.Update withoutLoadBalancerBackends()
    return:
      type: com.microsoft.azure.management.network.NetworkInterface.Update
      description: the next stage of the update
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules()
  id: withoutLoadBalancerInboundNatRules()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer
  langs:
  - java
  name: withoutLoadBalancerInboundNatRules()
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules()
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules()
  overload: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Removes all the existing associations with any load balancer inbound NAT rules.
  syntax:
    content: public abstract NetworkInterface.Update withoutLoadBalancerInboundNatRules()
    return:
      type: com.microsoft.azure.management.network.NetworkInterface.Update
      description: the next stage of the update
references:
- uid: com.microsoft.azure.management.network.LoadBalancer
  name: LoadBalancer
  nameWithType: LoadBalancer
  fullName: com.microsoft.azure.management.network.LoadBalancer
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.network.NetworkInterface.Update
  name: NetworkInterface.Update
  nameWithType: NetworkInterface.Update
  fullName: com.microsoft.azure.management.network.NetworkInterface.Update
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend*
  name: withExistingLoadBalancerBackend
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule*
  name: withExistingLoadBalancerInboundNatRule
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends*
  name: withoutLoadBalancerBackends
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules*
  name: withoutLoadBalancerInboundNatRules
  nameWithType: NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules
  fullName: com.microsoft.azure.management.network.NetworkInterface.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules
  package: com.microsoft.azure.management.network
