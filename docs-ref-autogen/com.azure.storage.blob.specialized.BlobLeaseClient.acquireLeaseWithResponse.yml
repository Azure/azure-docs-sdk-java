### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobLeaseClient.acquireLeaseWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.acquireLeaseWithResponse"
name: "acquireLeaseWithResponse"
nameWithType: "BlobLeaseClient.acquireLeaseWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobLeaseClient.acquireLeaseWithResponse(com.azure.storage.blob.options.BlobAcquireLeaseOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.acquireLeaseWithResponse(BlobAcquireLeaseOptions options, Duration timeout, Context context)"
  name: "acquireLeaseWithResponse(BlobAcquireLeaseOptions options, Duration timeout, Context context)"
  nameWithType: "BlobLeaseClient.acquireLeaseWithResponse(BlobAcquireLeaseOptions options, Duration timeout, Context context)"
  summary: "Acquires a lease for write and delete operations. The lease duration must be between 15 to 60 seconds or -1 for an infinite duration.\n\n**Code Samples**\n\n```java\nBlobLeaseRequestConditions requestConditions = new BlobLeaseRequestConditions()\n     .setIfModifiedSince(OffsetDateTime.now().minusDays(3));\n \n BlobAcquireLeaseOptions options = new BlobAcquireLeaseOptions(60)\n     .setRequestConditions(requestConditions);\n \n System.out.printf(\"Lease ID is %s%n\", client\n     .acquireLeaseWithResponse(options, timeout, new Context(key, value))\n     .getValue());\n```"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobAcquireLeaseOptions\" data-throw-if-not-resolved=\"false\">BlobAcquireLeaseOptions</xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobAcquireLeaseOptions?alt=com.azure.storage.blob.options.BlobAcquireLeaseOptions&text=BlobAcquireLeaseOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<String> acquireLeaseWithResponse(BlobAcquireLeaseOptions options, Duration timeout, Context context)"
  returns:
    description: "The lease ID."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobLeaseClient.acquireLeaseWithResponse(int,com.azure.core.http.RequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseClient.acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  name: "acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  nameWithType: "BlobLeaseClient.acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  summary: "Acquires a lease for write and delete operations. The lease duration must be between 15 to 60 seconds or -1 for an infinite duration.\n\n**Code Samples**\n\n```java\nRequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfModifiedSince(OffsetDateTime.now().minusDays(3));\n \n System.out.printf(\"Lease ID is %s%n\", client\n     .acquireLeaseWithResponse(60, modifiedRequestConditions, timeout, new Context(key, value))\n     .getValue());\n```"
  parameters:
  - description: "The duration of the lease between 15 to 60 seconds or -1 for an infinite duration."
    name: "duration"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Standard HTTP Access conditions related to the modification of data. ETag and\n LastModifiedTime are used to construct conditions related to when the resource was changed relative to the given\n request. The request will fail if the specified condition is not satisfied."
    name: "modifiedRequestConditions"
    type: "<xref href=\"com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<String> acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions, Duration timeout, Context context)"
  returns:
    description: "The lease ID."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
