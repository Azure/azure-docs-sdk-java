### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket
  id: ProxiedSSLSocket
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport
  children:
  - com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.ProxiedSSLSocket(javax.net.ssl.SSLSocketFactory,java.net.Socket,java.lang.String,char[])
  - com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.close()
  - com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(java.net.SocketAddress)
  - com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(java.net.SocketAddress,int)
  langs:
  - java
  name: ProxiedSSLSocket
  nameWithType: ProxiedSSLSocket
  fullName: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket
  type: Class
  package: com.microsoft.azure.sdk.iot.device.transport
  summary: Extension of an SSLSocket that sends an HTTP CONNECT packet to the proxy socket before sending the SSL handshake upstream.
  syntax:
    content: public class ProxiedSSLSocket extends SSLSocket
  inheritance:
  - java.lang.Object
  - java.net.Socket
  - javax.net.ssl.SSLSocket
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.net.Socket.<T>getOption(java.net.SocketOption<T>)
  - java.net.Socket.<T>setOption(java.net.SocketOption<T>,T)
  - java.net.Socket.bind(java.net.SocketAddress)
  - java.net.Socket.close()
  - java.net.Socket.connect(java.net.SocketAddress)
  - java.net.Socket.connect(java.net.SocketAddress,int)
  - java.net.Socket.getChannel()
  - java.net.Socket.getInetAddress()
  - java.net.Socket.getInputStream()
  - java.net.Socket.getKeepAlive()
  - java.net.Socket.getLocalAddress()
  - java.net.Socket.getLocalPort()
  - java.net.Socket.getLocalSocketAddress()
  - java.net.Socket.getOOBInline()
  - java.net.Socket.getOutputStream()
  - java.net.Socket.getPort()
  - java.net.Socket.getReceiveBufferSize()
  - java.net.Socket.getRemoteSocketAddress()
  - java.net.Socket.getReuseAddress()
  - java.net.Socket.getSendBufferSize()
  - java.net.Socket.getSoLinger()
  - java.net.Socket.getSoTimeout()
  - java.net.Socket.getTcpNoDelay()
  - java.net.Socket.getTrafficClass()
  - java.net.Socket.isBound()
  - java.net.Socket.isClosed()
  - java.net.Socket.isConnected()
  - java.net.Socket.isInputShutdown()
  - java.net.Socket.isOutputShutdown()
  - java.net.Socket.sendUrgentData(int)
  - java.net.Socket.setKeepAlive(boolean)
  - java.net.Socket.setOOBInline(boolean)
  - java.net.Socket.setPerformancePreferences(int,int,int)
  - java.net.Socket.setReceiveBufferSize(int)
  - java.net.Socket.setReuseAddress(boolean)
  - java.net.Socket.setSendBufferSize(int)
  - java.net.Socket.setSoLinger(boolean,int)
  - java.net.Socket.setSoTimeout(int)
  - java.net.Socket.setSocketImplFactory(java.net.SocketImplFactory)
  - java.net.Socket.setTcpNoDelay(boolean)
  - java.net.Socket.setTrafficClass(int)
  - java.net.Socket.shutdownInput()
  - java.net.Socket.shutdownOutput()
  - java.net.Socket.supportedOptions()
  - java.net.Socket.toString()
  - javax.net.ssl.SSLSocket.addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
  - javax.net.ssl.SSLSocket.getApplicationProtocol()
  - javax.net.ssl.SSLSocket.getEnableSessionCreation()
  - javax.net.ssl.SSLSocket.getEnabledCipherSuites()
  - javax.net.ssl.SSLSocket.getEnabledProtocols()
  - javax.net.ssl.SSLSocket.getHandshakeApplicationProtocol()
  - javax.net.ssl.SSLSocket.getHandshakeApplicationProtocolSelector()
  - javax.net.ssl.SSLSocket.getHandshakeSession()
  - javax.net.ssl.SSLSocket.getNeedClientAuth()
  - javax.net.ssl.SSLSocket.getSSLParameters()
  - javax.net.ssl.SSLSocket.getSession()
  - javax.net.ssl.SSLSocket.getSupportedCipherSuites()
  - javax.net.ssl.SSLSocket.getSupportedProtocols()
  - javax.net.ssl.SSLSocket.getUseClientMode()
  - javax.net.ssl.SSLSocket.getWantClientAuth()
  - javax.net.ssl.SSLSocket.removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
  - javax.net.ssl.SSLSocket.setEnableSessionCreation(boolean)
  - javax.net.ssl.SSLSocket.setEnabledCipherSuites(java.lang.String[])
  - javax.net.ssl.SSLSocket.setEnabledProtocols(java.lang.String[])
  - javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction<javax.net.ssl.SSLSocket,java.util.List<java.lang.String>,java.lang.String>)
  - javax.net.ssl.SSLSocket.setNeedClientAuth(boolean)
  - javax.net.ssl.SSLSocket.setSSLParameters(javax.net.ssl.SSLParameters)
  - javax.net.ssl.SSLSocket.setUseClientMode(boolean)
  - javax.net.ssl.SSLSocket.setWantClientAuth(boolean)
  - javax.net.ssl.SSLSocket.startHandshake()
- uid: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.ProxiedSSLSocket(javax.net.ssl.SSLSocketFactory,java.net.Socket,java.lang.String,char[])
  id: ProxiedSSLSocket(javax.net.ssl.SSLSocketFactory,java.net.Socket,java.lang.String,char[])
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket
  langs:
  - java
  name: ProxiedSSLSocket(SSLSocketFactory socketFactory, Socket proxySocket, String proxyUsername, char[] proxyPassword)
  nameWithType: ProxiedSSLSocket.ProxiedSSLSocket(SSLSocketFactory socketFactory, Socket proxySocket, String proxyUsername, char[] proxyPassword)
  fullName: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.ProxiedSSLSocket(SSLSocketFactory socketFactory, Socket proxySocket, String proxyUsername, char[] proxyPassword)
  overload: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.ProxiedSSLSocket*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: protected ProxiedSSLSocket(SSLSocketFactory socketFactory, Socket proxySocket, String proxyUsername, char[] proxyPassword)
    parameters:
    - id: socketFactory
      type: javax.net.ssl.SSLSocketFactory
    - id: proxySocket
      type: java.net.Socket
    - id: proxyUsername
      type: java.lang.String
    - id: proxyPassword
      type: char[]
- uid: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.close()
  id: close()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket
  langs:
  - java
  name: close()
  nameWithType: ProxiedSSLSocket.close()
  fullName: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.close()
  overload: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.close*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(java.net.SocketAddress)
  id: connect(java.net.SocketAddress)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket
  langs:
  - java
  name: connect(SocketAddress socketAddress)
  nameWithType: ProxiedSSLSocket.connect(SocketAddress socketAddress)
  fullName: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(SocketAddress socketAddress)
  overload: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public void connect(SocketAddress socketAddress)
    parameters:
    - id: socketAddress
      type: java.net.SocketAddress
  exceptions:
  - type: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(java.net.SocketAddress,int)
  id: connect(java.net.SocketAddress,int)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket
  langs:
  - java
  name: connect(SocketAddress socketAddress, int timeout)
  nameWithType: ProxiedSSLSocket.connect(SocketAddress socketAddress, int timeout)
  fullName: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(SocketAddress socketAddress, int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public void connect(SocketAddress socketAddress, int timeout)
    parameters:
    - id: socketAddress
      type: java.net.SocketAddress
    - id: timeout
      type: int
  exceptions:
  - type: java.io.IOException
references:
- uid: javax.net.ssl.SSLSocketFactory
  spec.java:
  - uid: javax.net.ssl.SSLSocketFactory
    name: SSLSocketFactory
    fullName: javax.net.ssl.SSLSocketFactory
- uid: java.net.Socket
  spec.java:
  - uid: java.net.Socket
    name: Socket
    fullName: java.net.Socket
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.ProxiedSSLSocket*
  name: ProxiedSSLSocket
  nameWithType: ProxiedSSLSocket.ProxiedSSLSocket
  fullName: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.ProxiedSSLSocket
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.net.SocketAddress
  spec.java:
  - uid: java.net.SocketAddress
    name: SocketAddress
    fullName: java.net.SocketAddress
- uid: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect*
  name: connect
  nameWithType: ProxiedSSLSocket.connect
  fullName: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.close*
  name: close
  nameWithType: ProxiedSSLSocket.close
  fullName: com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.close
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: javax.net.ssl.SSLSocket
  name: SSLSocket
  nameWithType: SSLSocket
  fullName: javax.net.ssl.SSLSocket
- uid: java.net.Socket.getOOBInline()
  name: Socket.getOOBInline()
  nameWithType: Socket.getOOBInline()
  fullName: java.net.Socket.getOOBInline()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.net.Socket.isInputShutdown()
  name: Socket.isInputShutdown()
  nameWithType: Socket.isInputShutdown()
  fullName: java.net.Socket.isInputShutdown()
- uid: java.net.Socket.setKeepAlive(boolean)
  name: Socket.setKeepAlive(boolean)
  nameWithType: Socket.setKeepAlive(boolean)
  fullName: java.net.Socket.setKeepAlive(boolean)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.net.Socket.shutdownOutput()
  name: Socket.shutdownOutput()
  nameWithType: Socket.shutdownOutput()
  fullName: java.net.Socket.shutdownOutput()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: javax.net.ssl.SSLSocket.setEnabledProtocols(java.lang.String[])
  name: SSLSocket.setEnabledProtocols(String[])
  nameWithType: SSLSocket.setEnabledProtocols(String[])
  fullName: javax.net.ssl.SSLSocket.setEnabledProtocols(java.lang.String[])
- uid: javax.net.ssl.SSLSocket.getHandshakeSession()
  name: SSLSocket.getHandshakeSession()
  nameWithType: SSLSocket.getHandshakeSession()
  fullName: javax.net.ssl.SSLSocket.getHandshakeSession()
- uid: java.net.Socket.toString()
  name: Socket.toString()
  nameWithType: Socket.toString()
  fullName: java.net.Socket.toString()
- uid: javax.net.ssl.SSLSocket.getHandshakeApplicationProtocol()
  name: SSLSocket.getHandshakeApplicationProtocol()
  nameWithType: SSLSocket.getHandshakeApplicationProtocol()
  fullName: javax.net.ssl.SSLSocket.getHandshakeApplicationProtocol()
- uid: java.net.Socket.setPerformancePreferences(int,int,int)
  name: Socket.setPerformancePreferences(int,int,int)
  nameWithType: Socket.setPerformancePreferences(int,int,int)
  fullName: java.net.Socket.setPerformancePreferences(int,int,int)
- uid: javax.net.ssl.SSLSocket.removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
  name: SSLSocket.removeHandshakeCompletedListener(HandshakeCompletedListener)
  nameWithType: SSLSocket.removeHandshakeCompletedListener(HandshakeCompletedListener)
  fullName: javax.net.ssl.SSLSocket.removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
- uid: java.net.Socket.getLocalSocketAddress()
  name: Socket.getLocalSocketAddress()
  nameWithType: Socket.getLocalSocketAddress()
  fullName: java.net.Socket.getLocalSocketAddress()
- uid: javax.net.ssl.SSLSocket.getApplicationProtocol()
  name: SSLSocket.getApplicationProtocol()
  nameWithType: SSLSocket.getApplicationProtocol()
  fullName: javax.net.ssl.SSLSocket.getApplicationProtocol()
- uid: java.net.Socket.getSoTimeout()
  name: Socket.getSoTimeout()
  nameWithType: Socket.getSoTimeout()
  fullName: java.net.Socket.getSoTimeout()
- uid: java.net.Socket.getOutputStream()
  name: Socket.getOutputStream()
  nameWithType: Socket.getOutputStream()
  fullName: java.net.Socket.getOutputStream()
- uid: javax.net.ssl.SSLSocket.getEnabledCipherSuites()
  name: SSLSocket.getEnabledCipherSuites()
  nameWithType: SSLSocket.getEnabledCipherSuites()
  fullName: javax.net.ssl.SSLSocket.getEnabledCipherSuites()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: javax.net.ssl.SSLSocket.setNeedClientAuth(boolean)
  name: SSLSocket.setNeedClientAuth(boolean)
  nameWithType: SSLSocket.setNeedClientAuth(boolean)
  fullName: javax.net.ssl.SSLSocket.setNeedClientAuth(boolean)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: javax.net.ssl.SSLSocket.getNeedClientAuth()
  name: SSLSocket.getNeedClientAuth()
  nameWithType: SSLSocket.getNeedClientAuth()
  fullName: javax.net.ssl.SSLSocket.getNeedClientAuth()
- uid: javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction<javax.net.ssl.SSLSocket,java.util.List<java.lang.String>,java.lang.String>)
  name: SSLSocket.setHandshakeApplicationProtocolSelector(BiFunction<SSLSocket,List<String>,String>)
  nameWithType: SSLSocket.setHandshakeApplicationProtocolSelector(BiFunction<SSLSocket,List<String>,String>)
  fullName: javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction<javax.net.ssl.SSLSocket,java.util.List<java.lang.String>,java.lang.String>)
- uid: java.net.Socket.getChannel()
  name: Socket.getChannel()
  nameWithType: Socket.getChannel()
  fullName: java.net.Socket.getChannel()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.net.Socket.getReuseAddress()
  name: Socket.getReuseAddress()
  nameWithType: Socket.getReuseAddress()
  fullName: java.net.Socket.getReuseAddress()
- uid: java.net.Socket.close()
  name: Socket.close()
  nameWithType: Socket.close()
  fullName: java.net.Socket.close()
- uid: java.net.Socket.bind(java.net.SocketAddress)
  name: Socket.bind(SocketAddress)
  nameWithType: Socket.bind(SocketAddress)
  fullName: java.net.Socket.bind(java.net.SocketAddress)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.net.Socket.getRemoteSocketAddress()
  name: Socket.getRemoteSocketAddress()
  nameWithType: Socket.getRemoteSocketAddress()
  fullName: java.net.Socket.getRemoteSocketAddress()
- uid: javax.net.ssl.SSLSocket.getHandshakeApplicationProtocolSelector()
  name: SSLSocket.getHandshakeApplicationProtocolSelector()
  nameWithType: SSLSocket.getHandshakeApplicationProtocolSelector()
  fullName: javax.net.ssl.SSLSocket.getHandshakeApplicationProtocolSelector()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.net.Socket.<T>setOption(java.net.SocketOption<T>,T)
  name: Socket.<T>setOption(SocketOption<T>,T)
  nameWithType: Socket.<T>setOption(SocketOption<T>,T)
  fullName: java.net.Socket.<T>setOption(java.net.SocketOption<T>,T)
- uid: java.net.Socket.getInputStream()
  name: Socket.getInputStream()
  nameWithType: Socket.getInputStream()
  fullName: java.net.Socket.getInputStream()
- uid: java.net.Socket.sendUrgentData(int)
  name: Socket.sendUrgentData(int)
  nameWithType: Socket.sendUrgentData(int)
  fullName: java.net.Socket.sendUrgentData(int)
- uid: javax.net.ssl.SSLSocket.getSession()
  name: SSLSocket.getSession()
  nameWithType: SSLSocket.getSession()
  fullName: javax.net.ssl.SSLSocket.getSession()
- uid: java.net.Socket.setTrafficClass(int)
  name: Socket.setTrafficClass(int)
  nameWithType: Socket.setTrafficClass(int)
  fullName: java.net.Socket.setTrafficClass(int)
- uid: java.net.Socket.setReceiveBufferSize(int)
  name: Socket.setReceiveBufferSize(int)
  nameWithType: Socket.setReceiveBufferSize(int)
  fullName: java.net.Socket.setReceiveBufferSize(int)
- uid: javax.net.ssl.SSLSocket.addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
  name: SSLSocket.addHandshakeCompletedListener(HandshakeCompletedListener)
  nameWithType: SSLSocket.addHandshakeCompletedListener(HandshakeCompletedListener)
  fullName: javax.net.ssl.SSLSocket.addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)
- uid: javax.net.ssl.SSLSocket.setWantClientAuth(boolean)
  name: SSLSocket.setWantClientAuth(boolean)
  nameWithType: SSLSocket.setWantClientAuth(boolean)
  fullName: javax.net.ssl.SSLSocket.setWantClientAuth(boolean)
- uid: javax.net.ssl.SSLSocket.getEnableSessionCreation()
  name: SSLSocket.getEnableSessionCreation()
  nameWithType: SSLSocket.getEnableSessionCreation()
  fullName: javax.net.ssl.SSLSocket.getEnableSessionCreation()
- uid: java.net.Socket.setSendBufferSize(int)
  name: Socket.setSendBufferSize(int)
  nameWithType: Socket.setSendBufferSize(int)
  fullName: java.net.Socket.setSendBufferSize(int)
- uid: java.net.Socket.isClosed()
  name: Socket.isClosed()
  nameWithType: Socket.isClosed()
  fullName: java.net.Socket.isClosed()
- uid: java.net.Socket.setSoTimeout(int)
  name: Socket.setSoTimeout(int)
  nameWithType: Socket.setSoTimeout(int)
  fullName: java.net.Socket.setSoTimeout(int)
- uid: java.net.Socket.shutdownInput()
  name: Socket.shutdownInput()
  nameWithType: Socket.shutdownInput()
  fullName: java.net.Socket.shutdownInput()
- uid: java.net.Socket.connect(java.net.SocketAddress)
  name: Socket.connect(SocketAddress)
  nameWithType: Socket.connect(SocketAddress)
  fullName: java.net.Socket.connect(java.net.SocketAddress)
- uid: java.net.Socket.getReceiveBufferSize()
  name: Socket.getReceiveBufferSize()
  nameWithType: Socket.getReceiveBufferSize()
  fullName: java.net.Socket.getReceiveBufferSize()
- uid: javax.net.ssl.SSLSocket.setEnabledCipherSuites(java.lang.String[])
  name: SSLSocket.setEnabledCipherSuites(String[])
  nameWithType: SSLSocket.setEnabledCipherSuites(String[])
  fullName: javax.net.ssl.SSLSocket.setEnabledCipherSuites(java.lang.String[])
- uid: javax.net.ssl.SSLSocket.getWantClientAuth()
  name: SSLSocket.getWantClientAuth()
  nameWithType: SSLSocket.getWantClientAuth()
  fullName: javax.net.ssl.SSLSocket.getWantClientAuth()
- uid: java.net.Socket.setSocketImplFactory(java.net.SocketImplFactory)
  name: Socket.setSocketImplFactory(SocketImplFactory)
  nameWithType: Socket.setSocketImplFactory(SocketImplFactory)
  fullName: java.net.Socket.setSocketImplFactory(java.net.SocketImplFactory)
- uid: javax.net.ssl.SSLSocket.startHandshake()
  name: SSLSocket.startHandshake()
  nameWithType: SSLSocket.startHandshake()
  fullName: javax.net.ssl.SSLSocket.startHandshake()
- uid: java.net.Socket.setSoLinger(boolean,int)
  name: Socket.setSoLinger(boolean,int)
  nameWithType: Socket.setSoLinger(boolean,int)
  fullName: java.net.Socket.setSoLinger(boolean,int)
- uid: java.net.Socket.getLocalAddress()
  name: Socket.getLocalAddress()
  nameWithType: Socket.getLocalAddress()
  fullName: java.net.Socket.getLocalAddress()
- uid: java.net.Socket.<T>getOption(java.net.SocketOption<T>)
  name: Socket.<T>getOption(SocketOption<T>)
  nameWithType: Socket.<T>getOption(SocketOption<T>)
  fullName: java.net.Socket.<T>getOption(java.net.SocketOption<T>)
- uid: java.net.Socket.setTcpNoDelay(boolean)
  name: Socket.setTcpNoDelay(boolean)
  nameWithType: Socket.setTcpNoDelay(boolean)
  fullName: java.net.Socket.setTcpNoDelay(boolean)
- uid: java.net.Socket.isBound()
  name: Socket.isBound()
  nameWithType: Socket.isBound()
  fullName: java.net.Socket.isBound()
- uid: javax.net.ssl.SSLSocket.getEnabledProtocols()
  name: SSLSocket.getEnabledProtocols()
  nameWithType: SSLSocket.getEnabledProtocols()
  fullName: javax.net.ssl.SSLSocket.getEnabledProtocols()
- uid: java.net.Socket.setOOBInline(boolean)
  name: Socket.setOOBInline(boolean)
  nameWithType: Socket.setOOBInline(boolean)
  fullName: java.net.Socket.setOOBInline(boolean)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.net.Socket.getSendBufferSize()
  name: Socket.getSendBufferSize()
  nameWithType: Socket.getSendBufferSize()
  fullName: java.net.Socket.getSendBufferSize()
- uid: java.net.Socket.getLocalPort()
  name: Socket.getLocalPort()
  nameWithType: Socket.getLocalPort()
  fullName: java.net.Socket.getLocalPort()
- uid: javax.net.ssl.SSLSocket.setSSLParameters(javax.net.ssl.SSLParameters)
  name: SSLSocket.setSSLParameters(SSLParameters)
  nameWithType: SSLSocket.setSSLParameters(SSLParameters)
  fullName: javax.net.ssl.SSLSocket.setSSLParameters(javax.net.ssl.SSLParameters)
- uid: java.net.Socket.getKeepAlive()
  name: Socket.getKeepAlive()
  nameWithType: Socket.getKeepAlive()
  fullName: java.net.Socket.getKeepAlive()
- uid: java.net.Socket.getTrafficClass()
  name: Socket.getTrafficClass()
  nameWithType: Socket.getTrafficClass()
  fullName: java.net.Socket.getTrafficClass()
- uid: java.net.Socket.connect(java.net.SocketAddress,int)
  name: Socket.connect(SocketAddress,int)
  nameWithType: Socket.connect(SocketAddress,int)
  fullName: java.net.Socket.connect(java.net.SocketAddress,int)
- uid: java.net.Socket.setReuseAddress(boolean)
  name: Socket.setReuseAddress(boolean)
  nameWithType: Socket.setReuseAddress(boolean)
  fullName: java.net.Socket.setReuseAddress(boolean)
- uid: java.net.Socket.isOutputShutdown()
  name: Socket.isOutputShutdown()
  nameWithType: Socket.isOutputShutdown()
  fullName: java.net.Socket.isOutputShutdown()
- uid: java.net.Socket.getSoLinger()
  name: Socket.getSoLinger()
  nameWithType: Socket.getSoLinger()
  fullName: java.net.Socket.getSoLinger()
- uid: java.net.Socket.supportedOptions()
  name: Socket.supportedOptions()
  nameWithType: Socket.supportedOptions()
  fullName: java.net.Socket.supportedOptions()
- uid: java.net.Socket.isConnected()
  name: Socket.isConnected()
  nameWithType: Socket.isConnected()
  fullName: java.net.Socket.isConnected()
- uid: javax.net.ssl.SSLSocket.getSSLParameters()
  name: SSLSocket.getSSLParameters()
  nameWithType: SSLSocket.getSSLParameters()
  fullName: javax.net.ssl.SSLSocket.getSSLParameters()
- uid: javax.net.ssl.SSLSocket.getUseClientMode()
  name: SSLSocket.getUseClientMode()
  nameWithType: SSLSocket.getUseClientMode()
  fullName: javax.net.ssl.SSLSocket.getUseClientMode()
- uid: javax.net.ssl.SSLSocket.setEnableSessionCreation(boolean)
  name: SSLSocket.setEnableSessionCreation(boolean)
  nameWithType: SSLSocket.setEnableSessionCreation(boolean)
  fullName: javax.net.ssl.SSLSocket.setEnableSessionCreation(boolean)
- uid: javax.net.ssl.SSLSocket.setUseClientMode(boolean)
  name: SSLSocket.setUseClientMode(boolean)
  nameWithType: SSLSocket.setUseClientMode(boolean)
  fullName: javax.net.ssl.SSLSocket.setUseClientMode(boolean)
- uid: java.net.Socket.getTcpNoDelay()
  name: Socket.getTcpNoDelay()
  nameWithType: Socket.getTcpNoDelay()
  fullName: java.net.Socket.getTcpNoDelay()
- uid: java.net.Socket.getInetAddress()
  name: Socket.getInetAddress()
  nameWithType: Socket.getInetAddress()
  fullName: java.net.Socket.getInetAddress()
- uid: java.net.Socket.getPort()
  name: Socket.getPort()
  nameWithType: Socket.getPort()
  fullName: java.net.Socket.getPort()
- uid: javax.net.ssl.SSLSocket.getSupportedCipherSuites()
  name: SSLSocket.getSupportedCipherSuites()
  nameWithType: SSLSocket.getSupportedCipherSuites()
  fullName: javax.net.ssl.SSLSocket.getSupportedCipherSuites()
- uid: javax.net.ssl.SSLSocket.getSupportedProtocols()
  name: SSLSocket.getSupportedProtocols()
  nameWithType: SSLSocket.getSupportedProtocols()
  fullName: javax.net.ssl.SSLSocket.getSupportedProtocols()
- uid: java.lang.String>,java.lang.String>)
  name: String>,String>)
  nameWithType: String>,String>)
  fullName: java.lang.String>,java.lang.String>)
- uid: javax.net.ssl.SSLSocket,java.util.List
  name: SSLSocket,List
  nameWithType: SSLSocket,List
  fullName: javax.net.ssl.SSLSocket,java.util.List
- uid: javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction
  name: SSLSocket.setHandshakeApplicationProtocolSelector(BiFunction
  nameWithType: SSLSocket.setHandshakeApplicationProtocolSelector(BiFunction
  fullName: javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction
- uid: T>,T)
  name: T>,T)
  nameWithType: T>,T)
  fullName: T>,T)
- uid: java.net.Socket.
  name: Socket.
  nameWithType: Socket.
  fullName: java.net.Socket.
- uid: T>setOption(java.net.SocketOption
  name: T>setOption(SocketOption
  nameWithType: T>setOption(SocketOption
  fullName: T>setOption(java.net.SocketOption
- uid: T>getOption(java.net.SocketOption
  name: T>getOption(SocketOption
  nameWithType: T>getOption(SocketOption
  fullName: T>getOption(java.net.SocketOption
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
