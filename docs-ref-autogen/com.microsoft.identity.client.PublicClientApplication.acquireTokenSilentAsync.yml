### YamlMime:JavaMember
nameWithType: PublicClientApplication.acquireTokenSilentAsync
type: method
members:
- fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  name: acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  overridden: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parameters:
  - name: acquireTokenSilentParameters
    type: '@NonNull final <xref href="com.microsoft.identity.client.AcquireTokenSilentParameters?alt=com.microsoft.identity.client.AcquireTokenSilentParameters&text=AcquireTokenSilentParameters" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>

    <p></p>
  syntax: public void acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync*
fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
name: acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
package: com.microsoft.identity.client
metadata: {}
