### YamlMime:JavaMember
uid: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getManifestAsync*"
fullName: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getManifestAsync"
name: "getManifestAsync"
nameWithType: "ContainerRegistriesImpl.getManifestAsync"
members:
- uid: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getManifestAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getManifestAsync(String name, String reference, String accept)"
  name: "getManifestAsync(String name, String reference, String accept)"
  nameWithType: "ContainerRegistriesImpl.getManifestAsync(String name, String reference, String accept)"
  summary: "Get the manifest identified by \\`name\\` and \\`reference\\` where \\`reference\\` can be a tag or digest."
  parameters:
  - description: "Name of the image (including the namespace)."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A tag or a digest, pointing to a specific image."
    name: "reference"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Accept header string delimited by comma. For example,\n     application/vnd.docker.distribution.manifest.v2+json."
    name: "accept"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ManifestWrapper> getManifestAsync(String name, String reference, String accept)"
  returns:
    description: "the manifest identified by `name` and `reference` where `reference` can be a tag or digest."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.implementation.models.ManifestWrapper?alt=com.azure.containers.containerregistry.implementation.models.ManifestWrapper&text=ManifestWrapper\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getManifestAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getManifestAsync(String name, String reference, String accept, Context context)"
  name: "getManifestAsync(String name, String reference, String accept, Context context)"
  nameWithType: "ContainerRegistriesImpl.getManifestAsync(String name, String reference, String accept, Context context)"
  summary: "Get the manifest identified by \\`name\\` and \\`reference\\` where \\`reference\\` can be a tag or digest."
  parameters:
  - description: "Name of the image (including the namespace)."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A tag or a digest, pointing to a specific image."
    name: "reference"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Accept header string delimited by comma. For example,\n     application/vnd.docker.distribution.manifest.v2+json."
    name: "accept"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ManifestWrapper> getManifestAsync(String name, String reference, String accept, Context context)"
  returns:
    description: "the manifest identified by `name` and `reference` where `reference` can be a tag or digest."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.implementation.models.ManifestWrapper?alt=com.azure.containers.containerregistry.implementation.models.ManifestWrapper&text=ManifestWrapper\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.containers.containerregistry.implementation"
artifact: com.azure:azure-containers-containerregistry:1.0.0
