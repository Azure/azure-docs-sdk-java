### YamlMime:JavaMember
nameWithType: JobProperties.createForImportJob
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)
  name: createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)
  nameWithType: JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)
  parameters:
  - description: <p>URI to a blob container that contains registry data to sync. Including a SAS token is dependent on the StorageAuthenticationType </p>
    name: inputBlobContainerUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>URI to a blob container. This is used to output the status of the job and the results. Including a SAS token is dependent on the StorageAuthenticationType </p>
    name: outputBlobContainerUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An instance of JobProperties </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of JobProperties with parameters ready to start an Import job</p>

    <p></p>
  syntax: public static JobProperties createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)
  uid: com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri, StorageAuthenticationType storageAuthenticationType)
  name: createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri, StorageAuthenticationType storageAuthenticationType)
  nameWithType: JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri, StorageAuthenticationType storageAuthenticationType)
  parameters:
  - description: <p>URI to a blob container that contains registry data to sync. Including a SAS token is dependent on the StorageAuthenticationType </p>
    name: inputBlobContainerUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>URI to a blob container. This is used to output the status of the job and the results. Including a SAS token is dependent on the StorageAuthenticationType </p>
    name: outputBlobContainerUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies authentication type being used for connecting to storage account </p>
    name: storageAuthenticationType
    type: <xref href="com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType?alt=com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType&text=StorageAuthenticationType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An instance of JobProperties </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of JobProperties with parameters ready to start an Import job</p>

    <p></p>
  syntax: public static JobProperties createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri, StorageAuthenticationType storageAuthenticationType)
  uid: com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(String,String,StorageAuthenticationType)
uid: com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob*
fullName: com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)
name: createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)
package: com.microsoft.azure.sdk.iot.service
metadata: {}
