### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listForManagementGroupAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listForManagementGroupAsync"
name: "listForManagementGroupAsync"
nameWithType: "PolicyAssignmentsClient.listForManagementGroupAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listForManagementGroupAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listForManagementGroupAsync(String managementGroupId)"
  name: "listForManagementGroupAsync(String managementGroupId)"
  nameWithType: "PolicyAssignmentsClient.listForManagementGroupAsync(String managementGroupId)"
  summary: "This operation retrieves the list of all policy assignments applicable to the management group that match the given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq '\\{value\\}''. If $filter=atScope() is provided, the returned list includes all policy assignments that are assigned to the management group or the management group's ancestors. If $filter=atExactScope() is provided, the returned list only includes all policy assignments that at the management group. If $filter=policyDefinitionId eq '\\{value\\}' is provided, the returned list includes all policy assignments of the policy definition whose id is \\{value\\} that apply to the management group."
  parameters:
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<PolicyAssignmentInner> listForManagementGroupAsync(String managementGroupId)"
  returns:
    description: "list of policy assignments as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listForManagementGroupAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listForManagementGroupAsync(String managementGroupId, String filter, Integer top)"
  name: "listForManagementGroupAsync(String managementGroupId, String filter, Integer top)"
  nameWithType: "PolicyAssignmentsClient.listForManagementGroupAsync(String managementGroupId, String filter, Integer top)"
  summary: "This operation retrieves the list of all policy assignments applicable to the management group that match the given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq '\\{value\\}''. If $filter=atScope() is provided, the returned list includes all policy assignments that are assigned to the management group or the management group's ancestors. If $filter=atExactScope() is provided, the returned list only includes all policy assignments that at the management group. If $filter=policyDefinitionId eq '\\{value\\}' is provided, the returned list includes all policy assignments of the policy definition whose id is \\{value\\} that apply to the management group."
  parameters:
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atScope()', 'atExactScope()'\n     or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed. If\n     $filter=atScope() is provided, the returned list only includes all policy assignments that apply to the\n     scope, which is everything in the unfiltered list except those applied to sub scopes contained within the\n     given scope. If $filter=atExactScope() is provided, the returned list only includes all policy assignments\n     that at the given scope. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes\n     all policy assignments of the policy definition whose id is {value}."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return. When the $top filter is not provided, it will return 500 records."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<PolicyAssignmentInner> listForManagementGroupAsync(String managementGroupId, String filter, Integer top)"
  returns:
    description: "list of policy assignments as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
