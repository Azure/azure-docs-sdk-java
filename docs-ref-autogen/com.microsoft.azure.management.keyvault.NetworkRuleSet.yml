### YamlMime:JavaType
uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet"
fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet"
name: "NetworkRuleSet"
nameWithType: "NetworkRuleSet"
summary: "A set of rules governing the network accessibility of a vault."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class NetworkRuleSet"
constructors:
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.NetworkRuleSet()"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.NetworkRuleSet()"
  name: "NetworkRuleSet()"
  nameWithType: "NetworkRuleSet.NetworkRuleSet()"
  syntax: "public NetworkRuleSet()"
methods:
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.bypass()"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.bypass()"
  name: "bypass()"
  nameWithType: "NetworkRuleSet.bypass()"
  summary: "Get the bypass value."
  syntax: "public NetworkRuleBypassOptions bypass()"
  returns:
    description: "the bypass value"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleBypassOptions?alt=com.microsoft.azure.management.keyvault.NetworkRuleBypassOptions&text=NetworkRuleBypassOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.defaultAction()"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.defaultAction()"
  name: "defaultAction()"
  nameWithType: "NetworkRuleSet.defaultAction()"
  summary: "Get the defaultAction value."
  syntax: "public NetworkRuleAction defaultAction()"
  returns:
    description: "the defaultAction value"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleAction?alt=com.microsoft.azure.management.keyvault.NetworkRuleAction&text=NetworkRuleAction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.ipRules()"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.ipRules()"
  name: "ipRules()"
  nameWithType: "NetworkRuleSet.ipRules()"
  summary: "Get the ipRules value."
  syntax: "public List<IPRule> ipRules()"
  returns:
    description: "the ipRules value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.IPRule?alt=com.microsoft.azure.management.keyvault.IPRule&text=IPRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.virtualNetworkRules()"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "NetworkRuleSet.virtualNetworkRules()"
  summary: "Get the virtualNetworkRules value."
  syntax: "public List<VirtualNetworkRule> virtualNetworkRules()"
  returns:
    description: "the virtualNetworkRules value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.VirtualNetworkRule?alt=com.microsoft.azure.management.keyvault.VirtualNetworkRule&text=VirtualNetworkRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.withBypass(com.microsoft.azure.management.keyvault.NetworkRuleBypassOptions)"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.withBypass(NetworkRuleBypassOptions bypass)"
  name: "withBypass(NetworkRuleBypassOptions bypass)"
  nameWithType: "NetworkRuleSet.withBypass(NetworkRuleBypassOptions bypass)"
  summary: "Set the bypass value."
  parameters:
  - description: "the bypass value to set"
    name: "bypass"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleBypassOptions?alt=com.microsoft.azure.management.keyvault.NetworkRuleBypassOptions&text=NetworkRuleBypassOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkRuleSet withBypass(NetworkRuleBypassOptions bypass)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleSet?alt=com.microsoft.azure.management.keyvault.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.withDefaultAction(com.microsoft.azure.management.keyvault.NetworkRuleAction)"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.withDefaultAction(NetworkRuleAction defaultAction)"
  name: "withDefaultAction(NetworkRuleAction defaultAction)"
  nameWithType: "NetworkRuleSet.withDefaultAction(NetworkRuleAction defaultAction)"
  summary: "Set the defaultAction value."
  parameters:
  - description: "the defaultAction value to set"
    name: "defaultAction"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleAction?alt=com.microsoft.azure.management.keyvault.NetworkRuleAction&text=NetworkRuleAction\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkRuleSet withDefaultAction(NetworkRuleAction defaultAction)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleSet?alt=com.microsoft.azure.management.keyvault.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.withIpRules(java.util.List<com.microsoft.azure.management.keyvault.IPRule>)"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.withIpRules(List<IPRule> ipRules)"
  name: "withIpRules(List<IPRule> ipRules)"
  nameWithType: "NetworkRuleSet.withIpRules(List<IPRule> ipRules)"
  summary: "Set the ipRules value."
  parameters:
  - description: "the ipRules value to set"
    name: "ipRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.IPRule?alt=com.microsoft.azure.management.keyvault.IPRule&text=IPRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleSet withIpRules(List<IPRule> ipRules)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleSet?alt=com.microsoft.azure.management.keyvault.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.NetworkRuleSet.withVirtualNetworkRules(java.util.List<com.microsoft.azure.management.keyvault.VirtualNetworkRule>)"
  fullName: "com.microsoft.azure.management.keyvault.NetworkRuleSet.withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  name: "withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  nameWithType: "NetworkRuleSet.withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  summary: "Set the virtualNetworkRules value."
  parameters:
  - description: "the virtualNetworkRules value to set"
    name: "virtualNetworkRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.VirtualNetworkRule?alt=com.microsoft.azure.management.keyvault.VirtualNetworkRule&text=VirtualNetworkRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleSet withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleSet?alt=com.microsoft.azure.management.keyvault.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.management.keyvault"
artifact: com.microsoft.azure:azure-mgmt-keyvault:1.41.4
