### YamlMime:JavaType
constructors:
- fullName: com.microsoft.identity.client.MsalChromeCustomTabManager.MsalChromeCustomTabManager(final Activity activity)
  name: MsalChromeCustomTabManager(final Activity activity)
  nameWithType: MsalChromeCustomTabManager.MsalChromeCustomTabManager(final Activity activity)
  parameters:
  - description: <p>Instance of calling activity. </p>
    name: activity
    type: <xref href="final+Activity?alt=final+Activity&text=final+Activity" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor of MsalChromeCustomTabManager.</p>

    <p></p>
  syntax: public MsalChromeCustomTabManager(final Activity activity)
  uid: com.microsoft.identity.client.MsalChromeCustomTabManager.MsalChromeCustomTabManager(final Activity)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.identity.client.MsalChromeCustomTabManager.bindCustomTabsService()
  name: bindCustomTabsService()
  nameWithType: MsalChromeCustomTabManager.bindCustomTabsService()
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: <p>Method to bind Chrome <xref uid="" data-throw-if-not-resolved="false" data-raw-source="androidx.browser.customtabs.CustomTabsService"></xref>. Waits until the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalCustomTabsServiceConnection"></xref> is connected or the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalChromeCustomTabManager#CUSTOM_TABS_MAX_CONNECTION_TIMEOUT"></xref> is timed out. </p>
  syntax: public synchronized void bindCustomTabsService()
  uid: com.microsoft.identity.client.MsalChromeCustomTabManager.bindCustomTabsService()
- fullName: com.microsoft.identity.client.MsalChromeCustomTabManager.launchChromeTabOrBrowserForUrl(String requestUrl)
  name: launchChromeTabOrBrowserForUrl(String requestUrl)
  nameWithType: MsalChromeCustomTabManager.launchChromeTabOrBrowserForUrl(String requestUrl)
  parameters:
  - description: <p>URL to be loaded. </p>
    name: requestUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Launches a Chrome Custom tab if available else Chrome Browser for the URL. CustomTabService needs to be bound using <xref uid="com.microsoft.identity.client.MsalChromeCustomTabManager.bindCustomTabsService()" data-throw-if-not-resolved="false" data-raw-source="MsalChromeCustomTabManager#bindCustomTabsService()"></xref> before calling this method.</p>

    <p></p>
  syntax: public void launchChromeTabOrBrowserForUrl(String requestUrl)
  uid: com.microsoft.identity.client.MsalChromeCustomTabManager.launchChromeTabOrBrowserForUrl(String)
- fullName: com.microsoft.identity.client.MsalChromeCustomTabManager.unbindCustomTabsService()
  name: unbindCustomTabsService()
  nameWithType: MsalChromeCustomTabManager.unbindCustomTabsService()
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: <p>Method to unbind Chrome <xref uid="" data-throw-if-not-resolved="false" data-raw-source="androidx.browser.customtabs.CustomTabsService"></xref>. </p>
  syntax: public synchronized void unbindCustomTabsService()
  uid: com.microsoft.identity.client.MsalChromeCustomTabManager.unbindCustomTabsService()
- fullName: com.microsoft.identity.client.MsalChromeCustomTabManager.verifyChromeTabOrBrowser()
  name: verifyChromeTabOrBrowser()
  nameWithType: MsalChromeCustomTabManager.verifyChromeTabOrBrowser()
  syntax: protected void verifyChromeTabOrBrowser()
  uid: com.microsoft.identity.client.MsalChromeCustomTabManager.verifyChromeTabOrBrowser()
nameWithType: MsalChromeCustomTabManager
syntax: public class MsalChromeCustomTabManager
type: class
uid: com.microsoft.identity.client.MsalChromeCustomTabManager
fullName: com.microsoft.identity.client.MsalChromeCustomTabManager
name: MsalChromeCustomTabManager
package: com.microsoft.identity.client
metadata: {}
