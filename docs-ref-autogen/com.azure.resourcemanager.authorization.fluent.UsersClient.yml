### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient
  id: UsersClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent
  children:
  - com.azure.resourcemanager.authorization.fluent.UsersClient.create(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.createAsync(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponse(com.azure.resourcemanager.authorization.models.UserCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponseAsync(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.delete(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.deleteAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.get(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.getAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups(java.lang.String,boolean)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups(java.lang.String,boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroupsAsync(java.lang.String,boolean)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.list()
  - com.azure.resourcemanager.authorization.fluent.UsersClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync()
  - com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.update(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.updateAsync(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponse(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  langs:
  - java
  name: UsersClient
  nameWithType: UsersClient
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient
  type: Interface
  package: com.azure.resourcemanager.authorization.fluent
  summary: An instance of this class provides access to all the operations defined in UsersClient.
  syntax:
    content: public interface UsersClient
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.create(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  id: create(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: create(UserCreateParameters parameters)
  nameWithType: UsersClient.create(UserCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.create(UserCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.create*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Create a new user.
  syntax:
    content: public abstract UserInner create(UserCreateParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.UserCreateParameters
      description: Request parameters for creating a new work or school account user.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.UserInner
      description: active Directory user information.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.createAsync(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  id: createAsync(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: createAsync(UserCreateParameters parameters)
  nameWithType: UsersClient.createAsync(UserCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.createAsync(UserCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Create a new user.
  syntax:
    content: public abstract Mono<UserInner> createAsync(UserCreateParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.UserCreateParameters
      description: Request parameters for creating a new work or school account user.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.UserInner>
      description: active Directory user information.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponse(com.azure.resourcemanager.authorization.models.UserCreateParameters,com.azure.core.util.Context)
  id: createWithResponse(com.azure.resourcemanager.authorization.models.UserCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: createWithResponse(UserCreateParameters parameters, Context context)
  nameWithType: UsersClient.createWithResponse(UserCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponse(UserCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Create a new user.
  syntax:
    content: public abstract Response<UserInner> createWithResponse(UserCreateParameters parameters, Context context)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.UserCreateParameters
      description: Request parameters for creating a new work or school account user.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.UserInner>
      description: active Directory user information.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponseAsync(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  id: createWithResponseAsync(com.azure.resourcemanager.authorization.models.UserCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: createWithResponseAsync(UserCreateParameters parameters)
  nameWithType: UsersClient.createWithResponseAsync(UserCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponseAsync(UserCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Create a new user.
  syntax:
    content: public abstract Mono<Response<UserInner>> createWithResponseAsync(UserCreateParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.UserCreateParameters
      description: Request parameters for creating a new work or school account user.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.UserInner>>
      description: active Directory user information.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.delete(java.lang.String)
  id: delete(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: delete(String upnOrObjectId)
  nameWithType: UsersClient.delete(String upnOrObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.delete(String upnOrObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.delete*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Delete a user.
  syntax:
    content: public abstract void delete(String upnOrObjectId)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user to delete.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteAsync(java.lang.String)
  id: deleteAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: deleteAsync(String upnOrObjectId)
  nameWithType: UsersClient.deleteAsync(String upnOrObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteAsync(String upnOrObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Delete a user.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String upnOrObjectId)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user to delete.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: deleteWithResponse(String upnOrObjectId, Context context)
  nameWithType: UsersClient.deleteWithResponse(String upnOrObjectId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponse(String upnOrObjectId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Delete a user.
  syntax:
    content: public abstract Response<Void> deleteWithResponse(String upnOrObjectId, Context context)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponseAsync(java.lang.String)
  id: deleteWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: deleteWithResponseAsync(String upnOrObjectId)
  nameWithType: UsersClient.deleteWithResponseAsync(String upnOrObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponseAsync(String upnOrObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Delete a user.
  syntax:
    content: public abstract Mono<Response<Void>> deleteWithResponseAsync(String upnOrObjectId)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: get(String upnOrObjectId)
  nameWithType: UsersClient.get(String upnOrObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.get(String upnOrObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.get*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets user information from the directory.
  syntax:
    content: public abstract UserInner get(String upnOrObjectId)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user for which to get information.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.UserInner
      description: user information from the directory.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getAsync(java.lang.String)
  id: getAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: getAsync(String upnOrObjectId)
  nameWithType: UsersClient.getAsync(String upnOrObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getAsync(String upnOrObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets user information from the directory.
  syntax:
    content: public abstract Mono<UserInner> getAsync(String upnOrObjectId)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user for which to get information.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.UserInner>
      description: user information from the directory.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups(java.lang.String,boolean)
  id: getMemberGroups(java.lang.String,boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: getMemberGroups(String objectId, boolean securityEnabledOnly)
  nameWithType: UsersClient.getMemberGroups(String objectId, boolean securityEnabledOnly)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups(String objectId, boolean securityEnabledOnly)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a collection that contains the object IDs of the groups of which the user is a member.
  syntax:
    content: public abstract PagedIterable<String> getMemberGroups(String objectId, boolean securityEnabledOnly)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the user for which to get group membership.
    - id: securityEnabledOnly
      type: boolean
      description: >-
        If true, only membership in security-enabled groups should be checked. Otherwise,
             membership in all groups should be checked.
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: a collection that contains the object IDs of the groups of which the user is a member.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups(java.lang.String,boolean,com.azure.core.util.Context)
  id: getMemberGroups(java.lang.String,boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: getMemberGroups(String objectId, boolean securityEnabledOnly, Context context)
  nameWithType: UsersClient.getMemberGroups(String objectId, boolean securityEnabledOnly, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups(String objectId, boolean securityEnabledOnly, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a collection that contains the object IDs of the groups of which the user is a member.
  syntax:
    content: public abstract PagedIterable<String> getMemberGroups(String objectId, boolean securityEnabledOnly, Context context)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the user for which to get group membership.
    - id: securityEnabledOnly
      type: boolean
      description: >-
        If true, only membership in security-enabled groups should be checked. Otherwise,
             membership in all groups should be checked.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: a collection that contains the object IDs of the groups of which the user is a member.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroupsAsync(java.lang.String,boolean)
  id: getMemberGroupsAsync(java.lang.String,boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: getMemberGroupsAsync(String objectId, boolean securityEnabledOnly)
  nameWithType: UsersClient.getMemberGroupsAsync(String objectId, boolean securityEnabledOnly)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroupsAsync(String objectId, boolean securityEnabledOnly)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroupsAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a collection that contains the object IDs of the groups of which the user is a member.
  syntax:
    content: public abstract PagedFlux<String> getMemberGroupsAsync(String objectId, boolean securityEnabledOnly)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the user for which to get group membership.
    - id: securityEnabledOnly
      type: boolean
      description: >-
        If true, only membership in security-enabled groups should be checked. Otherwise,
             membership in all groups should be checked.
    return:
      type: com.azure.core.http.rest.PagedFlux<java.lang.String>
      description: a collection that contains the object IDs of the groups of which the user is a member.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: getWithResponse(String upnOrObjectId, Context context)
  nameWithType: UsersClient.getWithResponse(String upnOrObjectId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponse(String upnOrObjectId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets user information from the directory.
  syntax:
    content: public abstract Response<UserInner> getWithResponse(String upnOrObjectId, Context context)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user for which to get information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.UserInner>
      description: user information from the directory.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponseAsync(java.lang.String)
  id: getWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: getWithResponseAsync(String upnOrObjectId)
  nameWithType: UsersClient.getWithResponseAsync(String upnOrObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponseAsync(String upnOrObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets user information from the directory.
  syntax:
    content: public abstract Mono<Response<UserInner>> getWithResponseAsync(String upnOrObjectId)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user for which to get information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.UserInner>>
      description: user information from the directory.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: list()
  nameWithType: UsersClient.list()
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.list()
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.list*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets list of users for the current tenant.
  syntax:
    content: public abstract PagedIterable<UserInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.UserInner>
      description: list of users for the current tenant.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: list(String filter, String expand, Context context)
  nameWithType: UsersClient.list(String filter, String expand, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.list(String filter, String expand, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.list*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets list of users for the current tenant.
  syntax:
    content: public abstract PagedIterable<UserInner> list(String filter, String expand, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: The filter to apply to the operation.
    - id: expand
      type: java.lang.String
      description: The expand value for the operation result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.UserInner>
      description: list of users for the current tenant.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: listAsync()
  nameWithType: UsersClient.listAsync()
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync()
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets list of users for the current tenant.
  syntax:
    content: public abstract PagedFlux<UserInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.UserInner>
      description: list of users for the current tenant.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: listAsync(String filter, String expand)
  nameWithType: UsersClient.listAsync(String filter, String expand)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync(String filter, String expand)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets list of users for the current tenant.
  syntax:
    content: public abstract PagedFlux<UserInner> listAsync(String filter, String expand)
    parameters:
    - id: filter
      type: java.lang.String
      description: The filter to apply to the operation.
    - id: expand
      type: java.lang.String
      description: The expand value for the operation result.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.UserInner>
      description: list of users for the current tenant.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.update(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  id: update(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: update(String upnOrObjectId, UserUpdateParameters parameters)
  nameWithType: UsersClient.update(String upnOrObjectId, UserUpdateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.update(String upnOrObjectId, UserUpdateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.update*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Updates a user.
  syntax:
    content: public abstract void update(String upnOrObjectId, UserUpdateParameters parameters)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user to update.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.UserUpdateParameters
      description: Request parameters for updating an existing work or school account user.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.updateAsync(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  id: updateAsync(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: updateAsync(String upnOrObjectId, UserUpdateParameters parameters)
  nameWithType: UsersClient.updateAsync(String upnOrObjectId, UserUpdateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.updateAsync(String upnOrObjectId, UserUpdateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Updates a user.
  syntax:
    content: public abstract Mono<Void> updateAsync(String upnOrObjectId, UserUpdateParameters parameters)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user to update.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.UserUpdateParameters
      description: Request parameters for updating an existing work or school account user.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponse(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters,com.azure.core.util.Context)
  id: updateWithResponse(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: updateWithResponse(String upnOrObjectId, UserUpdateParameters parameters, Context context)
  nameWithType: UsersClient.updateWithResponse(String upnOrObjectId, UserUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponse(String upnOrObjectId, UserUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Updates a user.
  syntax:
    content: public abstract Response<Void> updateWithResponse(String upnOrObjectId, UserUpdateParameters parameters, Context context)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user to update.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.UserUpdateParameters
      description: Request parameters for updating an existing work or school account user.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  id: updateWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.UserUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
  parent: com.azure.resourcemanager.authorization.fluent.UsersClient
  langs:
  - java
  name: updateWithResponseAsync(String upnOrObjectId, UserUpdateParameters parameters)
  nameWithType: UsersClient.updateWithResponseAsync(String upnOrObjectId, UserUpdateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponseAsync(String upnOrObjectId, UserUpdateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Updates a user.
  syntax:
    content: public abstract Mono<Response<Void>> updateWithResponseAsync(String upnOrObjectId, UserUpdateParameters parameters)
    parameters:
    - id: upnOrObjectId
      type: java.lang.String
      description: The object ID or principal name of the user to update.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.UserUpdateParameters
      description: Request parameters for updating an existing work or school account user.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
references:
- uid: com.azure.resourcemanager.authorization.models.UserCreateParameters
  name: UserCreateParameters
  nameWithType: UserCreateParameters
  fullName: com.azure.resourcemanager.authorization.models.UserCreateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.UserInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.UserInner
    name: UserInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.UserInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: UsersClient.createWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.UserInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.UserInner
    name: UserInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.UserInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.createAsync*
  name: createAsync
  nameWithType: UsersClient.createAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.createAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.models.UserInner
  name: UserInner
  nameWithType: UserInner
  fullName: com.azure.resourcemanager.authorization.fluent.models.UserInner
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.create*
  name: create
  nameWithType: UsersClient.create
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.create
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.UserInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.UserInner
    name: UserInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.UserInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponse*
  name: createWithResponse
  nameWithType: UsersClient.createWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.createWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.UserInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.UserInner
    name: UserInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.UserInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync*
  name: listAsync
  nameWithType: UsersClient.listAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.listAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.UserInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.UserInner
    name: UserInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.UserInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.list*
  name: list
  nameWithType: UsersClient.list
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.list
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: UsersClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getAsync*
  name: getAsync
  nameWithType: UsersClient.getAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.get*
  name: get
  nameWithType: UsersClient.get
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.get
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponse*
  name: getWithResponse
  nameWithType: UsersClient.getWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.models.UserUpdateParameters
  name: UserUpdateParameters
  nameWithType: UserUpdateParameters
  fullName: com.azure.resourcemanager.authorization.models.UserUpdateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: UsersClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.updateAsync*
  name: updateAsync
  nameWithType: UsersClient.updateAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.updateAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.update*
  name: update
  nameWithType: UsersClient.update
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.update
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponse*
  name: updateWithResponse
  nameWithType: UsersClient.updateWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.updateWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: UsersClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteAsync*
  name: deleteAsync
  nameWithType: UsersClient.deleteAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.delete*
  name: delete
  nameWithType: UsersClient.delete
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.delete
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: UsersClient.deleteWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.deleteWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.http.rest.PagedFlux<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroupsAsync*
  name: getMemberGroupsAsync
  nameWithType: UsersClient.getMemberGroupsAsync
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroupsAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.PagedIterable<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups*
  name: getMemberGroups
  nameWithType: UsersClient.getMemberGroups
  fullName: com.azure.resourcemanager.authorization.fluent.UsersClient.getMemberGroups
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
