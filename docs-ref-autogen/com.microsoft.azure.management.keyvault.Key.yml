### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.keyvault.Key
  id: Key
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault
  children:
  - com.microsoft.azure.management.keyvault.Key.Definition
  - com.microsoft.azure.management.keyvault.Key.DefinitionStages
  - com.microsoft.azure.management.keyvault.Key.Update
  - com.microsoft.azure.management.keyvault.Key.UpdateStages
  - com.microsoft.azure.management.keyvault.Key.UpdateWithCreate
  - com.microsoft.azure.management.keyvault.Key.UpdateWithImport
  - com.microsoft.azure.management.keyvault.Key.attributes()
  - com.microsoft.azure.management.keyvault.Key.backup()
  - com.microsoft.azure.management.keyvault.Key.backupAsync()
  - com.microsoft.azure.management.keyvault.Key.decrypt(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.decryptAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.encrypt(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.encryptAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.jsonWebKey()
  - com.microsoft.azure.management.keyvault.Key.listVersions()
  - com.microsoft.azure.management.keyvault.Key.listVersionsAsync()
  - com.microsoft.azure.management.keyvault.Key.managed()
  - com.microsoft.azure.management.keyvault.Key.sign(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.signAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.tags()
  - com.microsoft.azure.management.keyvault.Key.unwrapKey(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.unwrapKeyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.verify(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[],byte[])
  - com.microsoft.azure.management.keyvault.Key.verifyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[],byte[])
  - com.microsoft.azure.management.keyvault.Key.wrapKey(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  - com.microsoft.azure.management.keyvault.Key.wrapKeyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  langs:
  - java
  name: Key
  nameWithType: Key
  fullName: com.microsoft.azure.management.keyvault.Key
  type: Interface
  package: com.microsoft.azure.management.keyvault
  summary: An immutable client-side representation of an Azure Key Vault key.
  syntax:
    content: public interface Key extends Indexable, HasInner<KeyBundle>, HasId, HasName, Updatable<Key.Update>
  implements:
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable
  - com.microsoft.azure.management.resources.fluentcore.model.HasInner<com.microsoft.azure.keyvault.models.KeyBundle>
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasId
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  - com.microsoft.azure.management.resources.fluentcore.model.Updatable<com.microsoft.azure.management.keyvault.Key.Update>
- uid: com.microsoft.azure.management.keyvault.Key.attributes()
  id: attributes()
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: attributes()
  nameWithType: Key.attributes()
  fullName: com.microsoft.azure.management.keyvault.Key.attributes()
  overload: com.microsoft.azure.management.keyvault.Key.attributes*
  type: Method
  package: com.microsoft.azure.management.keyvault
  syntax:
    content: public abstract KeyAttributes attributes()
    return:
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: the key management attributes.
- uid: com.microsoft.azure.management.keyvault.Key.backup()
  id: backup()
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: backup()
  nameWithType: Key.backup()
  fullName: com.microsoft.azure.management.keyvault.Key.backup()
  overload: com.microsoft.azure.management.keyvault.Key.backup*
  type: Method
  package: com.microsoft.azure.management.keyvault
  syntax:
    content: public abstract byte[] backup()
    return:
      type: byte[]
      description: a backup of the specified key be downloaded to the client
- uid: com.microsoft.azure.management.keyvault.Key.backupAsync()
  id: backupAsync()
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: backupAsync()
  nameWithType: Key.backupAsync()
  fullName: com.microsoft.azure.management.keyvault.Key.backupAsync()
  overload: com.microsoft.azure.management.keyvault.Key.backupAsync*
  type: Method
  package: com.microsoft.azure.management.keyvault
  syntax:
    content: public abstract Observable<byte[]> backupAsync()
    return:
      type: rx.Observable<byte[]>
      description: a backup of the specified key be downloaded to the client
- uid: com.microsoft.azure.management.keyvault.Key.decrypt(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  id: decrypt(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: decrypt(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  nameWithType: Key.decrypt(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  fullName: com.microsoft.azure.management.keyvault.Key.decrypt(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  overload: com.microsoft.azure.management.keyvault.Key.decrypt*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Decrypts a single block of encrypted data.
  syntax:
    content: public abstract byte[] decrypt(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: the JWK encryption algorithm
    - id: content
      type: byte[]
      description: the content to be decrypted
    return:
      type: byte[]
      description: the decrypted value
- uid: com.microsoft.azure.management.keyvault.Key.decryptAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  id: decryptAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: decryptAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  nameWithType: Key.decryptAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  fullName: com.microsoft.azure.management.keyvault.Key.decryptAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  overload: com.microsoft.azure.management.keyvault.Key.decryptAsync*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Decrypts a single block of encrypted data.
  syntax:
    content: public abstract Observable<byte[]> decryptAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: the JWK encryption algorithm
    - id: content
      type: byte[]
      description: the content to be decrypted
    return:
      type: rx.Observable<byte[]>
      description: the decrypted value
- uid: com.microsoft.azure.management.keyvault.Key.encrypt(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  id: encrypt(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: encrypt(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  nameWithType: Key.encrypt(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  fullName: com.microsoft.azure.management.keyvault.Key.encrypt(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  overload: com.microsoft.azure.management.keyvault.Key.encrypt*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault.
  syntax:
    content: public abstract byte[] encrypt(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: the JWK encryption algorithm
    - id: content
      type: byte[]
      description: the content to be encrypted
    return:
      type: byte[]
      description: the encrypted value
- uid: com.microsoft.azure.management.keyvault.Key.encryptAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  id: encryptAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: encryptAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  nameWithType: Key.encryptAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  fullName: com.microsoft.azure.management.keyvault.Key.encryptAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
  overload: com.microsoft.azure.management.keyvault.Key.encryptAsync*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault.
  syntax:
    content: public abstract Observable<byte[]> encryptAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] content)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: the JWK encryption algorithm
    - id: content
      type: byte[]
      description: the content to be encrypted
    return:
      type: rx.Observable<byte[]>
      description: the encrypted value
- uid: com.microsoft.azure.management.keyvault.Key.jsonWebKey()
  id: jsonWebKey()
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: jsonWebKey()
  nameWithType: Key.jsonWebKey()
  fullName: com.microsoft.azure.management.keyvault.Key.jsonWebKey()
  overload: com.microsoft.azure.management.keyvault.Key.jsonWebKey*
  type: Method
  package: com.microsoft.azure.management.keyvault
  syntax:
    content: public abstract JsonWebKey jsonWebKey()
    return:
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: the Json web key.
- uid: com.microsoft.azure.management.keyvault.Key.listVersions()
  id: listVersions()
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: listVersions()
  nameWithType: Key.listVersions()
  fullName: com.microsoft.azure.management.keyvault.Key.listVersions()
  overload: com.microsoft.azure.management.keyvault.Key.listVersions*
  type: Method
  package: com.microsoft.azure.management.keyvault
  syntax:
    content: public abstract PagedList<Key> listVersions()
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.management.keyvault.Key>
      description: a list of individual key versions with the same key name
- uid: com.microsoft.azure.management.keyvault.Key.listVersionsAsync()
  id: listVersionsAsync()
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: listVersionsAsync()
  nameWithType: Key.listVersionsAsync()
  fullName: com.microsoft.azure.management.keyvault.Key.listVersionsAsync()
  overload: com.microsoft.azure.management.keyvault.Key.listVersionsAsync*
  type: Method
  package: com.microsoft.azure.management.keyvault
  syntax:
    content: public abstract Observable<Key> listVersionsAsync()
    return:
      type: rx.Observable<com.microsoft.azure.management.keyvault.Key>
      description: a list of individual key versions with the same key name
- uid: com.microsoft.azure.management.keyvault.Key.managed()
  id: managed()
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: managed()
  nameWithType: Key.managed()
  fullName: com.microsoft.azure.management.keyvault.Key.managed()
  overload: com.microsoft.azure.management.keyvault.Key.managed*
  type: Method
  package: com.microsoft.azure.management.keyvault
  syntax:
    content: public abstract boolean managed()
    return:
      type: boolean
      description: >-
        true if the key's lifetime is managed by key vault. If this is a key
         backing a certificate, then managed will be true.
- uid: com.microsoft.azure.management.keyvault.Key.sign(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[])
  id: sign(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: sign(JsonWebKeySignatureAlgorithm algorithm, byte[] digest)
  nameWithType: Key.sign(JsonWebKeySignatureAlgorithm algorithm, byte[] digest)
  fullName: com.microsoft.azure.management.keyvault.Key.sign(JsonWebKeySignatureAlgorithm algorithm, byte[] digest)
  overload: com.microsoft.azure.management.keyvault.Key.sign*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Creates a signature from a digest.
  syntax:
    content: public abstract byte[] sign(JsonWebKeySignatureAlgorithm algorithm, byte[] digest)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: the JWK signing algorithm
    - id: digest
      type: byte[]
      description: the content to be signed
    return:
      type: byte[]
      description: the signature in a byte array
- uid: com.microsoft.azure.management.keyvault.Key.signAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[])
  id: signAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: signAsync(JsonWebKeySignatureAlgorithm algorithm, byte[] digest)
  nameWithType: Key.signAsync(JsonWebKeySignatureAlgorithm algorithm, byte[] digest)
  fullName: com.microsoft.azure.management.keyvault.Key.signAsync(JsonWebKeySignatureAlgorithm algorithm, byte[] digest)
  overload: com.microsoft.azure.management.keyvault.Key.signAsync*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Creates a signature from a digest.
  syntax:
    content: public abstract Observable<byte[]> signAsync(JsonWebKeySignatureAlgorithm algorithm, byte[] digest)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: the JWK signing algorithm
    - id: digest
      type: byte[]
      description: the content to be signed
    return:
      type: rx.Observable<byte[]>
      description: the signature in a byte array
- uid: com.microsoft.azure.management.keyvault.Key.tags()
  id: tags()
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: tags()
  nameWithType: Key.tags()
  fullName: com.microsoft.azure.management.keyvault.Key.tags()
  overload: com.microsoft.azure.management.keyvault.Key.tags*
  type: Method
  package: com.microsoft.azure.management.keyvault
  syntax:
    content: public abstract Map<String,String> tags()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: application specific metadata in the form of key-value pairs.
- uid: com.microsoft.azure.management.keyvault.Key.unwrapKey(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  id: unwrapKey(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: unwrapKey(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  nameWithType: Key.unwrapKey(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  fullName: com.microsoft.azure.management.keyvault.Key.unwrapKey(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  overload: com.microsoft.azure.management.keyvault.Key.unwrapKey*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Unwraps a symmetric key wrapped originally by this Key Vault key.
  syntax:
    content: public abstract byte[] unwrapKey(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: the JWK encryption algorithm
    - id: key
      type: byte[]
      description: the key to unwrap
    return:
      type: byte[]
      description: the unwrapped symmetric key
- uid: com.microsoft.azure.management.keyvault.Key.unwrapKeyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  id: unwrapKeyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: unwrapKeyAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  nameWithType: Key.unwrapKeyAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  fullName: com.microsoft.azure.management.keyvault.Key.unwrapKeyAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  overload: com.microsoft.azure.management.keyvault.Key.unwrapKeyAsync*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Unwraps a symmetric key wrapped originally by this Key Vault key.
  syntax:
    content: public abstract Observable<byte[]> unwrapKeyAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: the JWK encryption algorithm
    - id: key
      type: byte[]
      description: the key to unwrap
    return:
      type: rx.Observable<byte[]>
      description: the unwrapped symmetric key
- uid: com.microsoft.azure.management.keyvault.Key.verify(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[],byte[])
  id: verify(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[],byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: verify(JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: Key.verify(JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: com.microsoft.azure.management.keyvault.Key.verify(JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  overload: com.microsoft.azure.management.keyvault.Key.verify*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Verifies a signature from a digest.
  syntax:
    content: public abstract boolean verify(JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: the JWK signing algorithm
    - id: digest
      type: byte[]
      description: the content to be signed
    - id: signature
      type: byte[]
      description: the signature to verify
    return:
      type: boolean
      description: true if the signature is valid
- uid: com.microsoft.azure.management.keyvault.Key.verifyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[],byte[])
  id: verifyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm,byte[],byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: verifyAsync(JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: Key.verifyAsync(JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: com.microsoft.azure.management.keyvault.Key.verifyAsync(JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  overload: com.microsoft.azure.management.keyvault.Key.verifyAsync*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Verifies a signature from a digest.
  syntax:
    content: public abstract Observable<Boolean> verifyAsync(JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: the JWK signing algorithm
    - id: digest
      type: byte[]
      description: the content to be signed
    - id: signature
      type: byte[]
      description: the signature to verify
    return:
      type: rx.Observable<java.lang.Boolean>
      description: true if the signature is valid
- uid: com.microsoft.azure.management.keyvault.Key.wrapKey(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  id: wrapKey(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: wrapKey(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  nameWithType: Key.wrapKey(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  fullName: com.microsoft.azure.management.keyvault.Key.wrapKey(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  overload: com.microsoft.azure.management.keyvault.Key.wrapKey*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Wraps a symmetric key using the specified algorithm.
  syntax:
    content: public abstract byte[] wrapKey(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: the JWK encryption algorithm
    - id: key
      type: byte[]
      description: the symmetric key to wrap
    return:
      type: byte[]
      description: the wrapped key
- uid: com.microsoft.azure.management.keyvault.Key.wrapKeyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  id: wrapKeyAsync(com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm,byte[])
  artifact: com.microsoft.azure:azure-mgmt-keyvault:1.34.0
  parent: com.microsoft.azure.management.keyvault.Key
  langs:
  - java
  name: wrapKeyAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  nameWithType: Key.wrapKeyAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  fullName: com.microsoft.azure.management.keyvault.Key.wrapKeyAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
  overload: com.microsoft.azure.management.keyvault.Key.wrapKeyAsync*
  type: Method
  package: com.microsoft.azure.management.keyvault
  summary: Wraps a symmetric key using the specified algorithm.
  syntax:
    content: public abstract Observable<byte[]> wrapKeyAsync(JsonWebKeyEncryptionAlgorithm algorithm, byte[] key)
    parameters:
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: the JWK encryption algorithm
    - id: key
      type: byte[]
      description: the symmetric key to wrap
    return:
      type: rx.Observable<byte[]>
      description: the wrapped key
references:
- uid: com.microsoft.azure.keyvault.webkey.JsonWebKey
  spec.java:
  - uid: com.microsoft.azure.keyvault.webkey.JsonWebKey
    name: JsonWebKey
    fullName: com.microsoft.azure.keyvault.webkey.JsonWebKey
- uid: com.microsoft.azure.management.keyvault.Key.jsonWebKey*
  name: jsonWebKey
  nameWithType: Key.jsonWebKey
  fullName: com.microsoft.azure.management.keyvault.Key.jsonWebKey
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.keyvault.models.KeyAttributes
  spec.java:
  - uid: com.microsoft.azure.keyvault.models.KeyAttributes
    name: KeyAttributes
    fullName: com.microsoft.azure.keyvault.models.KeyAttributes
- uid: com.microsoft.azure.management.keyvault.Key.attributes*
  name: attributes
  nameWithType: Key.attributes
  fullName: com.microsoft.azure.management.keyvault.Key.attributes
  package: com.microsoft.azure.management.keyvault
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.keyvault.Key.tags*
  name: tags
  nameWithType: Key.tags
  fullName: com.microsoft.azure.management.keyvault.Key.tags
  package: com.microsoft.azure.management.keyvault
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.management.keyvault.Key.managed*
  name: managed
  nameWithType: Key.managed
  fullName: com.microsoft.azure.management.keyvault.Key.managed
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.management.keyvault.Key>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.keyvault.Key
    name: Key
    fullName: com.microsoft.azure.management.keyvault.Key
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.keyvault.Key.listVersions*
  name: listVersions
  nameWithType: Key.listVersions
  fullName: com.microsoft.azure.management.keyvault.Key.listVersions
  package: com.microsoft.azure.management.keyvault
- uid: rx.Observable<com.microsoft.azure.management.keyvault.Key>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.keyvault.Key
    name: Key
    fullName: com.microsoft.azure.management.keyvault.Key
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.keyvault.Key.listVersionsAsync*
  name: listVersionsAsync
  nameWithType: Key.listVersionsAsync
  fullName: com.microsoft.azure.management.keyvault.Key.listVersionsAsync
  package: com.microsoft.azure.management.keyvault
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.management.keyvault.Key.backup*
  name: backup
  nameWithType: Key.backup
  fullName: com.microsoft.azure.management.keyvault.Key.backup
  package: com.microsoft.azure.management.keyvault
- uid: rx.Observable<byte[]>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.keyvault.Key.backupAsync*
  name: backupAsync
  nameWithType: Key.backupAsync
  fullName: com.microsoft.azure.management.keyvault.Key.backupAsync
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
  spec.java:
  - uid: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
    name: JsonWebKeyEncryptionAlgorithm
    fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
- uid: com.microsoft.azure.management.keyvault.Key.encrypt*
  name: encrypt
  nameWithType: Key.encrypt
  fullName: com.microsoft.azure.management.keyvault.Key.encrypt
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.encryptAsync*
  name: encryptAsync
  nameWithType: Key.encryptAsync
  fullName: com.microsoft.azure.management.keyvault.Key.encryptAsync
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.decrypt*
  name: decrypt
  nameWithType: Key.decrypt
  fullName: com.microsoft.azure.management.keyvault.Key.decrypt
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.decryptAsync*
  name: decryptAsync
  nameWithType: Key.decryptAsync
  fullName: com.microsoft.azure.management.keyvault.Key.decryptAsync
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
  spec.java:
  - uid: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
    name: JsonWebKeySignatureAlgorithm
    fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
- uid: com.microsoft.azure.management.keyvault.Key.sign*
  name: sign
  nameWithType: Key.sign
  fullName: com.microsoft.azure.management.keyvault.Key.sign
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.signAsync*
  name: signAsync
  nameWithType: Key.signAsync
  fullName: com.microsoft.azure.management.keyvault.Key.signAsync
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.verify*
  name: verify
  nameWithType: Key.verify
  fullName: com.microsoft.azure.management.keyvault.Key.verify
  package: com.microsoft.azure.management.keyvault
- uid: rx.Observable<java.lang.Boolean>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.keyvault.Key.verifyAsync*
  name: verifyAsync
  nameWithType: Key.verifyAsync
  fullName: com.microsoft.azure.management.keyvault.Key.verifyAsync
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.wrapKey*
  name: wrapKey
  nameWithType: Key.wrapKey
  fullName: com.microsoft.azure.management.keyvault.Key.wrapKey
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.wrapKeyAsync*
  name: wrapKeyAsync
  nameWithType: Key.wrapKeyAsync
  fullName: com.microsoft.azure.management.keyvault.Key.wrapKeyAsync
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.unwrapKey*
  name: unwrapKey
  nameWithType: Key.unwrapKey
  fullName: com.microsoft.azure.management.keyvault.Key.unwrapKey
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.keyvault.Key.unwrapKeyAsync*
  name: unwrapKeyAsync
  nameWithType: Key.unwrapKeyAsync
  fullName: com.microsoft.azure.management.keyvault.Key.unwrapKeyAsync
  package: com.microsoft.azure.management.keyvault
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId
  name: HasId
  nameWithType: HasId
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  name: Indexable
  nameWithType: Indexable
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  name: HasName
  nameWithType: HasName
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
- uid: com.microsoft.azure.management.resources.fluentcore.model.Updatable<com.microsoft.azure.management.keyvault.Key.Update>
  name: Updatable<Key.Update>
  nameWithType: Updatable<Key.Update>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Updatable<com.microsoft.azure.management.keyvault.Key.Update>
- uid: com.microsoft.azure.management.resources.fluentcore.model.HasInner<com.microsoft.azure.keyvault.models.KeyBundle>
  name: HasInner<KeyBundle>
  nameWithType: HasInner<KeyBundle>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.HasInner<com.microsoft.azure.keyvault.models.KeyBundle>
- uid: com.microsoft.azure.management.keyvault.Key.Definition
  name: Key.Definition
  nameWithType: Key.Definition
  fullName: com.microsoft.azure.management.keyvault.Key.Definition
- uid: com.microsoft.azure.management.keyvault.Key.DefinitionStages
  name: Key.DefinitionStages
  nameWithType: Key.DefinitionStages
  fullName: com.microsoft.azure.management.keyvault.Key.DefinitionStages
- uid: com.microsoft.azure.management.keyvault.Key.Update
  name: Key.Update
  nameWithType: Key.Update
  fullName: com.microsoft.azure.management.keyvault.Key.Update
- uid: com.microsoft.azure.management.keyvault.Key.UpdateStages
  name: Key.UpdateStages
  nameWithType: Key.UpdateStages
  fullName: com.microsoft.azure.management.keyvault.Key.UpdateStages
- uid: com.microsoft.azure.management.keyvault.Key.UpdateWithCreate
  name: Key.UpdateWithCreate
  nameWithType: Key.UpdateWithCreate
  fullName: com.microsoft.azure.management.keyvault.Key.UpdateWithCreate
- uid: com.microsoft.azure.management.keyvault.Key.UpdateWithImport
  name: Key.UpdateWithImport
  nameWithType: Key.UpdateWithImport
  fullName: com.microsoft.azure.management.keyvault.Key.UpdateWithImport
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: com.microsoft.azure.management.resources.fluentcore.model.Updatable
  name: Updatable
  nameWithType: Updatable
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Updatable
- uid: com.microsoft.azure.management.resources.fluentcore.model.HasInner
  name: HasInner
  nameWithType: HasInner
  fullName: com.microsoft.azure.management.resources.fluentcore.model.HasInner
- uid: com.microsoft.azure.keyvault.models.KeyBundle
  name: KeyBundle
  nameWithType: KeyBundle
  fullName: com.microsoft.azure.keyvault.models.KeyBundle
