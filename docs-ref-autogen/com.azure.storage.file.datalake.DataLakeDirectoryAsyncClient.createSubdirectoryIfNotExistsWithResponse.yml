### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.createSubdirectoryIfNotExistsWithResponse*"
fullName: "com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.createSubdirectoryIfNotExistsWithResponse"
name: "createSubdirectoryIfNotExistsWithResponse"
nameWithType: "DataLakeDirectoryAsyncClient.createSubdirectoryIfNotExistsWithResponse"
members:
- uid: "com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.createSubdirectoryIfNotExistsWithResponse(java.lang.String,com.azure.storage.file.datalake.options.DataLakePathCreateOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.createSubdirectoryIfNotExistsWithResponse(String subdirectoryName, DataLakePathCreateOptions options)"
  name: "createSubdirectoryIfNotExistsWithResponse(String subdirectoryName, DataLakePathCreateOptions options)"
  nameWithType: "DataLakeDirectoryAsyncClient.createSubdirectoryIfNotExistsWithResponse(String subdirectoryName, DataLakePathCreateOptions options)"
  summary: "Creates a new sub-directory within a directory if it does not exist."
  parameters:
  - description: "Name of the subdirectory to create."
    name: "subdirectoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.file.datalake.options.DataLakePathCreateOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakePathCreateOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.file.datalake.options.DataLakePathCreateOptions?alt=com.azure.storage.file.datalake.options.DataLakePathCreateOptions&text=DataLakePathCreateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<DataLakeDirectoryAsyncClient>> createSubdirectoryIfNotExistsWithResponse(String subdirectoryName, DataLakePathCreateOptions options)"
  desc: "Creates a new sub-directory within a directory if it does not exist. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nPathHttpHeaders headers = new PathHttpHeaders()\n     .setContentLanguage(\"en-US\")\n     .setContentType(\"binary\");\n String permissions = \"permissions\";\n String umask = \"umask\";\n DataLakePathCreateOptions options = new DataLakePathCreateOptions()\n     .setPermissions(permissions)\n     .setUmask(umask)\n     .setPathHttpHeaders(headers)\n     .setMetadata(Collections.singletonMap(\"metadata\", \"value\"));\n\n client.createSubdirectoryIfNotExistsWithResponse(directoryName, options).subscribe(response -> {\n     if (response.getStatusCode() == 409) {\n         System.out.println(\"Already exists.\");\n     } else {\n         System.out.println(\"successfully created.\");\n     }\n });\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/datalakestoragegen2/path/create"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains a\n <xref uid=\"com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeDirectoryAsyncClient\"></xref> used to interact with the subdirectory created. If <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>'s status\n code is 201, a new subdirectory was successfully created. If status code is 409, a subdirectory with the same\n name already existed at this location."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient?alt=com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient&text=DataLakeDirectoryAsyncClient\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.11.0
