### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  id: WithFrontend
  parent: com.microsoft.azure.management.network.model
  children:
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(PublicIPAddress)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(String)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(Network,String)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(String,String)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(Subnet)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend(String)
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  langs:
  - java
  name: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 161
  package: com.microsoft.azure.management.network.model
  summary: "<p>The stage of a definition allowing to specify a frontend from to associate. </p>"
  syntax:
    content: public interface WithFrontend<ReturnT>
    typeParameters:
    - id: ReturnT
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(PublicIPAddress)
  id: fromExistingPublicIPAddress(PublicIPAddress)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  overload: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 179
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing public IP address to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used. Else, an automatically named new public frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
    parameters:
    - id: publicIPAddress
      type: com.microsoft.azure.management.network.PublicIPAddress
      description: <p>an existing public IP address </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(String)
  id: fromExistingPublicIPAddress(String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingPublicIPAddress(String resourceId)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(String resourceId)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(String resourceId)
  overload: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 190
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing public IP address to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used. Else, an automatically named new public frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingPublicIPAddress(String resourceId)
    parameters:
    - id: resourceId
      type: "26831127"
      description: <p>the resource ID of an existing public IP address </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(Network,String)
  id: fromExistingSubnet(Network,String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingSubnet(Network network, String subnetName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)
  overload: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 202
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(Network network, String subnetName)
    parameters:
    - id: network
      type: com.microsoft.azure.management.network.Network
      description: <p>an existing network </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of an existing subnet within the specified network </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(String,String)
  id: fromExistingSubnet(String,String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingSubnet(String networkResourceId, String subnetName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)
  overload: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 213
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(String networkResourceId, String subnetName)
    parameters:
    - id: networkResourceId
      type: "26831127"
      description: <p>the resource ID of an existing network </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of an existing subnet within the specified network </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(Subnet)
  id: fromExistingSubnet(Subnet)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingSubnet(Subnet subnet)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)
  overload: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 224
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(Subnet subnet)
    parameters:
    - id: subnet
      type: com.microsoft.azure.management.network.Subnet
      description: <p>an existing subnet </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend(String)
  id: fromFrontend(String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromFrontend(String frontendName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  overload: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 168
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies the frontend to associate. </p>"
  syntax:
    content: public ReturnT fromFrontend(String frontendName)
    parameters:
    - id: frontendName
      type: "26831127"
      description: <p>an existing frontend name </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
references:
- uid: c1a5ebc4
  spec.java:
  - name: ReturnT
    fullName: ReturnT
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend*
  name: fromFrontend
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend
  package: com.microsoft.azure.management.network.model
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  name: fromExistingPublicIPAddress
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress
  package: com.microsoft.azure.management.network.model
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet*
  name: fromExistingSubnet
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet
  package: com.microsoft.azure.management.network.model
- uid: com.microsoft.azure.management.network.PublicIPAddress
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.PublicIPAddress.yml
  name: PublicIPAddress
  nameWithType: PublicIPAddress
  fullName: com.microsoft.azure.management.network.PublicIPAddress
  type: Interface
  summary: "<p>Public IP address. </p>"
  syntax:
    content: public interface PublicIPAddress extends GroupableResource<NetworkManager, PublicIPAddressInner>,Refreshable<PublicIPAddress>,Updatable<PublicIPAddress.Update>
- uid: com.microsoft.azure.management.network.Network
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.Network.yml
  name: Network
  nameWithType: Network
  fullName: com.microsoft.azure.management.network.Network
  type: Interface
  summary: "<p>Entry point for Virtual Network management API in Azure. </p>"
  syntax:
    content: public interface Network extends GroupableResource<NetworkManager, VirtualNetworkInner>,Refreshable<Network>,Updatable<Network.Update>
- uid: com.microsoft.azure.management.network.Subnet
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.Subnet.yml
  name: Subnet
  nameWithType: Subnet
  fullName: com.microsoft.azure.management.network.Subnet
  type: Interface
  summary: "<p>A client-side representation of a subnet of a virtual network. </p>"
  syntax:
    content: public interface Subnet extends HasInner<SubnetInner>,ChildResource<Network>
