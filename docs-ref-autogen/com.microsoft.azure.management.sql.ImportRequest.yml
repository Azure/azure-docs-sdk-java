### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.ImportRequest
  id: ImportRequest
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql
  children:
  - com.microsoft.azure.management.sql.ImportRequest.ImportRequest()
  - com.microsoft.azure.management.sql.ImportRequest.databaseName()
  - com.microsoft.azure.management.sql.ImportRequest.edition()
  - com.microsoft.azure.management.sql.ImportRequest.maxSizeBytes()
  - com.microsoft.azure.management.sql.ImportRequest.serviceObjectiveName()
  - com.microsoft.azure.management.sql.ImportRequest.withDatabaseName(java.lang.String)
  - com.microsoft.azure.management.sql.ImportRequest.withEdition(com.microsoft.azure.management.sql.DatabaseEdition)
  - com.microsoft.azure.management.sql.ImportRequest.withMaxSizeBytes(java.lang.String)
  - com.microsoft.azure.management.sql.ImportRequest.withServiceObjectiveName(com.microsoft.azure.management.sql.ServiceObjectiveName)
  langs:
  - java
  name: ImportRequest
  nameWithType: ImportRequest
  fullName: com.microsoft.azure.management.sql.ImportRequest
  type: Class
  package: com.microsoft.azure.management.sql
  summary: Import database parameters.
  syntax:
    content: public class ImportRequest extends ExportRequest
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.management.sql.ExportRequest
  inheritedMembers:
  - com.microsoft.azure.management.sql.ExportRequest.administratorLogin()
  - com.microsoft.azure.management.sql.ExportRequest.administratorLoginPassword()
  - com.microsoft.azure.management.sql.ExportRequest.authenticationType()
  - com.microsoft.azure.management.sql.ExportRequest.storageKey()
  - com.microsoft.azure.management.sql.ExportRequest.storageKeyType()
  - com.microsoft.azure.management.sql.ExportRequest.storageUri()
  - com.microsoft.azure.management.sql.ExportRequest.withAdministratorLogin(java.lang.String)
  - com.microsoft.azure.management.sql.ExportRequest.withAdministratorLoginPassword(java.lang.String)
  - com.microsoft.azure.management.sql.ExportRequest.withAuthenticationType(com.microsoft.azure.management.sql.AuthenticationType)
  - com.microsoft.azure.management.sql.ExportRequest.withStorageKey(java.lang.String)
  - com.microsoft.azure.management.sql.ExportRequest.withStorageKeyType(com.microsoft.azure.management.sql.StorageKeyType)
  - com.microsoft.azure.management.sql.ExportRequest.withStorageUri(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.sql.ImportRequest.ImportRequest()
  id: ImportRequest()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: ImportRequest()
  nameWithType: ImportRequest.ImportRequest()
  fullName: com.microsoft.azure.management.sql.ImportRequest.ImportRequest()
  overload: com.microsoft.azure.management.sql.ImportRequest.ImportRequest*
  type: Constructor
  package: com.microsoft.azure.management.sql
  syntax:
    content: public ImportRequest()
- uid: com.microsoft.azure.management.sql.ImportRequest.databaseName()
  id: databaseName()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: databaseName()
  nameWithType: ImportRequest.databaseName()
  fullName: com.microsoft.azure.management.sql.ImportRequest.databaseName()
  overload: com.microsoft.azure.management.sql.ImportRequest.databaseName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the name of the database to import.
  syntax:
    content: public String databaseName()
    return:
      type: java.lang.String
      description: the databaseName value
- uid: com.microsoft.azure.management.sql.ImportRequest.edition()
  id: edition()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: edition()
  nameWithType: ImportRequest.edition()
  fullName: com.microsoft.azure.management.sql.ImportRequest.edition()
  overload: com.microsoft.azure.management.sql.ImportRequest.edition*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Get the edition for the database being created. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical', 'Hyperscale'."
  syntax:
    content: public DatabaseEdition edition()
    return:
      type: com.microsoft.azure.management.sql.DatabaseEdition
      description: the edition value
- uid: com.microsoft.azure.management.sql.ImportRequest.maxSizeBytes()
  id: maxSizeBytes()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: maxSizeBytes()
  nameWithType: ImportRequest.maxSizeBytes()
  fullName: com.microsoft.azure.management.sql.ImportRequest.maxSizeBytes()
  overload: com.microsoft.azure.management.sql.ImportRequest.maxSizeBytes*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the maximum size for the newly imported database.
  syntax:
    content: public String maxSizeBytes()
    return:
      type: java.lang.String
      description: the maxSizeBytes value
- uid: com.microsoft.azure.management.sql.ImportRequest.serviceObjectiveName()
  id: serviceObjectiveName()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: serviceObjectiveName()
  nameWithType: ImportRequest.serviceObjectiveName()
  fullName: com.microsoft.azure.management.sql.ImportRequest.serviceObjectiveName()
  overload: com.microsoft.azure.management.sql.ImportRequest.serviceObjectiveName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Get the name of the service objective to assign to the database. Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'."
  syntax:
    content: public ServiceObjectiveName serviceObjectiveName()
    return:
      type: com.microsoft.azure.management.sql.ServiceObjectiveName
      description: the serviceObjectiveName value
- uid: com.microsoft.azure.management.sql.ImportRequest.withDatabaseName(java.lang.String)
  id: withDatabaseName(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: withDatabaseName(String databaseName)
  nameWithType: ImportRequest.withDatabaseName(String databaseName)
  fullName: com.microsoft.azure.management.sql.ImportRequest.withDatabaseName(String databaseName)
  overload: com.microsoft.azure.management.sql.ImportRequest.withDatabaseName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set the name of the database to import.
  syntax:
    content: public ImportRequest withDatabaseName(String databaseName)
    parameters:
    - id: databaseName
      type: java.lang.String
      description: the databaseName value to set
    return:
      type: com.microsoft.azure.management.sql.ImportRequest
      description: the ImportRequest object itself.
- uid: com.microsoft.azure.management.sql.ImportRequest.withEdition(com.microsoft.azure.management.sql.DatabaseEdition)
  id: withEdition(com.microsoft.azure.management.sql.DatabaseEdition)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: withEdition(DatabaseEdition edition)
  nameWithType: ImportRequest.withEdition(DatabaseEdition edition)
  fullName: com.microsoft.azure.management.sql.ImportRequest.withEdition(DatabaseEdition edition)
  overload: com.microsoft.azure.management.sql.ImportRequest.withEdition*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Set the edition for the database being created. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical', 'Hyperscale'."
  syntax:
    content: public ImportRequest withEdition(DatabaseEdition edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql.DatabaseEdition
      description: the edition value to set
    return:
      type: com.microsoft.azure.management.sql.ImportRequest
      description: the ImportRequest object itself.
- uid: com.microsoft.azure.management.sql.ImportRequest.withMaxSizeBytes(java.lang.String)
  id: withMaxSizeBytes(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: withMaxSizeBytes(String maxSizeBytes)
  nameWithType: ImportRequest.withMaxSizeBytes(String maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.ImportRequest.withMaxSizeBytes(String maxSizeBytes)
  overload: com.microsoft.azure.management.sql.ImportRequest.withMaxSizeBytes*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set the maximum size for the newly imported database.
  syntax:
    content: public ImportRequest withMaxSizeBytes(String maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: java.lang.String
      description: the maxSizeBytes value to set
    return:
      type: com.microsoft.azure.management.sql.ImportRequest
      description: the ImportRequest object itself.
- uid: com.microsoft.azure.management.sql.ImportRequest.withServiceObjectiveName(com.microsoft.azure.management.sql.ServiceObjectiveName)
  id: withServiceObjectiveName(com.microsoft.azure.management.sql.ServiceObjectiveName)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.ImportRequest
  langs:
  - java
  name: withServiceObjectiveName(ServiceObjectiveName serviceObjectiveName)
  nameWithType: ImportRequest.withServiceObjectiveName(ServiceObjectiveName serviceObjectiveName)
  fullName: com.microsoft.azure.management.sql.ImportRequest.withServiceObjectiveName(ServiceObjectiveName serviceObjectiveName)
  overload: com.microsoft.azure.management.sql.ImportRequest.withServiceObjectiveName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Set the name of the service objective to assign to the database. Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'."
  syntax:
    content: public ImportRequest withServiceObjectiveName(ServiceObjectiveName serviceObjectiveName)
    parameters:
    - id: serviceObjectiveName
      type: com.microsoft.azure.management.sql.ServiceObjectiveName
      description: the serviceObjectiveName value to set
    return:
      type: com.microsoft.azure.management.sql.ImportRequest
      description: the ImportRequest object itself.
references:
- uid: com.microsoft.azure.management.sql.ImportRequest.ImportRequest*
  name: ImportRequest
  nameWithType: ImportRequest.ImportRequest
  fullName: com.microsoft.azure.management.sql.ImportRequest.ImportRequest
  package: com.microsoft.azure.management.sql
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.sql.ImportRequest.databaseName*
  name: databaseName
  nameWithType: ImportRequest.databaseName
  fullName: com.microsoft.azure.management.sql.ImportRequest.databaseName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ImportRequest.withDatabaseName*
  name: withDatabaseName
  nameWithType: ImportRequest.withDatabaseName
  fullName: com.microsoft.azure.management.sql.ImportRequest.withDatabaseName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseEdition
  name: DatabaseEdition
  nameWithType: DatabaseEdition
  fullName: com.microsoft.azure.management.sql.DatabaseEdition
- uid: com.microsoft.azure.management.sql.ImportRequest.edition*
  name: edition
  nameWithType: ImportRequest.edition
  fullName: com.microsoft.azure.management.sql.ImportRequest.edition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ImportRequest.withEdition*
  name: withEdition
  nameWithType: ImportRequest.withEdition
  fullName: com.microsoft.azure.management.sql.ImportRequest.withEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ServiceObjectiveName
  name: ServiceObjectiveName
  nameWithType: ServiceObjectiveName
  fullName: com.microsoft.azure.management.sql.ServiceObjectiveName
- uid: com.microsoft.azure.management.sql.ImportRequest.serviceObjectiveName*
  name: serviceObjectiveName
  nameWithType: ImportRequest.serviceObjectiveName
  fullName: com.microsoft.azure.management.sql.ImportRequest.serviceObjectiveName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ImportRequest.withServiceObjectiveName*
  name: withServiceObjectiveName
  nameWithType: ImportRequest.withServiceObjectiveName
  fullName: com.microsoft.azure.management.sql.ImportRequest.withServiceObjectiveName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ImportRequest.maxSizeBytes*
  name: maxSizeBytes
  nameWithType: ImportRequest.maxSizeBytes
  fullName: com.microsoft.azure.management.sql.ImportRequest.maxSizeBytes
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ImportRequest.withMaxSizeBytes*
  name: withMaxSizeBytes
  nameWithType: ImportRequest.withMaxSizeBytes
  fullName: com.microsoft.azure.management.sql.ImportRequest.withMaxSizeBytes
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ExportRequest
  name: ExportRequest
  nameWithType: ExportRequest
  fullName: com.microsoft.azure.management.sql.ExportRequest
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.microsoft.azure.management.sql.ExportRequest.administratorLoginPassword()
  name: ExportRequest.administratorLoginPassword()
  nameWithType: ExportRequest.administratorLoginPassword()
  fullName: com.microsoft.azure.management.sql.ExportRequest.administratorLoginPassword()
- uid: com.microsoft.azure.management.sql.ExportRequest.administratorLogin()
  name: ExportRequest.administratorLogin()
  nameWithType: ExportRequest.administratorLogin()
  fullName: com.microsoft.azure.management.sql.ExportRequest.administratorLogin()
- uid: com.microsoft.azure.management.sql.ExportRequest.authenticationType()
  name: ExportRequest.authenticationType()
  nameWithType: ExportRequest.authenticationType()
  fullName: com.microsoft.azure.management.sql.ExportRequest.authenticationType()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.management.sql.ExportRequest.storageUri()
  name: ExportRequest.storageUri()
  nameWithType: ExportRequest.storageUri()
  fullName: com.microsoft.azure.management.sql.ExportRequest.storageUri()
- uid: com.microsoft.azure.management.sql.ExportRequest.withAuthenticationType(com.microsoft.azure.management.sql.AuthenticationType)
  name: ExportRequest.withAuthenticationType(AuthenticationType)
  nameWithType: ExportRequest.withAuthenticationType(AuthenticationType)
  fullName: com.microsoft.azure.management.sql.ExportRequest.withAuthenticationType(com.microsoft.azure.management.sql.AuthenticationType)
- uid: com.microsoft.azure.management.sql.ExportRequest.withStorageUri(java.lang.String)
  name: ExportRequest.withStorageUri(String)
  nameWithType: ExportRequest.withStorageUri(String)
  fullName: com.microsoft.azure.management.sql.ExportRequest.withStorageUri(java.lang.String)
- uid: com.microsoft.azure.management.sql.ExportRequest.storageKey()
  name: ExportRequest.storageKey()
  nameWithType: ExportRequest.storageKey()
  fullName: com.microsoft.azure.management.sql.ExportRequest.storageKey()
- uid: com.microsoft.azure.management.sql.ExportRequest.storageKeyType()
  name: ExportRequest.storageKeyType()
  nameWithType: ExportRequest.storageKeyType()
  fullName: com.microsoft.azure.management.sql.ExportRequest.storageKeyType()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.microsoft.azure.management.sql.ExportRequest.withAdministratorLogin(java.lang.String)
  name: ExportRequest.withAdministratorLogin(String)
  nameWithType: ExportRequest.withAdministratorLogin(String)
  fullName: com.microsoft.azure.management.sql.ExportRequest.withAdministratorLogin(java.lang.String)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.sql.ExportRequest.withStorageKeyType(com.microsoft.azure.management.sql.StorageKeyType)
  name: ExportRequest.withStorageKeyType(StorageKeyType)
  nameWithType: ExportRequest.withStorageKeyType(StorageKeyType)
  fullName: com.microsoft.azure.management.sql.ExportRequest.withStorageKeyType(com.microsoft.azure.management.sql.StorageKeyType)
- uid: com.microsoft.azure.management.sql.ExportRequest.withStorageKey(java.lang.String)
  name: ExportRequest.withStorageKey(String)
  nameWithType: ExportRequest.withStorageKey(String)
  fullName: com.microsoft.azure.management.sql.ExportRequest.withStorageKey(java.lang.String)
- uid: com.microsoft.azure.management.sql.ExportRequest.withAdministratorLoginPassword(java.lang.String)
  name: ExportRequest.withAdministratorLoginPassword(String)
  nameWithType: ExportRequest.withAdministratorLoginPassword(String)
  fullName: com.microsoft.azure.management.sql.ExportRequest.withAdministratorLoginPassword(java.lang.String)
