### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource"
fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource"
name: "CertificatePatchResource"
nameWithType: "CertificatePatchResource"
summary: "ARM resource for a certificate."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.appservice.models.ProxyOnlyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.kind()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.validate()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.withKind(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CertificatePatchResource extends ProxyOnlyResource"
constructors:
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.CertificatePatchResource()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.CertificatePatchResource()"
  name: "CertificatePatchResource()"
  nameWithType: "CertificatePatchResource.CertificatePatchResource()"
  syntax: "public CertificatePatchResource()"
methods:
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.canonicalName()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.canonicalName()"
  name: "canonicalName()"
  nameWithType: "CertificatePatchResource.canonicalName()"
  summary: "Get the canonicalName property: CNAME of the certificate to be issued via free certificate."
  syntax: "public String canonicalName()"
  returns:
    description: "the canonicalName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.cerBlob()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.cerBlob()"
  name: "cerBlob()"
  nameWithType: "CertificatePatchResource.cerBlob()"
  summary: "Get the cerBlob property: Raw bytes of .cer file."
  syntax: "public byte[] cerBlob()"
  returns:
    description: "the cerBlob value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.domainValidationMethod()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.domainValidationMethod()"
  name: "domainValidationMethod()"
  nameWithType: "CertificatePatchResource.domainValidationMethod()"
  summary: "Get the domainValidationMethod property: Method of domain validation for free cert."
  syntax: "public String domainValidationMethod()"
  returns:
    description: "the domainValidationMethod value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.expirationDate()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.expirationDate()"
  name: "expirationDate()"
  nameWithType: "CertificatePatchResource.expirationDate()"
  summary: "Get the expirationDate property: Certificate expiration date."
  syntax: "public OffsetDateTime expirationDate()"
  returns:
    description: "the expirationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.friendlyName()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.friendlyName()"
  name: "friendlyName()"
  nameWithType: "CertificatePatchResource.friendlyName()"
  summary: "Get the friendlyName property: Friendly name of the certificate."
  syntax: "public String friendlyName()"
  returns:
    description: "the friendlyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.hostNames()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.hostNames()"
  name: "hostNames()"
  nameWithType: "CertificatePatchResource.hostNames()"
  summary: "Get the hostNames property: Host names the certificate applies to."
  syntax: "public List<String> hostNames()"
  returns:
    description: "the hostNames value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.hostingEnvironmentProfile()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.hostingEnvironmentProfile()"
  name: "hostingEnvironmentProfile()"
  nameWithType: "CertificatePatchResource.hostingEnvironmentProfile()"
  summary: "Get the hostingEnvironmentProfile property: Specification for the App Service Environment to use for the certificate."
  syntax: "public HostingEnvironmentProfile hostingEnvironmentProfile()"
  returns:
    description: "the hostingEnvironmentProfile value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile&text=HostingEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.issueDate()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.issueDate()"
  name: "issueDate()"
  nameWithType: "CertificatePatchResource.issueDate()"
  summary: "Get the issueDate property: Certificate issue Date."
  syntax: "public OffsetDateTime issueDate()"
  returns:
    description: "the issueDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.issuer()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.issuer()"
  name: "issuer()"
  nameWithType: "CertificatePatchResource.issuer()"
  summary: "Get the issuer property: Certificate issuer."
  syntax: "public String issuer()"
  returns:
    description: "the issuer value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.keyVaultId()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.keyVaultId()"
  name: "keyVaultId()"
  nameWithType: "CertificatePatchResource.keyVaultId()"
  summary: "Get the keyVaultId property: Key Vault Csm resource Id."
  syntax: "public String keyVaultId()"
  returns:
    description: "the keyVaultId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.keyVaultSecretName()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.keyVaultSecretName()"
  name: "keyVaultSecretName()"
  nameWithType: "CertificatePatchResource.keyVaultSecretName()"
  summary: "Get the keyVaultSecretName property: Key Vault secret name."
  syntax: "public String keyVaultSecretName()"
  returns:
    description: "the keyVaultSecretName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.keyVaultSecretStatus()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.keyVaultSecretStatus()"
  name: "keyVaultSecretStatus()"
  nameWithType: "CertificatePatchResource.keyVaultSecretStatus()"
  summary: "Get the keyVaultSecretStatus property: Status of the Key Vault secret."
  syntax: "public KeyVaultSecretStatus keyVaultSecretStatus()"
  returns:
    description: "the keyVaultSecretStatus value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.KeyVaultSecretStatus?alt=com.azure.resourcemanager.appservice.models.KeyVaultSecretStatus&text=KeyVaultSecretStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.password()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.password()"
  name: "password()"
  nameWithType: "CertificatePatchResource.password()"
  summary: "Get the password property: Certificate password."
  syntax: "public String password()"
  returns:
    description: "the password value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.pfxBlob()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.pfxBlob()"
  name: "pfxBlob()"
  nameWithType: "CertificatePatchResource.pfxBlob()"
  summary: "Get the pfxBlob property: Pfx blob."
  syntax: "public byte[] pfxBlob()"
  returns:
    description: "the pfxBlob value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.publicKeyHash()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.publicKeyHash()"
  name: "publicKeyHash()"
  nameWithType: "CertificatePatchResource.publicKeyHash()"
  summary: "Get the publicKeyHash property: Public key hash."
  syntax: "public String publicKeyHash()"
  returns:
    description: "the publicKeyHash value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.selfLink()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.selfLink()"
  name: "selfLink()"
  nameWithType: "CertificatePatchResource.selfLink()"
  summary: "Get the selfLink property: Self link."
  syntax: "public String selfLink()"
  returns:
    description: "the selfLink value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.serverFarmId()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.serverFarmId()"
  name: "serverFarmId()"
  nameWithType: "CertificatePatchResource.serverFarmId()"
  summary: "Get the serverFarmId property: Resource ID of the associated App Service plan, formatted as: \"/subscriptions/\\{subscriptionID\\}/resourceGroups/\\{groupName\\}/providers/Microsoft.Web/serverfarms\" + \"/\\{appServicePlanName\\}\"."
  syntax: "public String serverFarmId()"
  returns:
    description: "the serverFarmId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.siteName()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.siteName()"
  name: "siteName()"
  nameWithType: "CertificatePatchResource.siteName()"
  summary: "Get the siteName property: App name."
  syntax: "public String siteName()"
  returns:
    description: "the siteName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.subjectName()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.subjectName()"
  name: "subjectName()"
  nameWithType: "CertificatePatchResource.subjectName()"
  summary: "Get the subjectName property: Subject name of the certificate."
  syntax: "public String subjectName()"
  returns:
    description: "the subjectName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.thumbprint()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.thumbprint()"
  name: "thumbprint()"
  nameWithType: "CertificatePatchResource.thumbprint()"
  summary: "Get the thumbprint property: Certificate thumbprint."
  syntax: "public String thumbprint()"
  returns:
    description: "the thumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.valid()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.valid()"
  name: "valid()"
  nameWithType: "CertificatePatchResource.valid()"
  summary: "Get the valid property: Is the certificate valid?."
  syntax: "public Boolean valid()"
  returns:
    description: "the valid value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.validate()"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.validate()"
  name: "validate()"
  nameWithType: "CertificatePatchResource.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withCanonicalName(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withCanonicalName(String canonicalName)"
  name: "withCanonicalName(String canonicalName)"
  nameWithType: "CertificatePatchResource.withCanonicalName(String canonicalName)"
  summary: "Set the canonicalName property: CNAME of the certificate to be issued via free certificate."
  parameters:
  - description: "the canonicalName value to set."
    name: "canonicalName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePatchResource withCanonicalName(String canonicalName)"
  returns:
    description: "the CertificatePatchResource object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withDomainValidationMethod(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withDomainValidationMethod(String domainValidationMethod)"
  name: "withDomainValidationMethod(String domainValidationMethod)"
  nameWithType: "CertificatePatchResource.withDomainValidationMethod(String domainValidationMethod)"
  summary: "Set the domainValidationMethod property: Method of domain validation for free cert."
  parameters:
  - description: "the domainValidationMethod value to set."
    name: "domainValidationMethod"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePatchResource withDomainValidationMethod(String domainValidationMethod)"
  returns:
    description: "the CertificatePatchResource object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withHostNames(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withHostNames(List<String> hostNames)"
  name: "withHostNames(List<String> hostNames)"
  nameWithType: "CertificatePatchResource.withHostNames(List<String> hostNames)"
  summary: "Set the hostNames property: Host names the certificate applies to."
  parameters:
  - description: "the hostNames value to set."
    name: "hostNames"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CertificatePatchResource withHostNames(List<String> hostNames)"
  returns:
    description: "the CertificatePatchResource object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withKeyVaultId(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withKeyVaultId(String keyVaultId)"
  name: "withKeyVaultId(String keyVaultId)"
  nameWithType: "CertificatePatchResource.withKeyVaultId(String keyVaultId)"
  summary: "Set the keyVaultId property: Key Vault Csm resource Id."
  parameters:
  - description: "the keyVaultId value to set."
    name: "keyVaultId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePatchResource withKeyVaultId(String keyVaultId)"
  returns:
    description: "the CertificatePatchResource object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withKeyVaultSecretName(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withKeyVaultSecretName(String keyVaultSecretName)"
  name: "withKeyVaultSecretName(String keyVaultSecretName)"
  nameWithType: "CertificatePatchResource.withKeyVaultSecretName(String keyVaultSecretName)"
  summary: "Set the keyVaultSecretName property: Key Vault secret name."
  parameters:
  - description: "the keyVaultSecretName value to set."
    name: "keyVaultSecretName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePatchResource withKeyVaultSecretName(String keyVaultSecretName)"
  returns:
    description: "the CertificatePatchResource object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withKind(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withKind(String kind)"
  name: "withKind(String kind)"
  nameWithType: "CertificatePatchResource.withKind(String kind)"
  summary: "Set the kind property: Kind of resource."
  overridden: "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.withKind(java.lang.String)"
  parameters:
  - name: "kind"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePatchResource withKind(String kind)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withPassword(String password)"
  name: "withPassword(String password)"
  nameWithType: "CertificatePatchResource.withPassword(String password)"
  summary: "Set the password property: Certificate password."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePatchResource withPassword(String password)"
  returns:
    description: "the CertificatePatchResource object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withPfxBlob(byte[])"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withPfxBlob(byte[] pfxBlob)"
  name: "withPfxBlob(byte[] pfxBlob)"
  nameWithType: "CertificatePatchResource.withPfxBlob(byte[] pfxBlob)"
  summary: "Set the pfxBlob property: Pfx blob."
  parameters:
  - description: "the pfxBlob value to set."
    name: "pfxBlob"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CertificatePatchResource withPfxBlob(byte[] pfxBlob)"
  returns:
    description: "the CertificatePatchResource object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withServerFarmId(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.CertificatePatchResource.withServerFarmId(String serverFarmId)"
  name: "withServerFarmId(String serverFarmId)"
  nameWithType: "CertificatePatchResource.withServerFarmId(String serverFarmId)"
  summary: "Set the serverFarmId property: Resource ID of the associated App Service plan, formatted as: \"/subscriptions/\\{subscriptionID\\}/resourceGroups/\\{groupName\\}/providers/Microsoft.Web/serverfarms\" + \"/\\{appServicePlanName\\}\"."
  parameters:
  - description: "the serverFarmId value to set."
    name: "serverFarmId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePatchResource withServerFarmId(String serverFarmId)"
  returns:
    description: "the CertificatePatchResource object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.CertificatePatchResource?alt=com.azure.resourcemanager.appservice.models.CertificatePatchResource&text=CertificatePatchResource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.14.0
