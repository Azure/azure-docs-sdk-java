### YamlMime:JavaMember
uid: "com.microsoft.azure.management.servicebus.AuthorizationRule.regenerateKeyAsync*"
fullName: "com.microsoft.azure.management.servicebus.AuthorizationRule<RuleT>.regenerateKeyAsync"
name: "regenerateKeyAsync"
nameWithType: "AuthorizationRule<RuleT>.regenerateKeyAsync"
members:
- uid: "com.microsoft.azure.management.servicebus.AuthorizationRule.regenerateKeyAsync(com.microsoft.azure.management.servicebus.Policykey)"
  fullName: "com.microsoft.azure.management.servicebus.AuthorizationRule<RuleT>.regenerateKeyAsync(Policykey policykey)"
  name: "regenerateKeyAsync(Policykey policykey)"
  nameWithType: "AuthorizationRule<RuleT>.regenerateKeyAsync(Policykey policykey)"
  summary: "Regenerates primary or secondary keys."
  parameters:
  - description: "the key to regenerate"
    name: "policykey"
    type: "<xref href=\"com.microsoft.azure.management.servicebus.Policykey?alt=com.microsoft.azure.management.servicebus.Policykey&text=Policykey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AuthorizationKeys> regenerateKeyAsync(Policykey policykey)"
  returns:
    description: "a representation of the deferred computation of this call, returning the primary, secondary keys and the connection strings"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.servicebus.AuthorizationKeys?alt=com.microsoft.azure.management.servicebus.AuthorizationKeys&text=AuthorizationKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.servicebus"
artifact: com.microsoft.azure:azure-mgmt-servicebus:1.38.1
