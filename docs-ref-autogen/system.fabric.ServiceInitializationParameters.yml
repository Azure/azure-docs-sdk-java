### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: system.fabric.ServiceInitializationParameters.getCodePackageActivationContext()
  name: getCodePackageActivationContext()
  nameWithType: ServiceInitializationParameters.getCodePackageActivationContext()
  returns:
    description: <p>Returns <xref uid="system.fabric.CodePackageActivationContext" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CodePackageActivationContext"></xref>. </p>
    type: <xref href="system.fabric.FabricCodePackageActivationContext?alt=system.fabric.FabricCodePackageActivationContext&text=FabricCodePackageActivationContext" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the activation context that is associated with the code package that contains the service.</p>

    <p></p>
  syntax: public FabricCodePackageActivationContext getCodePackageActivationContext()
  uid: system.fabric.ServiceInitializationParameters.getCodePackageActivationContext()
- fullName: system.fabric.ServiceInitializationParameters.getInitializationData()
  name: getInitializationData()
  nameWithType: ServiceInitializationParameters.getInitializationData()
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.lang.Byte"></xref>. </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies custom initialization data that is provided by the creator of the service as part of the service description.</p>

    <p></p>
  syntax: public byte [] getInitializationData()
  uid: system.fabric.ServiceInitializationParameters.getInitializationData()
- fullName: system.fabric.ServiceInitializationParameters.getPartitionId()
  name: getPartitionId()
  nameWithType: ServiceInitializationParameters.getPartitionId()
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.UUID"></xref>. </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the unique identifier of the service partition.</p>

    <p></p>
  syntax: public UUID getPartitionId()
  uid: system.fabric.ServiceInitializationParameters.getPartitionId()
- fullName: system.fabric.ServiceInitializationParameters.getServiceName()
  name: getServiceName()
  nameWithType: ServiceInitializationParameters.getServiceName()
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.net.URI"></xref>. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates the Service Fabric name of the service.</p>

    <p></p>
  syntax: public URI getServiceName()
  uid: system.fabric.ServiceInitializationParameters.getServiceName()
- fullName: system.fabric.ServiceInitializationParameters.getServiceTypeName()
  name: getServiceTypeName()
  nameWithType: ServiceInitializationParameters.getServiceTypeName()
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.lang.String"></xref>. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates the name of the type of the service.</p>

    <p></p>
  syntax: public String getServiceTypeName()
  uid: system.fabric.ServiceInitializationParameters.getServiceTypeName()
nameWithType: ServiceInitializationParameters
syntax: public class ServiceInitializationParameters
type: class
uid: system.fabric.ServiceInitializationParameters
fullName: system.fabric.ServiceInitializationParameters
name: ServiceInitializationParameters
package: system.fabric
summary: >-
  <p>

    <b>Remarks:</b>Derived types define initialization data that are specific to stateless and stateful services. </p>
metadata: {}
