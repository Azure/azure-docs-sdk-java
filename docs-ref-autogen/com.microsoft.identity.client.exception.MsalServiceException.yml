### YamlMime:JavaType
constructors:
- com.microsoft.identity.client.exception.MsalServiceException.MsalServiceException(final String,final String,final int,final Throwable)
- com.microsoft.identity.client.exception.MsalServiceException.MsalServiceException(final String,final String,final Throwable)
fields:
- com.microsoft.identity.client.exception.MsalServiceException.ACCESS_DENIED
- com.microsoft.identity.client.exception.MsalServiceException.DEFAULT_STATUS_CODE
- com.microsoft.identity.client.exception.MsalServiceException.INVALID_INSTANCE
- com.microsoft.identity.client.exception.MsalServiceException.INVALID_REQUEST
- com.microsoft.identity.client.exception.MsalServiceException.INVALID_SCOPE
- com.microsoft.identity.client.exception.MsalServiceException.REQUEST_TIMEOUT
- com.microsoft.identity.client.exception.MsalServiceException.SERVICE_NOT_AVAILABLE
- com.microsoft.identity.client.exception.MsalServiceException.UNAUTHORIZED_CLIENT
- com.microsoft.identity.client.exception.MsalServiceException.UNKNOWN_ERROR
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="BaseException" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.identity.client.exception.MsalException?alt=com.microsoft.identity.client.exception.MsalException&text=MsalException" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.identity.client.exception.MsalException.getErrorCode()
- com.microsoft.identity.client.exception.MsalException.getMessage()
methods:
- com.microsoft.identity.client.exception.MsalServiceException.getHttpStatusCode()
nameWithType: MsalServiceException
syntax: public class MsalServiceException extends MsalException
type: class
uid: com.microsoft.identity.client.exception.MsalServiceException
fullName: com.microsoft.identity.client.exception.MsalServiceException
name: MsalServiceException
package: com.microsoft.identity.client.exception
summary: >-
  <p>This exception class represents errors when communicating to the service, can be from the authorize or token endpoints. MSAL reads the error and error_description from the server response. Generally, these errors are resolved by fixing app configurations either in code or in the app registration portal. </p>

  <p>Set of error codes that could be returned from this exception: <ul><li><p>invalid_request: This request is missing a required parameter, includes an invalid parameter, includes a parameter more than once, or is otherwise malformed. </p></li><li><p>unauthorized_client: The client is not authorized to request an authorization code.  </p></li><li><p>access_denied: The resource owner or authorization server denied the request. </p></li><li><p>invalid_scope: The request scope is invalid, unknown or malformed.  </p></li><li><p>service_not_available: Represents 500/503/504 error codes.  </p></li><li><p>request_timeout: Represents <xref uid="" data-throw-if-not-resolved="false">java.net.SocketTimeoutException</xref>.  </p></li><li><p>invalid_instance: AuthorityMetadata validation failed.  </p></li><li><p>unknown_error: Request to server failed, but no error and error_description was returned from the service.  </p></li></ul></p>

  <p>Note: <xref uid="com.microsoft.identity.client.exception.MsalServiceException" data-throw-if-not-resolved="false">MsalServiceException</xref> provides one extra API: </p>

  <p>

    <ul>

      <li>

        <p>

          <xref uid="com.microsoft.identity.client.exception.MsalServiceException.getHttpStatusCode()" data-throw-if-not-resolved="false">MsalServiceException#getHttpStatusCode()</xref> : indicates the http status code for the failed request.  </p>

      </li>

    </ul>

  </p>
metadata: {}
