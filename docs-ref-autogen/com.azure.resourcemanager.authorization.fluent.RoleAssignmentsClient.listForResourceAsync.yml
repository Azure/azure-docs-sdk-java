### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync*"
fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync"
name: "listForResourceAsync"
nameWithType: "RoleAssignmentsClient.listForResourceAsync"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  name: "listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  nameWithType: "RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  summary: "List all role assignments that apply to a resource."
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource type name. For example the type name of a web app is 'sites' (from\n     Microsoft.Web/sites)."
    name: "resourceType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource name."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName)"
  returns:
    description: "role assignment list operation result."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId)"
  name: "listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId)"
  nameWithType: "RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId)"
  summary: "List all role assignments that apply to a resource."
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource type name. For example the type name of a web app is 'sites' (from\n     Microsoft.Web/sites)."
    name: "resourceType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource name."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<RoleAssignmentInner> listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String resourceType, String resourceName, String filter, String tenantId)"
  returns:
    description: "role assignment list operation result."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.13.0
