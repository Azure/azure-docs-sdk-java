### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform"
fullName: "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform"
name: "RegistryTask.DefinitionStages.Platform"
nameWithType: "RegistryTask.DefinitionStages.Platform"
summary: "The stage of the container registry task definition allowing to specify the platform."
syntax: "public static interface RegistryTask.DefinitionStages.Platform"
methods:
- "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux()"
- "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(com.microsoft.azure.management.containerregistry.Architecture)"
- "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(com.microsoft.azure.management.containerregistry.Architecture,com.microsoft.azure.management.containerregistry.Variant)"
- "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform(com.microsoft.azure.management.containerregistry.PlatformProperties)"
- "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows()"
- "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(com.microsoft.azure.management.containerregistry.Architecture)"
- "com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(com.microsoft.azure.management.containerregistry.Architecture,com.microsoft.azure.management.containerregistry.Variant)"
type: "interface"
metadata: {}
package: "com.microsoft.azure.management.containerregistry"
artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.38.1
