### YamlMime:JavaMember
nameWithType: JobConstraints.withMaxTaskRetryCount
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  name: withMaxTaskRetryCount(Integer maxTaskRetryCount)
  nameWithType: JobConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  parameters:
  - description: <p>the maxTaskRetryCount value to set </p>
    name: maxTaskRetryCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobConstraints object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set note that this value specifically controls the number of retries. The Batch service will try each task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry tasks. If the maximum retry count is -1, the Batch service retries tasks without limit. The default value is 0 (no retries).</p>

    <p></p>
  syntax: public JobConstraints withMaxTaskRetryCount(Integer maxTaskRetryCount)
  uid: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount(Integer)
uid: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount*
fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
name: withMaxTaskRetryCount(Integer maxTaskRetryCount)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
