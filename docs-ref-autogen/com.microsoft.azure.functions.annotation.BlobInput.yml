### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.functions.annotation.BlobInput"
  id: "BlobInput"
  parent: "com.microsoft.azure.functions.annotation"
  children:
  - "com.microsoft.azure.functions.annotation.BlobInput.connection()"
  - "com.microsoft.azure.functions.annotation.BlobInput.dataType()"
  - "com.microsoft.azure.functions.annotation.BlobInput.name()"
  - "com.microsoft.azure.functions.annotation.BlobInput.path()"
  langs:
  - "java"
  name: "BlobInput"
  nameWithType: "BlobInput"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput"
  type: "Interface"
  package: "com.microsoft.azure.functions.annotation"
  summary: "Place this on a parameter whose value would come from a blob. The parameter type can be one of the following:\n\n *  Any native Java types such as int, String, byte\\[\\]\n *  Nullable values using Optional<T>\n *  Any POJO type\n\nThe following example is a Java function that uses a queue trigger and an input blob binding. The queue message contains the name of the blob, and the function logs the size of the blob.\n\n```java\n@FunctionName(\"getBlobSize\")\n@StorageAccount(\"AzureWebJobsStorage\")\n public void blobSize(\n    @QueueTrigger(name = \"filename\",\n                   queueName = \"myqueue-items\") String filename,\n    @BlobInput(name = \"file\",\n                dataType = \"binary\",\n                path = \"samples-workitems/{queueTrigger}\") byte[] content,\n     final ExecutionContext context\n ) {\n     context.getLogger().info(\"The size of \\\"\" + filename + \"\\\" is: \" + content.length + \" bytes\");\n }\n```"
  syntax:
    content: "public interface BlobInput implements Annotation"
  implements:
  - "java.lang.annotation.Annotation"
- uid: "com.microsoft.azure.functions.annotation.BlobInput.connection()"
  id: "connection()"
  parent: "com.microsoft.azure.functions.annotation.BlobInput"
  langs:
  - "java"
  name: "connection()"
  nameWithType: "BlobInput.connection()"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput.connection()"
  overload: "com.microsoft.azure.functions.annotation.BlobInput.connection*"
  type: "Method"
  package: "com.microsoft.azure.functions.annotation"
  summary: "Defines the app setting name that contains the Azure Storage connection string."
  syntax:
    content: "public abstract String connection()"
    return:
      type: "java.lang.String"
      description: "The app setting name of the connection string."
- uid: "com.microsoft.azure.functions.annotation.BlobInput.dataType()"
  id: "dataType()"
  parent: "com.microsoft.azure.functions.annotation.BlobInput"
  langs:
  - "java"
  name: "dataType()"
  nameWithType: "BlobInput.dataType()"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput.dataType()"
  overload: "com.microsoft.azure.functions.annotation.BlobInput.dataType*"
  type: "Method"
  package: "com.microsoft.azure.functions.annotation"
  summary: "Defines how Functions runtime should treat the parameter value. Possible values are:\n\n *  \"\": get the value as a string, and try to deserialize to actual parameter type like POJO\n *  string: always get the value as a string\n *  binary: get the value as a binary data, and try to deserialize to actual parameter type byte\\[\\]"
  syntax:
    content: "public abstract String dataType()"
    return:
      type: "java.lang.String"
      description: "The dataType which will be used by the Functions runtime."
- uid: "com.microsoft.azure.functions.annotation.BlobInput.name()"
  id: "name()"
  parent: "com.microsoft.azure.functions.annotation.BlobInput"
  langs:
  - "java"
  name: "name()"
  nameWithType: "BlobInput.name()"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput.name()"
  overload: "com.microsoft.azure.functions.annotation.BlobInput.name*"
  type: "Method"
  package: "com.microsoft.azure.functions.annotation"
  summary: "The variable name used in function.json."
  syntax:
    content: "public abstract String name()"
    return:
      type: "java.lang.String"
      description: "The variable name used in function.json."
- uid: "com.microsoft.azure.functions.annotation.BlobInput.path()"
  id: "path()"
  parent: "com.microsoft.azure.functions.annotation.BlobInput"
  langs:
  - "java"
  name: "path()"
  nameWithType: "BlobInput.path()"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput.path()"
  overload: "com.microsoft.azure.functions.annotation.BlobInput.path*"
  type: "Method"
  package: "com.microsoft.azure.functions.annotation"
  summary: "Defines the path of the blob to which to bind."
  syntax:
    content: "public abstract String path()"
    return:
      type: "java.lang.String"
      description: "The blob path string."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.functions.annotation.BlobInput.name*"
  name: "name"
  nameWithType: "BlobInput.name"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput.name"
  package: "com.microsoft.azure.functions.annotation"
- uid: "com.microsoft.azure.functions.annotation.BlobInput.dataType*"
  name: "dataType"
  nameWithType: "BlobInput.dataType"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput.dataType"
  package: "com.microsoft.azure.functions.annotation"
- uid: "com.microsoft.azure.functions.annotation.BlobInput.path*"
  name: "path"
  nameWithType: "BlobInput.path"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput.path"
  package: "com.microsoft.azure.functions.annotation"
- uid: "com.microsoft.azure.functions.annotation.BlobInput.connection*"
  name: "connection"
  nameWithType: "BlobInput.connection"
  fullName: "com.microsoft.azure.functions.annotation.BlobInput.connection"
  package: "com.microsoft.azure.functions.annotation"
- uid: "java.lang.annotation.Annotation"
  name: "Annotation"
  nameWithType: "Annotation"
  fullName: "java.lang.annotation.Annotation"
