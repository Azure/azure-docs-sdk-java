### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient"
fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient"
name: "RoleManagementPoliciesClient"
nameWithType: "RoleManagementPoliciesClient"
summary: "An instance of this class provides access to all the operations defined in Role<wbr>Management<wbr>Policies<wbr>Client."
syntax: "public interface RoleManagementPoliciesClient extends InnerSupportsDelete<Void>"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.delete(String scope, String roleManagementPolicyName)"
  name: "delete(String scope, String roleManagementPolicyName)"
  nameWithType: "RoleManagementPoliciesClient.delete(String scope, String roleManagementPolicyName)"
  summary: "Delete a role management policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy to upsert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to upsert."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void delete(String scope, String roleManagementPolicyName)"
  desc: "Delete a role management policy."
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.deleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.deleteAsync(String scope, String roleManagementPolicyName)"
  name: "deleteAsync(String scope, String roleManagementPolicyName)"
  nameWithType: "RoleManagementPoliciesClient.deleteAsync(String scope, String roleManagementPolicyName)"
  summary: "Delete a role management policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy to upsert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to upsert."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAsync(String scope, String roleManagementPolicyName)"
  desc: "Delete a role management policy."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.deleteWithResponse(String scope, String roleManagementPolicyName, Context context)"
  name: "deleteWithResponse(String scope, String roleManagementPolicyName, Context context)"
  nameWithType: "RoleManagementPoliciesClient.deleteWithResponse(String scope, String roleManagementPolicyName, Context context)"
  summary: "Delete a role management policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy to upsert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to upsert."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String scope, String roleManagementPolicyName, Context context)"
  desc: "Delete a role management policy."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.deleteWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.deleteWithResponseAsync(String scope, String roleManagementPolicyName)"
  name: "deleteWithResponseAsync(String scope, String roleManagementPolicyName)"
  nameWithType: "RoleManagementPoliciesClient.deleteWithResponseAsync(String scope, String roleManagementPolicyName)"
  summary: "Delete a role management policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy to upsert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to upsert."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> deleteWithResponseAsync(String scope, String roleManagementPolicyName)"
  desc: "Delete a role management policy."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.get(String scope, String roleManagementPolicyName)"
  name: "get(String scope, String roleManagementPolicyName)"
  nameWithType: "RoleManagementPoliciesClient.get(String scope, String roleManagementPolicyName)"
  summary: "Get the specified role management policy for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to get."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RoleManagementPolicyInner get(String scope, String roleManagementPolicyName)"
  desc: "Get the specified role management policy for a resource scope."
  returns:
    description: "the specified role management policy for a resource scope."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.getAsync(String scope, String roleManagementPolicyName)"
  name: "getAsync(String scope, String roleManagementPolicyName)"
  nameWithType: "RoleManagementPoliciesClient.getAsync(String scope, String roleManagementPolicyName)"
  summary: "Get the specified role management policy for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to get."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<RoleManagementPolicyInner> getAsync(String scope, String roleManagementPolicyName)"
  desc: "Get the specified role management policy for a resource scope."
  returns:
    description: "the specified role management policy for a resource scope on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.getWithResponse(String scope, String roleManagementPolicyName, Context context)"
  name: "getWithResponse(String scope, String roleManagementPolicyName, Context context)"
  nameWithType: "RoleManagementPoliciesClient.getWithResponse(String scope, String roleManagementPolicyName, Context context)"
  summary: "Get the specified role management policy for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to get."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleManagementPolicyInner> getWithResponse(String scope, String roleManagementPolicyName, Context context)"
  desc: "Get the specified role management policy for a resource scope."
  returns:
    description: "the specified role management policy for a resource scope along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.getWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.getWithResponseAsync(String scope, String roleManagementPolicyName)"
  name: "getWithResponseAsync(String scope, String roleManagementPolicyName)"
  nameWithType: "RoleManagementPoliciesClient.getWithResponseAsync(String scope, String roleManagementPolicyName)"
  summary: "Get the specified role management policy for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to get."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<RoleManagementPolicyInner>> getWithResponseAsync(String scope, String roleManagementPolicyName)"
  desc: "Get the specified role management policy for a resource scope."
  returns:
    description: "the specified role management policy for a resource scope along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.listForScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.listForScope(String scope)"
  name: "listForScope(String scope)"
  nameWithType: "RoleManagementPoliciesClient.listForScope(String scope)"
  summary: "Gets role management policies for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<RoleManagementPolicyInner> listForScope(String scope)"
  desc: "Gets role management policies for a resource scope."
  returns:
    description: "role management policies for a resource scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.listForScope(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.listForScope(String scope, Context context)"
  name: "listForScope(String scope, Context context)"
  nameWithType: "RoleManagementPoliciesClient.listForScope(String scope, Context context)"
  summary: "Gets role management policies for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RoleManagementPolicyInner> listForScope(String scope, Context context)"
  desc: "Gets role management policies for a resource scope."
  returns:
    description: "role management policies for a resource scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.listForScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.listForScopeAsync(String scope)"
  name: "listForScopeAsync(String scope)"
  nameWithType: "RoleManagementPoliciesClient.listForScopeAsync(String scope)"
  summary: "Gets role management policies for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<RoleManagementPolicyInner> listForScopeAsync(String scope)"
  desc: "Gets role management policies for a resource scope."
  returns:
    description: "role management policies for a resource scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.update(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  name: "update(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  nameWithType: "RoleManagementPoliciesClient.update(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  summary: "Update a role management policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy to upsert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to upsert."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role management policy."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RoleManagementPolicyInner update(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  desc: "Update a role management policy."
  returns:
    description: "role management policy."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.updateAsync(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  name: "updateAsync(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  nameWithType: "RoleManagementPoliciesClient.updateAsync(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  summary: "Update a role management policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy to upsert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to upsert."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role management policy."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<RoleManagementPolicyInner> updateAsync(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  desc: "Update a role management policy."
  returns:
    description: "role management policy on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.updateWithResponse(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters, Context context)"
  name: "updateWithResponse(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters, Context context)"
  nameWithType: "RoleManagementPoliciesClient.updateWithResponse(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters, Context context)"
  summary: "Update a role management policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy to upsert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to upsert."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role management policy."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RoleManagementPolicyInner> updateWithResponse(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters, Context context)"
  desc: "Update a role management policy."
  returns:
    description: "role management policy along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPoliciesClient.updateWithResponseAsync(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  name: "updateWithResponseAsync(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  nameWithType: "RoleManagementPoliciesClient.updateWithResponseAsync(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  summary: "Update a role management policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the role management policy to upsert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name (guid) of the role management policy to upsert."
    name: "roleManagementPolicyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the role management policy."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<RoleManagementPolicyInner>> updateWithResponseAsync(String scope, String roleManagementPolicyName, RoleManagementPolicyInner parameters)"
  desc: "Update a role management policy."
  returns:
    description: "role management policy along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyInner&text=RoleManagementPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in RoleManagementPoliciesClient."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete&text=InnerSupportsDelete\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.19.0
