items:
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host
  id: _event_processor_host
  parent: com.microsoft.azure.eventprocessorhost
  children:
  - com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final ExecutorService)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String,final ExecutorService)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager,ExecutorService)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.EVENTPROCESSORHOST_TRACE()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubConnectionString()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getHostName()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor(Class<T>)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor(Class<T>,EventProcessorOptions)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory(IEventProcessorFactory<?>)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory(IEventProcessorFactory<?>,EventProcessorOptions)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.safeCreateUUID()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.setAutoExecutorShutdown(boolean)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor()
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost
  nameWithType: EventProcessorHost
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 19
  package: com.microsoft.azure.eventprocessorhost
  syntax: &o2
    content: public class EventProcessorHost
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getCheckpointManager()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getConsumerGroupName()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubPath()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getEventProcessorOptions()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getExecutorService()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getLeaseManager()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getPartitionManager()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.getProcessorFactory()
  - com.microsoft.azure.eventprocessorhost._event_processor_host.log(Level,String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHost(Level,String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHost(Level,String,Throwable)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHostAndPartition(Level,String,String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHostAndPartition(Level,String,String,Throwable)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHostAndPartition(Level,PartitionContext,String)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHostAndPartition(Level,PartitionContext,String,Throwable)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.setPartitionManager(PartitionManager)
  - com.microsoft.azure.eventprocessorhost._event_processor_host.stopExecutor()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)
  id: createHostName(String)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: createHostName(String prefix)
  nameWithType: EventProcessorHost.createHostName(String prefix)
  fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.createHostName(String prefix)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 702
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Convenience method for generating unique host names, safe to pass to the <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> constructors that take a hostName argument.</p>

    <p>If a prefix is supplied, the constructed name begins with that string. If the prefix argument is null or an empty string, the constructed name begins with "javahost". Then a dash '-' and a UUID are appended to create a unique name.</p>

    <p></p>
  syntax: &o1
    content: public static String createHostName(String prefix)
    parameters:
    - id: prefix
      type: "26831127"
      description: <p>String to use as the beginning of the name. If null or empty, a default is used. </p>
    return:
      type: "26831127"
      description: <p>A unique host name to pass to <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> constructors. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String)
  id: EventProcessorHost(final String,final String,final String,final String)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost(final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)
  nameWithType: EventProcessorHost.EventProcessorHost(final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 68
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Create a new host to process events from an Event Hub.</p>

    <p>Since Event Hubs are generally used for scale-out, high-traffic scenarios, generally there will be only one host per process, and the processes will be run on separate machines. However, it is supported to run multiple hosts on one machine, or even within one process, if throughput is less of a concern, or for development and testing. </p>

    <p>This overload of the constructor uses the built-in lease and checkpoint managers. The Azure Storage account specified by the storageConnectionString parameter is used by the built-in managers to record leases and checkpoints. </p>

    <p>The Event Hub connection string may be conveniently constructed using the ConnectionStringBuilder class from the Java Event Hub client.</p>

    <p></p>
  syntax:
    content: public EventProcessorHost(final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)
    parameters:
    - id: eventHubPath
      type: 3d93591e
      description: <p>Specifies the Event Hub to receive events from. </p>
    - id: consumerGroupName
      type: 3d93591e
      description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    - id: eventHubConnectionString
      type: 3d93591e
      description: <p>Connection string for the Event Hub to receive from. </p>
    - id: storageConnectionString
      type: 3d93591e
      description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String)
  id: EventProcessorHost(final String,final String,final String,final String,final String)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 92
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Create a new host to process events from an Event Hub.</p>

    <p>The hostName parameter is a name for this event processor host, which must be unique among all event processor hosts receiving from this Event Hub/consumer group combination. The overload which does not have a hostName argument defaults to "javahost-" followed by a UUID, which is created by calling EventProcessorHost.createHostName(null). An easy way to generate a unique hostName which also includes other information is to call <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)" data-throw-if-not-resolved="false"></xref>("mystring").</p>

    <p></p>
  syntax:
    content: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)
    parameters:
    - id: hostName
      type: 3d93591e
      description: <p>A name for this event processor host. See method notes. </p>
    - id: eventHubPath
      type: 3d93591e
      description: <p>Specifies the Event Hub to receive events from. </p>
    - id: consumerGroupName
      type: 3d93591e
      description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    - id: eventHubConnectionString
      type: 3d93591e
      description: <p>Connection string for the Event Hub to receive from. </p>
    - id: storageConnectionString
      type: 3d93591e
      description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String)
  id: EventProcessorHost(final String,final String,final String,final String,final String,final String)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 116
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Create a new host to process events from an Event Hub.</p>

    <p>This overload adds an argument to specify the Azure Storage container name that will be used to persist leases and checkpoints.</p>

    <p></p>
  syntax:
    content: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)
    parameters:
    - id: hostName
      type: 3d93591e
      description: <p>A name for this event processor host. See method notes. </p>
    - id: eventHubPath
      type: 3d93591e
      description: <p>Specifies the Event Hub to receive events from. </p>
    - id: consumerGroupName
      type: 3d93591e
      description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    - id: eventHubConnectionString
      type: 3d93591e
      description: <p>Connection string for the Event Hub to receive from. </p>
    - id: storageConnectionString
      type: 3d93591e
      description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
    - id: storageContainerName
      type: 3d93591e
      description: <p>Azure Storage container name for use by built-in lease and checkpoint manager. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final ExecutorService)
  id: EventProcessorHost(final String,final String,final String,final String,final String,final String,final ExecutorService)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ExecutorService executorService)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ExecutorService executorService)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ExecutorService executorService)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 140
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Create a new host to process events from an Event Hub.</p>

    <p>This overload adds an argument to specify the Azure Storage container name that will be used to persist leases and checkpoints.</p>

    <p></p>
  syntax:
    content: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ExecutorService executorService)
    parameters:
    - id: hostName
      type: 3d93591e
      description: <p>A name for this event processor host. See method notes. </p>
    - id: eventHubPath
      type: 3d93591e
      description: <p>Specifies the Event Hub to receive events from. </p>
    - id: consumerGroupName
      type: 3d93591e
      description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    - id: eventHubConnectionString
      type: 3d93591e
      description: <p>Connection string for the Event Hub to receive from. </p>
    - id: storageConnectionString
      type: 3d93591e
      description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
    - id: storageContainerName
      type: 3d93591e
      description: <p>Azure Storage container name for use by built-in lease and checkpoint manager. </p>
    - id: executorService
      type: ebf10a33
      description: <p>User-supplied thread executor, or null to use EventProcessorHost-internal executor. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String)
  id: EventProcessorHost(final String,final String,final String,final String,final String,final String,final String)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 165
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Create a new host to process events from an Event Hub.</p>

    <p>This overload adds an argument to specify the Azure Storage container name that will be used to persist leases and checkpoints.</p>

    <p></p>
  syntax:
    content: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)
    parameters:
    - id: hostName
      type: 3d93591e
      description: <p>A name for this event processor host. See method notes. </p>
    - id: eventHubPath
      type: 3d93591e
      description: <p>Specifies the Event Hub to receive events from. </p>
    - id: consumerGroupName
      type: 3d93591e
      description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    - id: eventHubConnectionString
      type: 3d93591e
      description: <p>Connection string for the Event Hub to receive from. </p>
    - id: storageConnectionString
      type: 3d93591e
      description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
    - id: storageContainerName
      type: 3d93591e
      description: <p>Azure Storage container name for use by built-in lease and checkpoint manager. </p>
    - id: storageBlobPrefix
      type: 3d93591e
      description: <p>Prefix used when naming blobs within the storage container. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String,final ExecutorService)
  id: EventProcessorHost(final String,final String,final String,final String,final String,final String,final String,final ExecutorService)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ExecutorService executorService)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ExecutorService executorService)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ExecutorService executorService)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 192
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Create a new host to process events from an Event Hub.</p>

    <p>This overload adds an argument to specify the Azure Storage container name that will be used to persist leases and checkpoints.</p>

    <p></p>
  syntax:
    content: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ExecutorService executorService)
    parameters:
    - id: hostName
      type: 3d93591e
      description: <p>A name for this event processor host. See method notes. </p>
    - id: eventHubPath
      type: 3d93591e
      description: <p>Specifies the Event Hub to receive events from. </p>
    - id: consumerGroupName
      type: 3d93591e
      description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    - id: eventHubConnectionString
      type: 3d93591e
      description: <p>Connection string for the Event Hub to receive from. </p>
    - id: storageConnectionString
      type: 3d93591e
      description: <p>Connection string for the Azure Storage account to use for persisting leases and checkpoints. </p>
    - id: storageContainerName
      type: 3d93591e
      description: <p>Azure Storage container name for use by built-in lease and checkpoint manager. </p>
    - id: storageBlobPrefix
      type: 3d93591e
      description: <p>Prefix used when naming blobs within the storage container. </p>
    - id: executorService
      type: ebf10a33
      description: <p>User-supplied thread executor, or null to use EventProcessorHost-internal executor. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager)
  id: EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 236
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Create a new host to process events from an Event Hub.</p>

    <p>This overload allows the caller to provide their own lease and checkpoint managers to replace the built-in ones based on Azure Storage.</p>

    <p></p>
  syntax:
    content: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)
    parameters:
    - id: hostName
      type: 3d93591e
      description: <p>A name for this event processor host. See method notes. </p>
    - id: eventHubPath
      type: 3d93591e
      description: <p>Specifies the Event Hub to receive events from. </p>
    - id: consumerGroupName
      type: 3d93591e
      description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    - id: eventHubConnectionString
      type: 3d93591e
      description: <p>Connection string for the Event Hub to receive from. </p>
    - id: checkpointManager
      type: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
      description: <p>Implementation of <xref href="com.microsoft.azure.eventprocessorhost._i_checkpoint_manager" data-throw-if-not-resolved="false"></xref>, to be replacement checkpoint manager. </p>
    - id: leaseManager
      type: com.microsoft.azure.eventprocessorhost._i_lease_manager
      description: <p>Implementation of <xref href="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false"></xref>, to be replacement lease manager. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager,ExecutorService)
  id: EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager,ExecutorService)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ExecutorService executorService)
  nameWithType: EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ExecutorService executorService)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ExecutorService executorService)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 261
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Create a new host to process events from an Event Hub.</p>

    <p>This overload allows the caller to provide their own lease and checkpoint managers to replace the built-in ones based on Azure Storage, and to provide an executor service.</p>

    <p></p>
  syntax:
    content: public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ExecutorService executorService)
    parameters:
    - id: hostName
      type: 3d93591e
      description: <p>A name for this event processor host. See method notes. </p>
    - id: eventHubPath
      type: 3d93591e
      description: <p>Specifies the Event Hub to receive events from. </p>
    - id: consumerGroupName
      type: 3d93591e
      description: <p>The name of the consumer group to use when receiving from the Event Hub. </p>
    - id: eventHubConnectionString
      type: 3d93591e
      description: <p>Connection string for the Event Hub to receive from. </p>
    - id: checkpointManager
      type: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
      description: <p>Implementation of <xref href="com.microsoft.azure.eventprocessorhost._i_checkpoint_manager" data-throw-if-not-resolved="false"></xref>, to be replacement checkpoint manager. </p>
    - id: leaseManager
      type: com.microsoft.azure.eventprocessorhost._i_lease_manager
      description: <p>Implementation of <xref href="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false"></xref>, to be replacement lease manager. </p>
    - id: executorService
      type: ddc463eb
      description: <p>User-supplied thread executor, or null to use EventProcessorHost-internal executor. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EVENTPROCESSORHOST_TRACE()
  id: EVENTPROCESSORHOST_TRACE()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: EVENTPROCESSORHOST_TRACE
  nameWithType: EventProcessorHost.EVENTPROCESSORHOST_TRACE
  fullName: final String com.microsoft.azure.eventprocessorhost.EventProcessorHost.EVENTPROCESSORHOST_TRACE
  type: Field
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 42
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public static final String EVENTPROCESSORHOST_TRACE= "eventprocessorhost.trace"
    return:
      type: 3d93591e
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)
  id: forceExecutorShutdown(long)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: forceExecutorShutdown(long secondsToWait)
  nameWithType: EventProcessorHost.forceExecutorShutdown(long secondsToWait)
  fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.forceExecutorShutdown(long secondsToWait)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 606
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>If you do not want to use the automatic shutdown option, then you must call <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)" data-throw-if-not-resolved="false"></xref> during process termination, after the last call to <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor()" data-throw-if-not-resolved="false"></xref> has returned. Be sure that you will not need to create any new <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> instances, because calling this method means that any new instances will fail when a register* method is called. </p>

    <p>If using a user-supplied ExecutorService, calling this method is not required and has no effect.</p>

    <p></p>
  syntax: &o4
    content: public static void forceExecutorShutdown(long secondsToWait)
    parameters:
    - id: secondsToWait
      type: 0364520f
      description: <p>How long to wait for the ExecutorService to shut down </p>
  exceptions:
  - type: 8256ba40
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubConnectionString()
  id: getEventHubConnectionString()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: getEventHubConnectionString()
  nameWithType: EventProcessorHost.getEventHubConnectionString()
  fullName: String com.microsoft.azure.eventprocessorhost.EventProcessorHost.getEventHubConnectionString()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubConnectionString*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 397
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Returns the Event Hub connection string assembled by the processor host.</p>

    <p>The connection string is assembled from info provider by the caller to the constructor using ConnectionStringBuilder, so it's not clear that there's any value to making this string accessible.</p>

    <p></p>
  syntax:
    content: public String getEventHubConnectionString()
    return:
      type: "26831127"
      description: <p>Event Hub connection string. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getHostName()
  id: getHostName()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: getHostName()
  nameWithType: EventProcessorHost.getHostName()
  fullName: String com.microsoft.azure.eventprocessorhost.EventProcessorHost.getHostName()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.getHostName*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 386
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Returns processor host name.</p>

    <p>If the processor host name was automatically generated, this is the only way to get it.</p>

    <p></p>
  syntax:
    content: public String getHostName()
    return:
      type: "26831127"
      description: <p>the processor host name </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor(Class<T>)
  id: registerEventProcessor(Class<T>)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: registerEventProcessor(Class<T> eventProcessorType)
  nameWithType: EventProcessorHost.registerEventProcessor(Class<T> eventProcessorType)
  fullName: public<T extends IEventProcessor> Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessor(Class<T> eventProcessorType)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 428
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Register class for event processor and start processing.</p>

    <p>This overload uses the default event processor factory, which simply creates new instances of the registered event processor class, and uses all the default options. <preformatted>

    class EventProcessor implements <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false"></xref> { ... }

    <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> host = new <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref>(...);

    Future foo = host.registerEventProcessor(EventProcessor.class);

    foo.get();

    </preformatted></p>

    <p></p>
  syntax:
    content: public <T extends IEventProcessor> Future<?> registerEventProcessor(Class<T> eventProcessorType)
    parameters:
    - id: eventProcessorType
      type: ffb09d2d
      description: <p>Class that implements <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false"></xref>. </p>
    return:
      type: 36136266com.microsoft.azure.eventprocessorhost._i_event_processor3358aef8
      description: <p>Future that completes when initialization is finished. If initialization fails, get() will throw. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor(Class<T>,EventProcessorOptions)
  id: registerEventProcessor(Class<T>,EventProcessorOptions)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: registerEventProcessor(Class<T> eventProcessorType, EventProcessorOptions processorOptions)
  nameWithType: EventProcessorHost.registerEventProcessor(Class<T> eventProcessorType, EventProcessorOptions processorOptions)
  fullName: public<T extends IEventProcessor> Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessor(Class<T> eventProcessorType, EventProcessorOptions processorOptions)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 445
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Register class for event processor and start processing.</p>

    <p>This overload uses the default event processor factory, which simply creates new instances of the registered event processor class, but takes user-specified options.</p>

    <p></p>
  syntax:
    content: public <T extends IEventProcessor> Future<?> registerEventProcessor(Class<T> eventProcessorType, EventProcessorOptions processorOptions)
    parameters:
    - id: eventProcessorType
      type: ffb09d2d
      description: <p>Class that implements <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false"></xref>. </p>
    - id: processorOptions
      type: com.microsoft.azure.eventprocessorhost._event_processor_options
      description: <p>Options for the processor host and event processor(s). </p>
    return:
      type: 36136266com.microsoft.azure.eventprocessorhost._i_event_processor3358aef8
      description: <p>Future that completes when initialization is finished. If initialization fails, get() will throw. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory(IEventProcessorFactory<?>)
  id: registerEventProcessorFactory(IEventProcessorFactory<?>)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: registerEventProcessorFactory(IEventProcessorFactory<?> factory)
  nameWithType: EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory)
  fullName: Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 465
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Register user-supplied event processor factory and start processing.</p>

    <p>If creating a new event processor requires more work than just new'ing an objects, the user must create an object that implements <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor_factory" data-throw-if-not-resolved="false"></xref> and pass it to this method, instead of calling registerEventProcessor. </p>

    <p>This overload uses default options for the processor host and event processor(s).</p>

    <p></p>
  syntax:
    content: public Future<?> registerEventProcessorFactory(IEventProcessorFactory<?> factory)
    parameters:
    - id: factory
      type: com.microsoft.azure.eventprocessorhost._i_event_processor_factory7e6ad1eb
      description: <p>User-supplied event processor factory object. </p>
    return:
      type: 10f8d850
      description: <p>Future that completes when initialization is finished. If initialization fails, get() will throw. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory(IEventProcessorFactory<?>,EventProcessorOptions)
  id: registerEventProcessorFactory(IEventProcessorFactory<?>,EventProcessorOptions)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)
  nameWithType: EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)
  fullName: Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 479
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Register user-supplied event processor factory and start processing.</p>

    <p>This overload takes user-specified options.</p>

    <p></p>
  syntax:
    content: public Future<?> registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)
    parameters:
    - id: factory
      type: com.microsoft.azure.eventprocessorhost._i_event_processor_factory7e6ad1eb
      description: <p>User-supplied event processor factory object. </p>
    - id: processorOptions
      type: com.microsoft.azure.eventprocessorhost._event_processor_options
      description: <p>Options for the processor host and event processor(s). </p>
    return:
      type: 10f8d850
      description: <p>Future that completes when initialization is finished. If initialization fails, get() will throw. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.safeCreateUUID()
  id: safeCreateUUID()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: safeCreateUUID()
  nameWithType: EventProcessorHost.safeCreateUUID()
  fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.safeCreateUUID()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.safeCreateUUID*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 724
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Synchronized string UUID generation convenience method.</p>

    <p>We saw null and empty strings returned from UUID.randomUUID().toString() when used from multiple threads and there is no clear answer on the net about whether it is really thread-safe or not. </p>

    <p>One of the major users of UUIDs is the built-in lease and checkpoint manager, which can be replaced by user implementations. This UUID generation method is public so user implementations can use it as well and avoid the problems.</p>

    <p></p>
  syntax:
    content: public static String safeCreateUUID()
    return:
      type: "26831127"
      description: <p>A string UUID with dashes but no curly brackets. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.setAutoExecutorShutdown(boolean)
  id: setAutoExecutorShutdown(boolean)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: setAutoExecutorShutdown(boolean auto)
  nameWithType: EventProcessorHost.setAutoExecutorShutdown(boolean auto)
  fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.setAutoExecutorShutdown(boolean auto)
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.setAutoExecutorShutdown*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 586
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>

      <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> can automatically shut down its internal ExecutorService when the last host shuts down due to an <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor()" data-throw-if-not-resolved="false"></xref> call. However, doing so means that any <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> instances created after that will be unable to function. Set this option to true only if you are sure that you will only ever call unregisterEventProcess() when the process is shutting down. </p>

    <p>If you leave this option as the default false, then you should call <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)" data-throw-if-not-resolved="false"></xref> at the appropriate time. </p>

    <p>If using a user-supplied ExecutorService, then this option must remain false.</p>

    <p></p>
  syntax:
    content: public static void setAutoExecutorShutdown(boolean auto)
    parameters:
    - id: auto
      type: 4fc6e284
      description: <p>true for automatic shutdown, false for manual via <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)" data-throw-if-not-resolved="false"></xref></p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor()
  id: unregisterEventProcessor()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  langs:
  - java
  name: unregisterEventProcessor()
  nameWithType: EventProcessorHost.unregisterEventProcessor()
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorHost.unregisterEventProcessor()
  overload: com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
    startLine: 517
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Stop processing events.</p>

    <p>Does not return until the shutdown is complete. </p>
  syntax: &o3
    content: public void unregisterEventProcessor()
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
  name: EventProcessorHost
  nameWithType: EventProcessorHost.EventProcessorHost
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost
  package: com.microsoft.azure.eventprocessorhost
- uid: ebf10a33
  spec.java:
  - name: final ExecutorService
    fullName: final ExecutorService
- uid: ddc463eb
  spec.java:
  - name: ExecutorService
    fullName: ExecutorService
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getHostName*
  name: getHostName
  nameWithType: EventProcessorHost.getHostName
  fullName: String com.microsoft.azure.eventprocessorhost.EventProcessorHost.getHostName
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubConnectionString*
  name: getEventHubConnectionString
  nameWithType: EventProcessorHost.getEventHubConnectionString
  fullName: String com.microsoft.azure.eventprocessorhost.EventProcessorHost.getEventHubConnectionString
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory7e6ad1eb
  spec.java:
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory
    name: IEventProcessorFactory
    fullName: com.microsoft.azure.eventprocessorhost.IEventProcessorFactory
    href: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.yml
  - name: <?>
    fullName: <?>
- uid: 10f8d850
  spec.java:
  - name: Future<?>
    fullName: Future<?>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory*
  name: registerEventProcessorFactory
  nameWithType: EventProcessorHost.registerEventProcessorFactory
  fullName: Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor*
  name: unregisterEventProcessor
  nameWithType: EventProcessorHost.unregisterEventProcessor
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorHost.unregisterEventProcessor
  package: com.microsoft.azure.eventprocessorhost
- uid: ffb09d2d
  spec.java:
  - name: Class<T>
    fullName: Class<T>
- uid: 36136266com.microsoft.azure.eventprocessorhost._i_event_processor3358aef8
  spec.java:
  - name: '<T extends '
    fullName: '<T extends '
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor
    name: IEventProcessor
    fullName: com.microsoft.azure.eventprocessorhost.IEventProcessor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
  - name: '> Future<?>'
    fullName: '> Future<?>'
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor*
  name: registerEventProcessor
  nameWithType: EventProcessorHost.registerEventProcessor
  fullName: public<T extends IEventProcessor> Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessor
  package: com.microsoft.azure.eventprocessorhost
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.setAutoExecutorShutdown*
  name: setAutoExecutorShutdown
  nameWithType: EventProcessorHost.setAutoExecutorShutdown
  fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.setAutoExecutorShutdown
  package: com.microsoft.azure.eventprocessorhost
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown*
  name: forceExecutorShutdown
  nameWithType: EventProcessorHost.forceExecutorShutdown
  fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.forceExecutorShutdown
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName*
  name: createHostName
  nameWithType: EventProcessorHost.createHostName
  fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.createHostName
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.safeCreateUUID*
  name: safeCreateUUID
  nameWithType: EventProcessorHost.safeCreateUUID
  fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.safeCreateUUID
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getCheckpointManager()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getConsumerGroupName()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubPath()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getEventProcessorOptions()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getExecutorService()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getLeaseManager()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getPartitionManager()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getProcessorFactory()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.log(Level,String)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHost(Level,String)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHost(Level,String,Throwable)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHostAndPartition(Level,String,String)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHostAndPartition(Level,String,String,Throwable)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHostAndPartition(Level,PartitionContext,String)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.logWithHostAndPartition(Level,PartitionContext,String,Throwable)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.setPartitionManager(PartitionManager)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.stopExecutor()
- uid: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager.yml
  name: ICheckpointManager
  nameWithType: ICheckpointManager
  fullName: com.microsoft.azure.eventprocessorhost.ICheckpointManager
  type: Interface
  syntax:
    content: public interface ICheckpointManager
- uid: com.microsoft.azure.eventprocessorhost._i_lease_manager
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_lease_manager.yml
  name: ILeaseManager
  nameWithType: ILeaseManager
  fullName: com.microsoft.azure.eventprocessorhost.ILeaseManager
  type: Interface
  syntax:
    content: public interface ILeaseManager
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.yml
  name: IEventProcessorFactory<T>
  nameWithType: IEventProcessorFactory<T>
  fullName: com.microsoft.azure.eventprocessorhost.IEventProcessorFactory<T>
  type: Interface
  summary: >-
    <p>Interface that must be implemented by an event processor factory class.</p>

    <p>User-provided factories are needed if creating an event processor object requires more work than just a new with a parameterless constructor.</p>

    <p></p>
  syntax:
    content: public interface IEventProcessorFactory<T extends IEventProcessor>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>The type of event processor objects produced by this factory, which must implement <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false"></xref></p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  type: Class
  syntax:
    content: public class EventProcessorOptions
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  name: createHostName(String prefix)
  nameWithType: EventProcessorHost.createHostName(String prefix)
  fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.createHostName(String prefix)
  type: Method
  summary: >-
    <p>Convenience method for generating unique host names, safe to pass to the <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> constructors that take a hostName argument.</p>

    <p>If a prefix is supplied, the constructed name begins with that string. If the prefix argument is null or an empty string, the constructed name begins with "javahost". Then a dash '-' and a UUID are appended to create a unique name.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: com.microsoft.azure.eventprocessorhost.IEventProcessor
  type: Interface
  summary: >-
    <p>Interface that must be implemented by event processor classes.</p>

    <p>Any given instance of an event processor class will only process events from one partition of one Event Hub. A <xref href="com.microsoft.azure.eventprocessorhost._partition_context" data-throw-if-not-resolved="false"></xref> is provided with each call to the event processor because some parameters could change, but it will always be the same partition. </p>

    <p>Although <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> is multithreaded, calls to a given instance of an event processor class are serialized, except for <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)" data-throw-if-not-resolved="false"></xref>. <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen(PartitionContext)" data-throw-if-not-resolved="false"></xref> is called first, then <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref> will be called zero or more times. When the event processor needs to be shut down, whether because there was a failure somewhere, or the lease for the partition has been lost, or because the entire processor host is being shut down, <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)" data-throw-if-not-resolved="false"></xref> is called after the last <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref> call returns. </p>

    <p>

      <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)" data-throw-if-not-resolved="false"></xref> could be called while <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref> or <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)" data-throw-if-not-resolved="false"></xref> is executing. No synchronization is attempted in order to avoid possibly deadlocking. </p>
  syntax:
    content: public interface IEventProcessor
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  name: EventProcessorHost
  nameWithType: EventProcessorHost
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
  type: Class
  syntax: *o2
- uid: com.microsoft.azure.eventprocessorhost._partition_context
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._partition_context.yml
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: com.microsoft.azure.eventprocessorhost.PartitionContext
  type: Class
  syntax:
    content: public class PartitionContext
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  name: unregisterEventProcessor()
  nameWithType: EventProcessorHost.unregisterEventProcessor()
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorHost.unregisterEventProcessor()
  type: Method
  summary: >-
    <p>Stop processing events.</p>

    <p>Does not return until the shutdown is complete. </p>
  syntax: *o3
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_host
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  name: forceExecutorShutdown(long secondsToWait)
  nameWithType: EventProcessorHost.forceExecutorShutdown(long secondsToWait)
  fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.forceExecutorShutdown(long secondsToWait)
  type: Method
  summary: >-
    <p>If you do not want to use the automatic shutdown option, then you must call <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)" data-throw-if-not-resolved="false"></xref> during process termination, after the last call to <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor()" data-throw-if-not-resolved="false"></xref> has returned. Be sure that you will not need to create any new <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> instances, because calling this method means that any new instances will fail when a register* method is called. </p>

    <p>If using a user-supplied ExecutorService, calling this method is not required and has no effect.</p>

    <p></p>
  syntax: *o4
