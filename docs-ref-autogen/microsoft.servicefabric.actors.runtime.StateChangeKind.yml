### YamlMime:JavaEnum
fields:
- fullName: microsoft.servicefabric.actors.runtime.StateChangeKind.Add
  name: Add
  nameWithType: StateChangeKind.Add
  summary: <p>The state needs to be added. </p>
  uid: microsoft.servicefabric.actors.runtime.StateChangeKind.Add
- fullName: microsoft.servicefabric.actors.runtime.StateChangeKind.None
  name: None
  nameWithType: StateChangeKind.None
  summary: <p>No change in state. </p>
  uid: microsoft.servicefabric.actors.runtime.StateChangeKind.None
- fullName: microsoft.servicefabric.actors.runtime.StateChangeKind.Remove
  name: Remove
  nameWithType: StateChangeKind.Remove
  summary: <p>The state needs to be removed. </p>
  uid: microsoft.servicefabric.actors.runtime.StateChangeKind.Remove
- fullName: microsoft.servicefabric.actors.runtime.StateChangeKind.Update
  name: Update
  nameWithType: StateChangeKind.Update
  summary: <p>The state needs to be updated. </p>
  uid: microsoft.servicefabric.actors.runtime.StateChangeKind.Update
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.lang.Enum&lt;StateChangeKind&gt;" data-throw-if-not-resolved="False"/>
nameWithType: StateChangeKind
syntax: public enum StateChangeKind
uid: microsoft.servicefabric.actors.runtime.StateChangeKind
name: StateChangeKind
package: microsoft.servicefabric.actors.runtime
summary: <p>Represents kind of state change for an actor state when <xref uid="" data-throw-if-not-resolved="false">ActorStateProvider#saveStateAsync(ActorId, java.util.List, CancellationToken)</xref> saves changes to a set of actor states. </p>
metadata: {}
