### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter"
fullName: "com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter"
name: "TaskAddCollectionParameter"
nameWithType: "TaskAddCollectionParameter"
summary: "A collection of Azure Batch Tasks to add."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TaskAddCollectionParameter"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter.TaskAddCollectionParameter()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter.TaskAddCollectionParameter()"
  name: "TaskAddCollectionParameter()"
  nameWithType: "TaskAddCollectionParameter.TaskAddCollectionParameter()"
  syntax: "public TaskAddCollectionParameter()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter.value()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter.value()"
  name: "value()"
  nameWithType: "TaskAddCollectionParameter.value()"
  summary: "Get the total serialized size of this collection must be less than 1MB."
  syntax: "public List<TaskAddParameter> value()"
  desc: "Get the total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks."
  returns:
    description: "the value value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter.withValue(java.util.List<com.microsoft.azure.batch.protocol.models.TaskAddParameter>)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter.withValue(List<TaskAddParameter> value)"
  name: "withValue(List<TaskAddParameter> value)"
  nameWithType: "TaskAddCollectionParameter.withValue(List<TaskAddParameter> value)"
  summary: "Set the total serialized size of this collection must be less than 1MB."
  parameters:
  - description: "the value value to set"
    name: "value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TaskAddCollectionParameter withValue(List<TaskAddParameter> value)"
  desc: "Set the total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks."
  returns:
    description: "the TaskAddCollectionParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionParameter&text=TaskAddCollectionParameter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A collection of Azure Batch Tasks to add."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
