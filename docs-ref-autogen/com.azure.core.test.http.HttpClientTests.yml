### YamlMime:JavaType
uid: "com.azure.core.test.http.HttpClientTests"
fullName: "com.azure.core.test.http.HttpClientTests"
name: "HttpClientTests"
nameWithType: "HttpClientTests"
summary: "Generic test suite for <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClients\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public abstract class **HttpClientTests**"
constructors:
- uid: "com.azure.core.test.http.HttpClientTests.HttpClientTests()"
  fullName: "com.azure.core.test.http.HttpClientTests.HttpClientTests()"
  name: "HttpClientTests()"
  nameWithType: "HttpClientTests.HttpClientTests()"
  syntax: "public HttpClientTests()"
fields:
- uid: "com.azure.core.test.http.HttpClientTests.ECHO_RESPONSE"
  fullName: "com.azure.core.test.http.HttpClientTests.ECHO_RESPONSE"
  name: "ECHO_RESPONSE"
  nameWithType: "HttpClientTests.ECHO_RESPONSE"
  modifiers:
  - "protected"
  - "static"
  - "final"
  field:
    value: "echo"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "protected static final String ECHO_RESPONSE"
methods:
- uid: "com.azure.core.test.http.HttpClientTests.<T>createService(java.lang.Class<T>)"
  fullName: "com.azure.core.test.http.HttpClientTests.createService(Class<T> serviceClass)"
  name: "createService(Class<T> serviceClass)"
  nameWithType: "HttpClientTests.createService(Class<T> serviceClass)"
  modifiers:
  - "protected"
  parameters:
  - name: "serviceClass"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected T <T>createService(Class<T> serviceClass)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.HttpClientTests.<T>createService(java.lang.Class<T>,com.azure.core.http.HttpClient)"
  fullName: "com.azure.core.test.http.HttpClientTests.createService(Class<T> serviceClass, HttpClient httpClient)"
  name: "createService(Class<T> serviceClass, HttpClient httpClient)"
  nameWithType: "HttpClientTests.createService(Class<T> serviceClass, HttpClient httpClient)"
  modifiers:
  - "protected"
  parameters:
  - name: "serviceClass"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected T <T>createService(Class<T> serviceClass, HttpClient httpClient)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.HttpClientTests.asyncCompletableHeadRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncCompletableHeadRequest()"
  name: "asyncCompletableHeadRequest()"
  nameWithType: "HttpClientTests.asyncCompletableHeadRequest()"
  summary: "Tests that a HEAD request is sent correctly."
  syntax: "public void asyncCompletableHeadRequest()"
  desc: "Tests that a HEAD request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncDeleteRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncDeleteRequest()"
  name: "asyncDeleteRequest()"
  nameWithType: "HttpClientTests.asyncDeleteRequest()"
  summary: "Tests that a DELETE request is sent correctly."
  syntax: "public void asyncDeleteRequest()"
  desc: "Tests that a DELETE request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncGetRequestWithAnything()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncGetRequestWithAnything()"
  name: "asyncGetRequestWithAnything()"
  nameWithType: "HttpClientTests.asyncGetRequestWithAnything()"
  summary: "Tests that a response with a return type of <xref uid=\"com.azure.core.test.implementation.entities.HttpBinJson\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpBinJson\"></xref> is correctly handled."
  syntax: "public void asyncGetRequestWithAnything()"
  desc: "Tests that a response with a return type of <xref uid=\"com.azure.core.test.implementation.entities.HttpBinJson\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpBinJson\"></xref> is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncGetRequestWithHeaderParametersAndAnything()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncGetRequestWithHeaderParametersAndAnything()"
  name: "asyncGetRequestWithHeaderParametersAndAnything()"
  nameWithType: "HttpClientTests.asyncGetRequestWithHeaderParametersAndAnything()"
  summary: "Tests that a request with header parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HeaderParam\"></xref>) is correctly handled."
  syntax: "public void asyncGetRequestWithHeaderParametersAndAnything()"
  desc: "Tests that a request with header parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HeaderParam\"></xref>) is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncGetRequestWithNoReturn()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncGetRequestWithNoReturn()"
  name: "asyncGetRequestWithNoReturn()"
  nameWithType: "HttpClientTests.asyncGetRequestWithNoReturn()"
  summary: "Tests that a response with no return type is correctly handled."
  syntax: "public void asyncGetRequestWithNoReturn()"
  desc: "Tests that a response with no return type is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncGetRequestWithQueryParametersAndAnything()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncGetRequestWithQueryParametersAndAnything()"
  name: "asyncGetRequestWithQueryParametersAndAnything()"
  nameWithType: "HttpClientTests.asyncGetRequestWithQueryParametersAndAnything()"
  summary: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) that need encoding is correctly handled."
  syntax: "public void asyncGetRequestWithQueryParametersAndAnything()"
  desc: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) that need encoding is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncHeadBooleanRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncHeadBooleanRequest()"
  name: "asyncHeadBooleanRequest()"
  nameWithType: "HttpClientTests.asyncHeadBooleanRequest()"
  summary: "Tests that a HEAD request is sent correctly."
  syntax: "public void asyncHeadBooleanRequest()"
  desc: "Tests that a HEAD request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncHeadRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncHeadRequest()"
  name: "asyncHeadRequest()"
  nameWithType: "HttpClientTests.asyncHeadRequest()"
  summary: "Tests that a HEAD request is sent correctly."
  syntax: "public void asyncHeadRequest()"
  desc: "Tests that a HEAD request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncHeadersRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncHeadersRequest()"
  name: "asyncHeadersRequest()"
  nameWithType: "HttpClientTests.asyncHeadersRequest()"
  summary: "Tests that a request with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Headers\"></xref> adds the headers to the request correctly."
  syntax: "public void asyncHeadersRequest()"
  desc: "Tests that a request with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Headers\"></xref> adds the headers to the request correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncHttpsHeadersRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncHttpsHeadersRequest()"
  name: "asyncHttpsHeadersRequest()"
  nameWithType: "HttpClientTests.asyncHttpsHeadersRequest()"
  summary: "Tests that a request with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Headers\"></xref> adds the headers to the request correctly."
  syntax: "public void asyncHttpsHeadersRequest()"
  desc: "Tests that a request with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Headers\"></xref> adds the headers to the request correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPatchRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPatchRequest()"
  name: "asyncPatchRequest()"
  nameWithType: "HttpClientTests.asyncPatchRequest()"
  summary: "Tests that a PATCH request is sent correctly."
  syntax: "public void asyncPatchRequest()"
  desc: "Tests that a PATCH request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPostRequestWithStringBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPostRequestWithStringBody()"
  name: "asyncPostRequestWithStringBody()"
  nameWithType: "HttpClientTests.asyncPostRequestWithStringBody()"
  summary: "Tests that a request with an octet-stream body is correctly handled."
  syntax: "public void asyncPostRequestWithStringBody()"
  desc: "Tests that a request with an octet-stream body is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBinaryDataBodyAndEqualContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBinaryDataBodyAndEqualContentLength()"
  name: "asyncPutRequestWithBinaryDataBodyAndEqualContentLength()"
  nameWithType: "HttpClientTests.asyncPutRequestWithBinaryDataBodyAndEqualContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is equal to the content length is correctly handled."
  syntax: "public void asyncPutRequestWithBinaryDataBodyAndEqualContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is equal to the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBinaryDataBodyAndLessThanContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBinaryDataBodyAndLessThanContentLength()"
  name: "asyncPutRequestWithBinaryDataBodyAndLessThanContentLength()"
  nameWithType: "HttpClientTests.asyncPutRequestWithBinaryDataBodyAndLessThanContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is less than the content length is correctly handled."
  syntax: "public void asyncPutRequestWithBinaryDataBodyAndLessThanContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is less than the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBinaryDataBodyAndMoreThanContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBinaryDataBodyAndMoreThanContentLength()"
  name: "asyncPutRequestWithBinaryDataBodyAndMoreThanContentLength()"
  nameWithType: "HttpClientTests.asyncPutRequestWithBinaryDataBodyAndMoreThanContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is greater than the content length is correctly handled."
  syntax: "public void asyncPutRequestWithBinaryDataBodyAndMoreThanContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is greater than the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBodyAndEqualContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBodyAndEqualContentLength()"
  name: "asyncPutRequestWithBodyAndEqualContentLength()"
  nameWithType: "HttpClientTests.asyncPutRequestWithBodyAndEqualContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is equal to the content length is correctly handled."
  syntax: "public void asyncPutRequestWithBodyAndEqualContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is equal to the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBodyAndLessThanContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBodyAndLessThanContentLength()"
  name: "asyncPutRequestWithBodyAndLessThanContentLength()"
  nameWithType: "HttpClientTests.asyncPutRequestWithBodyAndLessThanContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is less than the content length is correctly handled."
  syntax: "public void asyncPutRequestWithBodyAndLessThanContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is less than the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBodyAndMoreThanContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithBodyAndMoreThanContentLength()"
  name: "asyncPutRequestWithBodyAndMoreThanContentLength()"
  nameWithType: "HttpClientTests.asyncPutRequestWithBodyAndMoreThanContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is greater than the content length is correctly handled."
  syntax: "public void asyncPutRequestWithBodyAndMoreThanContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is greater than the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithIntBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithIntBody()"
  name: "asyncPutRequestWithIntBody()"
  nameWithType: "HttpClientTests.asyncPutRequestWithIntBody()"
  summary: "Tests that a request with an octet-stream body where th body is a single value binary is correctly handled."
  syntax: "public void asyncPutRequestWithIntBody()"
  desc: "Tests that a request with an octet-stream body where th body is a single value binary is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithStreamBinaryDataBodyAndLessThanContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithStreamBinaryDataBodyAndLessThanContentLength()"
  name: "asyncPutRequestWithStreamBinaryDataBodyAndLessThanContentLength()"
  nameWithType: "HttpClientTests.asyncPutRequestWithStreamBinaryDataBodyAndLessThanContentLength()"
  summary: "Length<wbr>Validating<wbr>Input<wbr>Stream in rest proxy relies on reader reaching EOF."
  syntax: "public void asyncPutRequestWithStreamBinaryDataBodyAndLessThanContentLength()"
  desc: "LengthValidatingInputStream in rest proxy relies on reader reaching EOF. This test specifically targets InputStream to assert this behavior."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithStreamBinaryDataBodyAndMoreThanContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithStreamBinaryDataBodyAndMoreThanContentLength()"
  name: "asyncPutRequestWithStreamBinaryDataBodyAndMoreThanContentLength()"
  nameWithType: "HttpClientTests.asyncPutRequestWithStreamBinaryDataBodyAndMoreThanContentLength()"
  summary: "Length<wbr>Validating<wbr>Input<wbr>Stream in rest proxy relies on reader reaching EOF."
  syntax: "public void asyncPutRequestWithStreamBinaryDataBodyAndMoreThanContentLength()"
  desc: "LengthValidatingInputStream in rest proxy relies on reader reaching EOF. This test specifically targets InputStream to assert this behavior."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponse()"
  name: "asyncPutRequestWithUnexpectedResponse()"
  nameWithType: "HttpClientTests.asyncPutRequestWithUnexpectedResponse()"
  summary: "Tests that an unexpected response is handled correctly."
  syntax: "public void asyncPutRequestWithUnexpectedResponse()"
  desc: "Tests that an unexpected response is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  name: "asyncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  nameWithType: "HttpClientTests.asyncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  summary: "Tests that a status code specific unexpected response is handled correctly."
  syntax: "public void asyncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  desc: "Tests that a status code specific unexpected response is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponseAndExceptionType()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponseAndExceptionType()"
  name: "asyncPutRequestWithUnexpectedResponseAndExceptionType()"
  nameWithType: "HttpClientTests.asyncPutRequestWithUnexpectedResponseAndExceptionType()"
  summary: "Tests that a specific unexpected response is handled correctly."
  syntax: "public void asyncPutRequestWithUnexpectedResponseAndExceptionType()"
  desc: "Tests that a specific unexpected response is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  name: "asyncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  nameWithType: "HttpClientTests.asyncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  summary: "Tests that an unexpected response that falls through to the default type is handled correctly."
  syntax: "public void asyncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  desc: "Tests that an unexpected response that falls through to the default type is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  name: "asyncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  nameWithType: "HttpClientTests.asyncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  summary: "Tests that an unexpected response that falls through without a default type falls back to a global default is handled correctly."
  syntax: "public void asyncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  desc: "Tests that an unexpected response that falls through without a default type falls back to a global default is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.asyncRequestWithByteArrayReturnType()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncRequestWithByteArrayReturnType()"
  name: "asyncRequestWithByteArrayReturnType()"
  nameWithType: "HttpClientTests.asyncRequestWithByteArrayReturnType()"
  summary: "Tests that the response body is correctly returned as a byte array."
  syntax: "public void asyncRequestWithByteArrayReturnType()"
  desc: "Tests that the response body is correctly returned as a byte array."
- uid: "com.azure.core.test.http.HttpClientTests.asyncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  name: "asyncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  nameWithType: "HttpClientTests.asyncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  summary: "Tests that the response body is correctly returned as a byte array."
  syntax: "public void asyncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  desc: "Tests that the response body is correctly returned as a byte array."
- uid: "com.azure.core.test.http.HttpClientTests.asyncRequestWithMultipleHostParams()"
  fullName: "com.azure.core.test.http.HttpClientTests.asyncRequestWithMultipleHostParams()"
  name: "asyncRequestWithMultipleHostParams()"
  nameWithType: "HttpClientTests.asyncRequestWithMultipleHostParams()"
  summary: "Tests that a request with multiple host parameters is correctly handled."
  syntax: "public void asyncRequestWithMultipleHostParams()"
  desc: "Tests that a request with multiple host parameters is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.binaryDataUploadTest()"
  fullName: "com.azure.core.test.http.HttpClientTests.binaryDataUploadTest()"
  name: "binaryDataUploadTest()"
  nameWithType: "HttpClientTests.binaryDataUploadTest()"
  summary: "This test verifies that a File-based Binary<wbr>Data is uploaded correctly."
  syntax: "public void binaryDataUploadTest()"
  exceptions:
  - description: "If the file resource cannot be found."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Exception.html\">Exception</a>"
  desc: "This test verifies that a File-based BinaryData is uploaded correctly."
- uid: "com.azure.core.test.http.HttpClientTests.bomWithDifferentHeader()"
  fullName: "com.azure.core.test.http.HttpClientTests.bomWithDifferentHeader()"
  name: "bomWithDifferentHeader()"
  nameWithType: "HttpClientTests.bomWithDifferentHeader()"
  summary: "Tests that a response with a byte order marker and 'Content-Type' header will defer to using the BOM encoding."
  syntax: "public void bomWithDifferentHeader()"
  desc: "Tests that a response with a byte order marker and 'Content-Type' header will defer to using the BOM encoding."
- uid: "com.azure.core.test.http.HttpClientTests.bomWithSameHeader()"
  fullName: "com.azure.core.test.http.HttpClientTests.bomWithSameHeader()"
  name: "bomWithSameHeader()"
  nameWithType: "HttpClientTests.bomWithSameHeader()"
  summary: "Tests that a response with a byte order marker and 'Content-Type' header will defer to using the BOM encoding."
  syntax: "public void bomWithSameHeader()"
  desc: "Tests that a response with a byte order marker and 'Content-Type' header will defer to using the BOM encoding."
- uid: "com.azure.core.test.http.HttpClientTests.bufferedResponseCanBeReadMultipleTimes()"
  fullName: "com.azure.core.test.http.HttpClientTests.bufferedResponseCanBeReadMultipleTimes()"
  name: "bufferedResponseCanBeReadMultipleTimes()"
  nameWithType: "HttpClientTests.bufferedResponseCanBeReadMultipleTimes()"
  summary: "Tests that buffered response is indeed buffered, i.<wbr>e."
  syntax: "public void bufferedResponseCanBeReadMultipleTimes()"
  exceptions:
  - description: "When IO fails."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Tests that buffered response is indeed buffered, i.e. content can be accessed many times."
- uid: "com.azure.core.test.http.HttpClientTests.canAccessResponseBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.canAccessResponseBody()"
  name: "canAccessResponseBody()"
  nameWithType: "HttpClientTests.canAccessResponseBody()"
  summary: "Tests that unbuffered response body can be accessed."
  syntax: "public void canAccessResponseBody()"
  exceptions:
  - description: "When IO fails."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Tests that unbuffered response body can be accessed."
- uid: "com.azure.core.test.http.HttpClientTests.canSendByteArrayBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendByteArrayBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendByteArrayBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendByteArrayBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendByteArrayBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendByteBufferBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendByteBufferBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendByteBufferBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendByteBufferBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendByteBufferBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendFileBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendFileBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendFileBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendFileBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendFileBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendKnownLengthNoBufferAsyncFluxBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendKnownLengthNoBufferAsyncFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendKnownLengthNoBufferAsyncFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendKnownLengthNoBufferAsyncFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendKnownLengthNoBufferAsyncFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendKnownLengthNoBufferFluxBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendKnownLengthNoBufferFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendKnownLengthNoBufferFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendKnownLengthNoBufferFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendKnownLengthNoBufferFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendObjectBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendObjectBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendObjectBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendObjectBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendObjectBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendSliceFileBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendSliceFileBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendSliceFileBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendSliceFileBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendSliceFileBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendStreamBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendStreamBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendStreamBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendStreamBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendStreamBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendStringBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendStringBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendStringBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendStringBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendStringBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendUnknownLengthNoBufferAsyncFluxBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendUnknownLengthNoBufferAsyncFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendUnknownLengthNoBufferAsyncFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendUnknownLengthNoBufferAsyncFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendUnknownLengthNoBufferAsyncFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.canSendUnknownLengthNoBufferFluxBinaryData(com.azure.core.util.BinaryData,byte[],com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer)"
  fullName: "com.azure.core.test.http.HttpClientTests.canSendUnknownLengthNoBufferFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  name: "canSendUnknownLengthNoBufferFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  nameWithType: "HttpClientTests.canSendUnknownLengthNoBufferFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  summary: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
  parameters:
  - description: "The BinaryData that contains random bytes."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected bytes in the echo response."
    name: "expectedResponseBody"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The consumer that sends the request and validates the response."
    name: "consumer"
    type: "<xref href=\"com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer?alt=com.azure.core.test.http.HttpClientTests.BinaryDataTestConsumer&text=BinaryDataTestConsumer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void canSendUnknownLengthNoBufferFluxBinaryData(BinaryData requestBody, byte[] expectedResponseBody, HttpClientTests.BinaryDataTestConsumer consumer)"
  desc: "Tests that send random bytes in various forms to an endpoint that echoes bytes back to sender."
- uid: "com.azure.core.test.http.HttpClientTests.createHttpClient()"
  fullName: "com.azure.core.test.http.HttpClientTests.createHttpClient()"
  name: "createHttpClient()"
  nameWithType: "HttpClientTests.createHttpClient()"
  summary: "Get the HTTP client that will be used for each test."
  modifiers:
  - "protected"
  - "abstract"
  syntax: "protected abstract HttpClient createHttpClient()"
  desc: "Get the HTTP client that will be used for each test. This will be called once per test."
  returns:
    description: "The HTTP client to use for each test."
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.HttpClientTests.eagerlyConvertedHeadersAreHttpHeaders()"
  fullName: "com.azure.core.test.http.HttpClientTests.eagerlyConvertedHeadersAreHttpHeaders()"
  name: "eagerlyConvertedHeadersAreHttpHeaders()"
  nameWithType: "HttpClientTests.eagerlyConvertedHeadersAreHttpHeaders()"
  summary: "Tests that eagerly converting implementation HTTP headers to azure-core Http<wbr>Headers is done."
  syntax: "public void eagerlyConvertedHeadersAreHttpHeaders()"
  desc: "Tests that eagerly converting implementation HTTP headers to azure-core HttpHeaders is done."
- uid: "com.azure.core.test.http.HttpClientTests.fluxUploadTest()"
  fullName: "com.azure.core.test.http.HttpClientTests.fluxUploadTest()"
  name: "fluxUploadTest()"
  nameWithType: "HttpClientTests.fluxUploadTest()"
  summary: "This test verifies that a File-based Flux is uploaded correctly."
  syntax: "public void fluxUploadTest()"
  exceptions:
  - description: "If the file resource cannot be found."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Exception.html\">Exception</a>"
  desc: "This test verifies that a File-based Flux is uploaded correctly."
- uid: "com.azure.core.test.http.HttpClientTests.getByteArrayAsyncWithNoExpectedResponses()"
  fullName: "com.azure.core.test.http.HttpClientTests.getByteArrayAsyncWithNoExpectedResponses()"
  name: "getByteArrayAsyncWithNoExpectedResponses()"
  nameWithType: "HttpClientTests.getByteArrayAsyncWithNoExpectedResponses()"
  summary: "Tests that the response body is correctly returned as a byte array."
  syntax: "public void getByteArrayAsyncWithNoExpectedResponses()"
  desc: "Tests that the response body is correctly returned as a byte array."
- uid: "com.azure.core.test.http.HttpClientTests.getPort()"
  fullName: "com.azure.core.test.http.HttpClientTests.getPort()"
  name: "getPort()"
  nameWithType: "HttpClientTests.getPort()"
  summary: "Get the dynamic port the server is using to properly route the request."
  deprecatedTag: "Use <xref uid=\"com.azure.core.test.http.HttpClientTests.getServerUri(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getServerUri(boolean)\"></xref> instead."
  modifiers:
  - "protected"
  - "abstract"
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>protected abstract int getPort()"
  desc: "Get the dynamic port the server is using to properly route the request."
  hasDeprecatedTag: true
  returns:
    description: "The HTTP port is using."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.HttpClientTests.getRequestUrl(java.lang.String)"
  fullName: "com.azure.core.test.http.HttpClientTests.getRequestUrl(String requestPath)"
  name: "getRequestUrl(String requestPath)"
  nameWithType: "HttpClientTests.getRequestUrl(String requestPath)"
  summary: "Gets the request URL for given path."
  modifiers:
  - "protected"
  parameters:
  - description: "The path."
    name: "requestPath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "protected URL getRequestUrl(String requestPath)"
  desc: "Gets the request URL for given path."
  returns:
    description: "The request URL for given path."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/net/URL.html\">URL</a>"
- uid: "com.azure.core.test.http.HttpClientTests.getServerUri(boolean)"
  fullName: "com.azure.core.test.http.HttpClientTests.getServerUri(boolean secure)"
  name: "getServerUri(boolean secure)"
  nameWithType: "HttpClientTests.getServerUri(boolean secure)"
  summary: "Gets the dynamic URI the server is using to properly route the request."
  modifiers:
  - "protected"
  - "abstract"
  parameters:
  - description: "Flag indicating if the URI should be for a secure connection or not."
    name: "secure"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract String getServerUri(boolean secure)"
  desc: "Gets the dynamic URI the server is using to properly route the request."
  returns:
    description: "The URI the server is using."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.test.http.HttpClientTests.headerResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.headerResponse()"
  name: "headerResponse()"
  nameWithType: "HttpClientTests.headerResponse()"
  summary: "Tests that a response with a 'Content-Type' header encodes using the specified charset."
  syntax: "public void headerResponse()"
  desc: "Tests that a response with a 'Content-Type' header encodes using the specified charset."
- uid: "com.azure.core.test.http.HttpClientTests.invalidHeaderResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.invalidHeaderResponse()"
  name: "invalidHeaderResponse()"
  nameWithType: "HttpClientTests.invalidHeaderResponse()"
  summary: "Tests that a response with a 'Content-Type' containing an invalid or unsupported charset encodes using UTF-8."
  syntax: "public void invalidHeaderResponse()"
  desc: "Tests that a response with a 'Content-Type' containing an invalid or unsupported charset encodes using UTF-8."
- uid: "com.azure.core.test.http.HttpClientTests.isSecure()"
  fullName: "com.azure.core.test.http.HttpClientTests.isSecure()"
  name: "isSecure()"
  nameWithType: "HttpClientTests.isSecure()"
  summary: "Get a flag indicating if communication should be secured or not (https or http)."
  modifiers:
  - "protected"
  syntax: "protected boolean isSecure()"
  desc: "Get a flag indicating if communication should be secured or not (https or http)."
  returns:
    description: "A flag indicating if communication should be secured or not (https or http)."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.HttpClientTests.plainResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.plainResponse()"
  name: "plainResponse()"
  nameWithType: "HttpClientTests.plainResponse()"
  summary: "Tests that a response without a byte order mark or a 'Content-Type' header encodes using UTF-8."
  syntax: "public void plainResponse()"
  desc: "Tests that a response without a byte order mark or a 'Content-Type' header encodes using UTF-8."
- uid: "com.azure.core.test.http.HttpClientTests.postUrlForm()"
  fullName: "com.azure.core.test.http.HttpClientTests.postUrlForm()"
  name: "postUrlForm()"
  nameWithType: "HttpClientTests.postUrlForm()"
  summary: "This test verifies that the form parameters are encoded when the encoded flag is set to false."
  syntax: "public void postUrlForm()"
  desc: "This test verifies that the form parameters are encoded when the encoded flag is set to false."
- uid: "com.azure.core.test.http.HttpClientTests.postUrlFormEncoded()"
  fullName: "com.azure.core.test.http.HttpClientTests.postUrlFormEncoded()"
  name: "postUrlFormEncoded()"
  nameWithType: "HttpClientTests.postUrlFormEncoded()"
  summary: "This test verifies that the form parameters aren't encoded when the encoded flag is set to true."
  syntax: "public void postUrlFormEncoded()"
  desc: "This test verifies that the form parameters aren't encoded when the encoded flag is set to true."
- uid: "com.azure.core.test.http.HttpClientTests.rawFluxDownloadTest()"
  fullName: "com.azure.core.test.http.HttpClientTests.rawFluxDownloadTest()"
  name: "rawFluxDownloadTest()"
  nameWithType: "HttpClientTests.rawFluxDownloadTest()"
  summary: "This test verifies that a raw Flux is downloaded correctly."
  syntax: "public void rawFluxDownloadTest()"
  desc: "This test verifies that a raw Flux is downloaded correctly."
- uid: "com.azure.core.test.http.HttpClientTests.requestOptionsAddAHeader()"
  fullName: "com.azure.core.test.http.HttpClientTests.requestOptionsAddAHeader()"
  name: "requestOptionsAddAHeader()"
  nameWithType: "HttpClientTests.requestOptionsAddAHeader()"
  summary: "This test verifies that add header adds a header to the request."
  syntax: "public void requestOptionsAddAHeader()"
  desc: "This test verifies that add header adds a header to the request."
- uid: "com.azure.core.test.http.HttpClientTests.requestOptionsChangesBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.requestOptionsChangesBody()"
  name: "requestOptionsChangesBody()"
  nameWithType: "HttpClientTests.requestOptionsChangesBody()"
  summary: "This test verifies that the body is overridden by the request options."
  syntax: "public void requestOptionsChangesBody()"
  desc: "This test verifies that the body is overridden by the request options."
- uid: "com.azure.core.test.http.HttpClientTests.requestOptionsChangesBodyAndContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.requestOptionsChangesBodyAndContentLength()"
  name: "requestOptionsChangesBodyAndContentLength()"
  nameWithType: "HttpClientTests.requestOptionsChangesBodyAndContentLength()"
  summary: "This test verifies that the body and content length header is overridden by the request options."
  syntax: "public void requestOptionsChangesBodyAndContentLength()"
  desc: "This test verifies that the body and content length header is overridden by the request options."
- uid: "com.azure.core.test.http.HttpClientTests.requestOptionsSetsAHeader()"
  fullName: "com.azure.core.test.http.HttpClientTests.requestOptionsSetsAHeader()"
  name: "requestOptionsSetsAHeader()"
  nameWithType: "HttpClientTests.requestOptionsSetsAHeader()"
  summary: "This test verifies that set header overrides any previously added headers with the same name."
  syntax: "public void requestOptionsSetsAHeader()"
  desc: "This test verifies that set header overrides any previously added headers with the same name."
- uid: "com.azure.core.test.http.HttpClientTests.segmentUploadTest()"
  fullName: "com.azure.core.test.http.HttpClientTests.segmentUploadTest()"
  name: "segmentUploadTest()"
  nameWithType: "HttpClientTests.segmentUploadTest()"
  summary: "This test verifies that a File-based Flux with a range is uploaded correctly."
  syntax: "public void segmentUploadTest()"
  exceptions:
  - description: "If the file resource cannot be found."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Exception.html\">Exception</a>"
  desc: "This test verifies that a File-based Flux with a range is uploaded correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service16Put()"
  fullName: "com.azure.core.test.http.HttpClientTests.service16Put()"
  name: "service16Put()"
  nameWithType: "HttpClientTests.service16Put()"
  summary: "Tests that a request with an octet-stream body where the body is a byte array is correctly handled."
  syntax: "public void service16Put()"
  desc: "Tests that a request with an octet-stream body where the body is a byte array is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.service16PutAsync()"
  fullName: "com.azure.core.test.http.HttpClientTests.service16PutAsync()"
  name: "service16PutAsync()"
  nameWithType: "HttpClientTests.service16PutAsync()"
  summary: "Tests that a request with an octet-stream body where the body is a byte array is correctly handled."
  syntax: "public void service16PutAsync()"
  desc: "Tests that a request with an octet-stream body where the body is a byte array is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.service18GetStatus200()"
  fullName: "com.azure.core.test.http.HttpClientTests.service18GetStatus200()"
  name: "service18GetStatus200()"
  nameWithType: "HttpClientTests.service18GetStatus200()"
  summary: "This test verifies that a response with a 200 status code does not throw if the status code wasn't expected."
  syntax: "public void service18GetStatus200()"
  desc: "This test verifies that a response with a 200 status code does not throw if the status code wasn't expected."
- uid: "com.azure.core.test.http.HttpClientTests.service18GetStatus200WithExpectedResponse200()"
  fullName: "com.azure.core.test.http.HttpClientTests.service18GetStatus200WithExpectedResponse200()"
  name: "service18GetStatus200WithExpectedResponse200()"
  nameWithType: "HttpClientTests.service18GetStatus200WithExpectedResponse200()"
  summary: "This test verifies that a response with a 200 status code does not throw if the status code was expected."
  syntax: "public void service18GetStatus200WithExpectedResponse200()"
  desc: "This test verifies that a response with a 200 status code does not throw if the status code was expected."
- uid: "com.azure.core.test.http.HttpClientTests.service18GetStatus300()"
  fullName: "com.azure.core.test.http.HttpClientTests.service18GetStatus300()"
  name: "service18GetStatus300()"
  nameWithType: "HttpClientTests.service18GetStatus300()"
  summary: "This test verifies that a response with a non-200 status code does throw if the status code wasn't expected."
  syntax: "public void service18GetStatus300()"
  desc: "This test verifies that a response with a non-200 status code does throw if the status code wasn't expected."
- uid: "com.azure.core.test.http.HttpClientTests.service18GetStatus300WithExpectedResponse300()"
  fullName: "com.azure.core.test.http.HttpClientTests.service18GetStatus300WithExpectedResponse300()"
  name: "service18GetStatus300WithExpectedResponse300()"
  nameWithType: "HttpClientTests.service18GetStatus300WithExpectedResponse300()"
  summary: "This test verifies that a response with a non-200 status code does not throw if the status code was expected."
  syntax: "public void service18GetStatus300WithExpectedResponse300()"
  desc: "This test verifies that a response with a non-200 status code does not throw if the status code was expected."
- uid: "com.azure.core.test.http.HttpClientTests.service18GetStatus400()"
  fullName: "com.azure.core.test.http.HttpClientTests.service18GetStatus400()"
  name: "service18GetStatus400()"
  nameWithType: "HttpClientTests.service18GetStatus400()"
  summary: "This test verifies that a response with a non-200 status code does throw if the status code wasn't expected."
  syntax: "public void service18GetStatus400()"
  desc: "This test verifies that a response with a non-200 status code does throw if the status code wasn't expected."
- uid: "com.azure.core.test.http.HttpClientTests.service18GetStatus400WithExpectedResponse400()"
  fullName: "com.azure.core.test.http.HttpClientTests.service18GetStatus400WithExpectedResponse400()"
  name: "service18GetStatus400WithExpectedResponse400()"
  nameWithType: "HttpClientTests.service18GetStatus400WithExpectedResponse400()"
  summary: "This test verifies that a response with a non-200 status code does not throw if the status code was expected."
  syntax: "public void service18GetStatus400WithExpectedResponse400()"
  desc: "This test verifies that a response with a non-200 status code does not throw if the status code was expected."
- uid: "com.azure.core.test.http.HttpClientTests.service18GetStatus500()"
  fullName: "com.azure.core.test.http.HttpClientTests.service18GetStatus500()"
  name: "service18GetStatus500()"
  nameWithType: "HttpClientTests.service18GetStatus500()"
  summary: "This test verifies that a response with a non-200 status code does throw if the status code wasn't expected."
  syntax: "public void service18GetStatus500()"
  desc: "This test verifies that a response with a non-200 status code does throw if the status code wasn't expected."
- uid: "com.azure.core.test.http.HttpClientTests.service18GetStatus500WithExpectedResponse500()"
  fullName: "com.azure.core.test.http.HttpClientTests.service18GetStatus500WithExpectedResponse500()"
  name: "service18GetStatus500WithExpectedResponse500()"
  nameWithType: "HttpClientTests.service18GetStatus500WithExpectedResponse500()"
  summary: "This test verifies that a response with a non-200 status code does not throw if the status code was expected."
  syntax: "public void service18GetStatus500WithExpectedResponse500()"
  desc: "This test verifies that a response with a non-200 status code does not throw if the status code was expected."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  summary: "This test verifies a byte array application-json that is empty is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  desc: "This test verifies a byte array application-json that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  summary: "This test verifies a byte array application-json is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  desc: "This test verifies a byte array application-json is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  summary: "This test verifies a byte array application-json that is null is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  desc: "This test verifies a byte array application-json that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  summary: "This test verifies a String application-json with charset that is null is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  desc: "This test verifies a String application-json with charset that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  summary: "This test verifies a String application-json with charset is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  desc: "This test verifies a String application-json with charset is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  summary: "This test verifies a String application-json with charset that is empty is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  desc: "This test verifies a String application-json with charset that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  summary: "This test verifies a String application-json that is empty is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  desc: "This test verifies a String application-json that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  summary: "This test verifies a String application-json is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  desc: "This test verifies a String application-json is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNullBody()"
  name: "service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNullBody()"
  summary: "This test verifies a String application-json that is null is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationJsonContentTypeAndStringBodyWithNullBody()"
  desc: "This test verifies a String application-json that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  name: "service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  summary: "This test verifies a byte array octet-stream that is empty is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  desc: "This test verifies a byte array octet-stream that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  name: "service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  summary: "This test verifies a byte array octet-stream is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  desc: "This test verifies a byte array octet-stream is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  name: "service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  summary: "This test verifies a byte array octet-stream that is null is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  desc: "This test verifies a byte array octet-stream that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  name: "service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  summary: "This test verifies a String octet-stream that is empty is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  desc: "This test verifies a String octet-stream that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  name: "service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  summary: "This test verifies a String octet-stream is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  desc: "This test verifies a String octet-stream is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  name: "service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  summary: "This test verifies a String octet-stream that is null is sent correctly."
  syntax: "public void service19PutWithBodyParamApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  desc: "This test verifies a String octet-stream that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  summary: "This test verifies a byte array application-json with ignored content type that is empty is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithEmptyBody()"
  desc: "This test verifies a byte array application-json with ignored content type that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  summary: "This test verifies a byte array application-json with ignored content type is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNonEmptyBody()"
  desc: "This test verifies a byte array application-json with ignored content type is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  summary: "This test verifies a byte array application-json with ignored content type that is null is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndByteArrayBodyWithNullBody()"
  desc: "This test verifies a byte array application-json with ignored content type that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  summary: "This test verifies a String octet-stream with an ignored content type that is empty is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithEmptyBody()"
  desc: "This test verifies a String octet-stream with an ignored content type that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  summary: "This test verifies a String octet-stream with an ignored content type is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNonEmptyBody()"
  desc: "This test verifies a String octet-stream with an ignored content type is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  summary: "This test verifies a String octet-stream with an ignored content type that is null is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndCharsetAndStringBodyWithNullBody()"
  desc: "This test verifies a String octet-stream with an ignored content type that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  summary: "This test verifies a String application-json that is empty is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithEmptyBody()"
  desc: "This test verifies a String application-json that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  summary: "This test verifies a String application-json is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNonEmptyBody()"
  desc: "This test verifies a String application-json is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNullBody()"
  name: "service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNullBody()"
  summary: "This test verifies a String application-json that is null is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationJsonContentTypeAndStringBodyWithNullBody()"
  desc: "This test verifies a String application-json that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  name: "service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  summary: "This test verifies a byte array octet-stream with an ignored content type that is empty is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithEmptyBody()"
  desc: "This test verifies a byte array octet-stream with an ignored content type that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  name: "service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  summary: "This test verifies a byte array octet-stream with an ignored content type is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNonEmptyBody()"
  desc: "This test verifies a byte array octet-stream with an ignored content type is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  name: "service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  summary: "This test verifies a byte array octet-stream with an ignored content type that is null is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationOctetStreamContentTypeAndByteArrayBodyWithNullBody()"
  desc: "This test verifies a byte array octet-stream with an ignored content type that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  name: "service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  summary: "This test verifies a String octet-stream with an ignored content type that is empty is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithEmptyBody()"
  desc: "This test verifies a String octet-stream with an ignored content type that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  name: "service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  summary: "This test verifies a String octet-stream with an ignored content type is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNonEmptyBody()"
  desc: "This test verifies a String octet-stream with an ignored content type is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  name: "service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  summary: "This test verifies a String octet-stream with an ignored content type that is null is sent correctly."
  syntax: "public void service19PutWithHeaderApplicationOctetStreamContentTypeAndStringBodyWithNullBody()"
  desc: "This test verifies a String octet-stream with an ignored content type that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithEmptyBody()"
  name: "service19PutWithNoContentTypeAndByteArrayBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithEmptyBody()"
  summary: "This test verifies a byte array octet-stream that is empty is sent correctly."
  syntax: "public void service19PutWithNoContentTypeAndByteArrayBodyWithEmptyBody()"
  desc: "This test verifies a byte array octet-stream that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithNonEmptyBody()"
  name: "service19PutWithNoContentTypeAndByteArrayBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithNonEmptyBody()"
  summary: "This test verifies a byte array octet-stream is sent correctly."
  syntax: "public void service19PutWithNoContentTypeAndByteArrayBodyWithNonEmptyBody()"
  desc: "This test verifies a byte array octet-stream is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithNullBody()"
  name: "service19PutWithNoContentTypeAndByteArrayBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithNoContentTypeAndByteArrayBodyWithNullBody()"
  summary: "This test verifies a byte array octet-stream that is null is sent correctly."
  syntax: "public void service19PutWithNoContentTypeAndByteArrayBodyWithNullBody()"
  desc: "This test verifies a byte array octet-stream that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithEmptyBody()"
  name: "service19PutWithNoContentTypeAndStringBodyWithEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithEmptyBody()"
  summary: "This test verifies a String octet-stream that is empty is sent correctly."
  syntax: "public void service19PutWithNoContentTypeAndStringBodyWithEmptyBody()"
  desc: "This test verifies a String octet-stream that is empty is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithNonEmptyBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithNonEmptyBody()"
  name: "service19PutWithNoContentTypeAndStringBodyWithNonEmptyBody()"
  nameWithType: "HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithNonEmptyBody()"
  summary: "This test verifies a String octet-stream is sent correctly."
  syntax: "public void service19PutWithNoContentTypeAndStringBodyWithNonEmptyBody()"
  desc: "This test verifies a String octet-stream is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithNullBody()"
  name: "service19PutWithNoContentTypeAndStringBodyWithNullBody()"
  nameWithType: "HttpClientTests.service19PutWithNoContentTypeAndStringBodyWithNullBody()"
  summary: "This test verifies a String octet-stream that is null is sent correctly."
  syntax: "public void service19PutWithNoContentTypeAndStringBodyWithNullBody()"
  desc: "This test verifies a String octet-stream that is null is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service20GetBytes100BodyAndHeaders()"
  fullName: "com.azure.core.test.http.HttpClientTests.service20GetBytes100BodyAndHeaders()"
  name: "service20GetBytes100BodyAndHeaders()"
  nameWithType: "HttpClientTests.service20GetBytes100BodyAndHeaders()"
  summary: "This test verifies that a byte array body with deserialized headers are handled correctly."
  syntax: "public void service20GetBytes100BodyAndHeaders()"
  desc: "This test verifies that a byte array body with deserialized headers are handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service20GetBytes100OnlyHeaders()"
  fullName: "com.azure.core.test.http.HttpClientTests.service20GetBytes100OnlyHeaders()"
  name: "service20GetBytes100OnlyHeaders()"
  nameWithType: "HttpClientTests.service20GetBytes100OnlyHeaders()"
  summary: "This test verifies a deserialized body and deserialized headers are handled correctly."
  syntax: "public void service20GetBytes100OnlyHeaders()"
  desc: "This test verifies a deserialized body and deserialized headers are handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service20GetBytesOnlyHeaders()"
  fullName: "com.azure.core.test.http.HttpClientTests.service20GetBytesOnlyHeaders()"
  name: "service20GetBytesOnlyHeaders()"
  nameWithType: "HttpClientTests.service20GetBytesOnlyHeaders()"
  summary: "This test verifies that a void body, even if data is returned, with deserialized headers are handled correctly."
  syntax: "public void service20GetBytesOnlyHeaders()"
  desc: "This test verifies that a void body, even if data is returned, with deserialized headers are handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service20GetBytesOnlyStatus()"
  fullName: "com.azure.core.test.http.HttpClientTests.service20GetBytesOnlyStatus()"
  name: "service20GetBytesOnlyStatus()"
  nameWithType: "HttpClientTests.service20GetBytesOnlyStatus()"
  summary: "This test verifies that a void body, even if data is returned, with void deserialized headers are handled correctly."
  syntax: "public void service20GetBytesOnlyStatus()"
  desc: "This test verifies that a void body, even if data is returned, with void deserialized headers are handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service20GetResponseBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.service20GetResponseBody()"
  name: "service20GetResponseBody()"
  nameWithType: "HttpClientTests.service20GetResponseBody()"
  summary: "This test verifies a String-based octet-stream is sent correctly."
  syntax: "public void service20GetResponseBody()"
  desc: "This test verifies a String-based octet-stream is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service20GetVoidResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.service20GetVoidResponse()"
  name: "service20GetVoidResponse()"
  nameWithType: "HttpClientTests.service20GetVoidResponse()"
  summary: "This test verifies that a void response is handled correctly."
  syntax: "public void service20GetVoidResponse()"
  desc: "This test verifies that a void response is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service20PutBodyAndHeaders()"
  fullName: "com.azure.core.test.http.HttpClientTests.service20PutBodyAndHeaders()"
  name: "service20PutBodyAndHeaders()"
  nameWithType: "HttpClientTests.service20PutBodyAndHeaders()"
  summary: "This test verifies that deserialized headers are handled correctly."
  syntax: "public void service20PutBodyAndHeaders()"
  desc: "This test verifies that deserialized headers are handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service20PutOnlyHeaders()"
  fullName: "com.azure.core.test.http.HttpClientTests.service20PutOnlyHeaders()"
  name: "service20PutOnlyHeaders()"
  nameWithType: "HttpClientTests.service20PutOnlyHeaders()"
  summary: "This test verifies that a void body with deserialized headers are handled correctly."
  syntax: "public void service20PutOnlyHeaders()"
  desc: "This test verifies that a void body with deserialized headers are handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service21GetBytes100()"
  fullName: "com.azure.core.test.http.HttpClientTests.service21GetBytes100()"
  name: "service21GetBytes100()"
  nameWithType: "HttpClientTests.service21GetBytes100()"
  summary: "This test verifies that a byte array is downloaded correctly."
  syntax: "public void service21GetBytes100()"
  desc: "This test verifies that a byte array is downloaded correctly."
- uid: "com.azure.core.test.http.HttpClientTests.service22GetBytes()"
  fullName: "com.azure.core.test.http.HttpClientTests.service22GetBytes()"
  name: "service22GetBytes()"
  nameWithType: "HttpClientTests.service22GetBytes()"
  summary: "This test verifies that the response body is returned as a byte array."
  syntax: "public void service22GetBytes()"
  desc: "This test verifies that the response body is returned as a byte array."
- uid: "com.azure.core.test.http.HttpClientTests.service23GetBytes()"
  fullName: "com.azure.core.test.http.HttpClientTests.service23GetBytes()"
  name: "service23GetBytes()"
  nameWithType: "HttpClientTests.service23GetBytes()"
  summary: "This test verifies that the response body is returned as a byte array."
  syntax: "public void service23GetBytes()"
  desc: "This test verifies that the response body is returned as a byte array."
- uid: "com.azure.core.test.http.HttpClientTests.service24Put()"
  fullName: "com.azure.core.test.http.HttpClientTests.service24Put()"
  name: "service24Put()"
  nameWithType: "HttpClientTests.service24Put()"
  summary: "This test verifies that the header collection sets headers correctly."
  syntax: "public void service24Put()"
  desc: "This test verifies that the header collection sets headers correctly."
- uid: "com.azure.core.test.http.HttpClientTests.shouldBufferResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.shouldBufferResponse()"
  name: "shouldBufferResponse()"
  nameWithType: "HttpClientTests.shouldBufferResponse()"
  summary: "Tests that client returns buffered response if requested via azure-eagerly-read-response Context flag."
  syntax: "public void shouldBufferResponse()"
  desc: "Tests that client returns buffered response if requested via azure-eagerly-read-response Context flag."
- uid: "com.azure.core.test.http.HttpClientTests.simpleDownloadTest(com.azure.core.util.Context)"
  fullName: "com.azure.core.test.http.HttpClientTests.simpleDownloadTest(Context context)"
  name: "simpleDownloadTest(Context context)"
  nameWithType: "HttpClientTests.simpleDownloadTest(Context context)"
  summary: "This test verifies that a Stream<wbr>Response is downloaded correctly."
  parameters:
  - description: "The context to use."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void simpleDownloadTest(Context context)"
  desc: "This test verifies that a StreamResponse is downloaded correctly."
- uid: "com.azure.core.test.http.HttpClientTests.simpleDownloadTestAsync(com.azure.core.util.Context)"
  fullName: "com.azure.core.test.http.HttpClientTests.simpleDownloadTestAsync(Context context)"
  name: "simpleDownloadTestAsync(Context context)"
  nameWithType: "HttpClientTests.simpleDownloadTestAsync(Context context)"
  summary: "This test verifies that a Stream<wbr>Response is downloaded correctly."
  parameters:
  - description: "The context to use."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void simpleDownloadTestAsync(Context context)"
  desc: "This test verifies that a StreamResponse is downloaded correctly."
- uid: "com.azure.core.test.http.HttpClientTests.streamResponseCanTransferBody(com.azure.core.util.Context)"
  fullName: "com.azure.core.test.http.HttpClientTests.streamResponseCanTransferBody(Context context)"
  name: "streamResponseCanTransferBody(Context context)"
  nameWithType: "HttpClientTests.streamResponseCanTransferBody(Context context)"
  summary: "This test verifies that a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StreamResponse\"></xref> transfers correctly."
  parameters:
  - description: "The context to use."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void streamResponseCanTransferBody(Context context)"
  exceptions:
  - description: "If an IO error occurs."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "This test verifies that a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StreamResponse\"></xref> transfers correctly."
- uid: "com.azure.core.test.http.HttpClientTests.streamResponseCanTransferBodyAsync(com.azure.core.util.Context)"
  fullName: "com.azure.core.test.http.HttpClientTests.streamResponseCanTransferBodyAsync(Context context)"
  name: "streamResponseCanTransferBodyAsync(Context context)"
  nameWithType: "HttpClientTests.streamResponseCanTransferBodyAsync(Context context)"
  summary: "This test verifies that a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StreamResponse\"></xref> transfers correctly."
  parameters:
  - description: "The context to use."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void streamResponseCanTransferBodyAsync(Context context)"
  exceptions:
  - description: "If an IO error occurs."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "This test verifies that a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StreamResponse\"></xref> transfers correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncDeleteRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncDeleteRequest()"
  name: "syncDeleteRequest()"
  nameWithType: "HttpClientTests.syncDeleteRequest()"
  summary: "Tests that a DELETE request is sent correctly."
  syntax: "public void syncDeleteRequest()"
  desc: "Tests that a DELETE request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnything()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnything()"
  name: "syncGetRequestWithAnything()"
  nameWithType: "HttpClientTests.syncGetRequestWithAnything()"
  summary: "Tests that a response with a return type of <xref uid=\"com.azure.core.test.implementation.entities.HttpBinJson\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpBinJson\"></xref> is correctly handled."
  syntax: "public void syncGetRequestWithAnything()"
  desc: "Tests that a response with a return type of <xref uid=\"com.azure.core.test.implementation.entities.HttpBinJson\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpBinJson\"></xref> is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParam()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParam()"
  name: "syncGetRequestWithAnythingWithEncodedPathParam()"
  nameWithType: "HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParam()"
  summary: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that is already encoded is correctly handled."
  syntax: "public void syncGetRequestWithAnythingWithEncodedPathParam()"
  desc: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that is already encoded is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParamWithPercent20()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParamWithPercent20()"
  name: "syncGetRequestWithAnythingWithEncodedPathParamWithPercent20()"
  nameWithType: "HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParamWithPercent20()"
  summary: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that is already encoded is correctly handled."
  syntax: "public void syncGetRequestWithAnythingWithEncodedPathParamWithPercent20()"
  desc: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that is already encoded is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParamWithPlus()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParamWithPlus()"
  name: "syncGetRequestWithAnythingWithEncodedPathParamWithPlus()"
  nameWithType: "HttpClientTests.syncGetRequestWithAnythingWithEncodedPathParamWithPlus()"
  summary: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that is already encoded is correctly handled."
  syntax: "public void syncGetRequestWithAnythingWithEncodedPathParamWithPlus()"
  desc: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that is already encoded is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithPathParam()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithPathParam()"
  name: "syncGetRequestWithAnythingWithPathParam()"
  nameWithType: "HttpClientTests.syncGetRequestWithAnythingWithPathParam()"
  summary: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) is correctly handled."
  syntax: "public void syncGetRequestWithAnythingWithPathParam()"
  desc: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithPathParamWithPlus()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithPathParamWithPlus()"
  name: "syncGetRequestWithAnythingWithPathParamWithPlus()"
  nameWithType: "HttpClientTests.syncGetRequestWithAnythingWithPathParamWithPlus()"
  summary: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that needs encoding is correctly handled."
  syntax: "public void syncGetRequestWithAnythingWithPathParamWithPlus()"
  desc: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that needs encoding is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithPathParamWithSpace()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithPathParamWithSpace()"
  name: "syncGetRequestWithAnythingWithPathParamWithSpace()"
  nameWithType: "HttpClientTests.syncGetRequestWithAnythingWithPathParamWithSpace()"
  summary: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that needs encoding is correctly handled."
  syntax: "public void syncGetRequestWithAnythingWithPathParamWithSpace()"
  desc: "Tests that a request with a path parameter (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathParam\"></xref>) that needs encoding is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithPlus()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithAnythingWithPlus()"
  name: "syncGetRequestWithAnythingWithPlus()"
  nameWithType: "HttpClientTests.syncGetRequestWithAnythingWithPlus()"
  summary: "Tests that a request with a path containing a plus (+) is correctly handled."
  syntax: "public void syncGetRequestWithAnythingWithPlus()"
  desc: "Tests that a request with a path containing a plus (+) is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithHeaderParametersAndAnythingReturn()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithHeaderParametersAndAnythingReturn()"
  name: "syncGetRequestWithHeaderParametersAndAnythingReturn()"
  nameWithType: "HttpClientTests.syncGetRequestWithHeaderParametersAndAnythingReturn()"
  summary: "Tests that a request with header parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HeaderParam\"></xref>) is correctly handled."
  syntax: "public void syncGetRequestWithHeaderParametersAndAnythingReturn()"
  desc: "Tests that a request with header parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HeaderParam\"></xref>) is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithNoReturn()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithNoReturn()"
  name: "syncGetRequestWithNoReturn()"
  nameWithType: "HttpClientTests.syncGetRequestWithNoReturn()"
  summary: "Tests that a response with no return type is correctly handled."
  syntax: "public void syncGetRequestWithNoReturn()"
  desc: "Tests that a response with no return type is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithNullHeader()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithNullHeader()"
  name: "syncGetRequestWithNullHeader()"
  nameWithType: "HttpClientTests.syncGetRequestWithNullHeader()"
  summary: "Tests that a request with header parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HeaderParam\"></xref>) where a value is null is correctly handled."
  syntax: "public void syncGetRequestWithNullHeader()"
  desc: "Tests that a request with header parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HeaderParam\"></xref>) where a value is null is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithNullQueryParameter()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithNullQueryParameter()"
  name: "syncGetRequestWithNullQueryParameter()"
  nameWithType: "HttpClientTests.syncGetRequestWithNullQueryParameter()"
  summary: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) that need encoding where a value is null is correctly handled."
  syntax: "public void syncGetRequestWithNullQueryParameter()"
  desc: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) that need encoding where a value is null is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithQueryParametersAndAnything()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithQueryParametersAndAnything()"
  name: "syncGetRequestWithQueryParametersAndAnything()"
  nameWithType: "HttpClientTests.syncGetRequestWithQueryParametersAndAnything()"
  summary: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) that need encoding is correctly handled."
  syntax: "public void syncGetRequestWithQueryParametersAndAnything()"
  desc: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) that need encoding is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithQueryParametersAndAnythingWithEncodedWithPercent20()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithQueryParametersAndAnythingWithEncodedWithPercent20()"
  name: "syncGetRequestWithQueryParametersAndAnythingWithEncodedWithPercent20()"
  nameWithType: "HttpClientTests.syncGetRequestWithQueryParametersAndAnythingWithEncodedWithPercent20()"
  summary: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) where some need encoding and some are already encoded is correctly handled."
  syntax: "public void syncGetRequestWithQueryParametersAndAnythingWithEncodedWithPercent20()"
  desc: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) where some need encoding and some are already encoded is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithQueryParametersAndAnythingWithPercent20()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncGetRequestWithQueryParametersAndAnythingWithPercent20()"
  name: "syncGetRequestWithQueryParametersAndAnythingWithPercent20()"
  nameWithType: "HttpClientTests.syncGetRequestWithQueryParametersAndAnythingWithPercent20()"
  summary: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) that need encoding is correctly handled."
  syntax: "public void syncGetRequestWithQueryParametersAndAnythingWithPercent20()"
  desc: "Tests that a request with query parameters (<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryParam\"></xref>) that need encoding is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncHeadBooleanRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncHeadBooleanRequest()"
  name: "syncHeadBooleanRequest()"
  nameWithType: "HttpClientTests.syncHeadBooleanRequest()"
  summary: "Tests that a HEAD request is sent correctly."
  syntax: "public void syncHeadBooleanRequest()"
  desc: "Tests that a HEAD request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncHeadRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncHeadRequest()"
  name: "syncHeadRequest()"
  nameWithType: "HttpClientTests.syncHeadRequest()"
  summary: "Tests that a HEAD request is sent correctly."
  syntax: "public void syncHeadRequest()"
  desc: "Tests that a HEAD request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncHeadersRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncHeadersRequest()"
  name: "syncHeadersRequest()"
  nameWithType: "HttpClientTests.syncHeadersRequest()"
  summary: "Tests that a request with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Headers\"></xref> adds the headers to the request correctly."
  syntax: "public void syncHeadersRequest()"
  desc: "Tests that a request with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Headers\"></xref> adds the headers to the request correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncPatchRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPatchRequest()"
  name: "syncPatchRequest()"
  nameWithType: "HttpClientTests.syncPatchRequest()"
  summary: "Tests that a PATCH request is sent correctly."
  syntax: "public void syncPatchRequest()"
  desc: "Tests that a PATCH request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncPostRequestWithNullBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPostRequestWithNullBody()"
  name: "syncPostRequestWithNullBody()"
  nameWithType: "HttpClientTests.syncPostRequestWithNullBody()"
  summary: "Tests that a request with an octet-stream body where the body is null is correctly handled."
  syntax: "public void syncPostRequestWithNullBody()"
  desc: "Tests that a request with an octet-stream body where the body is null is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncPostRequestWithStringBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPostRequestWithStringBody()"
  name: "syncPostRequestWithStringBody()"
  nameWithType: "HttpClientTests.syncPostRequestWithStringBody()"
  summary: "Tests that a request with an octet-stream body is correctly handled."
  syntax: "public void syncPostRequestWithStringBody()"
  desc: "Tests that a request with an octet-stream body is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithBodyAndEqualContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithBodyAndEqualContentLength()"
  name: "syncPutRequestWithBodyAndEqualContentLength()"
  nameWithType: "HttpClientTests.syncPutRequestWithBodyAndEqualContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is equal to the content length is correctly handled."
  syntax: "public void syncPutRequestWithBodyAndEqualContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is equal to the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithBodyLessThanContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithBodyLessThanContentLength()"
  name: "syncPutRequestWithBodyLessThanContentLength()"
  nameWithType: "HttpClientTests.syncPutRequestWithBodyLessThanContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is less than the content length is correctly handled."
  syntax: "public void syncPutRequestWithBodyLessThanContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is less than the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithBodyMoreThanContentLength()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithBodyMoreThanContentLength()"
  name: "syncPutRequestWithBodyMoreThanContentLength()"
  nameWithType: "HttpClientTests.syncPutRequestWithBodyMoreThanContentLength()"
  summary: "Tests that a request with an octet-stream body where the body length is greater than the content length is correctly handled."
  syntax: "public void syncPutRequestWithBodyMoreThanContentLength()"
  desc: "Tests that a request with an octet-stream body where the body length is greater than the content length is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithIntBody()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithIntBody()"
  name: "syncPutRequestWithIntBody()"
  nameWithType: "HttpClientTests.syncPutRequestWithIntBody()"
  summary: "Tests that a request with an octet-stream body where th body is a single value binary is correctly handled."
  syntax: "public void syncPutRequestWithIntBody()"
  desc: "Tests that a request with an octet-stream body where th body is a single value binary is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponse()"
  name: "syncPutRequestWithUnexpectedResponse()"
  nameWithType: "HttpClientTests.syncPutRequestWithUnexpectedResponse()"
  summary: "Tests that an unexpected response is handled correctly."
  syntax: "public void syncPutRequestWithUnexpectedResponse()"
  desc: "Tests that an unexpected response is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  name: "syncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  nameWithType: "HttpClientTests.syncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  summary: "Tests that a status code specific unexpected response is handled correctly."
  syntax: "public void syncPutRequestWithUnexpectedResponseAndDeterminedExceptionType()"
  desc: "Tests that a status code specific unexpected response is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponseAndExceptionType()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponseAndExceptionType()"
  name: "syncPutRequestWithUnexpectedResponseAndExceptionType()"
  nameWithType: "HttpClientTests.syncPutRequestWithUnexpectedResponseAndExceptionType()"
  summary: "Tests that a specific unexpected response is handled correctly."
  syntax: "public void syncPutRequestWithUnexpectedResponseAndExceptionType()"
  desc: "Tests that a specific unexpected response is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  name: "syncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  nameWithType: "HttpClientTests.syncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  summary: "Tests that an unexpected response that falls through to the default type is handled correctly."
  syntax: "public void syncPutRequestWithUnexpectedResponseAndFallthroughExceptionType()"
  desc: "Tests that an unexpected response that falls through to the default type is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  name: "syncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  nameWithType: "HttpClientTests.syncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  summary: "Tests that an unexpected response that falls through without a default type falls back to a global default is handled correctly."
  syntax: "public void syncPutRequestWithUnexpectedResponseAndNoFallthroughExceptionType()"
  desc: "Tests that an unexpected response that falls through without a default type falls back to a global default is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.syncRequestWithByteArrayReturnType()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncRequestWithByteArrayReturnType()"
  name: "syncRequestWithByteArrayReturnType()"
  nameWithType: "HttpClientTests.syncRequestWithByteArrayReturnType()"
  summary: "Tests that the response body is correctly returned as a byte array."
  syntax: "public void syncRequestWithByteArrayReturnType()"
  desc: "Tests that the response body is correctly returned as a byte array."
- uid: "com.azure.core.test.http.HttpClientTests.syncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  name: "syncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  nameWithType: "HttpClientTests.syncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  summary: "Tests that the response body is correctly returned as a byte array."
  syntax: "public void syncRequestWithByteArrayReturnTypeAndParameterizedHostAndPath()"
  desc: "Tests that the response body is correctly returned as a byte array."
- uid: "com.azure.core.test.http.HttpClientTests.syncRequestWithEmptyByteArrayReturnTypeAndParameterizedHostAndPath()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncRequestWithEmptyByteArrayReturnTypeAndParameterizedHostAndPath()"
  name: "syncRequestWithEmptyByteArrayReturnTypeAndParameterizedHostAndPath()"
  nameWithType: "HttpClientTests.syncRequestWithEmptyByteArrayReturnTypeAndParameterizedHostAndPath()"
  summary: "Tests that the response body is correctly returned as a byte array."
  syntax: "public void syncRequestWithEmptyByteArrayReturnTypeAndParameterizedHostAndPath()"
  desc: "Tests that the response body is correctly returned as a byte array."
- uid: "com.azure.core.test.http.HttpClientTests.syncRequestWithMultipleHostParams()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncRequestWithMultipleHostParams()"
  name: "syncRequestWithMultipleHostParams()"
  nameWithType: "HttpClientTests.syncRequestWithMultipleHostParams()"
  summary: "Tests that a request with multiple host parameters is correctly handled."
  syntax: "public void syncRequestWithMultipleHostParams()"
  desc: "Tests that a request with multiple host parameters is correctly handled."
- uid: "com.azure.core.test.http.HttpClientTests.syncVoidHeadRequest()"
  fullName: "com.azure.core.test.http.HttpClientTests.syncVoidHeadRequest()"
  name: "syncVoidHeadRequest()"
  nameWithType: "HttpClientTests.syncVoidHeadRequest()"
  summary: "Tests that a HEAD request is sent correctly."
  syntax: "public void syncVoidHeadRequest()"
  desc: "Tests that a HEAD request is sent correctly."
- uid: "com.azure.core.test.http.HttpClientTests.unexpectedHttpOk()"
  fullName: "com.azure.core.test.http.HttpClientTests.unexpectedHttpOk()"
  name: "unexpectedHttpOk()"
  nameWithType: "HttpClientTests.unexpectedHttpOk()"
  summary: "This test verifies that an unexpected 200 response is handled correctly."
  syntax: "public void unexpectedHttpOk()"
  desc: "This test verifies that an unexpected 200 response is handled correctly."
- uid: "com.azure.core.test.http.HttpClientTests.utf16BeBomResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.utf16BeBomResponse()"
  name: "utf16BeBomResponse()"
  nameWithType: "HttpClientTests.utf16BeBomResponse()"
  summary: "Tests that a response with a byte order mark encodes using the specified charset."
  syntax: "public void utf16BeBomResponse()"
  desc: "Tests that a response with a byte order mark encodes using the specified charset."
- uid: "com.azure.core.test.http.HttpClientTests.utf16LeBomResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.utf16LeBomResponse()"
  name: "utf16LeBomResponse()"
  nameWithType: "HttpClientTests.utf16LeBomResponse()"
  summary: "Tests that a response with a byte order mark encodes using the specified charset."
  syntax: "public void utf16LeBomResponse()"
  desc: "Tests that a response with a byte order mark encodes using the specified charset."
- uid: "com.azure.core.test.http.HttpClientTests.utf32BeBomResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.utf32BeBomResponse()"
  name: "utf32BeBomResponse()"
  nameWithType: "HttpClientTests.utf32BeBomResponse()"
  summary: "Tests that a response with a byte order mark encodes using the specified charset."
  syntax: "public void utf32BeBomResponse()"
  desc: "Tests that a response with a byte order mark encodes using the specified charset."
- uid: "com.azure.core.test.http.HttpClientTests.utf32LeBomResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.utf32LeBomResponse()"
  name: "utf32LeBomResponse()"
  nameWithType: "HttpClientTests.utf32LeBomResponse()"
  summary: "Tests that a response with a byte order mark encodes using the specified charset."
  syntax: "public void utf32LeBomResponse()"
  desc: "Tests that a response with a byte order mark encodes using the specified charset."
- uid: "com.azure.core.test.http.HttpClientTests.utf8BomResponse()"
  fullName: "com.azure.core.test.http.HttpClientTests.utf8BomResponse()"
  name: "utf8BomResponse()"
  nameWithType: "HttpClientTests.utf8BomResponse()"
  summary: "Tests that a response with a byte order mark encodes using the specified charset."
  syntax: "public void utf8BomResponse()"
  desc: "Tests that a response with a byte order mark encodes using the specified charset."
- uid: "com.azure.core.test.http.HttpClientTests.voidDoesNotEagerlyReadResponse(java.util.function.BiConsumer<java.lang.String,com.azure.core.test.http.HttpClientTests.Service28>)"
  fullName: "com.azure.core.test.http.HttpClientTests.voidDoesNotEagerlyReadResponse(BiConsumer<String,HttpClientTests.Service28> executable)"
  name: "voidDoesNotEagerlyReadResponse(BiConsumer<String,HttpClientTests.Service28> executable)"
  nameWithType: "HttpClientTests.voidDoesNotEagerlyReadResponse(BiConsumer<String,HttpClientTests.Service28> executable)"
  summary: "This test verifies that the response body is not eagerly read when the response is void."
  parameters:
  - description: "The executable to test."
    name: "executable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/BiConsumer.html\">BiConsumer</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.core.test.http.HttpClientTests.Service28?alt=com.azure.core.test.http.HttpClientTests.Service28&text=Service28\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void voidDoesNotEagerlyReadResponse(BiConsumer<String,HttpClientTests.Service28> executable)"
  desc: "This test verifies that the response body is not eagerly read when the response is void."
- uid: "com.azure.core.test.http.HttpClientTests.voidErrorReturnsErrorBody(java.util.function.BiConsumer<java.lang.String,com.azure.core.test.http.HttpClientTests.Service29>)"
  fullName: "com.azure.core.test.http.HttpClientTests.voidErrorReturnsErrorBody(BiConsumer<String,HttpClientTests.Service29> executable)"
  name: "voidErrorReturnsErrorBody(BiConsumer<String,HttpClientTests.Service29> executable)"
  nameWithType: "HttpClientTests.voidErrorReturnsErrorBody(BiConsumer<String,HttpClientTests.Service29> executable)"
  summary: "This test verifies that the error response body is returned when the response is void."
  parameters:
  - description: "The executable to test."
    name: "executable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/BiConsumer.html\">BiConsumer</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.core.test.http.HttpClientTests.Service29?alt=com.azure.core.test.http.HttpClientTests.Service29&text=Service29\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void voidErrorReturnsErrorBody(BiConsumer<String,HttpClientTests.Service29> executable)"
  desc: "This test verifies that the error response body is returned when the response is void."
type: "class"
desc: "Generic test suite for <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClients\"></xref>."
metadata: {}
package: "com.azure.core.test.http"
artifact: com.azure:azure-core-test:1.26.2
