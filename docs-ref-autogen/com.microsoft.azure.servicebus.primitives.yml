### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.primitives
  id: primitives
  children:
  - com.microsoft.azure.servicebus.primitives.AuthorizationFailedException
  - com.microsoft.azure.servicebus.primitives.ClientConstants
  - com.microsoft.azure.servicebus.primitives.ClientEntity
  - com.microsoft.azure.servicebus.primitives.CommunicationException
  - com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  - com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  - com.microsoft.azure.servicebus.primitives.CoreMessageSender
  - com.microsoft.azure.servicebus.primitives.ExceptionUtil
  - com.microsoft.azure.servicebus.primitives.IllegalConnectionStringFormatException
  - com.microsoft.azure.servicebus.primitives.MessageLockLostException
  - com.microsoft.azure.servicebus.primitives.MessageNotFoundException
  - com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag
  - com.microsoft.azure.servicebus.primitives.MessageWithLockToken
  - com.microsoft.azure.servicebus.primitives.MessagingEntityAlreadyExistsException
  - com.microsoft.azure.servicebus.primitives.MessagingEntityDisabledException
  - com.microsoft.azure.servicebus.primitives.MessagingEntityNotFoundException
  - com.microsoft.azure.servicebus.primitives.MessagingEntityType
  - com.microsoft.azure.servicebus.primitives.MessagingFactory
  - com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler
  - com.microsoft.azure.servicebus.primitives.OperationCancelledException
  - com.microsoft.azure.servicebus.primitives.Pair
  - com.microsoft.azure.servicebus.primitives.PayloadSizeExceededException
  - com.microsoft.azure.servicebus.primitives.QuotaExceededException
  - com.microsoft.azure.servicebus.primitives.ReceiverDisconnectedException
  - com.microsoft.azure.servicebus.primitives.ReceiverErrorContext
  - com.microsoft.azure.servicebus.primitives.RequestResponseUtils
  - com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem
  - com.microsoft.azure.servicebus.primitives.RetryExponential
  - com.microsoft.azure.servicebus.primitives.RetryPolicy
  - com.microsoft.azure.servicebus.primitives.SASUtil
  - com.microsoft.azure.servicebus.primitives.SenderErrorContext
  - com.microsoft.azure.servicebus.primitives.ServerBusyException
  - com.microsoft.azure.servicebus.primitives.ServiceBusException
  - com.microsoft.azure.servicebus.primitives.SessionCannotBeLockedException
  - com.microsoft.azure.servicebus.primitives.SessionLockLostException
  - com.microsoft.azure.servicebus.primitives.SettleModePair
  - com.microsoft.azure.servicebus.primitives.StringUtil
  - com.microsoft.azure.servicebus.primitives.TimeoutException
  - com.microsoft.azure.servicebus.primitives.TimeoutTracker
  - com.microsoft.azure.servicebus.primitives.Timer
  - com.microsoft.azure.servicebus.primitives.TimerType
  - com.microsoft.azure.servicebus.primitives.TrackingUtil
  - com.microsoft.azure.servicebus.primitives.TransportType
  - com.microsoft.azure.servicebus.primitives.Util
  href: com.microsoft.azure.servicebus.primitives.yml
  langs:
  - java
  name: com.microsoft.azure.servicebus.primitives
  nameWithType: com.microsoft.azure.servicebus.primitives
  fullName: com.microsoft.azure.servicebus.primitives
  type: Namespace
  source:
    remote:
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/AsyncUtil.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/AsyncUtil.java
  syntax:
    content: package com.microsoft.azure.servicebus.primitives
references:
- uid: com.microsoft.azure.servicebus.primitives.AuthorizationFailedException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.AuthorizationFailedException.yml
  name: AuthorizationFailedException
  nameWithType: AuthorizationFailedException
  fullName: com.microsoft.azure.servicebus.primitives.AuthorizationFailedException
  type: Class
  summary: "<p>Authorization failed exception is thrown when error is encountered during authorizing user's permission to run the intended operations. When encountered this exception user should check whether the token/key provided in the connection string is valid, and has correct execution right for the intended operations (e.g. Receive call will need Listen claim associated with the key/token). </p>"
  syntax:
    content: public class AuthorizationFailedException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.ClientConstants
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ClientConstants.yml
  name: ClientConstants
  nameWithType: ClientConstants
  fullName: com.microsoft.azure.servicebus.primitives.ClientConstants
  type: Class
  syntax:
    content: public class ClientConstants
- uid: com.microsoft.azure.servicebus.primitives.ClientEntity
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ClientEntity.yml
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: com.microsoft.azure.servicebus.primitives.ClientEntity
  type: Class
  summary: "<p>Contract for all client entities with Open-Close/Abort state m/c </p>\r\n<p>main-purpose: closeAll related entities </p>\r\n<p>Internal-class </p>"
  syntax:
    content: public class ClientEntity
- uid: com.microsoft.azure.servicebus.primitives.CommunicationException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.CommunicationException.yml
  name: CommunicationException
  nameWithType: CommunicationException
  fullName: com.microsoft.azure.servicebus.primitives.CommunicationException
  type: Class
  summary: "<p>This exception is thrown when there is a client side connectivity issue. When receiving this exception user should check client connectivity settings to the service: <ul><li><p>Check for correct hostname and port number used in endpoint. </p></li><li><p>Check for any possible proxy settings that can block amqp ports </p></li><li><p>Check for any firewall settings that can block amqp ports </p></li><li><p>Check for any general network connectivity issues, as well as network latency. </p></li></ul></p>"
  syntax:
    content: public class CommunicationException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  type: Class
  summary: "<p>This class can be used to construct a connection string which can establish communication with ServiceBus entities. It can also be used to perform basic validation on an existing connection string. </p>\r\n<p>Sample Code: <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(\r\n                                             \"ServiceBusNamespaceName\", \r\n                                             \"ServiceBusEntityName\", // QueueName or TopicName or SubscriptionPath\r\n                                             \"SharedAccessSignatureKeyName\", \r\n                                             \"SharedAccessSignatureKey\");\r\n     \r\n    String connectionString = connectionStringBuilder.toString();\r\n    </code></pre></p>\r\n<p>A connection string is basically a string consisted of key-value pair separated by \";\". Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <ul><li><p>Endpoint - URL that points to the servicebus namespace </p></li><li><p>EntityPath - Path to the service bus entity (queue/topic/subscription/). For queues and topics, it is just the entity name. For subscriptions, path is &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p></li><li><p>SharedAccessKeyName - Key name to the corresponding shared access policy rule for the namespace, or entity. </p></li><li><p>SharedAccessKey - Key value for the corresponding shared access policy rule of the namespace or entity. </p></li><li><p>SharedAccessSignatureToken - Instead of a key name and key value, clients can provide an already generated SAS Token. </p></li><li><p>OperationTimeout - Default timeout to be used for all senders, receiver and clients created from this connection string. </p></li><li><p>RetryPolicy - Name of the retry policy. </p></li></ul></p>"
  syntax:
    content: public class ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver.yml
  name: CoreMessageReceiver
  nameWithType: CoreMessageReceiver
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageReceiver
  type: Class
  syntax:
    content: public class CoreMessageReceiver extends ClientEntity
- uid: com.microsoft.azure.servicebus.primitives.CoreMessageSender
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.CoreMessageSender.yml
  name: CoreMessageSender
  nameWithType: CoreMessageSender
  fullName: com.microsoft.azure.servicebus.primitives.CoreMessageSender
  type: Class
  syntax:
    content: public class CoreMessageSender extends ClientEntity
- uid: com.microsoft.azure.servicebus.primitives.ExceptionUtil
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ExceptionUtil.yml
  name: ExceptionUtil
  nameWithType: ExceptionUtil
  fullName: com.microsoft.azure.servicebus.primitives.ExceptionUtil
  type: Class
  syntax:
    content: public class ExceptionUtil
- uid: com.microsoft.azure.servicebus.primitives.IllegalConnectionStringFormatException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.IllegalConnectionStringFormatException.yml
  name: IllegalConnectionStringFormatException
  nameWithType: IllegalConnectionStringFormatException
  fullName: com.microsoft.azure.servicebus.primitives.IllegalConnectionStringFormatException
  type: Class
  summary: "<p>This exception is thrown when the connection string provided does not meet the requirement for connection. </p>"
  syntax:
    content: public class IllegalConnectionStringFormatException
- uid: com.microsoft.azure.servicebus.primitives.MessageLockLostException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessageLockLostException.yml
  name: MessageLockLostException
  nameWithType: MessageLockLostException
  fullName: com.microsoft.azure.servicebus.primitives.MessageLockLostException
  type: Class
  summary: "<p>This exception is thrown when a receiver attempts  or  or  or  or  operation on a peek-locked message whose lock had already expired. </p>"
  syntax:
    content: public class MessageLockLostException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.MessageNotFoundException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessageNotFoundException.yml
  name: MessageNotFoundException
  nameWithType: MessageNotFoundException
  fullName: com.microsoft.azure.servicebus.primitives.MessageNotFoundException
  type: Class
  summary: "<p>This exception is thrown when a receiver attempts to receive a message with sequence number and the message with that sequence number is not available in the queue or subscription. </p>"
  syntax:
    content: public class MessageNotFoundException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag.yml
  name: MessageWithDeliveryTag
  nameWithType: MessageWithDeliveryTag
  fullName: com.microsoft.azure.servicebus.primitives.MessageWithDeliveryTag
  type: Class
  syntax:
    content: public class MessageWithDeliveryTag
- uid: com.microsoft.azure.servicebus.primitives.MessageWithLockToken
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessageWithLockToken.yml
  name: MessageWithLockToken
  nameWithType: MessageWithLockToken
  fullName: com.microsoft.azure.servicebus.primitives.MessageWithLockToken
  type: Class
  syntax:
    content: public class MessageWithLockToken
- uid: com.microsoft.azure.servicebus.primitives.MessagingEntityAlreadyExistsException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessagingEntityAlreadyExistsException.yml
  name: MessagingEntityAlreadyExistsException
  nameWithType: MessagingEntityAlreadyExistsException
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityAlreadyExistsException
  type: Class
  summary: "<p>This exception is thrown when a subscription client tries to create a rule with the name of an already existing rule. </p>"
  syntax:
    content: public class MessagingEntityAlreadyExistsException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.MessagingEntityDisabledException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessagingEntityDisabledException.yml
  name: MessagingEntityDisabledException
  nameWithType: MessagingEntityDisabledException
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityDisabledException
  type: Class
  summary: "<p>This exception is thrown when a client attempts to send messages to or receive messages from a disabled entity. An entity can be disabled for Send operations or RECEIVE operations or both. </p>"
  syntax:
    content: public class MessagingEntityDisabledException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.MessagingEntityNotFoundException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessagingEntityNotFoundException.yml
  name: MessagingEntityNotFoundException
  nameWithType: MessagingEntityNotFoundException
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityNotFoundException
  type: Class
  summary: "<p>This exception is thrown when a client attempts to create a sender or receiver or client to a non existent entity. </p>"
  syntax:
    content: public class MessagingEntityNotFoundException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.MessagingEntityType
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessagingEntityType.yml
  name: MessagingEntityType
  nameWithType: MessagingEntityType
  fullName: com.microsoft.azure.servicebus.primitives.MessagingEntityType
  type: Enum
  syntax:
    content: public enum MessagingEntityType
- uid: com.microsoft.azure.servicebus.primitives.MessagingFactory
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MessagingFactory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
  type: Class
  summary: "<p>Abstracts all AMQP related details and encapsulates an AMQP connection and manages its life cycle. Each instance of this class represent one AMQP connection to the namespace. If an application creates multiple senders, receivers or clients using the same MessagingFactory instance, all those senders, receivers or clients will share the same connection to the namespace. </p>"
  syntax:
    content: public class MessagingFactory extends ClientEntity
- uid: com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler.yml
  name: MiscRequestResponseOperationHandler
  nameWithType: MiscRequestResponseOperationHandler
  fullName: com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler
  type: Class
  syntax:
    content: public class MiscRequestResponseOperationHandler extends ClientEntity
- uid: com.microsoft.azure.servicebus.primitives.OperationCancelledException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.OperationCancelledException.yml
  name: OperationCancelledException
  nameWithType: OperationCancelledException
  fullName: com.microsoft.azure.servicebus.primitives.OperationCancelledException
  type: Class
  summary: "<p>This exception is thrown when the underlying Amqp layer encounter an abnormal link abort or disconnect of connection in an unexpected fashion. </p>"
  syntax:
    content: public class OperationCancelledException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.Pair
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.Pair.yml
  name: Pair<T,V>
  nameWithType: Pair<T,V>
  fullName: com.microsoft.azure.servicebus.primitives.Pair<T,V>
  type: Class
  syntax:
    content: public class Pair<T,V>
    typeParameters:
    - id: T
      type: 8ce1ecb9
    - id: V
      type: 0a560652
- uid: com.microsoft.azure.servicebus.primitives.PayloadSizeExceededException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.PayloadSizeExceededException.yml
  name: PayloadSizeExceededException
  nameWithType: PayloadSizeExceededException
  fullName: com.microsoft.azure.servicebus.primitives.PayloadSizeExceededException
  type: Class
  summary: "<p>this exception is thrown when user attempts to send a event data or brokered message that has exceeded the allowed payload size as defined by the service. Note that in a batch send scenario the limit can include possible batch overhead. </p>"
  syntax:
    content: public class PayloadSizeExceededException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.QuotaExceededException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.QuotaExceededException.yml
  name: QuotaExceededException
  nameWithType: QuotaExceededException
  fullName: com.microsoft.azure.servicebus.primitives.QuotaExceededException
  type: Class
  summary: "<p>This exception is thrown to signal that a service bus entity or namespace exceeded its quota. A quota can be a limit on entity size, message size, maximum concurrent connections or maximum concurrent operations. </p>"
  syntax:
    content: public class QuotaExceededException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.ReceiverDisconnectedException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ReceiverDisconnectedException.yml
  name: ReceiverDisconnectedException
  nameWithType: ReceiverDisconnectedException
  fullName: com.microsoft.azure.servicebus.primitives.ReceiverDisconnectedException
  type: Class
  summary: "<p>This exception is thrown when a EventHubReceiver is being disconnected because of one of the following reason: <ul><li><p>user attempts to connect a non-epoch receiver to a event hub partition, when there is an epoch receiver connected to the partition. </p></li><li><p>you are using an epoch receiver for a given partition but another epoch receiver with a higher epoch value connects to the same partition. </p></li></ul>\r\nUser should make sure either all code are using non-epoch receivers, or ensure that there is only one epoch receiver processing a given partition at any given point in time. </p>"
  syntax:
    content: public class ReceiverDisconnectedException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.ReceiverErrorContext
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ReceiverErrorContext.yml
  name: ReceiverErrorContext
  nameWithType: ReceiverErrorContext
  fullName: com.microsoft.azure.servicebus.primitives.ReceiverErrorContext
  type: Class
  syntax:
    content: public class ReceiverErrorContext
- uid: com.microsoft.azure.servicebus.primitives.RequestResponseUtils
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.RequestResponseUtils.yml
  name: RequestResponseUtils
  nameWithType: RequestResponseUtils
  fullName: com.microsoft.azure.servicebus.primitives.RequestResponseUtils
  type: Class
  syntax:
    content: public class RequestResponseUtils
- uid: com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.yml
  name: RequestResponseWorkItem
  nameWithType: RequestResponseWorkItem
  fullName: com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem
  type: Class
  syntax:
    content: public class RequestResponseWorkItem
- uid: com.microsoft.azure.servicebus.primitives.RetryExponential
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.RetryExponential.yml
  name: RetryExponential
  nameWithType: RetryExponential
  fullName: com.microsoft.azure.servicebus.primitives.RetryExponential
  type: Class
  summary: "<p>RetryPolicy implementation where the delay between retries will grow in an exponential manner. RetryPolicy can be set on the client operations using <xref uid=\"com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConnectionStringBuilder\"></xref>. RetryIntervals will be computed using a retryFactor which is a function of deltaBackOff (MaximumBackoff - MinimumBackoff) and MaximumRetryCount </p>"
  syntax:
    content: public class RetryExponential extends RetryPolicy
- uid: com.microsoft.azure.servicebus.primitives.RetryPolicy
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.RetryPolicy.yml
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy
  type: Class
  summary: "<p>Represents an abstraction of a policy for retrying messaging operations when an exception is encountered. Some exceptions encountered by a sender or receiver can be transient like ServerBusy and the operation will succeed if retried. Clients can specify a retry policy using <xref uid=\"com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConnectionStringBuilder\"></xref> which guides senders and receivers to automatically retry the failed operation before throwing the exception to the client application. Users should not implement this class, instead should use one of the provided implementations through <xref uid=\"com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getDefault\"></xref> or <xref uid=\"com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getNoRetry\"></xref>. </p>"
  syntax:
    content: public class RetryPolicy
- uid: com.microsoft.azure.servicebus.primitives.SASUtil
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.SASUtil.yml
  name: SASUtil
  nameWithType: SASUtil
  fullName: com.microsoft.azure.servicebus.primitives.SASUtil
  type: Class
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000113\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Use <xref uid=\"com.microsoft.azure.servicebus.security.SharedAccessSignatureTokenProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.servicebus.security.SharedAccessSignatureTokenProvider\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public class SASUtil
- uid: com.microsoft.azure.servicebus.primitives.SenderErrorContext
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.SenderErrorContext.yml
  name: SenderErrorContext
  nameWithType: SenderErrorContext
  fullName: com.microsoft.azure.servicebus.primitives.SenderErrorContext
  type: Class
  syntax:
    content: public class SenderErrorContext
- uid: com.microsoft.azure.servicebus.primitives.ServerBusyException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ServerBusyException.yml
  name: ServerBusyException
  nameWithType: ServerBusyException
  fullName: com.microsoft.azure.servicebus.primitives.ServerBusyException
  type: Class
  summary: "<p>Server busy exception is thrown when the current entity's activity has put excessive load onto the service. When encountered this exception user should wait at least 4 seconds before any retry/runtime operations for the said entity again. </p>"
  syntax:
    content: public class ServerBusyException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ServiceBusException.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
  type: Class
  summary: "<p>This is the base exception that service bus will generate for all error cases. </p>"
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.SessionCannotBeLockedException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.SessionCannotBeLockedException.yml
  name: SessionCannotBeLockedException
  nameWithType: SessionCannotBeLockedException
  fullName: com.microsoft.azure.servicebus.primitives.SessionCannotBeLockedException
  type: Class
  summary: "<p>This exception is thrown when a client attempts to accept a session that is already locked by another client. </p>"
  syntax:
    content: public class SessionCannotBeLockedException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.SessionLockLostException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.SessionLockLostException.yml
  name: SessionLockLostException
  nameWithType: SessionLockLostException
  fullName: com.microsoft.azure.servicebus.primitives.SessionLockLostException
  type: Class
  summary: "<p>This exception is thrown when a session receiver performs an operation on a session after its lock is expired. When a client accepts a session, the session is locked to the receiver for a duration specified in the entity definition. When the accepted session remains idle for the duration of lock, that is no operations performed on the session, the lock expires and the session is made available to other clients. </p>"
  syntax:
    content: public class SessionLockLostException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.SettleModePair
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.SettleModePair.yml
  name: SettleModePair
  nameWithType: SettleModePair
  fullName: com.microsoft.azure.servicebus.primitives.SettleModePair
  type: Class
  syntax:
    content: public class SettleModePair
- uid: com.microsoft.azure.servicebus.primitives.StringUtil
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.StringUtil.yml
  name: StringUtil
  nameWithType: StringUtil
  fullName: com.microsoft.azure.servicebus.primitives.StringUtil
  type: Class
  syntax:
    content: public class StringUtil
- uid: com.microsoft.azure.servicebus.primitives.TimeoutException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.TimeoutException.yml
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: com.microsoft.azure.servicebus.primitives.TimeoutException
  type: Class
  summary: "<p>This exception is thrown when the operation has exceeded the predetermined time limit. User should check connectivity is healthy between client process and service. </p>"
  syntax:
    content: public class TimeoutException extends ServiceBusException
- uid: com.microsoft.azure.servicebus.primitives.TimeoutTracker
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.TimeoutTracker.yml
  name: TimeoutTracker
  nameWithType: TimeoutTracker
  fullName: com.microsoft.azure.servicebus.primitives.TimeoutTracker
  type: Class
  syntax:
    content: public class TimeoutTracker
- uid: com.microsoft.azure.servicebus.primitives.Timer
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.Timer.yml
  name: Timer
  nameWithType: Timer
  fullName: com.microsoft.azure.servicebus.primitives.Timer
  type: Class
  summary: "<p>An abstraction for a Scheduler functionality - which can later be replaced by a light-weight Thread </p>"
  syntax:
    content: public class Timer
- uid: com.microsoft.azure.servicebus.primitives.TimerType
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.TimerType.yml
  name: TimerType
  nameWithType: TimerType
  fullName: com.microsoft.azure.servicebus.primitives.TimerType
  type: Enum
  syntax:
    content: public enum TimerType
- uid: com.microsoft.azure.servicebus.primitives.TrackingUtil
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.TrackingUtil.yml
  name: TrackingUtil
  nameWithType: TrackingUtil
  fullName: com.microsoft.azure.servicebus.primitives.TrackingUtil
  type: Class
  syntax:
    content: public class TrackingUtil
- uid: com.microsoft.azure.servicebus.primitives.TransportType
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.TransportType.yml
  name: TransportType
  nameWithType: TransportType
  fullName: com.microsoft.azure.servicebus.primitives.TransportType
  type: Enum
  summary: "<p>All TransportType switches available for communicating to EventHubs service. </p>"
  syntax:
    content: public enum TransportType
- uid: com.microsoft.azure.servicebus.primitives.Util
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.Util.yml
  name: Util
  nameWithType: Util
  fullName: com.microsoft.azure.servicebus.primitives.Util
  type: Class
  syntax:
    content: public class Util
