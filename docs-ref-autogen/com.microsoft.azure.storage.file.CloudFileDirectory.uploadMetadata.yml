### YamlMime:JavaMember
nameWithType: CloudFileDirectory.uploadMetadata
type: method
members:
- fullName: com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata()
  name: uploadMetadata()
  nameWithType: CloudFileDirectory.uploadMetadata()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads the directory's metadata.</p>

    <p></p>
  syntax: public void uploadMetadata()
  uid: com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata()
- fullName: com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the directory. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads the directory's metadata using the specified request options and operation context.</p>

    <p></p>
  syntax: public void uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata*
fullName: com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata()
name: uploadMetadata()
package: com.microsoft.azure.storage.file
metadata: {}
