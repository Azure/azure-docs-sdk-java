### YamlMime:JavaMember
nameWithType: ImageModerations.matchUrlInputAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)
  name: matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)
  nameWithType: ImageModerations.matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)
  parameters:
  - description: <p>The content type. </p>
    name: contentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The image url. </p>
    name: imageUrl
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: matchUrlInputOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchUrlInputOptionalParameter&text=MatchUrlInputOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MatchResponse object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using &lt;a href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt; API. Returns ID and tags of matching image.&lt;br/&gt; &lt;br/&gt; Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</p>

    <p></p>
  syntax: public Observable<MatchResponse> matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInputAsync(String,BodyModelModel,MatchUrlInputOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInputAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)
name: matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
metadata: {}
