### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql._sql_database._definition
  id: _definition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition.yml
  langs:
  - java
  name: SqlDatabase.Definition
  nameWithType: SqlDatabase.Definition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.Definition
  type: Interface
  source:
    remote:
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 167
  package: com.microsoft.azure.management.sql
  summary: "<p>Container interface for all the definitions that need to be implemented. </p>"
  syntax:
    content: public interface Definition extends SqlDatabase.DefinitionStages.Blank<ParentT>,SqlDatabase.DefinitionStages.WithCreate,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithCreateMode<ParentT>,SqlDatabase.DefinitionStages.WithCreateWithLessOptions
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model._attachable._in_definition.attach()
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
  - com.microsoft.azure.management.sql._sql_database._definition_stages_1894a5d747fdc33bdf3d73db2d2dddbc6.fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_restore_point_database.fromRestorePoint(RestorePoint)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_restore_point_database.fromRestorePoint(RestorePoint,DateTime)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_sample_database.fromSample(SampleName)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom(String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom(StorageAccount,String,String)
  - com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withBasicEdition()
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withBasicEdition(SqlDatabaseBasicStorage)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_collation.withCollation(String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages_1126b11f9598b2565df753b4cf034bccf.withCollation(String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition.withEdition(DatabaseEditions)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool(String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool(SqlElasticPool)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_max_size_bytes.withMaxSizeBytes(long)
  - com.microsoft.azure.management.sql._sql_database._definition_stages_1ee75faa1738f161b394a29958f8ef6b9.withMaxSizeBytes(long)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_create_mode.withMode(CreateMode)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withNewElasticPool(Creatable<SqlElasticPool>)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_service_objective.withServiceObjective(ServiceObjectiveName)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.withSourceDatabase(String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.withSourceDatabase(SqlDatabase)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withStandardEdition(SqlDatabaseStandardServiceObjective)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model._attachable._in_definition.attach()
  parent: com.microsoft.azure.management.resources.fluentcore.model._attachable._in_definition
  href: com.microsoft.azure.management.resources.fluentcore.model._attachable._in_definition.yml
  name: attach()
  nameWithType: Attachable.InDefinition<ParentT>.attach()
  fullName: ParentT com.microsoft.azure.management.resources.fluentcore.model.Attachable<ParentT>.InDefinition<ParentT>.attach()
  type: Method
  summary: <p>Attaches the child definition to the parent resource definiton. </p>
  syntax:
    content: public ParentT attach()
    return:
      type: 18a275b1
      description: <p>the next stage of the parent definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: >-
    <p>Execute the create request.</p>

    <p></p>
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model._indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages_1894a5d747fdc33bdf3d73db2d2dddbc6.fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages_1894a5d747fdc33bdf3d73db2d2dddbc6
  href: com.microsoft.azure.management.sql._sql_database._definition_stages_1894a5d747fdc33bdf3d73db2d2dddbc6.yml
  name: fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase restorableDroppedDatabase)
  nameWithType: SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>.fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase restorableDroppedDatabase)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>.fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase restorableDroppedDatabase)
  type: Method
  summary: >-
    <p>Creates a new database from a previously deleted database (see restorable dropped database). </p>

    <p>Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachFinal<ParentT> fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase restorableDroppedDatabase)
    parameters:
    - id: restorableDroppedDatabase
      type: com.microsoft.azure.management.sql._sql_restorable_dropped_database
      description: <p>the restorable dropped database </p>
    return:
      type: 84d41e1b
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_restore_point_database.fromRestorePoint(RestorePoint)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_restore_point_database
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_restore_point_database.yml
  name: fromRestorePoint(RestorePoint restorePoint)
  nameWithType: SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>.fromRestorePoint(RestorePoint restorePoint)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>.fromRestorePoint(RestorePoint restorePoint)
  type: Method
  summary: >-
    <p>Creates a new database from a restore point.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> fromRestorePoint(RestorePoint restorePoint)
    parameters:
    - id: restorePoint
      type: com.microsoft.azure.management.sql._restore_point
      description: <p>the restore point </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_restore_point_database.fromRestorePoint(RestorePoint,DateTime)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_restore_point_database
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_restore_point_database.yml
  name: fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  nameWithType: SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>.fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>.fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  type: Method
  summary: >-
    <p>Creates a new database from a restore point.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
    parameters:
    - id: restorePoint
      type: com.microsoft.azure.management.sql._restore_point
      description: <p>the restore point </p>
    - id: restorePointDateTime
      type: 230df18c
      description: <p>date and time to restore from </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_sample_database.fromSample(SampleName)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_sample_database
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_sample_database.yml
  name: fromSample(SampleName sampleName)
  nameWithType: SqlDatabase.DefinitionStages.WithSampleDatabase<ParentT>.fromSample(SampleName sampleName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSampleDatabase<ParentT>.fromSample(SampleName sampleName)
  type: Method
  summary: >-
    <p>Creates a new database from a restore point.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> fromSample(SampleName sampleName)
    parameters:
    - id: sampleName
      type: com.microsoft.azure.management.sql._sample_name
      description: <p>the sample database to use as the source </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.yml
  name: importFrom(String storageUri)
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(String storageUri)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(String storageUri)
  type: Method
  summary: >-
    <p>Creates a new database from a BACPAC file.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithStorageKey<ParentT> importFrom(String storageUri)
    parameters:
    - id: storageUri
      type: "26831127"
      description: <p>the source URI for the database to be imported </p>
    return:
      type: cad5a990
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.importFrom(StorageAccount,String,String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_import_from.yml
  name: importFrom(StorageAccount storageAccount, String containerName, String fileName)
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  type: Method
  summary: >-
    <p>Creates a new database from a BACPAC file.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAuthentication<ParentT> importFrom(StorageAccount storageAccount, String containerName, String fileName)
    parameters:
    - id: storageAccount
      type: com.microsoft.azure.management.storage._storage_account
      description: <p>an existing storage account to be used </p>
    - id: containerName
      type: "26831127"
      description: <p>the container name within the storage account to use </p>
    - id: fileName
      type: "26831127"
      description: <p>the exported database file name </p>
    return:
      type: a03fdbba
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model._indexable
  href: com.microsoft.azure.management.resources.fluentcore.model._indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name
  href: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withBasicEdition()
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.yml
  name: withBasicEdition()
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withBasicEdition()
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withBasicEdition()
  type: Method
  summary: >-
    <p>Sets a "Basic" edition for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withBasicEdition()
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withBasicEdition(SqlDatabaseBasicStorage)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.yml
  name: withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  type: Method
  summary: >-
    <p>Sets a "Basic" edition and maximum storage capacity for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
    parameters:
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql._sql_database_basic_storage
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_collation.withCollation(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_collation
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_collation.yml
  name: withCollation(String collation)
  nameWithType: SqlDatabase.DefinitionStages.WithCollation<ParentT>.withCollation(String collation)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollation<ParentT>.withCollation(String collation)
  type: Method
  summary: >-
    <p>Sets the collation for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withCollation(String collation)
    parameters:
    - id: collation
      type: "26831127"
      description: <p>collation to be set for database </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages_1126b11f9598b2565df753b4cf034bccf.withCollation(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages_1126b11f9598b2565df753b4cf034bccf
  href: com.microsoft.azure.management.sql._sql_database._definition_stages_1126b11f9598b2565df753b4cf034bccf.yml
  name: withCollation(String collation)
  nameWithType: SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String collation)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String collation)
  type: Method
  summary: >-
    <p>Sets the collation for the SQL Database.</p>

    <p></p>
  syntax:
    content: public WithCreate withCollation(String collation)
    parameters:
    - id: collation
      type: "26831127"
      description: <p>collation to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition.withEdition(DatabaseEditions)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition.yml
  name: withEdition(DatabaseEditions edition)
  nameWithType: SqlDatabase.DefinitionStages.WithEdition<ParentT>.withEdition(DatabaseEditions edition)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition<ParentT>.withEdition(DatabaseEditions edition)
  type: Method
  summary: >-
    <p>Sets the edition for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withEdition(DatabaseEditions edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql._database_editions
      description: <p>edition to be set for database </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.yml
  name: withExistingElasticPool(String elasticPoolName)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(String elasticPoolName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(String elasticPoolName)
  type: Method
  summary: >-
    <p>Sets the existing elastic pool for the SQLDatabase.</p>

    <p></p>
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withExistingElasticPool(String elasticPoolName)
    parameters:
    - id: elasticPoolName
      type: "26831127"
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12da8a2936
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withExistingElasticPool(SqlElasticPool)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.yml
  name: withExistingElasticPool(SqlElasticPool sqlElasticPool)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  type: Method
  summary: >-
    <p>Sets the existing elastic pool for the SQLDatabase.</p>

    <p></p>
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withExistingElasticPool(SqlElasticPool sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.sql._sql_elastic_pool
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12da8a2936
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_max_size_bytes.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_max_size_bytes
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_max_size_bytes.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.DefinitionStages.WithMaxSizeBytes<ParentT>.withMaxSizeBytes(long maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytes<ParentT>.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: >-
    <p>Sets the max size in bytes for SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the Azure SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB … 150 GB | 200 GB … 500 GB } </p>'
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages_1ee75faa1738f161b394a29958f8ef6b9.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages_1ee75faa1738f161b394a29958f8ef6b9
  href: com.microsoft.azure.management.sql._sql_database._definition_stages_1ee75faa1738f161b394a29958f8ef6b9.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: >-
    <p>Sets the max size in bytes for SQL Database.</p>

    <p></p>
  syntax:
    content: public WithCreate withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the Azure SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB … 150 GB | 200 GB … 500 GB } </p>'
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create_mode.withMode(CreateMode)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create_mode
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create_mode.yml
  name: withMode(CreateMode createMode)
  nameWithType: SqlDatabase.DefinitionStages.WithCreateMode<ParentT>.withMode(CreateMode createMode)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode<ParentT>.withMode(CreateMode createMode)
  type: Method
  summary: >-
    <p>Sets the create mode for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachFinal<ParentT> withMode(CreateMode createMode)
    parameters:
    - id: createMode
      type: com.microsoft.azure.management.sql._create_mode
      description: <p>create mode for the database, should not be default in this flow </p>
    return:
      type: 84d41e1b
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.withNewElasticPool(Creatable<SqlElasticPool>)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.yml
  name: withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  type: Method
  summary: >-
    <p>Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database.</p>

    <p></p>
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.resources.fluentcore.model._creatable78504a52com.microsoft.azure.management.sql._sql_elastic_poola08ddfce
      description: <p>creatable definition for new elastic pool to be created for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages_103af6728f7335b8bba7c224131927c12da8a2936
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.yml
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  type: Method
  summary: >-
    <p>Sets a "Premium" edition for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql._sql_database_premium_service_objective
      description: <p>edition to be set for database </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.yml
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  type: Method
  summary: >-
    <p>Sets a "Premium" edition and maximum storage capacity for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql._sql_database_premium_service_objective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql._sql_database_premium_storage
      description: <p>edition to be set for database </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_service_objective.withServiceObjective(ServiceObjectiveName)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_service_objective
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_service_objective.yml
  name: withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  nameWithType: SqlDatabase.DefinitionStages.WithServiceObjective<ParentT>.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective<ParentT>.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  type: Method
  summary: >-
    <p>Sets the service level objective for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withServiceObjective(ServiceObjectiveName serviceLevelObjective)
    parameters:
    - id: serviceLevelObjective
      type: com.microsoft.azure.management.sql._service_objective_name
      description: <p>service level objected for the SQL Database </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.withSourceDatabase(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.yml
  name: withSourceDatabase(String sourceDatabaseId)
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>.withSourceDatabase(String sourceDatabaseId)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>.withSourceDatabase(String sourceDatabaseId)
  type: Method
  summary: >-
    <p>Sets the resource if of source database for the SQL Database. </p>

    <p>Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithCreateMode<ParentT> withSourceDatabase(String sourceDatabaseId)
    parameters:
    - id: sourceDatabaseId
      type: "26831127"
      description: <p>id of the source database </p>
    return:
      type: 7e2a3b51
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.withSourceDatabase(SqlDatabase)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.yml
  name: withSourceDatabase(SqlDatabase sourceDatabase)
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>.withSourceDatabase(SqlDatabase sourceDatabase)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>.withSourceDatabase(SqlDatabase sourceDatabase)
  type: Method
  summary: >-
    <p>Sets the resource if of source database for the SQL Database. </p>

    <p>Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithCreateMode<ParentT> withSourceDatabase(SqlDatabase sourceDatabase)
    parameters:
    - id: sourceDatabase
      type: com.microsoft.azure.management.sql._sql_database
      description: <p>instance of the source database </p>
    return:
      type: 7e2a3b51
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withStandardEdition(SqlDatabaseStandardServiceObjective)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.yml
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  type: Method
  summary: >-
    <p>Sets a "Standard" edition for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql._sql_database_standard_service_objective
      description: <p>edition to be set for database </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_edition_defaults.yml
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  type: Method
  summary: >-
    <p>Sets a "Standard" edition and maximum storage capacity for the SQL Database.</p>

    <p></p>
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql._sql_database_standard_service_objective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql._sql_database_standard_storage
      description: <p>edition to be set for database </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: <p>Adds a tag to the resource. </p>
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: <p>Specifies tags for the resource as a <xref uid="" data-throw-if-not-resolved="false">Map</xref>. </p>
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false">Map</xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._blank
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._blank.yml
  name: SqlDatabase.DefinitionStages.Blank<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.Blank<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.Blank<ParentT>
  type: Interface
  summary: >-
    <p>The first stage of the SQL Server Firewall rule definition.</p>

    <p>

    The first stage of the SQL database definition. </p>
  syntax:
    content: public interface Blank<ParentT> extends SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>,SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create.yml
  name: SqlDatabase.DefinitionStages.WithCreate
  nameWithType: SqlDatabase.DefinitionStages.WithCreate
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreate
  type: Interface
  summary: <p>A SQL Database definition with sufficient inputs to create a new SQL database in the cloud, but exposing additional optional settings to specify. </p>
  syntax:
    content: public interface WithCreate
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.yml
  name: SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>
  type: Interface
  summary: >-
    <p>The SQL Database definition to set the source database id for database.</p>

    <p>

    The SQL Database definition to set the source database id for database. </p>
  syntax:
    content: public interface WithSourceDatabaseId<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_elastic_pool_name.yml
  name: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  type: Interface
  summary: >-
    <p>The SQL Database definition to set the elastic pool for database.</p>

    <p>

    The SQL Database definition to set the elastic pool for database. </p>
  syntax:
    content: public interface WithElasticPoolName<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create_mode
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create_mode.yml
  name: SqlDatabase.DefinitionStages.WithCreateMode<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithCreateMode<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode<ParentT>
  type: Interface
  summary: >-
    <p>The SQL Database definition to set the create mode for database.</p>

    <p>

    The SQL Database definition to set the create mode for database. </p>
  syntax:
    content: public interface WithCreateMode<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages_131890809035967b3c6d529a332134cfe
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages_131890809035967b3c6d529a332134cfe.yml
  name: SqlDatabase.DefinitionStages.WithCreateWithLessOptions
  nameWithType: SqlDatabase.DefinitionStages.WithCreateWithLessOptions
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateWithLessOptions
  type: Interface
  summary: <p>A SQL Database definition with sufficient inputs to create a new SQL Server in the cloud, but exposing additional optional inputs to specify. </p>
  syntax:
    content: public interface WithCreateWithLessOptions
