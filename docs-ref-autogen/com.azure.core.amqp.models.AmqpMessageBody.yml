### YamlMime:ManagedReference
items:
- uid: com.azure.core.amqp.models.AmqpMessageBody
  id: AmqpMessageBody
  artifact: com.azure:azure-core-amqp:2.0.0
  parent: com.azure.core.amqp.models
  children:
  - com.azure.core.amqp.models.AmqpMessageBody.fromData(byte[])
  - com.azure.core.amqp.models.AmqpMessageBody.getBodyType()
  - com.azure.core.amqp.models.AmqpMessageBody.getData()
  - com.azure.core.amqp.models.AmqpMessageBody.getFirstData()
  langs:
  - java
  name: AmqpMessageBody
  nameWithType: AmqpMessageBody
  fullName: com.azure.core.amqp.models.AmqpMessageBody
  type: Class
  package: com.azure.core.amqp.models
  summary: "This class encapsulates the body of a message. The <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref> map to an AMQP specification message body types. Current implementation only support <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType.DATA\" data-throw-if-not-resolved=\"false\">DATA</xref> AMQP data type. Track this [issue][] to find out support for other AMQP types.\n\n**Client should test for <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref> before calling corresponding get method. Get methods not corresponding to the type of the body throws exception.**\n\n**How to check for <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref>**\n\n```java\n// If client do not check `AmqpMessageBody.getBodyType()` and payload is not of type `AmqpMessageBodyType.DATA`,\n // calling `getFirstData()` or `getData()` on `AmqpMessageBody` will throw Runtime exception.\n // https://github.com/Azure/azure-sdk-for-java/issues/17614 : This issue tracks additional AMQP body type\n // support in future.\n \n byte[] payload = null;\n AmqpMessageBodyType bodyType = amqpAnnotatedMessage.getBody().getBodyType();\n switch (bodyType) {\n     case DATA:\n         payload = amqpAnnotatedMessage.getBody().getFirstData();\n         break;\n     case SEQUENCE:\n     case VALUE:\n         throw new RuntimeException(\"Body type not supported yet.\");\n     default:\n         throw new RuntimeException(\"Body type not valid.\");\n }\n System.out.println(new String(payload));\n```\n\n\n[issue]: https://github.com/Azure/azure-sdk-for-java/issues/17614"
  syntax:
    content: public final class AmqpMessageBody
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.amqp.models.AmqpMessageBody.AmqpMessageBody()
  id: AmqpMessageBody()
  artifact: com.azure:azure-core-amqp:2.0.0
  parent: com.azure.core.amqp.models.AmqpMessageBody
  langs:
  - java
  name: AmqpMessageBody()
  nameWithType: AmqpMessageBody.AmqpMessageBody()
  fullName: com.azure.core.amqp.models.AmqpMessageBody.AmqpMessageBody()
  overload: com.azure.core.amqp.models.AmqpMessageBody.AmqpMessageBody*
  type: Constructor
  package: com.azure.core.amqp.models
  syntax:
    content: private AmqpMessageBody()
- uid: com.azure.core.amqp.models.AmqpMessageBody.fromData(byte[])
  id: fromData(byte[])
  artifact: com.azure:azure-core-amqp:2.0.0
  parent: com.azure.core.amqp.models.AmqpMessageBody
  langs:
  - java
  name: fromData(byte[] data)
  nameWithType: AmqpMessageBody.fromData(byte[] data)
  fullName: com.azure.core.amqp.models.AmqpMessageBody.fromData(byte[] data)
  overload: com.azure.core.amqp.models.AmqpMessageBody.fromData*
  type: Method
  package: com.azure.core.amqp.models
  summary: Creates instance of <xref uid="com.azure.core.amqp.models.AmqpMessageBody" data-throw-if-not-resolved="false">AmqpMessageBody</xref> with given byte array.
  syntax:
    content: public static AmqpMessageBody fromData(byte[] data)
    parameters:
    - id: data
      type: byte[]
      description: used to create another instance of <xref uid="com.azure.core.amqp.models.AmqpMessageBody" data-throw-if-not-resolved="false">AmqpMessageBody</xref>.
    return:
      type: com.azure.core.amqp.models.AmqpMessageBody
      description: AmqpMessageBody Newly created instance.
- uid: com.azure.core.amqp.models.AmqpMessageBody.getBodyType()
  id: getBodyType()
  artifact: com.azure:azure-core-amqp:2.0.0
  parent: com.azure.core.amqp.models.AmqpMessageBody
  langs:
  - java
  name: getBodyType()
  nameWithType: AmqpMessageBody.getBodyType()
  fullName: com.azure.core.amqp.models.AmqpMessageBody.getBodyType()
  overload: com.azure.core.amqp.models.AmqpMessageBody.getBodyType*
  type: Method
  package: com.azure.core.amqp.models
  summary: "Gets the <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref> of the message.\n\n**How to check for <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref>**\n\n```java\n// If client do not check `AmqpMessageBody.getBodyType()` and payload is not of type `AmqpMessageBodyType.DATA`,\n // calling `getFirstData()` or `getData()` on `AmqpMessageBody` will throw Runtime exception.\n // https://github.com/Azure/azure-sdk-for-java/issues/17614 : This issue tracks additional AMQP body type\n // support in future.\n \n byte[] payload = null;\n AmqpMessageBodyType bodyType = amqpAnnotatedMessage.getBody().getBodyType();\n switch (bodyType) {\n     case DATA:\n         payload = amqpAnnotatedMessage.getBody().getFirstData();\n         break;\n     case SEQUENCE:\n     case VALUE:\n         throw new RuntimeException(\"Body type not supported yet.\");\n     default:\n         throw new RuntimeException(\"Body type not valid.\");\n }\n System.out.println(new String(payload));\n```"
  syntax:
    content: public AmqpMessageBodyType getBodyType()
    return:
      type: com.azure.core.amqp.models.AmqpMessageBodyType
      description: AmqpBodyType type of the message.
- uid: com.azure.core.amqp.models.AmqpMessageBody.getData()
  id: getData()
  artifact: com.azure:azure-core-amqp:2.0.0
  parent: com.azure.core.amqp.models.AmqpMessageBody
  langs:
  - java
  name: getData()
  nameWithType: AmqpMessageBody.getData()
  fullName: com.azure.core.amqp.models.AmqpMessageBody.getData()
  overload: com.azure.core.amqp.models.AmqpMessageBody.getData*
  type: Method
  package: com.azure.core.amqp.models
  summary: "Gets an <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\">IterableStream</xref> of byte array containing only first byte array set on this <xref uid=\"com.azure.core.amqp.models.AmqpMessageBody\" data-throw-if-not-resolved=\"false\">AmqpMessageBody</xref>. This library only support one byte array at present, so the returned list will have only one element.\n\n**Client should test for <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref> before calling corresponding get method. Get methods not corresponding to the type of the body throws exception.**\n\n**How to check for <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref>**\n\n```java\n// If client do not check `AmqpMessageBody.getBodyType()` and payload is not of type `AmqpMessageBodyType.DATA`,\n // calling `getFirstData()` or `getData()` on `AmqpMessageBody` will throw Runtime exception.\n // https://github.com/Azure/azure-sdk-for-java/issues/17614 : This issue tracks additional AMQP body type\n // support in future.\n \n byte[] payload = null;\n AmqpMessageBodyType bodyType = amqpAnnotatedMessage.getBody().getBodyType();\n switch (bodyType) {\n     case DATA:\n         payload = amqpAnnotatedMessage.getBody().getFirstData();\n         break;\n     case SEQUENCE:\n     case VALUE:\n         throw new RuntimeException(\"Body type not supported yet.\");\n     default:\n         throw new RuntimeException(\"Body type not valid.\");\n }\n System.out.println(new String(payload));\n```"
  syntax:
    content: public IterableStream<byte[]> getData()
    return:
      type: com.azure.core.util.IterableStream<byte[]>
      description: data set on <xref uid="com.azure.core.amqp.models.AmqpMessageBody" data-throw-if-not-resolved="false">AmqpMessageBody</xref>.
- uid: com.azure.core.amqp.models.AmqpMessageBody.getFirstData()
  id: getFirstData()
  artifact: com.azure:azure-core-amqp:2.0.0
  parent: com.azure.core.amqp.models.AmqpMessageBody
  langs:
  - java
  name: getFirstData()
  nameWithType: AmqpMessageBody.getFirstData()
  fullName: com.azure.core.amqp.models.AmqpMessageBody.getFirstData()
  overload: com.azure.core.amqp.models.AmqpMessageBody.getFirstData*
  type: Method
  package: com.azure.core.amqp.models
  summary: "Gets first byte array set on this <xref uid=\"com.azure.core.amqp.models.AmqpMessageBody\" data-throw-if-not-resolved=\"false\">AmqpMessageBody</xref>. This library only support one byte array on Amqp Message at present.\n\n**Client should test for <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref> before calling corresponding get method. Get methods not corresponding to the type of the body throws exception.**\n\n**How to check for <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\">AmqpMessageBodyType</xref>**\n\n```java\n// If client do not check `AmqpMessageBody.getBodyType()` and payload is not of type `AmqpMessageBodyType.DATA`,\n // calling `getFirstData()` or `getData()` on `AmqpMessageBody` will throw Runtime exception.\n // https://github.com/Azure/azure-sdk-for-java/issues/17614 : This issue tracks additional AMQP body type\n // support in future.\n \n byte[] payload = null;\n AmqpMessageBodyType bodyType = amqpAnnotatedMessage.getBody().getBodyType();\n switch (bodyType) {\n     case DATA:\n         payload = amqpAnnotatedMessage.getBody().getFirstData();\n         break;\n     case SEQUENCE:\n     case VALUE:\n         throw new RuntimeException(\"Body type not supported yet.\");\n     default:\n         throw new RuntimeException(\"Body type not valid.\");\n }\n System.out.println(new String(payload));\n```"
  syntax:
    content: public byte[] getFirstData()
    return:
      type: byte[]
      description: data set on <xref uid="com.azure.core.amqp.models.AmqpMessageBody" data-throw-if-not-resolved="false">AmqpMessageBody</xref>.
references:
- uid: com.azure.core.amqp.models.AmqpMessageBody.AmqpMessageBody*
  name: AmqpMessageBody
  nameWithType: AmqpMessageBody.AmqpMessageBody
  fullName: com.azure.core.amqp.models.AmqpMessageBody.AmqpMessageBody
  package: com.azure.core.amqp.models
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.core.amqp.models.AmqpMessageBody.fromData*
  name: fromData
  nameWithType: AmqpMessageBody.fromData
  fullName: com.azure.core.amqp.models.AmqpMessageBody.fromData
  package: com.azure.core.amqp.models
- uid: com.azure.core.amqp.models.AmqpMessageBodyType
  name: AmqpMessageBodyType
  nameWithType: AmqpMessageBodyType
  fullName: com.azure.core.amqp.models.AmqpMessageBodyType
- uid: com.azure.core.amqp.models.AmqpMessageBody.getBodyType*
  name: getBodyType
  nameWithType: AmqpMessageBody.getBodyType
  fullName: com.azure.core.amqp.models.AmqpMessageBody.getBodyType
  package: com.azure.core.amqp.models
- uid: com.azure.core.util.IterableStream<byte[]>
  spec.java:
  - uid: com.azure.core.util.IterableStream
    name: IterableStream
    fullName: com.azure.core.util.IterableStream
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.azure.core.amqp.models.AmqpMessageBody.getData*
  name: getData
  nameWithType: AmqpMessageBody.getData
  fullName: com.azure.core.amqp.models.AmqpMessageBody.getData
  package: com.azure.core.amqp.models
- uid: com.azure.core.amqp.models.AmqpMessageBody.getFirstData*
  name: getFirstData
  nameWithType: AmqpMessageBody.getFirstData
  fullName: com.azure.core.amqp.models.AmqpMessageBody.getFirstData
  package: com.azure.core.amqp.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.util.IterableStream
  name: IterableStream
  nameWithType: IterableStream
  fullName: com.azure.core.util.IterableStream
