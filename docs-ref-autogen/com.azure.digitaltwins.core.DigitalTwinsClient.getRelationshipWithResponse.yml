### YamlMime:JavaMember
uid: "com.azure.digitaltwins.core.DigitalTwinsClient.getRelationshipWithResponse*"
fullName: "com.azure.digitaltwins.core.DigitalTwinsClient.<T>getRelationshipWithResponse"
name: "<T>getRelationshipWithResponse"
nameWithType: "DigitalTwinsClient.<T>getRelationshipWithResponse"
members:
- uid: "com.azure.digitaltwins.core.DigitalTwinsClient.<T>getRelationshipWithResponse(java.lang.String,java.lang.String,java.lang.Class<T>,com.azure.core.util.Context)"
  fullName: "com.azure.digitaltwins.core.DigitalTwinsClient.<T>getRelationshipWithResponse(String digitalTwinId, String relationshipId, Class<T> clazz, Context context)"
  name: "<T>getRelationshipWithResponse(String digitalTwinId, String relationshipId, Class<T> clazz, Context context)"
  nameWithType: "DigitalTwinsClient.<T>getRelationshipWithResponse(String digitalTwinId, String relationshipId, Class<T> clazz, Context context)"
  summary: "Gets a relationship on a digital twin.\n\n**Code Samples**\n\nA strongly typed digital twin object such as <xref uid=\"com.azure.digitaltwins.core.BasicRelationship\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicRelationship\"></xref> can be provided as the input parameter to deserialize the response into.\n\n```java\nResponse<BasicRelationship> retrievedRelationshipWithResponse =\n     digitalTwinsSyncClient.getRelationshipWithResponse(\n         \"myDigitalTwinId\",\n         \"myRelationshipName\",\n         BasicRelationship.class,\n         new Context(\"key\", \"value\"));\n \n System.out.println(\n     \"Retrieved relationship with Id: \"\n         + retrievedRelationshipWithResponse.getValue().getId() +\n         \" from: \" +\n         retrievedRelationshipWithResponse.getValue().getSourceId() +\n         \" to: \" + retrievedRelationshipWithResponse.getValue().getTargetId() +\n         \"HTTP status code: \" + retrievedRelationshipWithResponse.getStatusCode());\n```\n\nOr alternatively String can be used as input and output deserialization type:\n\n```java\nResponse<String> retrievedRelationshipString = digitalTwinsSyncClient.getRelationshipWithResponse(\n     \"myDigitalTwinId\",\n     \"myRelationshipName\",\n     String.class,\n     new Context(\"key\", \"value\"));\n \n System.out.println(\n     \"Retrieved relationship: \" +\n     retrievedRelationshipString +\n     \" HTTP status code: \" +\n     retrievedRelationshipString.getStatusCode());\n```"
  parameters:
  - description: "The Id of the source digital twin."
    name: "digitalTwinId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Id of the relationship to retrieve."
    name: "relationshipId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The model class to deserialize the relationship into."
    name: "clazz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DigitalTwinsResponse<T> <T>getRelationshipWithResponse(String digitalTwinId, String relationshipId, Class<T> clazz, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.digitaltwins.core.models.DigitalTwinsResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DigitalTwinsResponse\"></xref> containing the deserialized relationship."
    type: "<xref href=\"com.azure.digitaltwins.core.models.DigitalTwinsResponse?alt=com.azure.digitaltwins.core.models.DigitalTwinsResponse&text=DigitalTwinsResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.digitaltwins.core"
artifact: com.azure:azure-digitaltwins-core:1.0.1
