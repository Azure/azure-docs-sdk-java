### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.maps.mapcontrol.EventManager
  id: EventManager
  parent: com.microsoft.azure.maps.mapcontrol
  children:
  - com.microsoft.azure.maps.mapcontrol.EventManager._wrap(T,String [])
  - com.microsoft.azure.maps.mapcontrol.EventManager.add(EventListener,String...)
  - com.microsoft.azure.maps.mapcontrol.EventManager.remove(MapEvent)
  - com.microsoft.azure.maps.mapcontrol.EventManager.remove(MapEvent [])
  href: com.microsoft.azure.maps.mapcontrol.EventManager.yml
  langs:
  - java
  name: EventManager
  nameWithType: EventManager
  fullName: com.microsoft.azure.maps.mapcontrol.EventManager
  type: Class
  source:
    remote: &o0
      path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/EventManager.java
      branch: master
      repo: https://dev.azure.com/msazure/One/_git/Azure-IoT-Maps-AndroidSDK
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/EventManager.java
    startLine: 13
  package: com.microsoft.azure.maps.mapcontrol
  summary: "<p>A manager for the map control's events. Exposed through the events property of the atlas.Map class. Cannot be instantiated by the user. </p>"
  syntax:
    content: public class EventManager
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.maps.mapcontrol.EventManager._wrap(T,String [])
  id: _wrap(T,String [])
  parent: com.microsoft.azure.maps.mapcontrol.EventManager
  href: com.microsoft.azure.maps.mapcontrol.EventManager.yml
  langs:
  - java
  name: _wrap(T eventListener, String[] layerIds)
  nameWithType: EventManager._wrap(T eventListener, String[] layerIds)
  fullName: com.microsoft.azure.maps.mapcontrol.EventManager._wrap(T eventListener, String[] layerIds)
  overload: com.microsoft.azure.maps.mapcontrol.EventManager._wrap*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/EventManager.java
    startLine: 64
  package: com.microsoft.azure.maps.mapcontrol
  syntax:
    content: protected abstract<T extends MapEvent> MapEventWrapper<T> _wrap(T eventListener, String[] layerIds)
    parameters:
    - id: eventListener
      type: 8ce1ecb9
    - id: layerIds
      type: 1bb63ab0
    return:
      type: 1a7e515acom.microsoft.azure.maps.mapcontrol.events.MapEvent3b9c2275
- uid: com.microsoft.azure.maps.mapcontrol.EventManager.add(EventListener,String...)
  id: )
  parent: com.microsoft.azure.maps.mapcontrol.EventManager
  href: com.microsoft.azure.maps.mapcontrol.EventManager.yml
  langs:
  - java
  name: add(EventListener eventListener, String... layerIds)
  nameWithType: EventManager.add(EventListener eventListener, String... layerIds)
  fullName: com.microsoft.azure.maps.mapcontrol.EventManager.add(EventListener eventListener, String... layerIds)
  overload: com.microsoft.azure.maps.mapcontrol.EventManager.add*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/EventManager.java
    startLine: 23
  package: com.microsoft.azure.maps.mapcontrol
  summary: "<p>Adds a event listener to the map. </p>"
  syntax:
    content: public <EventListener extends MapEvent> EventListener add(EventListener eventListener, String... layerIds)
    parameters:
    - id: eventListener
      type: 11189a4f
      description: <p>The listener for the event. </p>
    - id: layerIds
      type: 04d2b762
      description: <p>The layer(s) to add the event for (optional and not applicable for every event) </p>
    return:
      type: 3ad766bbcom.microsoft.azure.maps.mapcontrol.events.MapEvente5a1a0c3
      description: <p>eventListener The listener for the event. </p>
- uid: com.microsoft.azure.maps.mapcontrol.EventManager.remove(MapEvent)
  id: remove(MapEvent)
  parent: com.microsoft.azure.maps.mapcontrol.EventManager
  href: com.microsoft.azure.maps.mapcontrol.EventManager.yml
  langs:
  - java
  name: remove(MapEvent eventListener)
  nameWithType: EventManager.remove(MapEvent eventListener)
  fullName: com.microsoft.azure.maps.mapcontrol.EventManager.remove(MapEvent eventListener)
  overload: com.microsoft.azure.maps.mapcontrol.EventManager.remove*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/EventManager.java
    startLine: 34
  package: com.microsoft.azure.maps.mapcontrol
  summary: "<p>Removes a event listener from the map. </p>"
  syntax:
    content: public void remove(MapEvent eventListener)
    parameters:
    - id: eventListener
      type: com.microsoft.azure.maps.mapcontrol.events.MapEvent
      description: <p>The listener for the event. </p>
- uid: com.microsoft.azure.maps.mapcontrol.EventManager.remove(MapEvent [])
  id: remove(MapEvent [])
  parent: com.microsoft.azure.maps.mapcontrol.EventManager
  href: com.microsoft.azure.maps.mapcontrol.EventManager.yml
  langs:
  - java
  name: remove(MapEvent[] eventListeners)
  nameWithType: EventManager.remove(MapEvent[] eventListeners)
  fullName: com.microsoft.azure.maps.mapcontrol.EventManager.remove(MapEvent[] eventListeners)
  overload: com.microsoft.azure.maps.mapcontrol.EventManager.remove*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/EventManager.java
    startLine: 45
  package: com.microsoft.azure.maps.mapcontrol
  summary: "<p>Removes multiple event listeners from the map. </p>"
  syntax:
    content: public void remove(MapEvent[] eventListeners)
    parameters:
    - id: eventListeners
      type: com.microsoft.azure.maps.mapcontrol.events.MapEvente5b41c5f
      description: <p>The listeners for the event. </p>
references:
- uid: com.microsoft.azure.maps.mapcontrol.EventManager.remove*
  name: remove
  nameWithType: EventManager.remove
  fullName: com.microsoft.azure.maps.mapcontrol.EventManager.remove
  package: com.microsoft.azure.maps.mapcontrol
- uid: com.microsoft.azure.maps.mapcontrol.events.MapEvente5b41c5f
  spec.java:
  - uid: com.microsoft.azure.maps.mapcontrol.events.MapEvent
    name: MapEvent
    fullName: com.microsoft.azure.maps.mapcontrol.events.MapEvent
    href: com.microsoft.azure.maps.mapcontrol.events.MapEvent.yml
  - name: " []"
    fullName: " []"
- uid: 11189a4f
  spec.java:
  - name: EventListener
    fullName: EventListener
- uid: 04d2b762
  spec.java:
  - name: String...
    fullName: String...
- uid: 3ad766bbcom.microsoft.azure.maps.mapcontrol.events.MapEvente5a1a0c3
  spec.java:
  - name: '<EventListener extends '
    fullName: '<EventListener extends '
  - uid: com.microsoft.azure.maps.mapcontrol.events.MapEvent
    name: MapEvent
    fullName: com.microsoft.azure.maps.mapcontrol.events.MapEvent
    href: com.microsoft.azure.maps.mapcontrol.events.MapEvent.yml
  - name: '> EventListener'
    fullName: '> EventListener'
- uid: com.microsoft.azure.maps.mapcontrol.EventManager.add*
  name: add
  nameWithType: EventManager.add
  fullName: com.microsoft.azure.maps.mapcontrol.EventManager.add
  package: com.microsoft.azure.maps.mapcontrol
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: 1bb63ab0
  spec.java:
  - name: String []
    fullName: String []
- uid: 1a7e515acom.microsoft.azure.maps.mapcontrol.events.MapEvent3b9c2275
  spec.java:
  - name: 'abstract<T extends '
    fullName: 'abstract<T extends '
  - uid: com.microsoft.azure.maps.mapcontrol.events.MapEvent
    name: MapEvent
    fullName: com.microsoft.azure.maps.mapcontrol.events.MapEvent
    href: com.microsoft.azure.maps.mapcontrol.events.MapEvent.yml
  - name: '> MapEventWrapper<T>'
    fullName: '> MapEventWrapper<T>'
- uid: com.microsoft.azure.maps.mapcontrol.EventManager._wrap*
  name: _wrap
  nameWithType: EventManager._wrap
  fullName: com.microsoft.azure.maps.mapcontrol.EventManager._wrap
  package: com.microsoft.azure.maps.mapcontrol
- uid: com.microsoft.azure.maps.mapcontrol.events.MapEvent
  parent: com.microsoft.azure.maps.mapcontrol.events
  href: com.microsoft.azure.maps.mapcontrol.events.MapEvent.yml
  name: MapEvent
  nameWithType: MapEvent
  fullName: com.microsoft.azure.maps.mapcontrol.events.MapEvent
  type: Interface
  summary: "<p>A listener for a map event. </p>"
  syntax:
    content: public interface MapEvent
