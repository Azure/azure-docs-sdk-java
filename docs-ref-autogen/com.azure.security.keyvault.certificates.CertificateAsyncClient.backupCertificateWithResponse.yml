### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.backupCertificateWithResponse*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.backupCertificateWithResponse"
name: "backupCertificateWithResponse"
nameWithType: "CertificateAsyncClient.backupCertificateWithResponse"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.backupCertificateWithResponse(java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.backupCertificateWithResponse(String certificateName)"
  name: "backupCertificateWithResponse(String certificateName)"
  nameWithType: "CertificateAsyncClient.backupCertificateWithResponse(String certificateName)"
  summary: "Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.\n\n**Code Samples**\n\nBacks up the certificate from the key vault. Prints out the length of the certificate's backup byte array returned in the response.\n\n```java\ncertificateAsyncClient.backupCertificateWithResponse(\"certificateName\")\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(certificateBackupResponse ->\n         System.out.printf(\"Certificate's Backup Byte array's length %s %n\",\n             certificateBackupResponse.getValue().length));\n```"
  parameters:
  - description: "The name of the certificate."
    name: "certificateName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<byte[]>> backupCertificateWithResponse(String certificateName)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the backed up certificate blob."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.1.4
