### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule"
fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule"
name: "LoadBalancerOutboundRule"
nameWithType: "LoadBalancerOutboundRule"
summary: "An immutable client-side representation of an outbound rule."
syntax: "public interface **LoadBalancerOutboundRule**</br> extends <xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.OutboundRuleInner?alt=com.azure.resourcemanager.network.fluent.models.OutboundRuleInner&text=OutboundRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;, <xref href=\"com.azure.resourcemanager.network.models.HasProtocol?alt=com.azure.resourcemanager.network.models.HasProtocol&text=HasProtocol\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerOutboundRuleProtocol?alt=com.azure.resourcemanager.network.models.LoadBalancerOutboundRuleProtocol&text=LoadBalancerOutboundRuleProtocol\" data-throw-if-not-resolved=\"False\" />&gt;, <xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.ChildResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.ChildResource&text=ChildResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.LoadBalancer?alt=com.azure.resourcemanager.network.models.LoadBalancer&text=LoadBalancer\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.allocatedOutboundPorts()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.allocatedOutboundPorts()"
  name: "allocatedOutboundPorts()"
  nameWithType: "LoadBalancerOutboundRule.allocatedOutboundPorts()"
  summary: "Gets the number of outbound ports to be used for NAT."
  modifiers:
  - "abstract"
  syntax: "public abstract int allocatedOutboundPorts()"
  desc: "Gets the number of outbound ports to be used for NAT."
  returns:
    description: "the number of outbound ports to be used for NAT"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.backend()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.backend()"
  name: "backend()"
  nameWithType: "LoadBalancerOutboundRule.backend()"
  summary: "Gets the associated backend."
  modifiers:
  - "abstract"
  syntax: "public abstract LoadBalancerBackend backend()"
  desc: "Gets the associated backend."
  returns:
    description: "the associated backend"
    type: "<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerBackend?alt=com.azure.resourcemanager.network.models.LoadBalancerBackend&text=LoadBalancerBackend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.frontends()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.frontends()"
  name: "frontends()"
  nameWithType: "LoadBalancerOutboundRule.frontends()"
  summary: "Gets the associated frontends."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerFrontend> frontends()"
  desc: "Gets the associated frontends."
  returns:
    description: "the associated frontends"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerFrontend?alt=com.azure.resourcemanager.network.models.LoadBalancerFrontend&text=LoadBalancerFrontend\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.idleTimeoutInMinutes()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.idleTimeoutInMinutes()"
  name: "idleTimeoutInMinutes()"
  nameWithType: "LoadBalancerOutboundRule.idleTimeoutInMinutes()"
  summary: "Gets the number of minutes before an idle connection is closed."
  modifiers:
  - "abstract"
  syntax: "public abstract int idleTimeoutInMinutes()"
  desc: "Gets the number of minutes before an idle connection is closed."
  returns:
    description: "the number of minutes before an idle connection is closed"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.protocol()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.protocol()"
  name: "protocol()"
  nameWithType: "LoadBalancerOutboundRule.protocol()"
  summary: "Gets outbound rule protocol."
  modifiers:
  - "abstract"
  syntax: "public abstract LoadBalancerOutboundRuleProtocol protocol()"
  desc: "Gets outbound rule protocol."
  returns:
    description: "outbound rule protocol"
    type: "<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerOutboundRuleProtocol?alt=com.azure.resourcemanager.network.models.LoadBalancerOutboundRuleProtocol&text=LoadBalancerOutboundRuleProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.provisioningState()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.provisioningState()"
  name: "provisioningState()"
  nameWithType: "LoadBalancerOutboundRule.provisioningState()"
  summary: "Gets the provisioning state of the outbound rule resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioning state of the outbound rule resource."
  returns:
    description: "the provisioning state of the outbound rule resource"
    type: "<xref href=\"com.azure.resourcemanager.network.models.ProvisioningState?alt=com.azure.resourcemanager.network.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.tcpResetEnabled()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.tcpResetEnabled()"
  name: "tcpResetEnabled()"
  nameWithType: "LoadBalancerOutboundRule.tcpResetEnabled()"
  summary: "Checks whether TCP reset is enabled."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean tcpResetEnabled()"
  desc: "Checks whether TCP reset is enabled."
  returns:
    description: "if TCP reset is enabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of an outbound rule."
implements:
- "<xref href=\"com.azure.resourcemanager.network.models.HasProtocol?alt=com.azure.resourcemanager.network.models.HasProtocol&text=HasProtocol\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerOutboundRuleProtocol?alt=com.azure.resourcemanager.network.models.LoadBalancerOutboundRuleProtocol&text=LoadBalancerOutboundRuleProtocol\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.ChildResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.ChildResource&text=ChildResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.LoadBalancer?alt=com.azure.resourcemanager.network.models.LoadBalancer&text=LoadBalancer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.OutboundRuleInner?alt=com.azure.resourcemanager.network.fluent.models.OutboundRuleInner&text=OutboundRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.47.0
