### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule"
fullName: "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule"
name: "LoadBalancerOutboundRule"
nameWithType: "LoadBalancerOutboundRule"
summary: "An immutable client-side representation of an outbound rule."
syntax: "public interface LoadBalancerOutboundRule extends HasInnerModel<OutboundRuleInner>, HasProtocol<LoadBalancerOutboundRuleProtocol>, ChildResource<LoadBalancer>"
methods:
- "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.allocatedOutboundPorts()"
- "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.backend()"
- "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.frontends()"
- "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.idleTimeoutInMinutes()"
- "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.protocol()"
- "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.provisioningState()"
- "com.azure.resourcemanager.network.models.LoadBalancerOutboundRule.tcpResetEnabled()"
type: "interface"
implements:
- "<xref href=\"com.azure.resourcemanager.network.models.HasProtocol?alt=com.azure.resourcemanager.network.models.HasProtocol&text=HasProtocol\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerOutboundRuleProtocol?alt=com.azure.resourcemanager.network.models.LoadBalancerOutboundRuleProtocol&text=LoadBalancerOutboundRuleProtocol\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.ChildResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.ChildResource&text=ChildResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.LoadBalancer?alt=com.azure.resourcemanager.network.models.LoadBalancer&text=LoadBalancer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.OutboundRuleInner?alt=com.azure.resourcemanager.network.fluent.models.OutboundRuleInner&text=OutboundRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.13.0
