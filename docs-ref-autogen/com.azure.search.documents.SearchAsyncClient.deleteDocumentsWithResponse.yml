### YamlMime:JavaMember
uid: "com.azure.search.documents.SearchAsyncClient.deleteDocumentsWithResponse*"
fullName: "com.azure.search.documents.SearchAsyncClient.deleteDocumentsWithResponse"
name: "deleteDocumentsWithResponse"
nameWithType: "SearchAsyncClient.deleteDocumentsWithResponse"
members:
- uid: "com.azure.search.documents.SearchAsyncClient.deleteDocumentsWithResponse(java.lang.Iterable<?>,com.azure.search.documents.models.IndexDocumentsOptions)"
  fullName: "com.azure.search.documents.SearchAsyncClient.deleteDocumentsWithResponse(Iterable<?> documents, IndexDocumentsOptions options)"
  name: "deleteDocumentsWithResponse(Iterable<?> documents, IndexDocumentsOptions options)"
  nameWithType: "SearchAsyncClient.deleteDocumentsWithResponse(Iterable<?> documents, IndexDocumentsOptions options)"
  summary: "Deletes a collection of documents from the target index.\n\n**Code Sample**\n\nDelete dynamic SearchDocument.\n\n```java\nSearchDocument searchDocument = new SearchDocument();\n searchDocument.put(\"hotelId\", \"1\");\n searchDocument.put(\"hotelName\", \"test\");\n searchAsyncClient.deleteDocumentsWithResponse(Collections.singletonList(searchDocument), null)\n     .subscribe(resultResponse -> {\n         System.out.println(\"The status code of the response is \" + resultResponse.getStatusCode());\n         for (IndexingResult indexingResult : resultResponse.getValue().getResults()) {\n             System.out.printf(\"Does document with key %s delete successfully? %b%n\", indexingResult.getKey(),\n                 indexingResult.isSucceeded());\n         }\n     });\n```"
  parameters:
  - description: "collection of documents to delete from the target Index. Fields other than the key are ignored."
    name: "documents"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "Options that allow specifying document indexing behavior."
    name: "options"
    type: "<xref href=\"com.azure.search.documents.models.IndexDocumentsOptions?alt=com.azure.search.documents.models.IndexDocumentsOptions&text=IndexDocumentsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<IndexDocumentsResult>> deleteDocumentsWithResponse(Iterable<?> documents, IndexDocumentsOptions options)"
  returns:
    description: "response containing the document index result."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.models.IndexDocumentsResult?alt=com.azure.search.documents.models.IndexDocumentsResult&text=IndexDocumentsResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents"
artifact: com.azure:azure-search-documents:11.1.3
