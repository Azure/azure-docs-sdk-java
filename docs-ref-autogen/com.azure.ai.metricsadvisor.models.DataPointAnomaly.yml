### YamlMime:JavaType
uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly"
fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly"
name: "DataPointAnomaly"
nameWithType: "DataPointAnomaly"
summary: "Describes an anomaly detected in a metric series."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DataPointAnomaly"
constructors:
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.DataPointAnomaly()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.DataPointAnomaly()"
  name: "DataPointAnomaly()"
  nameWithType: "DataPointAnomaly.DataPointAnomaly()"
  syntax: "public DataPointAnomaly()"
methods:
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getCreatedTime()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getCreatedTime()"
  name: "getCreatedTime()"
  nameWithType: "DataPointAnomaly.getCreatedTime()"
  summary: "Gets the time in which alert for this anomaly created."
  syntax: "public OffsetDateTime getCreatedTime()"
  desc: "Gets the time in which alert for this anomaly created."
  returns:
    description: "The start time."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getDataFeedId()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getDataFeedId()"
  name: "getDataFeedId()"
  nameWithType: "DataPointAnomaly.getDataFeedId()"
  summary: "Get the data feed id."
  syntax: "public String getDataFeedId()"
  desc: "Get the data feed id."
  returns:
    description: "The data feed id."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getDetectionConfigurationId()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getDetectionConfigurationId()"
  name: "getDetectionConfigurationId()"
  nameWithType: "DataPointAnomaly.getDetectionConfigurationId()"
  summary: "Gets the id of the configuration used to detect the anomaly."
  syntax: "public String getDetectionConfigurationId()"
  desc: "Gets the id of the configuration used to detect the anomaly."
  returns:
    description: "The anomaly detection configuration id."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getExpectedValue()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getExpectedValue()"
  name: "getExpectedValue()"
  nameWithType: "DataPointAnomaly.getExpectedValue()"
  summary: "Gets the expected value of the data point computed by the smart-detector had it not an anomaly."
  syntax: "public Double getExpectedValue()"
  desc: "Gets the expected value of the data point computed by the smart-detector had it not an anomaly."
  returns:
    description: "The expected value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getMetricId()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getMetricId()"
  name: "getMetricId()"
  nameWithType: "DataPointAnomaly.getMetricId()"
  summary: "Gets the metric id."
  syntax: "public String getMetricId()"
  desc: "Gets the metric id."
  returns:
    description: "The metric id."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getModifiedTime()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getModifiedTime()"
  name: "getModifiedTime()"
  nameWithType: "DataPointAnomaly.getModifiedTime()"
  summary: "Gets the time in which alert for this anomaly modified."
  syntax: "public OffsetDateTime getModifiedTime()"
  desc: "Gets the time in which alert for this anomaly modified."
  returns:
    description: "The modified time."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getSeriesKey()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getSeriesKey()"
  name: "getSeriesKey()"
  nameWithType: "DataPointAnomaly.getSeriesKey()"
  summary: "Gets the key of the series in which anomaly detected."
  syntax: "public DimensionKey getSeriesKey()"
  desc: "Gets the key of the series in which anomaly detected."
  returns:
    description: "key of the series."
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.DimensionKey?alt=com.azure.ai.metricsadvisor.models.DimensionKey&text=DimensionKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getSeverity()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getSeverity()"
  name: "getSeverity()"
  nameWithType: "DataPointAnomaly.getSeverity()"
  summary: "Gets the severity of the anomaly."
  syntax: "public AnomalySeverity getSeverity()"
  desc: "Gets the severity of the anomaly."
  returns:
    description: "The severity."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AnomalySeverity?alt=com.azure.ai.metricsadvisor.administration.models.AnomalySeverity&text=AnomalySeverity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getStatus()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getStatus()"
  name: "getStatus()"
  nameWithType: "DataPointAnomaly.getStatus()"
  summary: "Gets the anomaly status."
  syntax: "public AnomalyStatus getStatus()"
  desc: "Gets the anomaly status."
  returns:
    description: "The anomaly status."
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyStatus?alt=com.azure.ai.metricsadvisor.models.AnomalyStatus&text=AnomalyStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getTimestamp()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getTimestamp()"
  name: "getTimestamp()"
  nameWithType: "DataPointAnomaly.getTimestamp()"
  summary: "Gets the anomaly time."
  syntax: "public OffsetDateTime getTimestamp()"
  desc: "Gets the anomaly time."
  returns:
    description: "The anomaly time."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getValue()"
  fullName: "com.azure.ai.metricsadvisor.models.DataPointAnomaly.getValue()"
  name: "getValue()"
  nameWithType: "DataPointAnomaly.getValue()"
  summary: "Gets the value of the anomaly."
  syntax: "public Double getValue()"
  desc: "Gets the value of the anomaly."
  returns:
    description: "The anomaly value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes an anomaly detected in a metric series."
metadata: {}
package: "com.azure.ai.metricsadvisor.models"
artifact: com.azure:azure-ai-metricsadvisor:1.1.6
