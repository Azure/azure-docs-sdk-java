### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  id: "CryptographyClientBuilder"
  parent: "com.azure.security.keyvault.keys.cryptography"
  children:
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.CryptographyClientBuilder()"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildAsyncClient()"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildClient()"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.configuration(com.azure.core.util.Configuration)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getCredential()"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getPipeline()"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getServiceVersion()"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier(java.lang.String)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.policies"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.properties"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.retryPolicy"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.serviceVersion(com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion)"
  - "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.setupPipeline()"
  langs:
  - "java"
  name: "CryptographyClientBuilder"
  nameWithType: "CryptographyClientBuilder"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  type: "Class"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">cryptography async client</xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\">cryptography sync client</xref>, by calling <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> respectively It constructs an instance of the desired client.\n\nThe minimal configuration options required by <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder\" data-throw-if-not-resolved=\"false\">cryptographyClientBuilder</xref> to build <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">CryptographyAsyncClient</xref> are (<xref uid=\"com.azure.security.keyvault.keys.models.JsonWebKey\" data-throw-if-not-resolved=\"false\">jsonWebKey</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">jsonWebKey identifier</xref>) and <xref uid=\"\" data-throw-if-not-resolved=\"false\">credential</xref>).\n\n\\{@codesnippet com.azure.security.keyvault.keys.cryptography.async.cryptographyclient.instantiation\\}\n\nThe <xref uid=\"\" data-throw-if-not-resolved=\"false\">log detail level</xref>, multiple custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">policies</xref> and custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">http client</xref> can be optionally configured in the <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder\" data-throw-if-not-resolved=\"false\">CryptographyClientBuilder</xref>.\n\n\\{@codesnippet com.azure.security.keyvault.keys.cryptography.async.cryptographyclient.withhttpclient.instantiation\\}\n\nAlternatively, custom <xref uid=\"\" data-throw-if-not-resolved=\"false\">http pipeline</xref> with custom <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\">HttpPipelinePolicy</xref> policies can be specified. It provides finer control over the construction of <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">CryptographyAsyncClient</xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\">CryptographyClient</xref>\n\n\\{@codesnippet com.azure.security.keyvault.keys.cryptography.async.cryptographyclient.pipeline.instantiation\\}\n\nThe minimal configuration options required by <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder\" data-throw-if-not-resolved=\"false\">cryptographyClientBuilder</xref> to build <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\">CryptographyClient</xref> are <xref uid=\"com.azure.security.keyvault.keys.models.JsonWebKey\" data-throw-if-not-resolved=\"false\">jsonWebKey</xref> ot <xref uid=\"\" data-throw-if-not-resolved=\"false\">jsonWebKey identifier</xref>) and <xref uid=\"\" data-throw-if-not-resolved=\"false\">credential</xref>).\n\n\\{@codesnippet com.azure.security.keyvault.keys.cryptography.cryptographyclient.instantiation\\}"
  syntax:
    content: "public final class CryptographyClientBuilder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.CryptographyClientBuilder()"
  id: "CryptographyClientBuilder()"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "CryptographyClientBuilder()"
  nameWithType: "CryptographyClientBuilder.CryptographyClientBuilder()"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.CryptographyClientBuilder()"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.CryptographyClientBuilder*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "The constructor with defaults."
  syntax:
    content: "public CryptographyClientBuilder()"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  id: "addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "addPolicy(HttpPipelinePolicy policy)"
  nameWithType: "CryptographyClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.addPolicy*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Adds a policy to the set of existing policies that are executed after the client required policies."
  syntax:
    content: "public CryptographyClientBuilder addPolicy(HttpPipelinePolicy policy)"
    parameters:
    - id: "policy"
      type: "com.azure.core.http.policy.HttpPipelinePolicy"
      description: "The <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\">policy</xref> to be added."
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
      description: "the updated builder object."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildAsyncClient()"
  id: "buildAsyncClient()"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "buildAsyncClient()"
  nameWithType: "CryptographyClientBuilder.buildAsyncClient()"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildAsyncClient()"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildAsyncClient*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Creates a <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">CryptographyAsyncClient</xref> based on options set in the builder. Every time `buildAsyncClient()` is called, a new instance of <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">CryptographyAsyncClient</xref> is created.\n\nIf <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and (<xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier(java.lang.String)\" data-throw-if-not-resolved=\"false\">jsonWebKey identifier</xref>) are used to create the <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">async client</xref>. All other builder settings are ignored. If `pipeline` is not set, then (<xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.credential(com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\">jsonWebKey vault credential</xref> and (<xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier(java.lang.String)\" data-throw-if-not-resolved=\"false\">jsonWebKey identifier</xref> are required to build the <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">async client</xref>."
  syntax:
    content: "public CryptographyAsyncClient buildAsyncClient()"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient"
      description: "A <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\">CryptographyAsyncClient</xref> with the options set from the builder."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildClient()"
  id: "buildClient()"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "buildClient()"
  nameWithType: "CryptographyClientBuilder.buildClient()"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildClient()"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildClient*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Creates a <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\">CryptographyClient</xref> based on options set in the builder. Every time `buildClient()` is called, a new instance of <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\">CryptographyClient</xref> is created.\n\nIf <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and (<xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier(java.lang.String)\" data-throw-if-not-resolved=\"false\">jsonWebKey identifier</xref> are used to create the <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored. If `pipeline` is not set, then (<xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.credential(com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\">jsonWebKey vault credential</xref> and (<xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier(java.lang.String)\" data-throw-if-not-resolved=\"false\">jsonWebKey identifier</xref> are required to build the <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\">client</xref>."
  syntax:
    content: "public CryptographyClient buildClient()"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClient"
      description: "A <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyClient\" data-throw-if-not-resolved=\"false\">CryptographyClient</xref> with the options set from the builder."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.configuration(com.azure.core.util.Configuration)"
  id: "configuration(com.azure.core.util.Configuration)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "configuration(Configuration configuration)"
  nameWithType: "CryptographyClientBuilder.configuration(Configuration configuration)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.configuration(Configuration configuration)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.configuration*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Sets the configuration store that is used during construction of the service client. The default configuration store is a clone of the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\">global\n configuration store</xref>, use <xref uid=\"\" data-throw-if-not-resolved=\"false\">Configuration#NONE</xref> to bypass using configuration settings during construction."
  syntax:
    content: "public CryptographyClientBuilder configuration(Configuration configuration)"
    parameters:
    - id: "configuration"
      type: "com.azure.core.util.Configuration"
      description: "The configuration store used to"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
      description: "the updated builder object."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  id: "credential(com.azure.core.credential.TokenCredential)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "credential(TokenCredential credential)"
  nameWithType: "CryptographyClientBuilder.credential(TokenCredential credential)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.credential(TokenCredential credential)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.credential*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Sets the credential to use when authenticating HTTP requests."
  syntax:
    content: "public CryptographyClientBuilder credential(TokenCredential credential)"
    parameters:
    - id: "credential"
      type: "com.azure.core.credential.TokenCredential"
      description: "The credential to use for authenticating HTTP requests."
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
      description: "the updated builder object."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getCredential()"
  id: "getCredential()"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "getCredential()"
  nameWithType: "CryptographyClientBuilder.getCredential()"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getCredential()"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getCredential*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " TokenCredential getCredential()"
    return:
      type: "com.azure.core.credential.TokenCredential"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getPipeline()"
  id: "getPipeline()"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "getPipeline()"
  nameWithType: "CryptographyClientBuilder.getPipeline()"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getPipeline()"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getPipeline*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " HttpPipeline getPipeline()"
    return:
      type: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getServiceVersion()"
  id: "getServiceVersion()"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "getServiceVersion()"
  nameWithType: "CryptographyClientBuilder.getServiceVersion()"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getServiceVersion()"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getServiceVersion*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " CryptographyServiceVersion getServiceVersion()"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  id: "httpClient(com.azure.core.http.HttpClient)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "httpClient(HttpClient client)"
  nameWithType: "CryptographyClientBuilder.httpClient(HttpClient client)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpClient(HttpClient client)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpClient*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Sets the HTTP client to use for sending and receiving requests to and from the service."
  syntax:
    content: "public CryptographyClientBuilder httpClient(HttpClient client)"
    parameters:
    - id: "client"
      type: "com.azure.core.http.HttpClient"
      description: "The HTTP client to use for requests."
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
      description: "the updated builder object."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  id: "httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "CryptographyClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpLogOptions*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Sets the logging configuration for HTTP requests and responses.\n\nIf logLevel is not provided, default value of <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpLogDetailLevel#NONE</xref> is set."
  syntax:
    content: "public CryptographyClientBuilder httpLogOptions(HttpLogOptions logOptions)"
    parameters:
    - id: "logOptions"
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The logging configuration to use when sending and receiving HTTP requests/responses."
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
      description: "the updated builder object."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier(java.lang.String)"
  id: "keyIdentifier(java.lang.String)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "keyIdentifier(String keyId)"
  nameWithType: "CryptographyClientBuilder.keyIdentifier(String keyId)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier(String keyId)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Sets the identifier of the jsonWebKey from Azure Key Vault to be used for cryptography operations.\n\nIf `jsonWebKey` is provided then that takes precedence over key identifier and gets used for cryptography operations."
  syntax:
    content: "public CryptographyClientBuilder keyIdentifier(String keyId)"
    parameters:
    - id: "keyId"
      type: "java.lang.String"
      description: "The jsonWebKey identifier representing the jsonWebKey stored in jsonWebKey vault."
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
      description: "the updated builder object."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  id: "pipeline(com.azure.core.http.HttpPipeline)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "CryptographyClientBuilder.pipeline(HttpPipeline pipeline)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.pipeline(HttpPipeline pipeline)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.pipeline*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Sets the HTTP pipeline to use for the service client. If `pipeline` is set, all other settings are ignored, aside from jsonWebKey identifier or jsonWebKey to build the clients."
  syntax:
    content: "public CryptographyClientBuilder pipeline(HttpPipeline pipeline)"
    parameters:
    - id: "pipeline"
      type: "com.azure.core.http.HttpPipeline"
      description: "The HTTP pipeline to use for sending service requests and receiving responses."
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
      description: "the updated builder object."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.policies"
  id: "policies"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "policies"
  nameWithType: "CryptographyClientBuilder.policies"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.policies"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "final List<HttpPipelinePolicy> policies"
    return:
      type: "java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.properties"
  id: "properties"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "properties"
  nameWithType: "CryptographyClientBuilder.properties"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.properties"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "final Map<String,String> properties"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.retryPolicy"
  id: "retryPolicy"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "retryPolicy"
  nameWithType: "CryptographyClientBuilder.retryPolicy"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.retryPolicy"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "final RetryPolicy retryPolicy"
    return:
      type: "com.azure.core.http.policy.RetryPolicy"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.serviceVersion(com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion)"
  id: "serviceVersion(com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion)"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "serviceVersion(CryptographyServiceVersion version)"
  nameWithType: "CryptographyClientBuilder.serviceVersion(CryptographyServiceVersion version)"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.serviceVersion(CryptographyServiceVersion version)"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.serviceVersion*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Sets the <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion\" data-throw-if-not-resolved=\"false\">CryptographyServiceVersion</xref> that is used when making API requests.\n\nIf a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version the client library will have the result of potentially moving to a newer service version."
  syntax:
    content: "public CryptographyClientBuilder serviceVersion(CryptographyServiceVersion version)"
    parameters:
    - id: "version"
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion"
      description: "<xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion\" data-throw-if-not-resolved=\"false\">CryptographyServiceVersion</xref> of the service to be used when making requests."
    return:
      type: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
      description: "The updated CryptographyClientBuilder object."
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.setupPipeline()"
  id: "setupPipeline()"
  parent: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder"
  langs:
  - "java"
  name: "setupPipeline()"
  nameWithType: "CryptographyClientBuilder.setupPipeline()"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.setupPipeline()"
  overload: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.setupPipeline*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " HttpPipeline setupPipeline()"
    return:
      type: "com.azure.core.http.HttpPipeline"
references:
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.CryptographyClientBuilder*"
  name: "CryptographyClientBuilder"
  nameWithType: "CryptographyClientBuilder.CryptographyClientBuilder"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.CryptographyClientBuilder"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClient"
  name: "CryptographyClient"
  nameWithType: "CryptographyClient"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClient"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildClient*"
  name: "buildClient"
  nameWithType: "CryptographyClientBuilder.buildClient"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildClient"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient"
  name: "CryptographyAsyncClient"
  nameWithType: "CryptographyAsyncClient"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildAsyncClient*"
  name: "buildAsyncClient"
  nameWithType: "CryptographyClientBuilder.buildAsyncClient"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.buildAsyncClient"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.core.http.HttpPipeline"
  spec.java:
  - uid: "com.azure.core.http.HttpPipeline"
    name: "HttpPipeline"
    fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.setupPipeline*"
  name: "setupPipeline"
  nameWithType: "CryptographyClientBuilder.setupPipeline"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.setupPipeline"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.core.credential.TokenCredential"
  spec.java:
  - uid: "com.azure.core.credential.TokenCredential"
    name: "TokenCredential"
    fullName: "com.azure.core.credential.TokenCredential"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getCredential*"
  name: "getCredential"
  nameWithType: "CryptographyClientBuilder.getCredential"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getCredential"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getPipeline*"
  name: "getPipeline"
  nameWithType: "CryptographyClientBuilder.getPipeline"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getPipeline"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion"
  name: "CryptographyServiceVersion"
  nameWithType: "CryptographyServiceVersion"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyServiceVersion"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getServiceVersion*"
  name: "getServiceVersion"
  nameWithType: "CryptographyClientBuilder.getServiceVersion"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.getServiceVersion"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier*"
  name: "keyIdentifier"
  nameWithType: "CryptographyClientBuilder.keyIdentifier"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.keyIdentifier"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.credential*"
  name: "credential"
  nameWithType: "CryptographyClientBuilder.credential"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.credential"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.core.http.policy.HttpLogOptions"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpLogOptions"
    name: "HttpLogOptions"
    fullName: "com.azure.core.http.policy.HttpLogOptions"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpLogOptions*"
  name: "httpLogOptions"
  nameWithType: "CryptographyClientBuilder.httpLogOptions"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpLogOptions"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.addPolicy*"
  name: "addPolicy"
  nameWithType: "CryptographyClientBuilder.addPolicy"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.addPolicy"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.core.http.HttpClient"
  spec.java:
  - uid: "com.azure.core.http.HttpClient"
    name: "HttpClient"
    fullName: "com.azure.core.http.HttpClient"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpClient*"
  name: "httpClient"
  nameWithType: "CryptographyClientBuilder.httpClient"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.httpClient"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.pipeline*"
  name: "pipeline"
  nameWithType: "CryptographyClientBuilder.pipeline"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.pipeline"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.core.util.Configuration"
  spec.java:
  - uid: "com.azure.core.util.Configuration"
    name: "Configuration"
    fullName: "com.azure.core.util.Configuration"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.configuration*"
  name: "configuration"
  nameWithType: "CryptographyClientBuilder.configuration"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.configuration"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.serviceVersion*"
  name: "serviceVersion"
  nameWithType: "CryptographyClientBuilder.serviceVersion"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyClientBuilder.serviceVersion"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
  - name: ">"
    fullName: ">"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.policy.RetryPolicy"
  spec.java:
  - uid: "com.azure.core.http.policy.RetryPolicy"
    name: "RetryPolicy"
    fullName: "com.azure.core.http.policy.RetryPolicy"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
