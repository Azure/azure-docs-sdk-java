### YamlMime:JavaMember
nameWithType: VolatileActorStateProvider.getLastCommittedSequenceNumber
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getLastCommittedSequenceNumber()
  name: getLastCommittedSequenceNumber()
  nameWithType: VolatileActorStateProvider.getLastCommittedSequenceNumber()
  overridden: system.fabric.StateProvider.getLastCommittedSequenceNumber()
  returns:
    description: <p>Returns long. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Obtains the last sequence number that the service has committed.</p>

    <p>

      <b>Remarks:</b>This method is called on a service when it first starts up, in case it has any persistent state, and when data loss is suspected. When a stateful service replica starts up, it has the option to restore any data that might have persisted from previous updates. If it restores some state in this manner, its current progress is the last written sequence number for that data. A volatile service can simply return 0. Note that this method is not called to determine a new primary election during fail-over, because the current committed progress is already known by the <xref uid="" data-throw-if-not-resolved="false">FabricReplicator</xref> class at that time. </p>
  syntax: public long getLastCommittedSequenceNumber()
  uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getLastCommittedSequenceNumber()
uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getLastCommittedSequenceNumber*
fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getLastCommittedSequenceNumber()
name: getLastCommittedSequenceNumber()
package: microsoft.servicefabric.actors.runtime
metadata: {}
