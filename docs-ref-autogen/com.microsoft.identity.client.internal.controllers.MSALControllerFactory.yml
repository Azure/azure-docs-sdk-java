### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory
  id: MSALControllerFactory
  parent: com.microsoft.identity.client.internal.controllers
  children:
  - com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerEligible(@NonNull final Context,@NonNull Authority,@NonNull PublicClientApplicationConfiguration)
  - com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerInstalled(@NonNull final Context)
  - com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getAllControllers(@NonNull final Context,@NonNull final Authority,@NonNull final PublicClientApplicationConfiguration)
  - com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getDefaultController(@NonNull final Context,@NonNull final Authority,@NonNull final PublicClientApplicationConfiguration)
  href: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.yml
  langs:
  - java
  name: MSALControllerFactory
  nameWithType: MSALControllerFactory
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory
  type: Class
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/internal/controllers/MSALControllerFactory.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/internal/controllers/MSALControllerFactory.java
    startLine: 52
  package: com.microsoft.identity.client.internal.controllers
  summary: "<p>Responsible for returning the correct controller depending on the type of request (Silent, Interactive), authority app configuration, device state </p>"
  syntax:
    content: public class MSALControllerFactory
  inheritance:
  - java.lang.Object
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerEligible(@NonNull final Context,@NonNull Authority,@NonNull PublicClientApplicationConfiguration)
  id: brokerEligible(@NonNull final Context,@NonNull Authority,@NonNull PublicClientApplicationConfiguration)
  parent: com.microsoft.identity.client.internal.controllers.MSALControllerFactory
  href: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.yml
  langs:
  - java
  name: brokerEligible(@NonNull final Context applicationContext, @NonNull Authority authority, @NonNull PublicClientApplicationConfiguration applicationConfiguration)
  nameWithType: MSALControllerFactory.brokerEligible(@NonNull final Context applicationContext, @NonNull Authority authority, @NonNull PublicClientApplicationConfiguration applicationConfiguration)
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerEligible(@NonNull final Context applicationContext, @NonNull Authority authority, @NonNull PublicClientApplicationConfiguration applicationConfiguration)
  overload: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerEligible*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/internal/controllers/MSALControllerFactory.java
    startLine: 120
  package: com.microsoft.identity.client.internal.controllers
  summary: "<p>Determine if request is eligible to use the broker </p>\r\n<p>Client indicates that it wants to use broker Authority == AzureActiveDirectoryAuthority Audience != AnyPersonalAccounts Broker Installed &amp; Verified</p>\r\n<p></p>"
  syntax:
    content: public static boolean brokerEligible(@NonNull final Context applicationContext, @NonNull Authority authority, @NonNull PublicClientApplicationConfiguration applicationConfiguration)
    parameters:
    - id: applicationContext
      type: 3c9b8ebf
    - id: authority
      type: 530908b6
    - id: applicationConfiguration
      type: 3872da22com.microsoft.identity.client.PublicClientApplicationConfiguration
    return:
      type: 4fc6e284
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerInstalled(@NonNull final Context)
  id: brokerInstalled(@NonNull final Context)
  parent: com.microsoft.identity.client.internal.controllers.MSALControllerFactory
  href: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.yml
  langs:
  - java
  name: brokerInstalled(@NonNull final Context applicationContext)
  nameWithType: MSALControllerFactory.brokerInstalled(@NonNull final Context applicationContext)
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerInstalled(@NonNull final Context applicationContext)
  overload: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerInstalled*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/internal/controllers/MSALControllerFactory.java
    startLine: 184
  package: com.microsoft.identity.client.internal.controllers
  summary: "<p>Check if a broker is installed and trusted:<ul><li><p>Check that authenticator is available for custom account type \"Work Account\"</p></li><li><p>Verify that the signature of package associated with the authenticator is trusted </p></li></ul></p>\r\n<p>there may be multiple packages containing the android authenticator implementation (custom account) but there is only one entry for custom account type currently registered by the AccountManager. If another app tries to install same authenticator (custom account type) type, it will queue up and will be active after first one is uninstalled.</p>\r\n<p></p>"
  syntax:
    content: protected static boolean brokerInstalled(@NonNull final Context applicationContext)
    parameters:
    - id: applicationContext
      type: 3c9b8ebf
    return:
      type: 4fc6e284
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getAllControllers(@NonNull final Context,@NonNull final Authority,@NonNull final PublicClientApplicationConfiguration)
  id: getAllControllers(@NonNull final Context,@NonNull final Authority,@NonNull final PublicClientApplicationConfiguration)
  parent: com.microsoft.identity.client.internal.controllers.MSALControllerFactory
  href: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.yml
  langs:
  - java
  name: getAllControllers(@NonNull final Context applicationContext, @NonNull final Authority authority, @NonNull final PublicClientApplicationConfiguration applicationConfiguration)
  nameWithType: MSALControllerFactory.getAllControllers(@NonNull final Context applicationContext, @NonNull final Authority authority, @NonNull final PublicClientApplicationConfiguration applicationConfiguration)
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getAllControllers(@NonNull final Context applicationContext, @NonNull final Authority authority, @NonNull final PublicClientApplicationConfiguration applicationConfiguration)
  overload: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getAllControllers*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/internal/controllers/MSALControllerFactory.java
    startLine: 94
  package: com.microsoft.identity.client.internal.controllers
  summary: "<p>Returns one or more controllers to address a given request. </p>\r\n<p>The order of the response matters. The local controller should be returned first in order to ensure that any local refresh tokens are preferred over the use of the broker </p>\r\n<p>Only return the broker controller when the following are true: </p>\r\n<p>1) The client indicates it wants to use broker 2) The authority is AAD 3) The audience is not AnyPersonalAccount 4) The broker is installed 5) The broker redirect URI for the client is registered</p>\r\n<p></p>"
  syntax:
    content: public static List<BaseController> getAllControllers(@NonNull final Context applicationContext, @NonNull final Authority authority, @NonNull final PublicClientApplicationConfiguration applicationConfiguration)
    parameters:
    - id: applicationContext
      type: 3c9b8ebf
    - id: authority
      type: 0c53965c
    - id: applicationConfiguration
      type: d6b37550com.microsoft.identity.client.PublicClientApplicationConfiguration
    return:
      type: eb5bff8d
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getDefaultController(@NonNull final Context,@NonNull final Authority,@NonNull final PublicClientApplicationConfiguration)
  id: getDefaultController(@NonNull final Context,@NonNull final Authority,@NonNull final PublicClientApplicationConfiguration)
  parent: com.microsoft.identity.client.internal.controllers.MSALControllerFactory
  href: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.yml
  langs:
  - java
  name: getDefaultController(@NonNull final Context applicationContext, @NonNull final Authority authority, @NonNull final PublicClientApplicationConfiguration applicationConfiguration)
  nameWithType: MSALControllerFactory.getDefaultController(@NonNull final Context applicationContext, @NonNull final Authority authority, @NonNull final PublicClientApplicationConfiguration applicationConfiguration)
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getDefaultController(@NonNull final Context applicationContext, @NonNull final Authority authority, @NonNull final PublicClientApplicationConfiguration applicationConfiguration)
  overload: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getDefaultController*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/internal/controllers/MSALControllerFactory.java
    startLine: 67
  package: com.microsoft.identity.client.internal.controllers
  summary: "<p>Returns the appropriate MSAL Controller depending on Authority, App and Device state </p>\r\n<p>1) The client indicates it wants to use broker 2) If not AAD Authority use local controller 3) If the the authority is AAD and the Audience is instance of AnyPersonalAccount Use the local controller 4) If broker is not installed use local controller 5) Otherwise return broker controller</p>\r\n<p></p>"
  syntax:
    content: public static BaseController getDefaultController(@NonNull final Context applicationContext, @NonNull final Authority authority, @NonNull final PublicClientApplicationConfiguration applicationConfiguration)
    parameters:
    - id: applicationContext
      type: 3c9b8ebf
    - id: authority
      type: 0c53965c
    - id: applicationConfiguration
      type: d6b37550com.microsoft.identity.client.PublicClientApplicationConfiguration
    return:
      type: 68177f6f
references:
- uid: 3c9b8ebf
  spec.java:
  - name: '@NonNull final Context'
    fullName: '@NonNull final Context'
- uid: 0c53965c
  spec.java:
  - name: '@NonNull final Authority'
    fullName: '@NonNull final Authority'
- uid: d6b37550com.microsoft.identity.client.PublicClientApplicationConfiguration
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
    name: PublicClientApplicationConfiguration
    fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
    href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
- uid: 68177f6f
  spec.java:
  - name: BaseController
    fullName: BaseController
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getDefaultController*
  name: getDefaultController
  nameWithType: MSALControllerFactory.getDefaultController
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getDefaultController
  package: com.microsoft.identity.client.internal.controllers
- uid: eb5bff8d
  spec.java:
  - name: List<BaseController>
    fullName: List<BaseController>
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getAllControllers*
  name: getAllControllers
  nameWithType: MSALControllerFactory.getAllControllers
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.getAllControllers
  package: com.microsoft.identity.client.internal.controllers
- uid: 530908b6
  spec.java:
  - name: '@NonNull Authority'
    fullName: '@NonNull Authority'
- uid: 3872da22com.microsoft.identity.client.PublicClientApplicationConfiguration
  spec.java:
  - name: '@NonNull '
    fullName: '@NonNull '
  - uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
    name: PublicClientApplicationConfiguration
    fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
    href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerEligible*
  name: brokerEligible
  nameWithType: MSALControllerFactory.brokerEligible
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerEligible
  package: com.microsoft.identity.client.internal.controllers
- uid: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerInstalled*
  name: brokerInstalled
  nameWithType: MSALControllerFactory.brokerInstalled
  fullName: com.microsoft.identity.client.internal.controllers.MSALControllerFactory.brokerInstalled
  package: com.microsoft.identity.client.internal.controllers
- uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
  name: PublicClientApplicationConfiguration
  nameWithType: PublicClientApplicationConfiguration
  fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
  type: Class
  syntax:
    content: public class PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.exception.MsalClientException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalClientException.yml
  name: MsalClientException
  nameWithType: MsalClientException
  fullName: com.microsoft.identity.client.exception.MsalClientException
  type: Class
  summary: "<p>This exception class represents general errors that are local to the library. Below is the table of proposed codes and a short description of each. </p>\r\n<p>Set of error codes that could be returned from this exception: <ul><li><p>multiple_matching_tokens_detected: There are multiple cache entries found and the sdk cannot identify the correct access or refresh token from the cache. This usually indicates a bug in the sdk for storing tokens or the authority is not provided in the silent request and multiple matching tokens found.  </p></li><li><p>device_network_not_available: No active network is available on the device.  </p></li><li><p>json_parse_failure: The sdk failed to parse the JSON format. </p></li><li><p>io_error: IOException happened, could be the device/network errors.  </p></li><li><p>malformed_url: The url is malformed. Likely caused when constructing the auth request, authority, or redirect URI.  </p></li><li><p>unsupported_encoding: The encoding is not supported by the device.  </p></li><li><p>no_such_algorithm: The algorithm used to generate pkce challenge is not supported.  </p></li><li><p>invalid_jwt: JWT returned by the server is not valid, empty or malformed.  </p></li><li><p>state_mismatch: State from authorization response did not match the state in the authorization request. For authorization requests, the sdk will verify the state returned from redirect and the one sent in the request.  </p></li><li><p>unsupported_url: Unsupported url, cannot perform ADFS authority validation.  </p></li><li><p>authority_validation_not_supported: The authority is not supported for authority validation. The sdk supports b2c authorities, but doesn't support b2c authority validation. Only well-known host will be supported.  </p></li><li><p>chrome_not_installed: Chrome is not installed on the device. The sdk uses chrome custom tab for authorization requests if available, and will fall back to chrome browser.  </p></li><li><p>user_mismatch: The user provided in the acquire token request doesn't match the user returned from server. </p></li></ul></p>"
  syntax:
    content: public class MsalClientException extends MsalException
