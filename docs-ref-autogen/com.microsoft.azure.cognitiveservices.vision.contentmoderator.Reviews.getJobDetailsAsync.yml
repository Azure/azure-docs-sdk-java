### YamlMime:JavaMember
nameWithType: Reviews.getJobDetailsAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.getJobDetailsAsync(String teamName, String jobId)
  name: getJobDetailsAsync(String teamName, String jobId)
  nameWithType: Reviews.getJobDetailsAsync(String teamName, String jobId)
  parameters:
  - description: <p>Your Team Name. </p>
    name: teamName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Job object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Job?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Job&text=Job" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the Job Details for a Job Id.</p>

    <p></p>
  syntax: public Observable<Job> getJobDetailsAsync(String teamName, String jobId)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.getJobDetailsAsync(String,String)
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.getJobDetailsAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.getJobDetailsAsync(String teamName, String jobId)
name: getJobDetailsAsync(String teamName, String jobId)
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
metadata: {}
