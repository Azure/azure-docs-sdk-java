### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest
  id: LeaseContainerRequest
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage
  children:
  - com.microsoft.azure.management.storage.LeaseContainerRequest.LeaseContainerRequest()
  - com.microsoft.azure.management.storage.LeaseContainerRequest.action()
  - com.microsoft.azure.management.storage.LeaseContainerRequest.breakPeriod()
  - com.microsoft.azure.management.storage.LeaseContainerRequest.leaseDuration()
  - com.microsoft.azure.management.storage.LeaseContainerRequest.leaseId()
  - com.microsoft.azure.management.storage.LeaseContainerRequest.proposedLeaseId()
  - com.microsoft.azure.management.storage.LeaseContainerRequest.withAction(java.lang.String)
  - com.microsoft.azure.management.storage.LeaseContainerRequest.withBreakPeriod(java.lang.Integer)
  - com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseDuration(java.lang.Integer)
  - com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseId(java.lang.String)
  - com.microsoft.azure.management.storage.LeaseContainerRequest.withProposedLeaseId(java.lang.String)
  langs:
  - java
  name: LeaseContainerRequest
  nameWithType: LeaseContainerRequest
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest
  type: Class
  package: com.microsoft.azure.management.storage
  summary: Lease Container request schema.
  syntax:
    content: public class LeaseContainerRequest
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.LeaseContainerRequest()
  id: LeaseContainerRequest()
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: LeaseContainerRequest()
  nameWithType: LeaseContainerRequest.LeaseContainerRequest()
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.LeaseContainerRequest()
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.LeaseContainerRequest*
  type: Constructor
  package: com.microsoft.azure.management.storage
  syntax:
    content: public LeaseContainerRequest()
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.action()
  id: action()
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: action()
  nameWithType: LeaseContainerRequest.action()
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.action()
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.action*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: "Get specifies the lease action. Can be one of the available actions. Possible values include: 'Acquire', 'Renew', 'Change', 'Release', 'Break'."
  syntax:
    content: public String action()
    return:
      type: java.lang.String
      description: the action value
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.breakPeriod()
  id: breakPeriod()
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: breakPeriod()
  nameWithType: LeaseContainerRequest.breakPeriod()
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.breakPeriod()
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.breakPeriod*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: Get optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.
  syntax:
    content: public Integer breakPeriod()
    return:
      type: java.lang.Integer
      description: the breakPeriod value
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseDuration()
  id: leaseDuration()
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: leaseDuration()
  nameWithType: LeaseContainerRequest.leaseDuration()
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseDuration()
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseDuration*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: Get required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires.
  syntax:
    content: public Integer leaseDuration()
    return:
      type: java.lang.Integer
      description: the leaseDuration value
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseId()
  id: leaseId()
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: leaseId()
  nameWithType: LeaseContainerRequest.leaseId()
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseId()
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseId*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: Get identifies the lease. Can be specified in any valid GUID string format.
  syntax:
    content: public String leaseId()
    return:
      type: java.lang.String
      description: the leaseId value
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.proposedLeaseId()
  id: proposedLeaseId()
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: proposedLeaseId()
  nameWithType: LeaseContainerRequest.proposedLeaseId()
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.proposedLeaseId()
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.proposedLeaseId*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: Get optional for acquire, required for change. Proposed lease ID, in a GUID string format.
  syntax:
    content: public String proposedLeaseId()
    return:
      type: java.lang.String
      description: the proposedLeaseId value
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withAction(java.lang.String)
  id: withAction(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: withAction(String action)
  nameWithType: LeaseContainerRequest.withAction(String action)
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withAction(String action)
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.withAction*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: "Set specifies the lease action. Can be one of the available actions. Possible values include: 'Acquire', 'Renew', 'Change', 'Release', 'Break'."
  syntax:
    content: public LeaseContainerRequest withAction(String action)
    parameters:
    - id: action
      type: java.lang.String
      description: the action value to set
    return:
      type: com.microsoft.azure.management.storage.LeaseContainerRequest
      description: the LeaseContainerRequest object itself.
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withBreakPeriod(java.lang.Integer)
  id: withBreakPeriod(java.lang.Integer)
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: withBreakPeriod(Integer breakPeriod)
  nameWithType: LeaseContainerRequest.withBreakPeriod(Integer breakPeriod)
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withBreakPeriod(Integer breakPeriod)
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.withBreakPeriod*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: Set optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.
  syntax:
    content: public LeaseContainerRequest withBreakPeriod(Integer breakPeriod)
    parameters:
    - id: breakPeriod
      type: java.lang.Integer
      description: the breakPeriod value to set
    return:
      type: com.microsoft.azure.management.storage.LeaseContainerRequest
      description: the LeaseContainerRequest object itself.
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseDuration(java.lang.Integer)
  id: withLeaseDuration(java.lang.Integer)
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: withLeaseDuration(Integer leaseDuration)
  nameWithType: LeaseContainerRequest.withLeaseDuration(Integer leaseDuration)
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseDuration(Integer leaseDuration)
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseDuration*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: Set required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires.
  syntax:
    content: public LeaseContainerRequest withLeaseDuration(Integer leaseDuration)
    parameters:
    - id: leaseDuration
      type: java.lang.Integer
      description: the leaseDuration value to set
    return:
      type: com.microsoft.azure.management.storage.LeaseContainerRequest
      description: the LeaseContainerRequest object itself.
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseId(java.lang.String)
  id: withLeaseId(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: withLeaseId(String leaseId)
  nameWithType: LeaseContainerRequest.withLeaseId(String leaseId)
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseId(String leaseId)
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseId*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: Set identifies the lease. Can be specified in any valid GUID string format.
  syntax:
    content: public LeaseContainerRequest withLeaseId(String leaseId)
    parameters:
    - id: leaseId
      type: java.lang.String
      description: the leaseId value to set
    return:
      type: com.microsoft.azure.management.storage.LeaseContainerRequest
      description: the LeaseContainerRequest object itself.
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withProposedLeaseId(java.lang.String)
  id: withProposedLeaseId(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-storage:1.36.1
  parent: com.microsoft.azure.management.storage.LeaseContainerRequest
  langs:
  - java
  name: withProposedLeaseId(String proposedLeaseId)
  nameWithType: LeaseContainerRequest.withProposedLeaseId(String proposedLeaseId)
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withProposedLeaseId(String proposedLeaseId)
  overload: com.microsoft.azure.management.storage.LeaseContainerRequest.withProposedLeaseId*
  type: Method
  package: com.microsoft.azure.management.storage
  summary: Set optional for acquire, required for change. Proposed lease ID, in a GUID string format.
  syntax:
    content: public LeaseContainerRequest withProposedLeaseId(String proposedLeaseId)
    parameters:
    - id: proposedLeaseId
      type: java.lang.String
      description: the proposedLeaseId value to set
    return:
      type: com.microsoft.azure.management.storage.LeaseContainerRequest
      description: the LeaseContainerRequest object itself.
references:
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.LeaseContainerRequest*
  name: LeaseContainerRequest
  nameWithType: LeaseContainerRequest.LeaseContainerRequest
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.LeaseContainerRequest
  package: com.microsoft.azure.management.storage
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.action*
  name: action
  nameWithType: LeaseContainerRequest.action
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.action
  package: com.microsoft.azure.management.storage
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withAction*
  name: withAction
  nameWithType: LeaseContainerRequest.withAction
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withAction
  package: com.microsoft.azure.management.storage
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseId*
  name: leaseId
  nameWithType: LeaseContainerRequest.leaseId
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseId
  package: com.microsoft.azure.management.storage
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseId*
  name: withLeaseId
  nameWithType: LeaseContainerRequest.withLeaseId
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseId
  package: com.microsoft.azure.management.storage
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.breakPeriod*
  name: breakPeriod
  nameWithType: LeaseContainerRequest.breakPeriod
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.breakPeriod
  package: com.microsoft.azure.management.storage
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withBreakPeriod*
  name: withBreakPeriod
  nameWithType: LeaseContainerRequest.withBreakPeriod
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withBreakPeriod
  package: com.microsoft.azure.management.storage
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseDuration*
  name: leaseDuration
  nameWithType: LeaseContainerRequest.leaseDuration
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.leaseDuration
  package: com.microsoft.azure.management.storage
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseDuration*
  name: withLeaseDuration
  nameWithType: LeaseContainerRequest.withLeaseDuration
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withLeaseDuration
  package: com.microsoft.azure.management.storage
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.proposedLeaseId*
  name: proposedLeaseId
  nameWithType: LeaseContainerRequest.proposedLeaseId
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.proposedLeaseId
  package: com.microsoft.azure.management.storage
- uid: com.microsoft.azure.management.storage.LeaseContainerRequest.withProposedLeaseId*
  name: withProposedLeaseId
  nameWithType: LeaseContainerRequest.withProposedLeaseId
  fullName: com.microsoft.azure.management.storage.LeaseContainerRequest.withProposedLeaseId
  package: com.microsoft.azure.management.storage
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
