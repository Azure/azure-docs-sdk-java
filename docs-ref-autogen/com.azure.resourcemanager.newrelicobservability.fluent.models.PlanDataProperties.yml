### YamlMime:JavaType
uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties"
fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties"
name: "PlanDataProperties"
nameWithType: "PlanDataProperties"
summary: "Plan details."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **PlanDataProperties**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties&text=PlanDataProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.PlanDataProperties()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.PlanDataProperties()"
  name: "PlanDataProperties()"
  nameWithType: "PlanDataProperties.PlanDataProperties()"
  summary: "Creates an instance of Plan<wbr>Data<wbr>Properties class."
  syntax: "public PlanDataProperties()"
  desc: "Creates an instance of PlanDataProperties class."
methods:
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.accountCreationSource()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.accountCreationSource()"
  name: "accountCreationSource()"
  nameWithType: "PlanDataProperties.accountCreationSource()"
  summary: "Get the account<wbr>Creation<wbr>Source property: Source of account creation."
  syntax: "public AccountCreationSource accountCreationSource()"
  desc: "Get the accountCreationSource property: Source of account creation."
  returns:
    description: "the accountCreationSource value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource&text=AccountCreationSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "PlanDataProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Plan<wbr>Data<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PlanDataProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the PlanDataProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of PlanDataProperties from the JsonReader."
  returns:
    description: "An instance of PlanDataProperties if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties&text=PlanDataProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.orgCreationSource()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.orgCreationSource()"
  name: "orgCreationSource()"
  nameWithType: "PlanDataProperties.orgCreationSource()"
  summary: "Get the org<wbr>Creation<wbr>Source property: Source of org creation."
  syntax: "public OrgCreationSource orgCreationSource()"
  desc: "Get the orgCreationSource property: Source of org creation."
  returns:
    description: "the orgCreationSource value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource&text=OrgCreationSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.planData()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.planData()"
  name: "planData()"
  nameWithType: "PlanDataProperties.planData()"
  summary: "Get the plan<wbr>Data property: Plan details."
  syntax: "public PlanData planData()"
  desc: "Get the planData property: Plan details."
  returns:
    description: "the planData value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PlanData?alt=com.azure.resourcemanager.newrelicobservability.models.PlanData&text=PlanData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "PlanDataProperties.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.validate()"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.validate()"
  name: "validate()"
  nameWithType: "PlanDataProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.withAccountCreationSource(com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.withAccountCreationSource(AccountCreationSource accountCreationSource)"
  name: "withAccountCreationSource(AccountCreationSource accountCreationSource)"
  nameWithType: "PlanDataProperties.withAccountCreationSource(AccountCreationSource accountCreationSource)"
  summary: "Set the account<wbr>Creation<wbr>Source property: Source of account creation."
  parameters:
  - description: "the accountCreationSource value to set."
    name: "accountCreationSource"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource&text=AccountCreationSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PlanDataProperties withAccountCreationSource(AccountCreationSource accountCreationSource)"
  desc: "Set the accountCreationSource property: Source of account creation."
  returns:
    description: "the PlanDataProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties&text=PlanDataProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.withOrgCreationSource(com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.withOrgCreationSource(OrgCreationSource orgCreationSource)"
  name: "withOrgCreationSource(OrgCreationSource orgCreationSource)"
  nameWithType: "PlanDataProperties.withOrgCreationSource(OrgCreationSource orgCreationSource)"
  summary: "Set the org<wbr>Creation<wbr>Source property: Source of org creation."
  parameters:
  - description: "the orgCreationSource value to set."
    name: "orgCreationSource"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource&text=OrgCreationSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PlanDataProperties withOrgCreationSource(OrgCreationSource orgCreationSource)"
  desc: "Set the orgCreationSource property: Source of org creation."
  returns:
    description: "the PlanDataProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties&text=PlanDataProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.withPlanData(com.azure.resourcemanager.newrelicobservability.models.PlanData)"
  fullName: "com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties.withPlanData(PlanData planData)"
  name: "withPlanData(PlanData planData)"
  nameWithType: "PlanDataProperties.withPlanData(PlanData planData)"
  summary: "Set the plan<wbr>Data property: Plan details."
  parameters:
  - description: "the planData value to set."
    name: "planData"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PlanData?alt=com.azure.resourcemanager.newrelicobservability.models.PlanData&text=PlanData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PlanDataProperties withPlanData(PlanData planData)"
  desc: "Set the planData property: Plan details."
  returns:
    description: "the PlanDataProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties&text=PlanDataProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Plan details."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.PlanDataProperties&text=PlanDataProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.newrelicobservability.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-newrelicobservability:1.2.0
