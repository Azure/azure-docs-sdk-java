### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions
  id: SessionHandlerOptions
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions()
  - com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int,boolean,java.time.Duration)
  - com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int,int,boolean,java.time.Duration)
  - com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int,int,boolean,java.time.Duration,java.time.Duration)
  - com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxAutoRenewDuration()
  - com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentCallsPerSession()
  - com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentSessions()
  - com.microsoft.azure.servicebus.SessionHandlerOptions.getMessageWaitDuration()
  - com.microsoft.azure.servicebus.SessionHandlerOptions.isAutoComplete()
  - com.microsoft.azure.servicebus.SessionHandlerOptions.toString()
  langs:
  - java
  name: SessionHandlerOptions
  nameWithType: SessionHandlerOptions
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions
  type: Class
  package: com.microsoft.azure.servicebus
  summary: The OnSession handler processing options.
  syntax:
    content: public final class SessionHandlerOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions()
  id: SessionHandlerOptions()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: SessionHandlerOptions()
  nameWithType: SessionHandlerOptions.SessionHandlerOptions()
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions()
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions*
  type: Constructor
  package: com.microsoft.azure.servicebus
  summary: Default constructor with default values Default <xref uid="com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentSessions()" data-throw-if-not-resolved="false">SessionHandlerOptions#getMaxConcurrentSessions()</xref> is 1 Default <xref uid="com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentCallsPerSession()" data-throw-if-not-resolved="false">SessionHandlerOptions#getMaxConcurrentCallsPerSession()</xref> is 1 Default <xref uid="com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxAutoRenewDuration()" data-throw-if-not-resolved="false">SessionHandlerOptions#getMaxAutoRenewDuration()</xref> is 5 minutes Default <xref uid="com.microsoft.azure.servicebus.SessionHandlerOptions.isAutoComplete()" data-throw-if-not-resolved="false">SessionHandlerOptions#isAutoComplete()</xref> is true. Default <xref uid="com.microsoft.azure.servicebus.SessionHandlerOptions.getMessageWaitDuration()" data-throw-if-not-resolved="false">SessionHandlerOptions#getMessageWaitDuration()</xref> is 1 minute
  syntax:
    content: public SessionHandlerOptions()
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int,boolean,java.time.Duration)
  id: SessionHandlerOptions(int,boolean,java.time.Duration)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: SessionHandlerOptions(int maxConcurrentSessions, boolean autoComplete, Duration maxAutoRenewDuration)
  nameWithType: SessionHandlerOptions.SessionHandlerOptions(int maxConcurrentSessions, boolean autoComplete, Duration maxAutoRenewDuration)
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int maxConcurrentSessions, boolean autoComplete, Duration maxAutoRenewDuration)
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions*
  type: Constructor
  package: com.microsoft.azure.servicebus
  syntax:
    content: public SessionHandlerOptions(int maxConcurrentSessions, boolean autoComplete, Duration maxAutoRenewDuration)
    parameters:
    - id: maxConcurrentSessions
      type: int
      description: maximum number of concurrent sessions accepted by the session pump
    - id: autoComplete
      type: boolean
      description: true if the pump should automatically complete message after onMessageHandler action is completed. false otherwise.
    - id: maxAutoRenewDuration
      type: java.time.Duration
      description: >-
        - Maximum duration within which the client keeps renewing the session lock if the processing of the session messages or onclose action
                                      is not completed by the handler.
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int,int,boolean,java.time.Duration)
  id: SessionHandlerOptions(int,int,boolean,java.time.Duration)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: SessionHandlerOptions(int maxConcurrentSessions, int maxConcurrentCallsPerSession, boolean autoComplete, Duration maxAutoRenewDuration)
  nameWithType: SessionHandlerOptions.SessionHandlerOptions(int maxConcurrentSessions, int maxConcurrentCallsPerSession, boolean autoComplete, Duration maxAutoRenewDuration)
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int maxConcurrentSessions, int maxConcurrentCallsPerSession, boolean autoComplete, Duration maxAutoRenewDuration)
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions*
  type: Constructor
  package: com.microsoft.azure.servicebus
  syntax:
    content: public SessionHandlerOptions(int maxConcurrentSessions, int maxConcurrentCallsPerSession, boolean autoComplete, Duration maxAutoRenewDuration)
    parameters:
    - id: maxConcurrentSessions
      type: int
      description: maximum number of concurrent sessions accepted by the session pump
    - id: maxConcurrentCallsPerSession
      type: int
      description: maximum number of concurrent calls to the onMessage handler
    - id: autoComplete
      type: boolean
      description: true if the pump should automatically complete message after onMessageHandler action is completed. false otherwise
    - id: maxAutoRenewDuration
      type: java.time.Duration
      description: >-
        Maximum duration within which the client keeps renewing the session lock if the processing of the session messages or onclose action
                                             is not completed by the handler.
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int,int,boolean,java.time.Duration,java.time.Duration)
  id: SessionHandlerOptions(int,int,boolean,java.time.Duration,java.time.Duration)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: SessionHandlerOptions(int maxConcurrentSessions, int maxConcurrentCallsPerSession, boolean autoComplete, Duration maxAutoRenewDuration, Duration messageWaitDuration)
  nameWithType: SessionHandlerOptions.SessionHandlerOptions(int maxConcurrentSessions, int maxConcurrentCallsPerSession, boolean autoComplete, Duration maxAutoRenewDuration, Duration messageWaitDuration)
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions(int maxConcurrentSessions, int maxConcurrentCallsPerSession, boolean autoComplete, Duration maxAutoRenewDuration, Duration messageWaitDuration)
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions*
  type: Constructor
  package: com.microsoft.azure.servicebus
  syntax:
    content: public SessionHandlerOptions(int maxConcurrentSessions, int maxConcurrentCallsPerSession, boolean autoComplete, Duration maxAutoRenewDuration, Duration messageWaitDuration)
    parameters:
    - id: maxConcurrentSessions
      type: int
      description: maximum number of concurrent sessions accepted by the session pump
    - id: maxConcurrentCallsPerSession
      type: int
      description: maximum number of concurrent calls to the onMessage handler
    - id: autoComplete
      type: boolean
      description: true if the pump should automatically complete message after onMessageHandler action is completed. false otherwise
    - id: maxAutoRenewDuration
      type: java.time.Duration
      description: >-
        Maximum duration within which the client keeps renewing the session lock if the processing of the session messages or onclose action
                                             is not completed by the handler.
    - id: messageWaitDuration
      type: java.time.Duration
      description: Duration to wait for receiving the message
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxAutoRenewDuration()
  id: getMaxAutoRenewDuration()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: getMaxAutoRenewDuration()
  nameWithType: SessionHandlerOptions.getMaxAutoRenewDuration()
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxAutoRenewDuration()
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxAutoRenewDuration*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Gets the maximum duration within which the lock will be renewed automatically. This value should be greater than the longest message lock duration; for example, the LockDuration Property. If a session lock is going to expire, this value is the max duration for the session lock to be automatically renewed.
  syntax:
    content: public Duration getMaxAutoRenewDuration()
    return:
      type: java.time.Duration
      description: The maximum duration during which locks are automatically renewed.
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentCallsPerSession()
  id: getMaxConcurrentCallsPerSession()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: getMaxConcurrentCallsPerSession()
  nameWithType: SessionHandlerOptions.getMaxConcurrentCallsPerSession()
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentCallsPerSession()
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentCallsPerSession*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Gets the maximum number of concurrent calls to the callback the message pump should initiate for each session.
  syntax:
    content: public int getMaxConcurrentCallsPerSession()
    return:
      type: int
      description: The maximum number of concurrent calls to the callback.
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentSessions()
  id: getMaxConcurrentSessions()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: getMaxConcurrentSessions()
  nameWithType: SessionHandlerOptions.getMaxConcurrentSessions()
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentSessions()
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentSessions*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Gets the maximum number of concurrent sessions that the pump should initiate. Setting this value to be greater than the max number of active sessions in the service will not increase message throughput. The session-pump (SDK) will accept MaxConcurrentSessions number of sessions in parallel and dispatch the messages. The messages within a session are delivered sequentially. If more than MaxConcurrentSessions number of sessions are present in the entity, they will be accepted one-by-one after closing the existing sessions.
  syntax:
    content: public int getMaxConcurrentSessions()
    return:
      type: int
      description: The maximum number of concurrent sessions
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.getMessageWaitDuration()
  id: getMessageWaitDuration()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: getMessageWaitDuration()
  nameWithType: SessionHandlerOptions.getMessageWaitDuration()
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.getMessageWaitDuration()
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.getMessageWaitDuration*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Gets the time to wait for receiving a message. This is the time the session-pump waits before closing down the current session and switching to a different session. This value has an impact on the message throughput. If the value is very large, then every time the SDK waits for this duration before closing to make sure that all the messages have been received. If users are having a lot of sessions and fewer messages per session, try setting this to be a relative smaller value based on how frequent new messages arrive in the session.
  syntax:
    content: public Duration getMessageWaitDuration()
    return:
      type: java.time.Duration
      description: The wait duration for receive calls. Defaults to 1 minute.
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.isAutoComplete()
  id: isAutoComplete()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: isAutoComplete()
  nameWithType: SessionHandlerOptions.isAutoComplete()
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.isAutoComplete()
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.isAutoComplete*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Whether the auto complete is set to true. If this value is true, if the handler returns without any failure, then the message is completed and will not show up in the session; if any exception is thrown from the handler, the message is abandoned and the DeliveryCount of this message will increase by one. If this value is false, if the handler returns without any failure, then user has to write the logic to explicitly complete the message, otherwise the message is not considered 'completed' and will reappear in the session.
  syntax:
    content: public boolean isAutoComplete()
    return:
      type: boolean
      description: true to complete the message processing automatically on successful execution of the operation; otherwise, false.
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.toString()
  id: toString()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.SessionHandlerOptions
  langs:
  - java
  name: toString()
  nameWithType: SessionHandlerOptions.toString()
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.toString()
  overload: com.microsoft.azure.servicebus.SessionHandlerOptions.toString*
  type: Method
  package: com.microsoft.azure.servicebus
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions*
  name: SessionHandlerOptions
  nameWithType: SessionHandlerOptions.SessionHandlerOptions
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.SessionHandlerOptions
  package: com.microsoft.azure.servicebus
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.isAutoComplete*
  name: isAutoComplete
  nameWithType: SessionHandlerOptions.isAutoComplete
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.isAutoComplete
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentSessions*
  name: getMaxConcurrentSessions
  nameWithType: SessionHandlerOptions.getMaxConcurrentSessions
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentSessions
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentCallsPerSession*
  name: getMaxConcurrentCallsPerSession
  nameWithType: SessionHandlerOptions.getMaxConcurrentCallsPerSession
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxConcurrentCallsPerSession
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxAutoRenewDuration*
  name: getMaxAutoRenewDuration
  nameWithType: SessionHandlerOptions.getMaxAutoRenewDuration
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.getMaxAutoRenewDuration
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.getMessageWaitDuration*
  name: getMessageWaitDuration
  nameWithType: SessionHandlerOptions.getMessageWaitDuration
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.getMessageWaitDuration
  package: com.microsoft.azure.servicebus
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.servicebus.SessionHandlerOptions.toString*
  name: toString
  nameWithType: SessionHandlerOptions.toString
  fullName: com.microsoft.azure.servicebus.SessionHandlerOptions.toString
  package: com.microsoft.azure.servicebus
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
