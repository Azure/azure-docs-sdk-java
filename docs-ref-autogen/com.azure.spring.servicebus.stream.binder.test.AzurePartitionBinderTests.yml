### YamlMime:JavaType
uid: "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests"
fullName: "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests<B,CP,PP>"
name: "AzurePartitionBinderTests<B,CP,PP>"
nameWithType: "AzurePartitionBinderTests<B,CP,PP>"
summary: "Test cases are defined in super class"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.cloud.stream.binder.AbstractBinderTests\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.cloud.stream.binder.PartitionCapableBinderTests\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.before()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.binderBindUnbindLatency()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.cleanup()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.createBindableChannel(java.lang.String,org.springframework.cloud.stream.config.BindingProperties)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.createBindableChannel(java.lang.String,org.springframework.cloud.stream.config.BindingProperties,boolean)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.createBindableMessageSource(java.lang.String,org.springframework.cloud.stream.config.BindingProperties)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.createConsumerBindingProperties(CP)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.createConsumerProperties()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.createProducerBindingProperties(PP)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.createProducerProperties()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.getBinder()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.getDestinationNameDelimiter()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.receive(org.springframework.messaging.PollableChannel)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.receive(org.springframework.messaging.PollableChannel,int)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.spyOn(java.lang.String)"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.testClean()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.testSendAndReceive()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.testSendAndReceiveMultipleTopics()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.testSendAndReceiveNoOriginalContentType()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.testSendJsonReceiveJsonWithStreamListener()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.testSendJsonReceivePojoWithStreamListener()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.testSendPojoReceivePojoWithStreamListener()"
- "org.springframework.cloud.stream.binder.AbstractBinderTests.testSendPojoReceivePojoWithStreamListenerDefaultContentType()"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.checkRkExpressionForPartitionedModuleSpEL(java.lang.Object)"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.extractEndpoint(org.springframework.cloud.stream.binder.Binding<org.springframework.messaging.MessageChannel>)"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.getClassUnderTestName()"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.getEndpointRouting(java.lang.Object)"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.getExpectedRoutingBaseDestination(java.lang.String,java.lang.String)"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.testAnonymousGroup()"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.testOneRequiredGroup()"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.testPartitionedModuleJava()"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.testPartitionedModuleSpEL()"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.testTwoRequiredGroups()"
- "org.springframework.cloud.stream.binder.PartitionCapableBinderTests.usesExplicitRouting()"
syntax: "public abstract class AzurePartitionBinderTests<B,CP,PP> extends PartitionCapableBinderTests<B,CP,PP>"
constructors:
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.AzurePartitionBinderTests()"
methods:
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.enableTests()"
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.spyOn(java.lang.String)"
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.testAnonymousGroup()"
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.testClean()"
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.testPartitionedModuleJava()"
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.testPartitionedModuleSpEL()"
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.testSendAndReceiveNoOriginalContentType()"
- "com.azure.spring.servicebus.stream.binder.test.AzurePartitionBinderTests.usesExplicitRouting()"
type: "class"
typeParameters:
- name: "B"
- name: "CP"
- name: "PP"
metadata: {}
package: "com.azure.spring.servicebus.stream.binder.test"
artifact: com.azure.spring:azure-spring-cloud-stream-binder-test:2.3.0
