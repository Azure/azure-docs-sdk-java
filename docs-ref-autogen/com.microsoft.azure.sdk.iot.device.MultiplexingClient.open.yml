### YamlMime:JavaMember
nameWithType: MultiplexingClient.open
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.MultiplexingClient.open()
  name: open()
  nameWithType: MultiplexingClient.open()
  exceptions:
  - type: <xref href="MultiplexingClientException?alt=MultiplexingClientException&text=MultiplexingClientException" data-throw-if-not-resolved="False"/>
    description: <p>If any IO or authentication errors occur while opening the multiplexed connection. </p>
  - type: <xref href="MultiplexingClientDeviceRegistrationAuthenticationException?alt=MultiplexingClientDeviceRegistrationAuthenticationException&text=MultiplexingClientDeviceRegistrationAuthenticationException" data-throw-if-not-resolved="False"/>
    description: <p>If one or many of the registered devices failed to authenticate. Any devices not found in the map of registration exceptions provided by this exception have registered successfully. Even when this is thrown, the AMQPS/AMQPS_WS connection is still open, and other clients may be registered to it. </p>
  summary: >-
    <p>Opens this multiplexing client. This may be done before or after registering any number of device clients. </p>

    <p>This call behaves synchronously, so if it returns without throwing, then all registered device clients were successfully opened. </p>

    <p>If this client is already open, then this method will do nothing. </p>

    <p></p>
  syntax: public void open()
  uid: com.microsoft.azure.sdk.iot.device.MultiplexingClient.open()
uid: com.microsoft.azure.sdk.iot.device.MultiplexingClient.open*
fullName: com.microsoft.azure.sdk.iot.device.MultiplexingClient.open
name: open()
package: com.microsoft.azure.sdk.iot.device
metadata: {}
