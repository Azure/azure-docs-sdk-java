### YamlMime:JavaEnum
uid: "com.azure.resourcemanager.compute.models.HostCaching"
fullName: "com.azure.resourcemanager.compute.models.HostCaching"
name: "HostCaching"
nameWithType: "HostCaching"
summary: "Defines values for HostCaching."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum HostCaching extends Enum<HostCaching>"
fields:
- uid: "com.azure.resourcemanager.compute.models.HostCaching.NONE"
  fullName: "com.azure.resourcemanager.compute.models.HostCaching.NONE"
  name: "NONE"
  nameWithType: "HostCaching.NONE"
  summary: "Enum value None."
- uid: "com.azure.resourcemanager.compute.models.HostCaching.READ_ONLY"
  fullName: "com.azure.resourcemanager.compute.models.HostCaching.READ_ONLY"
  name: "READ_ONLY"
  nameWithType: "HostCaching.READ_ONLY"
  summary: "Enum value ReadOnly."
- uid: "com.azure.resourcemanager.compute.models.HostCaching.READ_WRITE"
  fullName: "com.azure.resourcemanager.compute.models.HostCaching.READ_WRITE"
  name: "READ_WRITE"
  nameWithType: "HostCaching.READ_WRITE"
  summary: "Enum value ReadWrite."
methods:
- uid: "com.azure.resourcemanager.compute.models.HostCaching.fromString(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.HostCaching.fromString(String value)"
  name: "fromString(String value)"
  nameWithType: "HostCaching.fromString(String value)"
  summary: "Parses a serialized value to a HostCaching instance."
  parameters:
  - description: "the serialized value to parse."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static HostCaching fromString(String value)"
  returns:
    description: "the parsed HostCaching object, or null if unable to parse."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.HostCaching?alt=com.azure.resourcemanager.compute.models.HostCaching&text=HostCaching\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.HostCaching.toString()"
  fullName: "com.azure.resourcemanager.compute.models.HostCaching.toString()"
  name: "toString()"
  nameWithType: "HostCaching.toString()"
  overridden: "java.lang.Enum.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.HostCaching.valueOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.HostCaching.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "HostCaching.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static HostCaching valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.HostCaching?alt=com.azure.resourcemanager.compute.models.HostCaching&text=HostCaching\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.HostCaching.values()"
  fullName: "com.azure.resourcemanager.compute.models.HostCaching.values()"
  name: "values()"
  nameWithType: "HostCaching.values()"
  syntax: "public static HostCaching[] values()"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.compute.models.HostCaching?alt=com.azure.resourcemanager.compute.models.HostCaching&text=HostCaching\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
