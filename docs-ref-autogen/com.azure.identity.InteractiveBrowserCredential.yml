### YamlMime:JavaType
uid: "com.azure.identity.InteractiveBrowserCredential"
fullName: "com.azure.identity.InteractiveBrowserCredential"
name: "InteractiveBrowserCredential"
nameWithType: "InteractiveBrowserCredential"
summary: "An AAD credential that acquires a token for an AAD application by prompting the login in the default browser."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **InteractiveBrowserCredential**</br> implements <xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
methods:
- uid: "com.azure.identity.InteractiveBrowserCredential.authenticate()"
  fullName: "com.azure.identity.InteractiveBrowserCredential.authenticate()"
  name: "authenticate()"
  nameWithType: "InteractiveBrowserCredential.authenticate()"
  summary: "Interactively authenticates a user via the default browser."
  syntax: "public Mono<AuthenticationRecord> authenticate()"
  desc: "Interactively authenticates a user via the default browser."
  returns:
    description: "The <xref uid=\"com.azure.identity.AuthenticationRecord\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationRecord\"></xref> which can be used to silently authenticate the account\n on future execution if persistent caching was enabled via\n <xref uid=\"com.azure.identity.InteractiveBrowserCredentialBuilder.tokenCachePersistenceOptions(com.azure.identity.TokenCachePersistenceOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredentialBuilder#tokenCachePersistenceOptions(TokenCachePersistenceOptions)\"></xref>\n when credential was instantiated."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.identity.AuthenticationRecord?alt=com.azure.identity.AuthenticationRecord&text=AuthenticationRecord\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.identity.InteractiveBrowserCredential.authenticate(com.azure.core.credential.TokenRequestContext)"
  fullName: "com.azure.identity.InteractiveBrowserCredential.authenticate(TokenRequestContext request)"
  name: "authenticate(TokenRequestContext request)"
  nameWithType: "InteractiveBrowserCredential.authenticate(TokenRequestContext request)"
  summary: "Interactively authenticates a user via the default browser."
  parameters:
  - description: "The details of the authentication request."
    name: "request"
    type: "<xref href=\"com.azure.core.credential.TokenRequestContext?alt=com.azure.core.credential.TokenRequestContext&text=TokenRequestContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AuthenticationRecord> authenticate(TokenRequestContext request)"
  desc: "Interactively authenticates a user via the default browser."
  returns:
    description: "The <xref uid=\"com.azure.identity.AuthenticationRecord\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationRecord\"></xref> which can be used to silently authenticate the account\n on future execution if persistent caching was configured via\n <xref uid=\"com.azure.identity.InteractiveBrowserCredentialBuilder.tokenCachePersistenceOptions(com.azure.identity.TokenCachePersistenceOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredentialBuilder#tokenCachePersistenceOptions(TokenCachePersistenceOptions)\"></xref>\n when credential was instantiated."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.identity.AuthenticationRecord?alt=com.azure.identity.AuthenticationRecord&text=AuthenticationRecord\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.identity.InteractiveBrowserCredential.getToken(com.azure.core.credential.TokenRequestContext)"
  fullName: "com.azure.identity.InteractiveBrowserCredential.getToken(TokenRequestContext request)"
  name: "getToken(TokenRequestContext request)"
  nameWithType: "InteractiveBrowserCredential.getToken(TokenRequestContext request)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.core.credential.TokenRequestContext?alt=com.azure.core.credential.TokenRequestContext&text=TokenRequestContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AccessToken> getToken(TokenRequestContext request)"
  returns:
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.identity.InteractiveBrowserCredential.getTokenSync(com.azure.core.credential.TokenRequestContext)"
  fullName: "com.azure.identity.InteractiveBrowserCredential.getTokenSync(TokenRequestContext request)"
  name: "getTokenSync(TokenRequestContext request)"
  nameWithType: "InteractiveBrowserCredential.getTokenSync(TokenRequestContext request)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.core.credential.TokenRequestContext?alt=com.azure.core.credential.TokenRequestContext&text=TokenRequestContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AccessToken getTokenSync(TokenRequestContext request)"
  returns:
    type: "<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An AAD credential that acquires a token for an AAD application by prompting the login in the default browser. When authenticated, the oauth2 flow will notify the credential of the authentication code through the reply URL.\n\nThe application to authenticate to must have delegated user login permissions and have `http://localhost:{port}` listed as a valid reply URL."
implements:
- "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.identity"
artifact: com.azure:azure-identity:1.7.2
