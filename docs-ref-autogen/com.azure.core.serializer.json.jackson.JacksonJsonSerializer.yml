### YamlMime:JavaType
uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer"
fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer"
name: "JacksonJsonSerializer"
nameWithType: "JacksonJsonSerializer"
summary: "Jackson based implementation of the <xref uid=\"com.azure.core.util.serializer.JsonSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonSerializer\"></xref> and <xref uid=\"com.azure.core.util.serializer.MemberNameConverter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MemberNameConverter\"></xref> interfaces."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class JacksonJsonSerializer implements JsonSerializer, MemberNameConverter"
methods:
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserialize(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserialize(InputStream stream, TypeReference<T> typeReference)"
  name: "<T>deserialize(InputStream stream, TypeReference<T> typeReference)"
  nameWithType: "JacksonJsonSerializer.<T>deserialize(InputStream stream, TypeReference<T> typeReference)"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public T <T>deserialize(InputStream stream, TypeReference<T> typeReference)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeAsync(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  name: "<T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  nameWithType: "JacksonJsonSerializer.<T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<T> <T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeFromBytes(byte[],com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  name: "<T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  nameWithType: "JacksonJsonSerializer.<T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  parameters:
  - name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public T <T>deserializeFromBytes(byte[] data, TypeReference<T> typeReference)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeFromBytesAsync(byte[],com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeFromBytesAsync(byte[] data, TypeReference<T> typeReference)"
  name: "<T>deserializeFromBytesAsync(byte[] data, TypeReference<T> typeReference)"
  nameWithType: "JacksonJsonSerializer.<T>deserializeFromBytesAsync(byte[] data, TypeReference<T> typeReference)"
  parameters:
  - name: "data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<T> <T>deserializeFromBytesAsync(byte[] data, TypeReference<T> typeReference)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.convertMemberName(java.lang.reflect.Member)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.convertMemberName(Member member)"
  name: "convertMemberName(Member member)"
  nameWithType: "JacksonJsonSerializer.convertMemberName(Member member)"
  parameters:
  - name: "member"
    type: "<xref href=\"java.lang.reflect.Member?alt=java.lang.reflect.Member&text=Member\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String convertMemberName(Member member)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.serialize(java.io.OutputStream,java.lang.Object)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.serialize(OutputStream stream, Object value)"
  name: "serialize(OutputStream stream, Object value)"
  nameWithType: "JacksonJsonSerializer.serialize(OutputStream stream, Object value)"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void serialize(OutputStream stream, Object value)"
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.serializeAsync(java.io.OutputStream,java.lang.Object)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.serializeAsync(OutputStream stream, Object value)"
  name: "serializeAsync(OutputStream stream, Object value)"
  nameWithType: "JacksonJsonSerializer.serializeAsync(OutputStream stream, Object value)"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> serializeAsync(OutputStream stream, Object value)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.serializeToBytes(java.lang.Object)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.serializeToBytes(Object value)"
  name: "serializeToBytes(Object value)"
  nameWithType: "JacksonJsonSerializer.serializeToBytes(Object value)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public byte[] serializeToBytes(Object value)"
  returns:
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.serializeToBytesAsync(java.lang.Object)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.serializeToBytesAsync(Object value)"
  name: "serializeToBytesAsync(Object value)"
  nameWithType: "JacksonJsonSerializer.serializeToBytesAsync(Object value)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<byte[]> serializeToBytesAsync(Object value)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
type: "class"
desc: "Jackson based implementation of the <xref uid=\"com.azure.core.util.serializer.JsonSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonSerializer\"></xref> and <xref uid=\"com.azure.core.util.serializer.MemberNameConverter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MemberNameConverter\"></xref> interfaces."
implements:
- "<xref href=\"com.azure.core.util.serializer.JsonSerializer?alt=com.azure.core.util.serializer.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.serializer.MemberNameConverter?alt=com.azure.core.util.serializer.MemberNameConverter&text=MemberNameConverter\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.serializer.json.jackson"
artifact: com.azure:azure-core-serializer-json-jackson:1.2.20
