### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils"
fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils"
name: "Utils"
nameWithType: "Utils"
summary: "Defines a few utilities."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Utils"
methods:
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.<OutT,InT>toPagedList(java.util.List<InT>,rx.functions.Func1<InT,OutT>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.<OutT,InT>toPagedList(List<InT> list, Func1<InT,OutT> mapper)"
  name: "<OutT,InT>toPagedList(List<InT> list, Func1<InT,OutT> mapper)"
  nameWithType: "Utils.<OutT,InT>toPagedList(List<InT> list, Func1<InT,OutT> mapper)"
  summary: "Converts the given list of a type to paged list of a different type."
  modifiers:
  - "static"
  parameters:
  - description: "the list to convert to paged list"
    name: "list"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"InT?alt=InT&text=InT\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the mapper to map type in input list to output list"
    name: "mapper"
    type: "<xref href=\"rx.functions.Func1?alt=rx.functions.Func1&text=Func1\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"InT?alt=InT&text=InT\" data-throw-if-not-resolved=\"False\" />,<xref href=\"OutT?alt=OutT&text=OutT\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static PagedList<OutT> <OutT,InT>toPagedList(List<InT> list, Func1<InT,OutT> mapper)"
  desc: "Converts the given list of a type to paged list of a different type."
  returns:
    description: "the paged list"
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"OutT?alt=OutT&text=OutT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.<U>rootResource(rx.Observable<com.microsoft.azure.management.resources.fluentcore.model.Indexable>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.<U>rootResource(Observable<Indexable> stream)"
  name: "<U>rootResource(Observable<Indexable> stream)"
  nameWithType: "Utils.<U>rootResource(Observable<Indexable> stream)"
  summary: "Gets an observable of type `U`, where U extends <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>, that emits only the root resource from a given observable of <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "the input observable of <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>"
    name: "stream"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Observable<U> <U>rootResource(Observable<Indexable> stream)"
  desc: "Gets an observable of type `U`, where U extends <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>, that emits only the root resource from a given observable of <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>."
  returns:
    description: "an observable that emits last item"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.addToListIfNotExists(java.util.List<java.lang.String>,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.addToListIfNotExists(List<String> list, String value)"
  name: "addToListIfNotExists(List<String> list, String value)"
  nameWithType: "Utils.addToListIfNotExists(List<String> list, String value)"
  summary: "Adds a value to the list if does not already exists."
  modifiers:
  - "static"
  parameters:
  - description: "the list"
    name: "list"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "value to add if not exists in the list"
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void addToListIfNotExists(List<String> list, String value)"
  desc: "Adds a value to the list if does not already exists."
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.createOdataFilterForTags(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.createOdataFilterForTags(String tagName, String tagValue)"
  name: "createOdataFilterForTags(String tagName, String tagValue)"
  nameWithType: "Utils.createOdataFilterForTags(String tagName, String tagValue)"
  summary: "Creates an Odata filter string that can be used for filtering list results by tags."
  modifiers:
  - "static"
  parameters:
  - description: "the name of the tag. If not provided, all resources will be returned."
    name: "tagName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the value of the tag. If not provided, only tag name will be filtered."
    name: "tagValue"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String createOdataFilterForTags(String tagName, String tagValue)"
  desc: "Creates an Odata filter string that can be used for filtering list results by tags."
  returns:
    description: "the Odata filter to pass into list methods"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.downloadFileAsync(java.lang.String,retrofit2.Retrofit)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.downloadFileAsync(String url, Retrofit retrofit)"
  name: "downloadFileAsync(String url, Retrofit retrofit)"
  nameWithType: "Utils.downloadFileAsync(String url, Retrofit retrofit)"
  summary: "Download a file asynchronously."
  modifiers:
  - "static"
  parameters:
  - description: "the URL pointing to the file"
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the retrofit client"
    name: "retrofit"
    type: "<xref href=\"retrofit2.Retrofit?alt=retrofit2.Retrofit&text=Retrofit\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Observable<byte[]> downloadFileAsync(String url, Retrofit retrofit)"
  desc: "Download a file asynchronously."
  returns:
    description: "an Observable pointing to the content of the file"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.extractAzureEnvironment(com.microsoft.rest.RestClient)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.extractAzureEnvironment(RestClient restClient)"
  name: "extractAzureEnvironment(RestClient restClient)"
  nameWithType: "Utils.extractAzureEnvironment(RestClient restClient)"
  summary: "Try to extract the environment the client is authenticated to based on the information on the rest client."
  modifiers:
  - "static"
  parameters:
  - description: "the RestClient instance"
    name: "restClient"
    type: "<xref href=\"com.microsoft.rest.RestClient?alt=com.microsoft.rest.RestClient&text=RestClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AzureEnvironment extractAzureEnvironment(RestClient restClient)"
  desc: "Try to extract the environment the client is authenticated to based on the information on the rest client."
  returns:
    description: "the non-null AzureEnvironment"
    type: "<xref href=\"com.microsoft.azure.AzureEnvironment?alt=com.microsoft.azure.AzureEnvironment&text=AzureEnvironment\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.getResponseBodyInString(okhttp3.ResponseBody)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.getResponseBodyInString(ResponseBody responseBody)"
  name: "getResponseBodyInString(ResponseBody responseBody)"
  nameWithType: "Utils.getResponseBodyInString(ResponseBody responseBody)"
  summary: "Get the response body as string."
  modifiers:
  - "static"
  parameters:
  - description: "response body object"
    name: "responseBody"
    type: "<xref href=\"okhttp3.ResponseBody?alt=okhttp3.ResponseBody&text=ResponseBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getResponseBodyInString(ResponseBody responseBody)"
  exceptions:
  - description: "throw IOException"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get the response body as string."
  returns:
    description: "response body in string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.getStorageConnectionString(java.lang.String,java.lang.String,com.microsoft.rest.RestClient)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.getStorageConnectionString(String accountName, String accountKey, RestClient restClient)"
  name: "getStorageConnectionString(String accountName, String accountKey, RestClient restClient)"
  nameWithType: "Utils.getStorageConnectionString(String accountName, String accountKey, RestClient restClient)"
  summary: "Get the Azure storage account connection string."
  modifiers:
  - "static"
  parameters:
  - description: "storage account name"
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "storage account key"
    name: "accountKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "rest client"
    name: "restClient"
    type: "<xref href=\"com.microsoft.rest.RestClient?alt=com.microsoft.rest.RestClient&text=RestClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getStorageConnectionString(String accountName, String accountKey, RestClient restClient)"
  desc: "Get the Azure storage account connection string."
  returns:
    description: "the storage account connection string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.removeFromList(java.util.List<java.lang.String>,java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.removeFromList(List<String> list, String value)"
  name: "removeFromList(List<String> list, String value)"
  nameWithType: "Utils.removeFromList(List<String> list, String value)"
  summary: "Removes a value from the list."
  modifiers:
  - "static"
  parameters:
  - description: "the list"
    name: "list"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "value to remove"
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void removeFromList(List<String> list, String value)"
  desc: "Removes a value from the list."
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.resourceGroupId(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.resourceGroupId(String id)"
  name: "resourceGroupId(String id)"
  nameWithType: "Utils.resourceGroupId(String id)"
  modifiers:
  - "static"
  parameters:
  - description: "resource id"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String resourceGroupId(String id)"
  returns:
    description: "resource group id for the resource id provided"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.toPrimitiveBoolean(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.toPrimitiveBoolean(Boolean value)"
  name: "toPrimitiveBoolean(Boolean value)"
  nameWithType: "Utils.toPrimitiveBoolean(Boolean value)"
  summary: "Converts an object Boolean to a primitive boolean."
  modifiers:
  - "static"
  parameters:
  - description: "the Boolean value"
    name: "value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean toPrimitiveBoolean(Boolean value)"
  desc: "Converts an object Boolean to a primitive boolean."
  returns:
    description: "false if the given Boolean value is null or false else true"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.toPrimitiveInt(java.lang.Integer)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.toPrimitiveInt(Integer value)"
  name: "toPrimitiveInt(Integer value)"
  nameWithType: "Utils.toPrimitiveInt(Integer value)"
  summary: "Converts an object Integer to a primitive int."
  modifiers:
  - "static"
  parameters:
  - description: "the Integer value"
    name: "value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int toPrimitiveInt(Integer value)"
  desc: "Converts an object Integer to a primitive int."
  returns:
    description: "0 if the given Integer value is null else integer value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.toPrimitiveInt(java.lang.Long)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.toPrimitiveInt(Long value)"
  name: "toPrimitiveInt(Long value)"
  nameWithType: "Utils.toPrimitiveInt(Long value)"
  summary: "Converts an object Long to a primitive int."
  modifiers:
  - "static"
  parameters:
  - description: "the Long value"
    name: "value"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int toPrimitiveInt(Long value)"
  desc: "Converts an object Long to a primitive int."
  returns:
    description: "0 if the given Long value is null else integer value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.toPrimitiveLong(java.lang.Long)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.Utils.toPrimitiveLong(Long value)"
  name: "toPrimitiveLong(Long value)"
  nameWithType: "Utils.toPrimitiveLong(Long value)"
  summary: "Converts an object Long to a primitive long."
  modifiers:
  - "static"
  parameters:
  - description: "the Long value"
    name: "value"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static long toPrimitiveLong(Long value)"
  desc: "Converts an object Long to a primitive long."
  returns:
    description: "0 if the given Long value is null else long value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines a few utilities."
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.utils"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
