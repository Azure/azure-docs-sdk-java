### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin
  id: _mqtt_device_twin
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
  children:
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.MqttDeviceTwin(MqttConnection,String)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.receive()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.send(final IotHubTransportMessage)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.start()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.stop()
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.yml
  langs:
  - java
  name: MqttDeviceTwin
  nameWithType: MqttDeviceTwin
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java
    startLine: 18
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public class MqttDeviceTwin extends Mqtt
  inheritance:
  - java.lang.Object
  - MqttCallback
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.connect()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.connectionLost(Throwable)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.deliveryComplete(IMqttDeliveryToken)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.disconnect()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.messageArrived(String,MqttMessage)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.Mqtt(MqttConnection,IotHubListener,MqttMessageListener,String)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.peekMessage()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.publish(String,Message)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.sendMessageAcknowledgement(int)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.subscribe(String)
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.MqttDeviceTwin(MqttConnection,String)
  id: MqttDeviceTwin(MqttConnection,String)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.yml
  langs:
  - java
  name: MqttDeviceTwin(MqttConnection mqttConnection, String connectionId)
  nameWithType: MqttDeviceTwin.MqttDeviceTwin(MqttConnection mqttConnection, String connectionId)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.MqttDeviceTwin(MqttConnection mqttConnection, String connectionId)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.MqttDeviceTwin*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java
    startLine: 52
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public MqttDeviceTwin(MqttConnection mqttConnection, String connectionId)
    parameters:
    - id: mqttConnection
      type: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_connection
    - id: connectionId
      type: "26831127"
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.receive()
  id: receive()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.yml
  langs:
  - java
  name: receive()
  nameWithType: MqttDeviceTwin.receive()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.receive()
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.receive*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java
    startLine: 275
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public IotHubTransportMessage receive()
    return:
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.send(final IotHubTransportMessage)
  id: send(final IotHubTransportMessage)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.yml
  langs:
  - java
  name: send(final IotHubTransportMessage message)
  nameWithType: MqttDeviceTwin.send(final IotHubTransportMessage message)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.send(final IotHubTransportMessage message)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.send*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java
    startLine: 177
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: "<p>Sends the provided device twin message over the mqtt connection</p>\r\n<p></p>"
  syntax:
    content: public void send(final IotHubTransportMessage message)
    parameters:
    - id: message
      type: 93de0ef9com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
      description: <p>the message to send </p>
  exceptions:
  - type: 848a9648
    description: <p>if any exception is encountered while sending the message </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.start()
  id: start()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.yml
  langs:
  - java
  name: start()
  nameWithType: MqttDeviceTwin.start()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.start()
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.start*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java
    startLine: 61
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void start()
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.stop()
  id: stop()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.yml
  langs:
  - java
  name: stop()
  nameWithType: MqttDeviceTwin.stop()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.stop()
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.stop*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java
    startLine: 71
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void stop()
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.MqttDeviceTwin*
  name: MqttDeviceTwin
  nameWithType: MqttDeviceTwin.MqttDeviceTwin
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.MqttDeviceTwin
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.start*
  name: start
  nameWithType: MqttDeviceTwin.start
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.start
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.stop*
  name: stop
  nameWithType: MqttDeviceTwin.stop
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.stop
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: 848a9648
  spec.java:
  - name: TransportException
    fullName: TransportException
- uid: 93de0ef9com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
    name: IotHubTransportMessage
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message.yml
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.send*
  name: send
  nameWithType: MqttDeviceTwin.send
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.send
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin.receive*
  name: receive
  nameWithType: MqttDeviceTwin.receive
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.receive
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.connect()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: connect()
  nameWithType: Mqtt.connect()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect()
  type: Method
  summary: >-
    <p>Method to connect to mqtt broker connection.</p>

    <p></p>
  syntax:
    content: protected void connect()
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.connectionLost(Throwable)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: connectionLost(Throwable throwable)
  nameWithType: Mqtt.connectionLost(Throwable throwable)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(Throwable throwable)
  type: Method
  summary: <p>Event fired when the connection with the MQTT broker is lost. </p>
  syntax:
    content: public void connectionLost(Throwable throwable)
    parameters:
    - id: throwable
      type: a04fafd7
      description: <p>Reason for losing the connection. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.deliveryComplete(IMqttDeliveryToken)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  nameWithType: Mqtt.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  type: Method
  summary: <p>Event fired when the message arrived on the MQTT broker. </p>
  syntax:
    content: public void deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
    parameters:
    - id: iMqttDeliveryToken
      type: 60649e1d
      description: <p>the MqttDeliveryToken for which the message was successfully sent. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.disconnect()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: disconnect()
  nameWithType: Mqtt.disconnect()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect()
  type: Method
  summary: >-
    <p>Method to disconnect to mqtt broker connection.</p>

    <p></p>
  syntax:
    content: protected void disconnect()
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.messageArrived(String,MqttMessage)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: messageArrived(String topic, MqttMessage mqttMessage)
  nameWithType: Mqtt.messageArrived(String topic, MqttMessage mqttMessage)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived(String topic, MqttMessage mqttMessage)
  type: Method
  summary: <p>Event fired when the message arrived on the MQTT broker. </p>
  syntax:
    content: public void messageArrived(String topic, MqttMessage mqttMessage)
    parameters:
    - id: topic
      type: "26831127"
      description: <p>the topic on which message arrived. </p>
    - id: mqttMessage
      type: e1250987
      description: <p>the message arrived on the Mqtt broker. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.Mqtt(MqttConnection,IotHubListener,MqttMessageListener,String)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: Mqtt(MqttConnection mqttConnection, IotHubListener listener, MqttMessageListener messageListener, String connectionId)
  nameWithType: Mqtt.Mqtt(MqttConnection mqttConnection, IotHubListener listener, MqttMessageListener messageListener, String connectionId)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.Mqtt(MqttConnection mqttConnection, IotHubListener listener, MqttMessageListener messageListener, String connectionId)
  type: Constructor
  summary: <p>Constructor to instantiate mqtt broker connection. </p>
  syntax:
    content: public Mqtt(MqttConnection mqttConnection, IotHubListener listener, MqttMessageListener messageListener, String connectionId)
    parameters:
    - id: mqttConnection
      type: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_connection
      description: <p>the connection to use </p>
    - id: listener
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener
      description: <p>the listener to be called back upon connection established/lost and upon a message being delivered </p>
    - id: messageListener
      type: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_message_listener
      description: <p>the listener to be called back upon a message arriving </p>
    - id: connectionId
      type: "26831127"
      description: <p>the id of the connection </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.peekMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: peekMessage()
  nameWithType: Mqtt.peekMessage()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.peekMessage()
  type: Method
  syntax:
    content: public Pair<String, byte[]> peekMessage()
    return:
      type: 667c7c32
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.publish(String,Message)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: publish(String publishTopic, Message message)
  nameWithType: Mqtt.publish(String publishTopic, Message message)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.publish(String publishTopic, Message message)
  type: Method
  summary: >-
    <p>Method to publish to mqtt broker connection.</p>

    <p></p>
  syntax:
    content: protected void publish(String publishTopic, Message message)
    parameters:
    - id: publishTopic
      type: "26831127"
      description: <p>the topic to publish on mqtt broker connection. </p>
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to publish. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.sendMessageAcknowledgement(int)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: sendMessageAcknowledgement(int messageId)
  nameWithType: Mqtt.sendMessageAcknowledgement(int messageId)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.sendMessageAcknowledgement(int messageId)
  type: Method
  summary: <p>Attempts to send ack for the provided message. If the message does not have a saved messageId in this layer, this function shall return false. </p>
  syntax:
    content: protected boolean sendMessageAcknowledgement(int messageId)
    parameters:
    - id: messageId
      type: f75371fa
      description: <p>The message id to send the ack for </p>
    return:
      type: 4fc6e284
      description: <p>true if the ack is sent successfully or false if the message isn't tied to this mqtt client </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.subscribe(String)
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: subscribe(String topic)
  nameWithType: Mqtt.subscribe(String topic)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe(String topic)
  type: Method
  summary: >-
    <p>Method to subscribe to mqtt broker connection.</p>

    <p></p>
  syntax:
    content: protected void subscribe(String topic)
    parameters:
    - id: topic
      type: "26831127"
      description: <p>the topic to subscribe on mqtt broker connection. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: Mqtt
  nameWithType: Mqtt
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  type: Class
  syntax:
    content: public class Mqtt
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_operations
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_operations.yml
  name: DeviceOperations
  nameWithType: DeviceOperations
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceOperations
  type: Enum
  syntax:
    content: public enum DeviceOperations
- uid: com.microsoft.azure.sdk.iot.device._custom_logger
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
  name: CustomLogger
  nameWithType: CustomLogger
  fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
  type: Class
  syntax:
    content: public class CustomLogger
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_connection.yml
  name: MqttConnection
  nameWithType: MqttConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttConnection
  type: Class
  syntax:
    content: public class MqttConnection
- uid: com.microsoft.azure.sdk.iot.device.exceptions._transport_exception
  parent: com.microsoft.azure.sdk.iot.device.exceptions
  href: com.microsoft.azure.sdk.iot.device.exceptions._transport_exception.yml
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  type: Class
  syntax:
    content: public class TransportException
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message.yml
  name: IotHubTransportMessage
  nameWithType: IotHubTransportMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
  type: Class
  summary: <p>Extends Message, adding transport artifacts. </p>
  syntax:
    content: public class IotHubTransportMessage extends Message
