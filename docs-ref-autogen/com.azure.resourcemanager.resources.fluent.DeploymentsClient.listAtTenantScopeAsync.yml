### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync"
name: "listAtTenantScopeAsync"
nameWithType: "DeploymentsClient.listAtTenantScopeAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync()"
  name: "listAtTenantScopeAsync()"
  nameWithType: "DeploymentsClient.listAtTenantScopeAsync()"
  summary: "Get all the deployments at the tenant scope."
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAtTenantScopeAsync()"
  returns:
    description: "all the deployments at the tenant scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync(String filter, Integer top)"
  name: "listAtTenantScopeAsync(String filter, Integer top)"
  nameWithType: "DeploymentsClient.listAtTenantScopeAsync(String filter, Integer top)"
  summary: "Get all the deployments at the tenant scope."
  parameters:
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAtTenantScopeAsync(String filter, Integer top)"
  returns:
    description: "all the deployments at the tenant scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
