### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration"
fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration"
name: "VirtualMachineConfiguration"
nameWithType: "VirtualMachineConfiguration"
summary: "The configuration for Compute Nodes in a Pool based on the Azure Virtual Machines infrastructure."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class VirtualMachineConfiguration"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.VirtualMachineConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.VirtualMachineConfiguration()"
  name: "VirtualMachineConfiguration()"
  nameWithType: "VirtualMachineConfiguration.VirtualMachineConfiguration()"
  syntax: "public VirtualMachineConfiguration()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration()"
  name: "containerConfiguration()"
  nameWithType: "VirtualMachineConfiguration.containerConfiguration()"
  summary: "Get if specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it."
  syntax: "public ContainerConfiguration containerConfiguration()"
  returns:
    description: "the containerConfiguration value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ContainerConfiguration?alt=com.microsoft.azure.batch.protocol.models.ContainerConfiguration&text=ContainerConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks()"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks()"
  name: "dataDisks()"
  nameWithType: "VirtualMachineConfiguration.dataDisks()"
  summary: "Get this property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk\\#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps\\#add-an-empty-data-disk-to-a-virtual-machine."
  syntax: "public List<DataDisk> dataDisks()"
  returns:
    description: "the dataDisks value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.DataDisk?alt=com.microsoft.azure.batch.protocol.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.diskEncryptionConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.diskEncryptionConfiguration()"
  name: "diskEncryptionConfiguration()"
  nameWithType: "VirtualMachineConfiguration.diskEncryptionConfiguration()"
  summary: "Get if specified, encryption is performed on each node in the pool during node provisioning."
  syntax: "public DiskEncryptionConfiguration diskEncryptionConfiguration()"
  returns:
    description: "the diskEncryptionConfiguration value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration?alt=com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration&text=DiskEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference()"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference()"
  name: "imageReference()"
  nameWithType: "VirtualMachineConfiguration.imageReference()"
  summary: "Get the imageReference value."
  syntax: "public ImageReference imageReference()"
  returns:
    description: "the imageReference value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ImageReference?alt=com.microsoft.azure.batch.protocol.models.ImageReference&text=ImageReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType()"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType()"
  name: "licenseType()"
  nameWithType: "VirtualMachineConfiguration.licenseType()"
  summary: "Get this only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows\\_Server - The on-premises license is for Windows Server. Windows\\_Client - The on-premises license is for Windows Client."
  syntax: "public String licenseType()"
  returns:
    description: "the licenseType value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId()"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId()"
  name: "nodeAgentSKUId()"
  nameWithType: "VirtualMachineConfiguration.nodeAgentSKUId()"
  summary: "Get the Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the 'List supported Compute Node agent SKUs' operation."
  syntax: "public String nodeAgentSKUId()"
  returns:
    description: "the nodeAgentSKUId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration()"
  name: "windowsConfiguration()"
  nameWithType: "VirtualMachineConfiguration.windowsConfiguration()"
  summary: "Get this property must not be specified if the imageReference property specifies a Linux OS Image."
  syntax: "public WindowsConfiguration windowsConfiguration()"
  returns:
    description: "the windowsConfiguration value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.WindowsConfiguration?alt=com.microsoft.azure.batch.protocol.models.WindowsConfiguration&text=WindowsConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration(com.microsoft.azure.batch.protocol.models.ContainerConfiguration)"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  name: "withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  summary: "Set if specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it."
  parameters:
  - description: "the containerConfiguration value to set"
    name: "containerConfiguration"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ContainerConfiguration?alt=com.microsoft.azure.batch.protocol.models.ContainerConfiguration&text=ContainerConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks(java.util.List<com.microsoft.azure.batch.protocol.models.DataDisk>)"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)"
  name: "withDataDisks(List<DataDisk> dataDisks)"
  nameWithType: "VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)"
  summary: "Set this property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk\\#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps\\#add-an-empty-data-disk-to-a-virtual-machine."
  parameters:
  - description: "the dataDisks value to set"
    name: "dataDisks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.DataDisk?alt=com.microsoft.azure.batch.protocol.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VirtualMachineConfiguration withDataDisks(List<DataDisk> dataDisks)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration)"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  name: "withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  summary: "Set if specified, encryption is performed on each node in the pool during node provisioning."
  parameters:
  - description: "the diskEncryptionConfiguration value to set"
    name: "diskEncryptionConfiguration"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration?alt=com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration&text=DiskEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference(com.microsoft.azure.batch.protocol.models.ImageReference)"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference(ImageReference imageReference)"
  name: "withImageReference(ImageReference imageReference)"
  nameWithType: "VirtualMachineConfiguration.withImageReference(ImageReference imageReference)"
  summary: "Set the imageReference value."
  parameters:
  - description: "the imageReference value to set"
    name: "imageReference"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ImageReference?alt=com.microsoft.azure.batch.protocol.models.ImageReference&text=ImageReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withImageReference(ImageReference imageReference)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType(String licenseType)"
  name: "withLicenseType(String licenseType)"
  nameWithType: "VirtualMachineConfiguration.withLicenseType(String licenseType)"
  summary: "Set this only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows\\_Server - The on-premises license is for Windows Server. Windows\\_Client - The on-premises license is for Windows Client."
  parameters:
  - description: "the licenseType value to set"
    name: "licenseType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withLicenseType(String licenseType)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId(String nodeAgentSKUId)"
  name: "withNodeAgentSKUId(String nodeAgentSKUId)"
  nameWithType: "VirtualMachineConfiguration.withNodeAgentSKUId(String nodeAgentSKUId)"
  summary: "Set the Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the 'List supported Compute Node agent SKUs' operation."
  parameters:
  - description: "the nodeAgentSKUId value to set"
    name: "nodeAgentSKUId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withNodeAgentSKUId(String nodeAgentSKUId)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration(com.microsoft.azure.batch.protocol.models.WindowsConfiguration)"
  fullName: "com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  name: "withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  summary: "Set this property must not be specified if the imageReference property specifies a Linux OS Image."
  parameters:
  - description: "the windowsConfiguration value to set"
    name: "windowsConfiguration"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.WindowsConfiguration?alt=com.microsoft.azure.batch.protocol.models.WindowsConfiguration&text=WindowsConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
