### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  id: VirtualMachineConfiguration
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.VirtualMachineConfiguration()
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration()
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks()
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.diskEncryptionConfiguration()
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference()
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType()
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId()
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration()
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration(com.microsoft.azure.batch.protocol.models.ContainerConfiguration)
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks(java.util.List<com.microsoft.azure.batch.protocol.models.DataDisk>)
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration)
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference(com.microsoft.azure.batch.protocol.models.ImageReference)
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration(com.microsoft.azure.batch.protocol.models.WindowsConfiguration)
  langs:
  - java
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: The configuration for Compute Nodes in a Pool based on the Azure Virtual Machines infrastructure.
  syntax:
    content: public class VirtualMachineConfiguration
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.VirtualMachineConfiguration()
  id: VirtualMachineConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: VirtualMachineConfiguration()
  nameWithType: VirtualMachineConfiguration.VirtualMachineConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.VirtualMachineConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.VirtualMachineConfiguration*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public VirtualMachineConfiguration()
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration()
  id: containerConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: containerConfiguration()
  nameWithType: VirtualMachineConfiguration.containerConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it.
  syntax:
    content: public ContainerConfiguration containerConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.ContainerConfiguration
      description: the containerConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks()
  id: dataDisks()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: dataDisks()
  nameWithType: VirtualMachineConfiguration.dataDisks()
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks()
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk\#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps\#add-an-empty-data-disk-to-a-virtual-machine.
  syntax:
    content: public List<DataDisk> dataDisks()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.DataDisk>
      description: the dataDisks value
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.diskEncryptionConfiguration()
  id: diskEncryptionConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: diskEncryptionConfiguration()
  nameWithType: VirtualMachineConfiguration.diskEncryptionConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.diskEncryptionConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.diskEncryptionConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if specified, encryption is performed on each node in the pool during node provisioning.
  syntax:
    content: public DiskEncryptionConfiguration diskEncryptionConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration
      description: the diskEncryptionConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference()
  id: imageReference()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: imageReference()
  nameWithType: VirtualMachineConfiguration.imageReference()
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference()
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the imageReference value.
  syntax:
    content: public ImageReference imageReference()
    return:
      type: com.microsoft.azure.batch.protocol.models.ImageReference
      description: the imageReference value
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType()
  id: licenseType()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: licenseType()
  nameWithType: VirtualMachineConfiguration.licenseType()
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType()
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: 'Get this only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows\_Server - The on-premises license is for Windows Server. Windows\_Client - The on-premises license is for Windows Client.'
  syntax:
    content: public String licenseType()
    return:
      type: java.lang.String
      description: the licenseType value
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId()
  id: nodeAgentSKUId()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: nodeAgentSKUId()
  nameWithType: VirtualMachineConfiguration.nodeAgentSKUId()
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId()
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the 'List supported Compute Node agent SKUs' operation.
  syntax:
    content: public String nodeAgentSKUId()
    return:
      type: java.lang.String
      description: the nodeAgentSKUId value
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration()
  id: windowsConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: windowsConfiguration()
  nameWithType: VirtualMachineConfiguration.windowsConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property must not be specified if the imageReference property specifies a Linux OS Image.
  syntax:
    content: public WindowsConfiguration windowsConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.WindowsConfiguration
      description: the windowsConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration(com.microsoft.azure.batch.protocol.models.ContainerConfiguration)
  id: withContainerConfiguration(com.microsoft.azure.batch.protocol.models.ContainerConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: withContainerConfiguration(ContainerConfiguration containerConfiguration)
  nameWithType: VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it.
  syntax:
    content: public VirtualMachineConfiguration withContainerConfiguration(ContainerConfiguration containerConfiguration)
    parameters:
    - id: containerConfiguration
      type: com.microsoft.azure.batch.protocol.models.ContainerConfiguration
      description: the containerConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the VirtualMachineConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks(java.util.List<com.microsoft.azure.batch.protocol.models.DataDisk>)
  id: withDataDisks(java.util.List<com.microsoft.azure.batch.protocol.models.DataDisk>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: withDataDisks(List<DataDisk> dataDisks)
  nameWithType: VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk\#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps\#add-an-empty-data-disk-to-a-virtual-machine.
  syntax:
    content: public VirtualMachineConfiguration withDataDisks(List<DataDisk> dataDisks)
    parameters:
    - id: dataDisks
      type: java.util.List<com.microsoft.azure.batch.protocol.models.DataDisk>
      description: the dataDisks value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the VirtualMachineConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration)
  id: withDiskEncryptionConfiguration(com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)
  nameWithType: VirtualMachineConfiguration.withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if specified, encryption is performed on each node in the pool during node provisioning.
  syntax:
    content: public VirtualMachineConfiguration withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)
    parameters:
    - id: diskEncryptionConfiguration
      type: com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration
      description: the diskEncryptionConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the VirtualMachineConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference(com.microsoft.azure.batch.protocol.models.ImageReference)
  id: withImageReference(com.microsoft.azure.batch.protocol.models.ImageReference)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: withImageReference(ImageReference imageReference)
  nameWithType: VirtualMachineConfiguration.withImageReference(ImageReference imageReference)
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference(ImageReference imageReference)
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the imageReference value.
  syntax:
    content: public VirtualMachineConfiguration withImageReference(ImageReference imageReference)
    parameters:
    - id: imageReference
      type: com.microsoft.azure.batch.protocol.models.ImageReference
      description: the imageReference value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the VirtualMachineConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType(java.lang.String)
  id: withLicenseType(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: withLicenseType(String licenseType)
  nameWithType: VirtualMachineConfiguration.withLicenseType(String licenseType)
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType(String licenseType)
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: 'Set this only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows\_Server - The on-premises license is for Windows Server. Windows\_Client - The on-premises license is for Windows Client.'
  syntax:
    content: public VirtualMachineConfiguration withLicenseType(String licenseType)
    parameters:
    - id: licenseType
      type: java.lang.String
      description: the licenseType value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the VirtualMachineConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId(java.lang.String)
  id: withNodeAgentSKUId(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: withNodeAgentSKUId(String nodeAgentSKUId)
  nameWithType: VirtualMachineConfiguration.withNodeAgentSKUId(String nodeAgentSKUId)
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId(String nodeAgentSKUId)
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the 'List supported Compute Node agent SKUs' operation.
  syntax:
    content: public VirtualMachineConfiguration withNodeAgentSKUId(String nodeAgentSKUId)
    parameters:
    - id: nodeAgentSKUId
      type: java.lang.String
      description: the nodeAgentSKUId value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the VirtualMachineConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration(com.microsoft.azure.batch.protocol.models.WindowsConfiguration)
  id: withWindowsConfiguration(com.microsoft.azure.batch.protocol.models.WindowsConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  langs:
  - java
  name: withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  nameWithType: VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property must not be specified if the imageReference property specifies a Linux OS Image.
  syntax:
    content: public VirtualMachineConfiguration withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
    parameters:
    - id: windowsConfiguration
      type: com.microsoft.azure.batch.protocol.models.WindowsConfiguration
      description: the windowsConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the VirtualMachineConfiguration object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.VirtualMachineConfiguration*
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration.VirtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.VirtualMachineConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ImageReference
  name: ImageReference
  nameWithType: ImageReference
  fullName: com.microsoft.azure.batch.protocol.models.ImageReference
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference*
  name: imageReference
  nameWithType: VirtualMachineConfiguration.imageReference
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference*
  name: withImageReference
  nameWithType: VirtualMachineConfiguration.withImageReference
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId*
  name: nodeAgentSKUId
  nameWithType: VirtualMachineConfiguration.nodeAgentSKUId
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId*
  name: withNodeAgentSKUId
  nameWithType: VirtualMachineConfiguration.withNodeAgentSKUId
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.WindowsConfiguration
  name: WindowsConfiguration
  nameWithType: WindowsConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.WindowsConfiguration
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration*
  name: windowsConfiguration
  nameWithType: VirtualMachineConfiguration.windowsConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration*
  name: withWindowsConfiguration
  nameWithType: VirtualMachineConfiguration.withWindowsConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.DataDisk>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.DataDisk
    name: DataDisk
    fullName: com.microsoft.azure.batch.protocol.models.DataDisk
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks*
  name: dataDisks
  nameWithType: VirtualMachineConfiguration.dataDisks
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks*
  name: withDataDisks
  nameWithType: VirtualMachineConfiguration.withDataDisks
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType*
  name: licenseType
  nameWithType: VirtualMachineConfiguration.licenseType
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType*
  name: withLicenseType
  nameWithType: VirtualMachineConfiguration.withLicenseType
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ContainerConfiguration
  name: ContainerConfiguration
  nameWithType: ContainerConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.ContainerConfiguration
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration*
  name: containerConfiguration
  nameWithType: VirtualMachineConfiguration.containerConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration*
  name: withContainerConfiguration
  nameWithType: VirtualMachineConfiguration.withContainerConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration
  name: DiskEncryptionConfiguration
  nameWithType: DiskEncryptionConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.DiskEncryptionConfiguration
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.diskEncryptionConfiguration*
  name: diskEncryptionConfiguration
  nameWithType: VirtualMachineConfiguration.diskEncryptionConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.diskEncryptionConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration*
  name: withDiskEncryptionConfiguration
  nameWithType: VirtualMachineConfiguration.withDiskEncryptionConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.DataDisk
  name: DataDisk
  nameWithType: DataDisk
  fullName: com.microsoft.azure.batch.protocol.models.DataDisk
