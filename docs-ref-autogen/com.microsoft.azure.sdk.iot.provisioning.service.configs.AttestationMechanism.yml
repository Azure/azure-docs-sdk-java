### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  id: AttestationMechanism
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism(Attestation)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getAttestation()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getType()
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.yml
  langs:
  - java
  name: AttestationMechanism
  nameWithType: AttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  type: Class
  source:
    remote: &o0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AttestationMechanism.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AttestationMechanism.java
    startLine: 20
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: "<p>Representation of a single Device Provisioning Service Attestation mechanism in the IndividualEnrollment and EnrollmentGroup.</p>\r\n<p>It is an internal class that converts one of the attestations into JSON format. To configure the attestation mechanism, see the external API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Attestation\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public class AttestationMechanism
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism(Attestation)
  id: AttestationMechanism(Attestation)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.yml
  langs:
  - java
  name: AttestationMechanism(Attestation attestation)
  nameWithType: AttestationMechanism.AttestationMechanism(Attestation attestation)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism(Attestation attestation)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AttestationMechanism.java
    startLine: 54
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: "<p>CONSTRUCTOR</p>\r\n<p>It will create a new instance of the AttestationMechanism for the provided attestation type.</p>\r\n<p></p>"
  syntax:
    content: public AttestationMechanism(Attestation attestation)
    parameters:
    - id: attestation
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
      description: >-
        <p>the<code>Attestation 

            </code> with the TPM keys, X509 certificates or Symmetric Keys. It cannot be<code>null 

            </code> . </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided tpm is<code>null 

          </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism(String)
  id: AttestationMechanism(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.yml
  langs:
  - java
  name: AttestationMechanism(String json)
  nameWithType: AttestationMechanism.AttestationMechanism(String json)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism(String json)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AttestationMechanism.java
    startLine: 102
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public AttestationMechanism(String json)
    parameters:
    - id: json
      type: "26831127"
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getAttestation()
  id: getAttestation()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.yml
  langs:
  - java
  name: getAttestation()
  nameWithType: AttestationMechanism.getAttestation()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getAttestation()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getAttestation*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AttestationMechanism.java
    startLine: 135
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: "<p>Getter for the Attestation.</p>\r\n<p></p>"
  syntax:
    content: public Attestation getAttestation()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
      description: >-
        <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation" data-throw-if-not-resolved="false" data-raw-source="Attestation"></xref> that contains one of the stored Attestation. It cannot be<code>null 

            </code> . </p>
  exceptions:
  - type: 407b0ee3
    description: <p>If the type of the attestation mechanism is unknown. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getType()
  id: getType()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.yml
  langs:
  - java
  name: getType()
  nameWithType: AttestationMechanism.getType()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getType()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getType*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AttestationMechanism.java
    startLine: 123
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: "<p>Getter for the type.</p>\r\n<p></p>"
  syntax:
    content: public AttestationMechanismType getType()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType
      description: >-
        <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType" data-throw-if-not-resolved="false" data-raw-source="AttestationMechanismType"></xref> that contains the stored type. It cannot be<code>null 

            </code> . </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism*
  name: AttestationMechanism
  nameWithType: AttestationMechanism.AttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.AttestationMechanism
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getType*
  name: getType
  nameWithType: AttestationMechanism.getType
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getType
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: 407b0ee3
  spec.java:
  - name: ProvisioningServiceClientException
    fullName: ProvisioningServiceClientException
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getAttestation*
  name: getAttestation
  nameWithType: AttestationMechanism.getAttestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.getAttestation
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType.yml
  name: AttestationMechanismType
  nameWithType: AttestationMechanismType
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType
  type: Enum
  summary: "<p>Type of Device Provisioning Service attestation mechanism.</p>\r\n<p></p>"
  syntax:
    content: public enum AttestationMechanismType
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation.yml
  name: TpmAttestation
  nameWithType: TpmAttestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service TPM Attestation.</p>\r\n<p>The provisioning service supports Trusted Platform Module, or TPM, as the device attestation mechanism. User must provide the Endorsement Key, and can, optionally, provide the Storage Root Key.</p>\r\n<p></p>"
  syntax:
    content: public class TpmAttestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.yml
  name: X509Attestation
  nameWithType: X509Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service X509 Attestation.</p>\r\n<p>The provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation mechanism. To use DICE, user must provide the X509 certificate. This class provide the means to create a new attestation for a X509 certificate and return it as an abstract interface <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Attestation\"></xref>.</p>\r\n<p>An X509 attestation can contains one of the 3 types of certificate:</p>\r\n<p>\r\n  <variablelist>\r\n    <varlistentry>\r\n      <b>Client or Alias certificate:</b>\r\n    </varlistentry>\r\n    <li>\r\n      <p>Called on this class as clientCertificates, this certificate can authenticate a single device. </p>\r\n    </li>\r\n    <varlistentry>\r\n      <b>Signing or Root certificate:</b>\r\n    </varlistentry>\r\n    <li>\r\n      <p>Called on this class as rootCertificates, this certificate can create multiple Client certificates to authenticate multiple devices. </p>\r\n    </li>\r\n    <varlistentry>\r\n      <b>CA Reference:</b>\r\n    </varlistentry>\r\n    <li>\r\n      <p>Called on this class as X509CAReferences, this is a CA reference for a rootCertificate that can create multiple Client certificates to authenticate multiple devices. </p>\r\n    </li>\r\n  </variablelist>\r\n</p>\r\n<p>The provisioning service allows user to create <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref>. For all operations over <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> with <b>DICE</b>, user must provide a <b>clientCertificates</b>, and for operations over <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref>, user must provide a <b>rootCertificates</b> or a <b>X509CAReferences</b>.</p>\r\n<p>For each of this types of certificates, user can provide 2 Certificates, a primary and a secondary. Only the primary is mandatory, the secondary is optional.</p>\r\n<p>The provisioning service will process the provided certificates, but will never return it back. Instead of it, <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getPrimaryX509CertificateInfo()\"></xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getSecondaryX509CertificateInfo()\"></xref> will return the certificate information for the certificates.</p>\r\n<p></p>"
  syntax:
    content: public class X509Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation.yml
  name: SymmetricKeyAttestation
  nameWithType: SymmetricKeyAttestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service Symmetric Key Attestation.</p>\r\n<p>The provisioning service supports Symmetric Key attestation as the device attestation mechanism. User can auto-generate the Primary and Secondary keys, or provide the values in Base64 format.</p>\r\n<p></p>"
  syntax:
    content: public class SymmetricKeyAttestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation.yml
  name: Attestation
  nameWithType: Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
  type: Class
  summary: "<p>This is the abstract class that unifies all possible types of attestation that Device Provisioning Service supports.</p>\r\n<p>For now, the provisioning service supports <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TpmAttestation\"></xref> or <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509Attestation\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public class Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
  parent: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
  href: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException.yml
  name: ProvisioningServiceClientException
  nameWithType: ProvisioningServiceClientException
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
  type: Class
  summary: "<p>Super class for the Device Provisioning Service exceptions on the Service Client.</p>\r\n<p>\r\n  <pre>\r\n    <code>ProvisioningServiceClientException\r\n        |\r\n        +--&gt;ProvisioningServiceClientTransportException [any transport layer exception]\r\n        |\r\n        +--&gt;ProvisioningServiceClientServiceException [any exception reported in the http response]\r\n                |\r\n                |\r\n                +--&gt;ProvisioningServiceClientBadUsageException [any http response 4xx]\r\n                |        |\r\n                |        +--&gt;ProvisioningServiceClientBadFormatException [400]\r\n                |        +--&gt;ProvisioningServiceClientUnathorizedException [401]\r\n                |        +--&gt;ProvisioningServiceClientNotFoundException [404]\r\n                |        +--&gt;ProvisioningServiceClientPreconditionFailedException [412]\r\n                |        +--&gt;ProvisioningServiceClientTooManyRequestsException [429]\r\n                |\r\n                +--&gt;ProvisioningServiceClientTransientException [any http response 5xx]\r\n                |        |\r\n                |        +--&gt;ProvisioningServiceClientInternalServerErrorException [500]\r\n                |\r\n                +--&gt;ProvisioningServiceClientUnknownException [any other http response &gt;300, but not 4xx or 5xx]\r\n    </code>\r\n  </pre>\r\n</p>"
  syntax:
    content: public class ProvisioningServiceClientException
