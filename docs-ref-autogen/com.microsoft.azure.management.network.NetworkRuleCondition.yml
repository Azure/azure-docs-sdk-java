### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.NetworkRuleCondition"
fullName: "com.microsoft.azure.management.network.NetworkRuleCondition"
name: "NetworkRuleCondition"
nameWithType: "NetworkRuleCondition"
summary: "Rule condition of type network."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.network.FirewallPolicyRuleCondition?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.management.network.FirewallPolicyRuleCondition.description()"
- "com.microsoft.azure.management.network.FirewallPolicyRuleCondition.name()"
- "com.microsoft.azure.management.network.FirewallPolicyRuleCondition.withDescription(java.lang.String)"
- "com.microsoft.azure.management.network.FirewallPolicyRuleCondition.withName(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class NetworkRuleCondition extends FirewallPolicyRuleCondition"
constructors:
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.NetworkRuleCondition()"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.NetworkRuleCondition()"
  name: "NetworkRuleCondition()"
  nameWithType: "NetworkRuleCondition.NetworkRuleCondition()"
  syntax: "public NetworkRuleCondition()"
methods:
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.destinationAddresses()"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.destinationAddresses()"
  name: "destinationAddresses()"
  nameWithType: "NetworkRuleCondition.destinationAddresses()"
  summary: "Get list of destination IP addresses or Service Tags."
  syntax: "public List<String> destinationAddresses()"
  desc: "Get list of destination IP addresses or Service Tags."
  returns:
    description: "the destinationAddresses value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.destinationPorts()"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.destinationPorts()"
  name: "destinationPorts()"
  nameWithType: "NetworkRuleCondition.destinationPorts()"
  summary: "Get list of destination ports."
  syntax: "public List<String> destinationPorts()"
  desc: "Get list of destination ports."
  returns:
    description: "the destinationPorts value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.ipProtocols()"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.ipProtocols()"
  name: "ipProtocols()"
  nameWithType: "NetworkRuleCondition.ipProtocols()"
  summary: "Get array of Firewall<wbr>Policy<wbr>Rule<wbr>Condition<wbr>Network<wbr>Protocols."
  syntax: "public List<FirewallPolicyRuleConditionNetworkProtocol> ipProtocols()"
  desc: "Get array of FirewallPolicyRuleConditionNetworkProtocols."
  returns:
    description: "the ipProtocols value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.FirewallPolicyRuleConditionNetworkProtocol?alt=com.microsoft.azure.management.network.FirewallPolicyRuleConditionNetworkProtocol&text=FirewallPolicyRuleConditionNetworkProtocol\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.sourceAddresses()"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.sourceAddresses()"
  name: "sourceAddresses()"
  nameWithType: "NetworkRuleCondition.sourceAddresses()"
  summary: "Get list of source IP addresses for this rule."
  syntax: "public List<String> sourceAddresses()"
  desc: "Get list of source IP addresses for this rule."
  returns:
    description: "the sourceAddresses value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.withDestinationAddresses(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.withDestinationAddresses(List<String> destinationAddresses)"
  name: "withDestinationAddresses(List<String> destinationAddresses)"
  nameWithType: "NetworkRuleCondition.withDestinationAddresses(List<String> destinationAddresses)"
  summary: "Set list of destination IP addresses or Service Tags."
  parameters:
  - description: "the destinationAddresses value to set"
    name: "destinationAddresses"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleCondition withDestinationAddresses(List<String> destinationAddresses)"
  desc: "Set list of destination IP addresses or Service Tags."
  returns:
    description: "the NetworkRuleCondition object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkRuleCondition?alt=com.microsoft.azure.management.network.NetworkRuleCondition&text=NetworkRuleCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.withDestinationPorts(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.withDestinationPorts(List<String> destinationPorts)"
  name: "withDestinationPorts(List<String> destinationPorts)"
  nameWithType: "NetworkRuleCondition.withDestinationPorts(List<String> destinationPorts)"
  summary: "Set list of destination ports."
  parameters:
  - description: "the destinationPorts value to set"
    name: "destinationPorts"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleCondition withDestinationPorts(List<String> destinationPorts)"
  desc: "Set list of destination ports."
  returns:
    description: "the NetworkRuleCondition object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkRuleCondition?alt=com.microsoft.azure.management.network.NetworkRuleCondition&text=NetworkRuleCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.withIpProtocols(java.util.List<com.microsoft.azure.management.network.FirewallPolicyRuleConditionNetworkProtocol>)"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.withIpProtocols(List<FirewallPolicyRuleConditionNetworkProtocol> ipProtocols)"
  name: "withIpProtocols(List<FirewallPolicyRuleConditionNetworkProtocol> ipProtocols)"
  nameWithType: "NetworkRuleCondition.withIpProtocols(List<FirewallPolicyRuleConditionNetworkProtocol> ipProtocols)"
  summary: "Set array of Firewall<wbr>Policy<wbr>Rule<wbr>Condition<wbr>Network<wbr>Protocols."
  parameters:
  - description: "the ipProtocols value to set"
    name: "ipProtocols"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.FirewallPolicyRuleConditionNetworkProtocol?alt=com.microsoft.azure.management.network.FirewallPolicyRuleConditionNetworkProtocol&text=FirewallPolicyRuleConditionNetworkProtocol\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleCondition withIpProtocols(List<FirewallPolicyRuleConditionNetworkProtocol> ipProtocols)"
  desc: "Set array of FirewallPolicyRuleConditionNetworkProtocols."
  returns:
    description: "the NetworkRuleCondition object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkRuleCondition?alt=com.microsoft.azure.management.network.NetworkRuleCondition&text=NetworkRuleCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkRuleCondition.withSourceAddresses(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.network.NetworkRuleCondition.withSourceAddresses(List<String> sourceAddresses)"
  name: "withSourceAddresses(List<String> sourceAddresses)"
  nameWithType: "NetworkRuleCondition.withSourceAddresses(List<String> sourceAddresses)"
  summary: "Set list of source IP addresses for this rule."
  parameters:
  - description: "the sourceAddresses value to set"
    name: "sourceAddresses"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleCondition withSourceAddresses(List<String> sourceAddresses)"
  desc: "Set list of source IP addresses for this rule."
  returns:
    description: "the NetworkRuleCondition object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkRuleCondition?alt=com.microsoft.azure.management.network.NetworkRuleCondition&text=NetworkRuleCondition\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Rule condition of type network."
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
