### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.models.AffinityInformation.withAffinityId*"
fullName: "com.microsoft.azure.batch.protocol.models.AffinityInformation.withAffinityId"
name: "withAffinityId"
nameWithType: "AffinityInformation.withAffinityId"
members:
- uid: "com.microsoft.azure.batch.protocol.models.AffinityInformation.withAffinityId(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.AffinityInformation.withAffinityId(String affinityId)"
  name: "withAffinityId(String affinityId)"
  nameWithType: "AffinityInformation.withAffinityId(String affinityId)"
  summary: "Set you can pass the affinityId of a Node to indicate that this Task needs to run on that Compute Node. Note that this is just a soft affinity. If the target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere."
  parameters:
  - description: "the affinityId value to set"
    name: "affinityId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AffinityInformation withAffinityId(String affinityId)"
  returns:
    description: "the AffinityInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AffinityInformation?alt=com.microsoft.azure.batch.protocol.models.AffinityInformation&text=AffinityInformation\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
