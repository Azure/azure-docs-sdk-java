### YamlMime:JavaType
constructors:
- fullName: system.fabric.ServiceContext.ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)
  name: ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)
  nameWithType: ServiceContext.ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)
  parameters:
  - description: <p>The node context. </p>
    name: nodeContext
    type: <xref href="system.fabric.NodeContext?alt=system.fabric.NodeContext&text=NodeContext" data-throw-if-not-resolved="False"/>
  - description: <p>The code package activation context. </p>
    name: codePackageActivationContext
    type: <xref href="system.fabric.CodePackageActivationContext?alt=system.fabric.CodePackageActivationContext&text=CodePackageActivationContext" data-throw-if-not-resolved="False"/>
  - description: <p>The service type name. </p>
    name: serviceTypeName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The service name. </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>The initialization data. </p>
    name: initializationData
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The partition id. </p>
    name: partitionId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The replica or instance id. </p>
    name: replicaOrInstanceId
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.ServiceContext"></xref> class.</p>

    <p></p>
  syntax: protected ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)
  uid: system.fabric.ServiceContext.ServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: system.fabric.ServiceContext.getCodePackageActivationContext()
  name: getCodePackageActivationContext()
  nameWithType: ServiceContext.getCodePackageActivationContext()
  returns:
    description: <p>The code package activation context. </p>
    type: <xref href="system.fabric.CodePackageActivationContext?alt=system.fabric.CodePackageActivationContext&text=CodePackageActivationContext" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the code package activation context.</p>

    <p></p>
  syntax: public CodePackageActivationContext getCodePackageActivationContext()
  uid: system.fabric.ServiceContext.getCodePackageActivationContext()
- fullName: system.fabric.ServiceContext.getInitializationData()
  name: getInitializationData()
  nameWithType: ServiceContext.getInitializationData()
  returns:
    description: <p>The initialization data. </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the initialization data of the service.</p>

    <p></p>
  syntax: public byte [] getInitializationData()
  uid: system.fabric.ServiceContext.getInitializationData()
- fullName: system.fabric.ServiceContext.getNodeContext()
  name: getNodeContext()
  nameWithType: ServiceContext.getNodeContext()
  returns:
    description: <p>The node context. </p>
    type: <xref href="system.fabric.NodeContext?alt=system.fabric.NodeContext&text=NodeContext" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the node context for the node where the service replica is instantiated.</p>

    <p></p>
  syntax: public NodeContext getNodeContext()
  uid: system.fabric.ServiceContext.getNodeContext()
- fullName: system.fabric.ServiceContext.getPartitionId()
  name: getPartitionId()
  nameWithType: ServiceContext.getPartitionId()
  returns:
    description: <p>The partition id. </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the partition id.</p>

    <p></p>
  syntax: public UUID getPartitionId()
  uid: system.fabric.ServiceContext.getPartitionId()
- fullName: system.fabric.ServiceContext.getReplicaOrInstanceId()
  name: getReplicaOrInstanceId()
  nameWithType: ServiceContext.getReplicaOrInstanceId()
  returns:
    description: <p>The stateful service replica id or the stateless service instance id. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the stateful service replica id or the stateless service instance id.</p>

    <p></p>
  syntax: public long getReplicaOrInstanceId()
  uid: system.fabric.ServiceContext.getReplicaOrInstanceId()
- fullName: system.fabric.ServiceContext.getServiceName()
  name: getServiceName()
  nameWithType: ServiceContext.getServiceName()
  returns:
    description: <p>The service name. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the service name.</p>

    <p></p>
  syntax: public URI getServiceName()
  uid: system.fabric.ServiceContext.getServiceName()
- fullName: system.fabric.ServiceContext.getServiceTypeName()
  name: getServiceTypeName()
  nameWithType: ServiceContext.getServiceTypeName()
  returns:
    description: <p>The service type name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the service type name.</p>

    <p></p>
  syntax: public String getServiceTypeName()
  uid: system.fabric.ServiceContext.getServiceTypeName()
- fullName: system.fabric.ServiceContext.getTraceId()
  name: getTraceId()
  nameWithType: ServiceContext.getTraceId()
  returns:
    description: <p>The trace id of the service. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the trace id of the service.</p>

    <p>

      <b>Remarks:</b>The trace id can be used as an identifier for generated traces. </p>
  syntax: public String getTraceId()
  uid: system.fabric.ServiceContext.getTraceId()
nameWithType: ServiceContext
syntax: public class ServiceContext
type: class
uid: system.fabric.ServiceContext
fullName: system.fabric.ServiceContext
name: ServiceContext
package: system.fabric
summary: <p>Represents the service context that the service is operating under. </p>
metadata: {}
