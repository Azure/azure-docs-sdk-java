### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  id: AbstractReactiveCosmosQuery
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query
  children:
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.AbstractReactiveCosmosQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute(java.lang.Object[])
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution(org.springframework.data.repository.query.ReturnedType)
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod()
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.operations
  langs:
  - java
  name: AbstractReactiveCosmosQuery
  nameWithType: AbstractReactiveCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  type: Class
  package: com.azure.spring.data.cosmos.repository.query
  summary: Abstract class for reactive cosmos query.
  syntax:
    content: public abstract class AbstractReactiveCosmosQuery implements RepositoryQuery
  inheritance:
  - java.lang.Object
  implements:
  - org.springframework.data.repository.query.RepositoryQuery
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.AbstractReactiveCosmosQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)
  id: AbstractReactiveCosmosQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: AbstractReactiveCosmosQuery(ReactiveCosmosQueryMethod method, ReactiveCosmosOperations operations)
  nameWithType: AbstractReactiveCosmosQuery.AbstractReactiveCosmosQuery(ReactiveCosmosQueryMethod method, ReactiveCosmosOperations operations)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.AbstractReactiveCosmosQuery(ReactiveCosmosQueryMethod method, ReactiveCosmosOperations operations)
  overload: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.AbstractReactiveCosmosQuery*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.query
  summary: Initialization
  syntax:
    content: public AbstractReactiveCosmosQuery(ReactiveCosmosQueryMethod method, ReactiveCosmosOperations operations)
    parameters:
    - id: method
      type: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
      description: ReactiveCosmosQueryMethod
    - id: operations
      type: com.azure.spring.data.cosmos.core.ReactiveCosmosOperations
      description: ReactiveCosmosOperations
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
  id: createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: createQuery(ReactiveCosmosParameterAccessor accessor)
  nameWithType: AbstractReactiveCosmosQuery.createQuery(ReactiveCosmosParameterAccessor accessor)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery(ReactiveCosmosParameterAccessor accessor)
  overload: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: protected abstract CosmosQuery createQuery(ReactiveCosmosParameterAccessor accessor)
    parameters:
    - id: accessor
      type: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
    return:
      type: com.azure.spring.data.cosmos.core.query.CosmosQuery
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute(java.lang.Object[])
  id: execute(java.lang.Object[])
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: execute(Object[] parameters)
  nameWithType: AbstractReactiveCosmosQuery.execute(Object[] parameters)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute(Object[] parameters)
  overload: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  summary: Executes the <xref uid="com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery" data-throw-if-not-resolved="false">AbstractReactiveCosmosQuery</xref> with the given parameters.
  syntax:
    content: public Object execute(Object[] parameters)
    parameters:
    - id: parameters
      type: java.lang.Object[]
      description: must not be null.
    return:
      type: java.lang.Object
      description: execution result. Can be null.
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution(org.springframework.data.repository.query.ReturnedType)
  id: getExecution(org.springframework.data.repository.query.ReturnedType)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: getExecution(ReturnedType returnedType)
  nameWithType: AbstractReactiveCosmosQuery.getExecution(ReturnedType returnedType)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution(ReturnedType returnedType)
  overload: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  summary: Determines the appropriate execution path for a reactive query
  syntax:
    content: protected ReactiveCosmosQueryExecution getExecution(ReturnedType returnedType)
    parameters:
    - id: returnedType
      type: org.springframework.data.repository.query.ReturnedType
      description: The return type of the method
    return:
      type: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryExecution
      description: the execution type needed to handle the query
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod()
  id: getQueryMethod()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: getQueryMethod()
  nameWithType: AbstractReactiveCosmosQuery.getQueryMethod()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod()
  overload: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  summary: Get method of query
  syntax:
    content: public ReactiveCosmosQueryMethod getQueryMethod()
    return:
      type: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
      description: ReactiveCosmosQueryMethod
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery()
  id: isDeleteQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: isDeleteQuery()
  nameWithType: AbstractReactiveCosmosQuery.isDeleteQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery()
  overload: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: protected abstract boolean isDeleteQuery()
    return:
      type: boolean
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery()
  id: isExistsQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: isExistsQuery()
  nameWithType: AbstractReactiveCosmosQuery.isExistsQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery()
  overload: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: protected abstract boolean isExistsQuery()
    return:
      type: boolean
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery()
  id: isPageQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: isPageQuery()
  nameWithType: AbstractReactiveCosmosQuery.isPageQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery()
  overload: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: protected boolean isPageQuery()
    return:
      type: boolean
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.operations
  id: operations
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  langs:
  - java
  name: operations
  nameWithType: AbstractReactiveCosmosQuery.operations
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.operations
  type: Field
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: protected final ReactiveCosmosOperations operations
    return:
      type: com.azure.spring.data.cosmos.core.ReactiveCosmosOperations
references:
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
  name: ReactiveCosmosQueryMethod
  nameWithType: ReactiveCosmosQueryMethod
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
- uid: com.azure.spring.data.cosmos.core.ReactiveCosmosOperations
  name: ReactiveCosmosOperations
  nameWithType: ReactiveCosmosOperations
  fullName: com.azure.spring.data.cosmos.core.ReactiveCosmosOperations
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.AbstractReactiveCosmosQuery*
  name: AbstractReactiveCosmosQuery
  nameWithType: AbstractReactiveCosmosQuery.AbstractReactiveCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.AbstractReactiveCosmosQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute*
  name: execute
  nameWithType: AbstractReactiveCosmosQuery.execute
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute
  package: com.azure.spring.data.cosmos.repository.query
- uid: org.springframework.data.repository.query.ReturnedType
  spec.java:
  - uid: org.springframework.data.repository.query.ReturnedType
    name: ReturnedType
    fullName: org.springframework.data.repository.query.ReturnedType
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryExecution
  name: ReactiveCosmosQueryExecution
  nameWithType: ReactiveCosmosQueryExecution
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryExecution
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution*
  name: getExecution
  nameWithType: AbstractReactiveCosmosQuery.getExecution
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution
  package: com.azure.spring.data.cosmos.repository.query
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod*
  name: getQueryMethod
  nameWithType: AbstractReactiveCosmosQuery.getQueryMethod
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod
  package: com.azure.spring.data.cosmos.repository.query
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
  name: ReactiveCosmosParameterAccessor
  nameWithType: ReactiveCosmosParameterAccessor
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
- uid: com.azure.spring.data.cosmos.core.query.CosmosQuery
  name: CosmosQuery
  nameWithType: CosmosQuery
  fullName: com.azure.spring.data.cosmos.core.query.CosmosQuery
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery*
  name: createQuery
  nameWithType: AbstractReactiveCosmosQuery.createQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery*
  name: isDeleteQuery
  nameWithType: AbstractReactiveCosmosQuery.isDeleteQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery*
  name: isExistsQuery
  nameWithType: AbstractReactiveCosmosQuery.isExistsQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery*
  name: isPageQuery
  nameWithType: AbstractReactiveCosmosQuery.isPageQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: org.springframework.data.repository.query.RepositoryQuery
  name: RepositoryQuery
  nameWithType: RepositoryQuery
  fullName: org.springframework.data.repository.query.RepositoryQuery
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
