### YamlMime:JavaType
uid: "com.azure.data.tables.models.TableServiceLogging"
fullName: "com.azure.data.tables.models.TableServiceLogging"
name: "TableServiceLogging"
nameWithType: "TableServiceLogging"
summary: "Azure Analytics Logging settings."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **TableServiceLogging**</br> implements <xref href=\"com.azure.xml.XmlSerializable?alt=com.azure.xml.XmlSerializable&text=XmlSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.data.tables.models.TableServiceLogging.TableServiceLogging()"
  fullName: "com.azure.data.tables.models.TableServiceLogging.TableServiceLogging()"
  name: "TableServiceLogging()"
  nameWithType: "TableServiceLogging.TableServiceLogging()"
  summary: "Creates an instance of Table<wbr>Service<wbr>Logging class."
  syntax: "public TableServiceLogging()"
  desc: "Creates an instance of TableServiceLogging class."
methods:
- uid: "com.azure.data.tables.models.TableServiceLogging.fromXml(com.azure.xml.XmlReader)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.fromXml(XmlReader xmlReader)"
  name: "fromXml(XmlReader xmlReader)"
  nameWithType: "TableServiceLogging.fromXml(XmlReader xmlReader)"
  summary: "Reads an instance of Table<wbr>Service<wbr>Logging from the Xml<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The XmlReader being read."
    name: "xmlReader"
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TableServiceLogging fromXml(XmlReader xmlReader)"
  exceptions:
  - description: "If an error occurs while reading the TableServiceLogging."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Reads an instance of TableServiceLogging from the XmlReader."
  returns:
    description: "An instance of TableServiceLogging if the XmlReader was pointing to an instance of it, or null if it was\n pointing to XML null."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.fromXml(com.azure.xml.XmlReader,java.lang.String)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.fromXml(XmlReader xmlReader, String rootElementName)"
  name: "fromXml(XmlReader xmlReader, String rootElementName)"
  nameWithType: "TableServiceLogging.fromXml(XmlReader xmlReader, String rootElementName)"
  summary: "Reads an instance of Table<wbr>Service<wbr>Logging from the Xml<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The XmlReader being read."
    name: "xmlReader"
    type: "<xref href=\"com.azure.xml.XmlReader?alt=com.azure.xml.XmlReader&text=XmlReader\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional root element name to override the default defined by the model. Used to support\n cases where the model can deserialize from different root element names."
    name: "rootElementName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static TableServiceLogging fromXml(XmlReader xmlReader, String rootElementName)"
  exceptions:
  - description: "If an error occurs while reading the TableServiceLogging."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Reads an instance of TableServiceLogging from the XmlReader."
  returns:
    description: "An instance of TableServiceLogging if the XmlReader was pointing to an instance of it, or null if it was\n pointing to XML null."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.getAnalyticsVersion()"
  fullName: "com.azure.data.tables.models.TableServiceLogging.getAnalyticsVersion()"
  name: "getAnalyticsVersion()"
  nameWithType: "TableServiceLogging.getAnalyticsVersion()"
  summary: "Get the analytics<wbr>Version property: The version of Analytics to configure."
  syntax: "public String getAnalyticsVersion()"
  desc: "Get the analyticsVersion property: The version of Analytics to configure."
  returns:
    description: "the analyticsVersion value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.data.tables.models.TableServiceLogging.getRetentionPolicy()"
  fullName: "com.azure.data.tables.models.TableServiceLogging.getRetentionPolicy()"
  name: "getRetentionPolicy()"
  nameWithType: "TableServiceLogging.getRetentionPolicy()"
  summary: "Get the retention<wbr>Policy property: The retention policy."
  syntax: "public TableServiceRetentionPolicy getRetentionPolicy()"
  desc: "Get the retentionPolicy property: The retention policy."
  returns:
    description: "the retentionPolicy value."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceRetentionPolicy?alt=com.azure.data.tables.models.TableServiceRetentionPolicy&text=TableServiceRetentionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.isDeleteLogged()"
  fullName: "com.azure.data.tables.models.TableServiceLogging.isDeleteLogged()"
  name: "isDeleteLogged()"
  nameWithType: "TableServiceLogging.isDeleteLogged()"
  summary: "Get the delete<wbr>Logged property: Indicates whether all delete requests should be logged."
  syntax: "public boolean isDeleteLogged()"
  desc: "Get the deleteLogged property: Indicates whether all delete requests should be logged."
  returns:
    description: "the deleteLogged value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.isReadLogged()"
  fullName: "com.azure.data.tables.models.TableServiceLogging.isReadLogged()"
  name: "isReadLogged()"
  nameWithType: "TableServiceLogging.isReadLogged()"
  summary: "Get the read<wbr>Logged property: Indicates whether all read requests should be logged."
  syntax: "public boolean isReadLogged()"
  desc: "Get the readLogged property: Indicates whether all read requests should be logged."
  returns:
    description: "the readLogged value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.isWriteLogged()"
  fullName: "com.azure.data.tables.models.TableServiceLogging.isWriteLogged()"
  name: "isWriteLogged()"
  nameWithType: "TableServiceLogging.isWriteLogged()"
  summary: "Get the write<wbr>Logged property: Indicates whether all write requests should be logged."
  syntax: "public boolean isWriteLogged()"
  desc: "Get the writeLogged property: Indicates whether all write requests should be logged."
  returns:
    description: "the writeLogged value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.setAnalyticsVersion(java.lang.String)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.setAnalyticsVersion(String analyticsVersion)"
  name: "setAnalyticsVersion(String analyticsVersion)"
  nameWithType: "TableServiceLogging.setAnalyticsVersion(String analyticsVersion)"
  summary: "Set the analytics<wbr>Version property: The version of Analytics to configure."
  parameters:
  - description: "the analyticsVersion value to set."
    name: "analyticsVersion"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TableServiceLogging setAnalyticsVersion(String analyticsVersion)"
  desc: "Set the analyticsVersion property: The version of Analytics to configure."
  returns:
    description: "the TableServiceLogging object itself."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.setDeleteLogged(boolean)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.setDeleteLogged(boolean deleteLogged)"
  name: "setDeleteLogged(boolean deleteLogged)"
  nameWithType: "TableServiceLogging.setDeleteLogged(boolean deleteLogged)"
  summary: "Set the delete<wbr>Logged property: Indicates whether all delete requests should be logged."
  parameters:
  - description: "the deleteLogged value to set."
    name: "deleteLogged"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceLogging setDeleteLogged(boolean deleteLogged)"
  desc: "Set the deleteLogged property: Indicates whether all delete requests should be logged."
  returns:
    description: "the TableServiceLogging object itself."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.setReadLogged(boolean)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.setReadLogged(boolean readLogged)"
  name: "setReadLogged(boolean readLogged)"
  nameWithType: "TableServiceLogging.setReadLogged(boolean readLogged)"
  summary: "Set the read<wbr>Logged property: Indicates whether all read requests should be logged."
  parameters:
  - description: "the readLogged value to set."
    name: "readLogged"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceLogging setReadLogged(boolean readLogged)"
  desc: "Set the readLogged property: Indicates whether all read requests should be logged."
  returns:
    description: "the TableServiceLogging object itself."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.setRetentionPolicy(com.azure.data.tables.models.TableServiceRetentionPolicy)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.setRetentionPolicy(TableServiceRetentionPolicy retentionPolicy)"
  name: "setRetentionPolicy(TableServiceRetentionPolicy retentionPolicy)"
  nameWithType: "TableServiceLogging.setRetentionPolicy(TableServiceRetentionPolicy retentionPolicy)"
  summary: "Set the retention<wbr>Policy property: The retention policy."
  parameters:
  - description: "the retentionPolicy value to set."
    name: "retentionPolicy"
    type: "<xref href=\"com.azure.data.tables.models.TableServiceRetentionPolicy?alt=com.azure.data.tables.models.TableServiceRetentionPolicy&text=TableServiceRetentionPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceLogging setRetentionPolicy(TableServiceRetentionPolicy retentionPolicy)"
  desc: "Set the retentionPolicy property: The retention policy."
  returns:
    description: "the TableServiceLogging object itself."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.setWriteLogged(boolean)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.setWriteLogged(boolean writeLogged)"
  name: "setWriteLogged(boolean writeLogged)"
  nameWithType: "TableServiceLogging.setWriteLogged(boolean writeLogged)"
  summary: "Set the write<wbr>Logged property: Indicates whether all write requests should be logged."
  parameters:
  - description: "the writeLogged value to set."
    name: "writeLogged"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceLogging setWriteLogged(boolean writeLogged)"
  desc: "Set the writeLogged property: Indicates whether all write requests should be logged."
  returns:
    description: "the TableServiceLogging object itself."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.toXml(com.azure.xml.XmlWriter)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.toXml(XmlWriter xmlWriter)"
  name: "toXml(XmlWriter xmlWriter)"
  nameWithType: "TableServiceLogging.toXml(XmlWriter xmlWriter)"
  parameters:
  - name: "xmlWriter"
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter toXml(XmlWriter xmlWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  returns:
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableServiceLogging.toXml(com.azure.xml.XmlWriter,java.lang.String)"
  fullName: "com.azure.data.tables.models.TableServiceLogging.toXml(XmlWriter xmlWriter, String rootElementName)"
  name: "toXml(XmlWriter xmlWriter, String rootElementName)"
  nameWithType: "TableServiceLogging.toXml(XmlWriter xmlWriter, String rootElementName)"
  parameters:
  - name: "xmlWriter"
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
  - name: "rootElementName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter toXml(XmlWriter xmlWriter, String rootElementName)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  returns:
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Azure Analytics Logging settings."
implements:
- "<xref href=\"com.azure.xml.XmlSerializable?alt=com.azure.xml.XmlSerializable&text=XmlSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.models.TableServiceLogging?alt=com.azure.data.tables.models.TableServiceLogging&text=TableServiceLogging\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.data.tables.models"
artifact: com.azure:azure-data-tables:12.5.0
