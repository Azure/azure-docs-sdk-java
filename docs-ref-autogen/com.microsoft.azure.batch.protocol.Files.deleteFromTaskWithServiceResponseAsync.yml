### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Files.deleteFromTaskWithServiceResponseAsync*"
fullName: "com.microsoft.azure.batch.protocol.Files.deleteFromTaskWithServiceResponseAsync"
name: "deleteFromTaskWithServiceResponseAsync"
nameWithType: "Files.deleteFromTaskWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Files.deleteFromTaskWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Files.deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)"
  name: "deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)"
  nameWithType: "Files.deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)"
  summary: "Deletes the specified Task file from the Compute Node where the Task ran."
  parameters:
  - description: "The ID of the Job that contains the Task."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task whose file you want to delete."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path to the Task file or directory that you want to delete."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,FileDeleteFromTaskHeaders>> deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\">ServiceResponseWithHeaders</xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders?alt=com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders&text=FileDeleteFromTaskHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Files.deleteFromTaskWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Files.deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)"
  name: "deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)"
  nameWithType: "Files.deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)"
  summary: "Deletes the specified Task file from the Compute Node where the Task ran."
  parameters:
  - description: "The ID of the Job that contains the Task."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task whose file you want to delete."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path to the Task file or directory that you want to delete."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail."
    name: "recursive"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "fileDeleteFromTaskOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskOptions?alt=com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskOptions&text=FileDeleteFromTaskOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,FileDeleteFromTaskHeaders>> deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\">ServiceResponseWithHeaders</xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders?alt=com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders&text=FileDeleteFromTaskHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:8.0.0
