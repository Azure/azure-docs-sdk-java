### YamlMime:JavaType
uid: "com.azure.security.attestation.AttestationAdministrationClientBuilder"
fullName: "com.azure.security.attestation.AttestationAdministrationClientBuilder"
name: "AttestationAdministrationClientBuilder"
nameWithType: "AttestationAdministrationClientBuilder"
summary: "This class provides a fluent builder API to help add in the configuration and instantiation of the administrative APIs implemented by the Attestation Service: <xref uid=\"com.azure.security.attestation.AttestationAdministrationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.attestation.AttestationAdministrationClient\"></xref> and <xref uid=\"com.azure.security.attestation.AttestationAdministrationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.security.attestation.AttestationAdministrationAsyncClient\"></xref> classes calling the <xref uid=\"com.azure.security.attestation.AttestationClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationClientBuilder#buildClient()\"></xref> or <xref uid=\"com.azure.security.attestation.AttestationClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationClientBuilder#buildAsyncClient()\"></xref>.\n\nMore information on attestation policies can be found [here][]\n\nThere are two main families of APIs available from the Administration client.\n\n *  Attestation Policy Management\n *  Policy Management Certificate Management\n\nThe Policy Management APIs provide the ability to retrieve, modify and reset attestation policies. The policy management APIs are:\n\n *  <xref uid=\"com.azure.security.attestation.AttestationAdministrationClient.getAttestationPolicy(com.azure.security.attestation.models.AttestationType)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationAdministrationClient#getAttestationPolicy(AttestationType)\"></xref>\n *  <xref uid=\"com.azure.security.attestation.AttestationAdministrationAsyncClient.getAttestationPolicy(com.azure.security.attestation.models.AttestationType)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationAdministrationAsyncClient#getAttestationPolicy(AttestationType)\"></xref>\n *  <xref uid=\"com.azure.security.attestation.AttestationAdministrationClient.setAttestationPolicy(com.azure.security.attestation.models.AttestationType,com.azure.security.attestation.models.AttestationPolicySetOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationAdministrationClient#setAttestationPolicy(AttestationType, AttestationPolicySetOptions)\"></xref>\n *  <xref uid=\"com.azure.security.attestation.AttestationAdministrationAsyncClient.setAttestationPolicy(com.azure.security.attestation.models.AttestationType,com.azure.security.attestation.models.AttestationPolicySetOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationAdministrationAsyncClient#setAttestationPolicy(AttestationType, AttestationPolicySetOptions)\"></xref>\n *  <xref uid=\"com.azure.security.attestation.AttestationAdministrationClient.resetAttestationPolicy(com.azure.security.attestation.models.AttestationType,com.azure.security.attestation.models.AttestationPolicySetOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationAdministrationClient#resetAttestationPolicy(AttestationType, AttestationPolicySetOptions)\"></xref>\n *  <xref uid=\"com.azure.security.attestation.AttestationAdministrationAsyncClient.resetAttestationPolicy(com.azure.security.attestation.models.AttestationType,com.azure.security.attestation.models.AttestationPolicySetOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationAdministrationAsyncClient#resetAttestationPolicy(AttestationType, AttestationPolicySetOptions)\"></xref>\n\nThe Policy Management Certificate APIs provide the ability to manage the certificates which are used to establish authorization for Isolated mode attestation service instances. They include apis to enumerate, add and remove policy management certificates.\n\nThe minimal configuration options required by <xref uid=\"com.azure.security.attestation.AttestationClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationClientBuilder\"></xref> are:\n\n *  A <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> endpoint.\n *  A <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> object.\n\n**Instantiate a synchronous Attestation Client**\n\n```java\nAttestationAdministrationClient client = new AttestationAdministrationClientBuilder()\n     .endpoint(endpoint)\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .buildClient();\n```\n\n```java\nAttestationAdministrationAsyncClient asyncClient = new AttestationAdministrationClientBuilder()\n     .endpoint(endpoint)\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .buildAsyncClient();\n```\n\n\n[here]: https://docs.microsoft.com/azure/attestation/basic-concepts#attestation-policy"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AttestationAdministrationClientBuilder implements ConfigurationTrait<AttestationAdministrationClientBuilder>, EndpointTrait<AttestationAdministrationClientBuilder>, HttpTrait<AttestationAdministrationClientBuilder>, TokenCredentialTrait<AttestationAdministrationClientBuilder>"
constructors:
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.AttestationAdministrationClientBuilder()"
methods:
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.buildAsyncClient()"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.buildClient()"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.credential(com.azure.core.credential.TokenCredential)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.endpoint(java.lang.String)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.serviceVersion(com.azure.security.attestation.AttestationServiceVersion)"
- "com.azure.security.attestation.AttestationAdministrationClientBuilder.tokenValidationOptions(com.azure.security.attestation.models.AttestationTokenValidationOptions)"
type: "class"
implements:
- "<xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.AttestationAdministrationClientBuilder?alt=com.azure.security.attestation.AttestationAdministrationClientBuilder&text=AttestationAdministrationClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.EndpointTrait?alt=com.azure.core.client.traits.EndpointTrait&text=EndpointTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.AttestationAdministrationClientBuilder?alt=com.azure.security.attestation.AttestationAdministrationClientBuilder&text=AttestationAdministrationClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.HttpTrait?alt=com.azure.core.client.traits.HttpTrait&text=HttpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.AttestationAdministrationClientBuilder?alt=com.azure.security.attestation.AttestationAdministrationClientBuilder&text=AttestationAdministrationClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.attestation.AttestationAdministrationClientBuilder?alt=com.azure.security.attestation.AttestationAdministrationClientBuilder&text=AttestationAdministrationClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.security.attestation"
artifact: com.azure:azure-security-attestation:1.1.0
