### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.SasTokenProvider
  id: SasTokenProvider
  parent: com.microsoft.azure.sdk.iot.device
  children:
  - com.microsoft.azure.sdk.iot.device.SasTokenProvider.getSasToken()
  href: com.microsoft.azure.sdk.iot.device.SasTokenProvider.yml
  langs:
  - java
  name: SasTokenProvider
  nameWithType: SasTokenProvider
  fullName: com.microsoft.azure.sdk.iot.device.SasTokenProvider
  type: Interface
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/SasTokenProvider.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/SasTokenProvider.java
    startLine: 10
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Interface for allowing users to control SAS token generation. To see an example of how SAS tokens can be generated from device connection strings, see <xref uid=\"com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken\"></xref>. </p>"
  syntax:
    content: public interface SasTokenProvider
- uid: com.microsoft.azure.sdk.iot.device.SasTokenProvider.getSasToken()
  id: getSasToken()
  parent: com.microsoft.azure.sdk.iot.device.SasTokenProvider
  href: com.microsoft.azure.sdk.iot.device.SasTokenProvider.yml
  langs:
  - java
  name: getSasToken()
  nameWithType: SasTokenProvider.getSasToken()
  fullName: com.microsoft.azure.sdk.iot.device.SasTokenProvider.getSasToken()
  overload: com.microsoft.azure.sdk.iot.device.SasTokenProvider.getSasToken*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/SasTokenProvider.java
    startLine: 32
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Returns a SAS token to be used for authentication. </p>\r\n<p>This function will be called each time the client library needs a SAS token. This will follow different patterns based on which protocol your client object is using. </p>\r\n<p>For HTTPS, this function will be called for each HTTPS request made (for instance, once per telemetry send), and does not need to be a unique token each time. Because of that, users may simply cache and return the same SAS token repeatedly here. Alternatively, users can generate very short-lived SAS tokens since they will only need to be valid for a relative short period of time. The user of this API is responsible for tracking when to renew the SAS token based on how long the previous token was valid for. </p>\r\n<p>For AMQPS/AMQPS_WS, this function will be called once when first opening the connection, and then will be called again at some point prior to the previous SAS token's expiry time in order to proactively renew the connection's authentication. This proactive renewal takes place at around 85% of the previous SAS token's lifespan. </p>\r\n<p>For MQTT/MQTT_WS, this function will be called once when first opening the connection, and again each time the previous SAS token has expired and the client closes and re-opens the connection. MQTT/MQTT_WS does not currently support proactive token renewal. </p>"
  syntax:
    content: public char [] getSasToken()
    return:
      type: 2a946e3f
      description: <p>a SAS token to be used for authentication. </p>
references:
- uid: 2a946e3f
  spec.java:
  - name: char []
    fullName: char []
- uid: com.microsoft.azure.sdk.iot.device.SasTokenProvider.getSasToken*
  name: getSasToken
  nameWithType: SasTokenProvider.getSasToken
  fullName: com.microsoft.azure.sdk.iot.device.SasTokenProvider.getSasToken
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken
  parent: com.microsoft.azure.sdk.iot.device.auth
  href: com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken.yml
  name: IotHubSasToken
  nameWithType: IotHubSasToken
  fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken
  type: Class
  summary: "<p>Grants device access to an IoT Hub for the specified amount of time. </p>"
  syntax:
    content: public class IotHubSasToken
