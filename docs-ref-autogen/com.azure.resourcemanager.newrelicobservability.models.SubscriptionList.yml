### YamlMime:JavaType
uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList"
fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList"
name: "SubscriptionList"
nameWithType: "SubscriptionList"
summary: "The request to update subscriptions needed to be monitored by the New<wbr>Relic monitor resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SubscriptionList**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.SubscriptionList?alt=com.azure.resourcemanager.newrelicobservability.models.SubscriptionList&text=SubscriptionList\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.SubscriptionList()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.SubscriptionList()"
  name: "SubscriptionList()"
  nameWithType: "SubscriptionList.SubscriptionList()"
  summary: "Creates an instance of Subscription<wbr>List class."
  syntax: "public SubscriptionList()"
  desc: "Creates an instance of SubscriptionList class."
methods:
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "SubscriptionList.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Subscription<wbr>List from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SubscriptionList fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the SubscriptionList."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of SubscriptionList from the JsonReader."
  returns:
    description: "An instance of SubscriptionList if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.SubscriptionList?alt=com.azure.resourcemanager.newrelicobservability.models.SubscriptionList&text=SubscriptionList\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.monitoredSubscriptionList()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.monitoredSubscriptionList()"
  name: "monitoredSubscriptionList()"
  nameWithType: "SubscriptionList.monitoredSubscriptionList()"
  summary: "Get the monitored<wbr>Subscription<wbr>List property: List of subscriptions and the state of the monitoring."
  syntax: "public List<MonitoredSubscriptionInner> monitoredSubscriptionList()"
  desc: "Get the monitoredSubscriptionList property: List of subscriptions and the state of the monitoring."
  returns:
    description: "the monitoredSubscriptionList value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitoredSubscriptionInner?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitoredSubscriptionInner&text=MonitoredSubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.patchOperation()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.patchOperation()"
  name: "patchOperation()"
  nameWithType: "SubscriptionList.patchOperation()"
  summary: "Get the patch<wbr>Operation property: The operation for the patch on the resource."
  syntax: "public PatchOperation patchOperation()"
  desc: "Get the patchOperation property: The operation for the patch on the resource."
  returns:
    description: "the patchOperation value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PatchOperation?alt=com.azure.resourcemanager.newrelicobservability.models.PatchOperation&text=PatchOperation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.provisioningState()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.provisioningState()"
  name: "provisioningState()"
  nameWithType: "SubscriptionList.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning State of the resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning State of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.ProvisioningState?alt=com.azure.resourcemanager.newrelicobservability.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "SubscriptionList.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.validate()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.validate()"
  name: "validate()"
  nameWithType: "SubscriptionList.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.withMonitoredSubscriptionList(java.util.List<com.azure.resourcemanager.newrelicobservability.fluent.models.MonitoredSubscriptionInner>)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.withMonitoredSubscriptionList(List<MonitoredSubscriptionInner> monitoredSubscriptionList)"
  name: "withMonitoredSubscriptionList(List<MonitoredSubscriptionInner> monitoredSubscriptionList)"
  nameWithType: "SubscriptionList.withMonitoredSubscriptionList(List<MonitoredSubscriptionInner> monitoredSubscriptionList)"
  summary: "Set the monitored<wbr>Subscription<wbr>List property: List of subscriptions and the state of the monitoring."
  parameters:
  - description: "the monitoredSubscriptionList value to set."
    name: "monitoredSubscriptionList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.MonitoredSubscriptionInner?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.MonitoredSubscriptionInner&text=MonitoredSubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SubscriptionList withMonitoredSubscriptionList(List<MonitoredSubscriptionInner> monitoredSubscriptionList)"
  desc: "Set the monitoredSubscriptionList property: List of subscriptions and the state of the monitoring."
  returns:
    description: "the SubscriptionList object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.SubscriptionList?alt=com.azure.resourcemanager.newrelicobservability.models.SubscriptionList&text=SubscriptionList\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.withPatchOperation(com.azure.resourcemanager.newrelicobservability.models.PatchOperation)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.SubscriptionList.withPatchOperation(PatchOperation patchOperation)"
  name: "withPatchOperation(PatchOperation patchOperation)"
  nameWithType: "SubscriptionList.withPatchOperation(PatchOperation patchOperation)"
  summary: "Set the patch<wbr>Operation property: The operation for the patch on the resource."
  parameters:
  - description: "the patchOperation value to set."
    name: "patchOperation"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PatchOperation?alt=com.azure.resourcemanager.newrelicobservability.models.PatchOperation&text=PatchOperation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionList withPatchOperation(PatchOperation patchOperation)"
  desc: "Set the patchOperation property: The operation for the patch on the resource."
  returns:
    description: "the SubscriptionList object itself."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.SubscriptionList?alt=com.azure.resourcemanager.newrelicobservability.models.SubscriptionList&text=SubscriptionList\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The request to update subscriptions needed to be monitored by the NewRelic monitor resource."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.SubscriptionList?alt=com.azure.resourcemanager.newrelicobservability.models.SubscriptionList&text=SubscriptionList\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.newrelicobservability.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-newrelicobservability:1.2.0
