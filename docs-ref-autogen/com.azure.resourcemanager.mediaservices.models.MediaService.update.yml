### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.MediaService.Update"
fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.Update"
name: "MediaService.Update"
nameWithType: "MediaService.Update"
summary: "The template for Media<wbr>Service update."
syntax: "public static interface MediaService.Update extends MediaService.UpdateStages.WithTags, MediaService.UpdateStages.WithIdentity, MediaService.UpdateStages.WithStorageAccounts, MediaService.UpdateStages.WithStorageAuthentication, MediaService.UpdateStages.WithEncryption, MediaService.UpdateStages.WithKeyDelivery, MediaService.UpdateStages.WithPublicNetworkAccess"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.Update.apply()"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.Update.apply()"
  name: "apply()"
  nameWithType: "MediaService.Update.apply()"
  summary: "Executes the update request."
  modifiers:
  - "abstract"
  syntax: "public abstract MediaService apply()"
  desc: "Executes the update request."
  returns:
    description: "the updated resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaService.Update.apply(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaService.Update.apply(Context context)"
  name: "apply(Context context)"
  nameWithType: "MediaService.Update.apply(Context context)"
  summary: "Executes the update request."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaService apply(Context context)"
  desc: "Executes the update request."
  returns:
    description: "the updated resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The template for MediaService update."
implements:
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithEncryption?alt=com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithEncryption&text=WithEncryption\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithIdentity?alt=com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithIdentity&text=WithIdentity\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithKeyDelivery?alt=com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithKeyDelivery&text=WithKeyDelivery\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithPublicNetworkAccess?alt=com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithPublicNetworkAccess&text=WithPublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithStorageAccounts?alt=com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithStorageAccounts&text=WithStorageAccounts\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithStorageAuthentication?alt=com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithStorageAuthentication&text=WithStorageAuthentication\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithTags?alt=com.azure.resourcemanager.mediaservices.models.MediaService.UpdateStages.WithTags&text=WithTags\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
