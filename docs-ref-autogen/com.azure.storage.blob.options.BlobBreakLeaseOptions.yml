### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions
  id: BlobBreakLeaseOptions
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options
  children:
  - com.azure.storage.blob.options.BlobBreakLeaseOptions.BlobBreakLeaseOptions()
  - com.azure.storage.blob.options.BlobBreakLeaseOptions.getBreakPeriod()
  - com.azure.storage.blob.options.BlobBreakLeaseOptions.getRequestConditions()
  - com.azure.storage.blob.options.BlobBreakLeaseOptions.setBreakPeriod(java.time.Duration)
  - com.azure.storage.blob.options.BlobBreakLeaseOptions.setRequestConditions(com.azure.storage.blob.models.BlobLeaseRequestConditions)
  langs:
  - java
  name: BlobBreakLeaseOptions
  nameWithType: BlobBreakLeaseOptions
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions
  type: Class
  package: com.azure.storage.blob.options
  summary: Extended options that may be passed when breaking a lease to a blob or container.
  syntax:
    content: public class BlobBreakLeaseOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.BlobBreakLeaseOptions()
  id: BlobBreakLeaseOptions()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlobBreakLeaseOptions
  langs:
  - java
  name: BlobBreakLeaseOptions()
  nameWithType: BlobBreakLeaseOptions.BlobBreakLeaseOptions()
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.BlobBreakLeaseOptions()
  overload: com.azure.storage.blob.options.BlobBreakLeaseOptions.BlobBreakLeaseOptions*
  type: Constructor
  package: com.azure.storage.blob.options
  syntax:
    content: public BlobBreakLeaseOptions()
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.getBreakPeriod()
  id: getBreakPeriod()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlobBreakLeaseOptions
  langs:
  - java
  name: getBreakPeriod()
  nameWithType: BlobBreakLeaseOptions.getBreakPeriod()
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.getBreakPeriod()
  overload: com.azure.storage.blob.options.BlobBreakLeaseOptions.getBreakPeriod*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public Duration getBreakPeriod()
    return:
      type: java.time.Duration
      description: >-
        An optional duration, between 0 and 60 seconds, that the lease should continue before
         it is broken. If the break period is longer than the time remaining on the lease the remaining time on the lease
         is used. A new lease will not be available before the break period has expired, but the lease may be held for
         longer than the break period.
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.getRequestConditions()
  id: getRequestConditions()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlobBreakLeaseOptions
  langs:
  - java
  name: getRequestConditions()
  nameWithType: BlobBreakLeaseOptions.getRequestConditions()
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.getRequestConditions()
  overload: com.azure.storage.blob.options.BlobBreakLeaseOptions.getRequestConditions*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlobLeaseRequestConditions getRequestConditions()
    return:
      type: com.azure.storage.blob.models.BlobLeaseRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobLeaseRequestConditions" data-throw-if-not-resolved="false">BlobLeaseRequestConditions</xref>
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.setBreakPeriod(java.time.Duration)
  id: setBreakPeriod(java.time.Duration)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlobBreakLeaseOptions
  langs:
  - java
  name: setBreakPeriod(Duration breakPeriod)
  nameWithType: BlobBreakLeaseOptions.setBreakPeriod(Duration breakPeriod)
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.setBreakPeriod(Duration breakPeriod)
  overload: com.azure.storage.blob.options.BlobBreakLeaseOptions.setBreakPeriod*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlobBreakLeaseOptions setBreakPeriod(Duration breakPeriod)
    parameters:
    - id: breakPeriod
      type: java.time.Duration
      description: >-
        An optional duration, between 0 and 60 seconds, that the lease should continue before
         it is broken. If the break period is longer than the time remaining on the lease the remaining time on the lease
         is used. A new lease will not be available before the break period has expired, but the lease may be held for
         longer than the break period.
    return:
      type: com.azure.storage.blob.options.BlobBreakLeaseOptions
      description: The updated options.
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.setRequestConditions(com.azure.storage.blob.models.BlobLeaseRequestConditions)
  id: setRequestConditions(com.azure.storage.blob.models.BlobLeaseRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlobBreakLeaseOptions
  langs:
  - java
  name: setRequestConditions(BlobLeaseRequestConditions requestConditions)
  nameWithType: BlobBreakLeaseOptions.setRequestConditions(BlobLeaseRequestConditions requestConditions)
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.setRequestConditions(BlobLeaseRequestConditions requestConditions)
  overload: com.azure.storage.blob.options.BlobBreakLeaseOptions.setRequestConditions*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlobBreakLeaseOptions setRequestConditions(BlobLeaseRequestConditions requestConditions)
    parameters:
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobLeaseRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobLeaseRequestConditions" data-throw-if-not-resolved="false">BlobLeaseRequestConditions</xref>
    return:
      type: com.azure.storage.blob.options.BlobBreakLeaseOptions
      description: The updated options.
references:
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.BlobBreakLeaseOptions*
  name: BlobBreakLeaseOptions
  nameWithType: BlobBreakLeaseOptions.BlobBreakLeaseOptions
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.BlobBreakLeaseOptions
  package: com.azure.storage.blob.options
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.getBreakPeriod*
  name: getBreakPeriod
  nameWithType: BlobBreakLeaseOptions.getBreakPeriod
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.getBreakPeriod
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.setBreakPeriod*
  name: setBreakPeriod
  nameWithType: BlobBreakLeaseOptions.setBreakPeriod
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.setBreakPeriod
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.models.BlobLeaseRequestConditions
  name: BlobLeaseRequestConditions
  nameWithType: BlobLeaseRequestConditions
  fullName: com.azure.storage.blob.models.BlobLeaseRequestConditions
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.getRequestConditions*
  name: getRequestConditions
  nameWithType: BlobBreakLeaseOptions.getRequestConditions
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.getRequestConditions
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlobBreakLeaseOptions.setRequestConditions*
  name: setRequestConditions
  nameWithType: BlobBreakLeaseOptions.setRequestConditions
  fullName: com.azure.storage.blob.options.BlobBreakLeaseOptions.setRequestConditions
  package: com.azure.storage.blob.options
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
