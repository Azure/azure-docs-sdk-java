### YamlMime:JavaType
uid: "com.microsoft.azure.functions.annotation.EventHubOutput"
fullName: "com.microsoft.azure.functions.annotation.EventHubOutput"
name: "EventHubOutput"
nameWithType: "EventHubOutput"
summary: "Place this on a parameter whose value would be published to the event hub."
syntax: "public interface EventHubOutput implements Annotation"
methods:
- uid: "com.microsoft.azure.functions.annotation.EventHubOutput.connection()"
  fullName: "com.microsoft.azure.functions.annotation.EventHubOutput.connection()"
  name: "connection()"
  nameWithType: "EventHubOutput.connection()"
  summary: "Defines the app setting name that contains the Azure Eventhub connection string."
  modifiers:
  - "abstract"
  syntax: "public abstract String connection()"
  desc: "Defines the app setting name that contains the Azure Eventhub connection string."
  returns:
    description: "The app setting name of the connection string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.EventHubOutput.dataType()"
  fullName: "com.microsoft.azure.functions.annotation.EventHubOutput.dataType()"
  name: "dataType()"
  nameWithType: "EventHubOutput.dataType()"
  summary: "Defines how Functions runtime should treat the parameter value."
  modifiers:
  - "abstract"
  syntax: "public abstract String dataType()"
  desc: "Defines how Functions runtime should treat the parameter value. Possible values are:\n\n *  \"\" or string: treat it as a string whose value is serialized from the parameter\n *  binary: treat it as a binary data whose value comes from for example OutputBinding<byte\\[\\]>"
  returns:
    description: "The dataType which will be used by the Functions runtime."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.EventHubOutput.eventHubName()"
  fullName: "com.microsoft.azure.functions.annotation.EventHubOutput.eventHubName()"
  name: "eventHubName()"
  nameWithType: "EventHubOutput.eventHubName()"
  summary: "Defines the name of the event hub to which to publish."
  modifiers:
  - "abstract"
  syntax: "public abstract String eventHubName()"
  desc: "Defines the name of the event hub to which to publish."
  returns:
    description: "The event hub name string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.EventHubOutput.name()"
  fullName: "com.microsoft.azure.functions.annotation.EventHubOutput.name()"
  name: "name()"
  nameWithType: "EventHubOutput.name()"
  summary: "The variable name used in function.<wbr>json."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "The variable name used in function.json."
  returns:
    description: "The variable name used in function.json."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Place this on a parameter whose value would be published to the event hub. The parameter type should be OutputBinding<T>, where T could be one of:\n\n *  Any native Java types such as int, String, byte\\[\\]\n *  Any POJO type\n\nThe following example shows a Java function that writes a message to an event hub:\n\n```java\n@FunctionName(\"sendTime\")\n@EventHubOutput(name = \"event\", eventHubName = \"samples-workitems\", connection = \"AzureEventHubConnection\")\n public String sendTime(\n    @TimerTrigger(name = \"sendTimeTrigger\", schedule = \"0 */5 * * * *\") String timerInfo\n ) {\n     return LocalDateTime.now().toString();\n }\n```"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.functions.annotation"
artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
