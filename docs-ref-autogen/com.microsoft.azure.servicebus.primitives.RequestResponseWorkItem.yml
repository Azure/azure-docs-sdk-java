### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem"
fullName: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem"
name: "RequestResponseWorkItem"
nameWithType: "RequestResponseWorkItem"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.primitives.WorkItem?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.servicebus.primitives.WorkItem.cancelTimeoutTask(boolean)"
- "com.microsoft.azure.servicebus.primitives.WorkItem.getLastKnownException()"
- "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTask()"
- "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTracker()"
- "com.microsoft.azure.servicebus.primitives.WorkItem.getWork()"
- "com.microsoft.azure.servicebus.primitives.WorkItem.setLastKnownException(java.lang.Exception)"
- "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask(java.util.concurrent.ScheduledFuture<?>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RequestResponseWorkItem extends WorkItem<Message>"
constructors:
- uid: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.RequestResponseWorkItem(org.apache.qpid.proton.message.Message,com.microsoft.azure.servicebus.TransactionContext,java.util.concurrent.CompletableFuture<org.apache.qpid.proton.message.Message>,com.microsoft.azure.servicebus.primitives.TimeoutTracker)"
  fullName: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.RequestResponseWorkItem(Message request, TransactionContext transaction, CompletableFuture<Message> completableFuture, TimeoutTracker tracker)"
  name: "RequestResponseWorkItem(Message request, TransactionContext transaction, CompletableFuture<Message> completableFuture, TimeoutTracker tracker)"
  nameWithType: "RequestResponseWorkItem.RequestResponseWorkItem(Message request, TransactionContext transaction, CompletableFuture<Message> completableFuture, TimeoutTracker tracker)"
  parameters:
  - name: "request"
    type: "<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  - name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "completableFuture"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "tracker"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.TimeoutTracker?alt=com.microsoft.azure.servicebus.primitives.TimeoutTracker&text=TimeoutTracker\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestResponseWorkItem(Message request, TransactionContext transaction, CompletableFuture<Message> completableFuture, TimeoutTracker tracker)"
- uid: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.RequestResponseWorkItem(org.apache.qpid.proton.message.Message,com.microsoft.azure.servicebus.TransactionContext,java.util.concurrent.CompletableFuture<org.apache.qpid.proton.message.Message>,java.time.Duration)"
  fullName: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.RequestResponseWorkItem(Message request, TransactionContext transaction, CompletableFuture<Message> completableFuture, Duration timeout)"
  name: "RequestResponseWorkItem(Message request, TransactionContext transaction, CompletableFuture<Message> completableFuture, Duration timeout)"
  nameWithType: "RequestResponseWorkItem.RequestResponseWorkItem(Message request, TransactionContext transaction, CompletableFuture<Message> completableFuture, Duration timeout)"
  parameters:
  - name: "request"
    type: "<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  - name: "transaction"
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "completableFuture"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RequestResponseWorkItem(Message request, TransactionContext transaction, CompletableFuture<Message> completableFuture, Duration timeout)"
methods:
- uid: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.getRequest()"
  fullName: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.getRequest()"
  name: "getRequest()"
  nameWithType: "RequestResponseWorkItem.getRequest()"
  syntax: "public Message getRequest()"
  returns:
    type: "<xref href=\"org.apache.qpid.proton.message.Message?alt=org.apache.qpid.proton.message.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.getTransaction()"
  fullName: "com.microsoft.azure.servicebus.primitives.RequestResponseWorkItem.getTransaction()"
  name: "getTransaction()"
  nameWithType: "RequestResponseWorkItem.getTransaction()"
  syntax: "public TransactionContext getTransaction()"
  returns:
    type: "<xref href=\"com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.servicebus.primitives"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
