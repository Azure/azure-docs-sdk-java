### YamlMime:JavaType
uid: "com.azure.spring.cloudfoundry.environment.VcapProcessor"
fullName: "com.azure.spring.cloudfoundry.environment.VcapProcessor"
name: "VcapProcessor"
nameWithType: "VcapProcessor"
summary: "Parses VCAP\\_SERVICES environment variable and sets corresponding property values.\n\nNote that this class gets invoked before Spring creates the logging subsystem, so we just use System.out.println instead."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class VcapProcessor implements EnvironmentPostProcessor"
constructors:
- "com.azure.spring.cloudfoundry.environment.VcapProcessor.VcapProcessor()"
fields:
- "com.azure.spring.cloudfoundry.environment.VcapProcessor.LOG_VARIABLE"
- "com.azure.spring.cloudfoundry.environment.VcapProcessor.VCAP_SERVICES"
methods:
- "com.azure.spring.cloudfoundry.environment.VcapProcessor.parseVcapService(java.lang.String)"
- "com.azure.spring.cloudfoundry.environment.VcapProcessor.postProcessEnvironment(org.springframework.core.env.ConfigurableEnvironment,org.springframework.boot.SpringApplication)"
type: "class"
implements:
- "<xref href=\"org.springframework.boot.env.EnvironmentPostProcessor?alt=org.springframework.boot.env.EnvironmentPostProcessor&text=EnvironmentPostProcessor\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.spring.cloudfoundry.environment"
artifact: com.azure.spring:azure-spring-boot:3.0.0
