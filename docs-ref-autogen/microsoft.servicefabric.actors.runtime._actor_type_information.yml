### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime._actor_type_information
  id: _actor_type_information
  parent: microsoft.servicefabric.actors.runtime
  children:
  - microsoft.servicefabric.actors.runtime._actor_type_information.ActorTypeInformation()
  - microsoft.servicefabric.actors.runtime._actor_type_information.get(Class<?>)
  - microsoft.servicefabric.actors.runtime._actor_type_information.getEventInterfaceTypes()
  - microsoft.servicefabric.actors.runtime._actor_type_information.getImplementationType()
  - microsoft.servicefabric.actors.runtime._actor_type_information.getInterfaceTypes()
  - microsoft.servicefabric.actors.runtime._actor_type_information.getServiceName()
  - microsoft.servicefabric.actors.runtime._actor_type_information.getStatePersistence()
  - microsoft.servicefabric.actors.runtime._actor_type_information.isAbstract()
  - microsoft.servicefabric.actors.runtime._actor_type_information.isRemindable()
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 10
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Contains information about the type implementing an actor. </p>"
  syntax: &o1
    content: public class ActorTypeInformation
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.ActorTypeInformation()
  id: ActorTypeInformation()
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: ActorTypeInformation()
  nameWithType: ActorTypeInformation.ActorTypeInformation()
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.ActorTypeInformation()
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.ActorTypeInformation*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 94
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Initializes a new instance of the ActorTypeInformation class. </p>"
  syntax:
    content: public ActorTypeInformation()
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.get(Class<?>)
  id: get(Class<?>)
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: get(Class<?> actorClass)
  nameWithType: ActorTypeInformation.get(Class<?> actorClass)
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.get(Class<?> actorClass)
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.get*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 115
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Creates <xref uid=\"microsoft.servicefabric.actors.runtime._actor_type_information\" data-throw-if-not-resolved=\"false\">ActorTypeInformation</xref> from actorType.</p>\r\n<p>\r\nWhen base type for actorType is not of type <xref uid=\"microsoft.servicefabric.actors.runtime._actor_base\" data-throw-if-not-resolved=\"false\">ActorBase</xref>. </p>\r\n<p>When actorType does not implement an interface deriving from <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> and is not marked as abstract. </p>\r\n<p>When actorType implements more than one interface which derives from <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> but doesn't have <xref uid=\"microsoft.servicefabric.actors.runtime._actor_service_attribute\" data-throw-if-not-resolved=\"false\">ActorServiceAttribute</xref>. </p>"
  syntax:
    content: public static ActorTypeInformation get(Class<?> actorClass)
    parameters:
    - id: actorClass
      type: a19781f8
      description: <p>Type of class implementing the actor to create ActorTypeInforamtion for. </p>
    return:
      type: microsoft.servicefabric.actors.runtime._actor_type_information
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors.runtime._actor_type_information" data-throw-if-not-resolved="false">ActorTypeInformation</xref> created from actorType. </p>
  exceptions:
  - type: 3c87bd19
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getEventInterfaceTypes()
  id: getEventInterfaceTypes()
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: getEventInterfaceTypes()
  nameWithType: ActorTypeInformation.getEventInterfaceTypes()
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getEventInterfaceTypes()
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.getEventInterfaceTypes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 51
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets actor event interface which the actor class implements.</p>\r\n<p></p>"
  syntax:
    content: public List<Class<?>> getEventInterfaceTypes()
    return:
      type: 0e0b5418
      description: <p>An enumerator hat can be used to iterate through the actor event interface which the actor class implements. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getImplementationType()
  id: getImplementationType()
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: getImplementationType()
  nameWithType: ActorTypeInformation.getImplementationType()
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getImplementationType()
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.getImplementationType*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 31
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets type of the class implementing the actor.</p>\r\n<p></p>"
  syntax:
    content: public Class<?> getImplementationType()
    return:
      type: a19781f8
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">java.lang.Class</xref> type of the class implementing the actor. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getInterfaceTypes()
  id: getInterfaceTypes()
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: getInterfaceTypes()
  nameWithType: ActorTypeInformation.getInterfaceTypes()
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getInterfaceTypes()
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.getInterfaceTypes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 41
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets the actor interface types which derive from <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> and implemented by actor class.</p>\r\n<p></p>"
  syntax:
    content: public List<Class<?>> getInterfaceTypes()
    return:
      type: 0e0b5418
      description: <p>An enumerator that can be used to iterate through the actor interface type. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getServiceName()
  id: getServiceName()
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: getServiceName()
  nameWithType: ActorTypeInformation.getServiceName()
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getServiceName()
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.getServiceName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 61
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets service name if specified using <xref uid=\"microsoft.servicefabric.actors.runtime._actor_service_attribute\" data-throw-if-not-resolved=\"false\">ActorServiceAttribute</xref> for actor class.</p>\r\n<p></p>"
  syntax:
    content: public String getServiceName()
    return:
      type: "26831127"
      description: <p>Service name if specified using <xref uid="microsoft.servicefabric.actors.runtime._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> for actor class, null if attribute is not used. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getStatePersistence()
  id: getStatePersistence()
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: getStatePersistence()
  nameWithType: ActorTypeInformation.getStatePersistence()
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getStatePersistence()
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.getStatePersistence*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 89
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets the <xref uid=\"microsoft.servicefabric.actors.runtime._state_persistence\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.runtime.StatePersistence</xref> enum representing type of state persistence for the actor. </p>"
  syntax:
    content: public StatePersistence getStatePersistence()
    return:
      type: microsoft.servicefabric.actors.runtime._state_persistence
      description: <p>The <xref uid="microsoft.servicefabric.actors.runtime._state_persistence" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.runtime.StatePersistence</xref> representing type of state persistence for the actor. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.isAbstract()
  id: isAbstract()
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: isAbstract()
  nameWithType: ActorTypeInformation.isAbstract()
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.isAbstract()
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.isAbstract*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 70
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets if class implementing actor is abstract.</p>\r\n<p></p>"
  syntax:
    content: public boolean isAbstract()
    return:
      type: 4fc6e284
      description: <p>true if class implementing actor is abstract, otherwise false. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.isRemindable()
  id: isRemindable()
  parent: microsoft.servicefabric.actors.runtime._actor_type_information
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  langs:
  - java
  name: isRemindable()
  nameWithType: ActorTypeInformation.isRemindable()
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.isRemindable()
  overload: microsoft.servicefabric.actors.runtime._actor_type_information.isRemindable*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorTypeInformation.java
    startLine: 79
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets a value whether the actor class implements <xref uid=\"microsoft.servicefabric.actors.runtime._remindable\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.runtime.Remindable</xref></p>"
  syntax:
    content: public boolean isRemindable()
    return:
      type: 4fc6e284
      description: <p>true if the actor class implements <xref uid="microsoft.servicefabric.actors.runtime._remindable" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.runtime.Remindable</xref>; otherwise false. </p>
references:
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getImplementationType*
  name: getImplementationType
  nameWithType: ActorTypeInformation.getImplementationType
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getImplementationType
  package: microsoft.servicefabric.actors.runtime
- uid: 0e0b5418
  spec.java:
  - name: List<Class<?>>
    fullName: List<Class<?>>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getInterfaceTypes*
  name: getInterfaceTypes
  nameWithType: ActorTypeInformation.getInterfaceTypes
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getInterfaceTypes
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getEventInterfaceTypes*
  name: getEventInterfaceTypes
  nameWithType: ActorTypeInformation.getEventInterfaceTypes
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getEventInterfaceTypes
  package: microsoft.servicefabric.actors.runtime
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getServiceName*
  name: getServiceName
  nameWithType: ActorTypeInformation.getServiceName
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getServiceName
  package: microsoft.servicefabric.actors.runtime
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.isAbstract*
  name: isAbstract
  nameWithType: ActorTypeInformation.isAbstract
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.isAbstract
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.isRemindable*
  name: isRemindable
  nameWithType: ActorTypeInformation.isRemindable
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.isRemindable
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.getStatePersistence*
  name: getStatePersistence
  nameWithType: ActorTypeInformation.getStatePersistence
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.getStatePersistence
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.ActorTypeInformation*
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation.ActorTypeInformation
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.ActorTypeInformation
  package: microsoft.servicefabric.actors.runtime
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: microsoft.servicefabric.actors.runtime._actor_type_information.get*
  name: get
  nameWithType: ActorTypeInformation.get
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation.get
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._state_persistence
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._state_persistence.yml
  name: StatePersistence
  nameWithType: StatePersistence
  fullName: microsoft.servicefabric.actors.runtime.StatePersistence
  type: Enum
  summary: <p>Indicates how actor state is stored for an actor service. </p>
  syntax:
    content: public enum StatePersistence
- uid: microsoft.servicefabric.actors._actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor.yml
  name: Actor
  nameWithType: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: <p>Base interface for inheriting reliable actor interfaces. </p>
  syntax:
    content: public interface Actor
- uid: microsoft.servicefabric.actors.runtime._actor_service_attribute
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_service_attribute.yml
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
  type: Interface
  summary: <p>This attributes allows configuring the properties of the actor service. The attribute is applied on the actor type. </p>
  syntax:
    content: public interface ActorServiceAttribute
- uid: microsoft.servicefabric.actors.runtime._remindable
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._remindable.yml
  name: Remindable
  nameWithType: Remindable
  fullName: microsoft.servicefabric.actors.runtime.Remindable
  type: Interface
  summary: <p>Interface which actors that use reminders must implement. </p>
  syntax:
    content: public interface Remindable
- uid: microsoft.servicefabric.actors.runtime._actor_type_information
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation
  type: Class
  summary: <p>Contains information about the type implementing an actor. </p>
  syntax: *o1
- uid: microsoft.servicefabric.actors.runtime._actor_base
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_base.yml
  name: ActorBase
  nameWithType: ActorBase
  fullName: microsoft.servicefabric.actors.runtime.ActorBase
  type: Class
  summary: >-
    <p>Represents base class for actors. <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.Actor</xref></p>

    <p>

      <b>Remarks:</b>This is a base type for actor, it provides the functionality that is common across actors implemented by actor deriving from <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.Actor</xref> The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref uid="microsoft.servicefabric.actors.runtime._actor_state_provider" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.runtime.ActorStateProvider</xref>. </p>
  syntax:
    content: public class ActorBase
