### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.DataLakeFileSystemClient"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClient"
name: "DataLakeFileSystemClient"
nameWithType: "DataLakeFileSystemClient"
summary: "Client to a file system. It may only be instantiated through a <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"false\">DataLakeFileSystemClientBuilder</xref> or via the method <xref uid=\"com.azure.storage.file.datalake.DataLakeServiceClient.getFileSystemClient(java.lang.String)\" data-throw-if-not-resolved=\"false\">DataLakeServiceClient#getFileSystemClient(String)</xref>. This class does not hold any state about a particular file system but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to files/directories.\n\nThis client contains operations on a file system. Operations on a path are available on <xref uid=\"com.azure.storage.file.datalake.DataLakeFileClient\" data-throw-if-not-resolved=\"false\">DataLakeFileClient</xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeDirectoryClient\" data-throw-if-not-resolved=\"false\">DataLakeDirectoryClient</xref> through <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient.getFileClient(java.lang.String)\" data-throw-if-not-resolved=\"false\">#getFileClient(String)</xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient.getDirectoryClient(java.lang.String)\" data-throw-if-not-resolved=\"false\">#getDirectoryClient(String)</xref> respectively, and operations on the service are available on <xref uid=\"com.azure.storage.file.datalake.DataLakeServiceClient\" data-throw-if-not-resolved=\"false\">DataLakeServiceClient</xref>.\n\nPlease refer to the [ Azure Docs][Azure Docs] for more information on file systems.\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction?toc=%2fazure%2fstorage%2fblobs%2ftoc.json"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DataLakeFileSystemClient"
fields:
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.ROOT_FILESYSTEM_NAME"
methods:
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.create()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.createDirectory(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.createDirectory(java.lang.String,boolean)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.createDirectoryWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.models.PathHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.datalake.models.DataLakeRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.createFile(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.createFile(java.lang.String,boolean)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.createFileWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.models.PathHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.datalake.models.DataLakeRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.createWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.datalake.models.PublicAccessType,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.delete()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteDirectory(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteDirectoryWithResponse(java.lang.String,boolean,com.azure.storage.file.datalake.models.DataLakeRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteFile(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteFileWithResponse(java.lang.String,com.azure.storage.file.datalake.models.DataLakeRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.deleteWithResponse(com.azure.storage.file.datalake.models.DataLakeRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.generateSas(com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.generateUserDelegationSas(com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues,com.azure.storage.file.datalake.models.UserDelegationKey)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getAccessPolicy()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getAccessPolicyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getAccountName()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getDirectoryClient(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getFileClient(java.lang.String)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getFileSystemName()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getFileSystemUrl()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getHttpPipeline()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getProperties()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getPropertiesWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.getServiceVersion()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.listPaths()"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.listPaths(com.azure.storage.file.datalake.models.ListPathsOptions,java.time.Duration)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.setAccessPolicy(com.azure.storage.file.datalake.models.PublicAccessType,java.util.List<com.azure.storage.file.datalake.models.DataLakeSignedIdentifier>)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.setAccessPolicyWithResponse(com.azure.storage.file.datalake.models.PublicAccessType,java.util.List<com.azure.storage.file.datalake.models.DataLakeSignedIdentifier>,com.azure.storage.file.datalake.models.DataLakeRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.storage.file.datalake.DataLakeFileSystemClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.datalake.models.DataLakeRequestConditions,java.time.Duration,com.azure.core.util.Context)"
type: "class"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.2.0
