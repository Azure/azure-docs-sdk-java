### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.acceptLanguage()
  name: acceptLanguage()
  nameWithType: LogAnalyticsDataClient.acceptLanguage()
  returns:
    description: <p>the acceptLanguage value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets The preferred language for the response..</p>

    <p></p>
  syntax: public String acceptLanguage()
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.acceptLanguage()
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.generateClientRequestId()
  name: generateClientRequestId()
  nameWithType: LogAnalyticsDataClient.generateClientRequestId()
  returns:
    description: <p>the generateClientRequestId value. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>

    <p></p>
  syntax: public boolean generateClientRequestId()
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.generateClientRequestId()
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.getAzureClient()
  name: getAzureClient()
  nameWithType: LogAnalyticsDataClient.getAzureClient()
  returns:
    description: <p>the azure client; </p>
    type: <xref href="AzureClient?alt=AzureClient&text=AzureClient" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="AzureClient"></xref> used for long running operations. </p>
  syntax: public AzureClient getAzureClient()
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.getAzureClient()
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.longRunningOperationRetryTimeout()
  name: longRunningOperationRetryTimeout()
  nameWithType: LogAnalyticsDataClient.longRunningOperationRetryTimeout()
  returns:
    description: <p>the longRunningOperationRetryTimeout value. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets The retry timeout in seconds for Long Running Operations. Default value is 30..</p>

    <p></p>
  syntax: public int longRunningOperationRetryTimeout()
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.longRunningOperationRetryTimeout()
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.query(String workspaceId, QueryBody body)
  name: query(String workspaceId, QueryBody body)
  nameWithType: LogAnalyticsDataClient.query(String workspaceId, QueryBody body)
  parameters:
  - description: <p>ID of the workspace. This is Workspace ID from the Properties blade in the Azure portal. </p>
    name: workspaceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Analytics query. Learn more about the [Analytics query syntax](<a href="https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/">https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/</a>) </p>
    name: body
    type: <xref href="QueryBody?alt=QueryBody&text=QueryBody" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the QueryResults object if successful. </p>
    type: <xref href="QueryResults?alt=QueryResults&text=QueryResults" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Execute an Analytics query. Executes an Analytics query for data. [Here](<a href="https://dev.loganalytics.io/documentation/Using-the-API">https://dev.loganalytics.io/documentation/Using-the-API</a>) is an example for using POST with an Analytics query.</p>

    <p></p>
  syntax: public QueryResults query(String workspaceId, QueryBody body)
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.query(String,QueryBody)
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.queryAsync(String workspaceId, QueryBody body)
  name: queryAsync(String workspaceId, QueryBody body)
  nameWithType: LogAnalyticsDataClient.queryAsync(String workspaceId, QueryBody body)
  parameters:
  - description: <p>ID of the workspace. This is Workspace ID from the Properties blade in the Azure portal. </p>
    name: workspaceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Analytics query. Learn more about the [Analytics query syntax](<a href="https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/">https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/</a>) </p>
    name: body
    type: <xref href="QueryBody?alt=QueryBody&text=QueryBody" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the QueryResults object </p>
    type: <xref href="Observable%3CQueryResults%3E?alt=Observable%3CQueryResults%3E&text=Observable%3CQueryResults%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Execute an Analytics query. Executes an Analytics query for data. [Here](<a href="https://dev.loganalytics.io/documentation/Using-the-API">https://dev.loganalytics.io/documentation/Using-the-API</a>) is an example for using POST with an Analytics query.</p>

    <p></p>
  syntax: public Observable<QueryResults> queryAsync(String workspaceId, QueryBody body)
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.queryAsync(String,QueryBody)
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.queryAsync(String workspaceId, QueryBody body, final ServiceCallback<QueryResults> serviceCallback)
  name: queryAsync(String workspaceId, QueryBody body, final ServiceCallback<QueryResults> serviceCallback)
  nameWithType: LogAnalyticsDataClient.queryAsync(String workspaceId, QueryBody body, final ServiceCallback<QueryResults> serviceCallback)
  parameters:
  - description: <p>ID of the workspace. This is Workspace ID from the Properties blade in the Azure portal. </p>
    name: workspaceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Analytics query. Learn more about the [Analytics query syntax](<a href="https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/">https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/</a>) </p>
    name: body
    type: <xref href="QueryBody?alt=QueryBody&text=QueryBody" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CQueryResults%3E?alt=final+ServiceCallback%3CQueryResults%3E&text=final+ServiceCallback%3CQueryResults%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CQueryResults%3E?alt=ServiceFuture%3CQueryResults%3E&text=ServiceFuture%3CQueryResults%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Execute an Analytics query. Executes an Analytics query for data. [Here](<a href="https://dev.loganalytics.io/documentation/Using-the-API">https://dev.loganalytics.io/documentation/Using-the-API</a>) is an example for using POST with an Analytics query.</p>

    <p></p>
  syntax: public ServiceFuture<QueryResults> queryAsync(String workspaceId, QueryBody body, final ServiceCallback<QueryResults> serviceCallback)
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.queryAsync(String,QueryBody,final ServiceCallback<QueryResults>)
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.queryWithServiceResponseAsync(String workspaceId, QueryBody body)
  name: queryWithServiceResponseAsync(String workspaceId, QueryBody body)
  nameWithType: LogAnalyticsDataClient.queryWithServiceResponseAsync(String workspaceId, QueryBody body)
  parameters:
  - description: <p>ID of the workspace. This is Workspace ID from the Properties blade in the Azure portal. </p>
    name: workspaceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Analytics query. Learn more about the [Analytics query syntax](<a href="https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/">https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/</a>) </p>
    name: body
    type: <xref href="QueryBody?alt=QueryBody&text=QueryBody" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the QueryResults object </p>
    type: <xref href="Observable%3CServiceResponse%3CQueryResults%3E%3E?alt=Observable%3CServiceResponse%3CQueryResults%3E%3E&text=Observable%3CServiceResponse%3CQueryResults%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Execute an Analytics query. Executes an Analytics query for data. [Here](<a href="https://dev.loganalytics.io/documentation/Using-the-API">https://dev.loganalytics.io/documentation/Using-the-API</a>) is an example for using POST with an Analytics query.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<QueryResults>> queryWithServiceResponseAsync(String workspaceId, QueryBody body)
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.queryWithServiceResponseAsync(String,QueryBody)
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.restClient()
  name: restClient()
  nameWithType: LogAnalyticsDataClient.restClient()
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RestClient"></xref> object. </p>
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the REST client.</p>

    <p></p>
  syntax: public RestClient restClient()
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.restClient()
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.userAgent()
  name: userAgent()
  nameWithType: LogAnalyticsDataClient.userAgent()
  returns:
    description: <p>the user agent string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the User-Agent header for the client.</p>

    <p></p>
  syntax: public String userAgent()
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.userAgent()
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.withAcceptLanguage(String acceptLanguage)
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: LogAnalyticsDataClient.withAcceptLanguage(String acceptLanguage)
  parameters:
  - description: <p>the acceptLanguage value. </p>
    name: acceptLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.loganalytics.LogAnalyticsDataClient?alt=com.microsoft.azure.loganalytics.LogAnalyticsDataClient&text=LogAnalyticsDataClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets The preferred language for the response..</p>

    <p></p>
  syntax: public LogAnalyticsDataClient withAcceptLanguage(String acceptLanguage)
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.withAcceptLanguage(String)
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.withGenerateClientRequestId(boolean generateClientRequestId)
  name: withGenerateClientRequestId(boolean generateClientRequestId)
  nameWithType: LogAnalyticsDataClient.withGenerateClientRequestId(boolean generateClientRequestId)
  parameters:
  - description: <p>the generateClientRequestId value. </p>
    name: generateClientRequestId
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.loganalytics.LogAnalyticsDataClient?alt=com.microsoft.azure.loganalytics.LogAnalyticsDataClient&text=LogAnalyticsDataClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>

    <p></p>
  syntax: public LogAnalyticsDataClient withGenerateClientRequestId(boolean generateClientRequestId)
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.withGenerateClientRequestId(boolean)
- fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  name: withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  nameWithType: LogAnalyticsDataClient.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  parameters:
  - description: <p>the longRunningOperationRetryTimeout value. </p>
    name: longRunningOperationRetryTimeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.loganalytics.LogAnalyticsDataClient?alt=com.microsoft.azure.loganalytics.LogAnalyticsDataClient&text=LogAnalyticsDataClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets The retry timeout in seconds for Long Running Operations. Default value is 30..</p>

    <p></p>
  syntax: public LogAnalyticsDataClient withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient.withLongRunningOperationRetryTimeout(int)
nameWithType: LogAnalyticsDataClient
syntax: public interface LogAnalyticsDataClient
type: interface
uid: com.microsoft.azure.loganalytics.LogAnalyticsDataClient
fullName: com.microsoft.azure.loganalytics.LogAnalyticsDataClient
name: LogAnalyticsDataClient
package: com.microsoft.azure.loganalytics
summary: <p>The interface for LogAnalyticsDataClient class. </p>
metadata: {}
