### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater"
  id: "ResourceCreatorUpdater"
  parent: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
  children:
  - "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.afterPostRunAsync(boolean)"
  - "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.beforeGroupCreateOrUpdate()"
  - "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.createResourceAsync()"
  - "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.isHot()"
  - "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.isInCreateMode()"
  - "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.updateResourceAsync()"
  langs:
  - "java"
  name: "CreateUpdateTask.ResourceCreatorUpdater<T>"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>"
  type: "Interface"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
  summary: "Represents a type that know how to create or update a resource of type <xref uid=\"T\" data-throw-if-not-resolved=\"false\">T</xref>.\n\nAn instance of <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask\" data-throw-if-not-resolved=\"false\">CreateUpdateTask</xref> wraps this type and invokes appropriate methods when CreateUpdateTask methods get called during TaskGroup invocation."
  syntax:
    content: "public static interface CreateUpdateTask.ResourceCreatorUpdater<T>"
    typeParameters:
    - id: "T"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.afterPostRunAsync(boolean)"
  id: "afterPostRunAsync(boolean)"
  parent: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater"
  langs:
  - "java"
  name: "afterPostRunAsync(boolean isGroupFaulted)"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.afterPostRunAsync(boolean isGroupFaulted)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.afterPostRunAsync(boolean isGroupFaulted)"
  overload: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.afterPostRunAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
  summary: "Perform any action followed by the processing of work scheduled to be invoked (i.e. \"post run\") after \\{@link this\\#createResourceAsync()\\} or \\{@link this\\#updateResourceAsync()\\}."
  syntax:
    content: "public abstract Completable afterPostRunAsync(boolean isGroupFaulted)"
    parameters:
    - id: "isGroupFaulted"
      type: "boolean"
      description: "true if one or more tasks in the group this creatorUpdater\n                       belongs to are in faulted state."
    return:
      type: "rx.Completable"
      description: "a completable represents the asynchronous action"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.beforeGroupCreateOrUpdate()"
  id: "beforeGroupCreateOrUpdate()"
  parent: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater"
  langs:
  - "java"
  name: "beforeGroupCreateOrUpdate()"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.beforeGroupCreateOrUpdate()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.beforeGroupCreateOrUpdate()"
  overload: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.beforeGroupCreateOrUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
  summary: "The method that gets called before invoking all the tasks in the <xref uid=\"com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup\" data-throw-if-not-resolved=\"false\">TaskGroup</xref> that the parent <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask\" data-throw-if-not-resolved=\"false\">CreateUpdateTask</xref> belongs to."
  syntax:
    content: "public abstract void beforeGroupCreateOrUpdate()"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.createResourceAsync()"
  id: "createResourceAsync()"
  parent: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater"
  langs:
  - "java"
  name: "createResourceAsync()"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.createResourceAsync()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.createResourceAsync()"
  overload: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.createResourceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
  summary: "Creates the resource asynchronously."
  syntax:
    content: "public abstract Observable<T> createResourceAsync()"
    return:
      type: "rx.Observable<T>"
      description: "an observable that create the resource when subscribed"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.isHot()"
  id: "isHot()"
  parent: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater"
  langs:
  - "java"
  name: "isHot()"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.isHot()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.isHot()"
  overload: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.isHot*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
  syntax:
    content: "public abstract boolean isHot()"
    return:
      type: "boolean"
      description: "true if the observable returned by {@link this#createResourceAsync()} and\n {@link this#updateResourceAsync()} are hot observables, false if they are cold\n observables."
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.isInCreateMode()"
  id: "isInCreateMode()"
  parent: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater"
  langs:
  - "java"
  name: "isInCreateMode()"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.isInCreateMode()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.isInCreateMode()"
  overload: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.isInCreateMode*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
  syntax:
    content: "public abstract boolean isInCreateMode()"
    return:
      type: "boolean"
      description: "true if this creatorUpdater is in create mode."
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.updateResourceAsync()"
  id: "updateResourceAsync()"
  parent: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater"
  langs:
  - "java"
  name: "updateResourceAsync()"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.updateResourceAsync()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.updateResourceAsync()"
  overload: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.updateResourceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
  summary: "Update the resource asynchronously."
  syntax:
    content: "public abstract Observable<T> updateResourceAsync()"
    return:
      type: "rx.Observable<T>"
      description: "an observable that update the resource when subscribed"
references:
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.isInCreateMode*"
  name: "isInCreateMode"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.isInCreateMode"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.isInCreateMode"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.beforeGroupCreateOrUpdate*"
  name: "beforeGroupCreateOrUpdate"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.beforeGroupCreateOrUpdate"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.beforeGroupCreateOrUpdate"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
- uid: "rx.Observable<T>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.createResourceAsync*"
  name: "createResourceAsync"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.createResourceAsync"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.createResourceAsync"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.updateResourceAsync*"
  name: "updateResourceAsync"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.updateResourceAsync"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.updateResourceAsync"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.isHot*"
  name: "isHot"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.isHot"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.isHot"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
- uid: "rx.Completable"
  spec.java:
  - uid: "rx.Completable"
    name: "Completable"
    fullName: "rx.Completable"
- uid: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater.afterPostRunAsync*"
  name: "afterPostRunAsync"
  nameWithType: "CreateUpdateTask.ResourceCreatorUpdater<T>.afterPostRunAsync"
  fullName: "com.microsoft.azure.management.resources.fluentcore.model.implementation.CreateUpdateTask.ResourceCreatorUpdater<T>.afterPostRunAsync"
  package: "com.microsoft.azure.management.resources.fluentcore.model.implementation"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
