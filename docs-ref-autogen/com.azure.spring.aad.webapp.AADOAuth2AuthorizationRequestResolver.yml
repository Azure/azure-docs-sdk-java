### YamlMime:JavaType
uid: "com.azure.spring.aad.webapp.AADOAuth2AuthorizationRequestResolver"
fullName: "com.azure.spring.aad.webapp.AADOAuth2AuthorizationRequestResolver"
name: "AADOAuth2AuthorizationRequestResolver"
nameWithType: "AADOAuth2AuthorizationRequestResolver"
summary: "To add conditional policy claims to authorization URL."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AADOAuth2AuthorizationRequestResolver implements OAuth2AuthorizationRequestResolver"
constructors:
- "com.azure.spring.aad.webapp.AADOAuth2AuthorizationRequestResolver.AADOAuth2AuthorizationRequestResolver(org.springframework.security.oauth2.client.registration.ClientRegistrationRepository)"
methods:
- "com.azure.spring.aad.webapp.AADOAuth2AuthorizationRequestResolver.resolve(javax.servlet.http.HttpServletRequest)"
- "com.azure.spring.aad.webapp.AADOAuth2AuthorizationRequestResolver.resolve(javax.servlet.http.HttpServletRequest,java.lang.String)"
type: "class"
implements:
- "<xref href=\"org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestResolver?alt=org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestResolver&text=OAuth2AuthorizationRequestResolver\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.spring.aad.webapp"
artifact: com.azure.spring:azure-spring-boot:3.0.0
