### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.Image"
fullName: "com.azure.resourcemanager.mediaservices.models.Image"
name: "Image"
nameWithType: "Image"
summary: "Describes the basic properties for generating thumbnails from the input video."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Codec?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Video?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.mediaservices.models.Codec.label()"
- "com.azure.resourcemanager.mediaservices.models.Video.keyFrameInterval()"
- "com.azure.resourcemanager.mediaservices.models.Video.stretchMode()"
- "com.azure.resourcemanager.mediaservices.models.Video.syncMode()"
- "com.azure.resourcemanager.mediaservices.models.Video.validate()"
- "com.azure.resourcemanager.mediaservices.models.Video.withKeyFrameInterval(java.time.Duration)"
- "com.azure.resourcemanager.mediaservices.models.Video.withLabel(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Video.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
- "com.azure.resourcemanager.mediaservices.models.Video.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Image extends Video"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.Image.Image()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.Image()"
  name: "Image()"
  nameWithType: "Image.Image()"
  syntax: "public Image()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.Image.range()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.range()"
  name: "range()"
  nameWithType: "Image.range()"
  summary: "Get the range property: The position relative to transform preset start time in the input video at which to stop generating thumbnails."
  syntax: "public String range()"
  desc: "Get the range property: The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream."
  returns:
    description: "the range value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.start()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.start()"
  name: "start()"
  nameWithType: "Image.start()"
  summary: "Get the start property: The position in the input video from where to start generating thumbnails."
  syntax: "public String start()"
  desc: "Get the start property: The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro \\{Best\\}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro \\{Best\\}."
  returns:
    description: "the start value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.step()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.step()"
  name: "step()"
  nameWithType: "Image.step()"
  summary: "Get the step property: The intervals at which thumbnails are generated."
  syntax: "public String step()"
  desc: "Get the step property: The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time."
  returns:
    description: "the step value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.validate()"
  name: "validate()"
  nameWithType: "Image.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.Image.withKeyFrameInterval(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.withKeyFrameInterval(Duration keyFrameInterval)"
  name: "withKeyFrameInterval(Duration keyFrameInterval)"
  nameWithType: "Image.withKeyFrameInterval(Duration keyFrameInterval)"
  summary: "Set the key<wbr>Frame<wbr>Interval property: The distance between two key frames."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.withKeyFrameInterval(java.time.Duration)"
  parameters:
  - name: "keyFrameInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Image withKeyFrameInterval(Duration keyFrameInterval)"
  desc: "Set the keyFrameInterval property: The distance between two key frames. The value should be non-zero in the range \\[0.5, 20\\] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Image?alt=com.azure.resourcemanager.mediaservices.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.withLabel(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.withLabel(String label)"
  name: "withLabel(String label)"
  nameWithType: "Image.withLabel(String label)"
  summary: "Set the label property: An optional label for the codec."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.withLabel(java.lang.String)"
  parameters:
  - name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Image withLabel(String label)"
  desc: "Set the label property: An optional label for the codec. The label can be used to control muxing behavior."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Image?alt=com.azure.resourcemanager.mediaservices.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.withRange(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.withRange(String range)"
  name: "withRange(String range)"
  nameWithType: "Image.withRange(String range)"
  summary: "Set the range property: The position relative to transform preset start time in the input video at which to stop generating thumbnails."
  parameters:
  - description: "the range value to set."
    name: "range"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Image withRange(String range)"
  desc: "Set the range property: The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream."
  returns:
    description: "the Image object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Image?alt=com.azure.resourcemanager.mediaservices.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.withStart(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.withStart(String start)"
  name: "withStart(String start)"
  nameWithType: "Image.withStart(String start)"
  summary: "Set the start property: The position in the input video from where to start generating thumbnails."
  parameters:
  - description: "the start value to set."
    name: "start"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Image withStart(String start)"
  desc: "Set the start property: The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro \\{Best\\}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro \\{Best\\}."
  returns:
    description: "the Image object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Image?alt=com.azure.resourcemanager.mediaservices.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.withStep(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.withStep(String step)"
  name: "withStep(String step)"
  nameWithType: "Image.withStep(String step)"
  summary: "Set the step property: The intervals at which thumbnails are generated."
  parameters:
  - description: "the step value to set."
    name: "step"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Image withStep(String step)"
  desc: "Set the step property: The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time."
  returns:
    description: "the Image object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Image?alt=com.azure.resourcemanager.mediaservices.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.withStretchMode(StretchMode stretchMode)"
  name: "withStretchMode(StretchMode stretchMode)"
  nameWithType: "Image.withStretchMode(StretchMode stretchMode)"
  summary: "Set the stretch<wbr>Mode property: The resizing mode - how the input video will be resized to fit the desired output resolution(s)."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
  parameters:
  - name: "stretchMode"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StretchMode?alt=com.azure.resourcemanager.mediaservices.models.StretchMode&text=StretchMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Image withStretchMode(StretchMode stretchMode)"
  desc: "Set the stretchMode property: The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Image?alt=com.azure.resourcemanager.mediaservices.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Image.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Image.withSyncMode(VideoSyncMode syncMode)"
  name: "withSyncMode(VideoSyncMode syncMode)"
  nameWithType: "Image.withSyncMode(VideoSyncMode syncMode)"
  summary: "Set the sync<wbr>Mode property: The Video Sync Mode."
  overridden: "com.azure.resourcemanager.mediaservices.models.Video.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
  parameters:
  - name: "syncMode"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoSyncMode?alt=com.azure.resourcemanager.mediaservices.models.VideoSyncMode&text=VideoSyncMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Image withSyncMode(VideoSyncMode syncMode)"
  desc: "Set the syncMode property: The Video Sync Mode."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Image?alt=com.azure.resourcemanager.mediaservices.models.Image&text=Image\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes the basic properties for generating thumbnails from the input video."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
