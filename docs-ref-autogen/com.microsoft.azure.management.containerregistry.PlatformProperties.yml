### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties
  id: PlatformProperties
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry
  children:
  - com.microsoft.azure.management.containerregistry.PlatformProperties.PlatformProperties()
  - com.microsoft.azure.management.containerregistry.PlatformProperties.architecture()
  - com.microsoft.azure.management.containerregistry.PlatformProperties.os()
  - com.microsoft.azure.management.containerregistry.PlatformProperties.variant()
  - com.microsoft.azure.management.containerregistry.PlatformProperties.withArchitecture(com.microsoft.azure.management.containerregistry.Architecture)
  - com.microsoft.azure.management.containerregistry.PlatformProperties.withOs(com.microsoft.azure.management.containerregistry.OS)
  - com.microsoft.azure.management.containerregistry.PlatformProperties.withVariant(com.microsoft.azure.management.containerregistry.Variant)
  langs:
  - java
  name: PlatformProperties
  nameWithType: PlatformProperties
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties
  type: Class
  package: com.microsoft.azure.management.containerregistry
  summary: The platform properties against which the run has to happen.
  syntax:
    content: public class PlatformProperties
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.PlatformProperties()
  id: PlatformProperties()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.PlatformProperties
  langs:
  - java
  name: PlatformProperties()
  nameWithType: PlatformProperties.PlatformProperties()
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.PlatformProperties()
  overload: com.microsoft.azure.management.containerregistry.PlatformProperties.PlatformProperties*
  type: Constructor
  package: com.microsoft.azure.management.containerregistry
  syntax:
    content: public PlatformProperties()
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.architecture()
  id: architecture()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.PlatformProperties
  langs:
  - java
  name: architecture()
  nameWithType: PlatformProperties.architecture()
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.architecture()
  overload: com.microsoft.azure.management.containerregistry.PlatformProperties.architecture*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: "Get the OS architecture. Possible values include: 'amd64', 'x86', 'arm'."
  syntax:
    content: public Architecture architecture()
    return:
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: the architecture value
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.os()
  id: os()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.PlatformProperties
  langs:
  - java
  name: os()
  nameWithType: PlatformProperties.os()
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.os()
  overload: com.microsoft.azure.management.containerregistry.PlatformProperties.os*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: "Get the operating system type required for the run. Possible values include: 'Windows', 'Linux'."
  syntax:
    content: public OS os()
    return:
      type: com.microsoft.azure.management.containerregistry.OS
      description: the os value
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.variant()
  id: variant()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.PlatformProperties
  langs:
  - java
  name: variant()
  nameWithType: PlatformProperties.variant()
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.variant()
  overload: com.microsoft.azure.management.containerregistry.PlatformProperties.variant*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: "Get variant of the CPU. Possible values include: 'v6', 'v7', 'v8'."
  syntax:
    content: public Variant variant()
    return:
      type: com.microsoft.azure.management.containerregistry.Variant
      description: the variant value
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.withArchitecture(com.microsoft.azure.management.containerregistry.Architecture)
  id: withArchitecture(com.microsoft.azure.management.containerregistry.Architecture)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.PlatformProperties
  langs:
  - java
  name: withArchitecture(Architecture architecture)
  nameWithType: PlatformProperties.withArchitecture(Architecture architecture)
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.withArchitecture(Architecture architecture)
  overload: com.microsoft.azure.management.containerregistry.PlatformProperties.withArchitecture*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: "Set the OS architecture. Possible values include: 'amd64', 'x86', 'arm'."
  syntax:
    content: public PlatformProperties withArchitecture(Architecture architecture)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: the architecture value to set
    return:
      type: com.microsoft.azure.management.containerregistry.PlatformProperties
      description: the PlatformProperties object itself.
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.withOs(com.microsoft.azure.management.containerregistry.OS)
  id: withOs(com.microsoft.azure.management.containerregistry.OS)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.PlatformProperties
  langs:
  - java
  name: withOs(OS os)
  nameWithType: PlatformProperties.withOs(OS os)
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.withOs(OS os)
  overload: com.microsoft.azure.management.containerregistry.PlatformProperties.withOs*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: "Set the operating system type required for the run. Possible values include: 'Windows', 'Linux'."
  syntax:
    content: public PlatformProperties withOs(OS os)
    parameters:
    - id: os
      type: com.microsoft.azure.management.containerregistry.OS
      description: the os value to set
    return:
      type: com.microsoft.azure.management.containerregistry.PlatformProperties
      description: the PlatformProperties object itself.
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.withVariant(com.microsoft.azure.management.containerregistry.Variant)
  id: withVariant(com.microsoft.azure.management.containerregistry.Variant)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.PlatformProperties
  langs:
  - java
  name: withVariant(Variant variant)
  nameWithType: PlatformProperties.withVariant(Variant variant)
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.withVariant(Variant variant)
  overload: com.microsoft.azure.management.containerregistry.PlatformProperties.withVariant*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: "Set variant of the CPU. Possible values include: 'v6', 'v7', 'v8'."
  syntax:
    content: public PlatformProperties withVariant(Variant variant)
    parameters:
    - id: variant
      type: com.microsoft.azure.management.containerregistry.Variant
      description: the variant value to set
    return:
      type: com.microsoft.azure.management.containerregistry.PlatformProperties
      description: the PlatformProperties object itself.
references:
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.PlatformProperties*
  name: PlatformProperties
  nameWithType: PlatformProperties.PlatformProperties
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.PlatformProperties
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.OS
  name: OS
  nameWithType: OS
  fullName: com.microsoft.azure.management.containerregistry.OS
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.os*
  name: os
  nameWithType: PlatformProperties.os
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.os
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.withOs*
  name: withOs
  nameWithType: PlatformProperties.withOs
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.withOs
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.Architecture
  name: Architecture
  nameWithType: Architecture
  fullName: com.microsoft.azure.management.containerregistry.Architecture
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.architecture*
  name: architecture
  nameWithType: PlatformProperties.architecture
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.architecture
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.withArchitecture*
  name: withArchitecture
  nameWithType: PlatformProperties.withArchitecture
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.withArchitecture
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.Variant
  name: Variant
  nameWithType: Variant
  fullName: com.microsoft.azure.management.containerregistry.Variant
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.variant*
  name: variant
  nameWithType: PlatformProperties.variant
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.variant
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties.withVariant*
  name: withVariant
  nameWithType: PlatformProperties.withVariant
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties.withVariant
  package: com.microsoft.azure.management.containerregistry
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
