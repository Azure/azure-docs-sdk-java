### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerregistry.PlatformProperties"
fullName: "com.microsoft.azure.management.containerregistry.PlatformProperties"
name: "PlatformProperties"
nameWithType: "PlatformProperties"
summary: "The platform properties against which the run has to happen."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PlatformProperties"
constructors:
- uid: "com.microsoft.azure.management.containerregistry.PlatformProperties.PlatformProperties()"
  fullName: "com.microsoft.azure.management.containerregistry.PlatformProperties.PlatformProperties()"
  name: "PlatformProperties()"
  nameWithType: "PlatformProperties.PlatformProperties()"
  syntax: "public PlatformProperties()"
methods:
- uid: "com.microsoft.azure.management.containerregistry.PlatformProperties.architecture()"
  fullName: "com.microsoft.azure.management.containerregistry.PlatformProperties.architecture()"
  name: "architecture()"
  nameWithType: "PlatformProperties.architecture()"
  summary: "Get the OS architecture."
  syntax: "public Architecture architecture()"
  desc: "Get the OS architecture. Possible values include: 'amd64', 'x86', 'arm'."
  returns:
    description: "the architecture value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.PlatformProperties.os()"
  fullName: "com.microsoft.azure.management.containerregistry.PlatformProperties.os()"
  name: "os()"
  nameWithType: "PlatformProperties.os()"
  summary: "Get the operating system type required for the run."
  syntax: "public OS os()"
  desc: "Get the operating system type required for the run. Possible values include: 'Windows', 'Linux'."
  returns:
    description: "the os value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.OS?alt=com.microsoft.azure.management.containerregistry.OS&text=OS\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.PlatformProperties.variant()"
  fullName: "com.microsoft.azure.management.containerregistry.PlatformProperties.variant()"
  name: "variant()"
  nameWithType: "PlatformProperties.variant()"
  summary: "Get variant of the CPU."
  syntax: "public Variant variant()"
  desc: "Get variant of the CPU. Possible values include: 'v6', 'v7', 'v8'."
  returns:
    description: "the variant value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Variant?alt=com.microsoft.azure.management.containerregistry.Variant&text=Variant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.PlatformProperties.withArchitecture(com.microsoft.azure.management.containerregistry.Architecture)"
  fullName: "com.microsoft.azure.management.containerregistry.PlatformProperties.withArchitecture(Architecture architecture)"
  name: "withArchitecture(Architecture architecture)"
  nameWithType: "PlatformProperties.withArchitecture(Architecture architecture)"
  summary: "Set the OS architecture."
  parameters:
  - description: "the architecture value to set"
    name: "architecture"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PlatformProperties withArchitecture(Architecture architecture)"
  desc: "Set the OS architecture. Possible values include: 'amd64', 'x86', 'arm'."
  returns:
    description: "the PlatformProperties object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.PlatformProperties?alt=com.microsoft.azure.management.containerregistry.PlatformProperties&text=PlatformProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.PlatformProperties.withOs(com.microsoft.azure.management.containerregistry.OS)"
  fullName: "com.microsoft.azure.management.containerregistry.PlatformProperties.withOs(OS os)"
  name: "withOs(OS os)"
  nameWithType: "PlatformProperties.withOs(OS os)"
  summary: "Set the operating system type required for the run."
  parameters:
  - description: "the os value to set"
    name: "os"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.OS?alt=com.microsoft.azure.management.containerregistry.OS&text=OS\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PlatformProperties withOs(OS os)"
  desc: "Set the operating system type required for the run. Possible values include: 'Windows', 'Linux'."
  returns:
    description: "the PlatformProperties object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.PlatformProperties?alt=com.microsoft.azure.management.containerregistry.PlatformProperties&text=PlatformProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.PlatformProperties.withVariant(com.microsoft.azure.management.containerregistry.Variant)"
  fullName: "com.microsoft.azure.management.containerregistry.PlatformProperties.withVariant(Variant variant)"
  name: "withVariant(Variant variant)"
  nameWithType: "PlatformProperties.withVariant(Variant variant)"
  summary: "Set variant of the CPU."
  parameters:
  - description: "the variant value to set"
    name: "variant"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Variant?alt=com.microsoft.azure.management.containerregistry.Variant&text=Variant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PlatformProperties withVariant(Variant variant)"
  desc: "Set variant of the CPU. Possible values include: 'v6', 'v7', 'v8'."
  returns:
    description: "the PlatformProperties object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.PlatformProperties?alt=com.microsoft.azure.management.containerregistry.PlatformProperties&text=PlatformProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The platform properties against which the run has to happen."
metadata: {}
package: "com.microsoft.azure.management.containerregistry"
artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.41.4
