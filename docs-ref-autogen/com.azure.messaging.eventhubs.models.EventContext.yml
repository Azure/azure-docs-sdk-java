### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.models.EventContext
  id: EventContext
  artifact: com.azure:azure-messaging-eventhubs:5.1.1
  parent: com.azure.messaging.eventhubs.models
  children:
  - com.azure.messaging.eventhubs.models.EventContext.EventContext(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.EventData,com.azure.messaging.eventhubs.CheckpointStore,com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties)
  - com.azure.messaging.eventhubs.models.EventContext.getEventData()
  - com.azure.messaging.eventhubs.models.EventContext.getLastEnqueuedEventProperties()
  - com.azure.messaging.eventhubs.models.EventContext.getPartitionContext()
  - com.azure.messaging.eventhubs.models.EventContext.updateCheckpoint()
  - com.azure.messaging.eventhubs.models.EventContext.updateCheckpointAsync()
  langs:
  - java
  name: EventContext
  nameWithType: EventContext
  fullName: com.azure.messaging.eventhubs.models.EventContext
  type: Class
  package: com.azure.messaging.eventhubs.models
  summary: A class that contains <xref uid="com.azure.messaging.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref> and the partition information the event belongs to. This is given to the <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer&lt;com.azure.messaging.eventhubs.models.EventContext&gt;)" data-throw-if-not-resolved="false">processEvent</xref> handler each time an event is received from the Event Hub. This class also includes methods to update checkpoint in <xref uid="com.azure.messaging.eventhubs.CheckpointStore" data-throw-if-not-resolved="false">CheckpointStore</xref> and retrieve the last enqueued event information.
  syntax:
    content: public class EventContext
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.eventhubs.models.EventContext.EventContext(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.EventData,com.azure.messaging.eventhubs.CheckpointStore,com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties)
  id: EventContext(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.EventData,com.azure.messaging.eventhubs.CheckpointStore,com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties)
  artifact: com.azure:azure-messaging-eventhubs:5.1.1
  parent: com.azure.messaging.eventhubs.models.EventContext
  langs:
  - java
  name: EventContext(PartitionContext partitionContext, EventData eventData, CheckpointStore checkpointStore, LastEnqueuedEventProperties lastEnqueuedEventProperties)
  nameWithType: EventContext.EventContext(PartitionContext partitionContext, EventData eventData, CheckpointStore checkpointStore, LastEnqueuedEventProperties lastEnqueuedEventProperties)
  fullName: com.azure.messaging.eventhubs.models.EventContext.EventContext(PartitionContext partitionContext, EventData eventData, CheckpointStore checkpointStore, LastEnqueuedEventProperties lastEnqueuedEventProperties)
  overload: com.azure.messaging.eventhubs.models.EventContext.EventContext*
  type: Constructor
  package: com.azure.messaging.eventhubs.models
  summary: Creates an instance of <xref uid="com.azure.messaging.eventhubs.models.EventContext" data-throw-if-not-resolved="false">EventContext</xref>.
  syntax:
    content: public EventContext(PartitionContext partitionContext, EventData eventData, CheckpointStore checkpointStore, LastEnqueuedEventProperties lastEnqueuedEventProperties)
    parameters:
    - id: partitionContext
      type: com.azure.messaging.eventhubs.models.PartitionContext
      description: The partition information associated with the received event.
    - id: eventData
      type: com.azure.messaging.eventhubs.EventData
      description: The event received from Event Hub.
    - id: checkpointStore
      type: com.azure.messaging.eventhubs.CheckpointStore
      description: The checkpoint store that is used for updating checkpoints.
    - id: lastEnqueuedEventProperties
      type: com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties
      description: >-
        The properties of the last enqueued event in this partition. If <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)" data-throw-if-not-resolved="false">EventProcessorClientBuilder#trackLastEnqueuedEventProperties(boolean)</xref> is set to <code>false</code>, this will be
         <code>null</code>.
- uid: com.azure.messaging.eventhubs.models.EventContext.getEventData()
  id: getEventData()
  artifact: com.azure:azure-messaging-eventhubs:5.1.1
  parent: com.azure.messaging.eventhubs.models.EventContext
  langs:
  - java
  name: getEventData()
  nameWithType: EventContext.getEventData()
  fullName: com.azure.messaging.eventhubs.models.EventContext.getEventData()
  overload: com.azure.messaging.eventhubs.models.EventContext.getEventData*
  type: Method
  package: com.azure.messaging.eventhubs.models
  summary: Returns the event data received from Event Hub.
  syntax:
    content: public EventData getEventData()
    return:
      type: com.azure.messaging.eventhubs.EventData
      description: The event data received from Event Hub.
- uid: com.azure.messaging.eventhubs.models.EventContext.getLastEnqueuedEventProperties()
  id: getLastEnqueuedEventProperties()
  artifact: com.azure:azure-messaging-eventhubs:5.1.1
  parent: com.azure.messaging.eventhubs.models.EventContext
  langs:
  - java
  name: getLastEnqueuedEventProperties()
  nameWithType: EventContext.getLastEnqueuedEventProperties()
  fullName: com.azure.messaging.eventhubs.models.EventContext.getLastEnqueuedEventProperties()
  overload: com.azure.messaging.eventhubs.models.EventContext.getLastEnqueuedEventProperties*
  type: Method
  package: com.azure.messaging.eventhubs.models
  summary: Returns the properties of the last enqueued event in this partition. If <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)" data-throw-if-not-resolved="false">EventProcessorClientBuilder#trackLastEnqueuedEventProperties(boolean)</xref> is set to `false`, this method will return `null`.
  syntax:
    content: public LastEnqueuedEventProperties getLastEnqueuedEventProperties()
    return:
      type: com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties
      description: >-
        The properties of the last enqueued event in this partition. If
         <xref uid="com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)" data-throw-if-not-resolved="false">EventProcessorClientBuilder#trackLastEnqueuedEventProperties(boolean)</xref> is
         set to <code>false</code>, this method will return <code>null</code>.
- uid: com.azure.messaging.eventhubs.models.EventContext.getPartitionContext()
  id: getPartitionContext()
  artifact: com.azure:azure-messaging-eventhubs:5.1.1
  parent: com.azure.messaging.eventhubs.models.EventContext
  langs:
  - java
  name: getPartitionContext()
  nameWithType: EventContext.getPartitionContext()
  fullName: com.azure.messaging.eventhubs.models.EventContext.getPartitionContext()
  overload: com.azure.messaging.eventhubs.models.EventContext.getPartitionContext*
  type: Method
  package: com.azure.messaging.eventhubs.models
  summary: Returns the partition information associated with the received event.
  syntax:
    content: public PartitionContext getPartitionContext()
    return:
      type: com.azure.messaging.eventhubs.models.PartitionContext
      description: The partition information of the received event.
- uid: com.azure.messaging.eventhubs.models.EventContext.updateCheckpoint()
  id: updateCheckpoint()
  artifact: com.azure:azure-messaging-eventhubs:5.1.1
  parent: com.azure.messaging.eventhubs.models.EventContext
  langs:
  - java
  name: updateCheckpoint()
  nameWithType: EventContext.updateCheckpoint()
  fullName: com.azure.messaging.eventhubs.models.EventContext.updateCheckpoint()
  overload: com.azure.messaging.eventhubs.models.EventContext.updateCheckpoint*
  type: Method
  package: com.azure.messaging.eventhubs.models
  summary: Updates the checkpoint synchronously for this partition using the event data. This will serve as the last known successfully processed event in this partition if the update is successful.
  syntax:
    content: public void updateCheckpoint()
- uid: com.azure.messaging.eventhubs.models.EventContext.updateCheckpointAsync()
  id: updateCheckpointAsync()
  artifact: com.azure:azure-messaging-eventhubs:5.1.1
  parent: com.azure.messaging.eventhubs.models.EventContext
  langs:
  - java
  name: updateCheckpointAsync()
  nameWithType: EventContext.updateCheckpointAsync()
  fullName: com.azure.messaging.eventhubs.models.EventContext.updateCheckpointAsync()
  overload: com.azure.messaging.eventhubs.models.EventContext.updateCheckpointAsync*
  type: Method
  package: com.azure.messaging.eventhubs.models
  summary: Updates the checkpoint asynchronously for this partition using the event data in this <xref uid="com.azure.messaging.eventhubs.models.EventContext" data-throw-if-not-resolved="false">EventContext</xref>. This will serve as the last known successfully processed event in this partition if the update is successful.
  syntax:
    content: public Mono<Void> updateCheckpointAsync()
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: a representation of deferred execution of this call.
references:
- uid: com.azure.messaging.eventhubs.models.PartitionContext
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: com.azure.messaging.eventhubs.models.PartitionContext
- uid: com.azure.messaging.eventhubs.EventData
  name: EventData
  nameWithType: EventData
  fullName: com.azure.messaging.eventhubs.EventData
- uid: com.azure.messaging.eventhubs.CheckpointStore
  name: CheckpointStore
  nameWithType: CheckpointStore
  fullName: com.azure.messaging.eventhubs.CheckpointStore
- uid: com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties
  name: LastEnqueuedEventProperties
  nameWithType: LastEnqueuedEventProperties
  fullName: com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties
- uid: com.azure.messaging.eventhubs.models.EventContext.EventContext*
  name: EventContext
  nameWithType: EventContext.EventContext
  fullName: com.azure.messaging.eventhubs.models.EventContext.EventContext
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventContext.getPartitionContext*
  name: getPartitionContext
  nameWithType: EventContext.getPartitionContext
  fullName: com.azure.messaging.eventhubs.models.EventContext.getPartitionContext
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventContext.getEventData*
  name: getEventData
  nameWithType: EventContext.getEventData
  fullName: com.azure.messaging.eventhubs.models.EventContext.getEventData
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventContext.getLastEnqueuedEventProperties*
  name: getLastEnqueuedEventProperties
  nameWithType: EventContext.getLastEnqueuedEventProperties
  fullName: com.azure.messaging.eventhubs.models.EventContext.getLastEnqueuedEventProperties
  package: com.azure.messaging.eventhubs.models
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventhubs.models.EventContext.updateCheckpointAsync*
  name: updateCheckpointAsync
  nameWithType: EventContext.updateCheckpointAsync
  fullName: com.azure.messaging.eventhubs.models.EventContext.updateCheckpointAsync
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventContext.updateCheckpoint*
  name: updateCheckpoint
  nameWithType: EventContext.updateCheckpoint
  fullName: com.azure.messaging.eventhubs.models.EventContext.updateCheckpoint
  package: com.azure.messaging.eventhubs.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
