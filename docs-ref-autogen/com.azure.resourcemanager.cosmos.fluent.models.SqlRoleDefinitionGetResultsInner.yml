### YamlMime:JavaType
uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner"
fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner"
name: "SqlRoleDefinitionGetResultsInner"
nameWithType: "SqlRoleDefinitionGetResultsInner"
summary: "An Azure Cosmos DB SQL Role Definition."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.cosmos.models.ArmProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.resourcemanager.cosmos.models.ArmProxyResource.validate()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SqlRoleDefinitionGetResultsInner extends ArmProxyResource"
constructors:
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.SqlRoleDefinitionGetResultsInner()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.SqlRoleDefinitionGetResultsInner()"
  name: "SqlRoleDefinitionGetResultsInner()"
  nameWithType: "SqlRoleDefinitionGetResultsInner.SqlRoleDefinitionGetResultsInner()"
  syntax: "public SqlRoleDefinitionGetResultsInner()"
methods:
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.assignableScopes()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.assignableScopes()"
  name: "assignableScopes()"
  nameWithType: "SqlRoleDefinitionGetResultsInner.assignableScopes()"
  summary: "Get the assignableScopes property: A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
  syntax: "public List<String> assignableScopes()"
  returns:
    description: "the assignableScopes value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.permissions()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.permissions()"
  name: "permissions()"
  nameWithType: "SqlRoleDefinitionGetResultsInner.permissions()"
  summary: "Get the permissions property: The set of operations allowed through this Role Definition."
  syntax: "public List<Permission> permissions()"
  returns:
    description: "the permissions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.models.Permission?alt=com.azure.resourcemanager.cosmos.models.Permission&text=Permission\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.roleName()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.roleName()"
  name: "roleName()"
  nameWithType: "SqlRoleDefinitionGetResultsInner.roleName()"
  summary: "Get the roleName property: A user-friendly name for the Role Definition. Must be unique for the database account."
  syntax: "public String roleName()"
  returns:
    description: "the roleName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.typePropertiesType()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.typePropertiesType()"
  name: "typePropertiesType()"
  nameWithType: "SqlRoleDefinitionGetResultsInner.typePropertiesType()"
  summary: "Get the type property: Indicates whether the Role Definition was built-in or user created."
  syntax: "public RoleDefinitionType typePropertiesType()"
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.RoleDefinitionType?alt=com.azure.resourcemanager.cosmos.models.RoleDefinitionType&text=RoleDefinitionType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.validate()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.validate()"
  name: "validate()"
  nameWithType: "SqlRoleDefinitionGetResultsInner.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.cosmos.models.ArmProxyResource.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.withAssignableScopes(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.withAssignableScopes(List<String> assignableScopes)"
  name: "withAssignableScopes(List<String> assignableScopes)"
  nameWithType: "SqlRoleDefinitionGetResultsInner.withAssignableScopes(List<String> assignableScopes)"
  summary: "Set the assignableScopes property: A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
  parameters:
  - description: "the assignableScopes value to set."
    name: "assignableScopes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SqlRoleDefinitionGetResultsInner withAssignableScopes(List<String> assignableScopes)"
  returns:
    description: "the SqlRoleDefinitionGetResultsInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner?alt=com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner&text=SqlRoleDefinitionGetResultsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.withPermissions(java.util.List<com.azure.resourcemanager.cosmos.models.Permission>)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.withPermissions(List<Permission> permissions)"
  name: "withPermissions(List<Permission> permissions)"
  nameWithType: "SqlRoleDefinitionGetResultsInner.withPermissions(List<Permission> permissions)"
  summary: "Set the permissions property: The set of operations allowed through this Role Definition."
  parameters:
  - description: "the permissions value to set."
    name: "permissions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.models.Permission?alt=com.azure.resourcemanager.cosmos.models.Permission&text=Permission\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SqlRoleDefinitionGetResultsInner withPermissions(List<Permission> permissions)"
  returns:
    description: "the SqlRoleDefinitionGetResultsInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner?alt=com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner&text=SqlRoleDefinitionGetResultsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.withRoleName(java.lang.String)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.withRoleName(String roleName)"
  name: "withRoleName(String roleName)"
  nameWithType: "SqlRoleDefinitionGetResultsInner.withRoleName(String roleName)"
  summary: "Set the roleName property: A user-friendly name for the Role Definition. Must be unique for the database account."
  parameters:
  - description: "the roleName value to set."
    name: "roleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlRoleDefinitionGetResultsInner withRoleName(String roleName)"
  returns:
    description: "the SqlRoleDefinitionGetResultsInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner?alt=com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner&text=SqlRoleDefinitionGetResultsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.withTypePropertiesType(com.azure.resourcemanager.cosmos.models.RoleDefinitionType)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner.withTypePropertiesType(RoleDefinitionType type)"
  name: "withTypePropertiesType(RoleDefinitionType type)"
  nameWithType: "SqlRoleDefinitionGetResultsInner.withTypePropertiesType(RoleDefinitionType type)"
  summary: "Set the type property: Indicates whether the Role Definition was built-in or user created."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"com.azure.resourcemanager.cosmos.models.RoleDefinitionType?alt=com.azure.resourcemanager.cosmos.models.RoleDefinitionType&text=RoleDefinitionType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlRoleDefinitionGetResultsInner withTypePropertiesType(RoleDefinitionType type)"
  returns:
    description: "the SqlRoleDefinitionGetResultsInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner?alt=com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionGetResultsInner&text=SqlRoleDefinitionGetResultsInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.cosmos.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.14.0
