### YamlMime:JavaType
uid: "com.azure.communication.jobrouter.JobRouterClient"
fullName: "com.azure.communication.jobrouter.JobRouterClient"
name: "JobRouterClient"
nameWithType: "JobRouterClient"
summary: "Initializes a new instance of the synchronous Job<wbr>Router<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **JobRouterClient**"
methods:
- uid: "com.azure.communication.jobrouter.JobRouterClient.acceptJobOffer(java.lang.String,java.lang.String)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.acceptJobOffer(String workerId, String offerId)"
  name: "acceptJobOffer(String workerId, String offerId)"
  nameWithType: "JobRouterClient.acceptJobOffer(String workerId, String offerId)"
  summary: "Accepts an offer to work on a job and returns a 409/Conflict if another agent accepted the job already."
  parameters:
  - description: "Id of a worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of an offer."
    name: "offerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AcceptJobOfferResult acceptJobOffer(String workerId, String offerId)"
  desc: "Accepts an offer to work on a job and returns a 409/Conflict if another agent accepted the job already."
  returns:
    description: "response containing ids for the worker, job, and assignment from an accepted offer."
    type: "<xref href=\"com.azure.communication.jobrouter.models.AcceptJobOfferResult?alt=com.azure.communication.jobrouter.models.AcceptJobOfferResult&text=AcceptJobOfferResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.acceptJobOfferWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.acceptJobOfferWithResponse(String workerId, String offerId, RequestOptions requestOptions)"
  name: "acceptJobOfferWithResponse(String workerId, String offerId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.acceptJobOfferWithResponse(String workerId, String offerId, RequestOptions requestOptions)"
  summary: "Accepts an offer to work on a job and returns a 409/Conflict if another agent accepted the job already."
  parameters:
  - description: "Id of a worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of an offer."
    name: "offerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> acceptJobOfferWithResponse(String workerId, String offerId, RequestOptions requestOptions)"
  desc: "Accepts an offer to work on a job and returns a 409/Conflict if another agent accepted the job already.\n\n**Response Body Schema**\n\n```java\n{\n     assignmentId: String (Required)\n     jobId: String (Required)\n     workerId: String (Required)\n }\n```"
  returns:
    description: "response containing ids for the worker, job, and assignment from an accepted offer along with\n <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.cancelJob(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.cancelJob(String jobId, RequestOptions requestOptions)"
  name: "cancelJob(String jobId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.cancelJob(String jobId, RequestOptions requestOptions)"
  summary: "Submits request to cancel an existing job by Id while supplying free-form cancellation reason."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData cancelJob(String jobId, RequestOptions requestOptions)"
  desc: "Submits request to cancel an existing job by Id while supplying free-form cancellation reason.\n\n**Request Body Schema**\n\n```java\n{\n     note: String (Optional)\n     dispositionCode: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "Resource."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.cancelJobWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.cancelJobWithResponse(String jobId, RequestOptions requestOptions)"
  name: "cancelJobWithResponse(String jobId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.cancelJobWithResponse(String jobId, RequestOptions requestOptions)"
  summary: "Submits request to cancel an existing job by Id while supplying free-form cancellation reason."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> cancelJobWithResponse(String jobId, RequestOptions requestOptions)"
  desc: "Submits request to cancel an existing job by Id while supplying free-form cancellation reason.\n\n**Request Body Schema**\n\n```java\n{\n     note: String (Optional)\n     dispositionCode: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "response payload from cancelling a job along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.closeJob(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.closeJob(String jobId, String assignmentId, RequestOptions requestOptions)"
  name: "closeJob(String jobId, String assignmentId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.closeJob(String jobId, String assignmentId, RequestOptions requestOptions)"
  summary: "Closes a completed job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of a job assignment."
    name: "assignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData closeJob(String jobId, String assignmentId, RequestOptions requestOptions)"
  desc: "Closes a completed job.\n\n**Request Body Schema**\n\n```java\n{\n     dispositionCode: String (Optional)\n     closeAt: OffsetDateTime (Optional)\n     note: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "Result."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.closeJobWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.closeJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  name: "closeJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.closeJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  summary: "Closes a completed job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of a job assignment."
    name: "assignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> closeJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  desc: "Closes a completed job.\n\n**Request Body Schema**\n\n```java\n{\n     dispositionCode: String (Optional)\n     closeAt: OffsetDateTime (Optional)\n     note: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "response payload from closing a job along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.completeJob(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.completeJob(String jobId, String assignmentId, RequestOptions requestOptions)"
  name: "completeJob(String jobId, String assignmentId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.completeJob(String jobId, String assignmentId, RequestOptions requestOptions)"
  summary: "Completes an assigned job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of a job assignment."
    name: "assignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData completeJob(String jobId, String assignmentId, RequestOptions requestOptions)"
  desc: "Completes an assigned job.\n\n**Request Body Schema**\n\n```java\n{\n     note: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "Result."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.completeJobWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.completeJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  name: "completeJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.completeJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  summary: "Completes an assigned job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of a job assignment."
    name: "assignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> completeJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  desc: "Completes an assigned job.\n\n**Request Body Schema**\n\n```java\n{\n     note: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "response payload from completing a job along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.createJob(com.azure.communication.jobrouter.models.CreateJobOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.createJob(CreateJobOptions createJobOptions)"
  name: "createJob(CreateJobOptions createJobOptions)"
  nameWithType: "JobRouterClient.createJob(CreateJobOptions createJobOptions)"
  summary: "Convenience method to create a job."
  parameters:
  - description: "Options to create a RouterJob."
    name: "createJobOptions"
    type: "<xref href=\"com.azure.communication.jobrouter.models.CreateJobOptions?alt=com.azure.communication.jobrouter.models.CreateJobOptions&text=CreateJobOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouterJob createJob(CreateJobOptions createJobOptions)"
  desc: "Convenience method to create a job."
  returns:
    description: "a unit of work to be routed."
    type: "<xref href=\"com.azure.communication.jobrouter.models.RouterJob?alt=com.azure.communication.jobrouter.models.RouterJob&text=RouterJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.createJobWithResponse(com.azure.communication.jobrouter.models.CreateJobOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.createJobWithResponse(CreateJobOptions createJobOptions, RequestOptions requestOptions)"
  name: "createJobWithResponse(CreateJobOptions createJobOptions, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.createJobWithResponse(CreateJobOptions createJobOptions, RequestOptions requestOptions)"
  summary: "Create a job."
  parameters:
  - description: "Options to create a RouterJob."
    name: "createJobOptions"
    type: "<xref href=\"com.azure.communication.jobrouter.models.CreateJobOptions?alt=com.azure.communication.jobrouter.models.CreateJobOptions&text=CreateJobOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createJobWithResponse(CreateJobOptions createJobOptions, RequestOptions requestOptions)"
  desc: "Create a job."
  returns:
    description: "a unit of work to be routed."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.createWorker(com.azure.communication.jobrouter.models.CreateWorkerOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.createWorker(CreateWorkerOptions createWorkerOptions)"
  name: "createWorker(CreateWorkerOptions createWorkerOptions)"
  nameWithType: "JobRouterClient.createWorker(CreateWorkerOptions createWorkerOptions)"
  summary: "Convenience method to create a worker."
  parameters:
  - description: "Container for inputs to create a worker."
    name: "createWorkerOptions"
    type: "<xref href=\"com.azure.communication.jobrouter.models.CreateWorkerOptions?alt=com.azure.communication.jobrouter.models.CreateWorkerOptions&text=CreateWorkerOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouterWorker createWorker(CreateWorkerOptions createWorkerOptions)"
  desc: "Convenience method to create a worker."
  returns:
    description: "an entity for jobs to be routed to."
    type: "<xref href=\"com.azure.communication.jobrouter.models.RouterWorker?alt=com.azure.communication.jobrouter.models.RouterWorker&text=RouterWorker\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.createWorkerWithResponse(com.azure.communication.jobrouter.models.CreateWorkerOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.createWorkerWithResponse(CreateWorkerOptions createWorkerOptions, RequestOptions requestOptions)"
  name: "createWorkerWithResponse(CreateWorkerOptions createWorkerOptions, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.createWorkerWithResponse(CreateWorkerOptions createWorkerOptions, RequestOptions requestOptions)"
  summary: "Create a worker."
  parameters:
  - description: "Container for inputs to create a worker."
    name: "createWorkerOptions"
    type: "<xref href=\"com.azure.communication.jobrouter.models.CreateWorkerOptions?alt=com.azure.communication.jobrouter.models.CreateWorkerOptions&text=CreateWorkerOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "RequestOptions."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RouterWorker> createWorkerWithResponse(CreateWorkerOptions createWorkerOptions, RequestOptions requestOptions)"
  desc: "Create a worker."
  returns:
    description: "an entity for jobs to be routed to."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.jobrouter.models.RouterWorker?alt=com.azure.communication.jobrouter.models.RouterWorker&text=RouterWorker\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.declineJobOffer(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.declineJobOffer(String workerId, String offerId, RequestOptions requestOptions)"
  name: "declineJobOffer(String workerId, String offerId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.declineJobOffer(String workerId, String offerId, RequestOptions requestOptions)"
  summary: "Declines an offer to work on a job."
  parameters:
  - description: "Id of a worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of an offer."
    name: "offerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData declineJobOffer(String workerId, String offerId, RequestOptions requestOptions)"
  desc: "Declines an offer to work on a job.\n\n**Request Body Schema**\n\n```java\n{\n     retryOfferAt: OffsetDateTime (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "Result."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.declineJobOfferWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.declineJobOfferWithResponse(String workerId, String offerId, RequestOptions requestOptions)"
  name: "declineJobOfferWithResponse(String workerId, String offerId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.declineJobOfferWithResponse(String workerId, String offerId, RequestOptions requestOptions)"
  summary: "Declines an offer to work on a job."
  parameters:
  - description: "Id of a worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of an offer."
    name: "offerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> declineJobOfferWithResponse(String workerId, String offerId, RequestOptions requestOptions)"
  desc: "Declines an offer to work on a job.\n\n**Request Body Schema**\n\n```java\n{\n     retryOfferAt: OffsetDateTime (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "response payload from declining a job along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.deleteJob(java.lang.String)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.deleteJob(String jobId)"
  name: "deleteJob(String jobId)"
  nameWithType: "JobRouterClient.deleteJob(String jobId)"
  summary: "Deletes a job and all of its traces."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteJob(String jobId)"
  desc: "Deletes a job and all of its traces."
- uid: "com.azure.communication.jobrouter.JobRouterClient.deleteJobWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.deleteJobWithResponse(String jobId, RequestOptions requestOptions)"
  name: "deleteJobWithResponse(String jobId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.deleteJobWithResponse(String jobId, RequestOptions requestOptions)"
  summary: "Deletes a job and all of its traces."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteJobWithResponse(String jobId, RequestOptions requestOptions)"
  desc: "Deletes a job and all of its traces."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.deleteWorker(java.lang.String)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.deleteWorker(String workerId)"
  name: "deleteWorker(String workerId)"
  nameWithType: "JobRouterClient.deleteWorker(String workerId)"
  summary: "Deletes a worker and all of its traces."
  parameters:
  - description: "Id of a worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteWorker(String workerId)"
  desc: "Deletes a worker and all of its traces."
- uid: "com.azure.communication.jobrouter.JobRouterClient.deleteWorkerWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.deleteWorkerWithResponse(String workerId, RequestOptions requestOptions)"
  name: "deleteWorkerWithResponse(String workerId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.deleteWorkerWithResponse(String workerId, RequestOptions requestOptions)"
  summary: "Deletes a worker and all of its traces."
  parameters:
  - description: "Id of a worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteWorkerWithResponse(String workerId, RequestOptions requestOptions)"
  desc: "Deletes a worker and all of its traces."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.getJob(java.lang.String)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.getJob(String jobId)"
  name: "getJob(String jobId)"
  nameWithType: "JobRouterClient.getJob(String jobId)"
  summary: "Retrieves an existing job by Id."
  parameters:
  - description: "The id of the job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RouterJob getJob(String jobId)"
  desc: "Retrieves an existing job by Id."
  returns:
    description: "a unit of work to be routed."
    type: "<xref href=\"com.azure.communication.jobrouter.models.RouterJob?alt=com.azure.communication.jobrouter.models.RouterJob&text=RouterJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.getJobWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.getJobWithResponse(String jobId, RequestOptions requestOptions)"
  name: "getJobWithResponse(String jobId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.getJobWithResponse(String jobId, RequestOptions requestOptions)"
  summary: "Retrieves an existing job by Id."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getJobWithResponse(String jobId, RequestOptions requestOptions)"
  desc: "Retrieves an existing job by Id.\n\n**Response Body Schema**\n\n```java\n{\n     etag: String (Required)\n     id: String (Required)\n     channelReference: String (Optional)\n     status: String(pendingClassification/queued/assigned/completed/closed/cancelled/classificationFailed/created/pendingSchedule/scheduled/scheduleFailed/waitingForActivation) (Optional)\n     enqueuedAt: OffsetDateTime (Optional)\n     channelId: String (Optional)\n     classificationPolicyId: String (Optional)\n     queueId: String (Optional)\n     priority: Integer (Optional)\n     dispositionCode: String (Optional)\n     requestedWorkerSelectors (Optional): [\n          (Optional){\n             key: String (Required)\n             labelOperator: String(equal/notEqual/lessThan/lessThanOrEqual/greaterThan/greaterThanOrEqual) (Required)\n             value: Object (Optional)\n             expiresAfterSeconds: Double (Optional)\n             expedite: Boolean (Optional)\n             status: String(active/expired) (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     attachedWorkerSelectors (Optional): [\n         (recursive schema, see above)\n     ]\n     labels (Optional): {\n         String: Object (Required)\n     }\n     assignments (Optional): {\n         String (Required): {\n             assignmentId: String (Required)\n             workerId: String (Optional)\n             assignedAt: OffsetDateTime (Required)\n             completedAt: OffsetDateTime (Optional)\n             closedAt: OffsetDateTime (Optional)\n         }\n     }\n     tags (Optional): {\n         String: Object (Required)\n     }\n     notes (Optional): [\n          (Optional){\n             message: String (Required)\n             addedAt: OffsetDateTime (Optional)\n         }\n     ]\n     scheduledAt: OffsetDateTime (Optional)\n     matchingMode (Optional): {\n     }\n }\n```"
  returns:
    description: "a unit of work to be routed along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.getQueuePosition(java.lang.String)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.getQueuePosition(String jobId)"
  name: "getQueuePosition(String jobId)"
  nameWithType: "JobRouterClient.getQueuePosition(String jobId)"
  summary: "Gets a job's position details."
  parameters:
  - description: "Id of the job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RouterJobPositionDetails getQueuePosition(String jobId)"
  desc: "Gets a job's position details."
  returns:
    description: "a job's position details."
    type: "<xref href=\"com.azure.communication.jobrouter.models.RouterJobPositionDetails?alt=com.azure.communication.jobrouter.models.RouterJobPositionDetails&text=RouterJobPositionDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.getQueuePositionWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.getQueuePositionWithResponse(String jobId, RequestOptions requestOptions)"
  name: "getQueuePositionWithResponse(String jobId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.getQueuePositionWithResponse(String jobId, RequestOptions requestOptions)"
  summary: "Gets a job's position details."
  parameters:
  - description: "Id of the job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getQueuePositionWithResponse(String jobId, RequestOptions requestOptions)"
  desc: "Gets a job's position details.\n\n**Response Body Schema**\n\n```java\n{\n     jobId: String (Required)\n     position: int (Required)\n     queueId: String (Required)\n     queueLength: int (Required)\n     estimatedWaitTimeMinutes: double (Required)\n }\n```"
  returns:
    description: "a job's position details along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.getQueueStatistics(java.lang.String)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.getQueueStatistics(String queueId)"
  name: "getQueueStatistics(String queueId)"
  nameWithType: "JobRouterClient.getQueueStatistics(String queueId)"
  summary: "Retrieves a queue's statistics."
  parameters:
  - description: "Id of the queue to retrieve statistics."
    name: "queueId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RouterQueueStatistics getQueueStatistics(String queueId)"
  desc: "Retrieves a queue's statistics."
  returns:
    description: "statistics for the queue."
    type: "<xref href=\"com.azure.communication.jobrouter.models.RouterQueueStatistics?alt=com.azure.communication.jobrouter.models.RouterQueueStatistics&text=RouterQueueStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.getQueueStatisticsWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.getQueueStatisticsWithResponse(String queueId, RequestOptions requestOptions)"
  name: "getQueueStatisticsWithResponse(String queueId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.getQueueStatisticsWithResponse(String queueId, RequestOptions requestOptions)"
  summary: "Retrieves a queue's statistics."
  parameters:
  - description: "Id of the queue to retrieve statistics."
    name: "queueId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getQueueStatisticsWithResponse(String queueId, RequestOptions requestOptions)"
  desc: "Retrieves a queue's statistics.\n\n**Response Body Schema**\n\n```java\n{\n     queueId: String (Required)\n     length: int (Required)\n     estimatedWaitTimeMinutes (Optional): {\n         String: double (Required)\n     }\n     longestJobWaitTimeMinutes: Double (Optional)\n }\n```"
  returns:
    description: "statistics for the queue along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.getWorker(java.lang.String)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.getWorker(String workerId)"
  name: "getWorker(String workerId)"
  nameWithType: "JobRouterClient.getWorker(String workerId)"
  summary: "Retrieves an existing worker by Id."
  parameters:
  - description: "Id of the worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RouterWorker getWorker(String workerId)"
  desc: "Retrieves an existing worker by Id."
  returns:
    description: "an entity for jobs to be routed to."
    type: "<xref href=\"com.azure.communication.jobrouter.models.RouterWorker?alt=com.azure.communication.jobrouter.models.RouterWorker&text=RouterWorker\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.getWorkerWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.getWorkerWithResponse(String workerId, RequestOptions requestOptions)"
  name: "getWorkerWithResponse(String workerId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.getWorkerWithResponse(String workerId, RequestOptions requestOptions)"
  summary: "Retrieves an existing worker by Id."
  parameters:
  - description: "Id of a worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getWorkerWithResponse(String workerId, RequestOptions requestOptions)"
  desc: "Retrieves an existing worker by Id.\n\n**Response Body Schema**\n\n```java\n{\n     etag: String (Required)\n     id: String (Required)\n     state: String(active/draining/inactive) (Optional)\n     queues (Optional): [\n         String (Optional)\n     ]\n     capacity: Integer (Optional)\n     labels (Optional): {\n         String: Object (Required)\n     }\n     tags (Optional): {\n         String: Object (Required)\n     }\n     channels (Optional): [\n          (Optional){\n             channelId: String (Required)\n             capacityCostPerJob: int (Required)\n             maxNumberOfJobs: Integer (Optional)\n         }\n     ]\n     offers (Optional): [\n          (Optional){\n             offerId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             offeredAt: OffsetDateTime (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     assignedJobs (Optional): [\n          (Optional){\n             assignmentId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             assignedAt: OffsetDateTime (Required)\n         }\n     ]\n     loadRatio: Double (Optional)\n     availableForOffers: Boolean (Optional)\n }\n```"
  returns:
    description: "an entity for jobs to be routed to along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.listJobs()"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.listJobs()"
  name: "listJobs()"
  nameWithType: "JobRouterClient.listJobs()"
  summary: "Retrieves list of jobs based on filter parameters."
  syntax: "public PagedIterable<RouterJob> listJobs()"
  desc: "Retrieves list of jobs based on filter parameters."
  returns:
    description: "a paged collection of jobs as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.jobrouter.models.RouterJob?alt=com.azure.communication.jobrouter.models.RouterJob&text=RouterJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.listJobs(com.azure.communication.jobrouter.models.RouterJobStatusSelector,java.lang.String,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.listJobs(RouterJobStatusSelector status, String queueId, String channelId, String classificationPolicyId, OffsetDateTime scheduledBefore, OffsetDateTime scheduledAfter)"
  name: "listJobs(RouterJobStatusSelector status, String queueId, String channelId, String classificationPolicyId, OffsetDateTime scheduledBefore, OffsetDateTime scheduledAfter)"
  nameWithType: "JobRouterClient.listJobs(RouterJobStatusSelector status, String queueId, String channelId, String classificationPolicyId, OffsetDateTime scheduledBefore, OffsetDateTime scheduledAfter)"
  summary: "Retrieves list of jobs based on filter parameters."
  parameters:
  - description: "If specified, filter jobs by status."
    name: "status"
    type: "<xref href=\"com.azure.communication.jobrouter.models.RouterJobStatusSelector?alt=com.azure.communication.jobrouter.models.RouterJobStatusSelector&text=RouterJobStatusSelector\" data-throw-if-not-resolved=\"False\" />"
  - description: "If specified, filter jobs by queue."
    name: "queueId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "If specified, filter jobs by channel."
    name: "channelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "If specified, filter jobs by classificationPolicy."
    name: "classificationPolicyId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "If specified, filter on jobs that was scheduled before or at given timestamp. Range:\n (-Inf, scheduledBefore]."
    name: "scheduledBefore"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "If specified, filter on jobs that was scheduled at or after given value. Range:\n [scheduledAfter, +Inf)."
    name: "scheduledAfter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  syntax: "public PagedIterable<RouterJob> listJobs(RouterJobStatusSelector status, String queueId, String channelId, String classificationPolicyId, OffsetDateTime scheduledBefore, OffsetDateTime scheduledAfter)"
  desc: "Retrieves list of jobs based on filter parameters."
  returns:
    description: "a paged collection of jobs as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.jobrouter.models.RouterJob?alt=com.azure.communication.jobrouter.models.RouterJob&text=RouterJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.listJobs(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.listJobs(RequestOptions requestOptions)"
  name: "listJobs(RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.listJobs(RequestOptions requestOptions)"
  summary: "Retrieves list of jobs based on filter parameters."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listJobs(RequestOptions requestOptions)"
  desc: "Retrieves list of jobs based on filter parameters.\n\n**Query Parameters**\n\n    | ---------------------- | -------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                   | Type           | Required | Description                                                                                                                                                                                                                                                           |\n    | maxpagesize            | Integer        | No       | Number of objects to return per page.                                                                                                                                                                                                                                 |\n    | status                 | String         | No       | If specified, filter jobs by status. Allowed values: \"all\", \"pendingClassification\", \"queued\", \"assigned\", \"completed\", \"closed\", \"cancelled\", \"classificationFailed\", \"created\", \"pendingSchedule\", \"scheduled\", \"scheduleFailed\", \"waitingForActivation\", \"active\". |\n    | queueId                | String         | No       | If specified, filter jobs by queue.                                                                                                                                                                                                                                   |\n    | channelId              | String         | No       | If specified, filter jobs by channel.                                                                                                                                                                                                                                 |\n    | classificationPolicyId | String         | No       | If specified, filter jobs by classificationPolicy.                                                                                                                                                                                                                    |\n    | scheduledBefore        | OffsetDateTime | No       | If specified, filter on jobs that was scheduled before or at given timestamp. Range: (-Inf, scheduledBefore\\].                                                                                                                                                        |\n    | scheduledAfter         | OffsetDateTime | No       | If specified, filter on jobs that was scheduled at or after given value. Range: \\[scheduledAfter, +Inf).                                                                                                                                                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     etag: String (Required)\n     id: String (Required)\n     channelReference: String (Optional)\n     status: String(pendingClassification/queued/assigned/completed/closed/cancelled/classificationFailed/created/pendingSchedule/scheduled/scheduleFailed/waitingForActivation) (Optional)\n     enqueuedAt: OffsetDateTime (Optional)\n     channelId: String (Optional)\n     classificationPolicyId: String (Optional)\n     queueId: String (Optional)\n     priority: Integer (Optional)\n     dispositionCode: String (Optional)\n     requestedWorkerSelectors (Optional): [\n          (Optional){\n             key: String (Required)\n             labelOperator: String(equal/notEqual/lessThan/lessThanOrEqual/greaterThan/greaterThanOrEqual) (Required)\n             value: Object (Optional)\n             expiresAfterSeconds: Double (Optional)\n             expedite: Boolean (Optional)\n             status: String(active/expired) (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     attachedWorkerSelectors (Optional): [\n         (recursive schema, see above)\n     ]\n     labels (Optional): {\n         String: Object (Required)\n     }\n     assignments (Optional): {\n         String (Required): {\n             assignmentId: String (Required)\n             workerId: String (Optional)\n             assignedAt: OffsetDateTime (Required)\n             completedAt: OffsetDateTime (Optional)\n             closedAt: OffsetDateTime (Optional)\n         }\n     }\n     tags (Optional): {\n         String: Object (Required)\n     }\n     notes (Optional): [\n          (Optional){\n             message: String (Required)\n             addedAt: OffsetDateTime (Optional)\n         }\n     ]\n     scheduledAt: OffsetDateTime (Optional)\n     matchingMode (Optional): {\n     }\n }\n```"
  returns:
    description: "paged collection of RouterJob items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.listWorkers()"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.listWorkers()"
  name: "listWorkers()"
  nameWithType: "JobRouterClient.listWorkers()"
  summary: "Retrieves existing workers."
  syntax: "public PagedIterable<RouterWorker> listWorkers()"
  desc: "Retrieves existing workers."
  returns:
    description: "a paged collection of workers as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.jobrouter.models.RouterWorker?alt=com.azure.communication.jobrouter.models.RouterWorker&text=RouterWorker\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.listWorkers(com.azure.communication.jobrouter.models.RouterWorkerStateSelector,java.lang.String,java.lang.String,java.lang.Boolean)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.listWorkers(RouterWorkerStateSelector state, String channelId, String queueId, Boolean hasCapacity)"
  name: "listWorkers(RouterWorkerStateSelector state, String channelId, String queueId, Boolean hasCapacity)"
  nameWithType: "JobRouterClient.listWorkers(RouterWorkerStateSelector state, String channelId, String queueId, Boolean hasCapacity)"
  summary: "Retrieves existing workers."
  parameters:
  - description: "If specified, select workers by worker state."
    name: "state"
    type: "<xref href=\"com.azure.communication.jobrouter.models.RouterWorkerStateSelector?alt=com.azure.communication.jobrouter.models.RouterWorkerStateSelector&text=RouterWorkerStateSelector\" data-throw-if-not-resolved=\"False\" />"
  - description: "If specified, select workers who have a channel configuration with this channel."
    name: "channelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "If specified, select workers who are assigned to this queue."
    name: "queueId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "If set to true, select only workers who have capacity for the channel specified by `channelId`\n or for any channel if `channelId` not specified. If set to false, then will return all workers including\n workers without any capacity for jobs. Defaults to false."
    name: "hasCapacity"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public PagedIterable<RouterWorker> listWorkers(RouterWorkerStateSelector state, String channelId, String queueId, Boolean hasCapacity)"
  desc: "Retrieves existing workers."
  returns:
    description: "a paged collection of workers as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.jobrouter.models.RouterWorker?alt=com.azure.communication.jobrouter.models.RouterWorker&text=RouterWorker\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.listWorkers(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.listWorkers(RequestOptions requestOptions)"
  name: "listWorkers(RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.listWorkers(RequestOptions requestOptions)"
  summary: "Retrieves existing workers."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listWorkers(RequestOptions requestOptions)"
  desc: "Retrieves existing workers.\n\n**Query Parameters**\n\n    | ----------- | ------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name        | Type    | Required | Description                                                                                                                                                                                                                                                           |\n    | maxpagesize | Integer | No       | Number of objects to return per page.                                                                                                                                                                                                                                 |\n    | state       | String  | No       | If specified, select workers by worker state. Allowed values: \"active\", \"draining\", \"inactive\", \"all\".                                                                                                                                                                |\n    | channelId   | String  | No       | If specified, select workers who have a channel configuration with this channel.                                                                                                                                                                                      |\n    | queueId     | String  | No       | If specified, select workers who are assigned to this queue.                                                                                                                                                                                                          |\n    | hasCapacity | Boolean | No       | If set to true, select only workers who have capacity for the channel specified by \\`channelId\\` or for any channel if \\`channelId\\` not specified. If set to false, then will return all workers including workers without any capacity for jobs. Defaults to false. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     etag: String (Required)\n     id: String (Required)\n     state: String(active/draining/inactive) (Optional)\n     queues (Optional): [\n         String (Optional)\n     ]\n     capacity: Integer (Optional)\n     labels (Optional): {\n         String: Object (Required)\n     }\n     tags (Optional): {\n         String: Object (Required)\n     }\n     channels (Optional): [\n          (Optional){\n             channelId: String (Required)\n             capacityCostPerJob: int (Required)\n             maxNumberOfJobs: Integer (Optional)\n         }\n     ]\n     offers (Optional): [\n          (Optional){\n             offerId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             offeredAt: OffsetDateTime (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     assignedJobs (Optional): [\n          (Optional){\n             assignmentId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             assignedAt: OffsetDateTime (Required)\n         }\n     ]\n     loadRatio: Double (Optional)\n     availableForOffers: Boolean (Optional)\n }\n```"
  returns:
    description: "paged collection of RouterWorker items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.reclassifyJob(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.reclassifyJob(String jobId, RequestOptions requestOptions)"
  name: "reclassifyJob(String jobId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.reclassifyJob(String jobId, RequestOptions requestOptions)"
  summary: "Reclassify a job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData reclassifyJob(String jobId, RequestOptions requestOptions)"
  desc: "Reclassify a job.\n\n**Request Body Schema**\n\n```java\n{\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "BinaryData."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.reclassifyJobWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.reclassifyJobWithResponse(String jobId, RequestOptions requestOptions)"
  name: "reclassifyJobWithResponse(String jobId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.reclassifyJobWithResponse(String jobId, RequestOptions requestOptions)"
  summary: "Reclassify a job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> reclassifyJobWithResponse(String jobId, RequestOptions requestOptions)"
  desc: "Reclassify a job.\n\n**Request Body Schema**\n\n```java\n{\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n }\n```"
  returns:
    description: "response payload from reclassifying a job along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.unassignJob(java.lang.String,java.lang.String)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.unassignJob(String jobId, String assignmentId)"
  name: "unassignJob(String jobId, String assignmentId)"
  nameWithType: "JobRouterClient.unassignJob(String jobId, String assignmentId)"
  summary: "Unassign a job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of a job assignment."
    name: "assignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public UnassignJobResult unassignJob(String jobId, String assignmentId)"
  desc: "Unassign a job."
  returns:
    description: "response payload after a job has been successfully unassigned."
    type: "<xref href=\"com.azure.communication.jobrouter.models.UnassignJobResult?alt=com.azure.communication.jobrouter.models.UnassignJobResult&text=UnassignJobResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.unassignJob(java.lang.String,java.lang.String,com.azure.communication.jobrouter.models.UnassignJobOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.unassignJob(String jobId, String assignmentId, UnassignJobOptions options)"
  name: "unassignJob(String jobId, String assignmentId, UnassignJobOptions options)"
  nameWithType: "JobRouterClient.unassignJob(String jobId, String assignmentId, UnassignJobOptions options)"
  summary: "Unassign a job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of a job assignment."
    name: "assignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Request body for unassign route."
    name: "options"
    type: "<xref href=\"com.azure.communication.jobrouter.models.UnassignJobOptions?alt=com.azure.communication.jobrouter.models.UnassignJobOptions&text=UnassignJobOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UnassignJobResult unassignJob(String jobId, String assignmentId, UnassignJobOptions options)"
  desc: "Unassign a job."
  returns:
    description: "response payload after a job has been successfully unassigned."
    type: "<xref href=\"com.azure.communication.jobrouter.models.UnassignJobResult?alt=com.azure.communication.jobrouter.models.UnassignJobResult&text=UnassignJobResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.unassignJobWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.unassignJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  name: "unassignJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.unassignJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  summary: "Unassign a job."
  parameters:
  - description: "Id of a job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of a job assignment."
    name: "assignmentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> unassignJobWithResponse(String jobId, String assignmentId, RequestOptions requestOptions)"
  desc: "Unassign a job.\n\n**Request Body Schema**\n\n```java\n{\n     suspendMatching: Boolean (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     jobId: String (Required)\n     unassignmentCount: int (Required)\n }\n```"
  returns:
    description: "response payload after a job has been successfully unassigned along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.updateJob(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.updateJob(String jobId, BinaryData resource, RequestOptions requestOptions)"
  name: "updateJob(String jobId, BinaryData resource, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.updateJob(String jobId, BinaryData resource, RequestOptions requestOptions)"
  summary: "Creates or updates a router job."
  parameters:
  - description: "The jobId of the job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource instance."
    name: "resource"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData updateJob(String jobId, BinaryData resource, RequestOptions requestOptions)"
  desc: "Creates or updates a router job.\n\n**Header Parameters**\n\n    | ------------------- | -------------- | -------- | ------------------------------------------------------------------------------- |\n    | Name                | Type           | Required | Description                                                                     |\n    | If-Match            | String         | No       | The request should only proceed if an entity matches this string.               |\n    | If-Unmodified-Since | OffsetDateTime | No       | The request should only proceed if the entity was not modified after this time. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     jobId: String (Required)\n     channelReference: String (Optional)\n     status: String(pendingClassification/queued/assigned/completed/closed/cancelled/classificationFailed/created/pendingSchedule/scheduled/scheduleFailed/waitingForActivation) (Optional)\n     enqueuedAt: OffsetDateTime (Optional)\n     channelId: String (Optional)\n     classificationPolicyId: String (Optional)\n     queueId: String (Optional)\n     priority: Integer (Optional)\n     dispositionCode: String (Optional)\n     requestedWorkerSelectors (Optional): [\n          (Optional){\n             key: String (Required)\n             labelOperator: String(equal/notEqual/lessThan/lessThanEqual/greaterThan/greaterThanEqual) (Required)\n             value: Object (Optional)\n             expiresAfterSeconds: Double (Optional)\n             expedite: Boolean (Optional)\n             status: String(active/expired) (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     attachedWorkerSelectors (Optional): [\n         (recursive schema, see above)\n     ]\n     labels (Optional): {\n         String: Object (Optional)\n     }\n     assignments (Optional): {\n         String (Optional): {\n             assignmentId: String (Required)\n             workerId: String (Optional)\n             assignedAt: OffsetDateTime (Required)\n             completedAt: OffsetDateTime (Optional)\n             closedAt: OffsetDateTime (Optional)\n         }\n     }\n     tags (Optional): {\n         String: Object (Optional)\n     }\n     notes (Optional): {\n         String: String (Optional)\n     }\n     scheduledAt: OffsetDateTime (Optional)\n     matchingMode (Optional): {\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     jobId: String (Required)\n     channelReference: String (Optional)\n     status: String(pendingClassification/queued/assigned/completed/closed/cancelled/classificationFailed/created/pendingSchedule/scheduled/scheduleFailed/waitingForActivation) (Optional)\n     enqueuedAt: OffsetDateTime (Optional)\n     channelId: String (Optional)\n     classificationPolicyId: String (Optional)\n     queueId: String (Optional)\n     priority: Integer (Optional)\n     dispositionCode: String (Optional)\n     requestedWorkerSelectors (Optional): [\n          (Optional){\n             key: String (Required)\n             labelOperator: String(equal/notEqual/lessThan/lessThanEqual/greaterThan/greaterThanEqual) (Required)\n             value: Object (Optional)\n             expiresAfterSeconds: Double (Optional)\n             expedite: Boolean (Optional)\n             status: String(active/expired) (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     attachedWorkerSelectors (Optional): [\n         (recursive schema, see above)\n     ]\n     labels (Optional): {\n         String: Object (Optional)\n     }\n     assignments (Optional): {\n         String (Optional): {\n             assignmentId: String (Required)\n             workerId: String (Optional)\n             assignedAt: OffsetDateTime (Required)\n             completedAt: OffsetDateTime (Optional)\n             closedAt: OffsetDateTime (Optional)\n         }\n     }\n     tags (Optional): {\n         String: Object (Optional)\n     }\n     notes (Optional): {\n         String: String (Optional)\n     }\n     scheduledAt: OffsetDateTime (Optional)\n     matchingMode (Optional): {\n     }\n }\n```"
  returns:
    description: "BinaryData."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.updateJobWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.updateJobWithResponse(String jobId, BinaryData resource, RequestOptions requestOptions)"
  name: "updateJobWithResponse(String jobId, BinaryData resource, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.updateJobWithResponse(String jobId, BinaryData resource, RequestOptions requestOptions)"
  summary: "Updates a router job."
  parameters:
  - description: "The jobId of the job."
    name: "jobId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource instance."
    name: "resource"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateJobWithResponse(String jobId, BinaryData resource, RequestOptions requestOptions)"
  desc: "Updates a router job.\n\n**Header Parameters**\n\n    | ------------------- | -------------- | -------- | ------------------------------------------------------------------------------- |\n    | Name                | Type           | Required | Description                                                                     |\n    | If-Match            | String         | No       | The request should only proceed if an entity matches this string.               |\n    | If-Unmodified-Since | OffsetDateTime | No       | The request should only proceed if the entity was not modified after this time. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     jobId: String (Required)\n     channelReference: String (Optional)\n     status: String(pendingClassification/queued/assigned/completed/closed/cancelled/classificationFailed/created/pendingSchedule/scheduled/scheduleFailed/waitingForActivation) (Optional)\n     enqueuedAt: OffsetDateTime (Optional)\n     channelId: String (Optional)\n     classificationPolicyId: String (Optional)\n     queueId: String (Optional)\n     priority: Integer (Optional)\n     dispositionCode: String (Optional)\n     requestedWorkerSelectors (Optional): [\n          (Optional){\n             key: String (Required)\n             labelOperator: String(equal/notEqual/lessThan/lessThanEqual/greaterThan/greaterThanEqual) (Required)\n             value: Object (Optional)\n             expiresAfterSeconds: Double (Optional)\n             expedite: Boolean (Optional)\n             status: String(active/expired) (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     attachedWorkerSelectors (Optional): [\n         (recursive schema, see above)\n     ]\n     labels (Optional): {\n         String: Object (Optional)\n     }\n     assignments (Optional): {\n         String (Optional): {\n             assignmentId: String (Required)\n             workerId: String (Optional)\n             assignedAt: OffsetDateTime (Required)\n             completedAt: OffsetDateTime (Optional)\n             closedAt: OffsetDateTime (Optional)\n         }\n     }\n     tags (Optional): {\n         String: Object (Optional)\n     }\n     notes (Optional): {\n         String: String (Optional)\n     }\n     scheduledAt: OffsetDateTime (Optional)\n     matchingMode (Optional): {\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     jobId: String (Required)\n     channelReference: String (Optional)\n     status: String(pendingClassification/queued/assigned/completed/closed/cancelled/classificationFailed/created/pendingSchedule/scheduled/scheduleFailed/waitingForActivation) (Optional)\n     enqueuedAt: OffsetDateTime (Optional)\n     channelId: String (Optional)\n     classificationPolicyId: String (Optional)\n     queueId: String (Optional)\n     priority: Integer (Optional)\n     dispositionCode: String (Optional)\n     requestedWorkerSelectors (Optional): [\n          (Optional){\n             key: String (Required)\n             labelOperator: String(equal/notEqual/lessThan/lessThanEqual/greaterThan/greaterThanEqual) (Required)\n             value: Object (Optional)\n             expiresAfterSeconds: Double (Optional)\n             expedite: Boolean (Optional)\n             status: String(active/expired) (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     attachedWorkerSelectors (Optional): [\n         (recursive schema, see above)\n     ]\n     labels (Optional): {\n         String: Object (Optional)\n     }\n     assignments (Optional): {\n         String (Optional): {\n             assignmentId: String (Required)\n             workerId: String (Optional)\n             assignedAt: OffsetDateTime (Required)\n             completedAt: OffsetDateTime (Optional)\n             closedAt: OffsetDateTime (Optional)\n         }\n     }\n     tags (Optional): {\n         String: Object (Optional)\n     }\n     notes (Optional): {\n         String: String (Optional)\n     }\n     scheduledAt: OffsetDateTime (Optional)\n     matchingMode (Optional): {\n     }\n }\n```"
  returns:
    description: "a unit of work to be routed along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.jobrouter.JobRouterClient.updateWorker(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.updateWorker(String workerId, BinaryData resource, RequestOptions requestOptions)"
  name: "updateWorker(String workerId, BinaryData resource, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.updateWorker(String workerId, BinaryData resource, RequestOptions requestOptions)"
  summary: "Updates a worker."
  parameters:
  - description: "Id of the worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource instance."
    name: "resource"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData updateWorker(String workerId, BinaryData resource, RequestOptions requestOptions)"
  desc: "Updates a worker.\n\n**Header Parameters**\n\n    | ------------------- | -------------- | -------- | ------------------------------------------------------------------------------- |\n    | Name                | Type           | Required | Description                                                                     |\n    | If-Match            | String         | No       | The request should only proceed if an entity matches this string.               |\n    | If-Unmodified-Since | OffsetDateTime | No       | The request should only proceed if the entity was not modified after this time. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     id: String (Required)\n     state: String(active/draining/inactive) (Optional)\n     queueAssignments (Optional): {\n         String (Optional): {\n         }\n     }\n     totalCapacity: Integer (Optional)\n     labels (Optional): {\n         String: Object (Optional)\n     }\n     tags (Optional): {\n         String: Object (Optional)\n     }\n     channelConfigurations (Optional): {\n         String (Optional): {\n             capacityCostPerJob: int (Required)\n             maxNumberOfJobs: Integer (Optional)\n         }\n     }\n     offers (Optional): [\n          (Optional){\n             offerId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             offeredAt: OffsetDateTime (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     assignedJobs (Optional): [\n          (Optional){\n             assignmentId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             assignedAt: OffsetDateTime (Required)\n         }\n     ]\n     loadRatio: Double (Optional)\n     availableForOffers: Boolean (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     state: String(active/draining/inactive) (Optional)\n     queueAssignments (Optional): {\n         String (Optional): {\n         }\n     }\n     totalCapacity: Integer (Optional)\n     labels (Optional): {\n         String: Object (Optional)\n     }\n     tags (Optional): {\n         String: Object (Optional)\n     }\n     channelConfigurations (Optional): {\n         String (Optional): {\n             capacityCostPerJob: int (Required)\n             maxNumberOfJobs: Integer (Optional)\n         }\n     }\n     offers (Optional): [\n          (Optional){\n             offerId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             offeredAt: OffsetDateTime (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     assignedJobs (Optional): [\n          (Optional){\n             assignmentId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             assignedAt: OffsetDateTime (Required)\n         }\n     ]\n     loadRatio: Double (Optional)\n     availableForOffers: Boolean (Optional)\n }\n```"
  returns:
    description: "BinaryData."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.jobrouter.JobRouterClient.updateWorkerWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.communication.jobrouter.JobRouterClient.updateWorkerWithResponse(String workerId, BinaryData resource, RequestOptions requestOptions)"
  name: "updateWorkerWithResponse(String workerId, BinaryData resource, RequestOptions requestOptions)"
  nameWithType: "JobRouterClient.updateWorkerWithResponse(String workerId, BinaryData resource, RequestOptions requestOptions)"
  summary: "Updates a worker."
  parameters:
  - description: "Id of the worker."
    name: "workerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The resource instance."
    name: "resource"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateWorkerWithResponse(String workerId, BinaryData resource, RequestOptions requestOptions)"
  desc: "Updates a worker.\n\n**Header Parameters**\n\n    | ------------------- | -------------- | -------- | ------------------------------------------------------------------------------- |\n    | Name                | Type           | Required | Description                                                                     |\n    | If-Match            | String         | No       | The request should only proceed if an entity matches this string.               |\n    | If-Unmodified-Since | OffsetDateTime | No       | The request should only proceed if the entity was not modified after this time. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     id: String (Required)\n     state: String(active/draining/inactive) (Optional)\n     queueAssignments (Optional): {\n         String (Optional): {\n         }\n     }\n     totalCapacity: Integer (Optional)\n     labels (Optional): {\n         String: Object (Optional)\n     }\n     tags (Optional): {\n         String: Object (Optional)\n     }\n     channelConfigurations (Optional): {\n         String (Optional): {\n             capacityCostPerJob: int (Required)\n             maxNumberOfJobs: Integer (Optional)\n         }\n     }\n     offers (Optional): [\n          (Optional){\n             offerId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             offeredAt: OffsetDateTime (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     assignedJobs (Optional): [\n          (Optional){\n             assignmentId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             assignedAt: OffsetDateTime (Required)\n         }\n     ]\n     loadRatio: Double (Optional)\n     availableForOffers: Boolean (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     state: String(active/draining/inactive) (Optional)\n     queueAssignments (Optional): {\n         String (Optional): {\n         }\n     }\n     totalCapacity: Integer (Optional)\n     labels (Optional): {\n         String: Object (Optional)\n     }\n     tags (Optional): {\n         String: Object (Optional)\n     }\n     channelConfigurations (Optional): {\n         String (Optional): {\n             capacityCostPerJob: int (Required)\n             maxNumberOfJobs: Integer (Optional)\n         }\n     }\n     offers (Optional): [\n          (Optional){\n             offerId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             offeredAt: OffsetDateTime (Optional)\n             expiresAt: OffsetDateTime (Optional)\n         }\n     ]\n     assignedJobs (Optional): [\n          (Optional){\n             assignmentId: String (Required)\n             jobId: String (Required)\n             capacityCost: int (Required)\n             assignedAt: OffsetDateTime (Required)\n         }\n     ]\n     loadRatio: Double (Optional)\n     availableForOffers: Boolean (Optional)\n }\n```"
  returns:
    description: "an entity for jobs to be routed to along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous JobRouterClient type."
metadata: {}
package: "com.azure.communication.jobrouter"
artifact: com.azure:azure-communication-jobrouter:1.1.9
