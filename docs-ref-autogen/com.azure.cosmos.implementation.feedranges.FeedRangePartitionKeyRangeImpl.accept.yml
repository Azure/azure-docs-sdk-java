### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.feedranges.FeedRangePartitionKeyRangeImpl.accept*"
fullName: "com.azure.cosmos.implementation.feedranges.FeedRangePartitionKeyRangeImpl.<T>accept"
name: "<T>accept"
nameWithType: "FeedRangePartitionKeyRangeImpl.<T>accept"
members:
- uid: "com.azure.cosmos.implementation.feedranges.FeedRangePartitionKeyRangeImpl.<T>accept(com.azure.cosmos.implementation.feedranges.FeedRangeAsyncVisitor<T>)"
  fullName: "com.azure.cosmos.implementation.feedranges.FeedRangePartitionKeyRangeImpl.<T>accept(FeedRangeAsyncVisitor<T> visitor)"
  name: "<T>accept(FeedRangeAsyncVisitor<T> visitor)"
  nameWithType: "FeedRangePartitionKeyRangeImpl.<T>accept(FeedRangeAsyncVisitor<T> visitor)"
  overridden: "com.azure.cosmos.implementation.feedranges.FeedRangeInternal.<T>accept(com.azure.cosmos.implementation.feedranges.FeedRangeAsyncVisitor<T>)"
  parameters:
  - name: "visitor"
    type: "<xref href=\"com.azure.cosmos.implementation.feedranges.FeedRangeAsyncVisitor?alt=com.azure.cosmos.implementation.feedranges.FeedRangeAsyncVisitor&text=FeedRangeAsyncVisitor\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<T> <T>accept(FeedRangeAsyncVisitor<T> visitor)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.feedranges.FeedRangePartitionKeyRangeImpl.<TInput>accept(com.azure.cosmos.implementation.feedranges.GenericFeedRangeVisitor<TInput>,TInput)"
  fullName: "com.azure.cosmos.implementation.feedranges.FeedRangePartitionKeyRangeImpl.<TInput>accept(GenericFeedRangeVisitor<TInput> visitor, TInput input)"
  name: "<TInput>accept(GenericFeedRangeVisitor<TInput> visitor, TInput input)"
  nameWithType: "FeedRangePartitionKeyRangeImpl.<TInput>accept(GenericFeedRangeVisitor<TInput> visitor, TInput input)"
  overridden: "com.azure.cosmos.implementation.feedranges.FeedRangeInternal.<TInput>accept(com.azure.cosmos.implementation.feedranges.GenericFeedRangeVisitor<TInput>,TInput)"
  parameters:
  - name: "visitor"
    type: "<xref href=\"com.azure.cosmos.implementation.feedranges.GenericFeedRangeVisitor?alt=com.azure.cosmos.implementation.feedranges.GenericFeedRangeVisitor&text=GenericFeedRangeVisitor\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TInput?alt=TInput&text=TInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "input"
    type: "<xref href=\"TInput?alt=TInput&text=TInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void <TInput>accept(GenericFeedRangeVisitor<TInput> visitor, TInput input)"
- uid: "com.azure.cosmos.implementation.feedranges.FeedRangePartitionKeyRangeImpl.accept(com.azure.cosmos.implementation.feedranges.FeedRangeVisitor)"
  fullName: "com.azure.cosmos.implementation.feedranges.FeedRangePartitionKeyRangeImpl.accept(FeedRangeVisitor visitor)"
  name: "accept(FeedRangeVisitor visitor)"
  nameWithType: "FeedRangePartitionKeyRangeImpl.accept(FeedRangeVisitor visitor)"
  overridden: "com.azure.cosmos.implementation.feedranges.FeedRangeInternal.accept(com.azure.cosmos.implementation.feedranges.FeedRangeVisitor)"
  parameters:
  - name: "visitor"
    type: "<xref href=\"com.azure.cosmos.implementation.feedranges.FeedRangeVisitor?alt=com.azure.cosmos.implementation.feedranges.FeedRangeVisitor&text=FeedRangeVisitor\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void accept(FeedRangeVisitor visitor)"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.feedranges"
artifact: com.azure:azure-cosmos:4.11.0
