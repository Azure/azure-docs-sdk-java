### YamlMime:JavaMember
nameWithType: Trainings.getExportsAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync(UUID projectId, UUID iterationId)
  name: getExportsAsync(UUID projectId, UUID iterationId)
  nameWithType: Trainings.getExportsAsync(UUID projectId, UUID iterationId)
  parameters:
  - description: <p>The project id. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The iteration id. </p>
    name: iterationId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;Export&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export&text=Export" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Get the list of exports for a specific iteration.</p>

    <p></p>
  syntax: public Observable<List<Export>> getExportsAsync(UUID projectId, UUID iterationId)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync(UUID,UUID)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync(UUID projectId, UUID iterationId)
name: getExportsAsync(UUID projectId, UUID iterationId)
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
