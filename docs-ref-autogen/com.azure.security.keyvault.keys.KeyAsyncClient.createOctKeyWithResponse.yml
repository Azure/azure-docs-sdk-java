### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyAsyncClient.createOctKeyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.createOctKeyWithResponse"
name: "createOctKeyWithResponse"
nameWithType: "KeyAsyncClient.createOctKeyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.createOctKeyWithResponse(com.azure.security.keyvault.keys.models.CreateOctKeyOptions)"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.createOctKeyWithResponse(CreateOctKeyOptions createOctKeyOptions)"
  name: "createOctKeyWithResponse(CreateOctKeyOptions createOctKeyOptions)"
  nameWithType: "KeyAsyncClient.createOctKeyWithResponse(CreateOctKeyOptions createOctKeyOptions)"
  summary: "Creates and stores a new <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"symmetric key\"></xref> in the key vault. If a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> with the provided name already exists, Azure Key Vault creates a new version of the key. This operation requires the `keys/create` permission.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.models.CreateOctKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateOctKeyOptions\"></xref> parameter is required. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateOctKeyOptions.getExpiresOn*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"expires\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.CreateOctKeyOptions.getNotBefore*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> values are optional. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateOctKeyOptions.isEnabled*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"enabled\"></xref> field is set to `true` by Azure Key Vault, if not specified.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.models.CreateOctKeyOptions.getKeyType*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keyType\"></xref> indicates the type of <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultKey\"></xref> key to create. Possible values include: <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.OCT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OCT\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.OCT_HSM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OCT-HSM\"></xref>.\n\n**Code Samples**\n\nCreates a new <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"symmetric key\"></xref>. The <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> activates in one day and expires in one year. Subscribes to the call asynchronously and prints out the details of the newly <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"created key\"></xref> when a response has been received.\n\n```java\nCreateOctKeyOptions createOctKeyOptions = new CreateOctKeyOptions(\"keyName\")\n     .setNotBefore(OffsetDateTime.now().plusDays(1))\n     .setExpiresOn(OffsetDateTime.now().plusYears(1));\n \n keyAsyncClient.createOctKeyWithResponse(createOctKeyOptions)\n     .contextWrite(Context.of(\"key1\", \"value1\", \"key2\", \"value2\"))\n     .subscribe(createOctKeyResponse ->\n         System.out.printf(\"Created key with name: %s and: id %s%n\", createOctKeyResponse.getValue().getName(),\n             createOctKeyResponse.getValue().getId()));\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateOctKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options object\"></xref> containing information about the\n <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"symmetric key\"></xref> being created."
    name: "createOctKeyOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateOctKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateOctKeyOptions&text=CreateOctKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultKey>> createOctKeyWithResponse(CreateOctKeyOptions createOctKeyOptions)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the\n <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"created key\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.3.5
