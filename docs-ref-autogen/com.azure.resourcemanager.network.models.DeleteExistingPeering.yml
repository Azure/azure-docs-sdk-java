### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.DeleteExistingPeering"
fullName: "com.azure.resourcemanager.network.models.DeleteExistingPeering"
name: "DeleteExistingPeering"
nameWithType: "DeleteExistingPeering"
summary: "Flag if need to remove current existing peerings."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.ExpandableStringEnum?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.util.ExpandableStringEnum.<T>fromString(java.lang.String,java.lang.Class<T>)"
- "com.azure.core.util.ExpandableStringEnum.<T>values(java.lang.Class<T>)"
- "com.azure.core.util.ExpandableStringEnum.equals(java.lang.Object)"
- "com.azure.core.util.ExpandableStringEnum.hashCode()"
- "com.azure.core.util.ExpandableStringEnum.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DeleteExistingPeering extends ExpandableStringEnum<DeleteExistingPeering>"
constructors:
- uid: "com.azure.resourcemanager.network.models.DeleteExistingPeering.DeleteExistingPeering()"
  fullName: "com.azure.resourcemanager.network.models.DeleteExistingPeering.DeleteExistingPeering()"
  name: "DeleteExistingPeering()"
  nameWithType: "DeleteExistingPeering.DeleteExistingPeering()"
  syntax: "public DeleteExistingPeering()"
fields:
- uid: "com.azure.resourcemanager.network.models.DeleteExistingPeering.FALSE"
  fullName: "com.azure.resourcemanager.network.models.DeleteExistingPeering.FALSE"
  name: "FALSE"
  nameWithType: "DeleteExistingPeering.FALSE"
  summary: "Static value False for Delete<wbr>Existing<wbr>Peering."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.network.models.DeleteExistingPeering?alt=com.azure.resourcemanager.network.models.DeleteExistingPeering&text=DeleteExistingPeering\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final DeleteExistingPeering FALSE"
  desc: "Static value False for DeleteExistingPeering."
- uid: "com.azure.resourcemanager.network.models.DeleteExistingPeering.TRUE"
  fullName: "com.azure.resourcemanager.network.models.DeleteExistingPeering.TRUE"
  name: "TRUE"
  nameWithType: "DeleteExistingPeering.TRUE"
  summary: "Static value True for Delete<wbr>Existing<wbr>Peering."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.resourcemanager.network.models.DeleteExistingPeering?alt=com.azure.resourcemanager.network.models.DeleteExistingPeering&text=DeleteExistingPeering\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final DeleteExistingPeering TRUE"
  desc: "Static value True for DeleteExistingPeering."
methods:
- uid: "com.azure.resourcemanager.network.models.DeleteExistingPeering.fromString(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.DeleteExistingPeering.fromString(String name)"
  name: "fromString(String name)"
  nameWithType: "DeleteExistingPeering.fromString(String name)"
  summary: "Creates or finds a Delete<wbr>Existing<wbr>Peering from its string representation."
  modifiers:
  - "static"
  parameters:
  - description: "a name to look for."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DeleteExistingPeering fromString(String name)"
  desc: "Creates or finds a DeleteExistingPeering from its string representation."
  returns:
    description: "the corresponding DeleteExistingPeering."
    type: "<xref href=\"com.azure.resourcemanager.network.models.DeleteExistingPeering?alt=com.azure.resourcemanager.network.models.DeleteExistingPeering&text=DeleteExistingPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.DeleteExistingPeering.values()"
  fullName: "com.azure.resourcemanager.network.models.DeleteExistingPeering.values()"
  name: "values()"
  nameWithType: "DeleteExistingPeering.values()"
  summary: "Gets known Delete<wbr>Existing<wbr>Peering values."
  modifiers:
  - "static"
  syntax: "public static Collection<DeleteExistingPeering> values()"
  desc: "Gets known DeleteExistingPeering values."
  returns:
    description: "known DeleteExistingPeering values."
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.DeleteExistingPeering?alt=com.azure.resourcemanager.network.models.DeleteExistingPeering&text=DeleteExistingPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Flag if need to remove current existing peerings."
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.18.0
