### YamlMime:JavaType
uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties"
fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties"
name: "RaiContentFilterProperties"
nameWithType: "RaiContentFilterProperties"
summary: "Azure OpenAI Content Filter Properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **RaiContentFilterProperties**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties&text=RaiContentFilterProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.RaiContentFilterProperties()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.RaiContentFilterProperties()"
  name: "RaiContentFilterProperties()"
  nameWithType: "RaiContentFilterProperties.RaiContentFilterProperties()"
  summary: "Creates an instance of Rai<wbr>Content<wbr>Filter<wbr>Properties class."
  syntax: "public RaiContentFilterProperties()"
  desc: "Creates an instance of RaiContentFilterProperties class."
methods:
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "RaiContentFilterProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Rai<wbr>Content<wbr>Filter<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static RaiContentFilterProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the RaiContentFilterProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of RaiContentFilterProperties from the JsonReader."
  returns:
    description: "An instance of RaiContentFilterProperties if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties&text=RaiContentFilterProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.isMultiLevelFilter()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.isMultiLevelFilter()"
  name: "isMultiLevelFilter()"
  nameWithType: "RaiContentFilterProperties.isMultiLevelFilter()"
  summary: "Get the is<wbr>Multi<wbr>Level<wbr>Filter property: If the Content Filter has multi severity levels(Low, Medium, or High)."
  syntax: "public Boolean isMultiLevelFilter()"
  desc: "Get the isMultiLevelFilter property: If the Content Filter has multi severity levels(Low, Medium, or High)."
  returns:
    description: "the isMultiLevelFilter value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.name()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.name()"
  name: "name()"
  nameWithType: "RaiContentFilterProperties.name()"
  summary: "Get the name property: Name of Content Filter."
  syntax: "public String name()"
  desc: "Get the name property: Name of Content Filter."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.source()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.source()"
  name: "source()"
  nameWithType: "RaiContentFilterProperties.source()"
  summary: "Get the source property: Content source to apply the Content Filters."
  syntax: "public RaiPolicyContentSource source()"
  desc: "Get the source property: Content source to apply the Content Filters."
  returns:
    description: "the source value."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource&text=RaiPolicyContentSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "RaiContentFilterProperties.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.validate()"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.validate()"
  name: "validate()"
  nameWithType: "RaiContentFilterProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.withIsMultiLevelFilter(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.withIsMultiLevelFilter(Boolean isMultiLevelFilter)"
  name: "withIsMultiLevelFilter(Boolean isMultiLevelFilter)"
  nameWithType: "RaiContentFilterProperties.withIsMultiLevelFilter(Boolean isMultiLevelFilter)"
  summary: "Set the is<wbr>Multi<wbr>Level<wbr>Filter property: If the Content Filter has multi severity levels(Low, Medium, or High)."
  parameters:
  - description: "the isMultiLevelFilter value to set."
    name: "isMultiLevelFilter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public RaiContentFilterProperties withIsMultiLevelFilter(Boolean isMultiLevelFilter)"
  desc: "Set the isMultiLevelFilter property: If the Content Filter has multi severity levels(Low, Medium, or High)."
  returns:
    description: "the RaiContentFilterProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties&text=RaiContentFilterProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.withName(String name)"
  name: "withName(String name)"
  nameWithType: "RaiContentFilterProperties.withName(String name)"
  summary: "Set the name property: Name of Content Filter."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RaiContentFilterProperties withName(String name)"
  desc: "Set the name property: Name of Content Filter."
  returns:
    description: "the RaiContentFilterProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties&text=RaiContentFilterProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.withSource(com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource)"
  fullName: "com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties.withSource(RaiPolicyContentSource source)"
  name: "withSource(RaiPolicyContentSource source)"
  nameWithType: "RaiContentFilterProperties.withSource(RaiPolicyContentSource source)"
  summary: "Set the source property: Content source to apply the Content Filters."
  parameters:
  - description: "the source value to set."
    name: "source"
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource?alt=com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource&text=RaiPolicyContentSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RaiContentFilterProperties withSource(RaiPolicyContentSource source)"
  desc: "Set the source property: Content source to apply the Content Filters."
  returns:
    description: "the RaiContentFilterProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties&text=RaiContentFilterProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Azure OpenAI Content Filter Properties."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties?alt=com.azure.resourcemanager.cognitiveservices.models.RaiContentFilterProperties&text=RaiContentFilterProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.cognitiveservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cognitiveservices:1.1.0
