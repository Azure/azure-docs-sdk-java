### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner"
  id: "ApiManagementServiceNameAvailabilityResultInner"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  children:
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.ApiManagementServiceNameAvailabilityResultInner()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.message()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.nameAvailable()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.reason()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.withReason(com.microsoft.azure.management.apimanagement.v2019_01_01.NameAvailabilityReason)"
  langs:
  - "java"
  name: "ApiManagementServiceNameAvailabilityResultInner"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner"
  type: "Class"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Response of the CheckNameAvailability operation."
  syntax:
    content: "public class ApiManagementServiceNameAvailabilityResultInner"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.ApiManagementServiceNameAvailabilityResultInner()"
  id: "ApiManagementServiceNameAvailabilityResultInner()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner"
  langs:
  - "java"
  name: "ApiManagementServiceNameAvailabilityResultInner()"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.ApiManagementServiceNameAvailabilityResultInner()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.ApiManagementServiceNameAvailabilityResultInner()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.ApiManagementServiceNameAvailabilityResultInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public ApiManagementServiceNameAvailabilityResultInner()"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.message()"
  id: "message()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner"
  langs:
  - "java"
  name: "message()"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.message()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.message()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.message*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Get if reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a different name."
  syntax:
    content: "public String message()"
    return:
      type: "java.lang.String"
      description: "the message value"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.nameAvailable()"
  id: "nameAvailable()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner"
  langs:
  - "java"
  name: "nameAvailable()"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.nameAvailable()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.nameAvailable()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.nameAvailable*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Get true if the name is available and can be used to create a new API Management service; otherwise false."
  syntax:
    content: "public Boolean nameAvailable()"
    return:
      type: "java.lang.Boolean"
      description: "the nameAvailable value"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.reason()"
  id: "reason()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner"
  langs:
  - "java"
  name: "reason()"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.reason()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.reason()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.reason*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Get invalid indicates the name provided does not match the resource provider\\\\u2019s naming requirements (incorrect length, unsupported characters, etc.) AlreadyExists indicates that the name is already in use and is therefore unavailable. Possible values include: 'Valid', 'Invalid', 'AlreadyExists'."
  syntax:
    content: "public NameAvailabilityReason reason()"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.NameAvailabilityReason"
      description: "the reason value"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.withReason(com.microsoft.azure.management.apimanagement.v2019_01_01.NameAvailabilityReason)"
  id: "withReason(com.microsoft.azure.management.apimanagement.v2019_01_01.NameAvailabilityReason)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner"
  langs:
  - "java"
  name: "withReason(NameAvailabilityReason reason)"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.withReason(NameAvailabilityReason reason)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.withReason(NameAvailabilityReason reason)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.withReason*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Set invalid indicates the name provided does not match the resource provider\\\\u2019s naming requirements (incorrect length, unsupported characters, etc.) AlreadyExists indicates that the name is already in use and is therefore unavailable. Possible values include: 'Valid', 'Invalid', 'AlreadyExists'."
  syntax:
    content: "public ApiManagementServiceNameAvailabilityResultInner withReason(NameAvailabilityReason reason)"
    parameters:
    - id: "reason"
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.NameAvailabilityReason"
      description: "the reason value to set"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner"
      description: "the ApiManagementServiceNameAvailabilityResultInner object itself."
references:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.ApiManagementServiceNameAvailabilityResultInner*"
  name: "ApiManagementServiceNameAvailabilityResultInner"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.ApiManagementServiceNameAvailabilityResultInner"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.ApiManagementServiceNameAvailabilityResultInner"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.nameAvailable*"
  name: "nameAvailable"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.nameAvailable"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.nameAvailable"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.message*"
  name: "message"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.message"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.message"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.NameAvailabilityReason"
  name: "NameAvailabilityReason"
  nameWithType: "NameAvailabilityReason"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.NameAvailabilityReason"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.reason*"
  name: "reason"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.reason"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.reason"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.withReason*"
  name: "withReason"
  nameWithType: "ApiManagementServiceNameAvailabilityResultInner.withReason"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiManagementServiceNameAvailabilityResultInner.withReason"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
