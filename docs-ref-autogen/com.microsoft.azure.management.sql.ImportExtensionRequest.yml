### YamlMime:JavaType
uid: "com.microsoft.azure.management.sql.ImportExtensionRequest"
fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest"
name: "ImportExtensionRequest"
nameWithType: "ImportExtensionRequest"
summary: "Import database parameters."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ImportExtensionRequest"
constructors:
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.ImportExtensionRequest()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.ImportExtensionRequest()"
  name: "ImportExtensionRequest()"
  nameWithType: "ImportExtensionRequest.ImportExtensionRequest()"
  summary: "Creates an instance of Import<wbr>Extension<wbr>Request class."
  syntax: "public ImportExtensionRequest()"
  desc: "Creates an instance of ImportExtensionRequest class."
methods:
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.administratorLogin()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.administratorLogin()"
  name: "administratorLogin()"
  nameWithType: "ImportExtensionRequest.administratorLogin()"
  summary: "Get the name of the SQL administrator."
  syntax: "public String administratorLogin()"
  desc: "Get the name of the SQL administrator."
  returns:
    description: "the administratorLogin value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.administratorLoginPassword()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.administratorLoginPassword()"
  name: "administratorLoginPassword()"
  nameWithType: "ImportExtensionRequest.administratorLoginPassword()"
  summary: "Get the password of the SQL administrator."
  syntax: "public String administratorLoginPassword()"
  desc: "Get the password of the SQL administrator."
  returns:
    description: "the administratorLoginPassword value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.authenticationType()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.authenticationType()"
  name: "authenticationType()"
  nameWithType: "ImportExtensionRequest.authenticationType()"
  summary: "Get the authentication type."
  syntax: "public AuthenticationType authenticationType()"
  desc: "Get the authentication type. Possible values include: 'SQL', 'ADPassword'."
  returns:
    description: "the authenticationType value"
    type: "<xref href=\"com.microsoft.azure.management.sql.AuthenticationType?alt=com.microsoft.azure.management.sql.AuthenticationType&text=AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.name()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.name()"
  name: "name()"
  nameWithType: "ImportExtensionRequest.name()"
  summary: "Get the name of the extension."
  syntax: "public String name()"
  desc: "Get the name of the extension."
  returns:
    description: "the name value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.operationMode()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.operationMode()"
  name: "operationMode()"
  nameWithType: "ImportExtensionRequest.operationMode()"
  summary: "Get the type of import operation being performed."
  syntax: "public String operationMode()"
  desc: "Get the type of import operation being performed. This is always Import."
  returns:
    description: "the operationMode value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.storageKey()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.storageKey()"
  name: "storageKey()"
  nameWithType: "ImportExtensionRequest.storageKey()"
  summary: "Get the storage key to use."
  syntax: "public String storageKey()"
  desc: "Get the storage key to use. If storage key type is SharedAccessKey, it must be preceded with a \"?.\"."
  returns:
    description: "the storageKey value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.storageKeyType()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.storageKeyType()"
  name: "storageKeyType()"
  nameWithType: "ImportExtensionRequest.storageKeyType()"
  summary: "Get the type of the storage key to use."
  syntax: "public StorageKeyType storageKeyType()"
  desc: "Get the type of the storage key to use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'."
  returns:
    description: "the storageKeyType value"
    type: "<xref href=\"com.microsoft.azure.management.sql.StorageKeyType?alt=com.microsoft.azure.management.sql.StorageKeyType&text=StorageKeyType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.storageUri()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.storageUri()"
  name: "storageUri()"
  nameWithType: "ImportExtensionRequest.storageUri()"
  summary: "Get the storage uri to use."
  syntax: "public String storageUri()"
  desc: "Get the storage uri to use."
  returns:
    description: "the storageUri value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.type()"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.type()"
  name: "type()"
  nameWithType: "ImportExtensionRequest.type()"
  summary: "Get the type of the extension."
  syntax: "public String type()"
  desc: "Get the type of the extension."
  returns:
    description: "the type value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withAdministratorLogin(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withAdministratorLogin(String administratorLogin)"
  name: "withAdministratorLogin(String administratorLogin)"
  nameWithType: "ImportExtensionRequest.withAdministratorLogin(String administratorLogin)"
  summary: "Set the name of the SQL administrator."
  parameters:
  - description: "the administratorLogin value to set"
    name: "administratorLogin"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withAdministratorLogin(String administratorLogin)"
  desc: "Set the name of the SQL administrator."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withAdministratorLoginPassword(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withAdministratorLoginPassword(String administratorLoginPassword)"
  name: "withAdministratorLoginPassword(String administratorLoginPassword)"
  nameWithType: "ImportExtensionRequest.withAdministratorLoginPassword(String administratorLoginPassword)"
  summary: "Set the password of the SQL administrator."
  parameters:
  - description: "the administratorLoginPassword value to set"
    name: "administratorLoginPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withAdministratorLoginPassword(String administratorLoginPassword)"
  desc: "Set the password of the SQL administrator."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withAuthenticationType(com.microsoft.azure.management.sql.AuthenticationType)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withAuthenticationType(AuthenticationType authenticationType)"
  name: "withAuthenticationType(AuthenticationType authenticationType)"
  nameWithType: "ImportExtensionRequest.withAuthenticationType(AuthenticationType authenticationType)"
  summary: "Set the authentication type."
  parameters:
  - description: "the authenticationType value to set"
    name: "authenticationType"
    type: "<xref href=\"com.microsoft.azure.management.sql.AuthenticationType?alt=com.microsoft.azure.management.sql.AuthenticationType&text=AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withAuthenticationType(AuthenticationType authenticationType)"
  desc: "Set the authentication type. Possible values include: 'SQL', 'ADPassword'."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withName(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withName(String name)"
  name: "withName(String name)"
  nameWithType: "ImportExtensionRequest.withName(String name)"
  summary: "Set the name of the extension."
  parameters:
  - description: "the name value to set"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withName(String name)"
  desc: "Set the name of the extension."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withOperationMode(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withOperationMode(String operationMode)"
  name: "withOperationMode(String operationMode)"
  nameWithType: "ImportExtensionRequest.withOperationMode(String operationMode)"
  summary: "Set the type of import operation being performed."
  parameters:
  - description: "the operationMode value to set"
    name: "operationMode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withOperationMode(String operationMode)"
  desc: "Set the type of import operation being performed. This is always Import."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withStorageKey(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withStorageKey(String storageKey)"
  name: "withStorageKey(String storageKey)"
  nameWithType: "ImportExtensionRequest.withStorageKey(String storageKey)"
  summary: "Set the storage key to use."
  parameters:
  - description: "the storageKey value to set"
    name: "storageKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withStorageKey(String storageKey)"
  desc: "Set the storage key to use. If storage key type is SharedAccessKey, it must be preceded with a \"?.\"."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withStorageKeyType(com.microsoft.azure.management.sql.StorageKeyType)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withStorageKeyType(StorageKeyType storageKeyType)"
  name: "withStorageKeyType(StorageKeyType storageKeyType)"
  nameWithType: "ImportExtensionRequest.withStorageKeyType(StorageKeyType storageKeyType)"
  summary: "Set the type of the storage key to use."
  parameters:
  - description: "the storageKeyType value to set"
    name: "storageKeyType"
    type: "<xref href=\"com.microsoft.azure.management.sql.StorageKeyType?alt=com.microsoft.azure.management.sql.StorageKeyType&text=StorageKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withStorageKeyType(StorageKeyType storageKeyType)"
  desc: "Set the type of the storage key to use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withStorageUri(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withStorageUri(String storageUri)"
  name: "withStorageUri(String storageUri)"
  nameWithType: "ImportExtensionRequest.withStorageUri(String storageUri)"
  summary: "Set the storage uri to use."
  parameters:
  - description: "the storageUri value to set"
    name: "storageUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withStorageUri(String storageUri)"
  desc: "Set the storage uri to use."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.ImportExtensionRequest.withType(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.ImportExtensionRequest.withType(String type)"
  name: "withType(String type)"
  nameWithType: "ImportExtensionRequest.withType(String type)"
  summary: "Set the type of the extension."
  parameters:
  - description: "the type value to set"
    name: "type"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportExtensionRequest withType(String type)"
  desc: "Set the type of the extension."
  returns:
    description: "the ImportExtensionRequest object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.ImportExtensionRequest?alt=com.microsoft.azure.management.sql.ImportExtensionRequest&text=ImportExtensionRequest\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Import database parameters."
metadata: {}
package: "com.microsoft.azure.management.sql"
artifact: com.microsoft.azure:azure-mgmt-sql:1.41.4
