### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings"
fullName: "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings"
name: "MultiInstanceSettings"
nameWithType: "MultiInstanceSettings"
summary: "Settings which specify how to run a multi-instance Task. Multi-instance Tasks are commonly used to support MPI Tasks. In the MPI case, if any of the subtasks fail (for example due to exiting with a non-zero exit code) the entire multi-instance Task fails. The multi-instance Task is then terminated and retried, up to its retry limit."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MultiInstanceSettings"
constructors:
- "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings.MultiInstanceSettings()"
methods:
- "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings.commonResourceFiles()"
- "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings.coordinationCommandLine()"
- "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings.numberOfInstances()"
- "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings.withCommonResourceFiles(java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>)"
- "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings.withCoordinationCommandLine(java.lang.String)"
- "com.microsoft.azure.batch.protocol.models.MultiInstanceSettings.withNumberOfInstances(java.lang.Integer)"
type: "class"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
