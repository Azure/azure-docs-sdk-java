### YamlMime:JavaMember
nameWithType: BackupDescription.getBackupCallback
type: method
members:
- fullName: microsoft.servicefabric.data.BackupDescription.getBackupCallback()
  name: getBackupCallback()
  nameWithType: BackupDescription.getBackupCallback()
  returns:
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false">Function</xref>

      </p>
    type: BiFunction&lt;<xref href="microsoft.servicefabric.data.BackupInfo?alt=microsoft.servicefabric.data.BackupInfo&text=BackupInfo" data-throw-if-not-resolved="False"/>, <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>, CompletableFuture&lt;Boolean&gt;&gt;
  summary: >-
    <p>Gets the callback to be called when the backup folder has been created locally and is ready to be moved out of the node. </p>

    <p>

      <b>Remarks:</b>Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws InvalidOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>

    <p></p>
  syntax: public BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> getBackupCallback()
  uid: microsoft.servicefabric.data.BackupDescription.getBackupCallback()
uid: microsoft.servicefabric.data.BackupDescription.getBackupCallback*
fullName: microsoft.servicefabric.data.BackupDescription.getBackupCallback()
name: getBackupCallback()
package: microsoft.servicefabric.data
metadata: {}
