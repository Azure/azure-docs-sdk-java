items:
- uid: com.microsoft.azure.storage.table._dynamic_table_entity
  id: _dynamic_table_entity
  parent: com.microsoft.azure.storage.table
  children:
  - com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity()
  - com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(final HashMap<String, EntityProperty>)
  - com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String)
  - com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String,final HashMap<String, EntityProperty>)
  - com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String,String,final HashMap<String, EntityProperty>)
  - com.microsoft.azure.storage.table._dynamic_table_entity.getProperties()
  - com.microsoft.azure.storage.table._dynamic_table_entity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)
  - com.microsoft.azure.storage.table._dynamic_table_entity.setProperties(final HashMap<String, EntityProperty>)
  - com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity(final OperationContext)
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: DynamicTableEntity
  nameWithType: DynamicTableEntity
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 27
  package: com.microsoft.azure.storage.table
  summary: <p>A <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> type which allows callers direct access to the property map of the entity. This class extends <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> to eliminate the use of reflection for serialization and deserialization. </p>
  syntax: &o1
    content: public class DynamicTableEntity extends TableServiceEntity
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage.table._table_entity
  - com.microsoft.azure.storage.table._table_service_entity
  inheritedMembers:
  - com.microsoft.azure.storage.table._table_service_entity.etag()
  - com.microsoft.azure.storage.table._table_service_entity.getEtag()
  - com.microsoft.azure.storage.table._table_service_entity.getPartitionKey()
  - com.microsoft.azure.storage.table._table_service_entity.getReflectedEntityCache()
  - com.microsoft.azure.storage.table._table_service_entity.getRowKey()
  - com.microsoft.azure.storage.table._table_service_entity.getTimestamp()
  - com.microsoft.azure.storage.table._table_service_entity.isReflectedEntityCacheDisabled()
  - com.microsoft.azure.storage.table._table_service_entity.partitionKey()
  - com.microsoft.azure.storage.table._table_service_entity.readEntityWithReflection(final Object,final HashMap<String, EntityProperty>,final OperationContext)
  - com.microsoft.azure.storage.table._table_service_entity.rowKey()
  - com.microsoft.azure.storage.table._table_service_entity.setEtag(final String)
  - com.microsoft.azure.storage.table._table_service_entity.setPartitionKey(final String)
  - com.microsoft.azure.storage.table._table_service_entity.setReflectedEntityCacheDisabled(boolean)
  - com.microsoft.azure.storage.table._table_service_entity.setRowKey(final String)
  - com.microsoft.azure.storage.table._table_service_entity.setTimestamp(final Date)
  - com.microsoft.azure.storage.table._table_service_entity.TableServiceEntity()
  - com.microsoft.azure.storage.table._table_service_entity.TableServiceEntity(String,String)
  - com.microsoft.azure.storage.table._table_service_entity.timeStamp()
  - com.microsoft.azure.storage.table._table_service_entity.writeEntityWithReflection(final Object)
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity()
  id: DynamicTableEntity()
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: DynamicTableEntity()
  nameWithType: DynamicTableEntity.DynamicTableEntity()
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity()
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 33
  package: com.microsoft.azure.storage.table
  summary: <p>Nullary default constructor. </p>
  syntax:
    content: public DynamicTableEntity()
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(final HashMap<String, EntityProperty>)
  id: DynamicTableEntity(final HashMap<String, EntityProperty>)
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: DynamicTableEntity(final HashMap<String, EntityProperty> properties)
  nameWithType: DynamicTableEntity.DynamicTableEntity(final HashMap<String, EntityProperty> properties)
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(final HashMap<String, EntityProperty> properties)
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 56
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Constructs a <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance using the specified property map.</p>

    <p></p>
  syntax:
    content: public DynamicTableEntity(final HashMap<String, EntityProperty> properties)
    parameters:
    - id: properties
      type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values to store in the new <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref>. </p>
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String)
  id: DynamicTableEntity(String,String)
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: DynamicTableEntity(String partitionKey, String rowKey)
  nameWithType: DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey)
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey)
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 45
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Initializes a new instance of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> class with the specified partition key and row key.</p>

    <p></p>
  syntax:
    content: public DynamicTableEntity(String partitionKey, String rowKey)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>A <code>String</code> which represents the partition key of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> to be initialized. </p>
    - id: rowKey
      type: "26831127"
      description: <p>A <code>String</code> which represents the row key of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> to be initialized. </p>
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String,final HashMap<String, EntityProperty>)
  id: DynamicTableEntity(String,String,final HashMap<String, EntityProperty>)
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)
  nameWithType: DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 71
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Initializes a new instance of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> class with the specified partition key and row key.</p>

    <p></p>
  syntax:
    content: public DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>A <code>String</code> which represents the partition key of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> to be initialized. </p>
    - id: rowKey
      type: "26831127"
      description: <p>A <code>String</code> which represents the row key of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> to be initialized. </p>
    - id: properties
      type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values to store in the new <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref>. </p>
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String,String,final HashMap<String, EntityProperty>)
  id: DynamicTableEntity(String,String,String,final HashMap<String, EntityProperty>)
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)
  nameWithType: DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 90
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Initializes a new instance of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> class with the specified partition key and row key.</p>

    <p></p>
  syntax:
    content: public DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>A <code>String</code> which represents the partition key of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> to be initialized. </p>
    - id: rowKey
      type: "26831127"
      description: <p>A <code>String</code> which represents the row key of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> to be initialized. </p>
    - id: etag
      type: "26831127"
      description: <p>The ETag of the <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> to be initialized. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service. </p>
    - id: properties
      type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values to store in the new <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref>. </p>
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.getProperties()
  id: getProperties()
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: getProperties()
  nameWithType: DynamicTableEntity.getProperties()
  fullName: HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.getProperties()
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.getProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 105
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Gets the property map for this <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance.</p>

    <p></p>
  syntax:
    content: public HashMap<String, EntityProperty> getProperties()
    return:
      type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values for this <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance. </p>
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)
  id: readEntity(final HashMap<String, EntityProperty>,final OperationContext)
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  nameWithType: DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  fullName: void com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.readEntity*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 120
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Populates this <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance using the specified map of property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values.</p>

    <p></p>
  syntax:
    content: public void readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
    parameters:
    - id: properties
      type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>The <code>java.util.HashMap</code> of <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values to store in this <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance. </p>
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object used to track the execution of the operation. </p>
  overridden: com.microsoft.azure.storage.table._table_entity.readEntity(HashMap<String, EntityProperty>,OperationContext)
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.setProperties(final HashMap<String, EntityProperty>)
  id: setProperties(final HashMap<String, EntityProperty>)
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: setProperties(final HashMap<String, EntityProperty> properties)
  nameWithType: DynamicTableEntity.setProperties(final HashMap<String, EntityProperty> properties)
  fullName: void com.microsoft.azure.storage.table.DynamicTableEntity.setProperties(final HashMap<String, EntityProperty> properties)
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.setProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 131
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Sets the property map for this <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance.</p>

    <p></p>
  syntax:
    content: public void setProperties(final HashMap<String, EntityProperty> properties)
    parameters:
    - id: properties
      type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values to set in this <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance. </p>
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity(final OperationContext)
  id: writeEntity(final OperationContext)
  parent: com.microsoft.azure.storage.table._dynamic_table_entity
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  langs:
  - java
  name: writeEntity(final OperationContext opContext)
  nameWithType: DynamicTableEntity.writeEntity(final OperationContext opContext)
  fullName: HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(final OperationContext opContext)
  overload: com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
    startLine: 150
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Returns the map of property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data values from this <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance.</p>

    <p></p>
  syntax:
    content: public HashMap<String, EntityProperty> writeEntity(final OperationContext opContext)
    parameters:
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object used to track the execution of the operation.</p>
    return:
      type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values stored in this <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> instance.</p>
  overridden: com.microsoft.azure.storage.table._table_entity.writeEntity(OperationContext)
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>if a Storage service error occurs. </p>
references:
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
  name: DynamicTableEntity
  nameWithType: DynamicTableEntity.DynamicTableEntity
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity
  package: com.microsoft.azure.storage.table
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
  spec.java:
  - name: 'final HashMap<String, '
    fullName: 'final HashMap<String, '
  - uid: com.microsoft.azure.storage.table._entity_property
    name: EntityProperty
    fullName: com.microsoft.azure.storage.table.EntityProperty
    href: com.microsoft.azure.storage.table._entity_property.yml
  - name: '>'
    fullName: '>'
- uid: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
  spec.java:
  - name: 'HashMap<String, '
    fullName: 'HashMap<String, '
  - uid: com.microsoft.azure.storage.table._entity_property
    name: EntityProperty
    fullName: com.microsoft.azure.storage.table.EntityProperty
    href: com.microsoft.azure.storage.table._entity_property.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.getProperties*
  name: getProperties
  nameWithType: DynamicTableEntity.getProperties
  fullName: HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.getProperties
  package: com.microsoft.azure.storage.table
- uid: 93de0ef9com.microsoft.azure.storage._operation_context
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._operation_context
    name: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    href: com.microsoft.azure.storage._operation_context.yml
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.readEntity*
  name: readEntity
  nameWithType: DynamicTableEntity.readEntity
  fullName: void com.microsoft.azure.storage.table.DynamicTableEntity.readEntity
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.setProperties*
  name: setProperties
  nameWithType: DynamicTableEntity.setProperties
  fullName: void com.microsoft.azure.storage.table.DynamicTableEntity.setProperties
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity*
  name: writeEntity
  nameWithType: DynamicTableEntity.writeEntity
  fullName: HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_service_entity.etag()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: etag
  nameWithType: TableServiceEntity.etag
  fullName: String com.microsoft.azure.storage.table.TableServiceEntity.etag
  type: Field
  summary: <p>Reserved for internal use. The value of the ETag for the entity. </p>
  syntax:
    content: protected String etag= null
    return:
      type: "26831127"
- uid: com.microsoft.azure.storage.table._table_service_entity.getEtag()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: getEtag()
  nameWithType: TableServiceEntity.getEtag()
  fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getEtag()
  type: Method
  summary: >-
    <p>Gets the ETag value to verify for the entity. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service.</p>

    <p></p>
  syntax:
    content: public String getEtag()
    return:
      type: "26831127"
      description: <p>A <code>String</code> containing the ETag for the entity. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.getPartitionKey()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: getPartitionKey()
  nameWithType: TableServiceEntity.getPartitionKey()
  fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()
  type: Method
  summary: >-
    <p>Gets the PartitionKey value for the entity.</p>

    <p></p>
  syntax:
    content: public String getPartitionKey()
    return:
      type: "26831127"
      description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.getReflectedEntityCache()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: getReflectedEntityCache()
  nameWithType: TableServiceEntity.getReflectedEntityCache()
  fullName: static ConcurrentHashMap<Class<?>, HashMap<String, PropertyPair>> com.microsoft.azure.storage.table.TableServiceEntity.getReflectedEntityCache()
  type: Method
  summary: >-
    <p>The reflected entity cache caches known entity types and their respective reflected entity dictionaries when entities are deserialized and the payload does not include JSON metadata.</p>

    <p></p>
  syntax:
    content: protected static ConcurrentHashMap<Class<?>, HashMap<String, PropertyPair>> getReflectedEntityCache()
    return:
      type: be7d6493
      description: <p>The <code>ConcurrentHashMap&lt;Class&lt;?&gt;, HashMap&lt;String, PropertyPair&gt;&gt;</code> representing the known entity types and their reflected entity dictionaries </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.getRowKey()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: getRowKey()
  nameWithType: TableServiceEntity.getRowKey()
  fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()
  type: Method
  summary: >-
    <p>Gets the RowKey value for the entity.</p>

    <p></p>
  syntax:
    content: public String getRowKey()
    return:
      type: "26831127"
      description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.getTimestamp()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: getTimestamp()
  nameWithType: TableServiceEntity.getTimestamp()
  fullName: Date com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()
  type: Method
  summary: >-
    <p>Gets the Timestamp for the entity. The server manages the value of Timestamp, which cannot be modified.</p>

    <p></p>
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>A <code>java.util.Date</code> object which represents the Timestamp value for the entity. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.isReflectedEntityCacheDisabled()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: isReflectedEntityCacheDisabled()
  nameWithType: TableServiceEntity.isReflectedEntityCacheDisabled()
  fullName: static boolean com.microsoft.azure.storage.table.TableServiceEntity.isReflectedEntityCacheDisabled()
  type: Method
  summary: >-
    <p>Gets a value indicating whether or not the reflected entity cache is disabled. For most scenarios, disabling the reflected entity cache is not recommended due to its effect on performance.</p>

    <p>The reflected entity cache stores known entity types and their respective reflected entity dictionaries. Rather than using reflection on a known entity type, the values from the dictionary are used instead.</p>

    <p></p>
  syntax:
    content: public static boolean isReflectedEntityCacheDisabled()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the reflected entity cache is disabled; otherwise, <code>false</code>. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.partitionKey()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: partitionKey
  nameWithType: TableServiceEntity.partitionKey
  fullName: String com.microsoft.azure.storage.table.TableServiceEntity.partitionKey
  type: Field
  summary: <p>Reserved for internal use. The value of the partition key in the entity. </p>
  syntax:
    content: protected String partitionKey= null
    return:
      type: "26831127"
- uid: com.microsoft.azure.storage.table._table_service_entity.readEntityWithReflection(final Object,final HashMap<String, EntityProperty>,final OperationContext)
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  nameWithType: TableServiceEntity.readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  fullName: static void com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  type: Method
  summary: >-
    <p>Deserializes the table entity property map into the specified object instance using reflection. </p>

    <p>This static method takes an object instance that represents a table entity type and uses reflection on its class type to find methods to deserialize the data from the property map into the instance. </p>

    <p>Each property name and data type in the properties map is compared with the methods in the class type for a pair of getter and setter methods to use for serialization and deserialization. The class is scanned for methods with names that match the property name with "get" and "set" prepended, or with the <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation set with the property name. The methods must have return types or parameter data types that match the data type of the corresponding <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> value. If such a pair is found, the data is copied into the instance object by invoking the setter method on the instance. Properties that do not match a method pair by name and data type are not copied.</p>

    <p></p>
  syntax:
    content: public static void readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
    parameters:
    - id: instance
      type: 1b60ba29
      description: <p>An <code>Object</code> reference to an instance of a class implementing <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> to deserialize the table entity data into. </p>
    - id: properties
      type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> object which maps <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> objects containing typed data values to deserialize into the instance parameter object. </p>
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.</p>
- uid: com.microsoft.azure.storage.table._table_service_entity.rowKey()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: rowKey
  nameWithType: TableServiceEntity.rowKey
  fullName: String com.microsoft.azure.storage.table.TableServiceEntity.rowKey
  type: Field
  summary: <p>Reserved for internal use. The value of the row key in the entity. </p>
  syntax:
    content: protected String rowKey= null
    return:
      type: "26831127"
- uid: com.microsoft.azure.storage.table._table_service_entity.setEtag(final String)
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: setEtag(final String etag)
  nameWithType: TableServiceEntity.setEtag(final String etag)
  fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setEtag(final String etag)
  type: Method
  summary: >-
    <p>Sets the ETag value to verify for the entity. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service.</p>

    <p></p>
  syntax:
    content: public void setEtag(final String etag)
    parameters:
    - id: etag
      type: 3d93591e
      description: <p>A <code>String</code> containing the ETag for the entity. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.setPartitionKey(final String)
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: setPartitionKey(final String partitionKey)
  nameWithType: TableServiceEntity.setPartitionKey(final String partitionKey)
  fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(final String partitionKey)
  type: Method
  summary: >-
    <p>Sets the PartitionKey value for the entity.</p>

    <p></p>
  syntax:
    content: public void setPartitionKey(final String partitionKey)
    parameters:
    - id: partitionKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.setReflectedEntityCacheDisabled(boolean)
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: setReflectedEntityCacheDisabled(boolean disableReflectedEntityCache)
  nameWithType: TableServiceEntity.setReflectedEntityCacheDisabled(boolean disableReflectedEntityCache)
  fullName: static void com.microsoft.azure.storage.table.TableServiceEntity.setReflectedEntityCacheDisabled(boolean disableReflectedEntityCache)
  type: Method
  summary: >-
    <p>Sets a boolean representing whether or not the reflected entity cache is disabled. For most scenarios, disabling the reflected entity cache is not recommended due to its effect on performance.</p>

    <p>The reflected entity cache stores known entity types and their respective reflected entity dictionaries. Rather than using reflection on a known entity type, the values from the dictionary are used instead.</p>

    <p></p>
  syntax:
    content: public static void setReflectedEntityCacheDisabled(boolean disableReflectedEntityCache)
    parameters:
    - id: disableReflectedEntityCache
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> to disable the reflected entity cache; otherwise, <code>false</code>. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.setRowKey(final String)
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: setRowKey(final String rowKey)
  nameWithType: TableServiceEntity.setRowKey(final String rowKey)
  fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(final String rowKey)
  type: Method
  summary: >-
    <p>Sets the RowKey value for the entity.</p>

    <p></p>
  syntax:
    content: public void setRowKey(final String rowKey)
    parameters:
    - id: rowKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.setTimestamp(final Date)
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: setTimestamp(final Date timeStamp)
  nameWithType: TableServiceEntity.setTimestamp(final Date timeStamp)
  fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(final Date timeStamp)
  type: Method
  summary: >-
    <p>Sets the  value for the entity. Note that the timestamp property is a read-only property, set by the service only.</p>

    <p></p>
  syntax:
    content: public void setTimestamp(final Date timeStamp)
    parameters:
    - id: timeStamp
      type: 970a8f17
      description: <p>A <code>java.util.Date</code> containing the <code>timeStamp</code> value for the entity. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.TableServiceEntity()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: TableServiceEntity()
  nameWithType: TableServiceEntity.TableServiceEntity()
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.TableServiceEntity()
  type: Constructor
  summary: <p>Initializes an empty <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> instance. </p>
  syntax:
    content: public TableServiceEntity()
- uid: com.microsoft.azure.storage.table._table_service_entity.TableServiceEntity(String,String)
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: TableServiceEntity(String partitionKey, String rowKey)
  nameWithType: TableServiceEntity.TableServiceEntity(String partitionKey, String rowKey)
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.TableServiceEntity(String partitionKey, String rowKey)
  type: Constructor
  summary: >-
    <p>Initializes a new instance of the <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> class with the specified partition key and row key.</p>

    <p></p>
  syntax:
    content: public TableServiceEntity(String partitionKey, String rowKey)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>A <code>String</code> which represents the partition key of the <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> to be initialized. </p>
    - id: rowKey
      type: "26831127"
      description: <p>A <code>String</code> which represents the row key of the <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> to be initialized. </p>
- uid: com.microsoft.azure.storage.table._table_service_entity.timeStamp()
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: timeStamp
  nameWithType: TableServiceEntity.timeStamp
  fullName: Date com.microsoft.azure.storage.table.TableServiceEntity.timeStamp
  type: Field
  summary: <p>Reserved for internal use. The value of the Timestamp in the entity. </p>
  syntax:
    content: protected Date timeStamp= new Date()
    return:
      type: "12977444"
- uid: com.microsoft.azure.storage.table._table_service_entity.writeEntityWithReflection(final Object)
  parent: com.microsoft.azure.storage.table._table_service_entity
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: writeEntityWithReflection(final Object instance)
  nameWithType: TableServiceEntity.writeEntityWithReflection(final Object instance)
  fullName: static HashMap<String, EntityProperty> com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(final Object instance)
  type: Method
  summary: >-
    <p>Serializes the property data from a table entity instance into a property map using reflection. </p>

    <p>This static method takes an object instance that represents a table entity type and uses reflection on its class type to find methods to serialize the data from the instance into the property map. </p>

    <p>Each property name and data type in the properties map is compared with the methods in the class type for a pair of getter and setter methods to use for serialization and deserialization. The class is scanned for methods with names that match the property name with "get" and "set" prepended, or with the <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation set with the property name. The methods must have return types or parameter data types that match the data type of the corresponding <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> value. If such a pair is found, the data is copied from the instance object by invoking the getter method on the instance. Properties that do not have a method pair with matching name and data type are not copied.</p>

    <p></p>
  syntax:
    content: public static HashMap<String, EntityProperty> writeEntityWithReflection(final Object instance)
    parameters:
    - id: instance
      type: 1b60ba29
      description: <p>An <code>Object</code> reference to an instance of a class implementing <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> to serialize the table entity data from. </p>
    return:
      type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> object which maps <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> objects containing typed data values serialized from the instance parameter object.</p>
- uid: com.microsoft.azure.storage.table._table_service_entity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_service_entity.yml
  name: TableServiceEntity
  nameWithType: TableServiceEntity
  fullName: com.microsoft.azure.storage.table.TableServiceEntity
  type: Class
  summary: >-
    <p>The <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> class represents the base object type for a table entity in the Storage service. <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> provides a base implementation for the <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> interface that provides  and  methods that by default serialize and deserialize all properties via reflection. A table entity class may extend this class and override the  and  methods to provide customized or more performant serialization logic. </p>

    <p>The use of reflection allows subclasses of <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> to be serialized and deserialized without having to implement the serialization code themselves. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. To take advantage of the automatic serialization code, your table entity classes should provide getter and setter methods for each property in the corresponding table entity in Microsoft Azure table storage. The reflection code looks for getter and setter methods in pairs of the form </p>

    <p></p>

    <p>and </p>

    <p></p>

    <p>where <emphasis>PropertyName</emphasis> is a property name for the table entity, and <emphasis>type</emphasis> is a Java type compatible with the EDM data type of the property. See the table below for a map of property types to their Java equivalents. The <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref href="com.microsoft.azure.storage.table._ignore" data-throw-if-not-resolved="false"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names "PartitionKey", "RowKey", "Timestamp", and "Etag" are reserved and will be ignored if set with the <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation in a subclass. </p>

    <p>The following table shows the supported property data types in Microsoft Azure storage and the corresponding Java types when deserialized. <table rows="9" cols="4"><row><entry thead="yes"><p>Storage Type </p></entry><entry thead="yes"><p><xref href="com.microsoft.azure.storage.table._edm_type" data-throw-if-not-resolved="false"></xref> Value </p></entry><entry thead="yes"><p>Java Type </p></entry><entry thead="yes"><p>Description  </p></entry></row><row><entry thead="no"><p><bold>Edm.Binary</bold></p></entry><entry thead="no"><p><xref href="com.microsoft.azure.storage.table._edm_type.BINARY()" data-throw-if-not-resolved="false"></xref></p></entry><entry thead="no"><p></p></entry><entry thead="no"><p>An array of bytes up to 64 KB in size.  </p></entry></row><row><entry thead="no"><p><bold>Edm.Boolean</bold></p></entry><entry thead="no"><p><xref href="com.microsoft.azure.storage.table._edm_type.BOOLEAN()" data-throw-if-not-resolved="false"></xref></p></entry><entry thead="no"><p></p></entry><entry thead="no"><p>A Boolean value.  </p></entry></row><row><entry thead="no"><p><bold>Edm.DateTime</bold></p></entry><entry thead="no"><p><xref href="com.microsoft.azure.storage.table._edm_type.DATE_TIME()" data-throw-if-not-resolved="false"></xref></p></entry><entry thead="no"><p></p></entry><entry thead="no"><p>A 64-bit value expressed as Coordinated Universal Time (UTC). The supported range begins from 12:00 midnight, January 1, 1601 A.D. (C.E.), UTC. The range ends at December 31, 9999.  </p></entry></row><row><entry thead="no"><p><bold>Edm.Double</bold></p></entry><entry thead="no"><p><xref href="com.microsoft.azure.storage.table._edm_type.DOUBLE()" data-throw-if-not-resolved="false"></xref></p></entry><entry thead="no"><p></p></entry><entry thead="no"><p>A 64-bit double-precision floating point value.  </p></entry></row><row><entry thead="no"><p><bold>Edm.Guid</bold></p></entry><entry thead="no"><p><xref href="com.microsoft.azure.storage.table._edm_type.GUID()" data-throw-if-not-resolved="false"></xref></p></entry><entry thead="no"><p></p></entry><entry thead="no"><p>A 128-bit globally unique identifier.  </p></entry></row><row><entry thead="no"><p><bold>Edm.Int32</bold></p></entry><entry thead="no"><p><xref href="com.microsoft.azure.storage.table._edm_type.INT32()" data-throw-if-not-resolved="false"></xref></p></entry><entry thead="no"><p></p></entry><entry thead="no"><p>A 32-bit integer value.  </p></entry></row><row><entry thead="no"><p><bold>Edm.Int64</bold></p></entry><entry thead="no"><p><xref href="com.microsoft.azure.storage.table._edm_type.INT64()" data-throw-if-not-resolved="false"></xref></p></entry><entry thead="no"><p></p></entry><entry thead="no"><p>A 64-bit integer value.  </p></entry></row><row><entry thead="no"><p><bold>Edm.String</bold></p></entry><entry thead="no"><p><xref href="com.microsoft.azure.storage.table._edm_type.STRING()" data-throw-if-not-resolved="false"></xref></p></entry><entry thead="no"><p></p></entry><entry thead="no"><p>A UTF-16-encoded value. String values may be up to 64 KB in size.  </p></entry></row></table></p>

    <p>See the MSDN topic <ulink url="http://msdn.microsoft.com//library/azure/dd179338.aspx">Understanding the Table Service Data Model</ulink> for an overview of tables, entities, and properties as used in the Microsoft Azure Storage service. </p>

    <p>For an overview of the available EDM primitive data types and names, see the</p>

    <p>

      <ulink url="http://www.odata.org/developers/protocols/overview#AbstractTypeSystem">Primitive Data Types</ulink> section of the <ulink url="http://www.odata.org/developers/protocols/overview">OData Protocol Overview</ulink>. </p>

    <p></p>
  syntax:
    content: public class TableServiceEntity
- uid: com.microsoft.azure.storage.table._entity_property
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._entity_property.yml
  name: EntityProperty
  nameWithType: EntityProperty
  fullName: com.microsoft.azure.storage.table.EntityProperty
  type: Class
  summary: >-
    <p>A class which represents a single typed property value in a table entity. An <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> stores the data type as an <xref href="com.microsoft.azure.storage.table._edm_type" data-throw-if-not-resolved="false"></xref>. The value, which may be  for object types, but not for primitive types, is serialized and stored as a . </p>

    <p>

      <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> provides overloaded constructors and overloads of the  method for supported value types. Each overloaded constructor or  method sets the <xref href="com.microsoft.azure.storage.table._edm_type" data-throw-if-not-resolved="false"></xref> and serializes the value appropriately based on the parameter type. </p>

    <p>Use one of the <emphasis>Type</emphasis> methods to deserialize an <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> as the appropriate Java type. The method will throw a <ref refid="" kindref="compound">ParseException</ref> or <ref refid="" kindref="compound">IllegalArgumentException</ref> if the <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> cannot be deserialized as the Java type. </p>
  syntax:
    content: public class EntityProperty
- uid: com.microsoft.azure.storage.table._dynamic_table_entity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
  name: DynamicTableEntity
  nameWithType: DynamicTableEntity
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity
  type: Class
  summary: <p>A <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> type which allows callers direct access to the property map of the entity. This class extends <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> to eliminate the use of reflection for serialization and deserialization. </p>
  syntax: *o1
- uid: com.microsoft.azure.storage.table._table_entity.readEntity(HashMap<String, EntityProperty>,OperationContext)
  parent: com.microsoft.azure.storage.table._table_entity
  href: com.microsoft.azure.storage.table._table_entity.yml
  name: readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)
  nameWithType: TableEntity.readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)
  type: Method
  summary: >-
    <p>Populates an instance of the object implementing <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> using the specified properties parameter, which represents a map of  property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values.</p>

    <p></p>
  syntax:
    content: public void readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)
    parameters:
    - id: properties
      type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>The <code>java.util.HashMap</code> of <code>String</code> to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values to use to populate the table entity instance. </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object used to track the execution of the operation.</p>
- uid: com.microsoft.azure.storage._operation_context
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._operation_context.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: <p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage.table._table_entity.writeEntity(OperationContext)
  parent: com.microsoft.azure.storage.table._table_entity
  href: com.microsoft.azure.storage.table._table_entity.yml
  name: writeEntity(OperationContext opContext)
  nameWithType: TableEntity.writeEntity(OperationContext opContext)
  fullName: HashMap<String, EntityProperty> com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext opContext)
  type: Method
  summary: >-
    <p>Returns a map of  property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values that represents the serialized content of the table entity instance.</p>

    <p></p>
  syntax:
    content: public HashMap<String, EntityProperty> writeEntity(OperationContext opContext)
    parameters:
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref href="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false"></xref> object used to track the execution of the operation.</p>
    return:
      type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
      description: <p>A <code>java.util.HashMap</code> of <code>String</code> property names to <xref href="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false"></xref> data typed values representing the properties of the table entity.</p>
- uid: com.microsoft.azure.storage._storage_exception
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_exception.yml
  name: StorageException
  nameWithType: StorageException
  fullName: com.microsoft.azure.storage.StorageException
  type: Class
  summary: <p>Represents an exception for the Microsoft Azure storage service. </p>
  syntax:
    content: public class StorageException
- uid: com.microsoft.azure.storage.table._table_entity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_entity.yml
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.microsoft.azure.storage.table.TableEntity
  type: Interface
  summary: >-
    <p>An interface required for table entity types. The <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity. </p>

    <p>The Storage client library includes two implementations of <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that provide for simple property access and serialization: </p>

    <p>

      <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> implements <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> and provides a simple property map to store and retrieve properties. Use a <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information. </p>

    <p>

      <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> is an implementation of <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that uses reflection-based serialization and deserialization behavior in its  and  methods. <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically. </p>

    <p>Any class that implements <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> by invoking the static methods  in  and  in . The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form </p>

    <p></p>

    <p>and </p>

    <p></p>

    <p>where <emphasis>PropertyName</emphasis> is a property name for the table entity, and <emphasis>type</emphasis> is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> for a map of property types to their Java equivalents. The <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref href="com.microsoft.azure.storage.table._ignore" data-throw-if-not-resolved="false"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names "PartitionKey", "RowKey", "Timestamp", and "Etag" are reserved and will be ignored if set with the <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation in a subclass that uses the reflection methods. </p>

    <p></p>
  syntax:
    content: public interface TableEntity
