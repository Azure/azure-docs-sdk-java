### YamlMime:JavaMember
uid: "com.azure.core.util.FluxUtil.addProgressReporting*"
fullName: "com.azure.core.util.FluxUtil.addProgressReporting"
name: "addProgressReporting"
nameWithType: "FluxUtil.addProgressReporting"
members:
- uid: "com.azure.core.util.FluxUtil.addProgressReporting(reactor.core.publisher.Flux<java.nio.ByteBuffer>,com.azure.core.util.ProgressReporter)"
  fullName: "com.azure.core.util.FluxUtil.addProgressReporting(Flux<ByteBuffer> flux, ProgressReporter progressReporter)"
  name: "addProgressReporting(Flux<ByteBuffer> flux, ProgressReporter progressReporter)"
  nameWithType: "FluxUtil.addProgressReporting(Flux<ByteBuffer> flux, ProgressReporter progressReporter)"
  summary: "Adds progress reporting to the provided <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> of <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref>.\n\nEach <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref> that's emitted from the <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> will report <xref uid=\"java.nio.ByteBuffer.remaining*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer#remaining()\"></xref>.\n\nWhen <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> is resubscribed the progress is reset. If the flux is not replayable, resubscribing can result in empty or partial data then progress reporting might not be accurate.\n\nIf <xref uid=\"com.azure.core.util.ProgressReporter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProgressReporter\"></xref> is not provided, i.e. is `null`, then this method returns unmodified <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref>."
  parameters:
  - description: "A <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> to report progress on."
    name: "flux"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Optional <xref uid=\"com.azure.core.util.ProgressReporter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProgressReporter\"></xref>."
    name: "progressReporter"
    type: "<xref href=\"com.azure.core.util.ProgressReporter?alt=com.azure.core.util.ProgressReporter&text=ProgressReporter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Flux<ByteBuffer> addProgressReporting(Flux<ByteBuffer> flux, ProgressReporter progressReporter)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> that reports progress, or original <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> if <xref uid=\"com.azure.core.util.ProgressReporter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProgressReporter\"></xref> is not\n provided."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.util"
artifact: com.azure:azure-core:1.31.0
