### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber"
fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber"
name: "ConversationTranscriber"
nameWithType: "ConversationTranscriber"
summary: "Performs conversation transcribing for audio input streams, and gets transcribed text and user id as a result."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer?alt=com.microsoft.cognitiveservices.speech.Recognizer&text=Recognizer\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.canceledSetCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.canceledSetCallback&text=canceledSetCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.close()?alt=com.microsoft.cognitiveservices.speech.Recognizer.close&text=close\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.dispose(boolean)?alt=com.microsoft.cognitiveservices.speech.Recognizer.dispose&text=dispose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.doAsyncRecognitionAction(java.lang.Runnable)?alt=com.microsoft.cognitiveservices.speech.Recognizer.doAsyncRecognitionAction&text=doAsyncRecognitionAction\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.getImpl()?alt=com.microsoft.cognitiveservices.speech.Recognizer.getImpl&text=getImpl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.getPropertyBagFromRecognizerHandle(com.microsoft.cognitiveservices.speech.util.SafeHandle,com.microsoft.cognitiveservices.speech.util.IntRef)?alt=com.microsoft.cognitiveservices.speech.Recognizer.getPropertyBagFromRecognizerHandle&text=getPropertyBagFromRecognizerHandle\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.recognize()?alt=com.microsoft.cognitiveservices.speech.Recognizer.recognize&text=recognize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.recognizedSetCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.recognizedSetCallback&text=recognizedSetCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.recognizingSetCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.recognizingSetCallback&text=recognizingSetCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedEventCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedEventCallback&text=sessionStartedEventCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedSetCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedSetCallback&text=sessionStartedSetCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedEventCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedEventCallback&text=sessionStoppedEventCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedSetCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedSetCallback&text=sessionStoppedSetCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedEventCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedEventCallback&text=speechEndDetectedEventCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedSetCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedSetCallback&text=speechEndDetectedSetCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedEventCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedEventCallback&text=speechStartDetectedEventCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedSetCallback(long)?alt=com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedSetCallback&text=speechStartDetectedSetCallback\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.startContinuousRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)?alt=com.microsoft.cognitiveservices.speech.Recognizer.startContinuousRecognition&text=startContinuousRecognition\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.startKeywordRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle,com.microsoft.cognitiveservices.speech.util.SafeHandle)?alt=com.microsoft.cognitiveservices.speech.Recognizer.startKeywordRecognition&text=startKeywordRecognition\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.stopContinuousRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)?alt=com.microsoft.cognitiveservices.speech.Recognizer.stopContinuousRecognition&text=stopContinuousRecognition\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.cognitiveservices.speech.Recognizer.stopKeywordRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)?alt=com.microsoft.cognitiveservices.speech.Recognizer.stopKeywordRecognition&text=stopKeywordRecognition\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **ConversationTranscriber**</br> extends <xref href=\"com.microsoft.cognitiveservices.speech.Recognizer?alt=com.microsoft.cognitiveservices.speech.Recognizer&text=Recognizer\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.ConversationTranscriber()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.ConversationTranscriber()"
  name: "ConversationTranscriber()"
  nameWithType: "ConversationTranscriber.ConversationTranscriber()"
  summary: "Initializes a new instance of Conversation Transcriber."
  syntax: "public ConversationTranscriber()"
  desc: "Initializes a new instance of Conversation Transcriber."
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.ConversationTranscriber(com.microsoft.cognitiveservices.speech.audio.AudioConfig)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.ConversationTranscriber(AudioConfig audioConfig)"
  name: "ConversationTranscriber(AudioConfig audioConfig)"
  nameWithType: "ConversationTranscriber.ConversationTranscriber(AudioConfig audioConfig)"
  summary: "Initializes a new instance of Conversation Transcriber."
  parameters:
  - description: "audio configuration."
    name: "audioConfig"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConversationTranscriber(AudioConfig audioConfig)"
  desc: "Initializes a new instance of Conversation Transcriber."
fields:
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.canceled"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.canceled"
  name: "canceled"
  nameWithType: "ConversationTranscriber.canceled"
  summary: "The event canceled signals that the recognition was canceled."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriptionCanceledEventArgs?alt=com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriptionCanceledEventArgs&text=ConversationTranscriptionCanceledEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<ConversationTranscriptionCanceledEventArgs> canceled"
  desc: "The event canceled signals that the recognition was canceled."
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.transcribed"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.transcribed"
  name: "transcribed"
  nameWithType: "ConversationTranscriber.transcribed"
  summary: "The event transcribed signals that a final recognition result is received."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriptionEventArgs?alt=com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriptionEventArgs&text=ConversationTranscriptionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<ConversationTranscriptionEventArgs> transcribed"
  desc: "The event transcribed signals that a final recognition result is received."
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.transcribing"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.transcribing"
  name: "transcribing"
  nameWithType: "ConversationTranscriber.transcribing"
  summary: "The event transcribing signals that an intermediate recognition result is received."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriptionEventArgs?alt=com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriptionEventArgs&text=ConversationTranscriptionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<ConversationTranscriptionEventArgs> transcribing"
  desc: "The event transcribing signals that an intermediate recognition result is received."
methods:
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.dispose(boolean)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.dispose(boolean disposing)"
  name: "dispose(boolean disposing)"
  nameWithType: "ConversationTranscriber.dispose(boolean disposing)"
  summary: "This method performs cleanup of resources."
  modifiers:
  - "protected"
  overridden: "com.microsoft.cognitiveservices.speech.Recognizer.dispose(boolean)"
  parameters:
  - name: "disposing"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void dispose(boolean disposing)"
  desc: "This method performs cleanup of resources. The Boolean parameter disposing indicates whether the method is called from Dispose (if disposing is true) or from the finalizer (if disposing is false). Derived classes should override this method to dispose resource if needed."
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.getOutputFormat()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.getOutputFormat()"
  name: "getOutputFormat()"
  nameWithType: "ConversationTranscriber.getOutputFormat()"
  summary: "Gets the output format of recognition."
  syntax: "public OutputFormat getOutputFormat()"
  desc: "Gets the output format of recognition."
  returns:
    description: "The output format of recognition."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.OutputFormat?alt=com.microsoft.cognitiveservices.speech.OutputFormat&text=OutputFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.getProperties()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.getProperties()"
  name: "getProperties()"
  nameWithType: "ConversationTranscriber.getProperties()"
  summary: "The collection of properties and their values defined for this Conversation<wbr>Transcriber."
  syntax: "public PropertyCollection getProperties()"
  desc: "The collection of properties and their values defined for this ConversationTranscriber."
  returns:
    description: "The collection of properties and their values defined for this ConversationTranscriber."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.getSpeechRecognitionLanguage()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.getSpeechRecognitionLanguage()"
  name: "getSpeechRecognitionLanguage()"
  nameWithType: "ConversationTranscriber.getSpeechRecognitionLanguage()"
  summary: "Gets the spoken language of recognition."
  syntax: "public String getSpeechRecognitionLanguage()"
  desc: "Gets the spoken language of recognition."
  returns:
    description: "The spoken language of recognition."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.getTranscriberImpl()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.getTranscriberImpl()"
  name: "getTranscriberImpl()"
  nameWithType: "ConversationTranscriber.getTranscriberImpl()"
  summary: "Only used for testing."
  syntax: "public SafeHandle getTranscriberImpl()"
  desc: "Only used for testing."
  returns:
    description: "only used for testing."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.joinConversationAsync(com.microsoft.cognitiveservices.speech.transcription.Conversation)"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.joinConversationAsync(Conversation conversation)"
  name: "joinConversationAsync(Conversation conversation)"
  nameWithType: "ConversationTranscriber.joinConversationAsync(Conversation conversation)"
  summary: "Join a conversation."
  parameters:
  - description: "the conversation to be joined."
    name: "conversation"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.transcription.Conversation?alt=com.microsoft.cognitiveservices.speech.transcription.Conversation&text=Conversation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<Void> joinConversationAsync(Conversation conversation)"
  desc: "Join a conversation. A conversation transcriber must join a conversation before transcribing audio."
  returns:
    description: "A task representing the asynchronous operation that joins a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.leaveConversationAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.leaveConversationAsync()"
  name: "leaveConversationAsync()"
  nameWithType: "ConversationTranscriber.leaveConversationAsync()"
  summary: "Leave a conversation."
  syntax: "public Future<Void> leaveConversationAsync()"
  desc: "Leave a conversation. After leaving a conversation, no transcribing and transcribed events will be sent out."
  returns:
    description: "A task representing the asynchronous operation that leaves a conversation."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.startTranscribingAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.startTranscribingAsync()"
  name: "startTranscribingAsync()"
  nameWithType: "ConversationTranscriber.startTranscribingAsync()"
  summary: "Starts conversation transcribing on a continuous audio stream, until stop<wbr>Transcribing<wbr>Async() is called."
  syntax: "public Future<Void> startTranscribingAsync()"
  desc: "Starts conversation transcribing on a continuous audio stream, until stopTranscribingAsync() is called. User must subscribe to events to receive transcription results."
  returns:
    description: "A task representing the asynchronous operation that starts the transcription."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.stopTranscribingAsync()"
  fullName: "com.microsoft.cognitiveservices.speech.transcription.ConversationTranscriber.stopTranscribingAsync()"
  name: "stopTranscribingAsync()"
  nameWithType: "ConversationTranscriber.stopTranscribingAsync()"
  summary: "Stops conversation transcribing."
  syntax: "public Future<Void> stopTranscribingAsync()"
  desc: "Stops conversation transcribing."
  returns:
    description: "A task representing the asynchronous operation that stops the transcription."
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Performs conversation transcribing for audio input streams, and gets transcribed text and user id as a result. Note: close() must be called in order to release underlying resources held by the object. Added in version 1.5.0"
metadata: {}
package: "com.microsoft.cognitiveservices.speech.transcription"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.24.2
