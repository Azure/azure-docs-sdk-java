### YamlMime:JavaType
uid: "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder"
fullName: "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder"
name: "EventHubMessageChannelBinder"
nameWithType: "EventHubMessageChannelBinder"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.cloud.stream.binder.AbstractBinder\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.cloud.stream.binder.AbstractMessageChannelBinder\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.springframework.cloud.stream.binder.AbstractBinder.afterPropertiesSet()"
- "org.springframework.cloud.stream.binder.AbstractBinder.applyPrefix(java.lang.String,java.lang.String)"
- "org.springframework.cloud.stream.binder.AbstractBinder.bindConsumer(java.lang.String,java.lang.String,T,C)"
- "org.springframework.cloud.stream.binder.AbstractBinder.bindProducer(java.lang.String,T,P)"
- "org.springframework.cloud.stream.binder.AbstractBinder.buildRetryTemplate(org.springframework.cloud.stream.binder.ConsumerProperties)"
- "org.springframework.cloud.stream.binder.AbstractBinder.constructDLQName(java.lang.String)"
- "org.springframework.cloud.stream.binder.AbstractBinder.doBindConsumer(java.lang.String,java.lang.String,T,C)"
- "org.springframework.cloud.stream.binder.AbstractBinder.doBindProducer(java.lang.String,T,P)"
- "org.springframework.cloud.stream.binder.AbstractBinder.getApplicationContext()"
- "org.springframework.cloud.stream.binder.AbstractBinder.getBeanFactory()"
- "org.springframework.cloud.stream.binder.AbstractBinder.getEvaluationContext()"
- "org.springframework.cloud.stream.binder.AbstractBinder.groupedName(java.lang.String,java.lang.String)"
- "org.springframework.cloud.stream.binder.AbstractBinder.onInit()"
- "org.springframework.cloud.stream.binder.AbstractBinder.setApplicationContext(org.springframework.context.ApplicationContext)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.<L>getContainerCustomizer()"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.<S>getMessageSourceCustomizer()"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.afterUnbindConsumer(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.afterUnbindProducer(org.springframework.cloud.stream.provisioning.ProducerDestination,P)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.bindPollableConsumer(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.PollableSource<org.springframework.messaging.MessageHandler>,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createConsumerEndpoint(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createPolledConsumerResources(java.lang.String,java.lang.String,org.springframework.cloud.stream.provisioning.ConsumerDestination,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,P,org.springframework.messaging.MessageChannel)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,P,org.springframework.messaging.MessageChannel,org.springframework.messaging.MessageChannel)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.doBindConsumer(java.lang.String,java.lang.String,org.springframework.messaging.MessageChannel,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.doBindProducer(java.lang.String,org.springframework.messaging.MessageChannel,P)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.errorsBaseName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.errorsBaseName(org.springframework.cloud.stream.provisioning.ProducerDestination)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getApplicationEventPublisher()"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getDefaultErrorMessageHandler(org.springframework.cloud.stream.binder.LastSubscriberAwareChannel,boolean)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorBridgeName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorBridgeName(org.springframework.cloud.stream.provisioning.ProducerDestination)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageHandler(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageHandlerName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageStrategy()"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorRecovererName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getPolledConsumerErrorMessageHandler(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getPolledConsumerRecoveryCallback(org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.ErrorInfrastructure,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.postProcessOutputChannel(org.springframework.messaging.MessageChannel,P)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.postProcessPollableSource(org.springframework.cloud.stream.binder.DefaultPollableMessageSource)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.registerErrorInfrastructure(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.registerErrorInfrastructure(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C,boolean)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setConsumerEndpointCustomizer(org.springframework.cloud.stream.config.ConsumerEndpointCustomizer<? extends org.springframework.integration.core.MessageProducer>)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(org.springframework.cloud.stream.config.ProducerMessageHandlerCustomizer<? extends org.springframework.messaging.MessageHandler>)"
- "org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.useNativeEncoding(P)"
syntax: "public class EventHubMessageChannelBinder extends AbstractMessageChannelBinder<ExtendedConsumerProperties<EventHubConsumerProperties>,ExtendedProducerProperties<EventHubProducerProperties>,EventHubChannelProvisioner> implements ExtendedPropertiesBinder<MessageChannel,EventHubConsumerProperties,EventHubProducerProperties>"
constructors:
- "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.EventHubMessageChannelBinder(java.lang.String[],com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner,com.azure.spring.integration.eventhub.api.EventHubOperation)"
methods:
- "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createConsumerEndpoint(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>)"
- "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,org.springframework.cloud.stream.binder.ExtendedProducerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>,org.springframework.messaging.MessageChannel)"
- "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getDefaultsPrefix()"
- "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedConsumerProperties(java.lang.String)"
- "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedProducerProperties(java.lang.String)"
- "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedPropertiesEntryClass()"
- "com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.setBindingProperties(com.azure.spring.eventhub.stream.binder.properties.EventHubExtendedBindingProperties)"
type: "class"
implements:
- "<xref href=\"org.springframework.cloud.stream.binder.ExtendedPropertiesBinder?alt=org.springframework.cloud.stream.binder.ExtendedPropertiesBinder&text=ExtendedPropertiesBinder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.springframework.messaging.MessageChannel?alt=org.springframework.messaging.MessageChannel&text=MessageChannel\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties?alt=com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties&text=EventHubConsumerProperties\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties?alt=com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties&text=EventHubProducerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.eventhub.stream.binder"
artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0
