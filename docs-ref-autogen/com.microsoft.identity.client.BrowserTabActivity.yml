### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Activity" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.identity.client.BrowserTabActivity.onCreate(final Bundle)
nameWithType: BrowserTabActivity
syntax: public class BrowserTabActivity
type: class
uid: com.microsoft.identity.client.BrowserTabActivity
fullName: com.microsoft.identity.client.BrowserTabActivity
name: BrowserTabActivity
package: com.microsoft.identity.client
summary: >-
  <p>MSAL activity class (needs to be public in order to be discoverable by the os) to get the browser redirect with auth code from authorize endpoint. This activity has to be exposed by "android:exported=true", and intent filter has to be declared in the manifest for the activity. </p>

  <p>When the AuthorizationAgent is launched, and we're redirected back with the redirect uri (the redirect must be unique across apps on a device), the os will fire an intent with the redirect, and the BrowserTabActivity will be launched. <pre>

  &lt;intent-filter&gt;

      &lt;action android:name="android.intent.action.VIEW" /&gt;</pre></p>

  <p>

    <pre>    To receive implicit intents, have to put the activity in the category of default.

      &lt;category android:name="android.intent.category.DEFAULT" /&gt;</pre>

  </p>

  <p>

    <pre>    The target activity allows itself to be started by a web browser to display data.

      &lt;category android:name="android.intent.category.BROWSABLE" /&gt;</pre>

  </p>

  <p>

    <pre>    BrowserTabActivity will be launched when matching the custom url scheme.

      &lt;data android:scheme="msalclientid" android:host="auth" /&gt;

  &lt;/intent-filter&gt;

  </pre>

  </p>
metadata: {}
