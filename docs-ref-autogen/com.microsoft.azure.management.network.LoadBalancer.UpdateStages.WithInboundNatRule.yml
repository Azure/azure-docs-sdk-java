### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.network.LoadBalancer.UpdateStages.WithInboundNatRule.defineInboundNatRule(String name)
  name: defineInboundNatRule(String name)
  nameWithType: LoadBalancer.UpdateStages.WithInboundNatRule.defineInboundNatRule(String name)
  parameters:
  - description: <p>the name for the inbound NAT rule </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the new inbound NAT rule definition </p>
    type: LoadBalancerInboundNatRule.UpdateDefinitionStages.Blank&lt;<xref href="com.microsoft.azure.management.network.LoadBalancer.Update?alt=com.microsoft.azure.management.network.LoadBalancer.Update&text=LoadBalancer.Update" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Begins the definition of a new inbound NAT rule. </p>

    <p>The definition must be completed with a call to <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Attachable.InUpdate.attach()" data-throw-if-not-resolved="false" data-raw-source="LoadBalancerInboundNatRule.UpdateDefinitionStages.WithAttach#attach()"></xref></p>
  syntax: public LoadBalancerInboundNatRule.UpdateDefinitionStages.Blank<Update> defineInboundNatRule(String name)
  uid: com.microsoft.azure.management.network.LoadBalancer.UpdateStages.WithInboundNatRule.defineInboundNatRule(String)
- fullName: com.microsoft.azure.management.network.LoadBalancer.UpdateStages.WithInboundNatRule.updateInboundNatRule(String name)
  name: updateInboundNatRule(String name)
  nameWithType: LoadBalancer.UpdateStages.WithInboundNatRule.updateInboundNatRule(String name)
  parameters:
  - description: <p>the name of the inbound NAT rule to update </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the inbound NAT rule update </p>
    type: <xref href="LoadBalancerInboundNatRule.Update?alt=LoadBalancerInboundNatRule.Update&text=LoadBalancerInboundNatRule.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Begins the description of an update to an existing inbound NAT rule. </p>
  syntax: public LoadBalancerInboundNatRule.Update updateInboundNatRule(String name)
  uid: com.microsoft.azure.management.network.LoadBalancer.UpdateStages.WithInboundNatRule.updateInboundNatRule(String)
- fullName: com.microsoft.azure.management.network.LoadBalancer.UpdateStages.WithInboundNatRule.withoutInboundNatRule(String name)
  name: withoutInboundNatRule(String name)
  nameWithType: LoadBalancer.UpdateStages.WithInboundNatRule.withoutInboundNatRule(String name)
  parameters:
  - description: <p>the name of an existing inbound NAT rule on this load balancer </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.network.LoadBalancer.Update?alt=com.microsoft.azure.management.network.LoadBalancer.Update&text=LoadBalancer.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Removes the specified inbound NAT rule from the load balancer. </p>
  syntax: public Update withoutInboundNatRule(String name)
  uid: com.microsoft.azure.management.network.LoadBalancer.UpdateStages.WithInboundNatRule.withoutInboundNatRule(String)
nameWithType: LoadBalancer.UpdateStages.WithInboundNatRule
syntax: public interface WithInboundNatRule
type: interface
uid: com.microsoft.azure.management.network.LoadBalancer.UpdateStages.WithInboundNatRule
fullName: com.microsoft.azure.management.network.LoadBalancer.UpdateStages.WithInboundNatRule
name: LoadBalancer.UpdateStages.WithInboundNatRule
package: com.microsoft.azure.management.network
summary: <p>The stage of a load balancer update allowing to define, remove or edit inbound NAT rules. </p>
metadata: {}
