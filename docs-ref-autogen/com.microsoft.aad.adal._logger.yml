### YamlMime:ManagedReference
items:
- uid: com.microsoft.aad.adal._logger
  id: _logger
  parent: com.microsoft.aad.adal
  children:
  - com.microsoft.aad.adal._logger.getCorrelationId()
  - com.microsoft.aad.adal._logger.getInstance()
  - com.microsoft.aad.adal._logger.setAndroidLogEnabled(final boolean)
  - com.microsoft.aad.adal._logger.setCorrelationId(UUID)
  - com.microsoft.aad.adal._logger.setEnablePII(final boolean)
  - com.microsoft.aad.adal._logger.setExternalLogger(ILogger)
  - com.microsoft.aad.adal._logger.setLogLevel(final LogLevel)
  href: com.microsoft.aad.adal._logger.yml
  langs:
  - java
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.aad.adal.Logger
  type: Class
  source:
    remote: &o0
      path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-android
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 38
  package: com.microsoft.aad.adal
  summary: '<p>Android log output can. If externalLogger is set, it will use that as well. Usage: Logger.v(tag, message, additionalMessage, errorCode) to log. Set custom logger: Logger.setExternalLogger(..); </p>'
  syntax: &o1
    content: public class Logger
  inheritance:
  - java.lang.Object
- uid: com.microsoft.aad.adal._logger.getCorrelationId()
  id: getCorrelationId()
  parent: com.microsoft.aad.adal._logger
  href: com.microsoft.aad.adal._logger.yml
  langs:
  - java
  name: getCorrelationId()
  nameWithType: Logger.getCorrelationId()
  fullName: com.microsoft.aad.adal.Logger.getCorrelationId()
  overload: com.microsoft.aad.adal._logger.getCorrelationId*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 457
  package: com.microsoft.aad.adal
  syntax:
    content: public String getCorrelationId()
    return:
      type: "26831127"
      description: <p>the correlation id for the logger. </p>
- uid: com.microsoft.aad.adal._logger.getInstance()
  id: getInstance()
  parent: com.microsoft.aad.adal._logger
  href: com.microsoft.aad.adal._logger.yml
  langs:
  - java
  name: getInstance()
  nameWithType: Logger.getInstance()
  fullName: com.microsoft.aad.adal.Logger.getInstance()
  overload: com.microsoft.aad.adal._logger.getInstance*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 48
  package: com.microsoft.aad.adal
  syntax:
    content: public static Logger getInstance()
    return:
      type: com.microsoft.aad.adal._logger
      description: <p>The single instance of <xref uid="com.microsoft.aad.adal._logger" data-throw-if-not-resolved="false">Logger</xref>. </p>
- uid: com.microsoft.aad.adal._logger.setAndroidLogEnabled(final boolean)
  id: setAndroidLogEnabled(final boolean)
  parent: com.microsoft.aad.adal._logger
  href: com.microsoft.aad.adal._logger.yml
  langs:
  - java
  name: setAndroidLogEnabled(final boolean androidLogEnabled)
  nameWithType: Logger.setAndroidLogEnabled(final boolean androidLogEnabled)
  fullName: com.microsoft.aad.adal.Logger.setAndroidLogEnabled(final boolean androidLogEnabled)
  overload: com.microsoft.aad.adal._logger.setAndroidLogEnabled*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 145
  package: com.microsoft.aad.adal
  summary: >-
    <p>Enable/Disable the Android logcat logging. By default, the sdk disables it.</p>

    <p></p>
  syntax:
    content: public void setAndroidLogEnabled(final boolean androidLogEnabled)
    parameters:
    - id: androidLogEnabled
      type: 4dda0764
      description: <p>True if enabling the logcat logging, false otherwise. </p>
- uid: com.microsoft.aad.adal._logger.setCorrelationId(UUID)
  id: setCorrelationId(UUID)
  parent: com.microsoft.aad.adal._logger
  href: com.microsoft.aad.adal._logger.yml
  langs:
  - java
  name: setCorrelationId(UUID correlation)
  nameWithType: Logger.setCorrelationId(UUID correlation)
  fullName: com.microsoft.aad.adal.Logger.setCorrelationId(UUID correlation)
  overload: com.microsoft.aad.adal._logger.setCorrelationId*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 439
  package: com.microsoft.aad.adal
  summary: >-
    <p>Sets the correlation id for the logger.</p>

    <p></p>
  syntax:
    content: public static void setCorrelationId(UUID correlation)
    parameters:
    - id: correlation
      type: add9545a
      description: <p>Correlation ID to be used </p>
- uid: com.microsoft.aad.adal._logger.setEnablePII(final boolean)
  id: setEnablePII(final boolean)
  parent: com.microsoft.aad.adal._logger
  href: com.microsoft.aad.adal._logger.yml
  langs:
  - java
  name: setEnablePII(final boolean enablePII)
  nameWithType: Logger.setEnablePII(final boolean enablePII)
  fullName: com.microsoft.aad.adal.Logger.setEnablePII(final boolean enablePII)
  overload: com.microsoft.aad.adal._logger.setEnablePII*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 157
  package: com.microsoft.aad.adal
  summary: >-
    <p>ADAL provides logging callbacks that assist in diagnostics. The callback has two parameters, message and additionalMessage. All user information is put into additionalMessage. ADAL will clear this data unless the <xref uid="" data-throw-if-not-resolved="false">com.microsoft.identity.common.internal.logging.Logger#mAllowPii</xref> is called with true. By default the library will not return any messages with user information in them.</p>

    <p></p>
  syntax:
    content: public void setEnablePII(final boolean enablePII)
    parameters:
    - id: enablePII
      type: 4dda0764
      description: <p>True if enabling PII info to be logged, false otherwise. </p>
- uid: com.microsoft.aad.adal._logger.setExternalLogger(ILogger)
  id: setExternalLogger(ILogger)
  parent: com.microsoft.aad.adal._logger
  href: com.microsoft.aad.adal._logger.yml
  langs:
  - java
  name: setExternalLogger(ILogger externalLogger)
  nameWithType: Logger.setExternalLogger(ILogger externalLogger)
  fullName: com.microsoft.aad.adal.Logger.setExternalLogger(ILogger externalLogger)
  overload: com.microsoft.aad.adal._logger.setExternalLogger*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 92
  package: com.microsoft.aad.adal
  summary: >-
    <p>Set the custom logger. Configures external logging to configure a callback that the sdk will use to pass each log message. Overriding the logger callback is not allowed.</p>

    <p></p>
  syntax:
    content: public synchronized void setExternalLogger(ILogger externalLogger)
    parameters:
    - id: externalLogger
      type: com.microsoft.aad.adal._logger._i_logger
      description: <p>The reference to the <xref uid="com.microsoft.aad.adal._logger._i_logger" data-throw-if-not-resolved="false">ILogger</xref> that can output the logs to the designated places. </p>
    return:
      type: 5c0b90ca
- uid: com.microsoft.aad.adal._logger.setLogLevel(final LogLevel)
  id: setLogLevel(final LogLevel)
  parent: com.microsoft.aad.adal._logger
  href: com.microsoft.aad.adal._logger.yml
  langs:
  - java
  name: setLogLevel(final LogLevel logLevel)
  nameWithType: Logger.setLogLevel(final LogLevel logLevel)
  fullName: com.microsoft.aad.adal.Logger.setLogLevel(final LogLevel logLevel)
  overload: com.microsoft.aad.adal._logger.setLogLevel*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/Logger.java
    startLine: 57
  package: com.microsoft.aad.adal
  summary: >-
    <p>Set the log level for diagnostic purpose. By default, the sdk enables the verbose level logging.</p>

    <p></p>
  syntax:
    content: public void setLogLevel(final LogLevel logLevel)
    parameters:
    - id: logLevel
      type: 93de0ef9com.microsoft.aad.adal._logger._log_level
      description: <p>The <xref uid="com.microsoft.aad.adal._logger._log_level" data-throw-if-not-resolved="false">LogLevel</xref> to be enabled for the diagnostic logging. </p>
references:
- uid: com.microsoft.aad.adal._logger.getInstance*
  name: getInstance
  nameWithType: Logger.getInstance
  fullName: com.microsoft.aad.adal.Logger.getInstance
  package: com.microsoft.aad.adal
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: com.microsoft.aad.adal._logger.setCorrelationId*
  name: setCorrelationId
  nameWithType: Logger.setCorrelationId
  fullName: com.microsoft.aad.adal.Logger.setCorrelationId
  package: com.microsoft.aad.adal
- uid: 93de0ef9com.microsoft.aad.adal._logger._log_level
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.aad.adal._logger._log_level
    name: Logger.LogLevel
    fullName: com.microsoft.aad.adal.Logger.LogLevel
    href: com.microsoft.aad.adal._logger._log_level.yml
- uid: com.microsoft.aad.adal._logger.setLogLevel*
  name: setLogLevel
  nameWithType: Logger.setLogLevel
  fullName: com.microsoft.aad.adal.Logger.setLogLevel
  package: com.microsoft.aad.adal
- uid: 5c0b90ca
  spec.java:
  - name: synchronized void
    fullName: synchronized void
- uid: com.microsoft.aad.adal._logger.setExternalLogger*
  name: setExternalLogger
  nameWithType: Logger.setExternalLogger
  fullName: com.microsoft.aad.adal.Logger.setExternalLogger
  package: com.microsoft.aad.adal
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.aad.adal._logger.setAndroidLogEnabled*
  name: setAndroidLogEnabled
  nameWithType: Logger.setAndroidLogEnabled
  fullName: com.microsoft.aad.adal.Logger.setAndroidLogEnabled
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal._logger.setEnablePII*
  name: setEnablePII
  nameWithType: Logger.setEnablePII
  fullName: com.microsoft.aad.adal.Logger.setEnablePII
  package: com.microsoft.aad.adal
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.aad.adal._logger.getCorrelationId*
  name: getCorrelationId
  nameWithType: Logger.getCorrelationId
  fullName: com.microsoft.aad.adal.Logger.getCorrelationId
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal._logger
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal._logger.yml
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.aad.adal.Logger
  type: Class
  summary: '<p>Android log output can. If externalLogger is set, it will use that as well. Usage: Logger.v(tag, message, additionalMessage, errorCode) to log. Set custom logger: Logger.setExternalLogger(..); </p>'
  syntax: *o1
- uid: com.microsoft.aad.adal._logger._i_logger
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal._logger._i_logger.yml
  name: Logger.ILogger
  nameWithType: Logger.ILogger
  fullName: com.microsoft.aad.adal.Logger.ILogger
  type: Interface
  summary: <p>Interface for apps to configure the external logging. </p>
  syntax:
    content: public interface ILogger
- uid: com.microsoft.aad.adal._logger._log_level
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal._logger._log_level.yml
  name: Logger.LogLevel
  nameWithType: Logger.LogLevel
  fullName: com.microsoft.aad.adal.Logger.LogLevel
  type: Enum
  summary: <p>Enum class for LogLevel that the sdk recognizes. </p>
  syntax:
    content: public enum LogLevel
- uid: com.microsoft.aad.adal._a_d_a_l_error
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal._a_d_a_l_error.yml
  name: ADALError
  nameWithType: ADALError
  fullName: com.microsoft.aad.adal.ADALError
  type: Enum
  summary: <p>ADAL Error codes. </p>
  syntax:
    content: public enum ADALError
