### YamlMime:JavaType
uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions"
fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions"
name: "BlockBlobCommitBlockListOptions"
nameWithType: "BlockBlobCommitBlockListOptions"
summary: "Extended options that may be passed when committing a block list."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BlockBlobCommitBlockListOptions"
constructors:
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.BlockBlobCommitBlockListOptions(java.util.List<java.lang.String>)"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.BlockBlobCommitBlockListOptions(List<String> base64BlockIds)"
  name: "BlockBlobCommitBlockListOptions(List<String> base64BlockIds)"
  nameWithType: "BlockBlobCommitBlockListOptions.BlockBlobCommitBlockListOptions(List<String> base64BlockIds)"
  parameters:
  - description: "A list of base64 encode <code>String</code>s that specifies the block IDs to be committed."
    name: "base64BlockIds"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BlockBlobCommitBlockListOptions(List<String> base64BlockIds)"
methods:
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getBase64BlockIds()"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getBase64BlockIds()"
  name: "getBase64BlockIds()"
  nameWithType: "BlockBlobCommitBlockListOptions.getBase64BlockIds()"
  syntax: "public List<String> getBase64BlockIds()"
  returns:
    description: "A list of base64 encode <code>String</code>s that specifies the block IDs to be committed."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getHeaders()"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getHeaders()"
  name: "getHeaders()"
  nameWithType: "BlockBlobCommitBlockListOptions.getHeaders()"
  syntax: "public BlobHttpHeaders getHeaders()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getImmutabilityPolicy()"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getImmutabilityPolicy()"
  name: "getImmutabilityPolicy()"
  nameWithType: "BlockBlobCommitBlockListOptions.getImmutabilityPolicy()"
  syntax: "public BlobImmutabilityPolicy getImmutabilityPolicy()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobImmutabilityPolicy\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobImmutabilityPolicy?alt=com.azure.storage.blob.models.BlobImmutabilityPolicy&text=BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getMetadata()"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getMetadata()"
  name: "getMetadata()"
  nameWithType: "BlockBlobCommitBlockListOptions.getMetadata()"
  syntax: "public Map<String,String> getMetadata()"
  returns:
    description: "The metadata to associate with the blob."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getRequestConditions()"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getRequestConditions()"
  name: "getRequestConditions()"
  nameWithType: "BlockBlobCommitBlockListOptions.getRequestConditions()"
  syntax: "public BlobRequestConditions getRequestConditions()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getTags()"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getTags()"
  name: "getTags()"
  nameWithType: "BlockBlobCommitBlockListOptions.getTags()"
  syntax: "public Map<String,String> getTags()"
  returns:
    description: "The tags to associate with the blob."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getTier()"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.getTier()"
  name: "getTier()"
  nameWithType: "BlockBlobCommitBlockListOptions.getTier()"
  syntax: "public AccessTier getTier()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.isLegalHold()"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.isLegalHold()"
  name: "isLegalHold()"
  nameWithType: "BlockBlobCommitBlockListOptions.isLegalHold()"
  syntax: "public Boolean isLegalHold()"
  returns:
    description: "If a legal hold should be placed on the blob."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setHeaders(com.azure.storage.blob.models.BlobHttpHeaders)"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setHeaders(BlobHttpHeaders headers)"
  name: "setHeaders(BlobHttpHeaders headers)"
  nameWithType: "BlockBlobCommitBlockListOptions.setHeaders(BlobHttpHeaders headers)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobCommitBlockListOptions setHeaders(BlobHttpHeaders headers)"
  returns:
    description: "The updated <code>AppendBlobCreateOptions</code>"
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobCommitBlockListOptions?alt=com.azure.storage.blob.options.BlockBlobCommitBlockListOptions&text=BlockBlobCommitBlockListOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setImmutabilityPolicy(com.azure.storage.blob.models.BlobImmutabilityPolicy)"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  name: "setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  nameWithType: "BlockBlobCommitBlockListOptions.setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  summary: "Note that this parameter is only applicable to a blob within a container that has immutable storage with versioning enabled."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobImmutabilityPolicy\"></xref>"
    name: "immutabilityPolicy"
    type: "<xref href=\"com.azure.storage.blob.models.BlobImmutabilityPolicy?alt=com.azure.storage.blob.models.BlobImmutabilityPolicy&text=BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobCommitBlockListOptions setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  desc: "Note that this parameter is only applicable to a blob within a container that has immutable storage with versioning enabled."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobCommitBlockListOptions?alt=com.azure.storage.blob.options.BlockBlobCommitBlockListOptions&text=BlockBlobCommitBlockListOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setLegalHold(java.lang.Boolean)"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setLegalHold(Boolean legalHold)"
  name: "setLegalHold(Boolean legalHold)"
  nameWithType: "BlockBlobCommitBlockListOptions.setLegalHold(Boolean legalHold)"
  summary: "Note that this parameter is only applicable to a blob within a container that has immutable storage with versioning enabled."
  parameters:
  - description: "Indicates if a legal hold should be placed on the blob."
    name: "legalHold"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobCommitBlockListOptions setLegalHold(Boolean legalHold)"
  desc: "Note that this parameter is only applicable to a blob within a container that has immutable storage with versioning enabled."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobCommitBlockListOptions?alt=com.azure.storage.blob.options.BlockBlobCommitBlockListOptions&text=BlockBlobCommitBlockListOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setMetadata(Map<String,String> metadata)"
  name: "setMetadata(Map<String,String> metadata)"
  nameWithType: "BlockBlobCommitBlockListOptions.setMetadata(Map<String,String> metadata)"
  parameters:
  - description: "The metadata to associate with the blob."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BlockBlobCommitBlockListOptions setMetadata(Map<String,String> metadata)"
  returns:
    description: "The updated options"
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobCommitBlockListOptions?alt=com.azure.storage.blob.options.BlockBlobCommitBlockListOptions&text=BlockBlobCommitBlockListOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setRequestConditions(BlobRequestConditions requestConditions)"
  name: "setRequestConditions(BlobRequestConditions requestConditions)"
  nameWithType: "BlockBlobCommitBlockListOptions.setRequestConditions(BlobRequestConditions requestConditions)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobCommitBlockListOptions setRequestConditions(BlobRequestConditions requestConditions)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobCommitBlockListOptions?alt=com.azure.storage.blob.options.BlockBlobCommitBlockListOptions&text=BlockBlobCommitBlockListOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "BlockBlobCommitBlockListOptions.setTags(Map<String,String> tags)"
  parameters:
  - description: "The tags to associate with the blob."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BlockBlobCommitBlockListOptions setTags(Map<String,String> tags)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobCommitBlockListOptions?alt=com.azure.storage.blob.options.BlockBlobCommitBlockListOptions&text=BlockBlobCommitBlockListOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setTier(com.azure.storage.blob.models.AccessTier)"
  fullName: "com.azure.storage.blob.options.BlockBlobCommitBlockListOptions.setTier(AccessTier tier)"
  name: "setTier(AccessTier tier)"
  nameWithType: "BlockBlobCommitBlockListOptions.setTier(AccessTier tier)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>"
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobCommitBlockListOptions setTier(AccessTier tier)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobCommitBlockListOptions?alt=com.azure.storage.blob.options.BlockBlobCommitBlockListOptions&text=BlockBlobCommitBlockListOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Extended options that may be passed when committing a block list."
metadata: {}
package: "com.azure.storage.blob.options"
artifact: com.azure:azure-storage-blob:12.19.0
