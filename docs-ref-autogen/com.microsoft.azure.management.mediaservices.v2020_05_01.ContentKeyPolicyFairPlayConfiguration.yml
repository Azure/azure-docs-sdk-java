### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration"
name: "ContentKeyPolicyFairPlayConfiguration"
nameWithType: "ContentKeyPolicyFairPlayConfiguration"
summary: "Specifies a configuration for Fair<wbr>Play licenses."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyConfiguration?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ContentKeyPolicyFairPlayConfiguration extends ContentKeyPolicyConfiguration"
constructors:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.ContentKeyPolicyFairPlayConfiguration()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.ContentKeyPolicyFairPlayConfiguration()"
  name: "ContentKeyPolicyFairPlayConfiguration()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.ContentKeyPolicyFairPlayConfiguration()"
  syntax: "public ContentKeyPolicyFairPlayConfiguration()"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.ask()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.ask()"
  name: "ask()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.ask()"
  summary: "Get the key that must be used as Fair<wbr>Play Application Secret key."
  syntax: "public byte[] ask()"
  desc: "Get the key that must be used as FairPlay Application Secret key."
  returns:
    description: "the ask value"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.fairPlayPfx()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.fairPlayPfx()"
  name: "fairPlayPfx()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.fairPlayPfx()"
  summary: "Get the Base64 representation of Fair<wbr>Play certificate in PKCS 12 (pfx) format (including private key)."
  syntax: "public String fairPlayPfx()"
  desc: "Get the Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
  returns:
    description: "the fairPlayPfx value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.fairPlayPfxPassword()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.fairPlayPfxPassword()"
  name: "fairPlayPfxPassword()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.fairPlayPfxPassword()"
  summary: "Get the password encrypting Fair<wbr>Play certificate in PKCS 12 (pfx) format."
  syntax: "public String fairPlayPfxPassword()"
  desc: "Get the password encrypting FairPlay certificate in PKCS 12 (pfx) format."
  returns:
    description: "the fairPlayPfxPassword value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.offlineRentalConfiguration()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.offlineRentalConfiguration()"
  name: "offlineRentalConfiguration()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.offlineRentalConfiguration()"
  summary: "Get offline rental policy."
  syntax: "public ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration()"
  desc: "Get offline rental policy."
  returns:
    description: "the offlineRentalConfiguration value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayOfflineRentalConfiguration?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayOfflineRentalConfiguration&text=ContentKeyPolicyFairPlayOfflineRentalConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.rentalAndLeaseKeyType()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.rentalAndLeaseKeyType()"
  name: "rentalAndLeaseKeyType()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.rentalAndLeaseKeyType()"
  summary: "Get the rental and lease key type."
  syntax: "public ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType()"
  desc: "Get the rental and lease key type. Possible values include: 'Unknown', 'Undefined', 'DualExpiry', 'PersistentUnlimited', 'PersistentLimited'."
  returns:
    description: "the rentalAndLeaseKeyType value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayRentalAndLeaseKeyType?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayRentalAndLeaseKeyType&text=ContentKeyPolicyFairPlayRentalAndLeaseKeyType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.rentalDuration()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.rentalDuration()"
  name: "rentalDuration()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.rentalDuration()"
  summary: "Get the rental duration."
  syntax: "public long rentalDuration()"
  desc: "Get the rental duration. Must be greater than or equal to 0."
  returns:
    description: "the rentalDuration value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withAsk(byte[])"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withAsk(byte[] ask)"
  name: "withAsk(byte[] ask)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withAsk(byte[] ask)"
  summary: "Set the key that must be used as Fair<wbr>Play Application Secret key."
  parameters:
  - description: "the ask value to set"
    name: "ask"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withAsk(byte[] ask)"
  desc: "Set the key that must be used as FairPlay Application Secret key."
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withFairPlayPfx(java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withFairPlayPfx(String fairPlayPfx)"
  name: "withFairPlayPfx(String fairPlayPfx)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withFairPlayPfx(String fairPlayPfx)"
  summary: "Set the Base64 representation of Fair<wbr>Play certificate in PKCS 12 (pfx) format (including private key)."
  parameters:
  - description: "the fairPlayPfx value to set"
    name: "fairPlayPfx"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withFairPlayPfx(String fairPlayPfx)"
  desc: "Set the Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withFairPlayPfxPassword(java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withFairPlayPfxPassword(String fairPlayPfxPassword)"
  name: "withFairPlayPfxPassword(String fairPlayPfxPassword)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withFairPlayPfxPassword(String fairPlayPfxPassword)"
  summary: "Set the password encrypting Fair<wbr>Play certificate in PKCS 12 (pfx) format."
  parameters:
  - description: "the fairPlayPfxPassword value to set"
    name: "fairPlayPfxPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withFairPlayPfxPassword(String fairPlayPfxPassword)"
  desc: "Set the password encrypting FairPlay certificate in PKCS 12 (pfx) format."
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withOfflineRentalConfiguration(com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayOfflineRentalConfiguration)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withOfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration)"
  name: "withOfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withOfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration)"
  summary: "Set offline rental policy."
  parameters:
  - description: "the offlineRentalConfiguration value to set"
    name: "offlineRentalConfiguration"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayOfflineRentalConfiguration?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayOfflineRentalConfiguration&text=ContentKeyPolicyFairPlayOfflineRentalConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withOfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration)"
  desc: "Set offline rental policy."
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withRentalAndLeaseKeyType(com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayRentalAndLeaseKeyType)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType)"
  name: "withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType)"
  summary: "Set the rental and lease key type."
  parameters:
  - description: "the rentalAndLeaseKeyType value to set"
    name: "rentalAndLeaseKeyType"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayRentalAndLeaseKeyType?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayRentalAndLeaseKeyType&text=ContentKeyPolicyFairPlayRentalAndLeaseKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType)"
  desc: "Set the rental and lease key type. Possible values include: 'Unknown', 'Undefined', 'DualExpiry', 'PersistentUnlimited', 'PersistentLimited'."
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withRentalDuration(long)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration.withRentalDuration(long rentalDuration)"
  name: "withRentalDuration(long rentalDuration)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withRentalDuration(long rentalDuration)"
  summary: "Set the rental duration."
  parameters:
  - description: "the rentalDuration value to set"
    name: "rentalDuration"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withRentalDuration(long rentalDuration)"
  desc: "Set the rental duration. Must be greater than or equal to 0."
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies a configuration for FairPlay licenses."
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
