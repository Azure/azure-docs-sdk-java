### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey"
name: "DefaultKey"
nameWithType: "DefaultKey"
summary: "Class to specify properties of default content key for each encryption scheme."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **DefaultKey**"
constructors:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.DefaultKey()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.DefaultKey()"
  name: "DefaultKey()"
  nameWithType: "DefaultKey.DefaultKey()"
  syntax: "public DefaultKey()"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.label()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.label()"
  name: "label()"
  nameWithType: "DefaultKey.label()"
  summary: "Get label can be used to specify Content Key when creating a Streaming Locator."
  syntax: "public String label()"
  desc: "Get label can be used to specify Content Key when creating a Streaming Locator."
  returns:
    description: "the label value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.policyName()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.policyName()"
  name: "policyName()"
  nameWithType: "DefaultKey.policyName()"
  summary: "Get policy used by Default Key."
  syntax: "public String policyName()"
  desc: "Get policy used by Default Key."
  returns:
    description: "the policyName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.withLabel(java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.withLabel(String label)"
  name: "withLabel(String label)"
  nameWithType: "DefaultKey.withLabel(String label)"
  summary: "Set label can be used to specify Content Key when creating a Streaming Locator."
  parameters:
  - description: "the label value to set"
    name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DefaultKey withLabel(String label)"
  desc: "Set label can be used to specify Content Key when creating a Streaming Locator."
  returns:
    description: "the DefaultKey object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey&text=DefaultKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.withPolicyName(java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey.withPolicyName(String policyName)"
  name: "withPolicyName(String policyName)"
  nameWithType: "DefaultKey.withPolicyName(String policyName)"
  summary: "Set policy used by Default Key."
  parameters:
  - description: "the policyName value to set"
    name: "policyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DefaultKey withPolicyName(String policyName)"
  desc: "Set policy used by Default Key."
  returns:
    description: "the DefaultKey object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.DefaultKey&text=DefaultKey\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class to specify properties of default content key for each encryption scheme."
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
