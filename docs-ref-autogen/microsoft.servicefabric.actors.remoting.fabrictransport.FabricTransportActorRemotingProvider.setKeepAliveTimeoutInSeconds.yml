### YamlMime:JavaMember
nameWithType: FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds
type: method
members:
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  name: setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  nameWithType: FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  parameters:
  - description: <p>The keep alive timeout in seconds. </p>
    name: keepAliveTimeoutInSeconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the keep alive timeout in seconds. This settings is useful in the scenario when the client and service are connected via load balancer that closes the connection if it is idle for some time. If keep alive timeout is configured, the connection will be kept alive by sending ping messages at that interval. </p>
  syntax: public void setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long)
uid: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds*
fullName: microsoft.servicefabric.actors.remoting.fabrictransport.FabricTransportActorRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
name: setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
package: microsoft.servicefabric.actors.remoting.fabrictransport
metadata: {}
