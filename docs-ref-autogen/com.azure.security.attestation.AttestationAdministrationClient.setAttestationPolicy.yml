### YamlMime:JavaMember
uid: "com.azure.security.attestation.AttestationAdministrationClient.setAttestationPolicy*"
fullName: "com.azure.security.attestation.AttestationAdministrationClient.setAttestationPolicy"
name: "setAttestationPolicy"
nameWithType: "AttestationAdministrationClient.setAttestationPolicy"
members:
- uid: "com.azure.security.attestation.AttestationAdministrationClient.setAttestationPolicy(com.azure.security.attestation.models.AttestationType,com.azure.security.attestation.models.AttestationPolicySetOptions)"
  fullName: "com.azure.security.attestation.AttestationAdministrationClient.setAttestationPolicy(AttestationType attestationType, AttestationPolicySetOptions options)"
  name: "setAttestationPolicy(AttestationType attestationType, AttestationPolicySetOptions options)"
  nameWithType: "AttestationAdministrationClient.setAttestationPolicy(AttestationType attestationType, AttestationPolicySetOptions options)"
  summary: "Sets the attestation policy for the specified attestation type, with policy and signing key. Sets the current policy for an attestation type. Setting the attestation requires that the caller provide an <xref uid=\"com.azure.security.attestation.models.AttestationPolicySetOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationPolicySetOptions\"></xref> object which provides the options for setting the policy. There are two major components to a setPolicy request:\n\n *  The policy to set\n *  A signing key used to sign the policy sent to the service (OPTIONAL)\n\nOn Isolated mode attestation instances, the signing key MUST be one of the configured policy signing certificates.\n\n```java\nString policyToSet = \"version=1.0; authorizationrules{=> permit();}; issuancerules{};\";\n PolicyResult result = client.setAttestationPolicy(AttestationType.OPEN_ENCLAVE,\n     new AttestationPolicySetOptions()\n         .setAttestationPolicy(policyToSet)\n         .setAttestationSigner(new AttestationSigningKey(certificate, privateKey)));\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.attestation.models.AttestationType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationType\"></xref> to be updated."
    name: "attestationType"
    type: "<xref href=\"com.azure.security.attestation.models.AttestationType?alt=com.azure.security.attestation.models.AttestationType&text=AttestationType\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.security.attestation.models.AttestationPolicySetOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationPolicySetOptions\"></xref> for the request."
    name: "options"
    type: "<xref href=\"com.azure.security.attestation.models.AttestationPolicySetOptions?alt=com.azure.security.attestation.models.AttestationPolicySetOptions&text=AttestationPolicySetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyResult setAttestationPolicy(AttestationType attestationType, AttestationPolicySetOptions options)"
  returns:
    description: "<xref uid=\"com.azure.security.attestation.models.PolicyResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolicyResult\"></xref> expressing the result of the attestation operation."
    type: "<xref href=\"com.azure.security.attestation.models.PolicyResult?alt=com.azure.security.attestation.models.PolicyResult&text=PolicyResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.attestation.AttestationAdministrationClient.setAttestationPolicy(com.azure.security.attestation.models.AttestationType,java.lang.String)"
  fullName: "com.azure.security.attestation.AttestationAdministrationClient.setAttestationPolicy(AttestationType attestationType, String policyToSet)"
  name: "setAttestationPolicy(AttestationType attestationType, String policyToSet)"
  nameWithType: "AttestationAdministrationClient.setAttestationPolicy(AttestationType attestationType, String policyToSet)"
  summary: "Sets the attestation policy for the specified attestation type for an AAD mode attestation instance. Note that this function will only work on AAD mode attestation instances, because there is no key signing certificate provided. More information about Attestation Policy can be found [here.][]\n\nSet attestation policy to a constant value.\n\n```java\nString policyToSet = \"version=1.0; authorizationrules{=> permit();}; issuancerules{};\";\n PolicyResult result = client.setAttestationPolicy(AttestationType.OPEN_ENCLAVE, policyToSet);\n```\n\n\n[here.]: https://docs.microsoft.com/azure/attestation/basic-concepts#attestation-policy"
  parameters:
  - description: "The <xref uid=\"com.azure.security.attestation.models.AttestationType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AttestationType\"></xref> to be updated."
    name: "attestationType"
    type: "<xref href=\"com.azure.security.attestation.models.AttestationType?alt=com.azure.security.attestation.models.AttestationType&text=AttestationType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Attestation Policy to set on the instance."
    name: "policyToSet"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyResult setAttestationPolicy(AttestationType attestationType, String policyToSet)"
  returns:
    description: "<xref uid=\"com.azure.security.attestation.models.PolicyResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolicyResult\"></xref> expressing the result of the attestation operation."
    type: "<xref href=\"com.azure.security.attestation.models.PolicyResult?alt=com.azure.security.attestation.models.PolicyResult&text=PolicyResult\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.attestation"
artifact: com.azure:azure-security-attestation:1.1.0
