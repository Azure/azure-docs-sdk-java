### YamlMime:JavaMember
uid: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterProperties.kubernetesVersion*"
fullName: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterProperties.kubernetesVersion"
name: "kubernetesVersion"
nameWithType: "ManagedClusterProperties.kubernetesVersion"
members:
- uid: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterProperties.kubernetesVersion()"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterProperties.kubernetesVersion()"
  name: "kubernetesVersion()"
  nameWithType: "ManagedClusterProperties.kubernetesVersion()"
  summary: "Get the kubernetesVersion property: The version of Kubernetes specified by the user. Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See \\[upgrading an AKS cluster\\](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details."
  syntax: "public String kubernetesVersion()"
  returns:
    description: "the kubernetesVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.containerservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.16.0
