### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization"
fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization"
name: "FileQueryDelimitedSerialization"
nameWithType: "FileQueryDelimitedSerialization"
summary: "Defines the input or output delimited (CSV) serialization for a blob quick query request."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class FileQueryDelimitedSerialization implements FileQuerySerialization"
constructors:
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.FileQueryDelimitedSerialization()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.FileQueryDelimitedSerialization()"
  name: "FileQueryDelimitedSerialization()"
  nameWithType: "FileQueryDelimitedSerialization.FileQueryDelimitedSerialization()"
  syntax: "public FileQueryDelimitedSerialization()"
methods:
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.getColumnSeparator()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.getColumnSeparator()"
  name: "getColumnSeparator()"
  nameWithType: "FileQueryDelimitedSerialization.getColumnSeparator()"
  summary: "Gets the column separator."
  syntax: "public char getColumnSeparator()"
  desc: "Gets the column separator."
  returns:
    description: "the column separator."
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.getEscapeChar()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.getEscapeChar()"
  name: "getEscapeChar()"
  nameWithType: "FileQueryDelimitedSerialization.getEscapeChar()"
  summary: "Gets the escape character."
  syntax: "public char getEscapeChar()"
  desc: "Gets the escape character."
  returns:
    description: "the escape character."
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.getFieldQuote()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.getFieldQuote()"
  name: "getFieldQuote()"
  nameWithType: "FileQueryDelimitedSerialization.getFieldQuote()"
  summary: "Gets the field quote."
  syntax: "public char getFieldQuote()"
  desc: "Gets the field quote."
  returns:
    description: "the field quote."
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.getRecordSeparator()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.getRecordSeparator()"
  name: "getRecordSeparator()"
  nameWithType: "FileQueryDelimitedSerialization.getRecordSeparator()"
  summary: "Gets the record separator."
  syntax: "public char getRecordSeparator()"
  desc: "Gets the record separator."
  returns:
    description: "the record separator."
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.isHeadersPresent()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.isHeadersPresent()"
  name: "isHeadersPresent()"
  nameWithType: "FileQueryDelimitedSerialization.isHeadersPresent()"
  summary: "Gets whether or not headers are present."
  syntax: "public boolean isHeadersPresent()"
  desc: "Gets whether or not headers are present."
  returns:
    description: "Whether or not headers are present."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setColumnSeparator(char)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setColumnSeparator(char columnSeparator)"
  name: "setColumnSeparator(char columnSeparator)"
  nameWithType: "FileQueryDelimitedSerialization.setColumnSeparator(char columnSeparator)"
  summary: "Sets the column separator."
  parameters:
  - description: "the column separator."
    name: "columnSeparator"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryDelimitedSerialization setColumnSeparator(char columnSeparator)"
  desc: "Sets the column separator."
  returns:
    description: "the updated FileQueryDelimitedSerialization object."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization?alt=com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization&text=FileQueryDelimitedSerialization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setEscapeChar(char)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setEscapeChar(char escapeChar)"
  name: "setEscapeChar(char escapeChar)"
  nameWithType: "FileQueryDelimitedSerialization.setEscapeChar(char escapeChar)"
  summary: "Sets the escape character."
  parameters:
  - description: "the escape character."
    name: "escapeChar"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryDelimitedSerialization setEscapeChar(char escapeChar)"
  desc: "Sets the escape character."
  returns:
    description: "the updated FileQueryDelimitedSerialization object."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization?alt=com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization&text=FileQueryDelimitedSerialization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setFieldQuote(char)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setFieldQuote(char fieldQuote)"
  name: "setFieldQuote(char fieldQuote)"
  nameWithType: "FileQueryDelimitedSerialization.setFieldQuote(char fieldQuote)"
  summary: "Sets the field quote."
  parameters:
  - description: "the field quote."
    name: "fieldQuote"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryDelimitedSerialization setFieldQuote(char fieldQuote)"
  desc: "Sets the field quote."
  returns:
    description: "the updated FileQueryDelimitedSerialization object."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization?alt=com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization&text=FileQueryDelimitedSerialization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setHeadersPresent(boolean)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setHeadersPresent(boolean headersPresent)"
  name: "setHeadersPresent(boolean headersPresent)"
  nameWithType: "FileQueryDelimitedSerialization.setHeadersPresent(boolean headersPresent)"
  summary: "Sets whether or not headers are present."
  parameters:
  - description: "Whether or not headers are present."
    name: "headersPresent"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryDelimitedSerialization setHeadersPresent(boolean headersPresent)"
  desc: "Sets whether or not headers are present."
  returns:
    description: "the updated FileQueryDelimitedSerialization object."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization?alt=com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization&text=FileQueryDelimitedSerialization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setRecordSeparator(char)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization.setRecordSeparator(char recordSeparator)"
  name: "setRecordSeparator(char recordSeparator)"
  nameWithType: "FileQueryDelimitedSerialization.setRecordSeparator(char recordSeparator)"
  summary: "Sets the record separator."
  parameters:
  - description: "the record separator."
    name: "recordSeparator"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryDelimitedSerialization setRecordSeparator(char recordSeparator)"
  desc: "Sets the record separator."
  returns:
    description: "the updated FileQueryDelimitedSerialization object."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization?alt=com.azure.storage.file.datalake.models.FileQueryDelimitedSerialization&text=FileQueryDelimitedSerialization\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines the input or output delimited (CSV) serialization for a blob quick query request."
implements:
- "<xref href=\"com.azure.storage.file.datalake.models.FileQuerySerialization?alt=com.azure.storage.file.datalake.models.FileQuerySerialization&text=FileQuerySerialization\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.12.0
