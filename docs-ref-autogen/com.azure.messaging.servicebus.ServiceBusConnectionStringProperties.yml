### YamlMime:JavaType
uid: "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties"
fullName: "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties"
name: "ServiceBusConnectionStringProperties"
nameWithType: "ServiceBusConnectionStringProperties"
summary: "A utility class that parses a connection string into sections. A Service Bus connection string is a set of key value pairs separated by semi-colon. A typical example is `\"Endpoint=sb://foo.servicebus.windows.net/;SharedAccessKeyName=someKeyName;SharedAccessKey=someKeyValue\"`.\n\nA connection may have the following sections:\n\n *  Endpoint, which is mandatory. The hostname part of it is the \"Fully qualified namespace\".\n *  SharedAccessKeyName and SharedAccessKey, optional, used to authenticate the access to the ServiceBus.\n *  SharedAccessSignature, optional, an alternative way to authenticate the access to the ServiceBus.\n *  EntityPath, optional, the queue name or the topic name under the service namespace\n\nWhen you have a ServiceBus connection string, you can use <xref uid=\"com.azure.messaging.servicebus.ServiceBusClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusClientBuilder#connectionString(String)\"></xref> to build a client. If you'd like to use a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> to access a Service Bus, you can use this utility class to take the fully qualified namespace and optionally the entity path (queue/topic name) from the connection string and then use <xref uid=\"com.azure.messaging.servicebus.ServiceBusClientBuilder.credential(java.lang.String,com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusClientBuilder#credential(String, TokenCredential)\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceBusConnectionStringProperties"
methods:
- "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties.getEndpoint()"
- "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties.getEntityPath()"
- "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties.getFullyQualifiedNamespace()"
- "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties.getSharedAccessKey()"
- "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties.getSharedAccessKeyName()"
- "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties.getSharedAccessSignature()"
- "com.azure.messaging.servicebus.ServiceBusConnectionStringProperties.parse(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.messaging.servicebus"
artifact: com.azure:azure-messaging-servicebus:7.0.1
