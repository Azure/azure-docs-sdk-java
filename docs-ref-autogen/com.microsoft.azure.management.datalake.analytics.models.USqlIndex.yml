### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.columns()
  name: columns()
  nameWithType: USqlIndex.columns()
  returns:
    description: <p>the columns value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the columns value.</p>

    <p></p>
  syntax: public List<String> columns()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.columns()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.distributionInfo()
  name: distributionInfo()
  nameWithType: USqlIndex.distributionInfo()
  returns:
    description: <p>the distributionInfo value </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlDistributionInfo?alt=com.microsoft.azure.management.datalake.analytics.models.USqlDistributionInfo&text=USqlDistributionInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the distributionInfo value.</p>

    <p></p>
  syntax: public USqlDistributionInfo distributionInfo()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.distributionInfo()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.indexId()
  name: indexId()
  nameWithType: USqlIndex.indexId()
  returns:
    description: <p>the indexId value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the indexId value.</p>

    <p></p>
  syntax: public Integer indexId()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.indexId()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.indexKeys()
  name: indexKeys()
  nameWithType: USqlIndex.indexKeys()
  returns:
    description: <p>the indexKeys value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlDirectedColumn?alt=com.microsoft.azure.management.datalake.analytics.models.USqlDirectedColumn&text=USqlDirectedColumn" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the indexKeys value.</p>

    <p></p>
  syntax: public List<USqlDirectedColumn> indexKeys()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.indexKeys()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.isColumnstore()
  name: isColumnstore()
  nameWithType: USqlIndex.isColumnstore()
  returns:
    description: <p>the isColumnstore value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the isColumnstore value.</p>

    <p></p>
  syntax: public Boolean isColumnstore()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.isColumnstore()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.isUnique()
  name: isUnique()
  nameWithType: USqlIndex.isUnique()
  returns:
    description: <p>the isUnique value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the isUnique value.</p>

    <p></p>
  syntax: public Boolean isUnique()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.isUnique()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.name()
  name: name()
  nameWithType: USqlIndex.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.name()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.partitionFunction()
  name: partitionFunction()
  nameWithType: USqlIndex.partitionFunction()
  returns:
    description: <p>the partitionFunction value </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the partitionFunction value.</p>

    <p></p>
  syntax: public UUID partitionFunction()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.partitionFunction()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.partitionKeyList()
  name: partitionKeyList()
  nameWithType: USqlIndex.partitionKeyList()
  returns:
    description: <p>the partitionKeyList value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the partitionKeyList value.</p>

    <p></p>
  syntax: public List<String> partitionKeyList()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.partitionKeyList()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.streamNames()
  name: streamNames()
  nameWithType: USqlIndex.streamNames()
  returns:
    description: <p>the streamNames value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the streamNames value.</p>

    <p></p>
  syntax: public List<String> streamNames()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.streamNames()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withColumns(List<String> columns)
  name: withColumns(List<String> columns)
  nameWithType: USqlIndex.withColumns(List<String> columns)
  parameters:
  - description: <p>the columns value to set </p>
    name: columns
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the columns value.</p>

    <p></p>
  syntax: public USqlIndex withColumns(List<String> columns)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withColumns(List<String>)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withDistributionInfo(USqlDistributionInfo distributionInfo)
  name: withDistributionInfo(USqlDistributionInfo distributionInfo)
  nameWithType: USqlIndex.withDistributionInfo(USqlDistributionInfo distributionInfo)
  parameters:
  - description: <p>the distributionInfo value to set </p>
    name: distributionInfo
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlDistributionInfo?alt=com.microsoft.azure.management.datalake.analytics.models.USqlDistributionInfo&text=USqlDistributionInfo" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the distributionInfo value.</p>

    <p></p>
  syntax: public USqlIndex withDistributionInfo(USqlDistributionInfo distributionInfo)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withDistributionInfo(USqlDistributionInfo)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withIndexId(Integer indexId)
  name: withIndexId(Integer indexId)
  nameWithType: USqlIndex.withIndexId(Integer indexId)
  parameters:
  - description: <p>the indexId value to set </p>
    name: indexId
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the indexId value.</p>

    <p></p>
  syntax: public USqlIndex withIndexId(Integer indexId)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withIndexId(Integer)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withIndexKeys(List<USqlDirectedColumn> indexKeys)
  name: withIndexKeys(List<USqlDirectedColumn> indexKeys)
  nameWithType: USqlIndex.withIndexKeys(List<USqlDirectedColumn> indexKeys)
  parameters:
  - description: <p>the indexKeys value to set </p>
    name: indexKeys
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlDirectedColumn?alt=com.microsoft.azure.management.datalake.analytics.models.USqlDirectedColumn&text=USqlDirectedColumn" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the indexKeys value.</p>

    <p></p>
  syntax: public USqlIndex withIndexKeys(List<USqlDirectedColumn> indexKeys)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withIndexKeys(List<USqlDirectedColumn>)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withIsColumnstore(Boolean isColumnstore)
  name: withIsColumnstore(Boolean isColumnstore)
  nameWithType: USqlIndex.withIsColumnstore(Boolean isColumnstore)
  parameters:
  - description: <p>the isColumnstore value to set </p>
    name: isColumnstore
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the isColumnstore value.</p>

    <p></p>
  syntax: public USqlIndex withIsColumnstore(Boolean isColumnstore)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withIsColumnstore(Boolean)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withIsUnique(Boolean isUnique)
  name: withIsUnique(Boolean isUnique)
  nameWithType: USqlIndex.withIsUnique(Boolean isUnique)
  parameters:
  - description: <p>the isUnique value to set </p>
    name: isUnique
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the isUnique value.</p>

    <p></p>
  syntax: public USqlIndex withIsUnique(Boolean isUnique)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withIsUnique(Boolean)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withName(String name)
  name: withName(String name)
  nameWithType: USqlIndex.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public USqlIndex withName(String name)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withName(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withPartitionFunction(UUID partitionFunction)
  name: withPartitionFunction(UUID partitionFunction)
  nameWithType: USqlIndex.withPartitionFunction(UUID partitionFunction)
  parameters:
  - description: <p>the partitionFunction value to set </p>
    name: partitionFunction
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the partitionFunction value.</p>

    <p></p>
  syntax: public USqlIndex withPartitionFunction(UUID partitionFunction)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withPartitionFunction(UUID)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withPartitionKeyList(List<String> partitionKeyList)
  name: withPartitionKeyList(List<String> partitionKeyList)
  nameWithType: USqlIndex.withPartitionKeyList(List<String> partitionKeyList)
  parameters:
  - description: <p>the partitionKeyList value to set </p>
    name: partitionKeyList
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the partitionKeyList value.</p>

    <p></p>
  syntax: public USqlIndex withPartitionKeyList(List<String> partitionKeyList)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withPartitionKeyList(List<String>)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withStreamNames(List<String> streamNames)
  name: withStreamNames(List<String> streamNames)
  nameWithType: USqlIndex.withStreamNames(List<String> streamNames)
  parameters:
  - description: <p>the streamNames value to set </p>
    name: streamNames
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlIndex object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlIndex?alt=com.microsoft.azure.management.datalake.analytics.models.USqlIndex&text=USqlIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the streamNames value.</p>

    <p></p>
  syntax: public USqlIndex withStreamNames(List<String> streamNames)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex.withStreamNames(List<String>)
nameWithType: USqlIndex
syntax: public class USqlIndex
type: class
uid: com.microsoft.azure.management.datalake.analytics.models.USqlIndex
fullName: com.microsoft.azure.management.datalake.analytics.models.USqlIndex
name: USqlIndex
package: com.microsoft.azure.management.datalake.analytics.models
summary: <p>A Data Lake Analytics catalog U-SQL table index item. </p>
metadata: {}
