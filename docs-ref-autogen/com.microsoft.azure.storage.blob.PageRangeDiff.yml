### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff(final long start, final long end, final boolean isCleared)
  name: PageRangeDiff(final long start, final long end, final boolean isCleared)
  nameWithType: PageRangeDiff.PageRangeDiff(final long start, final long end, final boolean isCleared)
  parameters:
  - description: <p>A <code>long</code> which represents the starting offset. </p>
    name: start
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the ending offset. </p>
    name: end
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <code>True</code> if the page range is a cleared range, <code>false</code> otherwise. </p>
    name: isCleared
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class.</p>

    <p></p>
  syntax: protected PageRangeDiff(final long start, final long end, final boolean isCleared)
  uid: com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff(final long,final long,final boolean)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.blob.PageRange?alt=com.microsoft.azure.storage.blob.PageRange&text=PageRange" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.blob.PageRange.getEndOffset()
- com.microsoft.azure.storage.blob.PageRange.getStartOffset()
- com.microsoft.azure.storage.blob.PageRange.PageRange(final long,final long)
- com.microsoft.azure.storage.blob.PageRange.setEndOffset(final long)
- com.microsoft.azure.storage.blob.PageRange.setStartOffset(final long)
- com.microsoft.azure.storage.blob.PageRange.toString()
methods:
- fullName: com.microsoft.azure.storage.blob.PageRangeDiff.isCleared()
  name: isCleared()
  nameWithType: PageRangeDiff.isCleared()
  returns:
    description: >-
      <p>

        <code>True</code> if the page range is a cleared range, <code>false</code> otherwise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates whether the page range was cleared.</p>

    <p></p>
  syntax: public boolean isCleared()
  uid: com.microsoft.azure.storage.blob.PageRangeDiff.isCleared()
- fullName: com.microsoft.azure.storage.blob.PageRangeDiff.setIsCleared(final boolean isCleared)
  name: setIsCleared(final boolean isCleared)
  nameWithType: PageRangeDiff.setIsCleared(final boolean isCleared)
  parameters:
  - description: >-
      <p>

        <code>True</code> if the page range is a cleared range, <code>false</code> otherwise. </p>
    name: isCleared
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the ending offset.</p>

    <p></p>
  syntax: protected void setIsCleared(final boolean isCleared)
  uid: com.microsoft.azure.storage.blob.PageRangeDiff.setIsCleared(final boolean)
nameWithType: PageRangeDiff
syntax: public class PageRangeDiff extends PageRange
type: class
uid: com.microsoft.azure.storage.blob.PageRangeDiff
fullName: com.microsoft.azure.storage.blob.PageRangeDiff
name: PageRangeDiff
package: com.microsoft.azure.storage.blob
summary: <p>Represents a range of pages in a page blob which have changed since the previous snapshot specified. </p>
metadata: {}
