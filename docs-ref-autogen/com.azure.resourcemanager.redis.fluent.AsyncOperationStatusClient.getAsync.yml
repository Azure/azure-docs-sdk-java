### YamlMime:JavaMember
uid: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getAsync*"
fullName: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getAsync"
name: "getAsync"
nameWithType: "AsyncOperationStatusClient.getAsync"
members:
- uid: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getAsync(String location, String operationId)"
  name: "getAsync(String location, String operationId)"
  nameWithType: "AsyncOperationStatusClient.getAsync(String location, String operationId)"
  summary: "For checking the ongoing status of an operation."
  parameters:
  - description: "The location at which operation was triggered."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of asynchronous operation."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<OperationStatusInner> getAsync(String location, String operationId)"
  returns:
    description: "asynchronous operation status on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.fluent.models.OperationStatusInner?alt=com.azure.resourcemanager.redis.fluent.models.OperationStatusInner&text=OperationStatusInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.redis.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.13.0
