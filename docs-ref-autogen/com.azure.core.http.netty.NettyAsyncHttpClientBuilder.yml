### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  id: NettyAsyncHttpClientBuilder
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty
  children:
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder()
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder(reactor.netty.http.client.HttpClient)
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.build()
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.configuration(com.azure.core.util.Configuration)
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.connectionProvider(reactor.netty.resources.ConnectionProvider)
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.disableBufferCopy(boolean)
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.eventLoopGroup(io.netty.channel.EventLoopGroup)
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.nioEventLoopGroup(io.netty.channel.nio.NioEventLoopGroup)
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.port(int)
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.proxy(com.azure.core.http.ProxyOptions)
  - com.azure.core.http.netty.NettyAsyncHttpClientBuilder.wiretap(boolean)
  langs:
  - java
  name: NettyAsyncHttpClientBuilder
  nameWithType: NettyAsyncHttpClientBuilder
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  type: Class
  package: com.azure.core.http.netty
  summary: >-
    Builder class responsible for creating instances of <xref uid="" data-throw-if-not-resolved="false">NettyAsyncHttpClient</xref>.


    **Building a new HttpClient instance**


    ```java

    HttpClient client = new NettyAsyncHttpClientBuilder()
         .port(8080)
         .wiretap(true)
         .build();
    ```
  syntax:
    content: public class NettyAsyncHttpClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder()
  id: NettyAsyncHttpClientBuilder()
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: NettyAsyncHttpClientBuilder()
  nameWithType: NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder()
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder()
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder*
  type: Constructor
  package: com.azure.core.http.netty
  summary: Creates a new builder instance, where a builder is capable of generating multiple instances of <xref uid="" data-throw-if-not-resolved="false">NettyAsyncHttpClient</xref>.
  syntax:
    content: public NettyAsyncHttpClientBuilder()
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder(reactor.netty.http.client.HttpClient)
  id: NettyAsyncHttpClientBuilder(reactor.netty.http.client.HttpClient)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: NettyAsyncHttpClientBuilder(HttpClient nettyHttpClient)
  nameWithType: NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder(HttpClient nettyHttpClient)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder(HttpClient nettyHttpClient)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder*
  type: Constructor
  package: com.azure.core.http.netty
  summary: >-
    Creates a new builder instance, where a builder is capable of generating multiple instances of <xref uid="" data-throw-if-not-resolved="false">NettyAsyncHttpClient</xref> based on the provided reactor netty HttpClient.


    ```java

    // Creates a reactor-netty client with netty logging enabled.
     reactor.netty.http.client.HttpClient baseHttpClient = reactor.netty.http.client.HttpClient.create()
         .tcpConfiguration(tcp -> tcp.bootstrap(b -> b.handler(new LoggingHandler(LogLevel.INFO))));
     // Create an HttpClient based on above reactor-netty client and configure EventLoop count.
     HttpClient client = new NettyAsyncHttpClientBuilder(baseHttpClient)
         .eventLoopGroup(new NioEventLoopGroup(5))
         .build();
    ```
  syntax:
    content: public NettyAsyncHttpClientBuilder(HttpClient nettyHttpClient)
    parameters:
    - id: nettyHttpClient
      type: reactor.netty.http.client.HttpClient
      description: base reactor netty HttpClient
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.build()
  id: build()
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: build()
  nameWithType: NettyAsyncHttpClientBuilder.build()
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.build()
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.build*
  type: Method
  package: com.azure.core.http.netty
  summary: Creates a new Netty-backed <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">com.azure.core.http.HttpClient</xref> instance on every call, using the configuration set in the builder at the time of the build method call.
  syntax:
    content: public HttpClient build()
    return:
      type: com.azure.core.http.HttpClient
      description: A new Netty-backed <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">com.azure.core.http.HttpClient</xref> instance.
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.configuration(com.azure.core.util.Configuration)
  id: configuration(com.azure.core.util.Configuration)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: NettyAsyncHttpClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.configuration(Configuration configuration)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.configuration*
  type: Method
  package: com.azure.core.http.netty
  summary: >-
    Sets the configuration store that is used during construction of the HTTP client.


    The default configuration store is a clone of the <xref uid="Configuration#getGlobalConfiguration()" data-throw-if-not-resolved="false">global
     configuration store</xref>, use <xref uid="com.azure.core.util.Configuration.NONE" data-throw-if-not-resolved="false">Configuration#NONE</xref> to bypass using configuration settings during construction.
  syntax:
    content: public NettyAsyncHttpClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.Configuration
      description: The configuration store used to
    return:
      type: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
      description: The updated NettyAsyncHttpClientBuilder object.
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.connectionProvider(reactor.netty.resources.ConnectionProvider)
  id: connectionProvider(reactor.netty.resources.ConnectionProvider)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: connectionProvider(ConnectionProvider connectionProvider)
  nameWithType: NettyAsyncHttpClientBuilder.connectionProvider(ConnectionProvider connectionProvider)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.connectionProvider(ConnectionProvider connectionProvider)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.connectionProvider*
  type: Method
  package: com.azure.core.http.netty
  summary: Sets the connection provider.
  syntax:
    content: public NettyAsyncHttpClientBuilder connectionProvider(ConnectionProvider connectionProvider)
    parameters:
    - id: connectionProvider
      type: reactor.netty.resources.ConnectionProvider
      description: the connection provider
    return:
      type: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
      description: the updated <xref uid="com.azure.core.http.netty.NettyAsyncHttpClientBuilder" data-throw-if-not-resolved="false">NettyAsyncHttpClientBuilder</xref> object.
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.disableBufferCopy(boolean)
  id: disableBufferCopy(boolean)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: disableBufferCopy(boolean disableBufferCopy)
  nameWithType: NettyAsyncHttpClientBuilder.disableBufferCopy(boolean disableBufferCopy)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.disableBufferCopy(boolean disableBufferCopy)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.disableBufferCopy*
  type: Method
  package: com.azure.core.http.netty
  summary: "Disables deep copy of response <xref uid=\"\" data-throw-if-not-resolved=\"false\">ByteBuffer</xref> into a heap location that is managed by this client as opposed to the underlying netty library which may use direct buffer pool.\n **Caution: Disabling this is not recommended as it can lead to data corruption if the downstream consumers of the response do not handle the byte buffers before netty releases them.**  If copy is disabled, underlying Netty layer can potentially reclaim byte array backed by the `ByteBuffer` upon the return of `onNext()`. So, users should ensure they process the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ByteBuffer</xref> immediately and then return.\n\n```java\nHttpClient client = new NettyAsyncHttpClientBuilder()\n     .port(8080)\n     .disableBufferCopy(true)\n     .build();\n \n client.send(httpRequest)\n     .flatMapMany(response -> response.getBody())\n     .map(byteBuffer -> completeProcessingByteBuffer(byteBuffer))\n     .subscribe();\n```"
  syntax:
    content: public NettyAsyncHttpClientBuilder disableBufferCopy(boolean disableBufferCopy)
    parameters:
    - id: disableBufferCopy
      type: boolean
      description: >-
        If set to <code>true</code>, the client built from this builder will not deep-copy
         response <xref uid="" data-throw-if-not-resolved="false">ByteBuffers</xref>.
    return:
      type: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
      description: The updated <xref uid="com.azure.core.http.netty.NettyAsyncHttpClientBuilder" data-throw-if-not-resolved="false">NettyAsyncHttpClientBuilder</xref> object.
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.eventLoopGroup(io.netty.channel.EventLoopGroup)
  id: eventLoopGroup(io.netty.channel.EventLoopGroup)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: eventLoopGroup(EventLoopGroup eventLoopGroup)
  nameWithType: NettyAsyncHttpClientBuilder.eventLoopGroup(EventLoopGroup eventLoopGroup)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.eventLoopGroup(EventLoopGroup eventLoopGroup)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.eventLoopGroup*
  type: Method
  package: com.azure.core.http.netty
  summary: >-
    Sets the IO event loop group that will be used to run IO loops.


    **Code Samples**


    ```java

    int threadCount = 5;
     HttpClient client = new NettyAsyncHttpClientBuilder()
         .eventLoopGroup(new NioEventLoopGroup(threadCount))
         .build();
    ```
  syntax:
    content: public NettyAsyncHttpClientBuilder eventLoopGroup(EventLoopGroup eventLoopGroup)
    parameters:
    - id: eventLoopGroup
      type: io.netty.channel.EventLoopGroup
      description: The <xref uid="io.netty.channel.EventLoopGroup" data-throw-if-not-resolved="false">EventLoopGroup</xref> that will run IO loops.
    return:
      type: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
      description: the updated NettyAsyncHttpClientBuilder object.
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.nioEventLoopGroup(io.netty.channel.nio.NioEventLoopGroup)
  id: nioEventLoopGroup(io.netty.channel.nio.NioEventLoopGroup)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: nioEventLoopGroup(NioEventLoopGroup nioEventLoopGroup)
  nameWithType: NettyAsyncHttpClientBuilder.nioEventLoopGroup(NioEventLoopGroup nioEventLoopGroup)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.nioEventLoopGroup(NioEventLoopGroup nioEventLoopGroup)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.nioEventLoopGroup*
  type: Method
  package: com.azure.core.http.netty
  summary: Sets the NIO event loop group that will be used to run IO loops.
  syntax:
    content: public NettyAsyncHttpClientBuilder nioEventLoopGroup(NioEventLoopGroup nioEventLoopGroup)
    parameters:
    - id: nioEventLoopGroup
      type: io.netty.channel.nio.NioEventLoopGroup
      description: The <xref uid="io.netty.channel.nio.NioEventLoopGroup" data-throw-if-not-resolved="false">NioEventLoopGroup</xref> that will run IO loops.
    return:
      type: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
      description: the updated NettyAsyncHttpClientBuilder object.
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.port(int)
  id: port(int)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: port(int port)
  nameWithType: NettyAsyncHttpClientBuilder.port(int port)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.port(int port)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.port*
  type: Method
  package: com.azure.core.http.netty
  summary: Sets the port which this client should connect, which by default will be set to port 80.
  syntax:
    content: public NettyAsyncHttpClientBuilder port(int port)
    parameters:
    - id: port
      type: int
      description: The port to connect to.
    return:
      type: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
      description: the updated NettyAsyncHttpClientBuilder object.
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.proxy(com.azure.core.http.ProxyOptions)
  id: proxy(com.azure.core.http.ProxyOptions)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: proxy(ProxyOptions proxyOptions)
  nameWithType: NettyAsyncHttpClientBuilder.proxy(ProxyOptions proxyOptions)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.proxy(ProxyOptions proxyOptions)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.proxy*
  type: Method
  package: com.azure.core.http.netty
  summary: Sets the <xref uid="com.azure.core.http.ProxyOptions" data-throw-if-not-resolved="false">proxy options</xref> that the client will use.
  syntax:
    content: public NettyAsyncHttpClientBuilder proxy(ProxyOptions proxyOptions)
    parameters:
    - id: proxyOptions
      type: com.azure.core.http.ProxyOptions
      description: The proxy configuration to use.
    return:
      type: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
      description: the updated NettyAsyncHttpClientBuilder object.
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.wiretap(boolean)
  id: wiretap(boolean)
  artifact: com.azure:azure-core-http-netty:1.5.1
  parent: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
  langs:
  - java
  name: wiretap(boolean enableWiretap)
  nameWithType: NettyAsyncHttpClientBuilder.wiretap(boolean enableWiretap)
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.wiretap(boolean enableWiretap)
  overload: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.wiretap*
  type: Method
  package: com.azure.core.http.netty
  summary: Enables the Netty wiretap feature.
  syntax:
    content: public NettyAsyncHttpClientBuilder wiretap(boolean enableWiretap)
    parameters:
    - id: enableWiretap
      type: boolean
      description: Flag indicating wiretap status
    return:
      type: com.azure.core.http.netty.NettyAsyncHttpClientBuilder
      description: the updated NettyAsyncHttpClientBuilder object.
references:
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder*
  name: NettyAsyncHttpClientBuilder
  nameWithType: NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.NettyAsyncHttpClientBuilder
  package: com.azure.core.http.netty
- uid: reactor.netty.http.client.HttpClient
  spec.java:
  - uid: reactor.netty.http.client.HttpClient
    name: HttpClient
    fullName: reactor.netty.http.client.HttpClient
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.build*
  name: build
  nameWithType: NettyAsyncHttpClientBuilder.build
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.build
  package: com.azure.core.http.netty
- uid: reactor.netty.resources.ConnectionProvider
  spec.java:
  - uid: reactor.netty.resources.ConnectionProvider
    name: ConnectionProvider
    fullName: reactor.netty.resources.ConnectionProvider
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.connectionProvider*
  name: connectionProvider
  nameWithType: NettyAsyncHttpClientBuilder.connectionProvider
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.connectionProvider
  package: com.azure.core.http.netty
- uid: com.azure.core.http.ProxyOptions
  spec.java:
  - uid: com.azure.core.http.ProxyOptions
    name: ProxyOptions
    fullName: com.azure.core.http.ProxyOptions
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.proxy*
  name: proxy
  nameWithType: NettyAsyncHttpClientBuilder.proxy
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.proxy
  package: com.azure.core.http.netty
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.wiretap*
  name: wiretap
  nameWithType: NettyAsyncHttpClientBuilder.wiretap
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.wiretap
  package: com.azure.core.http.netty
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.port*
  name: port
  nameWithType: NettyAsyncHttpClientBuilder.port
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.port
  package: com.azure.core.http.netty
- uid: io.netty.channel.nio.NioEventLoopGroup
  spec.java:
  - uid: io.netty.channel.nio.NioEventLoopGroup
    name: NioEventLoopGroup
    fullName: io.netty.channel.nio.NioEventLoopGroup
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.nioEventLoopGroup*
  name: nioEventLoopGroup
  nameWithType: NettyAsyncHttpClientBuilder.nioEventLoopGroup
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.nioEventLoopGroup
  package: com.azure.core.http.netty
- uid: io.netty.channel.EventLoopGroup
  spec.java:
  - uid: io.netty.channel.EventLoopGroup
    name: EventLoopGroup
    fullName: io.netty.channel.EventLoopGroup
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.eventLoopGroup*
  name: eventLoopGroup
  nameWithType: NettyAsyncHttpClientBuilder.eventLoopGroup
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.eventLoopGroup
  package: com.azure.core.http.netty
- uid: com.azure.core.util.Configuration
  spec.java:
  - uid: com.azure.core.util.Configuration
    name: Configuration
    fullName: com.azure.core.util.Configuration
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.configuration*
  name: configuration
  nameWithType: NettyAsyncHttpClientBuilder.configuration
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.configuration
  package: com.azure.core.http.netty
- uid: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.disableBufferCopy*
  name: disableBufferCopy
  nameWithType: NettyAsyncHttpClientBuilder.disableBufferCopy
  fullName: com.azure.core.http.netty.NettyAsyncHttpClientBuilder.disableBufferCopy
  package: com.azure.core.http.netty
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
