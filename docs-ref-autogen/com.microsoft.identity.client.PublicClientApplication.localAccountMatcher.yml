### YamlMime:JavaMember
nameWithType: PublicClientApplication.localAccountMatcher
type: field
members:
- fullName: com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
  name: localAccountMatcher
  nameWithType: PublicClientApplication.localAccountMatcher
  returns:
    type: <xref href="com.microsoft.identity.client.PublicClientApplication.AccountMatcher?alt=com.microsoft.identity.client.PublicClientApplication.AccountMatcher&text=PublicClientApplication.AccountMatcher" data-throw-if-not-resolved="False"/>
  syntax: "protected AccountMatcher localAccountMatcher= new AccountMatcher() {\n        @Override\n        boolean matches(@NonNull final String localAccountId,\n                        @NonNull final IAccount account) {\n            \n            if (localAccountId.contains(account.getId())) {\n                return true;\n            } else if (account instanceof MultiTenantAccount) {\n                \n                final MultiTenantAccount multiTenantAccount = (MultiTenantAccount) account;\n                final Map<String, ITenantProfile> tenantProfiles = multiTenantAccount.getTenantProfiles();\n\n                if (null != tenantProfiles && !tenantProfiles.isEmpty()) {\n                    for (final Map.Entry<String, ITenantProfile> profileEntry : tenantProfiles.entrySet()) {\n                        if (!TextUtils.isEmpty(profileEntry.getValue().getId()) &&\n                                localAccountId.contains(profileEntry.getValue().getId())) {\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }"
  uid: com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
uid: com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
fullName: com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
name: localAccountMatcher
package: com.microsoft.identity.client
metadata: {}
