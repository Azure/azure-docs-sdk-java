items:
- uid: system.fabric._service_partition_status
  id: _service_partition_status
  parent: system.fabric
  children:
  - system.fabric._service_partition_status.DELETING()
  - system.fabric._service_partition_status.getValue()
  - system.fabric._service_partition_status.IN_QUORUM_LOSS()
  - system.fabric._service_partition_status.INVALID()
  - system.fabric._service_partition_status.NOT_READY()
  - system.fabric._service_partition_status.READY()
  - system.fabric._service_partition_status.RECONFIGURING()
  href: system.fabric._service_partition_status.yml
  langs:
  - java
  name: ServicePartitionStatus
  nameWithType: ServicePartitionStatus
  fullName: system.fabric.ServicePartitionStatus
  type: Enum
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
    startLine: 6
  package: system.fabric
  summary: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public enum ServicePartitionStatus
  inheritance:
  - java.lang.Object
  - java.lang.Enum<ServicePartitionStatus>
- uid: system.fabric._service_partition_status.DELETING()
  id: DELETING()
  parent: system.fabric._service_partition_status
  href: system.fabric._service_partition_status.yml
  langs:
  - java
  name: DELETING
  nameWithType: ServicePartitionStatus.DELETING
  fullName: system.fabric.ServicePartitionStatus.DELETING
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
    startLine: 34
  package: system.fabric
  summary: <p>Partition is getting deleted. </p>
  syntax:
    content: public DELETING=(5)
- uid: system.fabric._service_partition_status.getValue()
  id: getValue()
  parent: system.fabric._service_partition_status
  href: system.fabric._service_partition_status.yml
  langs:
  - java
  name: getValue()
  nameWithType: ServicePartitionStatus.getValue()
  fullName: int system.fabric.ServicePartitionStatus.getValue()
  overload: system.fabric._service_partition_status.getValue*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
    startLine: 42
  package: system.fabric
  syntax:
    content: public int getValue()
    return:
      type: f75371fa
- uid: system.fabric._service_partition_status.IN_QUORUM_LOSS()
  id: IN_QUORUM_LOSS()
  parent: system.fabric._service_partition_status
  href: system.fabric._service_partition_status.yml
  langs:
  - java
  name: IN_QUORUM_LOSS
  nameWithType: ServicePartitionStatus.IN_QUORUM_LOSS
  fullName: system.fabric.ServicePartitionStatus.IN_QUORUM_LOSS
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
    startLine: 26
  package: system.fabric
  summary: <p>Partition is in quorum loss. This means that less than MinReplicaSetSize number of replicas are participating in quorum. </p>
  syntax:
    content: public IN_QUORUM_LOSS=(3)
- uid: system.fabric._service_partition_status.INVALID()
  id: INVALID()
  parent: system.fabric._service_partition_status
  href: system.fabric._service_partition_status.yml
  langs:
  - java
  name: INVALID
  nameWithType: ServicePartitionStatus.INVALID
  fullName: system.fabric.ServicePartitionStatus.INVALID
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
    startLine: 11
  package: system.fabric
  summary: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public INVALID=(0)
- uid: system.fabric._service_partition_status.NOT_READY()
  id: NOT_READY()
  parent: system.fabric._service_partition_status
  href: system.fabric._service_partition_status.yml
  langs:
  - java
  name: NOT_READY
  nameWithType: ServicePartitionStatus.NOT_READY
  fullName: system.fabric.ServicePartitionStatus.NOT_READY
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
    startLine: 21
  package: system.fabric
  summary: <p>Partition is not ready. This is returned when none of the other states apply. </p>
  syntax:
    content: public NOT_READY=(2)
- uid: system.fabric._service_partition_status.READY()
  id: READY()
  parent: system.fabric._service_partition_status
  href: system.fabric._service_partition_status.yml
  langs:
  - java
  name: READY
  nameWithType: ServicePartitionStatus.READY
  fullName: system.fabric.ServicePartitionStatus.READY
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
    startLine: 17
  package: system.fabric
  summary: <p>Partition is ready. For stateless services there is one up replica For stateful services the number of ready replicas is greater than or equal to the <xref href="system.fabric._stateful_service_description.getMinReplicaSetSize()" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public READY=(1)
- uid: system.fabric._service_partition_status.RECONFIGURING()
  id: RECONFIGURING()
  parent: system.fabric._service_partition_status
  href: system.fabric._service_partition_status.yml
  langs:
  - java
  name: RECONFIGURING
  nameWithType: ServicePartitionStatus.RECONFIGURING
  fullName: system.fabric.ServicePartitionStatus.RECONFIGURING
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
    startLine: 30
  package: system.fabric
  summary: <p>Partition is undergoing a reconfiguration. </p>
  syntax:
    content: public RECONFIGURING=(4)
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: system.fabric._service_partition_status.getValue*
  name: getValue
  nameWithType: ServicePartitionStatus.getValue
  fullName: int system.fabric.ServicePartitionStatus.getValue
  package: system.fabric
- uid: system.fabric._stateful_service_description.getMinReplicaSetSize()
  parent: system.fabric._stateful_service_description
  href: system.fabric._stateful_service_description.yml
  name: getMinReplicaSetSize()
  nameWithType: StatefulServiceDescription.getMinReplicaSetSize()
  fullName: long system.fabric.StatefulServiceDescription.getMinReplicaSetSize()
  type: Method
  summary: >-
    <p>Gets the minimum allowed replica set size for this service.</p>

    <p>

      <bold>Remarks:</bold>Defines the minimum number of replicas that Service Fabric will keep in its view of the Replica Set for a given partition. For example, if the <ref refid="" kindref="compound">system.fabric.StatefulServiceDescription#targetReplicaSetSize</ref> is set to five (5) then normally (without failures) there will be five replicas in the view of the replica set. However this number will decrease during failures. The <ref refid="" kindref="compound">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref> defines the minimum number of replicas in the view, so for example if the <ref refid="" kindref="compound">system.fabric.StatefulServiceDescription#targetReplicaSetSize</ref> is five and the <ref refid="" kindref="compound">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref> is three, then even if there are three concurrent failures (resulting in only two remaining replicas running) will still have three replicas in its view of the replica set (two up and one down). Since uses majority quorum of the number of replicas maintained in this view, majority quorum of the <ref refid="" kindref="compound">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref> is minimum level of reliability of any operation: in the prior example, with Target = 5 and Min = 3, with 3 concurrent failures, there are two remaining up replicas (and one down), and the majority quorum of 3 (the <ref refid="" kindref="compound">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref>) is 2. This means that the primary will continue to be able to replicate operations AND that the remaining secondary replica MUST apply the operation in order for the replica set (partition) to make progress. If the total number of replicas drops below the majority quorum of the <ref refid="" kindref="compound">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref> then further writes will be disallowed. </p>
  syntax:
    content: public long getMinReplicaSetSize()
    return:
      type: 0364520f
      description: <p>The minimum allowed replica set size for this service. </p>
