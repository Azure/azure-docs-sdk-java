### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates"
name: "X509Certificates"
nameWithType: "X509Certificates"
summary: "Representation of a single Device Provisioning Service X509 Primary and Secondary Certificate."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class X509Certificates"
constructors:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.X509Certificates(com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.X509Certificates(X509Certificates x509Certificates)"
  name: "X509Certificates(X509Certificates x509Certificates)"
  nameWithType: "X509Certificates.X509Certificates(X509Certificates x509Certificates)"
  summary: "Constructor \\[COPY\\]"
  parameters:
  - description: "the original <code>X509Certificates</code> to copy."
    name: "x509Certificates"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates&text=X509Certificates\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public X509Certificates(X509Certificates x509Certificates)"
  desc: "Constructor \\[COPY\\]\n\nCreates a new instance of the x509Certificates copping the content of the provided one."
methods:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getPrimary()"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getPrimary()"
  name: "getPrimary()"
  nameWithType: "X509Certificates.getPrimary()"
  summary: "Getter for the primary."
  deprecatedTag: "as of provisioning-service-client version 1.3.3, please use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getPrimaryFinal()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getPrimaryFinal()\"></xref>"
  syntax: "@Deprecated\npublic X509CertificateWithInfo getPrimary()"
  desc: "Getter for the primary."
  hasDeprecatedTag: true
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509CertificateWithInfo\"></xref> with the stored primary. It cannot be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo&text=X509CertificateWithInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getPrimaryFinal()"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getPrimaryFinal()"
  name: "getPrimaryFinal()"
  nameWithType: "X509Certificates.getPrimaryFinal()"
  summary: "Getter for the primary."
  modifiers:
  - "final"
  syntax: "public final X509CertificateWithInfo getPrimaryFinal()"
  desc: "Getter for the primary."
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509CertificateWithInfo\"></xref> with the stored primary. It cannot be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo&text=X509CertificateWithInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getSecondary()"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getSecondary()"
  name: "getSecondary()"
  nameWithType: "X509Certificates.getSecondary()"
  summary: "Getter for the secondary."
  deprecatedTag: "as of provisioning-service-client version 1.3.3, please use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getSecondaryFinal()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getSecondaryFinal()\"></xref>"
  syntax: "@Deprecated\npublic X509CertificateWithInfo getSecondary()"
  desc: "Getter for the secondary."
  hasDeprecatedTag: true
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509CertificateWithInfo\"></xref> with the stored secondary. It can be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo&text=X509CertificateWithInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getSecondaryFinal()"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getSecondaryFinal()"
  name: "getSecondaryFinal()"
  nameWithType: "X509Certificates.getSecondaryFinal()"
  summary: "Getter for the secondary."
  modifiers:
  - "final"
  syntax: "public final X509CertificateWithInfo getSecondaryFinal()"
  desc: "Getter for the secondary."
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509CertificateWithInfo\"></xref> with the stored secondary. It can be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo&text=X509CertificateWithInfo\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Representation of a single Device Provisioning Service X509 Primary and Secondary Certificate.\n\nthis class creates a representation of an X509 certificate. It can receive primary and secondary certificate, but only the primary is mandatory.\n\nUsers must provide the certificate as a `String`, from a **.pem** files. This class will encapsulate both in a single <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509Attestation\"></xref>. The following JSON is an example of the result of this class.\n\n```java\n{\n      \"primary\": {\n          \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"-----END CERTIFICATE-----\\n\"\n      },\n      \"secondary\": {\n          \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n                         \"-----END CERTIFICATE-----\\n\"\n      }\n  }\n```\n\nAfter send an X509 certificate with success, the provisioning service will return the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509CertificateInfo\"></xref> for both primary and secondary certificate. User can get these info from this class, and once again, only the primary info is mandatory. The following JSON is an example what info the provisioning service will return for X509.\n\n```java\n{\n      \"primary\": {\n          \"info\": {\n               \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n               \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n               \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n               \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n               \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n               \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n               \"serialNumber\": \"000000000000000000\",\n               \"version\": 3\n           }\n      },\n      \"secondary\": {\n          \"info\": {\n               \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n               \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n               \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n               \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n               \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n               \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n               \"serialNumber\": \"000000000000000000\",\n               \"version\": 3\n           }\n      }\n  }\n```"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service.configs"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
